{"status":"1","message":"OK","result":[{"SourceCode":"/* Token lock contract for YF Gamma Staking tokens \r\n*/\r\npragma solidity 0.6.0;\r\n\r\nlibrary SafeMath {\r\n  /**\r\n  * @dev Multiplies two unsigned integers, reverts on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n    \r\n    uint256 c = a * b;\r\n\r\n    require(c / a == b);\r\n    return c;\r\n  }\r\n\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two unsigned integers, reverts on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function transfer(address to, uint value) external  returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\r\n}\r\n\r\n/*\r\n *    Lock YF Gamma Tokens and create lock contract\r\n */\r\ncontract YFGMTokenLock {\r\n\r\n    // Safemath Liberary\r\n    using SafeMath for uint256;\r\n\r\n    // Unlock token duration\r\n    uint256 public unlockTwoDate;\r\n    uint256 public unlockOneDate;\r\n\r\n    // Grouping token owner\r\n    uint256 public YFGMLockOne;\r\n    uint256 public YFGMLockTwo;\r\n    address public owner;\r\n    ERC20 public YFGMToken;\r\n\r\n    //\r\n    constructor(address _wallet) public {\r\n        owner = msg.sender; \r\n        YFGMToken = ERC20(_wallet);\r\n    }\r\n\r\n    // Lock 10000 YFGM for 21 days\r\n    function LockOneTokens (address _from, uint _amount) public {\r\n        require(_from == owner);\r\n        require(YFGMToken.balanceOf(_from) >= _amount);\r\n        YFGMLockOne = _amount;\r\n        unlockOneDate = now;\r\n        YFGMToken.transferFrom(owner, address(this), _amount);\r\n    }\r\n\r\n    // Lock 1000 YFGM for 21 days\r\n    function LockTwoTokens (address _from, uint256 _amount) public {\r\n        require(_from == owner);\r\n        require(YFGMToken.balanceOf(_from) >= _amount);\r\n        YFGMLockTwo = _amount;\r\n        unlockTwoDate = now;\r\n        YFGMToken.transferFrom(owner, address(this), _amount);\r\n    }\r\n\r\n    function withdrawOneTokens(address _to, uint256 _amount) public {\r\n        require(_to == owner);\r\n        require(_amount <= YFGMLockOne);\r\n        require(now.sub(unlockOneDate) >= 21 days);\r\n        YFGMLockOne = YFGMLockOne.sub(_amount);\r\n        YFGMToken.transfer(_to, _amount);\r\n    }\r\n\r\n    function withdrawTwoTokens(address _to, uint256 _amount) public {\r\n        require(_to == owner);\r\n        require(_amount <= YFGMLockTwo);\r\n        require(now.sub(unlockTwoDate) >= 21 days);\r\n        YFGMLockTwo = YFGMLockTwo.sub(_amount);\r\n        YFGMToken.transfer(_to, _amount);\r\n    }\r\n\r\n    function balanceOf() public view returns (uint256) {\r\n        return YFGMLockOne.add(YFGMLockTwo);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LockOneTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LockTwoTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"YFGMLockOne\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"YFGMLockTwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"YFGMToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockOneDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTwoDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawOneTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTwoTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"YFGMTokenLock","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a09bb90f26ea2e3caa3c74aea7b6b5b8a13a23d7","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://22836b9db340261e6bd8d42a79d8400428150c2d28a18d52a4286a0f7c24707b"}]}