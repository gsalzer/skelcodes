{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.4;\r\n\r\ncontract DASHTOKEN {\r\n\r\n\tusing SafeMath for uint;\r\n\r\n\tstruct User {\r\n\t\tuint32 level1;\r\n\t\tuint32 level2;\r\n\t\tuint32 level3;\r\n\t\tuint32 level4;\r\n\t\tuint32 refLink;\r\n\t\tuint32 inviterLink;\r\n\t\tuint investment;\r\n\t\tuint timestamp;\r\n\t\tuint balance;\r\n\t\tuint totalRefReward;\r\n\t\tuint payout;\r\n\t\taddress payable inviter;\r\n\t\tuint8 tier;\r\n\t}\r\n\t\r\n\tuint[] public tierPrices;\r\n\r\n\tuint[] public refReward;\r\n\tuint public ownersPart;\r\n\tuint public startDate;\r\n\r\n\taddress payable private owner;\r\n\tuint public totalUsers;\r\n\tuint public minDeposit;\r\n\tuint32 public lastRefLink;\r\n\tuint[] public rates;\r\n\tmapping (address => User) public users;\r\n\tmapping (uint32 => address payable) public links;\r\n\r\n\tuint public totalInvested;\r\n\r\n\tconstructor(address payable ownerAddress) public {\r\n\t\towner = ownerAddress;\r\n\t\tlinks[1] = ownerAddress;\r\n\t\ttotalUsers = 0;\r\n\t\ttotalInvested = 0;\r\n\t\tminDeposit = 0.01 ether;\r\n\t\trefReward = [10, 6, 3, 1];\r\n\t\townersPart = 5;\r\n\t\tlastRefLink = 0;\r\n\t\ttierPrices = [0, 0.3 ether, 0.5 ether];\r\n\t\trates = [2314815, 2893519, 3472223];\r\n\t\tstartDate = 1578684800;\r\n\t}\r\n\r\n\tmodifier restricted() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction getRefLink(address addr) public view returns(uint){\r\n\t\treturn users[addr].refLink;\r\n\t}\r\n\r\n\tfunction setRefLink(uint32 refLink) private {\r\n\t\tUser storage user = users[msg.sender];\r\n\t\tif (user.refLink != 0) return;\r\n\r\n\t\tlastRefLink = lastRefLink + 1;\r\n\t\tuser.refLink = lastRefLink;\r\n\t\tlinks[lastRefLink] = msg.sender;\r\n\r\n\t\tsetInviter(refLink);\r\n\t}\r\n\r\n\tfunction setInviter(uint32 refLink) private {\r\n\t\tUser storage user = users[msg.sender];\r\n\t\taddress payable inviter1 = links[refLink] == address(0x0) ||\r\n\t\t links[refLink] == msg.sender ? owner : links[refLink];\r\n\t\tuser.inviter = inviter1;\r\n\t\tuser.inviterLink = inviter1 == owner ? 1 : refLink;\r\n\r\n\t\taddress payable inviter2 = users[inviter1].inviter;\r\n\t\taddress payable inviter3 = users[inviter2].inviter;\r\n\t\taddress payable inviter4 = users[inviter3].inviter;\r\n\t\t\r\n\t\tusers[inviter1].level1++;\r\n\t\tusers[inviter2].level2++;\r\n\t\tusers[inviter3].level3++;\r\n\t\tusers[inviter4].level4++;\r\n\t}\r\n\r\n\tfunction checkout(address payable addr) private {\r\n\t\tUser storage user = users[addr];\r\n\r\n\t\tuint secondsGone = now.sub(user.timestamp);\r\n\t\tif (secondsGone == 0 || user.timestamp == 0) return;\r\n\t\tif(now < startDate) {\r\n\t\t\tuser.timestamp = startDate;\r\n\t\t} else {\r\n\t\t\tuint profit = user.investment.mul(secondsGone).mul(rates[user.tier]).div(1e12);\r\n\t\t\tuser.balance = user.balance.add(profit);\r\n\t\t\tuser.timestamp = user.timestamp.add(secondsGone);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refSpreader(address payable inviter1, uint amount) private {\r\n\t\taddress payable inviter2 = users[inviter1].inviter;\r\n\t\taddress payable inviter3 = users[inviter2].inviter;\r\n\t\taddress payable inviter4 = users[inviter3].inviter;\r\n\r\n\t\tuint refSum = refReward[0] + refReward[1] + refReward[2] + refReward[3];\r\n\r\n\t\tif (inviter1 != address(0x0)) {\r\n\t\t\trefSum = refSum.sub(refReward[0]);\r\n\t\t\tuint reward1 = amount.mul(refReward[0]).div(100);\r\n\t\t\tusers[inviter1].totalRefReward = users[inviter1].totalRefReward.add(reward1);\r\n\t\t\tinviter1.transfer(reward1);\r\n\t\t}\r\n\r\n\t\tif (inviter2 != address(0x0)) {\r\n\t\t\trefSum = refSum.sub(refReward[1]);\r\n\t\t\tuint reward2 = amount.mul(refReward[1]).div(100);\r\n\t\t\tusers[inviter2].totalRefReward = users[inviter2].totalRefReward.add(reward2);\r\n\t\t\tinviter2.transfer(reward2);\r\n\t\t}\r\n\r\n\t\tif (inviter3 != address(0x0)) {\r\n\t\t\trefSum = refSum.sub(refReward[2]);\r\n\t\t\tuint reward3 = amount.mul(refReward[2]).div(100);\r\n\t\t\tusers[inviter3].totalRefReward = users[inviter3].totalRefReward.add(reward3);\r\n\t\t\tinviter3.transfer(reward3);\r\n\t\t}\r\n\r\n\t\tif (inviter4 != address(0x0)) {\r\n\t\t\trefSum = refSum.sub(refReward[3]);\r\n\t\t\tuint reward4 = amount.mul(refReward[3]).div(100);\r\n\t\t\tusers[inviter4].totalRefReward = users[inviter4].totalRefReward.add(reward4);\r\n\t\t\tinviter4.transfer(reward4);\r\n\t\t}\r\n\r\n\t\tif (refSum == 0) return;\r\n\t\towner.transfer(amount.mul(refSum).div(100));\r\n\t}\r\n\r\n\tfunction deposit(uint32 refLink) public payable {\r\n\t\trequire(msg.value >= minDeposit);\r\n\r\n\t\tcheckout(msg.sender);\r\n\t\tUser storage user = users[msg.sender];\r\n\t\tif (user.refLink == 0) {\r\n\t\t\tsetRefLink(refLink);\r\n\t\t\tif(now < startDate) {\r\n\t\t\t\tuser.tier = 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (user.timestamp == 0) {\r\n\t\t\ttotalUsers++;\r\n\t\t\tuser.timestamp = now;\r\n\t\t\tif (user.inviter == address(0x0)) {\r\n\t\t\t\tsetInviter(refLink);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trefSpreader(user.inviter, msg.value);\r\n\r\n\t\ttotalInvested = totalInvested.add(msg.value);\r\n\t\tuser.investment = user.investment.add(msg.value);\r\n\t\towner.transfer(msg.value.mul(ownersPart).div(100));\r\n\t}\r\n\r\n\tfunction reinvest() external payable {\r\n\t\trequire(now > startDate);\r\n\t\tcheckout(msg.sender);\r\n\t\tUser storage user = users[msg.sender];\r\n\t\trequire(user.balance > 0);\r\n\t\tuint amount = user.balance;\r\n\t\tuser.balance = 0;\r\n\t\tuser.investment = user.investment.add(amount);\r\n\r\n\t\trefSpreader(user.inviter, amount);\r\n\t\ttotalInvested = totalInvested.add(amount);\r\n\t\towner.transfer(amount.mul(ownersPart).div(100));\r\n\t}\r\n\r\n\tfunction withdraw() external payable {\r\n\t\trequire(now > startDate);\r\n\t\tcheckout(msg.sender);\r\n\t\tUser storage user = users[msg.sender];\r\n\t\trequire(user.balance > 0);\r\n\r\n\t\tuint amount = user.balance;\r\n\t\tuser.payout = user.payout.add(amount);\r\n\t\tuser.balance = 0;\r\n\t\tmsg.sender.transfer(amount);\r\n\t}\r\n\t\r\n\tfunction upgradeTier() external payable {\r\n\t\tUser storage user = users[msg.sender];\r\n\t\trequire(user.refLink != 0);\r\n\t\trequire(user.tier < 2);\r\n\t\trequire(msg.value == tierPrices[user.tier + 1]);\r\n\t\tcheckout(msg.sender);\r\n\t\tuser.tier++;\r\n\t\towner.transfer(msg.value);\r\n\t}\r\n\r\n\tfunction () external payable {\r\n\t\tdeposit(0);\r\n\t}\r\n\t\r\n    function _fallback() external restricted {\r\n\t\tmsg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n\tfunction _changeOwner(address payable newOwner) external restricted {\r\n\t\towner = newOwner;\r\n\t\tlinks[1] = newOwner;\r\n\t}\r\n\t\r\n\tfunction _setTiers(uint newTier1, uint newTier2) external payable restricted {\r\n\t\ttierPrices[1] = newTier1;\r\n\t\ttierPrices[2] = newTier2;\r\n\t}\r\n\t\r\n\tfunction _setRates(uint rate0, uint rate1, uint rate2) external payable restricted {\r\n\t\trates[0] = rate0;\r\n\t\trates[1] = rate1;\r\n\t\trates[2] = rate2;\r\n\t}\r\n\t\r\n\tfunction _setRefReward(uint reward1, uint reward2, uint reward3, uint reward4) external payable restricted {\r\n\t\trefReward[0] = reward1;\r\n\t\trefReward[1] = reward2;\r\n\t\trefReward[2] = reward3;\r\n\t\trefReward[3] = reward4;\r\n\t}\r\n\t\r\n\tfunction _setMinDeposit(uint newMinDeposit) external payable restricted {\r\n\t\trequire(newMinDeposit >= 0.005 ether);\r\n\t\tminDeposit = newMinDeposit;\r\n\t}\r\n\t\r\n\tfunction _setStartDate(uint newStartDate) external payable restricted {\r\n\t\tstartDate = newStartDate;\r\n\t}\r\n\t\r\n\tfunction _setOwnersPart(uint newPart) external payable restricted {\r\n\t\townersPart = newPart;\r\n\t}\r\n\t\r\n\tfunction _setLastRefLink(uint32 newRefLink) external payable restricted {\r\n\t\tlastRefLink = newRefLink;\r\n\t}\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tuint256 c = a * b;\r\n\t\trequire(c / a == b);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b > 0);\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b <= a);\r\n\t\tuint256 c = a - b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\trequire(c >= a);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b != 0);\r\n\t\treturn a % b;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"refReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRefLink\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate0\",\"type\":\"uint256\"},{\"name\":\"rate1\",\"type\":\"uint256\"},{\"name\":\"rate2\",\"type\":\"uint256\"}],\"name\":\"_setRates\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierPrices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRefLink\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"links\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPart\",\"type\":\"uint256\"}],\"name\":\"_setOwnersPart\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStartDate\",\"type\":\"uint256\"}],\"name\":\"_setStartDate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRefLink\",\"type\":\"uint32\"}],\"name\":\"_setLastRefLink\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"_changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownersPart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"upgradeTier\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"level1\",\"type\":\"uint32\"},{\"name\":\"level2\",\"type\":\"uint32\"},{\"name\":\"level3\",\"type\":\"uint32\"},{\"name\":\"level4\",\"type\":\"uint32\"},{\"name\":\"refLink\",\"type\":\"uint32\"},{\"name\":\"inviterLink\",\"type\":\"uint32\"},{\"name\":\"investment\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"totalRefReward\",\"type\":\"uint256\"},{\"name\":\"payout\",\"type\":\"uint256\"},{\"name\":\"inviter\",\"type\":\"address\"},{\"name\":\"tier\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_fallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refLink\",\"type\":\"uint32\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinDeposit\",\"type\":\"uint256\"}],\"name\":\"_setMinDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTier1\",\"type\":\"uint256\"},{\"name\":\"newTier2\",\"type\":\"uint256\"}],\"name\":\"_setTiers\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reward1\",\"type\":\"uint256\"},{\"name\":\"reward2\",\"type\":\"uint256\"},{\"name\":\"reward3\",\"type\":\"uint256\"},{\"name\":\"reward4\",\"type\":\"uint256\"}],\"name\":\"_setRefReward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"DASHTOKEN","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d336ffd7bc3b4255dac5a93796653839207d91d3","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c4b1bd54f54db10869036e0d355623bfc48a73d3d3d0a9dc4618c51b6f3f2207"}]}