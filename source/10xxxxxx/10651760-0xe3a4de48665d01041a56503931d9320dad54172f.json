{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ncontract Outa{\r\n    uint public userCount;\r\n    uint public earnedCount;\r\n    address payable public owner;\r\n   \r\n   struct User{\r\n       uint id;\r\n       uint balance;\r\n       uint partnersCount;\r\n   }\r\n   mapping(address => User) public users;\r\n   mapping(uint => address) public idToAddress;\r\n   \r\n   constructor(address payable ownerAddress) public{\r\n       owner = ownerAddress;\r\n       userCount = 1;\r\n       users[owner] = User(userCount, 0, 0);\r\n       idToAddress[userCount] = owner;\r\n   }\r\n   \r\n   function registerUser(address payable referral) external payable {\r\n    require(msg.value == 0.05 ether,\"Amount should be equal to 0.05 ether\");\r\n    require(isUserExists(referral),'Referral does not exists');\r\n    require(!isUserExists(msg.sender),'User already exist');\r\n    userCount++;\r\n    users[msg.sender] = User(userCount, 0, 0);\r\n    idToAddress[userCount] = msg.sender;\r\n    referral.transfer(0.03 ether);\r\n    users[referral].balance = users[referral].balance +  0.03 ether;\r\n    users[referral].partnersCount ++;\r\n    owner.transfer(0.02 ether);\r\n    earnedCount = earnedCount + msg.value;\r\n\r\n   }\r\n   \r\n   function isUserExists(address user) public view returns (bool) {\r\n        return (users[user].id != 0);\r\n}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"earnedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partnersCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Outa","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000081e6b38fa944c4b19aa8313dc49751dbaa7f866","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d5bf63195e8e7a95c39ba75f3f8497e5ca7c1ab6d8afba21c82ae18672a61b1d"}]}