{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ncontract ERC20\r\n{\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract Wrapper\r\n{\r\n    address public owner;\r\n    address public target;\r\n    bytes public data;\r\n\tmapping (address => bool) public allow_list;\r\n\t\r\n\tconstructor() public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n        \r\n    function() external payable\r\n    {\r\n        \r\n    }\r\n\r\n    function pull_eth(uint256 value) public payable\r\n    {\r\n        require(msg.sender == owner);\r\n        \r\n        msg.sender.transfer(value);\r\n    }\r\n    \r\n    function pull_token(address token, uint256 value) public\r\n    {\r\n        require(msg.sender == owner);\r\n        \r\n        ERC20(token).transfer(msg.sender, value);\r\n    }\r\n    \r\n    function set_call(address _target, bytes memory _data) public\r\n    {\r\n        require(msg.sender == owner);\r\n        \r\n        target = _target;\r\n        data = _data;\r\n    }\r\n    \r\n    function allow_address(address a) public\r\n    {\r\n        allow_list[a] = true;\r\n    }\r\n    \r\n    function allow_addresses(address[] memory array) public\r\n    {\r\n        for(uint256 i = 0; i < array.length; i++)\r\n        {\r\n            allow_list[array[i]] = true;\r\n        }\r\n    }\r\n    \r\n    function cancel_addresses(address[] memory array) public\r\n    {\r\n        for(uint256 i = 0; i < array.length; i++)\r\n        {\r\n            delete allow_list[array[i]];\r\n        }\r\n    }\r\n    \r\n    function do_call(uint256 value) public payable returns (bytes32 response)\r\n    {\r\n        require(allow_list[msg.sender]);\r\n        \r\n        address _target = target;\r\n        bytes memory _data = data;\r\n        \r\n        assembly {\r\n            let succeeded := call(sub(gas, 5000), value, _target, add(_data, 0x20), mload(_data), 0, 32)\r\n            response := mload(0)      // load delegatecall output\r\n            switch iszero(succeeded)\r\n            case 1 {\r\n                // throw if delegatecall failed\r\n                revert(0, 0)\r\n            }\r\n        }\r\n    }\r\n    \r\n    function do_direct_call(uint256 value, address _target, bytes memory _data) public payable returns (bytes32 response)\r\n    {\r\n        require(allow_list[msg.sender]);\r\n        \r\n        assembly {\r\n            let succeeded := call(sub(gas, 5000), value, _target, add(_data, 0x20), mload(_data), 0, 32)\r\n            response := mload(0)      // load delegatecall output\r\n            switch iszero(succeeded)\r\n            case 1 {\r\n                // throw if delegatecall failed\r\n                revert(0, 0)\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"allow_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"}],\"name\":\"allow_addresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allow_list\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"}],\"name\":\"cancel_addresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"do_call\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"do_direct_call\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"pull_eth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"pull_token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"set_call\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Wrapper","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://00c72084558819cce10dd192ae257a871a6a3ab335445b5a76d9324a8b0ae255"}]}