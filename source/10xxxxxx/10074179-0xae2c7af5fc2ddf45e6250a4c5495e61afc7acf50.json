{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.7;\r\n\r\ninterface AddrMInterface {\r\n     function getAddr(string calldata name_) external view returns(address);\r\n}\r\n\r\ninterface ERC20 {\r\n  function balanceOf(address) external view returns (uint256);\r\n  function transferFrom(address, address, uint256) external returns (bool);\r\n  function transfer(address _to, uint256 _value) external returns (bool success);\r\n  function ticketGet() external ;\r\n  function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n}\r\n\r\ninterface mPoolInterface{\r\n    function setAmbFlag(address ply_) external;\r\n}\r\n\r\n\r\n\r\ncontract Ticket{\r\n    \r\n    //address manager \r\n    AddrMInterface public addrM;\r\n    bool public fristTime;\r\n    address public owner;\r\n    \r\n    ERC20 tokenADC;\r\n    \r\n    // change rule\r\n    \r\n    mapping(uint8 => uint256) private changeRatio;\r\n    mapping(uint8 => uint256) public RemainAmount; // changeAmount - this lava cost\r\n    uint256 public totalCheckOut; // already check out ADC acount\r\n    uint8 public curentLevel;\r\n   \r\n    // constant set \r\n    uint256 constant public totalBalance = 153000000*10**18;\r\n    uint256 constant public minInPay  = 5*10**16;// 1 * 5% eth\r\n    uint256 constant public OutPay  =   1*10**17;// 1 * 10% eth\r\n    address payable constant public  teamAddr = address(0x1d13502CfB73FCa360d1af7703cD3F47abA809b5);//\r\n    \r\n    \r\n    \r\n    \r\n    constructor(address AddrManager_) public{\r\n        owner = msg.sender;\r\n        addrM = AddrMInterface(AddrManager_);\r\n        tokenADC = ERC20(addrM.getAddr(\"ADC\"));\r\n        \r\n        fristTime = false;\r\n        \r\n        curentLevel = 1;\r\n        totalCheckOut = 0;\r\n        \r\n        RemainAmount[1] =  1000000000000000000000000;\r\n        RemainAmount[2] =  2000000000000000000000000;\r\n        RemainAmount[3] =  3000000000000000000000000;\r\n        RemainAmount[4] =  4000000000000000000000000;\r\n        RemainAmount[5] =  5000000000000000000000000;\r\n        RemainAmount[6] =  6000000000000000000000000;\r\n        RemainAmount[7] =  7000000000000000000000000;\r\n        RemainAmount[8] =  8000000000000000000000000;\r\n        RemainAmount[9] =  9000000000000000000000000;\r\n        RemainAmount[10] = 10000000000000000000000000;\r\n        RemainAmount[11] = 11000000000000000000000000;\r\n        RemainAmount[12] = 12000000000000000000000000;\r\n        RemainAmount[13] = 13000000000000000000000000;\r\n        RemainAmount[14] = 14000000000000000000000000;\r\n        RemainAmount[15] = 15000000000000000000000000;\r\n        RemainAmount[16] = 16000000000000000000000000;\r\n        RemainAmount[17] = 17000000000000000000000000;\r\n        \r\n        changeRatio[1] = 7000000000000000000000;\r\n        changeRatio[2] = 6000000000000000000000;\r\n        changeRatio[3] = 5000000000000000000000;\r\n        changeRatio[4] = 4000000000000000000000;\r\n        changeRatio[5] = 3000000000000000000000;\r\n        changeRatio[6] = 2000000000000000000000;\r\n        changeRatio[7] = 1000000000000000000000;\r\n        changeRatio[8] = 500000000000000000000;\r\n        changeRatio[9] = 250000000000000000000;\r\n        changeRatio[10] = 125000000000000000000;\r\n        changeRatio[11] = 60000000000000000000;\r\n        changeRatio[12] = 30000000000000000000;\r\n        changeRatio[13] = 15000000000000000000;\r\n        changeRatio[14] = 8000000000000000000;\r\n        changeRatio[15] = 4000000000000000000;\r\n        changeRatio[16] = 2000000000000000000;\r\n        changeRatio[17] = 1000000000000000000;\r\n \r\n    }\r\n    \r\n\r\n    function buyADC() public payable{\r\n        uint256 msgValue = msg.value;\r\n        uint256 adcAmount;\r\n        uint256 saleADC;\r\n        \r\n        if(!fristTime){\r\n            tokenADC.ticketGet();\r\n            fristTime = true;\r\n        }\r\n        require(msgValue >= minInPay,\" value to smail buyADC\");\r\n        require((totalBalance-totalCheckOut) == tokenADC.balanceOf(address(this)),\"balance not right\");\r\n        \r\n        saleADC = (msgValue* changeRatio[curentLevel])/10**18; //msgValue.div(10**18).mul(changeRatio[curentLevel]);\r\n        \r\n        teamAddr.transfer(msgValue);\r\n        adcAmount = CrossLevel(saleADC,msgValue);\r\n        \r\n        tokenADC.transfer(msg.sender,adcAmount);\r\n        \r\n        if(msgValue >= 100*10**18){\r\n            mPoolInterface(addrM.getAddr(\"MAINPOOL\")).setAmbFlag(msg.sender);\r\n        }\r\n        \r\n        totalCheckOut += adcAmount;\r\n        \r\n    }\r\n    \r\n    function calDeductionADC(uint256 _value,bool isIn_) public view returns(uint256 disADC_){\r\n        \r\n        uint256 ticketValue ;\r\n        uint256 tempAdc;\r\n        disADC_ = 0;\r\n        if(isIn_){\r\n           ticketValue = _value * 5 /100; \r\n        }else{\r\n           ticketValue = _value * 5 /100; \r\n        }\r\n    \r\n        //require(_value >= 1*10**17,\"_value to smail calDeductionADC\");\r\n        \r\n        tempAdc = (ticketValue*changeRatio[curentLevel])/10**18;\r\n        disADC_ = calcDistroy(tempAdc,ticketValue);\r\n    }\r\n    \r\n    function getTickeInfo() public view returns(uint256 curLevel_,uint256 distroyADCAmount_){\r\n        curLevel_ = curentLevel;\r\n        distroyADCAmount_ = totalCheckOut;\r\n    }\r\n    \r\n    function CrossLevel(uint256 saleADC_,uint256 buyValue_) internal  returns(uint256 disAdc){\r\n        if(RemainAmount[curentLevel] > saleADC_){\r\n            RemainAmount[curentLevel] -=saleADC_;\r\n            disAdc = saleADC_;\r\n            return disAdc;\r\n        }else{\r\n            disAdc = RemainAmount[curentLevel];\r\n            uint256 newLevelRemian;\r\n            uint256 value = buyValue_;\r\n            uint256 subValue;\r\n            for(uint8 i=curentLevel+1; i<17; i++){\r\n                curentLevel = i;\r\n                subValue = (RemainAmount[i-1]*10**18)/changeRatio[i-1];\r\n                newLevelRemian = ((value- subValue)*changeRatio[i])/10**18;\r\n                if(newLevelRemian < RemainAmount[i]){\r\n                    disAdc += newLevelRemian;\r\n                    RemainAmount[i] -= newLevelRemian;\r\n                    return disAdc;\r\n                }\r\n                disAdc += RemainAmount[i];\r\n                value -= subValue;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function calcDistroy(uint256 saleADC_,uint256 buyValue_) internal view returns(uint256 disAdc){\r\n        if(RemainAmount[curentLevel] > saleADC_){\r\n            \r\n            disAdc = saleADC_;\r\n           return disAdc;\r\n        }else{\r\n            disAdc = RemainAmount[curentLevel];\r\n            uint256 newLevelRemian;\r\n            uint256 value = buyValue_;\r\n            uint256 subValue;\r\n            for(uint8 i=curentLevel+1; i<17; i++){\r\n                subValue = (RemainAmount[i-1]*10**18)/changeRatio[i-1];\r\n                newLevelRemian = ((value- subValue)*changeRatio[i])/10**18;\r\n                if(newLevelRemian < RemainAmount[i]){\r\n                    disAdc += newLevelRemian;\r\n                    return disAdc;\r\n                }\r\n                disAdc += RemainAmount[i];\r\n                value -= subValue;\r\n            }\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"OutPay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minInPay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fristTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curentLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"isIn_\",\"type\":\"bool\"}],\"name\":\"calDeductionADC\",\"outputs\":[{\"name\":\"disADC_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyADC\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTickeInfo\",\"outputs\":[{\"name\":\"curLevel_\",\"type\":\"uint256\"},{\"name\":\"distroyADCAmount_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"RemainAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCheckOut\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"AddrManager_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Ticket","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000049e298b95bda30e6518509187ff348e01117f404","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://844eb5ec80e98f57ec18d0d5b9939077f054d293eef8f990373977ee6a460924"}]}