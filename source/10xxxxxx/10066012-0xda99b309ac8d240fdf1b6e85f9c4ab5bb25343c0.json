{"status":"1","message":"OK","result":[{"SourceCode":"{\"DeathManSwitch.sol\":{\"content\":\"pragma solidity \\u003e=0.5.0;\\r\\nimport \\u0027./SafeMath.sol\\u0027;\\r\\n\\r\\ncontract DeathManSwitch {\\r\\n\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    address payable public owner;\\r\\n    uint256 public checkTime;\\r\\n    uint256 public finalTime;\\r\\n\\r\\n    constructor() public payable {\\r\\n        owner = msg.sender;\\r\\n        checkTime = now;\\r\\n        uint256 targetTime = uint256(7).mul(uint256(86400));\\r\\n        finalTime = now.add(targetTime);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowSteal() {\\r\\n        uint256 offsetTime = uint256(3).mul(uint256(86400));\\r\\n        uint256 minimumStealTime = checkTime.add(offsetTime);\\r\\n        require(now \\u003e minimumStealTime);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowRecoverFounds() {\\r\\n        require(now \\u003e= finalTime);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function ping() public onlyOwner {\\r\\n        checkTime = now;\\r\\n    }\\r\\n\\r\\n    function recoverFunds() public payable onlyOwner allowRecoverFounds {\\r\\n        owner.transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function stealFunds() public payable allowSteal {\\r\\n        msg.sender.transfer(address(this).balance);\\r\\n    }\\r\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity  \\u003e= 0.4.0 \\u003c0.7.0;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a + b;\\r\\n        require(c \\u003e= a);\\r\\n    }\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b \\u003c= a);\\r\\n        c = a - b;\\r\\n    }\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a * b;\\r\\n        require(a == 0 || c / a == b);\\r\\n    }\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b \\u003e 0);\\r\\n        c = a / b;\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"checkTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stealFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"DeathManSwitch","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a7046b38dd92b08b88a1b4414bace4d022a9c0e79ce17134425feab6bfbe6318"}]}