{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n /*\r\n * \r\n * Ruletka's Liquidity Vault\r\n * \r\n * Simple smart contract to decentralize the uniswap liquidity, providing proof of liquidity indefinitely.\r\n * Original smart contract: MrBlobby (UniPower), modified by George.\r\n * https://ruletka.fun\r\n * \r\n */\r\n \r\ncontract Vault {\r\n    \r\n    ERC20 constant liquidityToken = ERC20(0x056bD5A0edeE2bd5ba0B1A1671cf53aA22e03916);\r\n    \r\n    address owner = msg.sender;\r\n    \r\n    uint256 public migrationLock;\r\n    address public migrationRecipient;\r\n\r\n    event liquidityMigrationStarted(address recipient, uint256 unlockTime);\r\n    \r\n\r\n    /**\r\n     * This function allows liquidity to be moved, after a 14 days lockup -preventing abuse.\r\n     */\r\n    function startLiquidityMigration(address recipient) external {\r\n        require(msg.sender == owner);\r\n        migrationLock = now + 14 days;\r\n        migrationRecipient = recipient;\r\n        emit liquidityMigrationStarted(recipient, migrationLock);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Moves liquidity to new location, assuming the 14 days lockup has passed -preventing abuse.\r\n     */\r\n    function processMigration() external {\r\n        require(msg.sender == owner);\r\n        require(migrationRecipient != address(0));\r\n        require(now > migrationLock);\r\n        \r\n        uint256 liquidityBalance = liquidityToken.balanceOf(address(this));\r\n        liquidityToken.transfer(migrationRecipient, liquidityBalance);\r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"liquidityMigrationStarted\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"processMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"startLiquidityMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Vault","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3335353cbbb0f9c2eb8908878f89c64fef42e6171fd499fe0f9299e2d480e878"}]}