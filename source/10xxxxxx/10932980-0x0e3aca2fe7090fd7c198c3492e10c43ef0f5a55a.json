{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface OrFeedInterface {\r\n  function getExchangeRate(string fromSymbol, string toSymbol, string venue, uint256 amount) external view returns(uint256);\r\n  function getTokenDecimalCount(address tokenAddress) external view returns(uint256);\r\n  function getTokenAddress(string symbol) external view returns(address);\r\n  function getSynthBytes32(string symbol) external view returns(bytes32);\r\n  function getForexAddress(string symbol) external view returns(address);\r\n  function arb(address fundsReturnToAddress, address liquidityProviderContractAddress, string[] tokens, uint256 amount, string[] exchanges) external payable returns(bool);\r\n}\r\ninterface ERC20GasToken {\r\n  function name() external view returns(string memory);\r\n  function freeFromUpTo(address from, uint256 value) external returns(uint256 freed);\r\n  function approve(address spender, uint256 value) external returns(bool success);\r\n  function totalSupply() external view returns(uint256 supply);\r\n  function transferFrom(address from, address to, uint256 value) external returns(bool success);\r\n  function decimals() external view returns (uint8);\r\n  function freeFrom(address from, uint256 value) external returns(bool success);\r\n  function freeUpTo(uint256 value) external returns(uint256 freed);\r\n  function balanceOf(address owner) external view returns(uint256 balance);\r\n  function symbol() external view returns(string memory);\r\n  function mint(uint256 value) external;\r\n  function transfer(address to, uint256 value) external returns(bool success);\r\n  function free(uint256 value) external returns(bool success);\r\n  function allowance(address owner, address spender) external view returns(uint256 remaining);\r\n}\r\ncontract arbit3poContractV4 {\r\n    address owner;\r\n    OrFeedInterface orfeed= OrFeedInterface(0x8316B082621CFedAB95bf4a44a1d4B64a6ffc336);\r\n    ERC20GasToken gasToken = ERC20GasToken(0x0000000000b3F879cb30FE243b4Dfee438691c04);\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function withdrawBalance() public onlyOwner returns(bool) {\r\n        uint amount = address(this).balance;\r\n        msg.sender.transfer(amount);\r\n        return true;\r\n    }\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    function doAnArb(address _fundsReturnAddress,  address _liquidityAddress, string[] memory _tokens, uint256 _amount, string[] memory _exchanges) public onlyOwner payable returns (bool) {\r\n        bool result = orfeed.arb(_fundsReturnAddress, _liquidityAddress, _tokens, _amount, _exchanges);\r\n        if(gasToken.balanceOf(address(this)) > 0) {\r\n            gasToken.freeFromUpTo(address(this), gasToken.balanceOf(address(this)));\r\n        }\r\n        return result;\r\n    }\r\n    function getExchangeRate(string memory _base, string memory _to, string memory _exchange, uint256 _amount) public view returns(uint256) {\r\n        return orfeed.getExchangeRate(_base, _to, _exchange, _amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_fundsReturnAddress\",\"type\":\"address\"},{\"name\":\"_liquidityAddress\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"string[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_exchanges\",\"type\":\"string[]\"}],\"name\":\"doAnArb\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_base\",\"type\":\"string\"},{\"name\":\"_to\",\"type\":\"string\"},{\"name\":\"_exchange\",\"type\":\"string\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"arbit3poContractV4","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://99b2582587223fdff1da293e587f7c83804c17bfa849ed84637ff9ff6f0f4abb"}]}