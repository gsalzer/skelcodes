{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.0;\r\n\r\nlibrary SafeMath {\r\n  /**\r\n  * @dev Multiplies two unsigned integers, reverts on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n    \r\n    uint256 c = a * b;\r\n\r\n    require(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two unsigned integers, reverts on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function transfer(address to, uint value) external  returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\r\n}\r\n\r\n/*\r\n *    Lock Moonbeam Tokens For certain Duration\r\n *    \r\n *    Create locking contract\r\n */\r\ncontract MYFITokenLock {\r\n\r\n    // Safemath Liberary\r\n    using SafeMath for uint256;\r\n\r\n    // Unlock token duration\r\n    uint256 public unlockDateCommunityTwo;\r\n    uint256 public unlockDateCommunityOne;\r\n\r\n    // Grouping token owner\r\n    uint256 public MYFILockedCommunityOne;\r\n    uint256 public MYFILockedCommunityTwo;\r\n    address public owner;\r\n    ERC20 public MYFIToken;\r\n\r\n    //\r\n    constructor(address _wallet) public {\r\n        owner = msg.sender; \r\n        MYFIToken = ERC20(_wallet);\r\n    }\r\n\r\n    // Lock 10000 MYFI 3 Weeks\r\n    function lockCommunityOneTokens (address _from, uint _amount) public {\r\n        require(_from == owner);\r\n        require(MYFIToken.balanceOf(_from) >= _amount);\r\n        MYFILockedCommunityOne = _amount;\r\n        unlockDateCommunityOne = now;\r\n        MYFIToken.transferFrom(owner, address(this), _amount);\r\n    }\r\n\r\n    // Lock 1000 MYFI 3 Weeks\r\n    function lockCommunityTwoTokens (address _from, uint256 _amount) public {\r\n        require(_from == owner);\r\n        require(MYFIToken.balanceOf(_from) >= _amount);\r\n        MYFILockedCommunityTwo = _amount;\r\n        unlockDateCommunityTwo = now;\r\n        MYFIToken.transferFrom(owner, address(this), _amount);\r\n    }\r\n\r\n    function withdrawCommunityOneTokens(address _to, uint256 _amount) public {\r\n        require(_to == owner);\r\n        require(_amount <= MYFILockedCommunityOne);\r\n        require(now.sub(unlockDateCommunityOne) >= 21 days);\r\n        MYFILockedCommunityOne = MYFILockedCommunityOne.sub(_amount);\r\n        MYFIToken.transfer(_to, _amount);\r\n    }\r\n\r\n    function withdrawCommunityTwoTokens(address _to, uint256 _amount) public {\r\n        require(_to == owner);\r\n        require(_amount <= MYFILockedCommunityTwo);\r\n        require(now.sub(unlockDateCommunityTwo) >= 21 days);\r\n        MYFILockedCommunityTwo = MYFILockedCommunityTwo.sub(_amount);\r\n        MYFIToken.transfer(_to, _amount);\r\n    }\r\n\r\n    function balanceOf() public view returns (uint256) {\r\n        return MYFILockedCommunityOne.add(MYFILockedCommunityTwo);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MYFILockedCommunityOne\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MYFILockedCommunityTwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MYFIToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lockCommunityOneTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lockCommunityTwoTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockDateCommunityOne\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockDateCommunityTwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCommunityOneTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCommunityTwoTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MYFITokenLock","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000001efb2286bf89f01488c6b2a22b2556c0f45e972b","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://60fe888c7788e0083ef4ea2f27e42dde3da3f28265a1971f5b5c126b320ac942"}]}