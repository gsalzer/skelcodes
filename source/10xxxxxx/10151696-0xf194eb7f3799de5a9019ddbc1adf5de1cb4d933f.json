{"status":"1","message":"OK","result":[{"SourceCode":"{\"safeMath.sol\":{\"content\":\"pragma solidity \\u003e=0.4.22 \\u003c0.7.0;\\r\\n\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b \\u003c= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b \\u003e 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\"},\"token.no.sol\":{\"content\":\"pragma solidity \\u003e=0.6.0 \\u003c0.7.0;\\r\\nimport \\\"./safeMath.sol\\\";\\r\\n\\r\\n\\r\\ncontract owned {\\r\\n    address payable public owner;\\r\\n\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address payable newOwner) public onlyOwner {\\r\\n        owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\ninterface tokenRecipient {\\r\\n    function receiveApproval(\\r\\n        address _from,\\r\\n        uint256 _value,\\r\\n        address _token,\\r\\n        bytes calldata _extraData\\r\\n    ) external;\\r\\n}\\r\\n\\r\\n\\r\\ncontract TokenERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals = 18;\\r\\n    uint256 public totalSupply;\\r\\n    mapping(address =\\u003e uint256) public balanceOf;\\r\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) public allowance;\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _value\\r\\n    );\\r\\n    event Burn(address indexed from, uint256 value);\\r\\n\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol\\r\\n    ) public {\\r\\n        totalSupply = initialSupply.mul(10**uint256(decimals));\\r\\n        balanceOf[address(this)] = totalSupply;\\r\\n        name = tokenName;\\r\\n        symbol = tokenSymbol;\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) internal {\\r\\n        require(_to != address(0x0));\\r\\n        require(balanceOf[_from] \\u003e= _value);\\r\\n        require(balanceOf[_to] + _value \\u003e balanceOf[_to]);\\r\\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\r\\n        balanceOf[_from] -= _value;\\r\\n        balanceOf[_to] += _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\r\\n    }\\r\\n\\r\\n    function transfer(address _to, uint256 _value)\\r\\n        public\\r\\n        returns (bool success)\\r\\n    {\\r\\n        _transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address _spender, uint256 _value)\\r\\n        public\\r\\n        returns (bool success)\\r\\n    {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approveAndCall(\\r\\n        address _spender,\\r\\n        uint256 _value,\\r\\n        bytes memory _extraData\\r\\n    ) public returns (bool success) {\\r\\n        tokenRecipient spender = tokenRecipient(_spender);\\r\\n        if (approve(_spender, _value)) {\\r\\n            spender.receiveApproval(\\r\\n                msg.sender,\\r\\n                _value,\\r\\n                address(this),\\r\\n                _extraData\\r\\n            );\\r\\n            return true;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 _value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] \\u003e= _value);\\r\\n        balanceOf[msg.sender] -= _value;\\r\\n        totalSupply -= _value;\\r\\n        emit Burn(msg.sender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burnFrom(address _from, uint256 _value)\\r\\n        public\\r\\n        returns (bool success)\\r\\n    {\\r\\n        require(balanceOf[_from] \\u003e= _value);\\r\\n        require(_value \\u003c= allowance[_from][msg.sender]);\\r\\n        balanceOf[_from] -= _value;\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        totalSupply -= _value;\\r\\n        emit Burn(_from, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\ncontract MyToken is owned, TokenERC20 {\\r\\n    uint256 public sellBalance;\\r\\n    uint256 public burnBalance;\\r\\n    Db db;\\r\\n    Core core;\\r\\n    address coreAddress;\\r\\n\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol\\r\\n    ) public TokenERC20(initialSupply, tokenName, tokenSymbol) {}\\r\\n\\r\\n    function price() public view returns (uint256) {\\r\\n        if (sellBalance \\u003c 8e25) {\\r\\n            uint256 _init = 150e10;\\r\\n            uint256 _initPrice = uint256(1).mul(1e18).div(_init);\\r\\n            uint256 _singlePrice = uint256(1).mul(1e18).div(_init).div(100);\\r\\n            uint256 _ratio = sellBalance.div(1e23);\\r\\n            uint256 _newPrice = _initPrice.add(_singlePrice.mul(_ratio));\\r\\n            uint256 _price = uint256(1).mul(1e18).div(_newPrice);\\r\\n            return _price.div(1e10);\\r\\n        } else if (sellBalance \\u003c 16e25) {\\r\\n            uint256 _init = 166e9;\\r\\n            uint256 _initPrice = uint256(1).mul(1e18).div(_init);\\r\\n            uint256 _singlePrice = uint256(1).mul(1e18).div(_init).div(100);\\r\\n            uint256 _ratio = (sellBalance.sub(8e25)).div(2e23);\\r\\n            uint256 _newPrice = _initPrice.add(_singlePrice.mul(_ratio));\\r\\n            uint256 _price = uint256(1).mul(1e18).div(_newPrice);\\r\\n            return _price.div(1e10);\\r\\n        } else if (sellBalance \\u003c 229e24) {\\r\\n            uint256 _init = 33e9;\\r\\n            uint256 _initPrice = uint256(1).mul(1e18).div(_init);\\r\\n            uint256 _singlePrice = uint256(1).mul(1e18).div(_init).div(100);\\r\\n            uint256 _ratio = (sellBalance.sub(16e25)).div(3e23);\\r\\n            uint256 _newPrice = _initPrice.add(_singlePrice.mul(_ratio));\\r\\n            uint256 _price = uint256(1).mul(1e18).div(_newPrice);\\r\\n            return _price.div(1e10);\\r\\n        } else {\\r\\n            return 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function init(address _dbAddress, address _coreAddress) public onlyOwner {\\r\\n        db = Db(_dbAddress);\\r\\n        core = Core(_coreAddress);\\r\\n        coreAddress = _coreAddress;\\r\\n    }\\r\\n\\r\\n    modifier isCore {\\r\\n        require(msg.sender == coreAddress);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function sendTokenToAddress(address _own, uint256 _balance) public isCore {\\r\\n        _balance = _balance.mul(1e18);\\r\\n        require(_balance.add(sellBalance) \\u003c 229000000e18);\\r\\n        sellBalance = sellBalance.add(_balance);\\r\\n        _transfer(address(this), _own, _balance);\\r\\n    }\\r\\n\\r\\n    function sendTokenToV4(address _own, uint256 _balance) public onlyOwner {\\r\\n        _transfer(address(this), _own, _balance);\\r\\n    }\\r\\n\\r\\n    function getToken(address _own) public view returns (uint256) {\\r\\n        return balanceOf[_own];\\r\\n    }\\r\\n\\r\\n    function sendTokenToGame(address _to, uint256 _value)\\r\\n        public\\r\\n        isCore\\r\\n        returns (bool)\\r\\n    {\\r\\n        address txAddress = tx.origin;\\r\\n        require(balanceOf[txAddress] \\u003e= _value);\\r\\n        burnBalance = burnBalance.add(_value);\\r\\n        _transfer(txAddress, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getTokenPrice() public view returns (uint256) {\\r\\n        return price();\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nabstract contract Db {\\r\\n    function getPlayerInfo(address _own)\\r\\n        public\\r\\n        virtual\\r\\n        view\\r\\n        returns (\\r\\n            address _parent,\\r\\n            bool _isExist,\\r\\n            bool _isParent\\r\\n        );\\r\\n}\\r\\n\\r\\n\\r\\nabstract contract Core {\\r\\n    function bindParent(address _parent) public virtual;\\r\\n}\\r\\n\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_own\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dbAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coreAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_own\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"sendTokenToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendTokenToGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_own\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"sendTokenToV4\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MyToken","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000ee6b280000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000009455420537175617265000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034554320000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://60de35a8fdc5b165df8c5db468af3aec34cbaa179c6322f41064b5cdc74b16d1"}]}