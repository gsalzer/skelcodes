{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address account) external view returns (uint);\r\n    function decimals() external view returns (uint);\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        require(b <= a, errorMessage);\r\n        uint c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint c = a / b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface UniswapRouter {\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapTokensForExactTokens(\r\n        uint amountOut,\r\n        uint amountInMax,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function factory() external view returns (address);\r\n}\r\n\r\ninterface UniswapFactory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\ninterface StableCreditProtocol {\r\n    function utilization(address token) external view returns (uint);\r\n    function BASE() external view returns (uint);\r\n    function MAX() external view returns (uint);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function balances(address owner, address token) external view returns (uint);\r\n    function credit(address owner, address token) external view returns (uint);\r\n}\r\n\r\ninterface Oracle {\r\n    function getPriceUSD(address reserve) external view returns (uint);\r\n}\r\n\r\ncontract StableCreditHelper {\r\n    using SafeMath for uint;\r\n    \r\n    Oracle public constant LINK = Oracle(0x271bf4568fb737cc2e6277e9B1EE0034098cDA2a);\r\n    UniswapRouter public constant UNI = UniswapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    StableCreditProtocol public constant STABLE = StableCreditProtocol(0xf0BEa7077e2C65EF8BA089edcE949781Af6277A6);\r\n    \r\n    constructor () public {}\r\n    \r\n    // How much system liquidity is provided by this asset\r\n    function _utilization(address token, uint amount) internal view returns (uint) {\r\n        uint _max = STABLE.MAX();\r\n        uint _base = STABLE.BASE();\r\n        address _pair = UniswapFactory(UNI.factory()).getPair(token, address(STABLE));\r\n        uint _ratio = _base.sub(_base.mul(STABLE.balanceOf(_pair).add(amount)).div(STABLE.totalSupply()));\r\n        if (_ratio == 0) {\r\n            return _max;\r\n        }\r\n        return  _ratio > _max ? _max : _ratio;\r\n    }\r\n    function calculateCollateral(address token) external view returns (uint) {\r\n        return calculateWithdraw(token, uint(-1));\r\n    }\r\n    function calculateCollateralOf(address owner, address token) external view returns (uint) {\r\n        return calculateWithdrawOf(owner, token, uint(-1));\r\n    }\r\n    function calculateWithdrawMax(address token) external view returns (uint) {\r\n        return calculateWithdraw(token, STABLE.balanceOf(msg.sender));\r\n    }\r\n    function calculateWithdrawMaxOf(address owner, address token) external view returns (uint) {\r\n        return calculateWithdrawOf(owner, token, STABLE.balanceOf(msg.sender));\r\n    }\r\n    function calculateWithdraw(address token, uint amount) public view returns (uint) {\r\n        return calculateWithdrawOf(msg.sender, token, amount);\r\n    }\r\n    function credit(address owner, address token) external view returns (uint) {\r\n        return STABLE.credit(owner, token);\r\n    }\r\n    function calculateWithdrawOf(address owner, address token, uint amount) public view returns (uint output) {\r\n        address _pair = UniswapFactory(UNI.factory()).getPair(token, address(STABLE));\r\n        uint _supply = IERC20(_pair).totalSupply();\r\n        uint _balance = IERC20(token).balanceOf(_pair);\r\n        uint _share = STABLE.balances(owner, token);\r\n        output = _balance.mul(_share).div(_supply);\r\n        \r\n        uint _credit = STABLE.credit(owner, token);\r\n        if (_credit < amount) {\r\n            amount = _credit;\r\n        }\r\n        output = output.mul(amount).div(_credit);\r\n    }\r\n    // Calculate maxium amount of credit a depositer will get for their token\r\n    function calculateCreditMax(address token) external view returns (uint) {\r\n        return calculateCreditMaxOf(msg.sender, token);\r\n    }\r\n    function calculateCreditMaxOf(address owner, address token) public view returns (uint) {\r\n        return calculateCredit(token, IERC20(token).balanceOf(owner));\r\n    }\r\n    function calculateCredit(address token, uint amount) public view returns (uint) {\r\n        uint _value = LINK.getPriceUSD(token).mul(amount).div(uint256(10)**IERC20(token).decimals());\r\n        return amount.mul(_utilization(token, _value)).div(STABLE.BASE());\r\n    }\r\n    // Calculate how much USD required to borrow exact amount of output token\r\n    function calculateBorrowExactOut(address token, uint outExact) external view returns (uint) {\r\n        address[] memory _path = new address[](2);\r\n        _path[0] = address(STABLE);\r\n        _path[1] = token;\r\n        return UNI.getAmountsIn(outExact, _path)[0];\r\n    }\r\n    // Calculate maximum amount of output token given amount of USD owner by owner\r\n    function calculateBorrowMax(address token) external view returns (uint) {\r\n        return calculateBorrowMaxOf(msg.sender, token);\r\n    }\r\n    function calculateBorrowMaxOf(address owner, address token) public view returns (uint) {\r\n        return calculateBorrowExactIn(token, STABLE.balanceOf(owner));\r\n    }\r\n    // Calculate amount of token received given exact amount of USD input\r\n    function calculateBorrowExactIn(address token, uint inExact) public view returns (uint) {\r\n        address[] memory _path = new address[](2);\r\n        _path[0] = address(STABLE);\r\n        _path[1] = token;\r\n        return UNI.getAmountsOut(inExact, _path)[1];\r\n    }\r\n    // Calculate amount of USD required to repay exact amount of token\r\n    function calculateRepayExactOut(address token, uint outExact) external view returns (uint) {\r\n        address[] memory _path = new address[](2);\r\n        _path[0] = token;\r\n        _path[1] = address(STABLE);\r\n        return UNI.getAmountsIn(outExact, _path)[0];\r\n    }\r\n    // calculate maximum amount of token repaid given USD input\r\n    function calculateRepayMax(address token) external view returns (uint) {\r\n        return calculateRepayMaxOf(msg.sender, token);\r\n    }\r\n    \r\n    function calculateRepayMaxOf(address owner, address token) public view returns (uint) {\r\n        return calculateRepayExactIn(token, IERC20(token).balanceOf(owner));\r\n    }\r\n    \r\n    // Calculate amount of token repaid given exact amount of USD input\r\n    function calculateRepayExactIn(address token, uint inExact) public view returns (uint) {\r\n        address[] memory _path = new address[](2);\r\n        _path[0] = token;\r\n        _path[1] = address(STABLE);\r\n        return UNI.getAmountsOut(inExact, _path)[1];\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract Oracle\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"STABLE\",\"outputs\":[{\"internalType\":\"contract StableCreditProtocol\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNI\",\"outputs\":[{\"internalType\":\"contract UniswapRouter\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inExact\",\"type\":\"uint256\"}],\"name\":\"calculateBorrowExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outExact\",\"type\":\"uint256\"}],\"name\":\"calculateBorrowExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateBorrowMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateBorrowMaxOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateCollateralOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateCreditMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateCreditMaxOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inExact\",\"type\":\"uint256\"}],\"name\":\"calculateRepayExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outExact\",\"type\":\"uint256\"}],\"name\":\"calculateRepayExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateRepayMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateRepayMaxOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateWithdrawMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calculateWithdrawMaxOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateWithdrawOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"credit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"StableCreditHelper","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f49235c8505e639e0d5228694c761197e0c32b23b4090a256b3a97fcb5fd1abd"}]}