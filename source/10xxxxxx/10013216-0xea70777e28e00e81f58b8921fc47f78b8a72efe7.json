{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\n/**\r\n * @title Roles\r\n * @dev Library for managing addresses assigned to a Role.\r\n */\r\nlibrary Roles {\r\n    struct Role {\r\n        mapping (address => bool) bearer;\r\n    }\r\n\r\n    /**\r\n     * @dev Give an account access to this role.\r\n     */\r\n    function add(Role storage role, address account) internal {\r\n        require(!has(role, account), \"Roles: account already has role\");\r\n        role.bearer[account] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Remove an account's access to this role.\r\n     */\r\n    function remove(Role storage role, address account) internal {\r\n        require(has(role, account), \"Roles: account does not have role\");\r\n        role.bearer[account] = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Check if an account has this role.\r\n     * @return bool\r\n     */\r\n    function has(Role storage role, address account) internal view returns (bool) {\r\n        require(account != address(0), \"Roles: account is the zero address\");\r\n        return role.bearer[account];\r\n    }\r\n}\r\n\r\n/**\r\n * @title WhitelistAdminRole\r\n * @dev WhitelistAdmins are responsible for assigning and removing Whitelisted accounts.\r\n */\r\ncontract WhitelistAdminRole {\r\n    using Roles for Roles.Role;\r\n\r\n    event WhitelistAdminAdded(address indexed account);\r\n    event WhitelistAdminRemoved(address indexed account);\r\n\r\n    Roles.Role private _whitelistAdmins;\r\n\r\n    constructor () internal {\r\n        _addWhitelistAdmin(msg.sender);\r\n    }\r\n\r\n    modifier onlyWhitelistAdmin() {\r\n        require(isWhitelistAdmin(msg.sender), \"WhitelistAdminRole: caller does not have the WhitelistAdmin role\");\r\n        _;\r\n    }\r\n\r\n    function isWhitelistAdmin(address account) public view returns (bool) {\r\n        return _whitelistAdmins.has(account);\r\n    }\r\n\r\n    function addWhitelistAdmin(address account) public onlyWhitelistAdmin {\r\n        _addWhitelistAdmin(account);\r\n    }\r\n\r\n    function renounceWhitelistAdmin() public {\r\n        _removeWhitelistAdmin(msg.sender);\r\n    }\r\n\r\n    function _addWhitelistAdmin(address account) internal {\r\n        _whitelistAdmins.add(account);\r\n        emit WhitelistAdminAdded(account);\r\n    }\r\n\r\n    function _removeWhitelistAdmin(address account) internal {\r\n        _whitelistAdmins.remove(account);\r\n        emit WhitelistAdminRemoved(account);\r\n    }\r\n}\r\n\r\n/**\r\n * @title WhitelistedRole\r\n * @dev Whitelisted accounts have been approved by a WhitelistAdmin to perform certain actions (e.g. participate in a\r\n * crowdsale). This role is special in that the only accounts that can add it are WhitelistAdmins (who can also remove\r\n * it), and not Whitelisteds themselves.\r\n */\r\ncontract WhitelistedRole is WhitelistAdminRole {\r\n    using Roles for Roles.Role;\r\n\r\n    event WhitelistedAdded(address indexed account);\r\n    event WhitelistedRemoved(address indexed account);\r\n\r\n    Roles.Role private _whitelisteds;\r\n\r\n    modifier onlyWhitelisted() {\r\n        require(isWhitelisted(msg.sender), \"WhitelistedRole: caller does not have the Whitelisted role\");\r\n        _;\r\n    }\r\n\r\n    function isWhitelisted(address account) public view returns (bool) {\r\n        return _whitelisteds.has(account);\r\n    }\r\n\r\n    function addWhitelisted(address account) public onlyWhitelistAdmin {\r\n        _addWhitelisted(account);\r\n    }\r\n\r\n    function removeWhitelisted(address account) public onlyWhitelistAdmin {\r\n        _removeWhitelisted(account);\r\n    }\r\n\r\n    function renounceWhitelisted() public {\r\n        _removeWhitelisted(msg.sender);\r\n    }\r\n\r\n    function _addWhitelisted(address account) internal {\r\n        _whitelisteds.add(account);\r\n        emit WhitelistedAdded(account);\r\n    }\r\n\r\n    function _removeWhitelisted(address account) internal {\r\n        _whitelisteds.remove(account);\r\n        emit WhitelistedRemoved(account);\r\n    }\r\n}\r\n\r\n/**\r\n * @title BulkWhitelistedRole\r\n * @dev a Whitelist role defined using the Open Zeppelin Role system with the addition of bulkAddWhitelisted and\r\n * bulkRemoveWhitelisted.\r\n * @dev Whitelisted accounts have been approved by a WhitelistAdmin to perform certain actions (e.g. participate in a\r\n * crowdsale). This role is special in that the only accounts that can add it are WhitelistAdmins (who can also remove\r\n * it), and not Whitelisteds themselves.\r\n */\r\ncontract BulkWhitelistedRole is WhitelistedRole {\r\n\r\n    function bulkAddWhitelisted(address[] memory accounts) public onlyWhitelistAdmin {\r\n        for (uint256 index = 0; index < accounts.length; index++) {\r\n            _addWhitelisted(accounts[index]);\r\n        }\r\n    }\r\n\r\n    function bulkRemoveWhitelisted(address[] memory accounts) public onlyWhitelistAdmin {\r\n        for (uint256 index = 0; index < accounts.length; index++) {\r\n            _removeWhitelisted(accounts[index]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * [EIP](https://eips.ethereum.org/EIPS/eip-165).\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others (`ERC165Checker`).\r\n *\r\n * For an implementation, see `ERC165`.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ncontract IERC721 is IERC165 {\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of NFTs in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the NFT specified by `tokenId`.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view returns (address owner);\r\n\r\n    /**\r\n     * @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * \r\n     *\r\n     * Requirements:\r\n     * - `from`, `to` cannot be zero.\r\n     * - `tokenId` must be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this\r\n     * NFT by either `approve` or `setApproveForAll`.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\r\n    /**\r\n     * @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Requirements:\r\n     * - If the caller is not `from`, it must be approved to move this NFT by\r\n     * either `approve` or `setApproveForAll`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public;\r\n    function approve(address to, uint256 tokenId) public;\r\n    function getApproved(uint256 tokenId) public view returns (address operator);\r\n\r\n    function setApprovalForAll(address operator, bool _approved) public;\r\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\r\n\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\r\n}\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract IERC721Metadata is IERC721 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n\r\ncontract IRegistry is IERC721Metadata {\r\n\r\n    event NewURI(uint256 indexed tokenId, string uri);\r\n\r\n    event NewURIPrefix(string prefix);\r\n\r\n    event Resolve(uint256 indexed tokenId, address indexed to);\r\n\r\n    event Sync(address indexed resolver, uint256 indexed updateId, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Controlled function to set the token URI Prefix for all tokens.\r\n     * @param prefix string URI to assign\r\n     */\r\n    function controlledSetTokenURIPrefix(string calldata prefix) external;\r\n\r\n    /**\r\n     * @dev Returns whether the given spender can transfer a given token ID.\r\n     * @param spender address of the spender to query\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @return bool whether the msg.sender is approved for the given token ID,\r\n     * is an operator of the owner, or is the owner of the token\r\n     */\r\n    function isApprovedOrOwner(address spender, uint256 tokenId) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Mints a new a child token.\r\n     * Calculates child token ID using a namehash function.\r\n     * Requires the msg.sender to be the owner, approved, or operator of tokenId.\r\n     * Requires the token not exist.\r\n     * @param to address to receive the ownership of the given token ID\r\n     * @param tokenId uint256 ID of the parent token\r\n     * @param label subdomain label of the child token ID\r\n     */\r\n    function mintChild(address to, uint256 tokenId, string calldata label) external;\r\n\r\n    /**\r\n     * @dev Controlled function to mint a given token ID.\r\n     * Requires the msg.sender to be controller.\r\n     * Requires the token ID to not exist.\r\n     * @param to address the given token ID will be minted to\r\n     * @param label string that is a subdomain\r\n     * @param tokenId uint256 ID of the parent token\r\n     */\r\n    function controlledMintChild(address to, uint256 tokenId, string calldata label) external;\r\n\r\n    /**\r\n     * @dev Transfers the ownership of a child token ID to another address.\r\n     * Calculates child token ID using a namehash function.\r\n     * Requires the msg.sender to be the owner, approved, or operator of tokenId.\r\n     * Requires the token already exist.\r\n     * @param from current owner of the token\r\n     * @param to address to receive the ownership of the given token ID\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param label subdomain label of the child token ID\r\n     */\r\n    function transferFromChild(address from, address to, uint256 tokenId, string calldata label) external;\r\n\r\n    /**\r\n     * @dev Controlled function to transfers the ownership of a token ID to\r\n     * another address.\r\n     * Requires the msg.sender to be controller.\r\n     * Requires the token already exist.\r\n     * @param from current owner of the token\r\n     * @param to address to receive the ownership of the given token ID\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     */\r\n    function controlledTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Safely transfers the ownership of a child token ID to another address.\r\n     * Calculates child token ID using a namehash function.\r\n     * Implements a ERC721Reciever check unlike transferFromChild.\r\n     * Requires the msg.sender to be the owner, approved, or operator of tokenId.\r\n     * Requires the token already exist.\r\n     * @param from current owner of the token\r\n     * @param to address to receive the ownership of the given token ID\r\n     * @param tokenId uint256 parent ID of the token to be transferred\r\n     * @param label subdomain label of the child token ID\r\n     * @param _data bytes data to send along with a safe transfer check\r\n     */\r\n    function safeTransferFromChild(address from, address to, uint256 tokenId, string calldata label, bytes calldata _data) external;\r\n\r\n    /// Shorthand for calling the above ^^^ safeTransferFromChild function with an empty _data parameter. Similar to ERC721.safeTransferFrom.\r\n    function safeTransferFromChild(address from, address to, uint256 tokenId, string calldata label) external;\r\n\r\n    /**\r\n     * @dev Controlled frunction to safely transfers the ownership of a token ID\r\n     * to another address.\r\n     * Implements a ERC721Reciever check unlike controlledSafeTransferFrom.\r\n     * Requires the msg.sender to be controller.\r\n     * Requires the token already exist.\r\n     * @param from current owner of the token\r\n     * @param to address to receive the ownership of the given token ID\r\n     * @param tokenId uint256 parent ID of the token to be transferred\r\n     * @param _data bytes data to send along with a safe transfer check\r\n     */\r\n    function controlledSafeTransferFrom(address from, address to, uint256 tokenId, bytes calldata _data) external;\r\n\r\n    /**\r\n     * @dev Burns a child token ID.\r\n     * Calculates child token ID using a namehash function.\r\n     * Requires the msg.sender to be the owner, approved, or operator of tokenId.\r\n     * Requires the token already exist.\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param label subdomain label of the child token ID\r\n     */\r\n    function burnChild(uint256 tokenId, string calldata label) external;\r\n\r\n    /**\r\n     * @dev Controlled function to burn a given token ID.\r\n     * Requires the msg.sender to be controller.\r\n     * Requires the token already exist.\r\n     * @param tokenId uint256 ID of the token to be burned\r\n     */\r\n    function controlledBurn(uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Sets the resolver of a given token ID to another address.\r\n     * Requires the msg.sender to be the owner, approved, or operator.\r\n     * @param to address the given token ID will resolve to\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     */\r\n    function resolveTo(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gets the resolver of the specified token ID.\r\n     * @param tokenId uint256 ID of the token to query the resolver of\r\n     * @return address currently marked as the resolver of the given token ID\r\n     */\r\n    function resolverOf(uint256 tokenId) external view returns (address);\r\n\r\n    /**\r\n     * @dev Controlled function to sets the resolver of a given token ID.\r\n     * Requires the msg.sender to be controller.\r\n     * @param to address the given token ID will resolve to\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     */\r\n    function controlledResolveTo(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Provides child token (subdomain) of provided tokenId.\r\n     * @param tokenId uint256 ID of the token\r\n     * @param label label of subdomain (for `aaa.bbb.crypto` it will be `aaa`)\r\n     */\r\n    function childIdOf(uint256 tokenId, string calldata label) external pure returns (uint256);\r\n\r\n    /**\r\n     * @dev Transfer domain ownership without resetting domain records.\r\n     * @param to address of new domain owner\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     */\r\n    function setOwner(address to, uint256 tokenId) external;\r\n}\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n\r\n\r\ncontract IResolver {\r\n    function reconfigure(string[] memory keys, string[] memory values, uint256 tokenId) public;\r\n    function setMany(string[] memory keys, string[] memory values, uint256 tokenId) public;\r\n}\r\n\r\ncontract DomainZoneController is BulkWhitelistedRole {\r\n\r\n    event MintChild(uint256 indexed tokenId, uint256 indexed parentTokenId, string label);\r\n\r\n    IRegistry internal _registry;\r\n\r\n    constructor (IRegistry registry, address[] memory accounts) public {\r\n        _registry = registry;\r\n        for (uint256 index = 0; index < accounts.length; index++) {\r\n            _addWhitelisted(accounts[index]);\r\n        }\r\n    }\r\n\r\n    function mintChild(address to, uint256 tokenId, string memory label, string[] memory keys, string[] memory values) public onlyWhitelisted {\r\n        address resolver = _registry.resolverOf(tokenId);\r\n        uint256 childTokenId = _registry.childIdOf(tokenId, label);\r\n        if (keys.length > 0) {\r\n            _registry.mintChild(address(this), tokenId, label);\r\n            _registry.resolveTo(resolver, childTokenId);\r\n            IResolver(resolver).reconfigure(keys, values, childTokenId);\r\n            _registry.setOwner(to, childTokenId);\r\n        } else {\r\n            _registry.mintChild(to, tokenId, label);\r\n        }\r\n\r\n        emit MintChild(childTokenId, tokenId, label);\r\n    }\r\n\r\n    function resolveTo(address to, uint256 tokenId) external onlyWhitelisted {\r\n        _registry.resolveTo(to, tokenId);\r\n    }\r\n\r\n    function setMany(string[] memory keys, string[] memory values, uint256 tokenId) public onlyWhitelisted {\r\n        address resolver = _registry.resolverOf(tokenId);\r\n        IResolver(resolver).setMany(keys, values, tokenId);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"parentTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"MintChild\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"bulkAddWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"bulkRemoveWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"mintChild\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"resolveTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setMany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DomainZoneController","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d1e5b0ff1287aa9f9a268759062e4ab08b9dacbe0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000012c000000000000000000000000260d5952c2f522c98b928d5ba654484f0625fffa000000000000000000000000a31daa133de8e5d3b48f0c99c4cdf8406c57e7ea000000000000000000000000abc316fa7fd19f7f2bc3016e7cff4d714dd944d400000000000000000000000075b8ebb07efa929bd8fa159e4545e82212928e57000000000000000000000000755064d8fa73f0bd61d092b9a1b5d62dfe74b9bb000000000000000000000000553f78c7a57ac7a0fa37b21901e24c3d36bd4c8b000000000000000000000000d9246840f0a78ded1e3f470a28377ab28c3c8c24000000000000000000000000723dced115247d0774045c24660a9b9678e296fd000000000000000000000000080e8d15778d437318dd44c48b7c3953dbfd00e00000000000000000000000004439df7cb48f2f6ea17c724ee150c91af15c3e260000000000000000000000005690378fdffc8d3b163f06d4d40dd37034231339000000000000000000000000937ae221a4721c37bccf2cea24681184f7a736d400000000000000000000000093eebcab06f7c547a696fbbce36b2fbab265011700000000000000000000000039779dbd798b0def667c63a284036d6810174efa00000000000000000000000057975f83611abb5d08c77582f36826e3c41aa4ea000000000000000000000000f828827a66030a11217c1e28a09b7b1fbf367cb80000000000000000000000005e511d3125cf68f2852666c3b834eb8cacef60e200000000000000000000000020d5daa23cd6ba8765bcf99ef21fabbb70dce3250000000000000000000000007bbb92511307adcf038f5d987b5713df1c5be7090000000000000000000000005de5e458e68b21735e806d58489c391a3e0c6e660000000000000000000000000f21997849a7b0dbc395620b48da8436e1ea5a3000000000000000000000000048a5aa1635e2c95b1594dc61c0e2bf675f545b86000000000000000000000000344ebe3cae3af1ae72df95c7cf811ff943cd5d8f000000000000000000000000acd642d43b45905254776f13d9ab514e605368a500000000000000000000000028cff10b503f7dc2ff72db12b3ee497fc2e334d90000000000000000000000000318bc5ba29f310d485699a2244f64a8417e16b000000000000000000000000001c68087c96e1955d611f5f899628670620a0db8000000000000000000000000001d9a41a66ac94c35966441e9cb60b98158fd5000000000000000000000000018b574c3f055c55da547b522b58d9b65c10a4f2d000000000000000000000000ee6bc91611dbe53ce16f8f732ae5f14d92f4740e0000000000000000000000000a9a5a4524b202f77c6dc9a6656b4aca253093d700000000000000000000000041123343552b84480c40c733cfb10225d4904c0a000000000000000000000000d9c93d3d90f7741553ce4e48a5126d566103f7ad000000000000000000000000e3bebff14373c559a521688af784c7e25b85e78f0000000000000000000000001716fe470217eb1cee4230c4fab42bb75a092e42000000000000000000000000c8d443ea782b593c50abb79405087f2bc5f3324900000000000000000000000034970e47b4b645bd0729cd450bc28e0972c33aa20000000000000000000000006c2dd526b93667f1021cca18bb2e775d05d2748e000000000000000000000000e57f4d7981cdb71436b7c76a66a4abd833163cd50000000000000000000000006570873fcec20eca117e1a599d2ae0c805726974000000000000000000000000c79d1c698f5afdc285ab7792fc3b8d9d2911880c0000000000000000000000008ef05eae95aee5b9519d551c17e06d8259982b1d0000000000000000000000001d2a72fb7603a388f58a150dac51b221400b4be10000000000000000000000002f7e50e3459e2bc6121015bc1a6e5a14f7a700e80000000000000000000000004fe840f4284d23d3cf77c2150b66687a7329eb16000000000000000000000000a3c26d2f46add7170f8c80566dd32b420d8f520600000000000000000000000058216a19d4cc7f52bc83295a642fae5444e846470000000000000000000000009f244438412d0ce7c8fa6bb23d0c610877e17c370000000000000000000000005f416d9b860e67b386ff70d6c9108f533f2165b80000000000000000000000006f048b42ef0da10c7d7097862b6beea4ebf1b808000000000000000000000000f0930f725b6d5033abec2d0ba5aea0be18790373000000000000000000000000d373806cb046868ec17a107c5c2487dd5c4e3ccc00000000000000000000000010322de1d6476d0c0efd2e07a48445751b5b7bfa000000000000000000000000670551ac75a1cf683c3067e9ba4c51b684209d3e0000000000000000000000002e8ab210a7376f409970584574f32dc399507ae0000000000000000000000000e5f5578d5b778f1dcc772f2553e22662ae26bad80000000000000000000000008e81eb3ffee58624564415881ae5e18e69982be0000000000000000000000000591f0299d00fd774b76089161b1b96d0c47afc4f0000000000000000000000009e39af1f4e5fb69a889219e799c306da1d0241ec000000000000000000000000d74343b3c1c004df416e4dd1465afbca6d374b1c0000000000000000000000008f142f26276e6ed76f4a8c15ea310f29f8b1969b000000000000000000000000ce17f06b74b025807057e50cc3aac494a192f06d000000000000000000000000b88648f845547985d2fddc1b80b7b3ad5f4689e70000000000000000000000003697593ecb36c794aae284c2a2cc4e56038c718d00000000000000000000000076a1b38e8c4d43af3511487df2c2e136d9b8ca5a000000000000000000000000196e6ca841461b38d0c27675e9f6006e832a24f70000000000000000000000007e505295606ae9078ecbc5cd6f01ea1b761bc36e0000000000000000000000008df40d4e0b4f4422a7b7f36b80fdb913b3cef64b000000000000000000000000623b16033b532b9be89cc90c746c071645e7e7680000000000000000000000001102b533199bd2c568a4e3217859cb9b6ed85ebf0000000000000000000000007434fcf0d5544987d60a2d78f0037ba3aae1035200000000000000000000000007faea3f8c024a15f3453ae610db85fd9815dfcb0000000000000000000000002202f7ffe0003bffda34b35e9985d7965ff3e71e00000000000000000000000092dcdb89b1b691fedcec51867e8368b39f629b410000000000000000000000003a057dc24ba481da1a823ca113df4d51365ef58f00000000000000000000000089d200d497bc7dda7f118ae4e8e07493fb4c9e8a00000000000000000000000096fb2eb26504124723d013691b2917bb4622bcb90000000000000000000000002bbf2e054ec3cb749b7b5450dbc1ab89d9e9dea90000000000000000000000007e11758787d9ac25a1cfde0e4356ffa4bdc67ea4000000000000000000000000a4f0a53e37d74721c120a7cd69261dff4b01dcf30000000000000000000000005ce2208360bd9457f5b98157ea2070d082869c160000000000000000000000008f1fcb6bf1450fa2da01f4aa21b3000e8576a5a2000000000000000000000000b3b00343a06a1ceb2b370117069fd9aa2bc98fee000000000000000000000000e5af171cff248582abf73eda84cf0b5af4895f23000000000000000000000000989df1d6a49877e83d5793c05998955e2fe8c5dd00000000000000000000000053082ad684bae8cd72e171eb3d321afd2d10a2fa000000000000000000000000161ec6167d1b385d4e081ee5bfcce2b1dd6af53a000000000000000000000000f97558d9968a9bbb38249dbc3f980adc24cb654b0000000000000000000000007ac5117cf72e25f4326f72d1b95467f89472dfa8000000000000000000000000ecc8d10bc69f6c2db30038c36b96e0f7adc86521000000000000000000000000fef9668b43dba041478812160362199673e8e0290000000000000000000000008ee1622091ea2861052f5a256a7d1e7de575fd6d000000000000000000000000aa8120d9416fdf2d40c02dad7f22d4e02529dd4c00000000000000000000000038f5d597d40c9ded878458e0c38175bb425a52af0000000000000000000000008914f67fe3882d4fd9f3209ac6d9237b68879810000000000000000000000000eb746d76a7c8b29c97fcff51aee7cc6108200f5b00000000000000000000000088df67a1a7a871bbdfc5e745410d192a7ea89dfd00000000000000000000000039b262c72e15b5b471e1d0ed9b95178d959c56280000000000000000000000006680ec5cbf91e9796f605ffec88541fcfe3cc6be000000000000000000000000722656be865af03b12fe5b1c065a789dfff35e6f000000000000000000000000aee9aa61c925235abe7d7466b0003f8eeea04596000000000000000000000000f265ed5d8049f404583db136af52b7187e6230e4000000000000000000000000f2dbd1c23017ae82c878a294decd2000c74af86100000000000000000000000039086038c6fd9edd7954caacbf90f3a02cb2ab0b000000000000000000000000557b479166a551f584894584d4e5867083bd33c20000000000000000000000004634c281fdf5e8c2eea53044fac0b9a95d6f6c7c000000000000000000000000d0ff729a4eb32c4badabddd1d6f8adeecaabd210000000000000000000000000483d1eb5a37fe54bea74b8ca2cdd3847513fd178000000000000000000000000f2d395d6f291b07d354e06de2d3647e0691a28de00000000000000000000000028fc36b54bf709bcfaf676c0428b25dc2455ae63000000000000000000000000a4c1d60559fd8b16fa28131093d93492308db452000000000000000000000000f220c794da42eed5ce17e0991443b3e35f5ab88c000000000000000000000000cc08aefc576cb40b4029d8bb75e61bdd81e85d28000000000000000000000000e8aca3088e5fdee430620ba4202c736f8b6e4e4e000000000000000000000000856774b9075b376bcb935d9812697a55064b35720000000000000000000000002998cb34fcfad2f26b7113c3ce88bd5a7c58311900000000000000000000000004ddd76cafa50cc89cf34e8c116eefeb792f2f88000000000000000000000000dd65c7f26fdff64af7c2c40e1fe8465fe637ad1c0000000000000000000000006eb4e5b535a493e34fc3d508c0af4983a82dd48200000000000000000000000090333dfc7794fa6d1a817f7e38f0bc34406d212300000000000000000000000043a9dbf80a29186387e6c5f5e26625807ac9f6a5000000000000000000000000441341d2ae106bd0fcb459a308e4152e905f83bf000000000000000000000000202ea64613e9b15e1975199587adab3f2af72d750000000000000000000000002801db6fb19196f29f12f4fc6d835597424c318b000000000000000000000000ba71fa4e69b79ebd0d1efa39c0c1b53ba1ba7016000000000000000000000000edd6a45bc87bbda1da8cf64de700e980b79efc2d000000000000000000000000b5bd4a8994d11909ecb0470e209988855934f9000000000000000000000000002aa02a06336d604b7763e2c349868ec349c499390000000000000000000000009c727b180c0baaff98963e6566de2dfb113f76f9000000000000000000000000042a51e721c4530333c3e28e7369b7460da20a6d000000000000000000000000891520304542c34f98048c70f8c6ada97cf8f70a000000000000000000000000ab6e5fffaadf1676e0b2228cb218a8f94ac4695f00000000000000000000000039f1f509696eb73e5bdfdb6c8644d3a2fc02343600000000000000000000000006b02e2197d76bf680570a9d82573466acc12c1b0000000000000000000000004c8161e471571378985e41890e4e1861c7840dd9000000000000000000000000f81ae0c52a5a0e9c3293d3326d3105e76fee333600000000000000000000000094754d23b0e52732f079f4bb96cd5eaaf11553170000000000000000000000000040e251888a53daf42a00388858d007233bdd7b000000000000000000000000f51a327ac124bc075ab2c9d8a4ff39edac1dcf8e0000000000000000000000003c299baf27a9c4b0dc6c778746177fa9729703d1000000000000000000000000d638540efce8f11b44c29ddde5ec468874f42c0a000000000000000000000000d92dbd3ebcc761473112247c0a3800bf9afe31c1000000000000000000000000d4730f1988a24857a77bcfe6cf080bfd9fa74547000000000000000000000000fbd08e27f2c68c3711da85ea58c5ecd7fbbbdd360000000000000000000000001591b13bd0a1bb7b9daeb564a0c4b85c07959835000000000000000000000000a3a99b74ca4fd9ce7b92aa1b75f45feb5f261a020000000000000000000000009343765818e0a474da2b07bd0ae5373fb52a1ebf000000000000000000000000b794ed1d932e0040e94420d260dabbee5795e46d00000000000000000000000088adf2b2b4fd07c1c437ecf167cc1f5bac08175000000000000000000000000022ea01b3e6923ac492917a26ac42070ba199c687000000000000000000000000ce66346dafbb6751883d413d96d15f84694991420000000000000000000000009169bf3051d0ded765c348f74b328eebc609138000000000000000000000000023df99d4e0a08fdc1dbd13cacc41980874038ebc0000000000000000000000002ff8988fb01e0f0f39c8792f0b241c19ab47958c000000000000000000000000ca534f8e5c109d14b15f332ade4ba87c5aba8cc20000000000000000000000003d54f82c40aa5908785b4fb701aa92c6917e7d9c000000000000000000000000f18dd34e3d982aaeba2d84f50aabdc189c3e5f110000000000000000000000008b8fe1cb88df091308b3df0471631025cf0212a500000000000000000000000075907212d234cc03117e94d5f6f678000f2f70a20000000000000000000000009293bfb6b977adc6dc682104dc8338f7ae3fe655000000000000000000000000b84bbc52c4e7bc56053d61048d8f44715512447100000000000000000000000001028f82a1021cb9f0c2edfd62aeb4309d07f6eb0000000000000000000000009a89a2a63ac937162a1fad567f078209e257e5a900000000000000000000000062842dc68b5d43adda8114334682f764829b16eb000000000000000000000000396a7d9becba28ca4fd44697185a9391323ceabb000000000000000000000000d5534bc03144b4d8be84c7282c625fd3ff05c5d300000000000000000000000042b618e539836a0f99b597eb94b8f4331ff10dcf000000000000000000000000dc5797a52648acbe2c4e0bec5ed60ac495f7a1790000000000000000000000003b549d9c35804b698294a7afb6ca8aefb734ac060000000000000000000000002d9de66624ec38e0d631a658d5e5e1b9bd25ad89000000000000000000000000396c24c6374df65649faa97392fd201c8d20a8e8000000000000000000000000a3b6fa41660d765b6ba6bd87b3e170011294d5cd000000000000000000000000fb7e4dce4851107fe8c0dcf8e7df0e42cb1eb973000000000000000000000000919e79aae1ca698faaf4b74dbea03df503dcda4e00000000000000000000000083966f40d188622f90b433c06260d989f7e4d1bd000000000000000000000000cccc29d9aa7c88deb7af824f11ac26db4a3b4fac000000000000000000000000f7015352d932caca81592aafccf0c6b7e24aecf40000000000000000000000007dc9bd52baafe15d6898c4af997e1af81ebd0e5e000000000000000000000000c47608d8eef1e4b8413e5318a72381627daa7e7200000000000000000000000029059bb3f1a7d1bb916ff31e9424ddf5aae8872f000000000000000000000000fe78c6fb9f8de4a47e5fe4ff0edf9b607e73fc720000000000000000000000005da4459ecbf94f3940f69fccb6b33d4d4b7d86ea000000000000000000000000fc3126abfd2177cf77653d1bde6c64e98190977a000000000000000000000000bed134747fe151158eda9f415b92ec60571356fb00000000000000000000000009dfa4f97708254a791493532077468ff4fb217e00000000000000000000000018bfafc3ff1be216d31cbc4209ce0c3978b85d0b00000000000000000000000067c9409cbe116bbb70ed0ca8119fb93305c92826000000000000000000000000255630d80ec864e0fc5348e3f247d93ceaab7c900000000000000000000000001fdb71ebae1f4fe3c0426d6eb7c2ac0462490aa0000000000000000000000000ef48245ec01534873c2b31283cf3aa99e64cde480000000000000000000000009c6e5421b47dfac8b1b691498b35d9fa03c92f6200000000000000000000000016615569803a4ac8ba44318a8aa15d537e94e37100000000000000000000000065dae5f3512bbdaa2cd9f64c810cab55c883cd9900000000000000000000000042ff543b0d4b923827533696dda1f8c83252b588000000000000000000000000c3815cbc1d65686d7b5976a94a454566b334e3f50000000000000000000000003a12c70739efa717f72f02c6f4ed397cc6e88d040000000000000000000000002fdf48747146b9987d07f7b1ffaef787725cb60900000000000000000000000094ac47ae2144bcfc9f60b9ed4ae7b89b6f9e84c8000000000000000000000000e7345382075daeb0dc716a00e520b49bf3616a2b00000000000000000000000076128ff68c1ae6015e588847cd8f86620cf5731e000000000000000000000000c95908a5ccaa047030de36258d234a8c9e79f881000000000000000000000000abf79548d8c2374b8255b6ef2ebc4e41c1979622000000000000000000000000b0b68e282de63738849a36468aeac1903f99686a00000000000000000000000033b57a260de0b54fcd0bf29f34616aebf3a25b35000000000000000000000000f7a15372dcdeefdf84d79aecead91bc813ebdbb20000000000000000000000004106291e1ef787542faaf44c864825b6d9efd1890000000000000000000000001d89397033387a8a2610154cea1b54135e41c6ed000000000000000000000000451476228066dbcd75d848342cc865882ef1a0f4000000000000000000000000be58f29a6cf79cf5c1e0564b261ea22c9578c9fe000000000000000000000000a783af1bd444e1ff4663f298a512f6773c2d7f8f0000000000000000000000003d9cb13c12fa57395f223fad116652169fd24a96000000000000000000000000500dd02bcf04eea4aa3e283c356b08c8820fdf6f000000000000000000000000d0dd8838a56e1126cc7b33e1e5b1401da8c175ba000000000000000000000000268e671504debb4e98d8de2f34f73f9074c5ed360000000000000000000000008f245c22e4dae966dbdb07c1dec61dde04da60c200000000000000000000000074eeaff7c75fbf736b498bbe4f87159b1e1c5826000000000000000000000000a3071b3e7fe6f5e1f0f2daabde8569add9cfc48000000000000000000000000001526886d0edf6708b08a402d4475d4d2298477500000000000000000000000077c44057fdd022696480fc2807299178e67fe4ba0000000000000000000000009dfd7c37205f5871d8e66e7600b8a344e0a3a4c70000000000000000000000000cae6f40fdbc2476729bacc69ce9eb9c4adc5da5000000000000000000000000fde920aa33179bec24ede8a507efe25746cc9e0b000000000000000000000000be7c1ad6c4347340d9c908fcc9b41e704671ef1300000000000000000000000029f028cf0fade4614e199beaf64e981b1b6dbc4f000000000000000000000000bf6a0fd146cfe1ab4da7fef8768e5d85b32febe10000000000000000000000002ae8886f05be47800363210809f8eb379e78645a0000000000000000000000004c4ad6fe9a0941257c498dc3e56a8077f3215c4e000000000000000000000000c1b6e487e0d635d8f91e17d5f4caf3e6069c81460000000000000000000000004361d4c74be521c6a07c5f45944a956ffeabcc340000000000000000000000005efe86140f9a520c7d73c6660a25411ff4c2546c0000000000000000000000000496c6dbbd10610be63d7dec19dc6cac448c5ed9000000000000000000000000d77252b7946525f9a978f97de45f5f3ad08bbdd600000000000000000000000017f6c741c9509c6db4695cca662bd5ff36fbb63b000000000000000000000000a71a70e13d386f5d38bc7587a53bf6903d7cc6fb0000000000000000000000008af1956af0f4e892780f193ef6ad8f222c33ebaf000000000000000000000000ddd06a89bf5bdd071246baa6358e84f64acfd6800000000000000000000000000de887ff75c4b1ab31a01839e12cae8ec40cdfde0000000000000000000000003e7939a09c71177be4989f7365bea9561872b0330000000000000000000000009d66f40c6f8ed6118085293e8b96401d29d25d830000000000000000000000004a7f40ef3320693344365709e4a1052d3dcd458a0000000000000000000000007512b4bbd34ade56d5439ea0a3504a0d466a037600000000000000000000000037da5d879e764000c436f7eeca90a152cb80853c000000000000000000000000d803664690eaa24e9e442e7a7a5687ea7f6a65ae000000000000000000000000b8108fd776923221f680fead3adb1ab70b14042300000000000000000000000036a115581b1eab1bf24bd5f6fc04d8f6c2853dde000000000000000000000000822ed083b82ddb919154f0e5ab80c0c1b60455c1000000000000000000000000eb260709b2600c4cdb49c761a5bb4a6732c9cdda000000000000000000000000497e43a3a0fe9d100e7be8a7813453aee95a35db00000000000000000000000021543deaf828ddbb7652c373c9eb01fcba108bc20000000000000000000000001106888affdce512ea766e093f50ee1eaf2bb2430000000000000000000000005c52a02dd5b0896d68531ebb1be0851e5c0e3e590000000000000000000000001926817ac38ceca27ef3553247f86e9f3f54977e00000000000000000000000009b67197cefa41633253fa09f7bfe4ef93fc1be7000000000000000000000000b8242b9f5d10a5ab793570875e8776ed5378bf480000000000000000000000009c035473f3848ddff699863d38f7ce7721bc3f970000000000000000000000008f7c4fc5e5c1568bdaf927311eca25f368a6170f0000000000000000000000008bd7f0dd6820bae8f3df50539eb77f3a961b16560000000000000000000000008b5c5b1f775bd19e31b79be477214253ae608a5a000000000000000000000000d8ff43ee98dd37120d31484376b241b6490627b2000000000000000000000000ad110aac20beb01e5c50ac72462ae0339f9e350000000000000000000000000056c6303f55b9e50192faa1325f9cd88b6c77d76300000000000000000000000019bd3df29b48a9d49b4b09889db34233a13a2c3e0000000000000000000000007e8d8b32cc8ca0b965baba131ab03f52523fbe01000000000000000000000000725b88307297bed33a01a6a1db35931401b26291000000000000000000000000b7af1eff4bacba55727ddbf79c97815fcc7bdf1300000000000000000000000007af59d447b6ed0ea7d17ad3943cd86af23e2027000000000000000000000000ef001a1e850736aa21f4cada2cd3601e4f62a5140000000000000000000000005132b853344956fd60f7cc0a9b40a3321cb5f07000000000000000000000000066c17e1d6bc6380ce999c7a0c2fd54590f83e50f000000000000000000000000e9cd08c49db53bb825986ce799d69a087f35030a000000000000000000000000d23a34582c0100a2cc7689b5c4383d88098b4163000000000000000000000000a971b36fbc9cb28d793effbfa73719c58fc0238a00000000000000000000000095fca3da6a3f92473137453c2755589b1e9cfe780000000000000000000000000d7c9d5d6a2d46d087d4eca7584d9348f24cb941000000000000000000000000e6faff1c0d108fcc66683eebfa76fc590c22d5360000000000000000000000002aef2366957dd563b36f61808f5eaf135ae4944f000000000000000000000000f4c5fc0c1593767727bde763e75f129028ee04bb00000000000000000000000000dab4dbf7acd7aa9ee47d78ebc24bfe71a36286000000000000000000000000d9a4fb670d3b9df26b13faae64496f0e0ee62b89000000000000000000000000b6ce1e6f73efa531230886f0321432f611c3e04f00000000000000000000000087e8c8ee68d3a340fc79e9af4cbaff8eb40476b0000000000000000000000000442e804387aaf428c1397e7d7568ed2cf7022c970000000000000000000000006dcd3e7cbbb52b2fbb168898ab5ec47ec4e07e57000000000000000000000000c5e969152554cce0c9382cdea22200e20d8a2da4000000000000000000000000693ae154a820943c7c851bd1868d153360dd3fa20000000000000000000000004b2308553cdd4c41207a464c267df0d02e734d19000000000000000000000000b78f1fc6ea19e11e46cebe53d51c3440a06183d30000000000000000000000001dd9b78e5ce39a3d442dd7a34a1f3f176f391c2d000000000000000000000000b8aa8ed2e3cee6ffb3be79fad0674b21a03ef0270000000000000000000000005ef17b179462d5cb4dd8f291359f67ee344dfdde00000000000000000000000013ebdaf521810c9b18982f125977f1f15c3dab21000000000000000000000000edd6de74fac212207d4456033d26325cd7ac3d6d000000000000000000000000040cc9e00b25ef6f06ae796e304fc64a9e66ba02000000000000000000000000a5a6e79c91b9fdb6891cffeb3108d411a7a248bc000000000000000000000000719f4aecc8249379deaa0326aa0db892b77406080000000000000000000000002f48f9e059d7e3f01dda9601e2929a7d4eb7c5fe0000000000000000000000008fd084f85e0f7ca0e16f294add2c95beb114eba00000000000000000000000005f5125b0b8aecf54d30c44ed61cee80a83b56a81000000000000000000000000248a394b6c59fdca148e70140146c5f38cb4fade00000000000000000000000047381bb067f0b7e1775067f8e65320b4085c59b1","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://281fd1753ac3343ff7b3ad585f10d9027896535d6b89f1a9ac79558d83ace9ae"}]}