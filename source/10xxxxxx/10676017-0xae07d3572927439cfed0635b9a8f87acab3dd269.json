{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract oDefiSale {\r\n    // check is admin\r\n    modifier onlyAdmin(){\r\n        require(msg.sender == owner, \"admin required\");\r\n        _;\r\n    }\r\n    \r\n    struct Order {\r\n        address ref;\r\n        address buyer;\r\n        uint256 amount;\r\n        uint8 round;\r\n        uint256 time;\r\n        uint256 block;\r\n    }\r\n    \r\n    // public variables\r\n    Order[] public orders;\r\n    uint8 public currentRound;\r\n    uint256 public countOrder;\r\n    uint256 public minOrder;\r\n    \r\n    // private variables\r\n    address payable private owner;\r\n\r\n    // Events\r\n    event OrderEvent(uint256 id);\r\n    \r\n    constructor ()\r\n    public\r\n    {\r\n        owner = msg.sender;\r\n        currentRound = 1;\r\n        countOrder = 0;\r\n        minOrder = 0.1 * 10**18;\r\n    }\r\n    \r\n    function order (address ref) public payable returns (bool success) {\r\n        \r\n        require(msg.value >= minOrder, \"min order\");\r\n            \r\n        orders.push(Order(\r\n            ref,\r\n            msg.sender,\r\n            msg.value,\r\n            currentRound,\r\n            block.timestamp,\r\n            block.number\r\n        ));\r\n        \r\n        \r\n        emit OrderEvent(countOrder);\r\n        \r\n        countOrder++;\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // ADMIN ONLY\r\n    function setCurrentRound (uint8 round) onlyAdmin public returns (bool success) {\r\n        currentRound = round;\r\n        return true;\r\n    }\r\n    \r\n    function setMinOrder (uint256 amount) onlyAdmin public returns (bool success) {\r\n        minOrder = amount;\r\n        return true;\r\n    }\r\n    \r\n    function withdraw (uint256 amount) onlyAdmin public returns (bool success) {\r\n        owner.transfer(amount);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"round\",\"type\":\"uint8\"}],\"name\":\"setCurrentRound\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setMinOrder\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"name\":\"ref\",\"type\":\"address\"},{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"round\",\"type\":\"uint8\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"block\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"order\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OrderEvent\",\"type\":\"event\"}]","ContractName":"oDefiSale","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://01e424d2f0d526ff778510f7988c4d49275b0928c3a868d6e343b946a8201be9"}]}