{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender == owner) {\r\n            _;\r\n        }\r\n    }\r\n}\r\n\r\ncontract QualityProduct is Owned {\r\n    enum TrackingStatus { Uninitialised, InProgress, Completed }\r\n\r\n    struct TimestampedProduct {\r\n        bytes32 product_hash;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    struct TimestampedTracking {\r\n        bytes32 tracking_hash;\r\n        uint256 timestamp;\r\n        TrackingStatus status;\r\n    }\r\n\r\n    string public name;\r\n\r\n    TimestampedProduct public product;\r\n\r\n    bytes32[] public tracking_identifiers;\r\n    mapping (bytes32 => TimestampedTracking) public trackings;\r\n    mapping (bytes32 => bytes32) public lot_to_tracking;\r\n\r\n    constructor(string memory _name, bytes32 _product_hash) public onlyOwner {\r\n        name = _name;\r\n        setProduct(_product_hash);\r\n    }\r\n\r\n    function setProduct(bytes32 _product_hash) public onlyOwner {\r\n        product = TimestampedProduct(_product_hash, now);\r\n    }\r\n\r\n    function setTracking(bytes32 _identifier, bytes32 _tracking_hash, TrackingStatus _status) public onlyOwner {\r\n        require(_identifier != 0);\r\n        require(_tracking_hash != 0);\r\n        require(_status != TrackingStatus.Uninitialised);\r\n\r\n        if (trackings[_identifier].status == TrackingStatus.Uninitialised) {\r\n            tracking_identifiers.push(_identifier);\r\n        }\r\n\r\n        trackings[_identifier] = TimestampedTracking(_tracking_hash, now, _status);\r\n    }\r\n\r\n    function setLotTracking(bytes32 _lot_identifier, bytes32 _tracking_identifier) public onlyOwner {\r\n        require(_lot_identifier != 0);\r\n        require(trackings[_tracking_identifier].status == TrackingStatus.Completed);\r\n\r\n        lot_to_tracking[_lot_identifier] = _tracking_identifier;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_product_hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lot_to_tracking\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"product\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"product_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_lot_identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_tracking_identifier\",\"type\":\"bytes32\"}],\"name\":\"setLotTracking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_product_hash\",\"type\":\"bytes32\"}],\"name\":\"setProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_tracking_hash\",\"type\":\"bytes32\"},{\"internalType\":\"enum QualityProduct.TrackingStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setTracking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tracking_identifiers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"trackings\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"tracking_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum QualityProduct.TrackingStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"QualityProduct","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040c319a3a406d98816bda721dad0d757db68eaa636e3d782e93ada4f9b77fc32d30000000000000000000000000000000000000000000000000000000000000006414c454ec3890000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3689e67bec82752dfb6067375970ab9da94213e4cf9678e08698c3810614c171"}]}