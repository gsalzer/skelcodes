{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.4\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface Minter:\r\n    def mint_for(gauge_addr: address, _for: address): nonpayable\r\n    def minted(addr: address, gauge: address) -> uint256: view\r\n\r\ninterface Gauge:\r\n    def claimable_tokens(addr: address) -> uint256: nonpayable\r\n    def integrate_fraction(addr: address) -> uint256: view\r\n\r\ninterface VestingEscrow:\r\n    def balanceOf(addr: address) -> uint256: view\r\n    def claim(addr: address): nonpayable\r\n\r\n\r\ncrv: constant(address) = 0xD533a949740bb3306d119CC777fa900bA034cd52\r\nminter: constant(address) = 0xd061D61a4d941c39E5453435B6345Dc261C2fcE0\r\nvesting: constant(address) = 0x575CCD8e2D300e2377B43478339E364000318E2c\r\n\r\n\r\n@external\r\ndef claimable(addr: address, gauges: address[8]) -> uint256:\r\n    total: uint256 = 0\r\n    total += VestingEscrow(vesting).balanceOf(addr)\r\n    for i in range(8):\r\n        if gauges[i] == ZERO_ADDRESS:\r\n            break\r\n        total += Gauge(gauges[i]).claimable_tokens(addr)\r\n    return total\r\n\r\n\r\n@external\r\ndef claim(gauges: address[8]):\r\n    if VestingEscrow(vesting).balanceOf(msg.sender) > 0:\r\n        VestingEscrow(vesting).claim(msg.sender)\r\n\r\n    # Enable with minter.toggle_approve_mint(self)\r\n    for i in range(8):\r\n        if gauges[i] == ZERO_ADDRESS:\r\n            break\r\n        Minter(minter).mint_for(gauges[i], msg.sender)","ABI":"[{\"name\":\"claimable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"addr\"},{\"type\":\"address[8]\",\"name\":\"gauges\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":12617},{\"name\":\"claim\",\"outputs\":[],\"inputs\":[{\"type\":\"address[8]\",\"name\":\"gauges\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":17751}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.4","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}