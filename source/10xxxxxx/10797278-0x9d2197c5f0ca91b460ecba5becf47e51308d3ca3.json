{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\n\r\n// SPDX-License-Identifier: MIT\r\ninterface ERC20Interface {\r\n    function totalSupply() \r\n\t\texternal \r\n\t\tview \r\n\t\treturns (uint);\r\n\r\n    function balanceOf(address tokenOwner) \r\n\t\texternal \r\n\t\tview \r\n\t\treturns (uint balance);\r\n    \r\n\tfunction allowance\r\n\t\t(address tokenOwner, address spender) \r\n\t\texternal \r\n\t\tview \r\n\t\treturns (uint remaining);\r\n\r\n    function transfer(address to, uint tokens) \t\t\t\texternal \r\n\t\treturns (bool success);\r\n    \r\n\tfunction approve(address spender, uint tokens) \t\texternal \r\n\t\treturns (bool success);\r\n\r\n    function transferFrom \r\n\t\t(address from, address to, uint tokens) \t\t\t\texternal \r\n\t\treturns (bool success);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    \r\n    \r\n}\r\n\r\ncontract GrowthEscrowContract {\r\n    \r\n    address private owner; \r\n    uint256 public time; \r\n    uint public requestedAmount;\r\n    \r\n    uint public constant delay = 604800; \r\n    \r\n\r\n    ERC20Interface private constant token = ERC20Interface(0x09e64c2B61a5f1690Ee6fbeD9baf5D6990F8dFd0);\r\n\r\n    constructor () {\r\n        owner = msg.sender;\r\n        time = block.timestamp; \r\n        requestedAmount = 0;\r\n    }\r\n    \r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner, \"Unauthorized to call. \");\r\n        _;\r\n    }\r\n    \r\n\r\n    function depositToken(uint amount) public onlyOwner {\r\n   \r\n        require(amount > 0, \"Amount must be greater than zero. \");\r\n        require(token.transferFrom(msg.sender, address(this), amount) == true, \"Inefficent balance or Unauthorized\");\r\n        \r\n    }\r\n\r\n\r\n    function withdrawToken() public onlyOwner {\r\n\r\n        \r\n        require(block.timestamp >= (time + delay) , \"Cannot withdraw until 7 days afer requested. \");\r\n        require(requestedAmount > 0, \"There are currently no pending withraws to be processed. \");\r\n        \r\n        require(token.transfer(msg.sender, requestedAmount) == true, \"Inefficient balance. \");\r\n        requestedAmount = 0;\r\n        \r\n    }\r\n    \r\n\r\n    function requestWithdraw(uint amount) public onlyOwner {\r\n\r\n        require(amount > 0, \"Amount must be greater than zero. \");\r\n        require(amount <= token.balanceOf(address(this)), \"Amount requested is greater than balance on contract \");\r\n        require(requestedAmount == 0, \"There is already an amount requested pending.  \");\r\n        time = block.timestamp;\r\n        requestedAmount = amount;\r\n        \r\n    }\r\n    \r\n\r\n    function cancelWithdrawRequest() public onlyOwner {\r\n\r\n        require(requestedAmount > 0, \"There are currently no requested amounts to be cancelled. \");\r\n        requestedAmount = 0; \r\n    }\r\n    \r\n\r\n    function getBalance() view public returns (uint) {\r\n     \r\n        return token.balanceOf(address(this));\r\n    }\r\n    \r\n\r\n    function updateOwner(address newOwner) public onlyOwner {\r\n\r\n        owner = newOwner; \r\n    }\r\n    \r\n\r\n    function getOwner() view public returns (address) {\r\n        return owner; \r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cancelWithdrawRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GrowthEscrowContract","CompilerVersion":"v0.7.1+commit.f4a555be","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ae957b16f85a4a8ad554b408b7d4746868759e4e7da3eeb8c8b751ca6cc6bc93"}]}