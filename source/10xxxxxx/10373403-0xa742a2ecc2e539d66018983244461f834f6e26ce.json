{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n// -------------------------------------------------\r\n// Coronnavirus Economic Relief Fund 90% payouts / 10% overhead with Ethereum tokenized investment potential via future Exchange trading\r\n// aronline.io\r\n// COR token sale contract\r\n// static priced at 5000 tokens per Eth\r\n// 1 vote per Token re: payouts\r\n// -------------------------------------------------\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() internal {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract safeMath {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    safeAssert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeAssert(bool assertion) internal pure {\r\n    if (!assertion) revert();\r\n  }\r\n}\r\n\r\ncontract StandardToken is owned, safeMath {\r\n  function balanceOf(address who) view public returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract CORCrowdsale is owned, safeMath {\r\n  // owner/admin & token reward\r\n  address        public admin                     = owner;\r\n  StandardToken  public tokenReward;\r\n\r\n  // multi-sig addresses and price variable\r\n  address public beneficiaryWallet;\r\n  uint256 public tokensPerEthPrice;\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  // default function, map admin\r\n  function CORCrowdsale() public onlyOwner {\r\n          admin = msg.sender;\r\n          tokenReward                             = StandardToken(0xB3352b5Da464f81DcD860d84CaCf5e254467D6c2);\r\n          beneficiaryWallet                       = 0xf173a871D7b05E793bF15A208009759681779493;\r\n          tokensPerEthPrice                       = 5000;\r\n  }\r\n\r\n  function BuyCORtokens() public payable {\r\n    require(!(msg.value == 0));\r\n    tokenReward.transfer(msg.sender, safeMul(tokensPerEthPrice,msg.value));\r\n  }\r\n\r\n  function () public payable {\r\n    require(msg.data.length == 0);\r\n    BuyCORtokens();\r\n  }\r\n\r\n  function beneficiaryMultiSigWithdraw(uint256 _amount) public onlyOwner {\r\n    beneficiaryWallet.transfer(_amount);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"beneficiaryMultiSigWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"BuyCORtokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiaryWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CORCrowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://29b012eb56fee6394cfd27810327070a824bc9461cc155af4d6aca08a08c2d25"}]}