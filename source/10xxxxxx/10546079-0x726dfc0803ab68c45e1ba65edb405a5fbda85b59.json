{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\nlibrary SafeMath\r\n{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    \t{\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent ChangeOwner(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n  \t\r\n  \tconstructor() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n  \t\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n  \t{\r\n    \trequire(_to != owner);\r\n    \trequire(_to != address(0x0));\r\n\r\n        address from = owner;\r\n      \towner = _to;\r\n  \t    \r\n      \temit ChangeOwner(from, _to);\r\n  \t}\r\n}\r\n\r\ncontract ERC20Interface\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    function totalSupply() view public returns (uint _supply);\r\n    function balanceOf( address _who ) public view returns (uint _value);\r\n    function transfer( address _to, uint _value) public returns (bool _success);\r\n    function approve( address _spender, uint _value ) public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\r\n}\r\n\r\ncontract GIGXToken is ERC20Interface, OwnerHelper\r\n{\r\n    using SafeMath for uint;\r\n    \r\n    string public name;\r\n    uint public decimals;\r\n    string public symbol;\r\n    \r\n    uint constant private E18 = 1000000000000000000;\r\n    uint constant private month = 2592000;\r\n\t\r\n\t//Thursday, 27-Aug-20 00:00:00 UTC RFC 2822\r\n    uint constant private eventStartDate = 1598486400;\r\n\r\n    // Total                                            5,000,000,000 \r\n    uint constant public maxTotalSupply =            5000000000 * E18;\r\n    \r\n    // Early bird(2 years Lockup)                         1,000,000,000(20%)\r\n    uint constant public maxEarlyBirdSupply =             1000000000 * E18;\r\n    uint constant public earlyBirdLockDate        = 24 * month;\r\n    uint public earlyBirdVestingTime;\r\n    // Platform development and maintenance(20month vesting)  1,000,000,000(20%)\r\n    uint constant public maxPlDvnMtSupply =              1000000000 * E18;\r\n    uint constant public pldvnmtVestingTime = 20;\r\n    uint constant public pldvnmtVestingSupply = maxPlDvnMtSupply / pldvnmtVestingTime;\r\n    mapping (uint => uint) public pldvnmtVestingTimer;\r\n    mapping (uint => uint) public pldvnmtVestingBalances;\r\n    // Marketing(15month vesting)                              750,000,000 (15%)\r\n    uint constant public maxMktSupply =              750000000 * E18;\r\n    uint constant public mktVestingTime = 15;\r\n    uint constant public mktVestingSupply = maxMktSupply / mktVestingTime;\r\n    mapping (uint => uint) public mktVestingTimer;\r\n    mapping (uint => uint) public mktVestingBalances;\r\n    // gig# membership                               500,000,000 (10%)\r\n    uint constant public maxMembershipSupply =        500000000 * E18;\r\n    // Talent reward(10month vesting)                 500,000,000 (10%)\r\n    uint constant public maxTalentRwdSupply =      500000000 * E18;\r\n    uint constant public talentRwdVestingTime = 10;\r\n    uint constant public talentRwdVestingSupply = maxTalentRwdSupply / talentRwdVestingTime;\r\n    mapping (uint => uint) public talentRwdVestingTimer;\r\n    mapping (uint => uint) public talentRwdVestingBalances;\r\n    // User Reward(10month vesting)                    500,000,000 (10%)\r\n    uint constant public maxUserRwdSupply =        500000000 * E18;\r\n    uint constant public userRwdRewardVestingTime = 10;\r\n    uint constant public userRwdVestingSupply = maxUserRwdSupply / userRwdRewardVestingTime;\r\n    mapping (uint => uint) public userRwdVestingTimer;\r\n    mapping (uint => uint) public userRwdVestingBalances;\r\n    // Partners(1 year Lockup)                        250,000,000 (5%)\r\n    uint constant public maxPartnerSupply =           250000000 * E18;\r\n    uint constant public partnerLockDate        = 12 * month;\r\n    uint public partnerVestingTime;\r\n    // Team(2 years Lockup)                                250,000,000 (5%)\r\n    uint constant public maxTeamSupply =             250000000 * E18;\r\n    uint constant public teamLockDate        = 24 * month;\r\n    uint public teamVestingTime;\r\n    // Reserve(5month vesting)                          250,000,000 (5%)\r\n    uint constant public maxRsvSupply =             250000000 * E18;\r\n    uint constant public rsvVestingTime = 5;\r\n    uint constant public rsvVestingSupply = maxRsvSupply / rsvVestingTime;\r\n    mapping (uint => uint) public rsvVestingTimer;\r\n    mapping (uint => uint) public rsvVestingBalances;\r\n    \r\n    uint public totalTokenSupply;\r\n    uint public tokenIssuedEarlyBird;\r\n    uint public tokenIssuedPlDvnMt;\r\n    uint public tokenIssuedMkt;\r\n    uint public tokenIssuedMembership;\r\n    uint public tokenIssuedTalantRwd;\r\n    uint public tokenIssuedUserRwd;\r\n    uint public tokenIssuedPartner;\r\n    uint public tokenIssuedTeam;\r\n    uint public tokenIssuedRsv;\r\n\r\n    uint public burnTokenSupply;\r\n    \r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n    \r\n    \r\n    \r\n    bool public tokenLock = false;\r\n    \r\n    event EarlyBirdIssue(address indexed _to, uint _tokens);\r\n    event PlDvnMtIssue(address indexed _to, uint _tokens);\r\n    event MktIssue(address indexed _to, uint _tokens);\r\n    event MembershipIssue(address indexed _to, uint _tokens);\r\n    event TalentRwdIssue(address indexed _to, uint _tokens);\r\n    event UserRwdIssue(address indexed _to, uint _tokens);\r\n    event PartnerIssue(address indexed _to, uint _tokens);\r\n    event TeamIssue(address indexed _to, uint _tokens);\r\n    event RsvIssue(address indexed _to, uint _tokens);\r\n    \r\n    event Burn(address indexed _from, uint _tokens);\r\n    \r\n\r\n    constructor() public\r\n    {\r\n        name        = \"gig#\";\r\n        decimals    = 18;\r\n        symbol      = \"GIGX\";\r\n\r\n        totalTokenSupply    = 0;\r\n        tokenIssuedEarlyBird   = 0;\r\n        tokenIssuedPlDvnMt      = 0;\r\n        tokenIssuedMkt          = 0;\r\n        tokenIssuedMembership     = 0;\r\n        tokenIssuedTalantRwd      = 0;\r\n        tokenIssuedUserRwd    = 0;\r\n        tokenIssuedPartner    = 0;\r\n        tokenIssuedTeam     = 0;\r\n        tokenIssuedRsv     = 0;\r\n\r\n        burnTokenSupply     = 0;\r\n\r\n        earlyBirdVestingTime = eventStartDate + earlyBirdLockDate;\r\n        partnerVestingTime = eventStartDate + partnerLockDate;\r\n        teamVestingTime = eventStartDate + teamLockDate;\r\n        \r\n        for(uint i = 0; i < pldvnmtVestingTime; i++)\r\n        {\r\n            pldvnmtVestingTimer[i] =  eventStartDate + (month * i);\r\n            pldvnmtVestingBalances[i] = pldvnmtVestingSupply;\r\n        }\r\n        \r\n        for(uint i = 0; i < mktVestingTime; i++)\r\n        {\r\n            mktVestingTimer[i] = eventStartDate + (month * i);\r\n            mktVestingBalances[i] = mktVestingSupply;\r\n        }\r\n\r\n        for(uint i = 0; i < talentRwdVestingTime; i++)\r\n        {\r\n            talentRwdVestingTimer[i] = eventStartDate + (month * i);\r\n            talentRwdVestingBalances[i] = talentRwdVestingSupply;\r\n        }\r\n\r\n        for(uint i = 0; i < userRwdRewardVestingTime; i++)\r\n        {\r\n            userRwdVestingTimer[i] = eventStartDate + (month * i);\r\n            userRwdVestingBalances[i] = userRwdVestingSupply;\r\n        }\r\n        for(uint i = 0; i < rsvVestingTime; i++)\r\n        {\r\n            rsvVestingTimer[i] = eventStartDate + (month * i);\r\n            rsvVestingBalances[i] = rsvVestingSupply;\r\n        }\r\n        \r\n        require(maxTotalSupply == maxEarlyBirdSupply + maxPlDvnMtSupply + maxMktSupply + maxMembershipSupply + maxTalentRwdSupply + maxUserRwdSupply + maxPartnerSupply + maxTeamSupply + maxRsvSupply);\r\n    }\r\n    \r\n    // ERC - 20 Interface -----\r\n\r\n    function totalSupply() view public returns (uint) \r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n    \r\n    function balanceOf(address _who) view public returns (uint) \r\n    {\r\n        return balances[_who];\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        approvals[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true; \r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) view public returns (uint) \r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n        \r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // Vesting Function -----\r\n    \r\n    function earlyBirdIssue(address _to) onlyOwner public\r\n    {\r\n        \r\n        uint nowTime = now;\r\n        require(nowTime > earlyBirdVestingTime);\r\n        \r\n        uint tokens = maxEarlyBirdSupply;\r\n\r\n        require(maxEarlyBirdSupply >= tokenIssuedEarlyBird.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedEarlyBird = tokenIssuedEarlyBird.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit EarlyBirdIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 0 ~ 19\r\n    function pldvnmtIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(_time < pldvnmtVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > pldvnmtVestingTimer[_time] );\r\n        \r\n        uint tokens = pldvnmtVestingSupply;\r\n\r\n        require(tokens == pldvnmtVestingBalances[_time]);\r\n        require(maxPlDvnMtSupply >= tokenIssuedPlDvnMt.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        pldvnmtVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedPlDvnMt = tokenIssuedPlDvnMt.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit PlDvnMtIssue(_to, tokens);\r\n    }\r\n    // _time : 0 ~ 14\r\n    function mktIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(_time < mktVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > mktVestingTimer[_time] );\r\n        \r\n        uint tokens = mktVestingSupply;\r\n\r\n        require(tokens == mktVestingBalances[_time]);\r\n        require(maxMktSupply >= tokenIssuedMkt.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        mktVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedMkt = tokenIssuedMkt.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit MktIssue(_to, tokens);\r\n    }\r\n    function membershipIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedMembership == 0);\r\n        \r\n        uint tokens = maxMembershipSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedMembership = tokenIssuedMembership.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit MembershipIssue(_to, tokens);\r\n    }\r\n    // _time : 0 ~ 9\r\n    function talentRwdIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(_time < talentRwdVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > talentRwdVestingTimer[_time] );\r\n        \r\n        uint tokens = talentRwdVestingSupply;\r\n\r\n        require(tokens == talentRwdVestingBalances[_time]);\r\n        require(talentRwdVestingSupply >= tokenIssuedTalantRwd.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        talentRwdVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedTalantRwd = tokenIssuedTalantRwd.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit TalentRwdIssue(_to, tokens);\r\n    }\r\n    // _time : 0 ~ 9\r\n    function userRwdIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(_time < mktVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > userRwdVestingTimer[_time] );\r\n        \r\n        uint tokens = userRwdVestingSupply;\r\n\r\n        require(tokens == userRwdVestingBalances[_time]);\r\n        require(maxMktSupply >= tokenIssuedUserRwd.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        userRwdVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedUserRwd = tokenIssuedUserRwd.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit UserRwdIssue(_to, tokens);\r\n    }\r\n    function partnerIssue(address _to) onlyOwner public\r\n    {\r\n        uint nowTime = now;\r\n        require(nowTime > partnerVestingTime);\r\n        \r\n        uint tokens = maxPartnerSupply;\r\n\r\n        require(maxPartnerSupply >= tokenIssuedPartner.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedPartner = tokenIssuedPartner.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit PartnerIssue(_to, tokens);\r\n    }\r\n    function teamIssue(address _to) onlyOwner public\r\n    {\r\n        uint nowTime = now;\r\n        require(nowTime > teamVestingTime);\r\n        \r\n        uint tokens = maxTeamSupply;\r\n\r\n        require(maxTeamSupply >= tokenIssuedTeam.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedTeam = tokenIssuedTeam.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit TeamIssue(_to, tokens);\r\n    }\r\n     // _time : 0 ~ 4\r\n    function rsvIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(_time < rsvVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > rsvVestingTimer[_time] );\r\n        \r\n        uint tokens = rsvVestingSupply;\r\n\r\n        require(tokens == rsvVestingBalances[_time]);\r\n        require(rsvVestingSupply >= tokenIssuedRsv.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        rsvVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedRsv = tokenIssuedRsv.add(tokens);\r\n        \r\n        emit Transfer(address(0x0), _to, tokens);\r\n        emit RsvIssue(_to, tokens);\r\n    }\r\n    \r\n    \r\n    // -----\r\n    \r\n    // Lock Function -----\r\n    \r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == owner)\r\n        {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    function setTokenUnlock() onlyOwner public\r\n    {\r\n        require(tokenLock == true);\r\n        \r\n        tokenLock = false;\r\n    }\r\n    \r\n    function setTokenLock() onlyOwner public\r\n    {\r\n        require(tokenLock == false);\r\n        \r\n        tokenLock = true;\r\n    }\r\n    \r\n    \r\n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner public\r\n    {\r\n\r\n        if(_contract == address(0x0))\r\n        {\r\n            uint eth = _value.mul(10 ** _decimals);\r\n            msg.sender.transfer(eth);\r\n        }\r\n        else\r\n        {\r\n            uint tokens = _value.mul(10 ** _decimals);\r\n            ERC20Interface(_contract).transfer(msg.sender, tokens);\r\n            \r\n            emit Transfer(address(0x0), msg.sender, tokens);\r\n        }\r\n    }\r\n    \r\n    function burnToken(uint _value) onlyOwner public\r\n    {\r\n        uint tokens = _value * E18;\r\n        \r\n        require(balances[msg.sender] >= tokens);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        \r\n        burnTokenSupply = burnTokenSupply.add(tokens);\r\n        totalTokenSupply = totalTokenSupply.sub(tokens);\r\n        \r\n        emit Transfer(msg.sender, address(0x0),tokens);\r\n        emit Burn(msg.sender, tokens);\r\n    }\r\n    \r\n    function close() onlyOwner public\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    // -----\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"EarlyBirdIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MembershipIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MktIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"PartnerIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"PlDvnMtIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"RsvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TalentRwdIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TeamIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"UserRwdIssue\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"earlyBirdIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEarlyBirdSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMembershipSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMktSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPartnerSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPlDvnMtSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRsvSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTalentRwdSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTeamSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxUserRwdSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"membershipIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"mktIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mktVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mktVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"partnerIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partnerLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partnerVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"pldvnmtIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pldvnmtVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pldvnmtVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pldvnmtVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pldvnmtVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"rsvIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rsvVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rsvVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rsvVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rsvVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"talentRwdIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"talentRwdVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"talentRwdVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"talentRwdVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"talentRwdVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"teamIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedEarlyBird\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMembership\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPartner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPlDvnMt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedRsv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedTalantRwd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedUserRwd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"userRwdIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userRwdRewardVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRwdVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userRwdVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRwdVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GIGXToken","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3249de52d0d2b065c5f303c77a518e9d2af291e278a1b2dce225cb4992722582"}]}