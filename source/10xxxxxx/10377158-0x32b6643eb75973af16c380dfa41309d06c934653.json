{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n/**\r\n * Math operations with safety checks\r\n */\r\ncontract SafeMath {\r\n  function safeMul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\n\r\n interface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n}\r\ninterface tokenTransferUSDT {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balances(address receiver) returns(uint256);\r\n}\r\ncontract B11 is SafeMath,owned{\r\n\r\n   tokenTransfer public b11TokenTransfer; \r\n   \r\n  tokenTransferUSDT public bebTokenTransferUSDT;\r\n\r\n    \r\n    string public constant name = 'B11 Coin';\r\n    string public constant symbol = 'B11';\r\n    uint256 public constant decimals = 18;\r\n    uint256 public constant totalSupply = 500 * 1000 * 10 ** decimals;\r\n\r\n    uint256 public constant USDTPRICE = 7;\r\n    uint256 public constant ACOPY = 100 * 10 ** decimals;\r\n\r\n    uint256 public constant FounderAllocation = 500 * 10000 * 10 ** decimals;\r\n    uint256 public constant FounderLockupAmount = 300 * 10000 * 10 ** decimals;\r\n    uint256 public constant FounderLockupCliff = 180 days;\r\n    uint256 public constant FounderReleaseInterval = 30 days;\r\n    uint256 public constant FounderReleaseAmount = 50 * 10000 * 10 ** decimals;\r\n\r\n    address public founder = address(0);\r\n    uint256 public founderLockupStartTime = 0;\r\n    uint256 public founderReleasedAmount = 0;\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed from, address indexed to, uint256 value);\r\n    event ChangeFounder(address indexed previousFounder, address indexed newFounder);\r\n    event SetMinter(address indexed minter);\r\n uint256 yuerbaoAmount;\r\n    uint256 dingqibaoAmount;\r\n   uint256 bebjiage;\r\n    uint256 bebtime;\r\n    uint256 usdtex;\r\n        struct useryuerbao{\r\n        uint256 amount;\r\n        uint256 lixishouyi;\r\n        uint256 cunkuantime;\r\n        bool vote;\r\n    }\r\n    struct userDingqi{\r\n        uint256 amount;\r\n        uint256 lixishouyi;\r\n        uint256 cunkuantime;\r\n        uint256 yuefen;\r\n        bool vote;\r\n    }\r\n    mapping(address=>useryuerbao)public users;\r\n    mapping(address=>userDingqi)public userDingqis;\r\n    \r\n   function B11(address _tokenAddress,address _tokenUsdtAddress) {\r\n\t\tb11TokenTransfer=tokenTransfer(_tokenAddress);\r\n\t\t bebTokenTransferUSDT =tokenTransferUSDT(_tokenUsdtAddress);\r\n\r\n    }\r\n    function setUSDT(uint256 _value) public{\r\n         require(_value>=10000000);\r\n         uint256 _valueToBEB=SafeMath.safeDiv(_value,1000000);\r\n         uint256 _valueToBEBs=_valueToBEB*10**18;\r\n         uint256 _usdts=SafeMath.safeMul(_value,120);//100;\r\n         uint256 _usdt=SafeMath.safeDiv(_usdts,100);//100;\r\n         uint256 _bebex=SafeMath.safeMul(bebjiage,usdtex);\r\n         uint256 _usdtexs=SafeMath.safeDiv(1000000000000000000,_bebex);\r\n         uint256 _usdtex=SafeMath.safeMul(_usdtexs,bebjiage);\r\n     }\r\n    function release() public {\r\n        uint256 currentTime = block.timestamp;\r\n        uint256 cliffTime = SafeMath.safeAdd(founderLockupStartTime,FounderLockupCliff);\r\n        if (currentTime < cliffTime) return;\r\n        if (founderReleasedAmount >= FounderLockupAmount) return;\r\n        uint256 month = SafeMath.safeSub(currentTime,cliffTime);\r\n        uint256 releaseAmount = SafeMath.safeMul(month,FounderReleaseAmount);\r\n        if (releaseAmount > FounderLockupAmount) releaseAmount = FounderLockupAmount;\r\n        if (releaseAmount <= founderReleasedAmount) return;\r\n        uint256 amount = SafeMath.safeSub(releaseAmount,founderReleasedAmount);\r\n    }\r\n     function yuerbaoCunkuan()payable public{\r\n        require(tx.origin == msg.sender);\r\n        useryuerbao storage _user=users[msg.sender];\r\n        require(!_user.vote,\"Please withdraw money first.！\");\r\n        _user.amount=msg.value;\r\n        _user.cunkuantime=now;\r\n        _user.vote=true;\r\n        yuerbaoAmount+=msg.value;\r\n    }\r\n    function yuerbaoQukuan() public{\r\n        require(tx.origin == msg.sender);\r\n        useryuerbao storage _users=users[msg.sender];\r\n        require(_users.vote,\"You have no deposit！\");\r\n        uint256 _amount=_users.amount;\r\n        uint256 lixieth=_amount*bebjiage/100;\r\n        uint256 minteeth=lixieth/365/1440;\r\n        uint256 _minte=(now-_users.cunkuantime)/60;\r\n        require(_minte>=1,\"Must be greater than one minute \");\r\n        uint256 _shouyieth=minteeth*_minte;\r\n        uint256 _sumshouyis=_amount+_shouyieth;\r\n        require(this.balance>=_sumshouyis,\"Sorry, your credit is running low！\");\r\n        msg.sender.transfer(_sumshouyis);\r\n        _users.amount=0;\r\n        _users.cunkuantime=0;\r\n        _users.vote=false;\r\n        _users.lixishouyi+=_shouyieth;\r\n    }\r\n    function withdrawToken(address _toAddress,uint256 amount) public onlyOwner {\r\n         b11TokenTransfer.transfer(_toAddress,amount);\r\n    }\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function changeFounder(address _founder) public onlyOwner {\r\n        require(_founder != address(0), \"TristersLightCoin: founder is the zero address\");\r\n\r\n        emit ChangeFounder(founder, _founder);\r\n        founder = _founder;\r\n    }\r\n     function ()payable{\r\n        \r\n    }\r\n     function DayQuKuan(uint256 amount) public onlyOwner{\r\n        msg.sender.transfer(amount);\r\n   }\r\n    function random(uint256 randomyType)  internal returns(uint256 num){\r\n        uint256 random = uint256(keccak256(randomyType,now));\r\n         uint256 randomNum = random%101;\r\n         if(randomNum<1){\r\n             randomNum=1;\r\n         }\r\n         if(randomNum>100){\r\n            randomNum=100; \r\n         }\r\n         \r\n         return randomNum;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockupStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUSDT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FounderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FounderLockupAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"yuerbaoCunkuan\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DayQuKuan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FounderReleaseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"yuerbaoQukuan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDingqis\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"lixishouyi\",\"type\":\"uint256\"},{\"name\":\"cunkuantime\",\"type\":\"uint256\"},{\"name\":\"yuefen\",\"type\":\"uint256\"},{\"name\":\"vote\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"lixishouyi\",\"type\":\"uint256\"},{\"name\":\"cunkuantime\",\"type\":\"uint256\"},{\"name\":\"vote\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"b11TokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransferUSDT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACOPY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USDTPRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FounderLockupCliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FounderReleaseInterval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_tokenUsdtAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousFounder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"ChangeFounder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"SetMinter\",\"type\":\"event\"}]","ContractName":"B11","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005fbba0d6465cb4200e035b8ba759c1af20ea827e000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4619a66095ac6696af740f5e63ba71df263ba6439b693a74d7571db667769dc1"}]}