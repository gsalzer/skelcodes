{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\n\r\ncontract Ownable {\r\n  address payable public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  \r\n  function transferOwnership(address payable newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract Destructible is Ownable {\r\n\r\n  constructor() public payable { }\r\n\r\n  \r\n  function destroy() public onlyOwner {\r\n    selfdestruct(owner);\r\n  }\r\n\r\n  function destroyAndSend(address payable _recipient) public onlyOwner {\r\n    selfdestruct(_recipient);\r\n  }\r\n}\r\n\r\ninterface FundingContract {\r\n  \r\n  event PayoutWithdrawed(address toAddress, uint256 amount, address triggered);\r\n  event NewDeposit(address from, uint256 amount);\r\n\r\n  \r\n  \r\n  function owner() external view returns (address);\r\n  \r\n  function withdrawLimit() external view returns(uint256);\r\n  function withdrawPeriod() external view returns(uint256);\r\n  function lastWithdraw() external view returns(uint256);\r\n  function canWithdraw() external view returns(bool);\r\n  function cancelled() external view returns (bool);\r\n  function totalNumberOfPayoutsLeft() external view returns (uint256);\r\n\r\n  \r\n  \r\n  function withdraw() external;\r\n  function deposit(address donator, uint256 amount) external;\r\n  function paybackTokens(address payable originalPayee, uint256 amount) external;\r\n  function toggleCancellation() external returns(bool);\r\n}\r\n\r\ninterface Deployer {\r\n    function deploy(\r\n        uint256 _numberOfPlannedPayouts,\r\n        uint256 _withdrawPeriod,\r\n        uint256 _campaignEndTime,\r\n        uint256 _amountPerPayment,\r\n        address payable __owner,\r\n        address _tokenAddress,\r\n        address _adminAddress\r\n    ) external returns (FundingContract c);\r\n}\r\n\r\ncontract DeploymentManager is Destructible {\r\n    struct DeployedContract {\r\n        address deployer;\r\n        address contractAddress;\r\n    }\r\n\r\n    modifier isAllowedUser() {\r\n        require(\r\n            allowedUsers[msg.sender] == true,\r\n            \"You are not allowed to deploy a campaign.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    Deployer erc20Deployer;\r\n    \r\n\r\n    mapping(address => bool) public allowedUsers;\r\n    mapping(address => DeployedContract[]) public deployedContracts;\r\n    mapping(address => uint256) public contractsCount;\r\n\r\n    constructor(address _erc20Deployer) public {\r\n        erc20Deployer = Deployer(_erc20Deployer);\r\n        allowedUsers[msg.sender] = true;\r\n    }\r\n\r\n    event NewFundingContract(\r\n        address indexed deployedAddress,\r\n        address indexed deployer\r\n    );\r\n\r\n    function updateERC20Deployer(address _erc20Deployer) external onlyOwner {\r\n        erc20Deployer = Deployer(_erc20Deployer);\r\n    }\r\n\r\n    function updateAllowedUserPermission(address _user, bool _isAllowed)\r\n        external\r\n        onlyOwner\r\n    {\r\n        require(_user != address(0), \"User must be a valid address\");\r\n        allowedUsers[_user] = _isAllowed;\r\n    }\r\n\r\n    function deploy(\r\n        uint256 _numberOfPlannedPayouts,\r\n        uint256 _withdrawPeriod,\r\n        uint256 _campaignEndTime,\r\n        uint256 _amountPerPayment,\r\n        address payable __owner,\r\n        address _tokenAddress\r\n    ) external isAllowedUser {\r\n        if (_tokenAddress == address(0)) {\r\n            revert(\"Can only deploy ERC20 Funding Campaign Contract\");\r\n        }\r\n\r\n        FundingContract c = erc20Deployer.deploy(\r\n            _numberOfPlannedPayouts,\r\n            _withdrawPeriod,\r\n            _campaignEndTime,\r\n            _amountPerPayment,\r\n            __owner,\r\n            _tokenAddress,\r\n            msg.sender\r\n        );\r\n        deployedContracts[msg.sender].push(\r\n            DeployedContract(msg.sender, address(c))\r\n        );\r\n        contractsCount[msg.sender] += 1;\r\n        emit NewFundingContract(address(c), msg.sender);\r\n    }\r\n\r\n    function withdrawFromAllContracts() public {\r\n        DeployedContract[] storage contracts = deployedContracts[msg.sender];\r\n        uint256 totalContracts = contracts.length;\r\n        require(totalContracts > 0, \"No contract deployed\");\r\n\r\n        for (uint256 index = 0; index < contracts.length; index++) {\r\n            FundingContract fundingContract = FundingContract(\r\n                contracts[index].contractAddress\r\n            );\r\n            fundingContract.withdraw();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Deployer\",\"type\":\"address\"}],\"name\":\"updateERC20Deployer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFromAllContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfPlannedPayouts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_campaignEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountPerPayment\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"__owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAllowed\",\"type\":\"bool\"}],\"name\":\"updateAllowedUserPermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Deployer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"NewFundingContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"DeploymentManager","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000aa5d2d82550dcf658022f74f5ed25d5746b7a2c4","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f954ce99aa7c49256567a4c79a86d18f7319211e6f5fa8ce2c9ffbe026eada9b"}]}