{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title ConnectAuth.\r\n * @dev Connector For Adding Authorities.\r\n */\r\n\r\ninterface AccountInterface {\r\n    function enable(address) external;\r\n    function disable(address) external;\r\n}\r\n\r\ninterface EventInterface {\r\n    function emitEvent(uint _connectorType, uint _connectorID, bytes32 _eventCode, bytes calldata _eventData) external;\r\n}\r\n\r\ninterface ListInterface {\r\n    struct UserLink {\r\n        uint64 first;\r\n        uint64 last;\r\n        uint64 count;\r\n    }\r\n\r\n    struct UserList {\r\n        uint64 prev;\r\n        uint64 next;\r\n    }\r\n\r\n    struct AccountLink {\r\n        address first;\r\n        address last;\r\n        uint64 count;\r\n    }\r\n\r\n    struct AccountList {\r\n        address prev;\r\n        address next;\r\n    }\r\n\r\n    function accounts() external view returns (uint);\r\n    function accountID(address) external view returns (uint64);\r\n    function accountAddr(uint64) external view returns (address);\r\n    function userLink(address) external view returns (UserLink memory);\r\n    function userList(address, uint64) external view returns (UserList memory);\r\n    function accountLink(uint64) external view returns (AccountLink memory);\r\n    function accountList(uint64, address) external view returns (AccountList memory);\r\n\r\n}\r\n\r\n\r\ncontract Basics {\r\n\r\n    /**\r\n     * @dev Return InstaEvent Address.\r\n     */\r\n    function getEventAddr() internal pure returns (address) {\r\n        return 0x2af7ea6Cb911035f3eb1ED895Cb6692C39ecbA97;\r\n    }\r\n\r\n    /**\r\n     * @dev Return InstaList Address.\r\n    */\r\n    function getListAddr() internal pure returns (address) {\r\n        return 0x4c8a1BEb8a87765788946D6B19C6C6355194AbEb;\r\n    }\r\n\r\n     /**\r\n     * @dev Connector ID and Type.\r\n     */\r\n    function connectorID() public pure returns(uint _type, uint _id) {\r\n        (_type, _id) = (1, 37);\r\n    }\r\n\r\n}\r\n\r\ncontract Helpers is Basics {\r\n    function checkAuthCount() internal view returns (uint count) {\r\n        ListInterface listContract = ListInterface(getListAddr());\r\n        uint64 accountId = listContract.accountID(address(this));\r\n        count = listContract.accountLink(accountId).count;\r\n    }\r\n}\r\n\r\ncontract Auth is Helpers {\r\n\r\n    event LogAddAuth(address indexed _msgSender, address indexed _authority);\r\n    event LogRemoveAuth(address indexed _msgSender, address indexed _authority);\r\n\r\n    /**\r\n     * @dev Add New authority\r\n     * @param authority authority Address.\r\n     */\r\n    function add(address authority) external payable {\r\n        AccountInterface(address(this)).enable(authority);\r\n\r\n        emit LogAddAuth(msg.sender, authority);\r\n\r\n        bytes32 _eventCode = keccak256(\"LogAddAuth(address,address)\");\r\n        bytes memory _eventParam = abi.encode(msg.sender, authority);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n\r\n    /**\r\n     * @dev Remove authority\r\n     * @param authority authority Address.\r\n     */\r\n    function remove(address authority) external payable {\r\n        require(checkAuthCount() > 1, \"Removing-all-authorities\");\r\n        AccountInterface(address(this)).disable(authority);\r\n\r\n        emit LogRemoveAuth(msg.sender, authority);\r\n\r\n        bytes32 _eventCode = keccak256(\"LogRemoveAuth(address,address)\");\r\n        bytes memory _eventParam = abi.encode(msg.sender, authority);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract ConnectAuth is Auth {\r\n    string public constant name = \"Auth-v1.1\";\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"name\":\"LogAddAuth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"name\":\"LogRemoveAuth\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectorID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ConnectAuth","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7bde2e5636b507af510cf38ad3e3ff38b231874ab3037da3daccea994a7654f9"}]}