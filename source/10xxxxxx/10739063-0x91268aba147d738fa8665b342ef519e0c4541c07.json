{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4 .18;\r\n\r\ncontract XeriumNetwork {\r\n\r\n\tstring public symbol = \"XRU\";\r\n\tstring public name = \"XeriumNetwork\";\r\n\tuint8 public constant decimals = 18;\r\n\tuint256 _totalSupply = 4000000;\r\n\tuint256 _MaxDistribPublicSupply = 2500000;\r\n\tuint256 _TokensPerETHSended = 5000;\r\n\tuint256 _OwnerDistribSupply = 0;\r\n\tuint256 _CurrentDistribPublicSupply = 2500000;\r\n\taddress _DistribFundsReceiverAddress = 0x2eD33dcb8ee221dB8b2355307B9433CeF38d1451;\r\n\taddress _remainingTokensReceiverAddress = 0x2eD33dcb8ee221dB8b2355307B9433CeF38d1451;\r\n\taddress owner = 0x2eD33dcb8ee221dB8b2355307B9433CeF38d1451;\r\n\tuint256 _ML = 2;\r\n\tuint256 _LimitML = 5e17;\r\n\r\n\r\n\tbool setupDone = false;\r\n\tbool IsDistribRunning = false;\r\n\tbool DistribStarted = false;\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\tevent Burn(address indexed _owner, uint256 _value);\r\n\r\n\tmapping(address => uint256) balances;\r\n\tmapping(address => mapping(address => uint256)) allowed;\r\n\tmapping(address => bool) public Claimed;\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction XeriumNetwork() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\t\tif (IsDistribRunning) {\r\n\t\t\tuint256 _amount;\r\n\t\t\tif (((_CurrentDistribPublicSupply + _amount) > _MaxDistribPublicSupply) && _MaxDistribPublicSupply > 0) revert();\r\n\t\t\tif (!_DistribFundsReceiverAddress.send(msg.value)) revert();\r\n\r\n\r\n\t\t\tif (msg.value >= _LimitML) {\r\n\t\t\t\t_amount = msg.value * _TokensPerETHSended * _ML;\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_amount = msg.value * _TokensPerETHSended;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t_CurrentDistribPublicSupply += _amount;\r\n\t\t\tbalances[msg.sender] += _amount;\r\n\t\t\t_totalSupply += _amount;\r\n\t\t\tTransfer(this, msg.sender, _amount);\r\n\r\n\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction SetupXeriumNetwork(string tokenName, string tokenSymbol, uint256 TokensPerETHSended, uint256 MaxDistribPublicSupply, uint256 OwnerDistribSupply, address remainingTokensReceiverAddress, address DistribFundsReceiverAddress) public {\r\n\t\tif (msg.sender == owner && !setupDone) {\r\n\t\t\tsymbol = tokenSymbol;\r\n\t\t\tname = tokenName;\r\n\t\t\t_TokensPerETHSended = TokensPerETHSended;\r\n\t\t\t_MaxDistribPublicSupply = MaxDistribPublicSupply * 1e18;\r\n\t\t\tif (OwnerDistribSupply > 0) {\r\n\t\t\t\t_OwnerDistribSupply = OwnerDistribSupply * 1e18;\r\n\t\t\t\t_totalSupply = _OwnerDistribSupply;\r\n\t\t\t\tbalances[owner] = _totalSupply;\r\n\t\t\t\t_CurrentDistribPublicSupply += _totalSupply;\r\n\t\t\t\tTransfer(this, owner, _totalSupply);\r\n\t\t\t}\r\n\t\t\t_DistribFundsReceiverAddress = DistribFundsReceiverAddress;\r\n\t\t\tif (_DistribFundsReceiverAddress == 0) _DistribFundsReceiverAddress = owner;\r\n\t\t\t_remainingTokensReceiverAddress = remainingTokensReceiverAddress;\r\n\r\n\t\t\tsetupDone = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction SetupML(uint256 MLinX, uint256 LimitMLinWei) onlyOwner public {\r\n\t\t_ML = MLinX;\r\n\t\t_LimitML = LimitMLinWei;\r\n\r\n\r\n\t}\r\n\r\n\tfunction SetPrice(uint256 TokensPerETHSended) onlyOwner public {\r\n\t\t_TokensPerETHSended = TokensPerETHSended;\r\n\t}\r\n\r\n\r\n\tfunction StartXeriumNetworkDistribution() public returns(bool success) {\r\n\t\tif (msg.sender == owner && !DistribStarted && setupDone) {\r\n\t\t\tDistribStarted = true;\r\n\t\t\tIsDistribRunning = true;\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction StopXeriumNetworkDistribution() public returns(bool success) {\r\n\t\tif (msg.sender == owner && IsDistribRunning) {\r\n\t\t\tif (_remainingTokensReceiverAddress != 0 && _MaxDistribPublicSupply > 0) {\r\n\t\t\t\tuint256 _remainingAmount = _MaxDistribPublicSupply - _CurrentDistribPublicSupply;\r\n\t\t\t\tif (_remainingAmount > 0) {\r\n\t\t\t\t\tbalances[_remainingTokensReceiverAddress] += _remainingAmount;\r\n\t\t\t\t\t_totalSupply += _remainingAmount;\r\n\t\t\t\t\tTransfer(this, _remainingTokensReceiverAddress, _remainingAmount);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDistribStarted = false;\r\n\t\t\tIsDistribRunning = false;\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction distribution(address[] addresses, uint256 _amount) onlyOwner public {\r\n\r\n\t\tuint256 _remainingAmount = _MaxDistribPublicSupply - _CurrentDistribPublicSupply;\r\n\t\trequire(addresses.length <= 255);\r\n\t\trequire(_amount <= _remainingAmount);\r\n\t\t_amount = _amount * 1e18;\r\n\r\n\t\tfor (uint i = 0; i < addresses.length; i++) {\r\n\t\t\trequire(_amount <= _remainingAmount);\r\n\t\t\t_CurrentDistribPublicSupply += _amount;\r\n\t\t\tbalances[addresses[i]] += _amount;\r\n\t\t\t_totalSupply += _amount;\r\n\t\t\tTransfer(this, addresses[i], _amount);\r\n\r\n\t\t}\r\n\r\n\t\tif (_CurrentDistribPublicSupply >= _MaxDistribPublicSupply) {\r\n\t\t\tDistribStarted = false;\r\n\t\t\tIsDistribRunning = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction distributeAmounts(address[] addresses, uint256[] amounts) onlyOwner public {\r\n\r\n\t\tuint256 _remainingAmount = _MaxDistribPublicSupply - _CurrentDistribPublicSupply;\r\n\t\tuint256 _amount;\r\n\r\n\t\trequire(addresses.length <= 255);\r\n\t\trequire(addresses.length == amounts.length);\r\n\r\n\t\tfor (uint8 i = 0; i < addresses.length; i++) {\r\n\t\t\t_amount = amounts[i] * 1e18;\r\n\t\t\trequire(_amount <= _remainingAmount);\r\n\t\t\t_CurrentDistribPublicSupply += _amount;\r\n\t\t\tbalances[addresses[i]] += _amount;\r\n\t\t\t_totalSupply += _amount;\r\n\t\t\tTransfer(this, addresses[i], _amount);\r\n\r\n\r\n\t\t\tif (_CurrentDistribPublicSupply >= _MaxDistribPublicSupply) {\r\n\t\t\t\tDistribStarted = false;\r\n\t\t\t\tIsDistribRunning = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction BurnXRUTokens(uint256 amount) public returns(bool success) {\r\n\t\tuint256 _amount = amount * 1e18;\r\n\t\tif (balances[msg.sender] >= _amount) {\r\n\t\t\tbalances[msg.sender] -= _amount;\r\n\t\t\t_totalSupply -= _amount;\r\n\t\t\tBurn(msg.sender, _amount);\r\n\t\t\tTransfer(msg.sender, 0, _amount);\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction totalSupply() public constant returns(uint256 totalSupplyValue) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction MaxDistribPublicSupply_() public constant returns(uint256 MaxDistribPublicSupply) {\r\n\t\treturn _MaxDistribPublicSupply;\r\n\t}\r\n\r\n\tfunction OwnerDistribSupply_() public constant returns(uint256 OwnerDistribSupply) {\r\n\t\treturn _OwnerDistribSupply;\r\n\t}\r\n\r\n\tfunction CurrentDistribPublicSupply_() public constant returns(uint256 CurrentDistribPublicSupply) {\r\n\t\treturn _CurrentDistribPublicSupply;\r\n\t}\r\n\r\n\tfunction RemainingTokensReceiverAddress() public constant returns(address remainingTokensReceiverAddress) {\r\n\t\treturn _remainingTokensReceiverAddress;\r\n\t}\r\n\r\n\tfunction DistribFundsReceiverAddress() public constant returns(address DistribfundsReceiver) {\r\n\t\treturn _DistribFundsReceiverAddress;\r\n\t}\r\n\r\n\tfunction Owner() public constant returns(address ownerAddress) {\r\n\t\treturn owner;\r\n\t}\r\n\r\n\tfunction SetupDone() public constant returns(bool setupDoneFlag) {\r\n\t\treturn setupDone;\r\n\t}\r\n\r\n\tfunction IsDistribRunningFalg_() public constant returns(bool IsDistribRunningFalg) {\r\n\t\treturn IsDistribRunning;\r\n\t}\r\n\r\n\tfunction IsDistribStarted() public constant returns(bool IsDistribStartedFlag) {\r\n\t\treturn DistribStarted;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public constant returns(uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _amount) public returns(bool success) {\r\n\t\tif (balances[msg.sender] >= _amount &&\r\n\t\t\t_amount > 0 &&\r\n\t\t\tbalances[_to] + _amount > balances[_to]) {\r\n\t\t\tbalances[msg.sender] -= _amount;\r\n\t\t\tbalances[_to] += _amount;\r\n\t\t\tTransfer(msg.sender, _to, _amount);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction transferFrom(\r\n\t\taddress _from,\r\n\t\taddress _to,\r\n\t\tuint256 _amount\r\n\t) public returns(bool success) {\r\n\t\tif (balances[_from] >= _amount &&\r\n\t\t\tallowed[_from][msg.sender] >= _amount &&\r\n\t\t\t_amount > 0 &&\r\n\t\t\tbalances[_to] + _amount > balances[_to]) {\r\n\t\t\tbalances[_from] -= _amount;\r\n\t\t\tallowed[_from][msg.sender] -= _amount;\r\n\t\t\tbalances[_to] += _amount;\r\n\t\t\tTransfer(_from, _to, _amount);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _amount) public returns(bool success) {\r\n\t\tallowed[msg.sender][_spender] = _amount;\r\n\t\tApproval(msg.sender, _spender, _amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public constant returns(uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupplyValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentDistribPublicSupply_\",\"outputs\":[{\"name\":\"CurrentDistribPublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"MLinX\",\"type\":\"uint256\"},{\"name\":\"LimitMLinWei\",\"type\":\"uint256\"}],\"name\":\"SetupML\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnXRUTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsDistribStarted\",\"outputs\":[{\"name\":\"IsDistribStartedFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"TokensPerETHSended\",\"type\":\"uint256\"}],\"name\":\"SetPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeAmounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsDistribRunningFalg_\",\"outputs\":[{\"name\":\"IsDistribRunningFalg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"TokensPerETHSended\",\"type\":\"uint256\"},{\"name\":\"MaxDistribPublicSupply\",\"type\":\"uint256\"},{\"name\":\"OwnerDistribSupply\",\"type\":\"uint256\"},{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"},{\"name\":\"DistribFundsReceiverAddress\",\"type\":\"address\"}],\"name\":\"SetupXeriumNetwork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DistribFundsReceiverAddress\",\"outputs\":[{\"name\":\"DistribfundsReceiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SetupDone\",\"outputs\":[{\"name\":\"setupDoneFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OwnerDistribSupply_\",\"outputs\":[{\"name\":\"OwnerDistribSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RemainingTokensReceiverAddress\",\"outputs\":[{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StartXeriumNetworkDistribution\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxDistribPublicSupply_\",\"outputs\":[{\"name\":\"MaxDistribPublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StopXeriumNetworkDistribution\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"XeriumNetwork","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5ff603a9dbb2d7a27faaba1cbceb37c36a67f4bb1af92a18cfaaaad1fd0a79be"}]}