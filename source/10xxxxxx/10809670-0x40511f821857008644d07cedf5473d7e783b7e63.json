{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\ncontract    ERC20\r\n{\r\n    mapping(address => uint256)                         balances;\r\n    mapping(address => mapping (address => uint256))    allowances;\r\n\r\n    uint    public  decimals    = 2;\r\n    uint256 public  totalSupply = 100000000 * 10**decimals;        // 800 Millions (18 decimals)\r\n\r\n\r\n    string  public  constant    name       = \"JBTR Token\";\r\n    string  public  constant    symbol     = \"JBTR\";\r\n\r\n    event Transfer(address indexed _from,  address indexed _to,      uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    //--------------------------------------------------------------------------\r\n    constructor()   public \r\n    {\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function        transfer(address toAddr, uint256 amountInWei)  public   returns (bool)\r\n    {\r\n        uint256         baseAmount;\r\n        uint256         finalAmount;\r\n\r\n        require(toAddr!=address(0x0) && toAddr!=msg.sender \r\n                                     && amountInWei!=0\r\n                                     && amountInWei<=balances[msg.sender]);\r\n        //-----\r\n\r\n        baseAmount  = balances[msg.sender];\r\n        finalAmount = baseAmount - amountInWei;\r\n        \r\n        assert(finalAmount <= baseAmount);\r\n        \r\n        balances[msg.sender] = finalAmount;\r\n\r\n        //-----\r\n       \r\n        baseAmount  = balances[toAddr];\r\n        finalAmount = baseAmount + amountInWei;\r\n\r\n        assert(finalAmount >= baseAmount);\r\n        \r\n        balances[toAddr] = finalAmount;\r\n        \r\n        emit Transfer(msg.sender, toAddr, amountInWei);\r\n\r\n        return true;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function transferFrom(address fromAddr, address toAddr, uint256 amountInWei)  public  returns (bool) \r\n    {\r\n        require(amountInWei!=0                                   &&\r\n                balances[fromAddr]               >= amountInWei  &&\r\n                allowances[fromAddr][msg.sender] >= amountInWei);\r\n\r\n                //-----\r\n\r\n        uint256 baseAmount  = balances[fromAddr];\r\n        uint256 finalAmount = baseAmount - amountInWei;\r\n        \r\n        assert(finalAmount <= baseAmount);\r\n        \r\n        balances[fromAddr] = finalAmount;\r\n        \r\n                //-----\r\n                \r\n        baseAmount  = balances[toAddr];\r\n        finalAmount = baseAmount + amountInWei;\r\n        \r\n        assert(finalAmount >= baseAmount);\r\n        \r\n        balances[toAddr] = finalAmount;\r\n        \r\n                //-----\r\n                \r\n        baseAmount  = allowances[fromAddr][msg.sender];\r\n        finalAmount = baseAmount - amountInWei;\r\n        \r\n        assert(finalAmount <= baseAmount);\r\n        \r\n        allowances[fromAddr][msg.sender] = finalAmount;\r\n        \r\n        //-----           \r\n        \r\n        emit Transfer(fromAddr, toAddr, amountInWei);\r\n        return true;\r\n    }\r\n     //--------------------------------------------------------------------------\r\n    function balanceOf(address _owner) public view returns (uint256 balance) \r\n    {\r\n        return balances[_owner];\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function approve(address _spender, uint256 _value) public returns (bool success) \r\n    {\r\n        allowances[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) \r\n    {\r\n        return allowances[_owner][_spender];\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\ncontract    Airdropper  is ERC20\r\n{\r\n    event onBulkTransfer(address sender, uint256 transactionCount, address tokenAddress);\r\n    \r\n    function    bulkTransfer(address tokenAddress,  address[] memory toWallets, \r\n                                                    uint256[] memory amountsInBaseUnit)\r\n                                                    public\r\n    {\r\n        uint256     i;\r\n        uint256     n;\r\n        \r\n        require(toWallets.length==amountsInBaseUnit.length);\r\n        \r\n        n = toWallets.length;\r\n        \r\n        for (i=0; i<n; i++)\r\n        {\r\n            if (toWallets[i]==address(0x0) || amountsInBaseUnit[i]==0)    \r\n            {\r\n                continue;\r\n            }\r\n            \r\n            ERC20(tokenAddress).transfer(toWallets[i], amountsInBaseUnit[i]);\r\n        }\r\n        \r\n        emit onBulkTransfer(msg.sender, n, tokenAddress);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"onBulkTransfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"toWallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInBaseUnit\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Airdropper","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d811160cac4c6b704e4c5a7d787ecebda70f5afbb9e10cad2f6eb6fa3bc416de"}]}