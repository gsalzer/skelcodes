{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        address msgSender = msg.sender;\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract SushiSwapPoolNames is Ownable {\r\n    mapping(uint256 => string) public logos;\r\n    mapping(uint256 => string) public names;\r\n    \r\n    constructor() public {\r\n        logos[0] = '🐢'; names[0] = 'Tether Turtle';\r\n        logos[1] = '🐌'; names[1] = 'Circle Snail';\r\n        logos[2] = '🦆'; names[2] = 'Donald DAI';\r\n        logos[3] = '🦍'; names[3] = 'Spartan Dollar';\r\n        logos[4] = '🍄'; names[4] = 'Compound Truffle';\r\n        logos[5] = '🐗'; names[5] = 'Aave Boar';\r\n        logos[6] = '🐍'; names[6] = 'Synthetic Snake';\r\n        logos[7] = '🦑'; names[7] = 'Umami Squid';\r\n        logos[8] = '🐸'; names[8] = 'Toadie Marine';\r\n        logos[9] = '🦖'; names[9] = 'Band-osaurus';\r\n        logos[10] = '🐥'; names[10] = 'Ample Chicks';\r\n        logos[11] = '🐋'; names[11] = 'YFI Whale';\r\n        logos[12] = '🍣'; names[12] = 'Sushi Party!';\r\n        logos[13] = '🦏'; names[13] = 'REN Rhino';\r\n        logos[14] = '🐂'; names[14] = 'BASED Bull';\r\n        logos[15] = '🦈'; names[15] = 'SRM Shark';\r\n        logos[16] = '🍠'; names[16] = 'YAMv2 Yam';\r\n        logos[17] = '🐊'; names[17] = 'CRV Crocodile';\r\n    }\r\n    \r\n    function setPoolInfo(uint256 pid, string memory logo, string memory name) public onlyOwner {\r\n        logos[pid] = logo;\r\n        names[pid] = name;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"logos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setPoolInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SushiSwapPoolNames","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://fea1c0bb64fceadc52cc4f71090774cc15b315febb88099e4995dbc8f75d6c19"}]}