{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.12;\r\n\r\ninterface StakingContract {\r\n    function transferOwnership(address newOwner) external;\r\n    function burn(address account, uint256 amount) external;\r\n}\r\n\r\n\r\ninterface Minter {\r\n    function liquidityRewards(address recipient, uint amount) external;\r\n}\r\n\r\ncontract Administrator {\r\n    \r\n    address public owner;\r\n    StakingContract public stakingContract;\r\n    Minter public minter;\r\n    address public storedTokens;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        stakingContract = StakingContract(0x738d3CEC4E685A2546Ab6C3B055fd6B8C1198093); \r\n        minter = Minter(0x28e484dBD6BB501D37EFC8cD4b8dc33121cC78be);\r\n        storedTokens = 0xB3470826919CC8eA0aB5e333358E36f701B1c6f5;\r\n    }\r\n    \r\n    function transfer(address to, uint amount) external {\r\n        require(msg.sender == owner);\r\n        stakingContract.burn(storedTokens, amount);\r\n        minter.liquidityRewards(to, amount);\r\n    }\r\n    \r\n    function transferOwnership() external {\r\n        require(msg.sender == owner);\r\n        stakingContract.transferOwnership(owner);\r\n    }\r\n    \r\n    function updateStoredTokens(address _storedTokens) external {\r\n        require(msg.sender == owner);\r\n        storedTokens = _storedTokens;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"contract Minter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract StakingContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storedTokens\",\"type\":\"address\"}],\"name\":\"updateStoredTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Administrator","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://26838e6dd61ed6fa1e104ed75d096c99b1a4bc6b6238c8d665740647b4f8a1e9"}]}