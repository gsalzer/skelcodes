{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\n\r\ninterface SanityRates {\r\n    function getSanityRate(address src, address dest) external view returns (uint256);\r\n}\r\n\r\ncontract QuerySanity {\r\n    SanityRates public oldSanity;\r\n    SanityRates public newSanity;\r\n    address public admin;\r\n    \r\n    address internal constant ETH_TOKEN_ADDRESS = address(\r\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\r\n    );\r\n\r\n    constructor(address _admin, SanityRates _oldSanity, SanityRates _newSanity) public {\r\n        oldSanity = _oldSanity;\r\n        newSanity = _newSanity;\r\n        admin = _admin;\r\n    }\r\n    \r\n    function kill() public {\r\n        selfdestruct(payable(admin));\r\n    }\r\n\r\n    \r\n    function tokenToEthDiffPercent(address[] memory tokens) public view returns (uint256[] memory percentageDiff) {\r\n        int256 oldRate; \r\n        int256 newRate;\r\n        percentageDiff = new uint256[](tokens.length);\r\n        \r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            oldRate = int256(oldSanity.getSanityRate(tokens[i], ETH_TOKEN_ADDRESS));\r\n            newRate = int256(newSanity.getSanityRate(tokens[i], ETH_TOKEN_ADDRESS));\r\n            \r\n            percentageDiff[i] = (abs(oldRate - newRate) * 100) / (uint256(oldRate + newRate) / 2);\r\n        }\r\n    }\r\n    \r\n    function ethToTokenDiffPercent(address[] memory tokens) public view returns (uint256[] memory percentageDiff) {\r\n        int256 oldRate; \r\n        int256 newRate;\r\n        percentageDiff = new uint256[](tokens.length);\r\n\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            oldRate = int256(oldSanity.getSanityRate(ETH_TOKEN_ADDRESS, tokens[i]));\r\n            newRate = int256(newSanity.getSanityRate(ETH_TOKEN_ADDRESS, tokens[i]));\r\n            \r\n            percentageDiff[i] = (abs(oldRate - newRate) * 100) / (uint256(oldRate + newRate) / 2);\r\n        }\r\n    }\r\n\r\n    function abs(int256 val) internal pure returns(uint256) {\r\n        if (val < 0) {\r\n            return uint(val * (-1));\r\n        } else {\r\n            return uint(val);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"contract SanityRates\",\"name\":\"_oldSanity\",\"type\":\"address\"},{\"internalType\":\"contract SanityRates\",\"name\":\"_newSanity\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"ethToTokenDiffPercent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"percentageDiff\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newSanity\",\"outputs\":[{\"internalType\":\"contract SanityRates\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldSanity\",\"outputs\":[{\"internalType\":\"contract SanityRates\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"tokenToEthDiffPercent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"percentageDiff\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"QuerySanity","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000ec610f53d0a191b17d7984c6d31598b2181ace15000000000000000000000000dfc85c08d5e5924ab49750e006cf8a826ffb7b13000000000000000000000000a2d951a22d5c0256fc2daee7e2b3ede75ebfa22d","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b8ca6b0d34623bf8a98828760475d388a3e67a15f1812e73301f7cfe1716410c"}]}