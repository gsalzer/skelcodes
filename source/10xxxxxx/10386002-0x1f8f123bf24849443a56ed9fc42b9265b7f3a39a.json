{"status":"1","message":"OK","result":[{"SourceCode":"/*___________________________________________________________________\r\n  _      _                                        ______           \r\n  |  |  /          /                                /              \r\n--|-/|-/-----__---/----__----__---_--_----__-------/-------__------\r\n  |/ |/    /___) /   /   ' /   ) / /  ) /___)     /      /   )     \r\n__/__|____(___ _/___(___ _(___/_/_/__/_(___ _____/______(___/__o_o_\r\n\r\n    \r\n    \r\n    ██╗   ██╗███╗   ██╗██╗    ████████╗ ██████╗ ██████╗ ██╗ █████╗ \r\n    ██║   ██║████╗  ██║██║    ╚══██╔══╝██╔═══██╗██╔══██╗██║██╔══██╗\r\n    ██║   ██║██╔██╗ ██║██║       ██║   ██║   ██║██████╔╝██║███████║\r\n    ██║   ██║██║╚██╗██║██║       ██║   ██║   ██║██╔═══╝ ██║██╔══██║\r\n    ╚██████╔╝██║ ╚████║██║       ██║   ╚██████╔╝██║     ██║██║  ██║\r\n     ╚═════╝ ╚═╝  ╚═══╝╚═╝       ╚═╝    ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝\r\n                                                                   \r\n                                                                   \r\n\r\n=== 'UniTopia' Token contract with following features ===\r\n    => ERC20 Compliance\r\n    => Higher degree of control by owner - safeguard functionality\r\n    => SafeMath implementation \r\n    => Burnable and no-minting \r\n    => multi token tranfer\r\n    => approve and call fallback\r\n\r\n\r\n======================= Quick Stats ===================\r\n    => Name        : UniTopia\r\n    => Symbol      : uTOPIA\r\n    => Total supply: 1,000,000 (1 Million)\r\n    => Decimals    : 18\r\n\r\n\r\n============= Independant Audit of the code ============\r\n    => Multiple Freelancers Auditors\r\n    => Community Audit by Bug Bounty program\r\n\r\n\r\n-------------------------------------------------------------------\r\n Copyright (c) 2020 onwards UniTopia Network. ( https://unitopia.network )\r\n Contract designed with ❤ by EtherAuthority ( https://EtherAuthority.io )\r\n-------------------------------------------------------------------\r\n*/\r\n\r\n\r\npragma solidity 0.5.16;\r\n\r\n\r\n\r\n//*******************************************************************//\r\n//------------------------ SafeMath Library -------------------------//\r\n//*******************************************************************//\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}\r\n\r\n\r\n\r\n//*******************************************************************//\r\n//--------------------- ApproveAndCallFallBack ----------------------//\r\n//*******************************************************************//\r\ninterface ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes calldata data) external;\r\n}\r\n\r\n\r\n\r\n//*******************************************************************//\r\n//------------------ Contract to Manage Ownership -------------------//\r\n//*******************************************************************//\r\ncontract owned {\r\n    address  payable public owner;\r\n    address payable internal newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), owner);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    //this flow is to prevent transferring ownership to wrong wallet by mistake\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n\r\n//****************************************************************************//\r\n//---------------------        MAIN CODE STARTS HERE     ---------------------//\r\n//****************************************************************************//\r\ncontract UniTopia is owned {\r\n\r\n\r\n\r\n  /*===============================\r\n  =         DATA STORAGE          =\r\n  ===============================*/    \r\n\r\n  using SafeMath for uint256;\r\n  bool public safeGuard=false;\r\n\r\n  string public constant name  = \"UniTopia\";\r\n  string public constant symbol = \"uTOPIA\";\r\n  uint8 public constant decimals = 18;\r\n  \r\n  uint256 public _totalSupply;\r\n  uint256 public tokenPrice;\r\n  uint256 public soldTokens;\r\n  uint256 public preMintedToken;\r\n  \r\n  mapping(address=>uint256) public Pool;\r\n  mapping (address => uint256) private balances;\r\n  mapping (address => mapping (address => uint256)) private allowed;\r\n  \r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event TransferPoolamount(address _from, address _to, uint256 _ether);\r\n  event Approval(address _from, address _spender, uint256 _tokenAmt);\r\n  \r\n  \r\n  \r\n  \r\n  /**\r\n   * Contract creator should provide total supply (without decimals) and token price, while deploying the smart contract. \r\n   */\r\n  constructor(uint256 _supply,uint256 _price,uint256 _premint) public {\r\n     _totalSupply= _supply * (10 ** 18);\r\n     tokenPrice=_price;\r\n     soldTokens=_premint* (10 ** 18);\r\n    balances[msg.sender] = _premint* (10 ** 18);\r\n    emit Transfer(address(0), msg.sender, _premint* (10 ** 18));\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Users get tokens immediately according to ether contributed.\r\n   */\r\n  function buyToken() payable public returns(bool)\r\n  {\r\n      require(msg.value!=0,\"Invalid Amount\");\r\n      \r\n      uint256 one=10**18/tokenPrice;\r\n      \r\n      uint256 tknAmount=one*msg.value;\r\n      \r\n      require(soldTokens.add(tknAmount)<=_totalSupply,\"Token Not Available\");\r\n      \r\n      balances[msg.sender]+=tknAmount;\r\n      //_totalSupply-=tknAmount;\r\n      Pool[owner]+=msg.value;\r\n      soldTokens+=tknAmount;\r\n      \r\n      emit Transfer(address(this),msg.sender,tknAmount);\r\n  }\r\n  \r\n  \r\n  /**\r\n   * owner can withdraw the fund anytime.\r\n   */\r\n  function withDraw() public onlyOwner{\r\n      \r\n      require(Pool[owner]!=0,\"No Ether Available\");\r\n      owner.transfer(Pool[owner]);\r\n      \r\n      emit TransferPoolamount(address(this),owner,Pool[owner]);\r\n      Pool[owner]=0;\r\n  }\r\n  \r\n  \r\n  /**\r\n   *Owner can chaneg teh token price anytime.\r\n   */\r\n  \r\n  function changeTokenPrice(uint256 _price) public onlyOwner{\r\n      require(_price!=0);\r\n      tokenPrice=_price;\r\n  }\r\n  \r\n\r\n  /**\r\n   * when safeGuard is true, then only token transfer will start. \r\n   * once token transfer will be started, then it will not even reverted by owner.\r\n   */\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(safeGuard==true,'Transfer Is Not Available');\r\n    require(value <= balances[msg.sender]);\r\n    require(to != address(0));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(value);\r\n    balances[to] = balances[to].add(value);\r\n\r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n  \r\n  \r\n  /**\r\n   * when safeGuard is true, then only token transfer will start. \r\n   * once token transfer will be started, then it will not even reverted by owner.\r\n   */\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(safeGuard==true,'Transfer Is Not Available');\r\n    require(value <= balances[from]);\r\n    require(value <= allowed[from][msg.sender]);\r\n    require(to != address(0));\r\n    \r\n    balances[from] = balances[from].sub(value);\r\n    balances[to] = balances[to].add(value);\r\n    \r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\r\n    \r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * user can transfer tokens in bulk. \r\n   * maximum 150 at a time.\r\n   */\r\n  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\r\n    uint256 arrayLength = receivers.length;\r\n    require(arrayLength <= 150, 'Too many addresses');\r\n    for (uint256 i = 0; i < arrayLength; i++) {\r\n      transfer(receivers[i], amounts[i]);\r\n    }\r\n  }\r\n  \r\n  \r\n  /**\r\n   * approve token spending to any third party.\r\n   * approved user or contract can spend toknes.\r\n   */\r\n  function approve(address spender, uint256 value) public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n  \r\n  /**\r\n   * This function allows user to approve and at the same time call any other smart contract function and do any code execution.\r\n   */\r\n  function approveAndCall(address spender, uint256 tokens, bytes calldata data) external returns (bool) {\r\n    allowed[msg.sender][spender] = tokens;\r\n    emit Approval(msg.sender, spender, tokens);\r\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n    return true;\r\n    }\r\n\r\n  \r\n  /**\r\n   * Increase allowance.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);\r\n    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n  \r\n  \r\n  \r\n  /**\r\n   * decrease allowance.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);\r\n    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n\r\n  \r\n  /**\r\n   * anyone can burn the tokens. and it will decrease the total supply of the tokens.\r\n   */\r\n  function burn(uint256 amount) external {\r\n    require(amount != 0);\r\n    require(amount <= balances[msg.sender]);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    balances[msg.sender] = balances[msg.sender].sub(amount);\r\n    emit Transfer(msg.sender, address(0), amount);\r\n  }\r\n  \r\n  \r\n  \r\n  /**\r\n   * only owner can change thi safeGuard status to true. \r\n   * It will start the token transfer. and once it is started, it can not be stoped.\r\n   */\r\n  function changeSafeGuard() public onlyOwner{\r\n      safeGuard=true;\r\n  }\r\n  \r\n  \r\n  \r\n  /*===============================\r\n    =       VIEW FUNCTIONS        =\r\n    ===============================*/\r\n  function tokenSold() public view returns(uint256)\r\n  {\r\n      return soldTokens;\r\n  }\r\n  \r\n  function totalEther() public view returns(uint256)\r\n  {\r\n      return Pool[owner];\r\n  }\r\n  \r\n  function availableToken() public view returns(uint256)\r\n  {\r\n      return _totalSupply.sub(soldTokens);\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address player) public view returns (uint256) {\r\n    return balances[player];\r\n  }\r\n  \r\n  function allowance(address player, address spender) public view returns (uint256) {\r\n    return allowed[player][spender];\r\n  }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premint\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenAmt\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ether\",\"type\":\"uint256\"}],\"name\":\"TransferPoolamount\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeSafeGuard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changeTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preMintedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"safeGuard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UniTopia","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000011c37937e080000000000000000000000000000000000000000000000000000000000000030d40","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://6ba7be8f0dba3198215f532cd811430a7d5acacccd472ce39610c35de3895777"}]}