{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n/*\r\n *             ╔═╗┌─┐┌─┐┬┌─┐┬┌─┐┬   ┌─────────────────────────┐ ╦ ╦┌─┐┌┐ ╔═╗┬┌┬┐┌─┐\r\n *             ║ ║├┤ ├┤ ││  │├─┤│   │ KOL Community Foundation│ │ ║║║├┤ ├┴┐╚═╗│ │ ├┤\r\n *             ╚═╝└  └  ┴└─┘┴┴ ┴┴─┘ └─┬─────────────────────┬─┘ ╚╩╝└─┘└─┘╚═╝┴ ┴ └─┘\r\n *   ┌────────────────────────────────┘                     └──────────────────────────────┐\r\n *   │    ┌─────────────────────────────────────────────────────────────────────────────┐  │\r\n *   └────┤ Dev:Jack Koe ├─────────────┤ Special for: KOL  ├───────────────┤ 20200524   ├──┘\r\n *        └─────────────────────────────────────────────────────────────────────────────┘\r\n */\r\n\r\n library SafeMath {\r\n   function mul(uint a, uint b) internal pure  returns (uint) {\r\n     uint c = a * b;\r\n     require(a == 0 || c / a == b);\r\n     return c;\r\n   }\r\n   function div(uint a, uint b) internal pure returns (uint) {\r\n     require(b > 0);\r\n     uint c = a / b;\r\n     require(a == b * c + a % b);\r\n     return c;\r\n   }\r\n   function sub(uint a, uint b) internal pure returns (uint) {\r\n     require(b <= a);\r\n     return a - b;\r\n   }\r\n   function add(uint a, uint b) internal pure returns (uint) {\r\n     uint c = a + b;\r\n     require(c >= a);\r\n     return c;\r\n   }\r\n   function max64(uint64 a, uint64 b) internal  pure returns (uint64) {\r\n     return a >= b ? a : b;\r\n   }\r\n   function min64(uint64 a, uint64 b) internal  pure returns (uint64) {\r\n     return a < b ? a : b;\r\n   }\r\n   function max256(uint256 a, uint256 b) internal  pure returns (uint256) {\r\n     return a >= b ? a : b;\r\n   }\r\n   function min256(uint256 a, uint256 b) internal  pure returns (uint256) {\r\n     return a < b ? a : b;\r\n   }\r\n }\r\n\r\n /**\r\n  * title KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\r\n  * dev visit: https://github.com/jackoelv/KOL/\r\n */\r\n\r\n contract ERC20Basic {\r\n   uint public totalSupply;\r\n   function balanceOf(address who) public constant returns (uint);\r\n   function transfer(address to, uint value) public;\r\n   event Transfer(address indexed from, address indexed to, uint value);\r\n }\r\n\r\n contract ERC20 is ERC20Basic {\r\n   function allowance(address owner, address spender) public constant returns (uint);\r\n   function transferFrom(address from, address to, uint value) public;\r\n   function approve(address spender, uint value) public;\r\n   event Approval(address indexed owner, address indexed spender, uint value);\r\n }\r\n\r\n /**\r\n  * title KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\r\n  * dev visit: https://github.com/jackoelv/KOL/\r\n */\r\n\r\n contract BasicToken is ERC20Basic {\r\n\r\n   using SafeMath for uint;\r\n\r\n   mapping(address => uint) balances;\r\n\r\n   function transfer(address _to, uint _value) public{\r\n     balances[msg.sender] = balances[msg.sender].sub(_value);\r\n     balances[_to] = balances[_to].add(_value);\r\n     emit Transfer(msg.sender, _to, _value);\r\n   }\r\n\r\n   function balanceOf(address _owner) public constant returns (uint balance) {\r\n     return balances[_owner];\r\n   }\r\n }\r\n\r\n /**\r\n  * title KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\r\n  * dev visit: https://github.com/jackoelv/KOL/\r\n */\r\n\r\n contract StandardToken is BasicToken, ERC20 {\r\n   mapping (address => mapping (address => uint)) allowed;\r\n   uint256 public userSupplyed;\r\n\r\n   function transferFrom(address _from, address _to, uint _value) public {\r\n     balances[_to] = balances[_to].add(_value);\r\n     balances[_from] = balances[_from].sub(_value);\r\n     allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n     emit Transfer(_from, _to, _value);\r\n   }\r\n\r\n   function approve(address _spender, uint _value) public{\r\n     require((_value == 0) || (allowed[msg.sender][_spender] == 0)) ;\r\n     allowed[msg.sender][_spender] = _value;\r\n     emit Approval(msg.sender, _spender, _value);\r\n   }\r\n\r\n   function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n     return allowed[_owner][_spender];\r\n   }\r\n }\r\n contract KOL is StandardToken {\r\n }\r\n\r\n /**\r\n  * title KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\r\n  * dev visit: https://github.com/jackoelv/KOL/\r\n */\r\n\r\n contract Ownable {\r\n     address public owner;\r\n\r\n     constructor() public{\r\n         owner = msg.sender;\r\n     }\r\n\r\n     modifier onlyOwner {\r\n         require(msg.sender == owner);\r\n         _;\r\n     }\r\n     function transferOwnership(address newOwner) onlyOwner public{\r\n         if (newOwner != address(0)) {\r\n             owner = newOwner;\r\n         }\r\n     }\r\n }\r\n /**\r\n  * title KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\r\n  * dev visit: https://github.com/jackoelv/KOL/\r\n */\r\ncontract KOLADUSER is Ownable{\r\n  using SafeMath for uint256;\r\n  string public name = \"KOL USER DEV ONCHAIN PRECISION ADVERTISING SYSTEM\";\r\n  KOL public kol;\r\n  address private receiver;\r\n\r\n  uint256 public iCode;\r\n  uint256 public totalRegister;\r\n  uint256 public unit = 50 * (10 ** 18);\r\n  uint256 public etherFee = 0.002 ether;\r\n  uint256 public minAmount = 50 * (10 ** 18);\r\n\r\n  uint8 public maxlevel = 9;\r\n  uint8 public fee = 5;\r\n  bool public going = true;\r\n\r\n  mapping (address => address[]) public InviteList;\r\n  mapping (address => address[]) public ChildAddrs;\r\n  mapping (uint256 => address) public InviteCode;\r\n  mapping (address => uint256) public RInviteCode;\r\n\r\n  mapping (address => uint8) public UserLevel;\r\n  mapping (address => uint256) public UserBalance;\r\n  mapping (address => uint256) public UserDrawedBalance;\r\n\r\n  mapping (address => uint256) public TotalUsers;\r\n  mapping (address => uint8) public maxDeep;\r\n\r\n  event Registed(address indexed _user,uint256 indexed inviteCode);\r\n  event Joined(address indexed _user,uint256 _realUnit,uint8 _userLevel);\r\n  event WithDrawed(address indexed _user,uint256 _amount);\r\n  event GradeChanged(address _user,uint8 _newLevel);\r\n\r\n  constructor(address _tokenAddress,address _receiver) public {\r\n    kol = KOL(_tokenAddress);\r\n    receiver = _receiver;\r\n    InviteCode[0] = owner;\r\n    UserLevel[owner] = 9;\r\n  }\r\n\r\n  function reg(address _addr,uint256 _fInviteCode) private {\r\n    require(InviteCode[_fInviteCode] != address(0));\r\n    uint256 random = uint256(keccak256(now, _addr)) % 10;\r\n    uint256 _myInviteCode = iCode.add(random);\r\n    require(InviteCode[_myInviteCode] == address(0));\r\n    iCode = iCode.add(random);\r\n    InviteCode[_myInviteCode] = _addr;\r\n    RInviteCode[_addr] = _myInviteCode;\r\n\r\n    emit Registed(_addr,iCode);\r\n    totalRegister ++;\r\n    address father = InviteCode[_fInviteCode];\r\n    ChildAddrs[father].push(_addr);\r\n    if (InviteList[_addr].length < 9){\r\n      InviteList[_addr].push(father);\r\n      TotalUsers[father] ++;\r\n      if (maxDeep[father] < 1){\r\n        maxDeep[father] = 1;\r\n        emit GradeChanged(father,1);\r\n      }\r\n    }\r\n\r\n    for (uint8 i = 0 ; i < InviteList[father].length; i++){\r\n      if (InviteList[_addr].length < 9){\r\n        InviteList[_addr].push(InviteList[father][i]);\r\n        TotalUsers[InviteList[father][i]] ++;\r\n        if (maxDeep[InviteList[father][i]] < i+2){\r\n          maxDeep[InviteList[father][i]] = i+2;\r\n          emit GradeChanged(InviteList[father][i],i+2);\r\n        }\r\n      }else{\r\n        break;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  function join(address _addr) private {\r\n    require(UserLevel[_addr]<9);\r\n    address tokenR1;\r\n    address tokenR2;\r\n    if (InviteList[_addr].length <= UserLevel[_addr]){\r\n      tokenR1 = receiver;\r\n    }else{\r\n      tokenR1 = InviteList[_addr][UserLevel[_addr]];\r\n    }\r\n    uint256 realUnit;\r\n    if (UserLevel[_addr] == 0){\r\n      realUnit = 2 * unit;\r\n      if (InviteList[_addr].length == 9){\r\n        tokenR2 = InviteList[_addr][8];\r\n      }else{\r\n        tokenR2 = receiver;\r\n      }\r\n    }else{\r\n      realUnit = unit;\r\n    }\r\n    kol.transferFrom(_addr,address(this),realUnit);\r\n    if (realUnit == 2*unit){\r\n      addUnit(_addr, tokenR2);\r\n    }\r\n    addUnit(_addr,tokenR1);\r\n    UserLevel[_addr] += 1;\r\n    emit Joined(_addr,realUnit,UserLevel[_addr]);\r\n  }\r\n  function addUnit(address _self,address _tokenReceiver) private{\r\n    if (UserLevel[_tokenReceiver]>=UserLevel[_self] + 1){\r\n      UserBalance[_tokenReceiver] += unit;\r\n    }else{\r\n      UserBalance[receiver] += unit;\r\n    }\r\n  }\r\n  function go(uint256 _fInviteCode,bool _joinAll) payable public {\r\n    require(going);\r\n    require(msg.value >= etherFee);\r\n    if (RInviteCode[msg.sender] == 0){\r\n      reg(msg.sender,_fInviteCode);\r\n      if (_joinAll){\r\n        joinAll(msg.sender);\r\n        return;\r\n      }\r\n    }\r\n    join(msg.sender);\r\n  }\r\n  function joinAll(address _addr) private{\r\n    require(UserLevel[_addr] == 0);\r\n    kol.transferFrom(_addr,address(this),unit*10);\r\n    uint8 done;\r\n    for (uint8 i=0;i<InviteList[_addr].length;i++){\r\n      addUnit(_addr,InviteList[_addr][i]);\r\n      done++;\r\n    }\r\n    if (InviteList[_addr].length == 9){\r\n      addUnit(_addr,InviteList[_addr][8]);\r\n      done++;\r\n    }\r\n    UserBalance[receiver] += (10 - done) * unit;\r\n    UserLevel[_addr] = 9;\r\n  }\r\n\r\n  function drawKol() payable public {\r\n    require(msg.value >= etherFee);\r\n    require(UserBalance[msg.sender] >= minAmount);\r\n    kol.transfer(msg.sender,UserBalance[msg.sender] * (100-fee)/100);\r\n    kol.transfer(receiver,UserBalance[msg.sender] * fee/100);\r\n    UserDrawedBalance[msg.sender]+=UserBalance[msg.sender];\r\n    emit WithDrawed(msg.sender,UserBalance[msg.sender]);\r\n    UserBalance[msg.sender] = 0;\r\n  }\r\n  function setetherFee(uint256 _fee) onlyOwner public{\r\n    etherFee = _fee;\r\n  }\r\n\r\n  function setReceiver(address _receiver) onlyOwner public{\r\n    receiver = _receiver;\r\n  }\r\n  function draw() onlyOwner public{\r\n    receiver.send(address(this).balance);\r\n  }\r\n\r\n  function setGoing(bool _going) onlyOwner public{\r\n    going = _going;\r\n  }\r\n\r\n  function getFathersLength(address _addr) public view returns(uint256){\r\n    return InviteList[_addr].length;\r\n  }\r\n\r\n  function getChildsLen(address _addr) public view returns(uint256){\r\n  return(ChildAddrs[_addr].length);\r\n  }\r\n\r\n  function setUnit(uint256 _unit) onlyOwner public{\r\n    unit = _unit;\r\n  }\r\n  function setFee(uint8 _fee) onlyOwner public{\r\n    fee = _fee;\r\n  }\r\n  function setMinAmount(uint256 _minAmount) onlyOwner public{\r\n    minAmount = _minAmount;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kol\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"draw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setetherFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserDrawedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"InviteList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"iCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_going\",\"type\":\"bool\"}],\"name\":\"setGoing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"RInviteCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getChildsLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unit\",\"type\":\"uint256\"}],\"name\":\"setUnit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeep\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fInviteCode\",\"type\":\"uint256\"},{\"name\":\"_joinAll\",\"type\":\"bool\"}],\"name\":\"go\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxlevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawKol\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"InviteCode\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getFathersLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"going\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"TotalUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRegister\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ChildAddrs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"inviteCode\",\"type\":\"uint256\"}],\"name\":\"Registed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_realUnit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_userLevel\",\"type\":\"uint8\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithDrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newLevel\",\"type\":\"uint8\"}],\"name\":\"GradeChanged\",\"type\":\"event\"}]","ContractName":"KOLADUSER","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000946e36c2887025c389ef85ea5f9150e0bed4d69000000000000000000000000592b58c423398a18621d96b29044ab168d36704d","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://47787c32f683d58be442f0cdb8124cfbbedd04a3fedd6b96521c5dbd35375ec8"}]}