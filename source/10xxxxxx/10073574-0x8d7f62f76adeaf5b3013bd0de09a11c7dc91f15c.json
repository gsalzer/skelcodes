{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n|| <📜️> Smart Terms of Service <📜️> ||\r\n\r\nDEAR MSG.SENDER(S):\r\n\r\n/ STOS is a project in beta.\r\n// Please audit and use at your own risk.\r\n/// Entry into STOS shall not create an attorney/client relationship.\r\n//// Likewise, STOS should not be construed as legal advice or replacement for professional counsel.\r\n///// STEAL THIS C0D3SL4W \r\n\r\n~presented by Open, ESQ || lexDAO LLC\r\n*/\r\n\r\npragma solidity 0.5.14;\r\n\r\ninterface IToken { // brief ERC-20 interface\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\n/***************\r\nSMART TERMS OF SERVICE\r\n> `Legal Wrapper for Ross Campbell Legal Engineering_$RCLE`\r\n***************/\r\ncontract $RCLETermsOfService { \r\n    // internal token references\r\n    address public leethToken = 0x5A844590c5b8f40ae56190771d06c60b9ab1Da1C; // $RCLE\r\n    IToken private leeth = IToken(leethToken);\r\n    // TOS \r\n    address public offeror;\r\n    uint8 public version;\r\n    string public emoji = \"🎩📜\";\r\n    string public terms;\r\n    \r\n    // Signature tracking \r\n    uint256 public signature; \r\n    mapping (uint256 => Signature) public sigs;\r\n    \r\n    struct Signature {  \r\n        address signatory; \r\n        uint256 number;\r\n        uint8 version;\r\n        string details;\r\n        string terms;\r\n    }\r\n    \r\n    event Amended(uint8 indexed version, string indexed terms);\r\n    event Signed(address indexed signatory, uint256 indexed number, string indexed details);\r\n    event Upgraded(address indexed signatory, uint256 indexed number, string indexed details);\r\n    \r\n    constructor (address _offeror, string memory _terms) public {\r\n        offeror = _offeror;\r\n        terms = _terms;\r\n    } \r\n    \r\n    /***************\r\n    STOS FUNCTIONS\r\n    ***************/\r\n    function signTerms(string memory details) public {\r\n        require(leeth.balanceOf(msg.sender) > 0, \"leethToken balance insufficient\");\r\n\t    uint256 number = signature + 1; \r\n\t    signature = signature + 1;\r\n\t    \r\n        sigs[number] = Signature( \r\n                msg.sender,\r\n                number,\r\n                version,\r\n                details,\r\n                terms);\r\n                \r\n        leeth.transfer(msg.sender, leeth.balanceOf(msg.sender) / 10);\r\n        emit Signed(msg.sender, number, details);\r\n    } \r\n    \r\n    function upgradeSignature(uint256 number, string memory details) public {\r\n        Signature storage sig = sigs[number];\r\n        require(msg.sender == sig.signatory);\r\n        \r\n        sig.version = version;\r\n        sig.details = details;\r\n        sig.terms = terms;\r\n\r\n        emit Upgraded(msg.sender, number, details);\r\n    } \r\n    \r\n    /***************\r\n    MGMT FUNCTIONS\r\n    ***************/\r\n    function amendTerms(string memory _terms) public {\r\n        require(msg.sender == offeror, \"Sender not authorized.\");\r\n        version = version + 1;\r\n        terms = _terms;\r\n        \r\n        emit Amended(version, terms);\r\n    } \r\n    \r\n    function withdrawLEETH() public {\r\n        require(msg.sender == offeror, \"Sender not authorized.\");\r\n        leeth.transfer(msg.sender, leeth.balanceOf(address(this)));\r\n    } \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_offeror\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"terms\",\"type\":\"string\"}],\"name\":\"Amended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"Signed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_terms\",\"type\":\"string\"}],\"name\":\"amendTerms\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"emoji\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"leethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"offeror\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"signTerms\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"terms\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"terms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"upgradeSignature\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawLEETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"$RCLETermsOfService","CompilerVersion":"v0.5.14+commit.1f1aaa4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000001c0aa8ccd568d90d61659f060d1bfb1e6f855a2000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000013746f732e726f73732e6c657864616f2e65746800000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://b10986047099586f601d9a22f01b6672273513421864f71acab2c64c5e84d375"}]}