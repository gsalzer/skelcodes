{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n\r\n\r\n\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function burn(uint256 amount) external;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\n\r\ncontract ENFORCEDTRIBUTE2 {\r\n  ENFORCEDTRIBUTE s1;\r\n  ERC20 public token;\r\n  constructor(ERC20 e,ENFORCEDTRIBUTE s) public{\r\n    token=e;\r\n    s1=s;\r\n  }\r\n  function swap() public{\r\n    require(msg.sender==address(s1),\"transaction must originate with swap 1 contract\");\r\n    token.transfer(address(s1),min(token.balanceOf(address(this)),s1.toSend()));\r\n  }\r\n  function min(uint n1,uint n2) internal pure returns(uint){\r\n    if(n1<n2){\r\n      return n1;\r\n    }\r\n    else{\r\n      return n2;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract ENFORCEDTRIBUTE {\r\n  ENFORCEDTRIBUTE2 public s2;\r\n  ERC20 public token;\r\n  mapping(address=>bool) public admin;\r\n  uint public toSend=10000 ether;\r\n  uint public SWAP_INTERVAL=12 hours;//5 minutes;//1 days;\r\n  uint public nextSwap=now-1;\r\n  bool public swapHere=true;\r\n\r\n  modifier isAdmin() {\r\n      require(admin[msg.sender],\"needs admin\");\r\n      _;\r\n  }\r\n  constructor(ERC20 e) public{\r\n    token=e;\r\n    s2=new ENFORCEDTRIBUTE2(e,this);\r\n    admin[msg.sender]=true;\r\n    admin[0x9bEDbd434cEAda2ce139335f21905f8fF7894C5D]=true;\r\n  }\r\n  function addAdmin(address newadmin) public isAdmin{\r\n    admin[newadmin]=true;\r\n  }\r\n  function changeToSend(uint newsend) public isAdmin{\r\n    toSend=newsend;\r\n  }\r\n  function swap() public{\r\n    require(now>nextSwap,\"must wait for next swap time\");\r\n    uint daysToAdd=1+(now-nextSwap)/SWAP_INTERVAL;\r\n    nextSwap+=SWAP_INTERVAL*daysToAdd;\r\n\r\n    //if this contract has the tokens, swap here, otherwise swap from the other contract\r\n    if(swapHere){\r\n      token.transfer(address(s2),min(token.balanceOf(address(this)),toSend));\r\n    }\r\n    else{\r\n      s2.swap();\r\n    }\r\n    swapHere=!swapHere;\r\n  }\r\n  function canSwapNow() public view returns(bool){\r\n    return now>nextSwap;\r\n  }\r\n  function min(uint n1,uint n2) internal pure returns(uint){\r\n    if(n1<n2){\r\n      return n1;\r\n    }\r\n    else{\r\n      return n2;\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"e\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"SWAP_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newadmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canSwapNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newsend\",\"type\":\"uint256\"}],\"name\":\"changeToSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s2\",\"outputs\":[{\"internalType\":\"contract ENFORCEDTRIBUTE2\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swapHere\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"toSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ENFORCEDTRIBUTE","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007031ab87dcc46818806ec07af46fa8c2ad2a2bfc","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://46065a99b3ae5e0eedc981e76a7a51fbf44aab0cbfd0b2018968b364a48cea8f"}]}