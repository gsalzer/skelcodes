{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\n\r\ncontract Resolver {\r\n    struct Balances {\r\n        address owner;\r\n        uint[] balance;\r\n    }\r\n    function getBalances(address[] memory owners, address[] memory tknAddress) public view returns (Balances[] memory) {\r\n        Balances[] memory tokensBal = new Balances[](owners.length);\r\n        for (uint i = 0; i < owners.length; i++) {\r\n            uint[] memory bals = new uint[](tknAddress.length);\r\n            for (uint j = 0; j < tknAddress.length; j++) {\r\n                if (tknAddress[j] == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE) {\r\n                    bals[j] = owners[i].balance;\r\n                } else {\r\n                    TokenInterface token = TokenInterface(tknAddress[j]);\r\n                    bals[j] = token.balanceOf(owners[i]);\r\n                }\r\n            }\r\n            tokensBal[i] = Balances({\r\n                owner: owners[i],\r\n                balance: bals\r\n            });\r\n        }\r\n        return tokensBal;\r\n    }\r\n}\r\n\r\n\r\ncontract InstaPowerERC20Resolver is Resolver {\r\n    string public constant name = \"ERC20-Power-Resolver-v1\";\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tknAddress\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balance\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Resolver.Balances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaPowerERC20Resolver","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://88c949e7dd11df9a78f4beb5175d6454efe9975920f4caec408410281a51bbc0"}]}