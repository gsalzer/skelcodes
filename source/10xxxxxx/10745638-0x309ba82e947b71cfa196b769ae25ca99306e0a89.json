{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\ninterface ILexAIR { // brief interface for LexAIR\r\n    function isRegistered(address account) external view returns (bool);\r\n}\r\n\r\ncontract LexAIRtest {\r\n    uint256 public stuffDone;\r\n    address public LexAIRcontract = 0x365c0F05CCfAE37899b55D79459eB7C0fCB20e3a;\r\n    \r\n    function doAccreditedStuff() external {\r\n        require(ILexAIR(LexAIRcontract).isRegistered(msg.sender), \"!registered\");\r\n        \r\n        stuffDone += 1;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"LexAIRcontract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doAccreditedStuff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stuffDone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LexAIRtest","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://489d043c7baf7bddde03b7f2c08584a42fdd1d850767f906babe2431aab7464f"}]}