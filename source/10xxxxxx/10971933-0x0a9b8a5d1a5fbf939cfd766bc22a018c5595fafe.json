{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface CrTokenInterface {\r\n    function underlying() external view returns (address);\r\n}\r\n\r\ninterface ConnectorsInterface {\r\n    function chief(address) external view returns (bool);\r\n}\r\n\r\ninterface IndexInterface {\r\n    function master() external view returns (address);\r\n}\r\n\r\ncontract Helpers {\r\n    address public constant connectors = 0xD6A602C01a023B98Ecfb29Df02FBA380d3B21E0c;\r\n    address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\r\n    uint public version = 1;\r\n\r\n    mapping (address => address) public crTokenMapping;\r\n\r\n    event LogAddcrTokenMapping(address crToken);\r\n    \r\n    modifier isChief {\r\n        require(\r\n            ConnectorsInterface(connectors).chief(msg.sender) ||\r\n            IndexInterface(instaIndex).master() == msg.sender, \"not-Chief\");\r\n        _;\r\n    }\r\n\r\n    function _addCrtknMapping(address crTkn) internal {\r\n        address cErc20 = crTkn;\r\n        address erc20 = CrTokenInterface(cErc20).underlying();\r\n        require(crTokenMapping[erc20] == address(0), \"Token-Already-Added\");\r\n        crTokenMapping[erc20] = cErc20;\r\n        emit LogAddcrTokenMapping(crTkn);\r\n    }\r\n\r\n    function addCrtknMapping(address[] memory crTkns) public isChief {\r\n        require(crTkns.length > 0, \"No-CrToken-length\");\r\n        for (uint i = 0; i < crTkns.length; i++) {\r\n            _addCrtknMapping(crTkns[i]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\ncontract InstaCreamMapping is Helpers {\r\n    constructor(address[] memory crTkns) public {\r\n        address ethAddress = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n        address crEth = 0xD06527D5e56A3495252A528C4987003b712860eE;\r\n        crTokenMapping[ethAddress] = crEth;\r\n        for (uint i = 0; i < crTkns.length; i++) {\r\n            _addCrtknMapping(crTkns[i]);\r\n        }\r\n    }\r\n\r\n    string constant public name = \"Cream-finance-v1.0\";\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"crTkns\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"crToken\",\"type\":\"address\"}],\"name\":\"LogAddcrTokenMapping\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"crTkns\",\"type\":\"address[]\"}],\"name\":\"addCrtknMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"crTokenMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaCreamMapping","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000797aab1ce7c01eb727ab980762ba88e7133d215700000000000000000000000044fbebd2f576670a6c33f6fc0b00aa8c5753b322","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://649c10ffd2ee0bfd3f754c89dd8dee56fd57841bedb9c9cf6bb7d102ea931efc"}]}