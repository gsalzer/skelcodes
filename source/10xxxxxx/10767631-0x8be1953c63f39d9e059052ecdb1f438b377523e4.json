{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\ncontract SHRIMPTokenInterface {\r\n    function balanceOf(address who) external view returns(uint256);\r\n}\r\ncontract UNISWAPTokenInterface {\r\n    function balanceOf(address who) external view returns(uint256);\r\n    function totalSupply() external view returns (uint256);\r\n}\r\n\r\n\r\n\r\ncontract vote {\r\n    mapping(uint => uint) public event_start_time;\r\n    mapping(uint => uint) public event_end_time;\r\n    address public owner;\r\n    uint public now_id;\r\n    mapping (address => mapping (uint => bool)) public vote_content;\r\n    event Voter(uint indexed id,address voter);\r\n    event Purposal(uint indexed id, string content);\r\n    SHRIMPTokenInterface public shrimp = SHRIMPTokenInterface(0x38c4102D11893351cED7eF187fCF43D33eb1aBE6);\r\n    UNISWAPTokenInterface public uniswap = UNISWAPTokenInterface(0xeBA5D22bBeB146392D032A2F74a735d66A32aeE4);\r\n    SHRIMPTokenInterface public zombieshrimp = SHRIMPTokenInterface(0x1dD61127758c47Ab95a1931E02D3517f8d0dD1A6);\r\n\r\n    constructor()public{\r\n        owner = msg.sender;\r\n        now_id = 0;\r\n    }\r\n    function agree_vote(uint id)public{\r\n        // require(event_start_time[id] <= now && event_end_time[id] >= now);\r\n        vote_content[msg.sender][id] = true;\r\n        emit Voter(id,msg.sender);\r\n    }\r\n    function disagree_vote(uint id)public{\r\n        // require(event_start_time[id] <= now && event_end_time[id] >= now);\r\n        vote_content[msg.sender][id] = false;\r\n    }\r\n    function get_vote(uint id, address[] _owners)public view returns(uint tickets){\r\n        uint vote_count = 0;\r\n        address uniswapAddress = 0xeBA5D22bBeB146392D032A2F74a735d66A32aeE4;\r\n        for (uint i=0; i<_owners.length; i++) {\r\n           if(vote_content[_owners[i]][id] == true){\r\n               vote_count+=shrimp.balanceOf(_owners[i]);\r\n               vote_count+=(shrimp.balanceOf(uniswapAddress)*uniswap.balanceOf(_owners[i])/uniswap.totalSupply());\r\n                vote_count+=zombieshrimp.balanceOf(_owners[i]);\r\n           }\r\n        }\r\n        return vote_count;\r\n    }\r\n    function update_event_time(uint id, uint ev_time, uint ev_end_time)public{\r\n        require(msg.sender == owner);\r\n        event_start_time[id] = ev_time;\r\n        event_end_time[id] = ev_end_time;\r\n    }\r\n    function purpose(string content)public{\r\n        emit Purposal(now_id, content);\r\n        now_id ++;\r\n    }\r\n    function get_time()public view returns(uint timestamp){\r\n        return now;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"event_end_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"now_id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswap\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vote_content\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zombieshrimp\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"content\",\"type\":\"string\"}],\"name\":\"purpose\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"agree_vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_time\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"_owners\",\"type\":\"address[]\"}],\"name\":\"get_vote\",\"outputs\":[{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"disagree_vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"event_start_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"ev_time\",\"type\":\"uint256\"},{\"name\":\"ev_end_time\",\"type\":\"uint256\"}],\"name\":\"update_event_time\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"shrimp\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"content\",\"type\":\"string\"}],\"name\":\"Purposal\",\"type\":\"event\"}]","ContractName":"vote","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4db45bb7f91201e0f8a9c1a8d8a29fcf546e07c5a695385da97a782646f7f77e"}]}