{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/interfaces/IUniswapV2Pair.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\ninterface IUniswapV2Pair {\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n}\r\n\r\n// File: contracts/interfaces/IUniswapV2Factory.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (IUniswapV2Pair pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\n// File: contracts/UniswapV2Helper.sol\r\n\r\npragma solidity ^0.5.12;\r\n\r\n\r\n\r\n\r\ncontract UniswapV2Helper {\r\n\r\n    IUniswapV2Factory constant factory =  IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\r\n\r\n    // need to filter 0x0000000000000000000000000000000000000000 addresses\r\n    function getPairsByReserveToken(address reserveToken) external view returns (address[] memory pairs) {\r\n\r\n        uint256 pairsCount = factory.allPairsLength();\r\n        pairs = new address[](pairsCount);\r\n\r\n        for (uint i; i < pairsCount; i++) {\r\n            IUniswapV2Pair pair = factory.allPairs(i);\r\n            if (\r\n                reserveToken != pair.token0() &&\r\n                reserveToken != pair.token1()\r\n            ) {\r\n                continue;\r\n            }\r\n\r\n            pairs[i] = address(pair);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserveToken\",\"type\":\"address\"}],\"name\":\"getPairsByReserveToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"pairs\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"UniswapV2Helper","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3ae1f1dea1f35cd5c2cd16a658475c1d06b8acc1d9218fb4875d8674db07871e"}]}