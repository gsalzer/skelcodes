{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.26;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev  Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n      c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n\r\n\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert( b > 0 );   // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b);   // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n\r\n\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      require( b != 0 );\r\n      return a % b;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract PublicFun{\r\n\r\n   function isContract(address addr) view internal returns (bool) {\r\n          uint size;\r\n          assembly { size := extcodesize(addr) }\r\n                   if( size > 0 ){\r\n                      return true;\r\n                   }\r\n                   if( size == 0  ){\r\n                      return false;\r\n                   }\r\n      }\r\n\r\n\r\n\r\n\r\n  function w(uint val) pure internal  returns (uint) {   return val * 1000000000000000000 ;  }\r\n\r\n  function t(uint val) pure internal returns (uint) { return val * 1 ether;  }\r\n\r\n  function f(uint val) pure internal returns (uint) { return val * 1 finney;  }\r\n\r\n  function sz(uint val) pure internal returns (uint) { return val * 1 szabo;  }\r\n\r\n  function s(uint val) pure internal returns (uint) { return val * 1 seconds; }\r\n\r\n  function m(uint val) pure internal returns (uint)  { return val * 1 minutes; }\r\n\r\n  function h(uint val) pure internal returns (uint) { return val * 1 hours; }\r\n\r\n  function d(uint val) pure internal returns (uint) {  return val * 1 days;  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract Ownable is PublicFun {\r\n\r\n  address public owner;\r\n  address public COO;\r\n  address public CTO;\r\n\r\n\r\n  mapping (address => uint ) internal AdminAddr;\r\n\r\n\r\n  mapping (address => uint ) internal AuthAddr;\r\n\r\n\r\n  mapping (uint => address[] ) internal RecordingAddr;\r\n\r\n\r\n  uint[8] public Switch0 = [0,0,1,1,1,1,0,1];\r\n\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender account.\r\n   *\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n    COO = msg.sender;\r\n    CTO = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n      modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n      }\r\n\r\n\r\n      modifier onlyCOO() {\r\n        require( Switch0[0] == 0 && msg.sender == COO );\r\n        _;\r\n      }\r\n\r\n\r\n      modifier onlyCTO() {\r\n        require( Switch0[1] == 0 && msg.sender == CTO );\r\n        _;\r\n      }\r\n\r\n\r\n\r\n      modifier onlyAuthAddr() {\r\n        require( Switch0[2] == 0 );\r\n\r\n         if( isContract( msg.sender ) == false ){\r\n                require( msg.sender == CTO );\r\n          }else{\r\n                require( isContract( msg.sender ) == true );\r\n                require( AuthAddr[msg.sender] == 1 );\r\n          }\r\n\r\n          _;\r\n      }\r\n\r\n\r\n\r\n      modifier onlyAdminAddr() {\r\n\r\n        require( Switch0[3] == 0 );\r\n\r\n        if( isContract( msg.sender ) == false ){\r\n           require( msg.sender == CTO );\r\n        }else{\r\n           require( isContract( msg.sender ) == true );\r\n           require( AdminAddr[msg.sender] == 1 );\r\n        }\r\n        _;\r\n      }\r\n\r\n\r\n\r\n\r\n    function SetAdminAddr(address Addr,uint val) public onlyCTO returns (bool) {\r\n       require( Switch0[4] == 0 && val >= 0 && val <= 1 );\r\n         if( AdminAddr[Addr] != val ){\r\n              AdminAddr[Addr] = val;\r\n              if( val == 1 ){\r\n                RecordingAddr[1].push( Addr );\r\n              }\r\n          }\r\n       return true;\r\n    }\r\n\r\n\r\n\r\n\r\n  function SetAuthAddr(address Addr,uint val) public onlyAdminAddr returns (bool) {\r\n      require( Switch0[5] == 0 && val >= 0 && val <= 1);\r\n\r\n       if( AuthAddr[Addr] != val ){\r\n           AuthAddr[Addr] = val ;\r\n            if( val == 1 ){\r\n                RecordingAddr[2].push( Addr );\r\n             }\r\n        }\r\n      return true;\r\n  }\r\n\r\n\r\n\r\n    function RecordingAddrDel(uint key)  public onlyCTO returns (bool){\r\n        delete RecordingAddr[key];\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n   function transferAddress(address _newAddress,uint _type) public onlyOwner returns (bool) {\r\n     require( Switch0[6] == 0 && _newAddress != address(0) && _type > 0  && _type < 4);\r\n         if( _type == 1 ){\r\n               owner = _newAddress;\r\n         }\r\n         if ( _type == 2 ){\r\n              COO = _newAddress;\r\n         }\r\n         if( _type == 3 ){\r\n              CTO = _newAddress;\r\n         }\r\n         return true;\r\n   }\r\n\r\n\r\n\r\n\r\n  function SetSwitch0(uint key,uint val) public onlyCTO returns (bool) {\r\n      if( Switch0[key] != val ){\r\n          Switch0[key] = val;\r\n      }\r\n      return true;\r\n  }\r\n\r\n\r\n\r\n  function renounceOwnership() public onlyOwner returns (bool){\r\n    require( Switch0[7] == 0 );\r\n    owner = address(0);\r\n\r\n    return true;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function AdminAuthAddrAll(address Addr) view  public onlyAuthAddr returns (uint,uint){\r\n        return (AdminAddr[Addr],AuthAddr[Addr]);\r\n    }\r\n\r\n    function RecordingSwitch0All() view  public onlyAuthAddr returns (address[],address[],uint,uint,uint[8]){\r\n        return (RecordingAddr[1],RecordingAddr[2],RecordingAddr[1].length,RecordingAddr[2].length,Switch0);\r\n    }\r\n\r\n    function ViewRecordingAddr(uint key1,uint key2) view  public onlyAuthAddr returns (address){\r\n        return RecordingAddr[key1][key2];\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface tokenRecipient {\r\n  function receiveTransfer(address _from, uint256 _value, address _token, bytes _extraData) external returns (bool);\r\n  function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external returns (bool);\r\n\r\n  function VerifyTransfer(address _from,address _to,uint _value) view external returns (uint);\r\n  function VerifyTransferFrom(address _from,address _sender,address _to,uint _value) view external returns (uint);\r\n\r\n  function TransferBurn(uint256 _value) external returns (bool);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n contract ERC20 {\r\n        function balanceOf(address who) view public returns  (uint256);\r\n        function allowance(address owner, address spender) view public returns (uint256);\r\n\r\n        function transfer(address to, uint256 value) public returns (bool);\r\n        function approve(address spender, uint256 value) public returns (bool);\r\n        function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(address indexed owner,address indexed spender,uint256 value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\ncontract TokenERC20 is Ownable,ERC20 {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public decimals = 18;\r\n  uint256 public totalSupply;\r\n\r\n  mapping (address => uint256) public balanceOf;\r\n  mapping (address => mapping (address => uint256)) public allowance;\r\n  mapping ( address => uint ) public frozenAccount;\r\n\r\n\r\n    uint[26] public values =   [uint8(0),0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];\r\n\r\n\r\n  tokenRecipient public VTObject;\r\n\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Burn(address indexed from, uint256 value);\r\n  event FrozenFunds(address target,uint frozen);\r\n\r\n  event TransferFrom(address indexed _from ,address indexed _msgsender ,address indexed _to ,uint256 _value);\r\n  event IncreaseApproval(address indexed _msgsender,address indexed _spender,uint256 _addedValue);\r\n  event DecreaseApproval(address indexed _msgsender,address indexed  _spender ,uint256  _subtractedValue);\r\n  event BurnFrom(address indexed _from,address indexed _msgsender,uint256 _value);\r\n\r\n\r\n\r\n\r\n\r\n  constructor(uint256 _totalSupply,string _name,string tokenSymbol) public {\r\n      totalSupply = _totalSupply * 10 ** uint256(decimals);\r\n\r\n      balanceOf[msg.sender] = totalSupply;\r\n\r\n      name = _name;\r\n      symbol = tokenSymbol;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      function _filters0(uint8 _key,address _to,uint256 _value) view  internal  returns (bool){\r\n          require(values[_key] == 0 );\r\n          require( frozenAccount[_to] == 0 );\r\n          require( _value > 0 &&  _value < totalSupply );\r\n\r\n          if( values[21] == 0 ){\r\n            require(  _to != address(0) );\r\n          }\r\n          return true;\r\n          }\r\n\r\n\r\n\r\n      function _filters(uint8 _key,address _from,address _to,uint256 _value) view  internal  returns (bool){\r\n          require(_filters0(_key, _to,_value));\r\n          require( frozenAccount[_from] == 0 && _from != address(0));\r\n          return true;\r\n          }\r\n\r\n\r\n\r\n      function _filters2(uint8 _key,address _from,address _to,uint256 _value,address _owner) view  internal  returns (bool){\r\n          require(_filters(_key,_from,_to,_value));\r\n          require(frozenAccount[_owner] == 0 );\r\n          return true;\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       function balanceOf(address _addr) view public returns (uint256) {\r\n        return balanceOf[_addr] ;\r\n      }\r\n\r\n      function allowance(address _owner, address _spender) view public returns (uint256) {\r\n        return allowance[_owner][_spender];\r\n      }\r\n\r\n      function Switch0All() view public returns (uint[8]) {\r\n        return Switch0;\r\n      }\r\n\r\n      function valuesAll() view public returns (uint[26]) {\r\n        return values;\r\n      }\r\n\r\n\r\n\r\n   function _transfer0(address _from, address _to, uint _value) internal  returns (bool) {\r\n\r\n         require(_value <= balanceOf[_from]);\r\n\r\n         balanceOf[_from] = balanceOf[_from].sub(_value);\r\n         balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n         emit Transfer(_from, _to, _value);\r\n         return true;\r\n       }\r\n\r\n\r\n\r\n\r\n       function _transfer(address _from, address _to, uint _value) internal  returns (bool) {\r\n\r\n           require( _filters(0,_from,_to,_value) );\r\n\r\n           if( values[22] != 0 ){\r\n                require( VTObject.VerifyTransfer( _from, _to,_value) == 1 );\r\n            }\r\n\r\n           require( _transfer0(_from, _to,_value) );\r\n\r\n           return true;\r\n           }\r\n\r\n\r\n\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool){\r\n           require( _transfer(msg.sender, _to, _value) );\r\n\r\n           if( values[25] == 0 ){\r\n              require( VTObject.TransferBurn( _value ) == true   );\r\n           }\r\n\r\n           return true;\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function _approve(address _spender,address _to,uint256 _value) internal returns (bool) {\r\n           require(_filters(1,_spender,_to,_value));\r\n           allowance[_spender][_to] = _value;\r\n           emit Approval(_spender, _to, _value);\r\n           return true;\r\n         }\r\n\r\n\r\n    function approve(address _to, uint256 _value) public returns (bool){\r\n           require( _approve(msg.sender,_to, _value) );\r\n           return true;\r\n        }\r\n\r\n\r\n\r\n        function _transferFrom0(address _from,address _spender,address _to, uint256 _value) internal returns (bool) {\r\n\r\n            require( _value <= balanceOf[_from] && _value <= allowance[_from][_spender]);\r\n\r\n            allowance[_from][_spender] = allowance[_from][_spender].sub(_value);\r\n\r\n            if( values[24] != 0 ){\r\n               require( _transfer( _from, _to, _value ) );\r\n            }else{\r\n               require( _transfer0( _from, _to, _value ) );\r\n            }\r\n\r\n            emit Transfer(_from, _to, _value);\r\n            emit TransferFrom(_from ,_spender, _to , _value);\r\n\r\n            return true;\r\n          }\r\n\r\n\r\n\r\n\r\n        function _transferFrom(address _from,address _spender, address _to, uint _value) internal  returns (bool) {\r\n              require(_filters2(2,_from,_to,_value,_spender));\r\n\r\n             if( values[23] != 0 ){\r\n                   require( VTObject.VerifyTransferFrom( _from,_spender,_to,_value ) == 1 );\r\n               }\r\n              require( _transferFrom0(_from,_spender,_to,_value) );\r\n              return true;\r\n            }\r\n\r\n\r\n\r\n\r\n          function transferFrom(address _from, address _to, uint256 _value) public returns (bool){\r\n                require( _transferFrom(_from,msg.sender,_to,_value) );\r\n\r\n                if( values[25] == 0 ){\r\n                   require( VTObject.TransferBurn( _value ) == true   );\r\n                }\r\n\r\n                return true;\r\n             }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      function _increaseApproval(address _spender, address _to, uint _addedValue) internal returns (bool) {\r\n         require(_filters(3,_spender,_to,_addedValue));\r\n\r\n         allowance[_spender][_to] = allowance[_spender][_to].add(_addedValue);\r\n\r\n         emit Approval(_spender,_to,allowance[_spender][_to]);\r\n         emit IncreaseApproval(_spender,_to, _addedValue);\r\n         return true;\r\n         }\r\n\r\n\r\n      function increaseApproval(address _to, uint _addedValue) public returns (bool) {\r\n            require( _increaseApproval(msg.sender,_to,_addedValue) );\r\n            return true;\r\n         }\r\n\r\n\r\n\r\n      function _decreaseApproval(address _spender,address _to, uint _subtractedValue) internal returns (bool) {\r\n          require(_filters(4,_spender,_to,_subtractedValue));\r\n\r\n          uint oldValue = allowance[_spender][_to];\r\n\r\n          if (_subtractedValue > oldValue) {\r\n                 allowance[_spender][_to] = 0;\r\n           } else {\r\n                 allowance[_spender][_to] = oldValue.sub(_subtractedValue);\r\n           }\r\n\r\n           emit Approval(_spender, _to, allowance[_spender][_to]);\r\n           emit DecreaseApproval(_spender, _to , _subtractedValue);\r\n           return true;\r\n         }\r\n\r\n\r\n\r\n       function decreaseApproval(address _to, uint _subtractedValue) public returns (bool) {\r\n             require( _decreaseApproval(msg.sender,_to,_subtractedValue) );\r\n             return true;\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n         function _burn(address _who, uint256 _value) internal returns (bool){\r\n              require(_filters0(5,_who,_value));\r\n              require(_value <= balanceOf[_who]);\r\n\r\n              balanceOf[_who] = balanceOf[_who].sub(_value);\r\n              totalSupply = totalSupply.sub(_value);\r\n\r\n              emit Burn(_who, _value);\r\n              emit Transfer(_who, address(0), _value);\r\n              return true;\r\n             }\r\n\r\n\r\n\r\n        function burn(uint256 _value) public returns (bool) {\r\n              require( _burn(msg.sender, _value) );\r\n              return true;\r\n             }\r\n\r\n\r\n\r\n\r\n         function _burnFrom(address _from,address _spender, uint256 _value) internal returns (bool){\r\n               require( _filters(6,_spender,_from,_value) );\r\n               require( _value <= allowance[_from][_spender] );\r\n\r\n               allowance[_from][_spender] = allowance[_from][_spender].sub(_value);\r\n\r\n               require( _burn(_from, _value) );\r\n               emit BurnFrom(_from,_spender,_value);\r\n               return true;\r\n           }\r\n\r\n\r\n          function burnFrom(address _from, uint256 _value) public returns (bool) {\r\n               require( _burnFrom(_from,msg.sender,_value) );\r\n               return true;\r\n           }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     function _mintToken(address _target, uint256 _mintedAmount) internal returns (bool) {\r\n            require(_filters0(7,_target,_mintedAmount));\r\n\r\n            totalSupply = totalSupply.add(_mintedAmount);\r\n\r\n            balanceOf[_target] = balanceOf[_target].add(_mintedAmount);\r\n\r\n            emit Transfer(0, this, _mintedAmount);\r\n            emit Transfer(this, _target, _mintedAmount);\r\n            return true;\r\n         }\r\n\r\n\r\n    function mintToken(address _target, uint256 _mintedAmount) onlyCOO public returns (bool) {\r\n            require( _mintToken(_target,_mintedAmount) );\r\n            return true;\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     function _freezeAccount(address _target,uint _freeze)  internal  returns (bool) {\r\n           require(values[8]==0 && _freeze <= 1 && frozenAccount[_target] != _freeze);\r\n           frozenAccount[_target] = _freeze;\r\n           emit  FrozenFunds(_target,_freeze);\r\n           return true;\r\n        }\r\n\r\n\r\n     function freezeAccount(address _target,uint _freeze) onlyCOO public returns (bool) {\r\n           require( _freezeAccount(_target,_freeze) );\r\n           return true;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     function transferAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool) {\r\n          require(_filters(9,msg.sender,_spender,_value));\r\n\r\n          require( _spender != address(this) );\r\n\r\n          tokenRecipient spender = tokenRecipient(_spender);\r\n\r\n          require( transfer(_spender, _value) );\r\n          bool t_sp =  spender.receiveTransfer(msg.sender, _value, this, _extraData);\r\n          require( t_sp == true );\r\n\r\n          return true;\r\n        }\r\n\r\n\r\n\r\n       function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool) {\r\n             require(_filters(10,msg.sender,_spender,_value));\r\n\r\n             require(_spender != address(this));\r\n\r\n             tokenRecipient spender = tokenRecipient(_spender);\r\n\r\n             require( approve(_spender, _value) );\r\n             bool a_sp =  spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n             require( a_sp == true );\r\n\r\n             return true;\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   function setValues(uint8 _key,uint _val)  onlyCTO public returns (uint){\r\n          require( _key < 27 && _val <= 1 );\r\n          values[_key] = _val;\r\n          return values[_key];\r\n     }\r\n\r\n\r\n\r\n   function setVTObject(address Addr) onlyCTO public returns (bool){\r\n       require( values[11] == 0 );\r\n       VTObject = tokenRecipient(Addr);\r\n       return true;\r\n     }\r\n\r\n\r\n\r\n\r\n   function setName(string _name,string _tokenSymbol,uint8 _decimals,uint256 _totalSupply)  onlyCTO public returns (bool){\r\n       require( values[12] == 0 );\r\n       name = _name;\r\n       symbol = _tokenSymbol;\r\n       decimals = _decimals;\r\n       totalSupply = _totalSupply;\r\n       return true;\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function transferAPI(address _spender,address _to, uint256 _value) onlyAuthAddr public returns (bool){\r\n         require( values[13] == 0 );\r\n         require( _transfer(_spender, _to, _value) );\r\n\r\n\r\n         if( values[25] == 0 ){\r\n            require( VTObject.TransferBurn( _value ) == true   );\r\n         }\r\n\r\n         return true;\r\n       }\r\n\r\n\r\n\r\n   function approveAPI(address _spender,address _to, uint256 _value) onlyAuthAddr public returns (bool){\r\n          require( values[14] == 0 );\r\n          require( _approve(_spender,_to, _value) );\r\n          return true;\r\n       }\r\n\r\n\r\n\r\n   function transferFromAPI(address _from,address _spender, address _to, uint256 _value) onlyAuthAddr public returns (bool){\r\n         require( values[15] == 0 );\r\n         require( _transferFrom(_from,_spender,_to,_value) );\r\n\r\n\r\n         if( values[25] == 0 ){\r\n            require( VTObject.TransferBurn( _value ) == true   );\r\n         }\r\n\r\n         return true;\r\n      }\r\n\r\n\r\n\r\n\r\n  function increaseApprovalAPI(address _spender,address _to, uint _addedValue) onlyAuthAddr public returns (bool) {\r\n        require( values[16] == 0 );\r\n        require( _increaseApproval(_spender,_to,_addedValue) );\r\n        return true;\r\n     }\r\n\r\n\r\n\r\n function decreaseApprovalAPI(address _spender,address _to, uint _subtractedValue) onlyAuthAddr public returns (bool) {\r\n         require( values[17] == 0 );\r\n         require( _decreaseApproval(_spender,_to,_subtractedValue) );\r\n         return true;\r\n     }\r\n\r\n\r\n\r\n   function burnAPI(address _spender,uint256 _value) onlyAuthAddr public returns (bool) {\r\n         require( values[18] == 0 );\r\n         require( _burn(_spender, _value) );\r\n         return true;\r\n      }\r\n\r\n\r\n\r\n  function burnFromAPI(address _from,address _spender, uint256 _value) onlyAuthAddr public returns (bool) {\r\n         require( values[19] == 0 );\r\n         require( _burnFrom(_from,_spender,_value) );\r\n         return true;\r\n      }\r\n\r\n\r\n\r\n  function freezeAccountAPI(address _target,uint _freeze) onlyAuthAddr public returns (bool) {\r\n        require( values[20] == 0 );\r\n        require( _freezeAccount(_target,_freeze) );\r\n        return true;\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"Addr\",\"type\":\"address\"}],\"name\":\"setVTObject\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"RecordingAddrDel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"valuesAll\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[26]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"uint256\"}],\"name\":\"freezeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"uint256\"}],\"name\":\"freezeAccountAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CTO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Switch0All\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[8]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApprovalAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RecordingSwitch0All\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[8]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Switch0\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"values\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VTObject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"setName\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFromAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"},{\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"transferAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key1\",\"type\":\"uint256\"},{\"name\":\"key2\",\"type\":\"uint256\"}],\"name\":\"ViewRecordingAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"Addr\",\"type\":\"address\"}],\"name\":\"AdminAuthAddrAll\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApprovalAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Addr\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetAdminAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"uint8\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Addr\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetAuthAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"uint256\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetSwitch0\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnAPI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"uint256\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_msgsender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_msgsender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"IncreaseApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_msgsender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"DecreaseApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_msgsender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BurnFrom\",\"type\":\"event\"}]","ContractName":"TokenERC20","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000218711a00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000007636f6f6c626572000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003636f620000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://77a6405afa43e532f35673e931af9ca70841e4891d376415c25977aa96953a99"}]}