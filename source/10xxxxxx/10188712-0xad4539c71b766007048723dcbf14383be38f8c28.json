{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\n\r\ncontract TokenInterface {\r\n\tfunction _transfer(address _from, address _to, uint256 _value) internal returns (bool);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n\tfunction _burn(address _from, uint256 _value) internal returns (bool);\r\n\tfunction burn(uint256 _value) public returns (bool);\r\n\tfunction burnFrom(address _from, uint256 _value) public returns (bool);\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool);\r\n\tfunction balanceOf(address _owner) public constant returns (uint256);\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Burn(address indexed _from, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract EssentialWorkersToken is TokenInterface {\r\n    \r\n\tstring public name = \"EssentialWorkersToken\";\r\n\tstring public symbol = \"EWT\";\r\n\tuint8 public decimals = 2;\r\n    uint256 public totalSupply = 100000000000 * 10 ** uint256(decimals);\r\n    \r\n    \r\n\r\n\tmapping (address => uint256) public balances;\r\n\tmapping (address => mapping (address => uint256)) public allowed;\r\n\t\r\n\t\r\n\r\n\tfunction EssentialWorkersToken() public {\r\n\t\tbalances[msg.sender] = totalSupply;\r\n\t\t\r\n    }\r\n    \r\n    \r\n   \r\n\t// Transfer amount from one account to another (may require approval)\r\n\tfunction _transfer(address _from, address _to, uint256 _value) internal returns (bool) {\r\n\t\trequire(_to != 0x0 && balances[_from] >= _value && _value > 0);\r\n\t\tbalances[_from] -= _value;\r\n\t\tbalances[_to] += _value;\r\n\t\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\treturn _transfer(msg.sender, _to, _value);\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n    \tallowed[_from][msg.sender] -= _value;\r\n\t\treturn _transfer(_from, _to, _value);\r\n\t}\r\n\r\n\t// Burn amount from account (may require approval)\r\n\tfunction _burn(address _from, uint256 _value) internal returns (bool) {\r\n\t\trequire(balances[_from] >= _value && _value > 0);\r\n\t\tbalances[_from] -= _value;\r\n\t\ttotalSupply -= _value;\r\n\t\tBurn(_from, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) public returns (bool) {\r\n\t\treturn _burn(msg.sender, _value);\r\n\t}\r\n\r\n\tfunction burnFrom(address _from, uint256 _value) public returns (bool) {\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n\t\treturn _burn(_from, _value);\r\n\t}\r\n\r\n\t// Approve spender from owner's account\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Return balance\r\n\tfunction balanceOf(address _owner) public constant returns (uint256) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\t// Return allowance\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EssentialWorkersToken","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://588cff570a593eef5a4c88bb1d6747d9abcac0b54691927ca31550ca19ef8f1a"}]}