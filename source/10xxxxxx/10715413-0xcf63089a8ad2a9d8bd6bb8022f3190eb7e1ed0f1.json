{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.5.17;\r\n\r\ninterface Medianizer {\r\n    function read() external view returns (bytes32);\r\n}\r\ninterface OracleSecurityModule {\r\n    function peek() external view returns (bytes32,bool);\r\n    function peep() external view returns (bytes32,bool);\r\n    function bud(address) external view returns (uint256);\r\n}\r\n\r\ncontract OSMedianizer {\r\n    \r\n    \r\n    mapping(address => bool) public authorized;\r\n    address public governance;\r\n    \r\n    OracleSecurityModule constant public OSM = OracleSecurityModule(0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763);\r\n    Medianizer constant public MEDIANIZER = Medianizer(0x729D19f657BD0614b4985Cf1D82531c67569197B);\r\n    \r\n    constructor() public {\r\n        governance = msg.sender;\r\n    }\r\n    \r\n    function setGovernance(address _governance) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        governance = _governance;\r\n    }\r\n    \r\n    function setAuthorized(address _authorized) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        authorized[_authorized] = true;\r\n    }\r\n    \r\n    function revokeAuthorized(address _authorized) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        authorized[_authorized] = false;\r\n    }\r\n    \r\n    function read() external view returns (uint price, bool osm) {\r\n        if (authorized[msg.sender]) {\r\n          if (OSM.bud(address(this))==1) {\r\n              (bytes32 _val,) = OSM.peek(); \r\n              return (uint(_val),true);\r\n          }\r\n        }\r\n        return (uint(MEDIANIZER.read()),false);\r\n    }\r\n    \r\n    function foresight() external view returns (uint price, bool osm) {\r\n        if (authorized[msg.sender]) {\r\n          if (OSM.bud(address(this))==1) {\r\n              (bytes32 _val,) = OSM.peep(); \r\n              return (uint(_val),true);\r\n          }\r\n        }\r\n        return (uint(MEDIANIZER.read()),false);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"MEDIANIZER\",\"outputs\":[{\"internalType\":\"contract Medianizer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OSM\",\"outputs\":[{\"internalType\":\"contract OracleSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foresight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"osm\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"osm\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"revokeAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"OSMedianizer","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d051512fdffaa265785f0049b58ee95ca687e22cb693192b68922335b9aef2a5"}]}