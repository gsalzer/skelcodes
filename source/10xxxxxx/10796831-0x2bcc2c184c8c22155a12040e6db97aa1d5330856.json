{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\n\r\ncontract Ownable {\r\n\r\n\r\n  address newOwner;\r\n  mapping (address=>bool) owners;\r\n  address owner;\r\n\r\n// all events will be saved as log files\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  event AddOwner(address newOwner,string name);\r\n  event RemoveOwner(address owner);\r\n\r\n   constructor() public {\r\n    owner = msg.sender;\r\n    owners[msg.sender] = true;\r\n  }\r\n\r\n  modifier onlyOwner(){\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  modifier onlyOwners(){\r\n    require(owners[msg.sender] == true || msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  \r\n  function addOwner(address _newOwner,string memory newOwnerName) public onlyOwners{\r\n    require(owners[_newOwner] == false);\r\n    require(newOwner != msg.sender);\r\n    owners[_newOwner] = true;\r\n    emit AddOwner(_newOwner,newOwnerName);\r\n  }\r\n\r\n\r\n  function removeOwner(address _owner) public onlyOwners{\r\n    require(_owner != msg.sender);  // can't remove your self\r\n    owners[_owner] = false;\r\n    emit RemoveOwner(_owner);\r\n  }\r\n\r\n  function isOwner(address _owner) public view returns(bool){\r\n    return owners[_owner];\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n\tevent Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n       \r\n    function approve(address spender, uint256 tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n    \r\n    function setBalance(address _addr,uint256 _amount) public returns(bool); // only for SWDAI\r\n}\r\n\r\ncontract SZDAI is Ownable {\r\n    string public name     = \"szDAI\";\r\n    string public symbol   = \"szDAI\";\r\n    uint8  public decimals = 18;\r\n    string public company  = \"ShuttleOne Pte Ltd\";\r\n    uint8  public version  = 1;\r\n    uint8  public depositDecimals = 18;\r\n    address public coldWallet;\r\n\r\n    event  Approval(address indexed _tokenOwner, address indexed _spender, uint256 _amount);\r\n    event  Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n    \r\n    event  Deposit(address indexed _from, uint256 _amount);\r\n    event  Withdraw(address indexed _to, uint256 _amount);\r\n\r\n    mapping (address => uint256) balance;\r\n    mapping (address => mapping (address => uint256))  allowed;\r\n    mapping (address => bool) public stopControl;\r\n   \r\n\r\n    ERC20  public daiToken;\r\n    ERC20  public swdaiOldVersion;\r\n    bool public stopAdmin;\r\n    \r\n     constructor() public {\r\n       daiToken = ERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F); //Dai Stablecoin (DAI) main net\r\n       //  daiToken = ERC20(0x194B3EcafCC274Faf324fA8e2dB9bcf320fc7d05); //Dai Stablecoin (DAI)\r\n       //  daiToken = ERC20(0x194B3EcafCC274Faf324fA8e2dB9bcf320fc7d05); //Dai Stablecoin (DAI)\r\n         swdaiOldVersion = ERC20(0x82EA2104fA9EdAc604a59CD93148452c2121dA23);\r\n         \r\n         coldWallet = 0x2a3a39D963f6e8E8Ea42C7e8aEe82e0b5C9cA78D; // for fee only\r\n     }\r\n     \r\n     function withdrawStupidUser(uint256 amount,address _contract,address _to) public onlyOwners{\r\n      require(_contract != address(daiToken),\"Can't Withdraw DAI\"); \r\n      ERC20  stupid = ERC20(_contract);\r\n      stupid.transfer(_to,amount);\r\n    }\r\n\r\n     function changeName(string memory _name) public onlyOwners{\r\n         name = _name;\r\n     }\r\n     \r\n     function changeSysbol(string memory _symbol) public onlyOwners{\r\n         symbol = _symbol;\r\n     }\r\n\r\n     function setColdWallet(address _newAddr) public onlyOwners returns(bool){\r\n        coldWallet = _newAddr;\r\n        return true;\r\n     }\r\n     \r\n     \r\n    function deposit(address _from,uint256 amount) public returns (bool) {\r\n        if(daiToken.transferFrom(_from,address(this),amount) == true){\r\n            balance[_from] += amount;\r\n            \r\n            emit Deposit(_from,amount);\r\n            emit Transfer(address(0),_from,amount);\r\n            \r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n\r\n    function withdraw(uint256 _amount) public returns(bool) {\r\n        require(balance[msg.sender] >= _amount,\"ERROR-out-of-balance-withdraw\");\r\n        balance[msg.sender] -= _amount;\r\n        daiToken.transfer(msg.sender,_amount);\r\n        emit Withdraw(msg.sender, _amount);\r\n        emit Transfer(msg.sender,address(0),_amount);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function withdrawInternal(address _to,uint256 _amount) public onlyOwners returns(bool){\r\n        require(stopControl[_to] == false,\"ERROR-ADDRESS-NOT-ALLOW\");\r\n        require(balance[_to] >= _amount,\"ERROR-out-of-balance-withdraw\");\r\n        balance[_to] -= _amount;\r\n        daiToken.transfer(_to,_amount);\r\n        emit Withdraw(_to, _amount);\r\n        emit Transfer(_to,address(0),_amount);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function setStopControl(bool _control) public {\r\n        stopControl[msg.sender] = _control;\r\n    }\r\n\r\n    function balanceOf(address _addr) public view returns (uint256){\r\n        return balance[_addr]; \r\n     }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return daiToken.balanceOf(address(this));\r\n    }\r\n\r\n     function approve(address _spender, uint256 _amount) public returns (bool){\r\n            allowed[msg.sender][_spender] = _amount;\r\n            emit Approval(msg.sender, _spender, _amount);\r\n            return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public view returns (uint256){\r\n          return allowed[_owner][_spender];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public returns (bool) {\r\n        require(balance[msg.sender] >= _amount,\"ERROR-out-of-balance-transfer\");\r\n        require(_to != address(0),\"ERROR-transfer-addr-0\");\r\n       \r\n\r\n        balance[msg.sender] -= _amount;\r\n        balance[_to] += _amount;\r\n        emit Transfer(msg.sender,_to,_amount);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool)\r\n    {\r\n        require(balance[_from] >= _amount,\"ERROR-transFrom-out-of\");\r\n        require(allowed[_from][msg.sender] >= _amount,\"ERROR-spender-outouf\"); \r\n       \r\n\r\n        balance[_from] -= _amount;\r\n        balance[_to] += _amount;\r\n        allowed[_from][msg.sender] -= _amount;\r\n        emit Transfer(_from, _to, _amount);\r\n\r\n        return true;\r\n    }\r\n    \r\n    function intTransfer(address _from, address _to, uint256 _amount) external onlyOwners returns(bool){\r\n           require(stopControl[_from] == false,\"ERROR-ADDRESS-NOT-ALLOW\");\r\n           require(balance[_from] >= _amount,\"ERROR-intran-outof\");\r\n           require(_to != address(0),\"ERROR-intran-addr0\");\r\n           \r\n           balance[_from] -= _amount; \r\n           balance[_to] += _amount;\r\n    \r\n           emit Transfer(_from,_to,_amount);\r\n           return true;\r\n    }\r\n    \r\n    function intTransferWithFee(address _from, address _to, uint256 _value,uint256 _fee) external onlyOwners returns(bool){\r\n            require(stopControl[_from] == false,\"ERROR-ADDRESS-NOT-ALLOW\");\r\n            require(balance[_from] >= _value);\r\n            require(_to != address(0));\r\n            require(_value > _fee);    \r\n            require(coldWallet != address(0));\r\n        \r\n            balance[_from] -= _value; \r\n            balance[_to] += _value - _fee;\r\n            balance[coldWallet] += _fee;\r\n    \r\n            emit Transfer(_from,_to,_value - _fee);\r\n            emit Transfer(_to,coldWallet,_fee);\r\n    \r\n            return true;\r\n    }\r\n    \r\n    function batchTransfer(address[] memory _from,address[] memory _to,uint256[] memory _amount) public onlyOwners{\r\n         require(_from.length == _amount.length);\r\n         require(_from.length == _to.length);\r\n         \r\n         for(uint256 i = 0; i < _from.length;i ++){\r\n            if(stopControl[_from[i]] == false && balance[_from[i]] >= _amount[i] && _to[i] != address(0) ){\r\n                balance[_from[i]] -= _amount[i]; \r\n                balance[_to[i]] += _amount[i];\r\n                emit Transfer(_from[i],_to[i],_amount[i]);\r\n            }\r\n         }\r\n    }\r\n    \r\n     function batchTransferWithFee(address[] memory _from,address[] memory _to,uint256[] memory _amount,uint256[] memory _fee) public onlyOwners{\r\n         require(_from.length == _amount.length);\r\n         require(_from.length == _to.length);\r\n         require(coldWallet != address(0));\r\n         \r\n         for(uint256 i = 0; i < _from.length;i ++){\r\n            if(stopControl[_from[i]] == false && balance[_from[i]] >= _amount[i] && _to[i] != address(0) ){\r\n                balance[_from[i]] -= _amount[i]; \r\n                balance[_to[i]] += _amount[i] - _fee[i];\r\n                balance[coldWallet] += _fee[i];\r\n                \r\n                emit Transfer(_from[i],_to[i],_amount[i] - _fee[i]);\r\n                emit Transfer(_from[i],coldWallet,_fee[i]);\r\n            }\r\n         }\r\n    }\r\n    \r\n    //============== FOR Move Balance from old Version ============\r\n    \r\n    \r\n    function setStopAdmin() public onlyOwners{\r\n        stopAdmin = true;\r\n    }\r\n    \r\n    function mintToken(address _to,uint256 _amount) public onlyOwners{\r\n        require(stopAdmin == false,\"This function disable\");\r\n        balance[_to] += _amount;\r\n        \r\n        emit Transfer(address(0),_to,_amount);\r\n    }\r\n    \r\n    function burnToken(address _from,uint256 _amount) public onlyOwners{\r\n        require(stopAdmin == false,\"This function disable\");\r\n        require(balance[_from] >= _amount,\"SWDAI/ERROR-burn-outof\");\r\n        balance[_from] -= _amount;\r\n        emit Transfer(_from,address(0),_amount);\r\n    }\r\n    \r\n    function moveBalanceFromOldVersion(address _from) public onlyOwners returns(bool){\r\n        require(stopAdmin == false,\"This function disable\");\r\n        uint256 _amount = swdaiOldVersion.balanceOf(_from);\r\n        \r\n        balance[_from] += _amount;\r\n        swdaiOldVersion.setBalance(_from,0);\r\n        emit Transfer(address(0),_from,_amount);\r\n        \r\n        return true;\r\n    }\r\n    \r\n\r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"AddOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RemoveOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newOwnerName\",\"type\":\"string\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fee\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferWithFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"changeSysbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coldWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"intTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"intTransferWithFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"moveBalanceFromOldVersion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"setColdWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setStopAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_control\",\"type\":\"bool\"}],\"name\":\"setStopControl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stopControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swdaiOldVersion\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawStupidUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SZDAI","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://70e4f7fc3a7decf7003b0933f2d334a20fa711074cab42ffe3138bdc01bfbe1a"}]}