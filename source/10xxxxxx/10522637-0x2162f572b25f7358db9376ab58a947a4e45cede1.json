{"status":"1","message":"OK","result":[{"SourceCode":"{\"ERC20Interface.sol\":{\"content\":\"pragma solidity ^0.5.9;\\n\\ncontract ERC20Interface\\n{\\n    event Transfer( address indexed _from, address indexed _to, uint _value);\\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\\n    \\n    function totalSupply() view public returns (uint _supply);\\n    function balanceOf( address _who ) public view returns (uint _value);\\n    function transfer( address _to, uint _value) public returns (bool _success);\\n    function approve( address _spender, uint _value ) public returns (bool _success);\\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\\n}\"},\"Label.sol\":{\"content\":\"pragma solidity ^0.5.9;\\n\\nimport \\\"./ERC20Interface.sol\\\";\\nimport \\\"./OwnerHelper.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\n\\ncontract Label is ERC20Interface, OwnerHelper\\n{\\n    using SafeMath for uint;\\n    \\n    string public name;\\n    uint public decimals;\\n    string public symbol;\\n    \\n    uint constant private E18 = 1000000000000000000;\\n    uint constant private month = 2592000;\\n    \\n    uint constant public maxTotalSupply     = 3000000000 * E18;\\n    uint constant public maxSaleSupply      = 600000000 * E18;\\n    uint constant public maxDevSupply       = 750000000 * E18;\\n    uint constant public maxMktSupply       = 750000000 * E18;\\n    uint constant public maxEcoSupply       = 450000000 * E18;\\n    uint constant public maxReserveSupply   = 210000000 * E18;\\n    uint constant public maxTeamSupply      = 150000000 * E18;\\n    uint constant public maxAdvisorSupply   = 90000000 * E18;\\n    \\n    uint constant public teamVestingSupply = 12500000 * E18;\\n    uint constant public teamVestingLockDate =  12 * month;\\n    uint constant public teamVestingTime = 12;\\n\\n    uint constant public advisorVestingSupply = 22500000 * E18;\\n    uint constant public advisorVestingLockDate = 3 * month;\\n    uint constant public advisorVestingTime = 4;\\n    \\n    uint public totalTokenSupply;\\n    uint public tokenIssuedSale;\\n    uint public tokenIssuedDev;\\n    uint public tokenIssuedMkt;\\n    uint public tokenIssuedEco;\\n    uint public tokenIssuedRsv;\\n    uint public tokenIssuedTeam;\\n    uint public tokenIssuedAdv;\\n    \\n    uint public burnTokenSupply;\\n    \\n    mapping (address =\\u003e uint) public balances;\\n    mapping (address =\\u003e mapping ( address =\\u003e uint )) public approvals;\\n\\n    mapping (address =\\u003e uint) public lockWallet;\\n    \\n    mapping (uint =\\u003e uint) public tmVestingTimer;\\n    mapping (uint =\\u003e uint) public tmVestingBalances;\\n    mapping (uint =\\u003e uint) public advVestingTimer;\\n    mapping (uint =\\u003e uint) public advVestingBalances;\\n        \\n    bool public tokenLock = true;\\n    bool public saleTime = true;\\n    uint public endSaleTime = 0;\\n\\n    event SaleIssue(address indexed _to, uint _tokens);\\n    event DevIssue(address indexed _to, uint _tokens);\\n    event MktIssue(address indexed _to, uint _tokens);\\n    event EcoIssue(address indexed _to, uint _tokens);\\n    event RsvIssue(address indexed _to, uint _tokens);\\n    event TeamIssue(address indexed _to, uint _tokens);\\n    event AdvIssue(address indexed _to, uint _tokens);\\n\\n    event Burn(address indexed _from, uint _tokens);\\n    \\n    event TokenUnLock(address indexed _to, uint _tokens);\\n    event EndSale(uint _date);\\n    \\n    constructor() public\\n    {\\n        name        = \\\"LABEL\\\";\\n        decimals    = 18;\\n        symbol      = \\\"LBL\\\";\\n        \\n        totalTokenSupply = 3000000000 * E18;\\n        balances[owner] = totalTokenSupply;\\n\\n        tokenIssuedSale     = 0;\\n        tokenIssuedDev      = 0;\\n        tokenIssuedMkt      = 0;\\n        tokenIssuedEco      = 0;\\n        tokenIssuedRsv      = 0;\\n        tokenIssuedTeam     = 0;\\n        tokenIssuedAdv      = 0;     \\n\\n        burnTokenSupply     = 0;\\n        \\n        require(maxTotalSupply == maxSaleSupply + maxDevSupply + maxMktSupply + maxEcoSupply + maxReserveSupply + maxTeamSupply + maxAdvisorSupply);\\n    }\\n\\n    function totalSupply() view public returns (uint) \\n    {\\n        return totalTokenSupply;\\n    }\\n    \\n    function balanceOf(address _who) view public returns (uint) \\n    {\\n        uint balance = balances[_who];\\n        \\n        balance = balance.add(lockWallet[_who]);\\n        \\n        return balance;\\n    }\\n    \\n    function transfer(address _to, uint _value) public returns (bool) \\n    {\\n        require(isTransferable() == true);\\n        require(balances[msg.sender] \\u003e= _value);\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(_value);\\n        \\n        emit Transfer(msg.sender, _to, _value);\\n        \\n        return true;\\n    }\\n    \\n    function approve(address _spender, uint _value) public returns (bool)\\n    {\\n        require(isTransferable() == true);\\n        require(balances[msg.sender] \\u003e= _value);\\n        \\n        approvals[msg.sender][_spender] = _value;\\n        \\n        emit Approval(msg.sender, _spender, _value);\\n        \\n        return true; \\n    }\\n    \\n    function allowance(address _owner, address _spender) view public returns (uint) \\n    {\\n        return approvals[_owner][_spender];\\n    }\\n\\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) \\n    {\\n        require(isTransferable() == true);\\n        require(balances[_from] \\u003e= _value);\\n        require(approvals[_from][msg.sender] \\u003e= _value);\\n        \\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to]  = balances[_to].add(_value);\\n        \\n        emit Transfer(_from, _to, _value);\\n        \\n        return true;\\n    }\\n    \\n    function setTokenUnlock() onlyManager public\\n    {\\n        require(tokenLock == true);\\n        require(saleTime == false);\\n        \\n        tokenLock = false;\\n    }\\n    \\n    function setTokenLock() onlyManager public\\n    {\\n        require(tokenLock == false);\\n        \\n        tokenLock = true;\\n    }\\n    \\n    function isTransferable() private view returns (bool)\\n    {\\n        if(tokenLock == false)\\n        {\\n            return true;\\n        }\\n        else if(msg.sender == owner)\\n        {\\n            return true;\\n        }\\n        \\n        return false;\\n    }\\n    \\n    function saleIssue(address _to) onlyOwner public\\n    {   \\n        require(tokenIssuedSale == 0);    \\n        uint tokens = maxSaleSupply;\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        balances[_to] = balances[_to].add(tokens);\\n        tokenIssuedSale = tokenIssuedSale.add(tokens);\\n        \\n        emit SaleIssue(_to, tokens);\\n    }\\n    \\n    function devIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedDev == 0);\\n        \\n        uint tokens = maxDevSupply;\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        balances[_to] = balances[_to].add(tokens);\\n        tokenIssuedDev = tokenIssuedDev.add(tokens);\\n        \\n        emit DevIssue(_to, tokens);\\n    }\\n\\n    function mktIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedMkt == 0);\\n        \\n        uint tokens = maxMktSupply;\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        balances[_to] = balances[_to].add(tokens);\\n        tokenIssuedMkt = tokenIssuedMkt.add(tokens);\\n        \\n        emit MktIssue(_to, tokens);\\n    }\\n    \\n    function ecoIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedEco == 0);\\n        \\n        uint tokens = maxEcoSupply;\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        balances[_to] = balances[_to].add(tokens);\\n        tokenIssuedEco = tokenIssuedEco.add(tokens);\\n        \\n        emit EcoIssue(_to, tokens);\\n    }\\n\\n    function rsvIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedRsv == 0);\\n        \\n        uint tokens = maxReserveSupply;\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        balances[_to] = balances[_to].add(tokens);\\n        tokenIssuedRsv = tokenIssuedRsv.add(tokens);\\n        \\n        emit RsvIssue(_to, tokens);\\n    }\\n\\n    function teamIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedTeam == 0);\\n        \\n        uint tokens = maxTeamSupply;\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        lockWallet[_to]    = lockWallet[_to].add(maxTeamSupply);\\n        \\n        tokenIssuedTeam = tokenIssuedTeam.add(tokens);\\n                \\n        emit TeamIssue(_to, tokens);\\n    }\\n\\n    function advisorIssue(address _to) onlyOwner public\\n    {\\n        require(saleTime == false);\\n        require(tokenIssuedAdv == 0);\\n        \\n        uint tokens = maxAdvisorSupply;\\n\\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n\\n        lockWallet[_to]    = lockWallet[_to].add(maxAdvisorSupply);\\n\\n        tokenIssuedAdv = tokenIssuedAdv.add(tokens);\\n        \\n        emit AdvIssue(_to, tokens);\\n    }   \\n    \\n    function endSale() onlyOwner public\\n    {\\n        require(saleTime == true);\\n        require(maxSaleSupply == tokenIssuedSale);\\n        \\n        saleTime = false;\\n        \\n        uint nowTime = now;\\n        endSaleTime = nowTime;\\n        \\n        for(uint i = 0; i \\u003c teamVestingTime; i++)\\n        {\\n            tmVestingTimer[i] = endSaleTime + teamVestingLockDate + (i * month);\\n            tmVestingBalances[i] = teamVestingSupply;\\n        }\\n        \\n        for(uint i = 0; i \\u003c advisorVestingTime; i++)\\n        {\\n            advVestingTimer[i] = endSaleTime + advisorVestingLockDate + (i * advisorVestingLockDate);\\n            advVestingBalances[i] = advisorVestingSupply;\\n        }\\n        \\n        emit EndSale(endSaleTime);\\n    }\\n    \\n    function teamUnlock(address _to, uint _time) onlyManager public\\n    {\\n        require(saleTime == false);\\n        require( _time \\u003c teamVestingTime);\\n        \\n        uint nowTime = now;\\n        require( nowTime \\u003e tmVestingTimer[_time] );\\n        \\n        uint tokens = teamVestingSupply;\\n\\n        require(tokens == tmVestingBalances[_time]);\\n        require(lockWallet[_to] \\u003e 0);\\n        \\n        balances[_to] = balances[_to].add(tokens);\\n        tmVestingBalances[_time] = 0;\\n        lockWallet[_to] = lockWallet[_to].sub(tokens);\\n        \\n        emit TokenUnLock(_to, tokens);\\n    }\\n\\n    function advisorUnlock(address _to, uint _time) onlyManager public\\n    {\\n        require(saleTime == false);\\n        require( _time \\u003c advisorVestingTime);\\n        \\n        uint nowTime = now;\\n        require( nowTime \\u003e advVestingTimer[_time] );\\n        \\n        uint tokens = advisorVestingSupply;\\n\\n        require(tokens == advVestingBalances[_time]);\\n        require(lockWallet[_to] \\u003e 0);\\n        \\n        balances[_to] = balances[_to].add(tokens);\\n        advVestingBalances[_time] = 0;\\n        lockWallet[_to] = lockWallet[_to].sub(tokens);\\n        \\n        emit TokenUnLock(_to, tokens);\\n    }\\n\\n\\n    function transferAnyERC20Token(address tokenAddress, uint tokens) onlyOwner public returns (bool success)\\n    {\\n        return ERC20Interface(tokenAddress).transfer(manager, tokens);\\n    }\\n    \\n    function burnToken(uint _value) onlyManager public\\n    {\\n        uint tokens = _value * E18;\\n        \\n        require(balances[msg.sender] \\u003e= tokens);\\n        \\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\\n        burnTokenSupply = burnTokenSupply.add(tokens);\\n        totalTokenSupply = totalTokenSupply.sub(tokens);\\n        \\n        emit Burn(msg.sender, tokens);\\n    }\\n    \\n    function close() onlyOwner public\\n    {\\n        selfdestruct(msg.sender);\\n    }\\n    \\n}\"},\"OwnerHelper.sol\":{\"content\":\"pragma solidity ^0.5.9;\\n\\ncontract OwnerHelper\\n{\\n  \\taddress public owner;\\n    address public manager;\\n\\n  \\tevent ChangeOwner(address indexed _from, address indexed _to);\\n    event ChangeManager(address indexed _from, address indexed _to);\\n\\n  \\tmodifier onlyOwner\\n\\t{\\n\\t\\trequire(msg.sender == owner);\\n\\t\\t_;\\n  \\t}\\n  \\t\\n    modifier onlyManager\\n    {\\n        require(msg.sender == manager);\\n        _;\\n    }\\n\\n  \\tconstructor() public\\n\\t{\\n\\t\\towner = msg.sender;\\n  \\t}\\n  \\t\\n  \\tfunction transferOwnership(address _to) onlyOwner public\\n  \\t{\\n    \\trequire(_to != owner);\\n        require(_to != manager);\\n    \\trequire(_to != address(0x0));\\n\\n        address from = owner;\\n      \\towner = _to;\\n  \\t    \\n      \\temit ChangeOwner(from, _to);\\n  \\t}\\n\\n    function transferManager(address _to) onlyOwner public\\n    {\\n        require(_to != owner);\\n        require(_to != manager);\\n        require(_to != address(0x0));\\n        \\n        address from = manager;\\n        manager = _to;\\n        \\n        emit ChangeManager(from, _to);\\n    }\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.9;\\n\\nlibrary SafeMath\\n{\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256)\\n    \\t{\\n\\t\\tuint256 c = a * b;\\n\\t\\tassert(a == 0 || c / a == b);\\n\\n\\t\\treturn c;\\n  \\t}\\n\\n  \\tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\\n\\t{\\n\\t\\tuint256 c = a / b;\\n\\n\\t\\treturn c;\\n  \\t}\\n\\n  \\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\\n\\t{\\n\\t\\tassert(b \\u003c= a);\\n\\n\\t\\treturn a - b;\\n  \\t}\\n\\n  \\tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\\n\\t{\\n\\t\\tuint256 c = a + b;\\n\\t\\tassert(c \\u003e= a);\\n\\n\\t\\treturn c;\\n  \\t}\\n}\"}}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ecoIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"advisorIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mktIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tmVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"rsvIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedEco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"saleIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTeamSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedRsv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"devIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"teamUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"teamIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"advisorUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedDev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDevSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMktSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAdvisorSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tmVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxReserveSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedAdv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEcoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"SaleIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"DevIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MktIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"EcoIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"RsvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TeamIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"AdvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"EndSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Label","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv2","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3ff6cc55f70bb9e269aee535e8618933de5218a30f7443a3f1e51bdce996edd2"}]}