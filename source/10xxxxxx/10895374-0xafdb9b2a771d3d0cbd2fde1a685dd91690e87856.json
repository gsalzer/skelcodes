{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n    Tomato Private-Sale\r\n    \r\n    Rate: <1eth 1eth=10000   tomato\r\n          <3eth 1eth=10000*2 tomato\r\n\t      <5eth 1eth=10000*3 tomato\r\n\t      >=5eth 1eth=10000*5 tomato\r\n\r\n    Website: https://tomatoswap.xyz\r\n    \r\n*/\r\n\r\npragma solidity ^0.4.26;\r\n\r\ninterface token{\r\n    \r\n    function mint(address _to,uint amount) external;\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n\r\n}\r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        uint256 z = x + y;\r\n        assert((z >= x) && (z >= y));\r\n        return z;\r\n    }\r\n\r\n    function safeSubtract(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        assert(x >= y);\r\n        uint256 z = x - y;\r\n        return z;\r\n    }\r\n\r\n    function safeMult(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        uint256 z = x * y;\r\n        assert((x == 0)||(z/x == y));\r\n        return z;\r\n    }\r\n\r\n}\r\n\r\ncontract PreSale is SafeMath{\r\n    \r\n    uint public tokenExchangeRate; \r\n    \r\n    address public beneficiary;\r\n\r\n    bool public isFunding; \r\n\r\n    token public tokenReward;\r\n\r\n    uint tokenAmount;\r\n\r\n    event tokenMint(address backer,uint amount);     \r\n\r\n    constructor() public {\r\n        \r\n        isFunding = true;  \r\n                     \r\n        beneficiary = msg.sender; \r\n        \r\n         tokenExchangeRate = 10000;\r\n\t\r\n\ttokenReward = token(0xA42Cf329478e15E337CBE0025d19295B72b4bb16);\r\n    }\r\n\r\n    modifier isOwner()  { require(msg.sender == beneficiary); _; }\r\n\r\n    function stopFunding() isOwner external {\r\n        require(isFunding);\r\n        isFunding = false;\r\n    }\r\n\r\n    function startFunding() isOwner external {\r\n        require(!isFunding);\r\n        isFunding = true;\r\n    }\r\n    \r\n    function () public payable {\r\n        buytoken();\r\n    }\r\n    \r\n    function buytoken() public payable {\r\n        \r\n        require(isFunding);\r\n\r\n        require(msg.value > 0);\r\n\r\n\tif (msg.value < 1 ether) {\r\n\r\n\ttokenAmount = safeMult(msg.value, tokenExchangeRate); \r\n\t\r\n\t} else if (msg.value >= 1 ether && msg.value < 3 ether ) {\r\n\r\n\ttokenAmount = safeMult(msg.value, tokenExchangeRate*2); \r\n\r\n\t} else if (msg.value >= 3 ether && msg.value < 5 ether ) {\r\n\r\n\ttokenAmount = safeMult(msg.value, tokenExchangeRate*3); \r\n\t\r\n\t} else {\r\n\r\n        tokenAmount = safeMult(msg.value, tokenExchangeRate*5); \r\n\t\r\n\t}\r\n\r\n        tokenReward.mint(msg.sender,tokenAmount);\r\n\r\n        emit tokenMint(msg.sender, tokenAmount);  \r\n        \r\n    }\r\n    \r\n    function withdraw() isOwner external {  \r\n\r\n    require(msg.sender == beneficiary);\r\n\r\n    beneficiary.transfer(address(this).balance);\r\n\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"startFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buytoken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokenMint\",\"type\":\"event\"}]","ContractName":"PreSale","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3e48dea151ecf306ff89a20ea363be0d7cd9da0b284176a9ba568388aa9dcc89"}]}