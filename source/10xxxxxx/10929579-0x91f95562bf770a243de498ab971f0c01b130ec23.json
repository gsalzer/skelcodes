{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Removed mul, div, mod\r\n */\r\nlibrary SafeMath {\r\n        /**\r\n         * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n         */\r\n        function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n                require(b <= a);\r\n                uint256 c = a - b;\r\n\r\n                return c;\r\n        }\r\n\r\n        /**\r\n         * @dev Adds two unsigned integers, reverts on overflow.\r\n         */\r\n        function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n                uint256 c = a + b;\r\n                require(c >= a);\r\n\r\n                return c;\r\n        }\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n      function totalSupply() public view returns (uint256);\r\n      function balanceOf(address _who) public view returns (uint256);\r\n      function transfer(address _to, uint256 _value) public returns (bool);\r\n      function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n      function allowance(address _owner, address _spender) public view returns (uint256);\r\n      function approve(address _spender, uint256 _value) public returns (bool);\r\n\r\n      event Transfer(address indexed from, address indexed to, uint256 value);\r\n      event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract StandardToken is ERC20 {\r\n        using SafeMath for uint256;\r\n\r\n        uint256 internal _totalSupply;\r\n        mapping(address => uint256) internal _balances;\r\n        mapping(address => mapping (address => uint256)) internal _allowed;\r\n\r\n        modifier validDestination( address _to )\r\n        {\r\n                require(_to != address(0x0), \"Invalid address.\");\r\n                require(_to != address(this), \"Invalid address.\");\r\n                _;\r\n        }\r\n\r\n        function totalSupply() public view returns (uint256) {\r\n                return _totalSupply;\r\n        }\r\n\r\n        function balanceOf(address _who) public view returns (uint256) {\r\n                return _balances[_who];\r\n        }\r\n\r\n        function transfer(address _to, uint256 _value)\r\n                public\r\n                validDestination(_to)\r\n                returns (bool)\r\n        {\r\n                _balances[msg.sender] = _balances[msg.sender].sub(_value);\r\n                _balances[_to] = _balances[_to].add(_value);\r\n                emit Transfer(msg.sender, _to, _value);\r\n                return true;\r\n        }\r\n\r\n        function transferFrom(address _from, address _to, uint256 _value)\r\n                public\r\n                validDestination(_to)\r\n                returns (bool)\r\n        {\r\n                require(_value <= _allowed[_from][msg.sender],\"Insufficient allowance.\");\r\n\r\n                _balances[_from] = _balances[_from].sub(_value);\r\n                _balances[_to] = _balances[_to].add(_value);\r\n                _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n\r\n                emit Transfer(_from, _to, _value);\r\n                return true;\r\n        }\r\n\r\n        function burn(uint _value) public returns (bool)\r\n        {\r\n                _balances[msg.sender] = _balances[msg.sender].sub(_value);\r\n                _totalSupply = _totalSupply.sub(_value);\r\n                emit Transfer(msg.sender, address(0x0), _value);\r\n                return true;\r\n        }\r\n\r\n        function burnFrom(address _from, uint256 _value) public validDestination(_from) returns (bool)\r\n        {\r\n                require(_value <= _allowed[_from][msg.sender],\"Insufficient allowance.\");\r\n                \r\n                _balances[_from] = _balances[_from].sub(_value);\r\n                _totalSupply = _totalSupply.sub(_value);\r\n                _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n                \r\n                emit Transfer(_from, address(0x0), _value);\r\n\r\n                return true;\r\n        }\r\n\r\n        function approve(address _spender, uint256 _value) public validDestination(_spender) returns (bool) {\r\n\r\n                _allowed[msg.sender][_spender] = _value;\r\n                emit Approval(msg.sender, _spender, _value);\r\n                return true;\r\n        }\r\n\r\n        function allowance(address _owner, address _spender) public view returns (uint256)\r\n        {\r\n                return _allowed[_owner][_spender];\r\n        }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n        address public owner;\r\n\r\n        event OwnershipTransferred(\r\n                address indexed previousOwner,\r\n                address indexed newOwner\r\n        );\r\n\r\n        constructor() public {\r\n                owner = msg.sender;\r\n        }\r\n\r\n        modifier validateAddress(address _to) {\r\n                require(_to != address(0x0));\r\n\t\t\t\trequire(_to != address(this));\r\n                _;\r\n        }\r\n\r\n        modifier onlyOwner() {\r\n                require(msg.sender == owner, 'Permission denied.');\r\n                _;\r\n        }\r\n\t\t\r\n        function transferOwnership(address _newOwner) public onlyOwner validateAddress(_newOwner) {\r\n                owner = _newOwner;\r\n                emit OwnershipTransferred(owner, _newOwner);\r\n        }\r\n}\r\n\r\n\r\ncontract Pausable is Ownable {\r\n        event Pause();\r\n        event Unpause();\r\n\r\n        bool public paused = false;\r\n\r\n        modifier whenNotPaused() {\r\n                require(!paused, 'Paused by owner.');\r\n                _;\r\n        }\r\n\r\n        modifier whenPaused() {\r\n                require(paused, 'Paused requied.');\r\n                _;\r\n        }\r\n\r\n        function pause() public onlyOwner whenNotPaused {\r\n                paused = true;\r\n                emit Pause();\r\n        }\r\n\r\n        function unpause() public onlyOwner whenPaused {\r\n                paused = false;\r\n                emit Unpause();\r\n        }\r\n}\r\n\r\n\r\ncontract Freezable is Ownable {\r\n        mapping (address => bool) public frozenAccount;\r\n\r\n        event Freezed(address indexed target, bool frozen);\r\n        event Unfreezed(address indexed target, bool frozen);\r\n\r\n        modifier isNotFrozen(address _target) {\r\n                require(!frozenAccount[_target], 'Frozen account.');\r\n                _;\r\n        }\r\n\r\n        modifier isFrozen(address _target) {\r\n                require(frozenAccount[_target], 'Not a frozen account.');\r\n                _;\r\n        }\r\n\r\n        function freeze(address _target) public onlyOwner isNotFrozen(_target) validateAddress(_target) {\r\n                frozenAccount[_target] = true;\r\n                emit Freezed(_target, true);\r\n        }\r\n\r\n        function unfreeze(address _target) public onlyOwner isFrozen(_target) validateAddress(_target) {\r\n                frozenAccount[_target] = false;\r\n                emit Unfreezed(_target, false);\r\n        }\r\n\r\n}\r\n\r\ncontract GMEX is StandardToken, Pausable, Freezable {\r\n        using SafeMath for uint256;\r\n\r\n        string  public  name = \"GMEX Chain\";\r\n        string  public  symbol = 'GMEX';\r\n        uint256 public  constant decimals = 12;\r\n        \r\n        constructor(\r\n                uint256 _initialSupply\r\n        )\r\n                public\r\n        {\r\n                _totalSupply = _initialSupply * 10 ** uint256(decimals);\r\n                _balances[msg.sender] = _totalSupply;     \r\n                emit Transfer(address(0x0), msg.sender, _totalSupply);\r\n        }\r\n\t\t\r\n        function transfer(address _to, uint256 _value)\r\n                public\r\n                whenNotPaused\r\n                isNotFrozen(msg.sender)\r\n                isNotFrozen(_to)\r\n                returns (bool)\r\n        {\r\n                return super.transfer(_to, _value);\r\n        }\r\n\r\n        function transferFrom(address _from, address _to, uint256 _value)\r\n                public\r\n                whenNotPaused\r\n                isNotFrozen(_from)\r\n                isNotFrozen(_to)\r\n                returns (bool)\r\n        {\r\n                return super.transferFrom(_from, _to, _value);\r\n        }\r\n\r\n        function burn(uint256 _value)\r\n                public\r\n                whenNotPaused\r\n                isNotFrozen(msg.sender)\r\n                returns (bool)\r\n        {\r\n                return super.burn(_value);\r\n        }\r\n\r\n        function burnFrom(address _from, uint256 _value)\r\n                public\r\n                whenNotPaused\r\n                isNotFrozen(_from)\r\n                returns (bool)\r\n        {\r\n                return super.burnFrom(_from, _value);\r\n        }\r\n\r\n        function approve(\r\n                address _spender,\r\n                uint256 _value\r\n        )\r\n                public\r\n                whenNotPaused\r\n                isNotFrozen(msg.sender)\r\n                isNotFrozen(_spender)\r\n                returns (bool)\r\n        {\r\n                return super.approve(_spender, _value);\r\n        }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"Unfreezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GMEX","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000b2d05e00","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3e89f0fa0c63d6ed1c23c577fb6efe37d53b40c91c81e7365fe88b9e14c0a974"}]}