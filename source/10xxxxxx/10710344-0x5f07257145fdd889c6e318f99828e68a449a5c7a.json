{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.4\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface USDT:\r\n    def transferFrom(_from: address, _to: address, _value: uint256): nonpayable\r\n    def approve(_spender: address, _value: uint256): nonpayable\r\n\r\ninterface yCurveDeposit:\r\n    def add_liquidity(uamounts: uint256[4], min_mint_amount: uint256): nonpayable\r\n\r\ninterface yVault:\r\n    def deposit(amount: uint256): nonpayable\r\n\r\nevent Recycled:\r\n    user: indexed(address)\r\n    sent_dai: uint256\r\n    sent_usdc: uint256\r\n    sent_usdt: uint256\r\n    sent_tusd: uint256\r\n    sent_ycrv: uint256\r\n    received_yusd: uint256\r\n\r\n\r\nydeposit: constant(address) = 0xbBC81d23Ea2c3ec7e56D39296F0cbB648873a5d3\r\nycrv: constant(address) = 0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\r\nyusd: constant(address) = 0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c\r\n\r\ndai: constant(address) = 0x6B175474E89094C44Da98b954EedeAC495271d0F\r\nusdc: constant(address) = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\r\nusdt: constant(address) = 0xdAC17F958D2ee523a2206206994597C13D831ec7\r\ntusd: constant(address) = 0x0000000000085d4780B73119b644AE5ecd22b376\r\n\r\n\r\n@external\r\ndef __init__():\r\n    ERC20(dai).approve(ydeposit, MAX_UINT256)\r\n    ERC20(usdc).approve(ydeposit, MAX_UINT256)\r\n    USDT(usdt).approve(ydeposit, MAX_UINT256)\r\n    ERC20(tusd).approve(ydeposit, MAX_UINT256)\r\n    ERC20(ycrv).approve(yusd, MAX_UINT256)\r\n\r\n\r\n@internal\r\ndef recycle_exact_amounts(sender: address, _dai: uint256, _usdc: uint256, _usdt: uint256, _tusd: uint256, _ycrv: uint256):\r\n    if _dai > 0:\r\n        ERC20(dai).transferFrom(sender, self, _dai)\r\n    if _usdc > 0:\r\n        ERC20(usdc).transferFrom(sender, self, _usdc)\r\n    if _usdt > 0:\r\n        USDT(usdt).transferFrom(sender, self, _usdt)\r\n    if _tusd > 0:\r\n        ERC20(tusd).transferFrom(sender, self, _tusd)\r\n    if _ycrv > 0:\r\n        ERC20(ycrv).transferFrom(sender, self, _ycrv)\r\n\r\n    deposit_amounts: uint256[4] = [_dai, _usdc, _usdt, _tusd]\r\n    if _dai + _usdc + _usdt + _tusd > 0:\r\n        yCurveDeposit(ydeposit).add_liquidity(deposit_amounts, 0)\r\n\r\n    ycrv_balance: uint256 = ERC20(ycrv).balanceOf(self)       \r\n    if ycrv_balance > 0:\r\n        yVault(yusd).deposit(ycrv_balance)\r\n\r\n    _yusd: uint256 = ERC20(yusd).balanceOf(self)\r\n    ERC20(yusd).transfer(sender, _yusd)\r\n\r\n    assert ERC20(yusd).balanceOf(self) == 0, \"leftover yUSD balance\"\r\n\r\n    log Recycled(sender, _dai, _usdc, _usdt, _tusd, _ycrv, _yusd)\r\n\r\n\r\n@external\r\ndef recycle():\r\n    _dai: uint256 = min(ERC20(dai).balanceOf(msg.sender), ERC20(dai).allowance(msg.sender, self))\r\n    _usdc: uint256 = min(ERC20(usdc).balanceOf(msg.sender), ERC20(usdc).allowance(msg.sender, self))\r\n    _usdt: uint256 = min(ERC20(usdt).balanceOf(msg.sender), ERC20(usdt).allowance(msg.sender, self))\r\n    _tusd: uint256 = min(ERC20(tusd).balanceOf(msg.sender), ERC20(tusd).allowance(msg.sender, self))\r\n    _ycrv: uint256 = min(ERC20(ycrv).balanceOf(msg.sender), ERC20(ycrv).allowance(msg.sender, self))\r\n\r\n    self.recycle_exact_amounts(msg.sender, _dai, _usdc, _usdt, _tusd, _ycrv)\r\n\r\n\r\n@external\r\ndef recycle_exact(_dai: uint256, _usdc: uint256, _usdt: uint256, _tusd: uint256, _ycrv: uint256):\r\n    self.recycle_exact_amounts(msg.sender, _dai, _usdc, _usdt, _tusd, _ycrv)","ABI":"[{\"name\":\"Recycled\",\"inputs\":[{\"type\":\"address\",\"name\":\"user\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"sent_dai\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"sent_usdc\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"sent_usdt\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"sent_tusd\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"sent_ycrv\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"received_yusd\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"recycle\",\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":22412},{\"name\":\"recycle_exact\",\"outputs\":[],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_dai\"},{\"type\":\"uint256\",\"name\":\"_usdc\"},{\"type\":\"uint256\",\"name\":\"_usdt\"},{\"type\":\"uint256\",\"name\":\"_tusd\"},{\"type\":\"uint256\",\"name\":\"_ycrv\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":18571}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.4","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}