{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.4;\r\n\r\n/**\r\n * @title Sending bulk transactions from the whitelisted wallets.\r\n */\r\ncontract BulkSender {\r\n\r\n    /**\r\n     * @dev Gets the list of addresses and the list of amounts to make bulk transactions.\r\n     * @param addresses - address[]\r\n     * @param amounts - uint256[]\r\n     */\r\n    function distribute(address[] calldata addresses, uint256[] calldata amounts) external payable  {\r\n        require(addresses.length > 0, \"BulkSender: the length of addresses should be greater than zero\");\r\n        require(amounts.length == addresses.length, \"BulkSender: the length of addresses is not equal the length of amounts\");\r\n\r\n        for (uint256 i; i < addresses.length; i++) {\r\n            uint256 value = amounts[i];\r\n            require(value > 0, \"BulkSender: the value should be greater then zero\");\r\n            address payable _to = address(uint160(addresses[i]));\r\n            _to.transfer(value);\r\n        }\r\n\r\n        require(address(this).balance == 0, \"All received funds must be transfered\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"BulkSender","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c8f8163d44bce0e30e8af61ab1af09a66fd608ace6f5f00a2e35d2208f689484"}]}