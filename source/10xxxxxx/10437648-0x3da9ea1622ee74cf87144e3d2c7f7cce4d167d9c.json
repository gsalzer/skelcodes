{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// 1.0\r\n\r\ncontract ERC20 {\r\n  function balanceOf(address _owner) public constant returns (uint balance);\r\n  function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract Testnet {\r\n\r\n    address \tpublic recipient \t= 0x0D923B31927f4CCfD297a94c993B8945Fef0e04A;\r\n    uint \t\tpublic excavation \t= 1594468800; // 07/11/2020 @ 12:00pm (UTC)\r\n    address \tpublic company \t\t= 0xb7C62f89588c6e6B11FC78610F0a02c05545E765;\r\n\r\n    uint public percent = 2;\r\n\r\n    event Deposit(\r\n        uint _amount,\r\n        address _sender\r\n    );\r\n\r\n\r\n    function () payable public {\r\n      Deposit(msg.value, msg.sender);\r\n    }\r\n\r\n\r\n    event EtherWithdrawal(\r\n      uint _amount\r\n    );\r\n\r\n\r\n    event TokenWithdrawal(\r\n      address _tokenAddress,\r\n      uint _amount\r\n    );\r\n\r\n\r\n    function withdraw(address[] _tokens) public {\r\n      require(msg.sender == recipient);\r\n      require(now > excavation);\r\n\r\n      // withdraw ether\r\n      if(this.balance > 0) {\r\n        uint ethShare = this.balance / (100 / percent);\r\n        company.transfer(ethShare);\r\n\t\t\r\n        uint ethWithdrawal = this.balance;\r\n        msg.sender.transfer(ethWithdrawal);\r\n\t\t\r\n        EtherWithdrawal(ethWithdrawal);\r\n      }\r\n\r\n      // withdraw listed ERC20 tokens\r\n      for(uint i = 0; i < _tokens.length; i++) {\r\n        ERC20 token = ERC20(_tokens[i]);\r\n        uint tokenBalance = token.balanceOf(this);\r\n        if(tokenBalance > 0) {\r\n          uint tokenShare = tokenBalance / (100 / percent);\r\n          token.transfer(company, tokenShare);\r\n\t\t  \r\n          uint tokenWithdrawal = token.balanceOf(this);\r\n          token.transfer(recipient, tokenWithdrawal);\r\n          TokenWithdrawal(_tokens[i], tokenWithdrawal);\r\n        }\r\n      }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"excavation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"}]","ContractName":"Testnet","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8e966bc2e14013e5a1aa4a2c5b674c64d696666b3c6a60a47a67acf57ed75d92"}]}