{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.4\r\n\"\"\"\r\n@title Vesting Escrow Factory\r\n@author Curve Finance\r\n@license MIT\r\n@notice Stores and distributes `ERC20CRV` tokens by deploying `VestingEscrowSimple` contracts\r\n\"\"\"\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\nMIN_VESTING_DURATION: constant(uint256) = 86400 * 365\r\n\r\n\r\ninterface VestingEscrowSimple:\r\n    def initialize(\r\n        _admin: address,\r\n        _token: address,\r\n        _recipient: address,\r\n        _amount: uint256,\r\n        _start_time: uint256,\r\n        _end_time: uint256,\r\n        _can_disable: bool\r\n    ) -> bool: nonpayable\r\n\r\n\r\nevent CommitOwnership:\r\n    admin: address\r\n\r\nevent ApplyOwnership:\r\n    admin: address\r\n\r\n\r\nadmin: public(address)\r\nfuture_admin: public(address)\r\ntarget: public(address)\r\n\r\n@external\r\ndef __init__(_target: address, _admin: address):\r\n    \"\"\"\r\n    @notice Contract constructor\r\n    @dev Prior to deployment you must deploy one copy of `VestingEscrowSimple` which\r\n         is used as a library for vesting contracts deployed by this factory\r\n    @param _target `VestingEscrowSimple` contract address\r\n    \"\"\"\r\n    self.target = _target\r\n    self.admin = _admin\r\n\r\n\r\n@external\r\ndef deploy_vesting_contract(\r\n    _token: address,\r\n    _recipient: address,\r\n    _amount: uint256,\r\n    _can_disable: bool,\r\n    _vesting_duration: uint256,\r\n    _vesting_start: uint256 = block.timestamp\r\n) -> address:\r\n    \"\"\"\r\n    @notice Deploy a new vesting contract\r\n    @dev Each contract holds tokens which vest for a single account. Tokens\r\n         must be sent to this contract via the regular `ERC20.transfer` method\r\n         prior to calling this method.\r\n    @param _token Address of the ERC20 token being distributed\r\n    @param _recipient Address to vest tokens for\r\n    @param _amount Amount of tokens being vested for `_recipient`\r\n    @param _can_disable Can admin disable recipient's ability to claim tokens?\r\n    @param _vesting_duration Time period over which tokens are released\r\n    @param _vesting_start Epoch time when tokens begin to vest\r\n    \"\"\"\r\n    assert msg.sender == self.admin  # dev: admin only\r\n    assert _vesting_start >= block.timestamp  # dev: start time too soon\r\n    assert _vesting_duration >= MIN_VESTING_DURATION  # dev: duration too short\r\n\r\n    _contract: address = create_forwarder_to(self.target)\r\n    assert ERC20(_token).approve(_contract, _amount)  # dev: approve failed\r\n    VestingEscrowSimple(_contract).initialize(\r\n        self.admin,\r\n        _token,\r\n        _recipient,\r\n        _amount,\r\n        _vesting_start,\r\n        _vesting_start + _vesting_duration,\r\n        _can_disable\r\n    )\r\n\r\n    return _contract\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(addr: address) -> bool:\r\n    \"\"\"\r\n    @notice Transfer ownership of GaugeController to `addr`\r\n    @param addr Address to have ownership transferred to\r\n    \"\"\"\r\n    assert msg.sender == self.admin  # dev: admin only\r\n    self.future_admin = addr\r\n    log CommitOwnership(addr)\r\n\r\n    return True\r\n\r\n\r\n@external\r\ndef apply_transfer_ownership() -> bool:\r\n    \"\"\"\r\n    @notice Apply pending ownership transfer\r\n    \"\"\"\r\n    assert msg.sender == self.admin  # dev: admin only\r\n    _admin: address = self.future_admin\r\n    assert _admin != ZERO_ADDRESS  # dev: admin not set\r\n    self.admin = _admin\r\n    log ApplyOwnership(_admin)\r\n\r\n    return True","ABI":"[{\"name\":\"CommitOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"admin\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"admin\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"_target\"},{\"type\":\"address\",\"name\":\"_admin\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"deploy_vesting_contract\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_token\"},{\"type\":\"address\",\"name\":\"_recipient\"},{\"type\":\"uint256\",\"name\":\"_amount\"},{\"type\":\"bool\",\"name\":\"_can_disable\"},{\"type\":\"uint256\",\"name\":\"_vesting_duration\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"name\":\"deploy_vesting_contract\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_token\"},{\"type\":\"address\",\"name\":\"_recipient\"},{\"type\":\"uint256\",\"name\":\"_amount\"},{\"type\":\"bool\",\"name\":\"_can_disable\"},{\"type\":\"uint256\",\"name\":\"_vesting_duration\"},{\"type\":\"uint256\",\"name\":\"_vesting_start\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"name\":\"commit_transfer_ownership\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"addr\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37672},{\"name\":\"apply_transfer_ownership\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":38572},{\"name\":\"admin\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1241},{\"name\":\"future_admin\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1271},{\"name\":\"target\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1301}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.4","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000a219008f38a698cc5df6074f0f147a5eab2a2ebe00000000000000000000000039415255619783a2e71fcf7d8f708a951d92e1b6","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}