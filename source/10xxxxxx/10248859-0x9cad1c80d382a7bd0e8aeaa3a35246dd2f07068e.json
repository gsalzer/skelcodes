{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\n\n\ninterface IDistributable {\r\n    function distribute() external payable;\r\n}\n\ninterface IDistributableERC20 {\r\n    function distribute(uint256 amount) external;\r\n}\n\n/**\r\n * @title Crowdsale\r\n */\ncontract FakePlinc is IDistributable {\r\n\r\n    address payable owner;\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    /**\r\n        @dev Called by contracts to distribute dividends\r\n        Updates the bond value\r\n    */\r\n    function distribute() external payable override {\r\n        owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"FakePlinc","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}