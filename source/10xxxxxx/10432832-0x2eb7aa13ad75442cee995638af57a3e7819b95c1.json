{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.10;\r\n\r\ncontract RUSHtoken {\r\n  // The name of the token\r\n  string private _name;\r\n\r\n  function name() public view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  // The symbol of the token\r\n  string private _symbol;\r\n\r\n  function symbol() public view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  // The number of decimals\r\n  uint8 private _decimals;\r\n\r\n  function decimals() public view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  // The amount of tokens in existence\r\n  uint256 private _totalSupply;\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  // The token balance of each account\r\n  mapping (address => uint256) private _balances;\r\n\r\n  function balanceOf(address account) public view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  // Emitted when tokens are moved from one account to another\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  // Transfer tokens to another account\r\n  function transfer(address recipient, uint256 amount) public returns (bool) {\r\n    // Prevent transfer to 0x0 address\r\n    require(recipient != address(0), \"Transfer to the zero address\");\r\n    // Check if the sender has enough tokens\r\n    require(amount <= _balances[msg.sender], \"Transfer amount exceeds balance\");\r\n    // Subtract tokens from sender's account\r\n    _balances[msg.sender] -= amount;\r\n    // Add tokens to recipient's account\r\n    uint256 newBalance = _balances[recipient] + amount;\r\n    require(newBalance >= _balances[recipient], \"Addition overflow\");\r\n    _balances[recipient] = newBalance;\r\n    // Notify the listeners\r\n    emit Transfer(msg.sender, recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  // The accounts approved to withdraw from a given account with the withdrawal sum allowed for each delegate\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  // Emitted when the allowance of a `spender` for an `owner` is set by a call to `approve` function.\r\n  // `value` is the new allowance.\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  // Approve delegate to withdraw tokens\r\n  function approve(address spender, uint256 amount) public returns (bool) {\r\n    // Prevent approval to 0x0 address\r\n    require(spender != address(0), \"Approve to the zero address\");\r\n    // Change the allowance amount\r\n    _allowances[msg.sender][spender] = amount;\r\n    // Notify the listeners\r\n    emit Approval(msg.sender, spender, amount);\r\n    return true;\r\n  }\r\n\r\n  // Get number of tokens approved for withdrawal\r\n  function allowance(address owner, address spender) public view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  // Transfer tokens by delegate\r\n  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n    // Prevent transfer to 0x0 address\r\n    require(recipient != address(0), \"Transfer to the zero address\");\r\n    // Check if the sender has enough tokens\r\n    require(amount <= _balances[sender], \"Transfer amount exceeds balance\");\r\n    // Subtract tokens from sender's account\r\n    _balances[sender] -= amount;\r\n    // Check if delegate's allowance is big enough\r\n    require(amount <= _allowances[sender][msg.sender], \"Transfer amount exceeds allowance\");\r\n    // Reduce delegate's allowance amount\r\n    _allowances[sender][msg.sender] -= amount;\r\n    // Add tokens to recipient's account\r\n    uint256 newBalance = _balances[recipient] + amount;\r\n    require(newBalance >= _balances[recipient], \"Addition overflow\");\r\n    _balances[recipient] = newBalance;\r\n    // Notify the listeners\r\n    emit Transfer(sender, recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  // Constructor\r\n  constructor(string memory tokenName, string memory tokenSymbol, uint8 tokenDecimals, uint256 total) public {\r\n    require(bytes(tokenName).length > 0);\r\n    require(bytes(tokenSymbol).length > 0);\r\n    require(total > 0);\r\n\r\n    _name = tokenName;\r\n    _symbol = tokenSymbol;\r\n    _decimals = tokenDecimals;\r\n    _totalSupply = total * 10 ** uint256(_decimals);\r\n    _balances[msg.sender] = _totalSupply;\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RUSHtoken","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000000000000952757368546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045255534800000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ec04d91fe65103d0b633787c805324e9b43923e3834ae2aaefe7f37f1851ef65"}]}