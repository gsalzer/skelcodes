{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.11;\r\n\r\n//SPDX-License-Identifier: UNLICENSED\r\n\r\n//certo v20070101001c061 noima (c) all right reserved 2020\r\ncontract BaseCertoChainContract {\r\n    address payable creator;\r\n    address payable owner;\r\n\r\n    bool public isSealed;\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyBy(address _account) {\r\n        require(msg.sender == _account,\"not allowed\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyIfNotSealed() //semantic when sealed is not possible to change sensible data\r\n    {\r\n        if (isSealed) revert(\"sealed contract\");\r\n        _;\r\n    }\r\n\r\n    function kill() public onlyBy(owner) {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function setCreator(address payable _creator) public onlyBy(creator) {\r\n        creator = _creator;\r\n        emit EventReady(address(this), \"setCreator\");\r\n    }\r\n\r\n    function setOwner(address payable _owner) public onlyBy(owner) {\r\n        owner = _owner;\r\n        emit EventReady(address(this), \"SetOwner\");\r\n    }\r\n\r\n    function setSealed() public onlyBy(owner) {\r\n        isSealed = true;\r\n        emit EventSealed(address(this));\r\n    } //seal down contract not reversible\r\n\r\n    event EventSealed(address self); //invoked when contract is sealed\r\n    event EventSetCreator(address self); //invoked when we change creator\r\n    event EventSetOwner(address self); //invoked when we change owner\r\n    event EventReady(address self, string method); //invoked when we have done the method action\r\n}\r\n\r\n/// @title  A Proof Of  existence smart contract\r\n/// @author Mauro G. Cordioli ezlab\r\n/// @notice Check the details ad https://certo.legal/scv61\r\ncontract ProofCertoChainContract is BaseCertoChainContract {\r\n    mapping(bytes32 => bool) private CertoLedger;\r\n\r\n    function NotarizeProof(bytes32 hashproof)\r\n        public\r\n        onlyBy(creator)\r\n        onlyIfNotSealed()\r\n    {\r\n        CertoLedger[hashproof] = true;\r\n    }\r\n\r\n    function NotarizeProofNote(bytes32 hashproof, string memory note)\r\n        public\r\n        onlyBy(creator)\r\n        onlyIfNotSealed()\r\n    {\r\n        CertoLedger[hashproof] = true;\r\n        emit EventProof(address(this), hashproof, note); // trace a note in the logs\r\n    }\r\n\r\n    function CheckProofByHashReturnsTrueIFOk(bytes32 hashproof)\r\n        public\r\n        view\r\n        returns (bool)\r\n    {\r\n        return CertoLedger[hashproof];\r\n    } \r\n\r\n    mapping(bytes32 => uint256) private CertoLedgerTimestamp;\r\n\r\n    /// @notice Notarize the hash and return the unixtime stamp of the correspinging block\r\n    /// @param hashproof The sha256 hash to timestamp\r\n    /// @return unixtepoch imestamp of notarization\r\n    function NotarizeProofTimeStamp(bytes32 hashproof)\r\n        public\r\n        onlyBy(creator)\r\n        onlyIfNotSealed()\r\n        returns (uint256)\r\n    {\r\n        uint256 ts = CertoLedgerTimestamp[hashproof];\r\n        if (ts == 0) {\r\n            ts = block.timestamp;\r\n            CertoLedgerTimestamp[hashproof] = ts;\r\n        }\r\n        return ts;\r\n    }\r\n\r\n    function CheckProofTimeStampByHashReturnsNonZeroUnixEpochIFOk(\r\n        bytes32 hashproof\r\n    ) public view returns (uint256) {\r\n        return CertoLedgerTimestamp[hashproof];\r\n    }\r\n\r\n    string public Description; //Contract Purpose HASH\r\n    int256 public constant Version = 0x03003b00;\r\n\r\n    constructor(string memory _Description) public {\r\n        Description = _Description;\r\n\r\n        emit EventReady(address(this), \"constructor\");\r\n    }\r\n\r\n    event EventProof(address self, bytes32 hashproof, string note); // trace a note in the logs\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Description\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"EventProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"EventReady\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"}],\"name\":\"CheckProofByHashReturnsTrueIFOk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"}],\"name\":\"CheckProofTimeStampByHashReturnsNonZeroUnixEpochIFOk\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"}],\"name\":\"NotarizeProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"NotarizeProofNote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashproof\",\"type\":\"bytes32\"}],\"name\":\"NotarizeProofTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Version\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSealed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSealed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ProofCertoChainContract","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b657a6c616220636572746f000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f5ea1127c45fadaa0e565efb9a655856f852db1f26c6356d3d6b387efbc6fdd9"}]}