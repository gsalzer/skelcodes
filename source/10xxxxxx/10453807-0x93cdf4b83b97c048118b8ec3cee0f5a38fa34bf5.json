{"status":"1","message":"OK","result":[{"SourceCode":"/* Update:\r\n * Wallet added to Deploy Procedure\r\n */\r\n/* Discussion:\r\n * https://gitcoin.co/grants/154/decentralized-flexible-organization\r\n */\r\n/* Description:\r\n * DFOHub - Proposal Manager Creation.\r\n * This specific DFOHub functionality is called during the new DFO creation procedure.\r\n * It just initializes a new Proposal Manager, cloning the logic from the original DFOHub one.\r\n * This is a solo-Functionality made as a workaround of the cumulative gas consumption problem.\r\n */\r\n/* Update: \r\n * Introducing DoubleProxy to let external Constracts always locate the DFO proxy\r\n */\r\npragma solidity ^0.6.0;\r\n\r\ncontract DeployProposalsManager {\r\n\r\n    function onStart(address, address) public {\r\n    }\r\n\r\n    function onStop(address) public {\r\n    }\r\n\r\n    function deployProposalsManager(address sender, uint256) public returns (address mvdFunctionalityProposalManagerAddress, address mvdWallet, address doubleProxy) {\r\n        IMVDProxy senderProxy = IMVDProxy(msg.sender);\r\n        senderProxy\r\n            .emitEvent(\"DFOCollateralContractsCloned(address_indexed,address,address,address)\", abi.encodePacked(sender), bytes(\"\"),\r\n            abi.encode(\r\n                mvdFunctionalityProposalManagerAddress = clone(senderProxy.getMVDFunctionalityProposalManagerAddress()),\r\n                mvdWallet = clone(senderProxy.getMVDWalletAddress()),\r\n                doubleProxy = clone(senderProxy.getDoubleProxyAddress())\r\n            )\r\n        );\r\n    }\r\n\r\n    function clone(address original) private returns(address copy) {\r\n        assembly {\r\n            mstore(0, or(0x5880730000000000000000000000000000000000000000803b80938091923cF3, mul(original, 0x1000000000000000000)))\r\n            copy := create(0, 0, 32)\r\n            switch extcodesize(copy) case 0 { invalid() }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IMVDProxy {\r\n    function getMVDFunctionalityProposalManagerAddress() external view returns(address);\r\n    function getMVDWalletAddress() external view returns(address);\r\n    function getDoubleProxyAddress() external view returns(address);\r\n    function emitEvent(string calldata eventSignature, bytes calldata firstIndex, bytes calldata secondIndex, bytes calldata data) external;\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployProposalsManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mvdFunctionalityProposalManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mvdWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doubleProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DeployProposalsManager","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://791a4d62535c87da7d92d0db7cfe50f68e72289842077bf2cf8ff58e16058097"}]}