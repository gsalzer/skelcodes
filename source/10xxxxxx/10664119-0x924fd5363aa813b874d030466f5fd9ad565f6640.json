{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Nemezida\r\n * https://nemezida.io/\r\n * \r\n * telegram: https://t.me/nemezida_official\r\n */\r\n\r\npragma solidity ^0.5.11;\r\n\r\ncontract Nemezida {\r\n    address public creator;\r\n    uint public currentUserID;\r\n\r\n    mapping(uint => uint) public levelPrice;\r\n    mapping(address => User) public users;\r\n    mapping(uint => address) public userAddresses;\r\n\r\n    uint MAX_LEVEL = 6;\r\n    uint REFERRALS_LIMIT = 2;\r\n\r\n    uint LAST_PERSON_ROW_1 = 3;\r\n    uint LAST_PERSON_ROW_2 = 7;\r\n    uint LAST_PERSON_ROW_3 = 15;\r\n    uint LAST_PERSON_ROW_4 = 31;\r\n    uint LAST_PERSON_ROW_5 = 63;\r\n    uint LAST_PERSON_ROW_6 = 127;\r\n    uint LAST_PERSON_ROW_7 = 255;\r\n    uint LAST_PERSON_ROW_8 = 511;\r\n    uint LAST_PERSON_ROW_9 = 1023;\r\n    uint LAST_PERSON_ROW_10 = 2047;\r\n    uint LAST_PERSON_ROW_11 = 4095;\r\n    uint LAST_PERSON_ROW_12 = 8191;\r\n    uint LAST_PERSON_ROW_13 = 16383;\r\n    uint LAST_PERSON_ROW_14 = 32767;\r\n    uint LAST_PERSON_ROW_15 = 65535;\r\n    uint LAST_PERSON_ROW_16 = 131071;\r\n    uint LAST_PERSON_ROW_17 = 262143;\r\n    uint LAST_PERSON_ROW_18 = 524287;\r\n    uint LAST_PERSON_ROW_19 = 1048575;\r\n    uint LAST_PERSON_ROW_20 = 2097151;\r\n    uint LAST_PERSON_ROW_21 = 4194303;\r\n    uint LAST_PERSON_ROW_22 = 8388607;\r\n    uint LAST_PERSON_ROW_23 = 16777215;\r\n    uint LAST_PERSON_ROW_24 = 33554431;\r\n    uint LAST_PERSON_ROW_25 = 67108863;\r\n    uint LAST_PERSON_ROW_26 = 134217727;\r\n    uint LAST_PERSON_ROW_27 = 268435455;\r\n    uint LAST_PERSON_ROW_28 = 536870911;\r\n    uint LAST_PERSON_ROW_29 = 1073741823;\r\n    uint LAST_PERSON_ROW_30 = 2147483647;\r\n\r\n    uint defaultPercent;\r\n    uint firstPercent;\r\n    uint secondPercent;\r\n    uint thirdPercent;\r\n    uint fourthPercent;\r\n    uint fifthPercent;\r\n\r\n    struct User {\r\n        uint id;\r\n        uint referrerID;\r\n        uint firstReferrerID;\r\n        uint secondReferrerID;\r\n        uint thirdReferrerID;\r\n        uint fourthReferrerID;\r\n        uint fifthReferrerID;\r\n        address[] referrals;\r\n        address[] firstReferrals;\r\n        address[] secondReferrals;\r\n        address[] thirdReferrals;\r\n        address[] fourthReferrals;\r\n        address[] fifthReferrals;\r\n        mapping(uint => bool) levelActivity;\r\n    }\r\n\r\n    event RegisterUserEvent(address indexed user, address indexed referrer, uint time);\r\n    event BuyLevelEvent(address indexed user, uint indexed level, uint time);\r\n    event GetLevelProfitEvent(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event GetLevelProfitEventFirst(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event GetLevelProfitEventSecond(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event GetLevelProfitEventThird(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event GetLevelProfitEventFourth(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event GetLevelProfitEventFifth(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event LostLevelProfitEvent(address indexed user, address indexed referral, uint indexed level, uint time);\r\n    event ResetLevelsEvent(address indexed user, uint time);\r\n\r\n    modifier userNotRegistered() {\r\n        require(users[msg.sender].id == 0, 'User is already registered');\r\n        _;\r\n    }\r\n\r\n    modifier userRegistered() {\r\n        require(users[msg.sender].id != 0, 'User does not exist');\r\n        _;\r\n    }\r\n\r\n    modifier validReferrerID(uint _referrerID) {\r\n        require(_referrerID > 0 && _referrerID <= currentUserID, 'Invalid referrer ID');\r\n        _;\r\n    }\r\n\r\n    modifier validLevel(uint _level) {\r\n        require(_level > 0 && _level <= MAX_LEVEL, 'Invalid level');\r\n        _;\r\n    }\r\n\r\n    modifier validLevelAmount(uint _level) {\r\n        require(msg.value == levelPrice[_level], 'Invalid level amount');\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        levelPrice[1] = 0.1 ether;\r\n        levelPrice[2] = 0.15 ether;\r\n        levelPrice[3] = 0.3 ether;\r\n        levelPrice[4] = 0.5 ether;\r\n        levelPrice[5] = 2 ether;\r\n        levelPrice[6] = 10 ether;\r\n\r\n        defaultPercent = 80;\r\n        firstPercent = 8;\r\n        secondPercent = 5;\r\n        thirdPercent = 3;\r\n        fourthPercent = 2;\r\n        fifthPercent = 2;\r\n\r\n        currentUserID++;\r\n\r\n        creator = msg.sender;\r\n\r\n        users[creator] = createNewUser(0, 1, 1, 1, 1, 1);\r\n        userAddresses[currentUserID] = creator;\r\n\r\n        for (uint i = 1; i <= MAX_LEVEL; i++) {\r\n            users[creator].levelActivity[i] = true;\r\n        }\r\n    }\r\n\r\n    function() external payable {\r\n        uint level;\r\n\r\n        for (uint i = 1; i <= MAX_LEVEL; i++) {\r\n            if (msg.value == levelPrice[i]) {\r\n                level = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        require(level > 0, 'Invalid amount has sent');\r\n\r\n        if (users[msg.sender].id != 0) {\r\n            buyLevel(level);\r\n            return;\r\n        }\r\n\r\n        if (level != 1) {\r\n            revert('Buy first level for 0.1 ETH');\r\n        }\r\n\r\n        address referrer = bytesToAddress(msg.data);\r\n        if (referrer == address(0)) {\r\n            registerUser(1);\r\n        } else {\r\n            registerUser(users[referrer].id);\r\n        }\r\n    }\r\n\r\n    function registerUser(uint _referrerID) public payable userNotRegistered() validReferrerID(_referrerID) validLevelAmount(1) {\r\n        uint firstReferrerID = _referrerID;\r\n        uint secondReferrerID = users[userAddresses[firstReferrerID]].firstReferrerID;\r\n        uint thirdReferrerID = users[userAddresses[firstReferrerID]].secondReferrerID;\r\n        uint fourthReferrerID = users[userAddresses[firstReferrerID]].thirdReferrerID;\r\n        uint fifthReferrerID = users[userAddresses[firstReferrerID]].fourthReferrerID;\r\n\r\n        _referrerID = users[findReferrer(creator)].id;\r\n\r\n        currentUserID++;\r\n\r\n        users[msg.sender] = createNewUser(_referrerID, firstReferrerID, secondReferrerID, thirdReferrerID, fourthReferrerID, fifthReferrerID);\r\n\r\n        userAddresses[currentUserID] = msg.sender;\r\n        users[msg.sender].levelActivity[1] = true;\r\n\r\n        users[userAddresses[_referrerID]].referrals.push(msg.sender);\r\n\r\n        users[userAddresses[firstReferrerID]].firstReferrals.push(msg.sender);\r\n        users[userAddresses[secondReferrerID]].secondReferrals.push(msg.sender);\r\n        users[userAddresses[thirdReferrerID]].thirdReferrals.push(msg.sender);\r\n\r\n        transferLevelPayment(1, msg.sender, 1);\r\n        transferLevelPaymentFirst(1, msg.sender);\r\n        transferLevelPaymentSecond(1, msg.sender);\r\n        transferLevelPaymentThird(1, msg.sender);\r\n        transferLevelPaymentFourth(1, msg.sender);\r\n        transferLevelPaymentFifth(1, msg.sender);\r\n\r\n        emit RegisterUserEvent(msg.sender, userAddresses[_referrerID], now);\r\n\r\n        if (currentUserID == LAST_PERSON_ROW_5) {\r\n            resetLevels(2, LAST_PERSON_ROW_1);\r\n        } else if (currentUserID == LAST_PERSON_ROW_6) {\r\n            resetLevels(2, LAST_PERSON_ROW_2);\r\n        } else if (currentUserID == LAST_PERSON_ROW_7) {\r\n            resetLevels(2, LAST_PERSON_ROW_3);\r\n        } else if (currentUserID == LAST_PERSON_ROW_8) {\r\n            resetLevels(2, LAST_PERSON_ROW_4);\r\n        } else if (currentUserID == LAST_PERSON_ROW_9) {\r\n            resetLevels(2, LAST_PERSON_ROW_5);\r\n        } else if (currentUserID == LAST_PERSON_ROW_10) {\r\n            resetLevels(2, LAST_PERSON_ROW_6);\r\n        } else if (currentUserID == LAST_PERSON_ROW_11) {\r\n            resetLevels(2, LAST_PERSON_ROW_7);\r\n        } else if (currentUserID == LAST_PERSON_ROW_12) {\r\n            resetLevels(2, LAST_PERSON_ROW_8);\r\n        } else if (currentUserID == LAST_PERSON_ROW_13) {\r\n            resetLevels(2, LAST_PERSON_ROW_9);\r\n        } else if (currentUserID == LAST_PERSON_ROW_14) {\r\n            resetLevels(2, LAST_PERSON_ROW_10);\r\n        } else if (currentUserID == LAST_PERSON_ROW_15) {\r\n            resetLevels(2, LAST_PERSON_ROW_11);\r\n        } else if (currentUserID == LAST_PERSON_ROW_16) {\r\n            resetLevels(2, LAST_PERSON_ROW_12);\r\n        } else if (currentUserID == LAST_PERSON_ROW_17) {\r\n            resetLevels(2, LAST_PERSON_ROW_13);\r\n        } else if (currentUserID == LAST_PERSON_ROW_18) {\r\n            resetLevels(2, LAST_PERSON_ROW_14);\r\n        } else if (currentUserID == LAST_PERSON_ROW_19) {\r\n            resetLevels(2, LAST_PERSON_ROW_15);\r\n        } else if (currentUserID == LAST_PERSON_ROW_20) {\r\n            resetLevels(2, LAST_PERSON_ROW_16);\r\n        } else if (currentUserID == LAST_PERSON_ROW_21) {\r\n            resetLevels(2, LAST_PERSON_ROW_17);\r\n        } else if (currentUserID == LAST_PERSON_ROW_22) {\r\n            resetLevels(2, LAST_PERSON_ROW_18);\r\n        } else if (currentUserID == LAST_PERSON_ROW_23) {\r\n            resetLevels(2, LAST_PERSON_ROW_19);\r\n        } else if (currentUserID == LAST_PERSON_ROW_24) {\r\n            resetLevels(2, LAST_PERSON_ROW_20);\r\n        } else if (currentUserID == LAST_PERSON_ROW_25) {\r\n            resetLevels(2, LAST_PERSON_ROW_21);\r\n        } else if (currentUserID == LAST_PERSON_ROW_26) {\r\n            resetLevels(2, LAST_PERSON_ROW_22);\r\n        } else if (currentUserID == LAST_PERSON_ROW_27) {\r\n            resetLevels(2, LAST_PERSON_ROW_23);\r\n        } else if (currentUserID == LAST_PERSON_ROW_28) {\r\n            resetLevels(2, LAST_PERSON_ROW_24);\r\n        } else if (currentUserID == LAST_PERSON_ROW_29) {\r\n            resetLevels(2, LAST_PERSON_ROW_25);\r\n        } else if (currentUserID == LAST_PERSON_ROW_30) {\r\n            resetLevels(2, LAST_PERSON_ROW_26);\r\n        }\r\n    }\r\n\r\n    function buyLevel(uint _level) public payable userRegistered() validLevel(_level) validLevelAmount(_level) {\r\n        for (uint l = _level - 1; l > 0; l--) {\r\n            require(getUserLevelActivity(msg.sender, l), 'Buy the previous level');\r\n        }\r\n\r\n        require(!getUserLevelActivity(msg.sender, _level), 'User has already activated level');\r\n\r\n        users[msg.sender].levelActivity[_level] = true;\r\n\r\n        transferLevelPayment(_level, msg.sender, _level);\r\n        transferLevelPaymentFirst(_level, msg.sender);\r\n        transferLevelPaymentSecond(_level, msg.sender);\r\n        transferLevelPaymentThird(_level, msg.sender);\r\n        transferLevelPaymentFourth(_level, msg.sender);\r\n        transferLevelPaymentFifth(_level, msg.sender);\r\n\r\n        emit BuyLevelEvent(msg.sender, _level, now);\r\n    }\r\n\r\n    function resetLevels(uint startId, uint endId) internal {\r\n        for (uint i = startId; i <= endId; i++) {\r\n            for (uint level = 1; level <= MAX_LEVEL; level++) {\r\n                users[userAddresses[i]].levelActivity[level] = false;\r\n                emit ResetLevelsEvent(userAddresses[i], now);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findReferrer(address _user) public view returns (address) {\r\n        if (users[_user].referrals.length < REFERRALS_LIMIT) {\r\n            return _user;\r\n        }\r\n\r\n        address[33554432] memory referrals;\r\n        referrals[0] = users[_user].referrals[0];\r\n        referrals[1] = users[_user].referrals[1];\r\n\r\n        address referrer;\r\n\r\n        for (uint i = 0; i < 33554432; i++) {\r\n            if (users[referrals[i]].referrals.length < REFERRALS_LIMIT) {\r\n                referrer = referrals[i];\r\n                break;\r\n            }\r\n\r\n            if (i >= 512) {\r\n                continue;\r\n            }\r\n\r\n            referrals[(i + 1) * 2] = users[referrals[i]].referrals[0];\r\n            referrals[(i + 1) * 2 + 1] = users[referrals[i]].referrals[1];\r\n        }\r\n\r\n        require(referrer != address(0), 'Referrer was not found');\r\n\r\n        return referrer;\r\n    }\r\n\r\n    function transferLevelPayment(uint _level, address _user, uint height) internal {\r\n        address referrer = getUserUpline(_user, height);\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPayment(_level, referrer, 1);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * defaultPercent)) {\r\n            emit GetLevelProfitEvent(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n    function transferLevelPaymentFirst(uint _level, address _user) internal {\r\n        address referrer = userAddresses[users[_user].firstReferrerID];\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPaymentFirst(_level, referrer);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * firstPercent)) {\r\n            emit GetLevelProfitEventFirst(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n    function transferLevelPaymentSecond(uint _level, address _user) internal {\r\n        address referrer = userAddresses[users[_user].secondReferrerID];\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPaymentSecond(_level, referrer);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * secondPercent)) {\r\n            emit GetLevelProfitEventSecond(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n    function transferLevelPaymentThird(uint _level, address _user) internal {\r\n        address referrer = userAddresses[users[_user].thirdReferrerID];\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPaymentThird(_level, referrer);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * thirdPercent)) {\r\n            emit GetLevelProfitEventThird(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n    function transferLevelPaymentFourth(uint _level, address _user) internal {\r\n        address referrer = userAddresses[users[_user].thirdReferrerID];\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPaymentFourth(_level, referrer);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * fourthPercent)) {\r\n            emit GetLevelProfitEventFourth(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n    function transferLevelPaymentFifth(uint _level, address _user) internal {\r\n        address referrer = userAddresses[users[_user].thirdReferrerID];\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        if (!getUserLevelActivity(referrer, _level)) {\r\n            emit LostLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            transferLevelPaymentFifth(_level, referrer);\r\n            return;\r\n        }\r\n\r\n        if (addressToPayable(referrer).send(msg.value / 100 * fifthPercent)) {\r\n            emit GetLevelProfitEventFifth(referrer, msg.sender, _level, now);\r\n        }\r\n    }\r\n\r\n\r\n    function getUserUpline(address _user, uint height) public view returns (address) {\r\n        if (height <= 0 || _user == address(0)) {\r\n            return _user;\r\n        }\r\n\r\n        return this.getUserUpline(userAddresses[users[_user].referrerID], height - 1);\r\n    }\r\n\r\n    function getUserReferrals(address _user) public view returns (address[] memory) {\r\n        return users[_user].referrals;\r\n    }\r\n\r\n    function getUserLevelActivity(address _user, uint _level) public view returns (bool) {\r\n        return users[_user].levelActivity[_level];\r\n    }\r\n\r\n    function createNewUser(uint _referrerID, uint _firstReferrerID, uint _secondReferrerID, uint _thirdReferrerID, uint _fourthReferrerID, uint _fifthReferrerID) private view returns (User memory) {\r\n        return User({\r\n            id : currentUserID,\r\n            referrerID : _referrerID,\r\n            firstReferrerID : _firstReferrerID,\r\n            secondReferrerID : _secondReferrerID,\r\n            thirdReferrerID : _thirdReferrerID,\r\n            fourthReferrerID : _fourthReferrerID,\r\n            fifthReferrerID : _fifthReferrerID,\r\n            referrals: new address[](0),\r\n            firstReferrals: new address[](0),\r\n            secondReferrals: new address[](0),\r\n            thirdReferrals: new address[](0),\r\n            fourthReferrals: new address[](0),\r\n            fifthReferrals: new address[](0)\r\n            });\r\n    }\r\n\r\n    function bytesToAddress(bytes memory _addr) private pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(_addr, 20))\r\n        }\r\n    }\r\n\r\n    function addressToPayable(address _addr) private pure returns (address payable) {\r\n        return address(uint160(_addr));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"BuyLevelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEventFifth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEventFirst\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEventFourth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEventSecond\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEventThird\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LostLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"RegisterUserEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"ResetLevelsEvent\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"buyLevel\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentUserID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"findReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"getUserLevelActivity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReferrals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"getUserUpline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"registerUser\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstReferrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondReferrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thirdReferrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fourthReferrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fifthReferrerID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Nemezida","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://1b0e0ad0f4519a11b9adbcbb42fc55e0c419775fd5d8e4498e9199cad02e7ed1"}]}