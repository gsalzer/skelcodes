{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.5.12;\r\n\r\ninterface DSPauseAbstract {\r\n    function delay() external view returns (uint256);\r\n    function plot(address, bytes32, bytes calldata, uint256) external;\r\n    function exec(address, bytes32, bytes calldata, uint256) external returns (bytes memory);\r\n}\r\n\r\ninterface VatAbstract {\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n}\r\n\r\ninterface SpotAbstract {\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function poke(bytes32) external;\r\n}\r\n\r\ninterface CatAbstract {\r\n    function file(bytes32, uint256) external;\r\n}\r\n\r\ncontract SpellAction {\r\n\r\n    // MAINNET ADDRESSES\r\n    //\r\n    // The contracts in this list should correspond to MCD core contracts, verify\r\n    // against the current release list at:\r\n    //     https://changelog.makerdao.com/releases/mainnet/1.1.1/contracts.json\r\n    address constant MCD_VAT     = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant MCD_SPOT    = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;\r\n    address constant MCD_CAT     = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;\r\n\r\n    // Decimals & precision\r\n    uint256 constant MILLION  = 10 ** 6;\r\n    uint256 constant RAY      = 10 ** 27;\r\n    uint256 constant RAD      = 10 ** 45;\r\n\r\n    function execute() external {\r\n        /*** Risk Parameter Adjustments ***/\r\n\r\n        // Set the global debt ceiling to 948,000,000\r\n        // 823 (current DC) + 100 (USDC-A increase) + 25 (PAXUSD-A increase)\r\n        VatAbstract(MCD_VAT).file(\"Line\", 948 * MILLION * RAD);\r\n\r\n        // Set the USDC-A debt ceiling\r\n        //\r\n        // Existing debt ceiling: 100 million\r\n        // New debt ceiling: 200 million\r\n        VatAbstract(MCD_VAT).file(\"USDC-A\", \"line\", 200 * MILLION * RAD);\r\n\r\n        // Set the PAXUSD-A debt ceiling\r\n        //\r\n        // Existing debt ceiling: 5 million\r\n        // New debt ceiling: 30 million\r\n        VatAbstract(MCD_VAT).file(\"PAXUSD-A\", \"line\", 30 * MILLION * RAD);\r\n\r\n        // Set USDC-A collateralization ratio\r\n        // Existing ratio: 110%\r\n        // New ratio: 103%\r\n        SpotAbstract(MCD_SPOT).file(\"USDC-A\", \"mat\", 103 * RAY / 100); // 103% coll. ratio\r\n        SpotAbstract(MCD_SPOT).poke(\"USDC-A\");\r\n\r\n        // Set PAXUSD-A collateralization ratio\r\n        // Existing ratio: 120%\r\n        // New ratio: 103%\r\n        SpotAbstract(MCD_SPOT).file(\"PAXUSD-A\", \"mat\", 103 * RAY / 100); // 103% coll. ratio\r\n        SpotAbstract(MCD_SPOT).poke(\"PAXUSD-A\");\r\n\r\n        // Set Cat box variable\r\n        // Existing box: 30m\r\n        // New box: 15m    \r\n        CatAbstract(MCD_CAT).file(\"box\", 15 * MILLION * RAD);\r\n    }\r\n}\r\n\r\ncontract DssSpell {\r\n    DSPauseAbstract public pause =\r\n        DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);\r\n    address         public action;\r\n    bytes32         public tag;\r\n    uint256         public eta;\r\n    bytes           public sig;\r\n    uint256         public expiration;\r\n    bool            public done;\r\n\r\n    // Provides a descriptive tag for bot consumption\r\n    // This should be modified weekly to provide a summary of the actions\r\n    // Hash: seth keccak -- \"$(wget https://raw.githubusercontent.com/makerdao/community/15215ebaf8bbb4a20567b3233383788a68afb58b/governance/votes/Executive%20vote%20-%20September%2014%2C%202020.md -q -O - 2>/dev/null)\"\r\n    string constant public description =\r\n        \"2020-09-14 MakerDAO Executive Spell | Hash: 0xf0155120204be06c56616181ea82bbfa93f48494455c6d0b3c0ab1d581464657\";\r\n\r\n    constructor() public {\r\n        sig = abi.encodeWithSignature(\"execute()\");\r\n        action = address(new SpellAction());\r\n        bytes32 _tag;\r\n        address _action = action;\r\n        assembly { _tag := extcodehash(_action) }\r\n        tag = _tag;\r\n        expiration = now + 30 days;\r\n    }\r\n\r\n    // modifier officeHours {\r\n    //     uint day = (now / 1 days + 3) % 7;\r\n    //     require(day < 5, \"Can only be cast on a weekday\");\r\n    //     uint hour = now / 1 hours % 24;\r\n    //     require(hour >= 14 && hour < 21, \"Outside office hours\");\r\n    //     _;\r\n    // }\r\n\r\n    function schedule() public {\r\n        require(now <= expiration, \"This contract has expired\");\r\n        require(eta == 0, \"This spell has already been scheduled\");\r\n        eta = now + DSPauseAbstract(pause).delay();\r\n        pause.plot(action, tag, sig, eta);\r\n    }\r\n\r\n    function cast() public /*officeHours*/ {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        pause.exec(action, tag, sig, eta);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"action\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"contract DSPauseAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"schedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tag\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DssSpell","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"bzzr://0e6287828387b71b1fb5f7eb80a06b6c4287498cdb2c47889a51e736d460f9c3"}]}