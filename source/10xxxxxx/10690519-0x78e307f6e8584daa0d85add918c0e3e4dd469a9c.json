{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.4\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface USDT:\r\n    def transferFrom(_from: address, _to: address, _value: uint256): nonpayable\r\n    def approve(_spender: address, _value: uint256): nonpayable\r\n\r\ninterface yCurveDeposit:\r\n    def add_liquidity(uamounts: uint256[4], min_mint_amount: uint256): nonpayable\r\n\r\ninterface yVault:\r\n    def deposit(amount: uint256): nonpayable\r\n\r\nevent Recycled:\r\n    user: indexed(address)\r\n    sent: uint256[4]\r\n    received: uint256\r\n\r\n\r\nsafe: constant(address) = 0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52\r\nydeposit: constant(address) = 0xbBC81d23Ea2c3ec7e56D39296F0cbB648873a5d3\r\nyvault: constant(address) = 0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c\r\nycrv: constant(address) = 0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\r\nyusd: constant(address) = 0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c\r\n\r\ndai: constant(address) = 0x6B175474E89094C44Da98b954EedeAC495271d0F\r\nusdc: constant(address) = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\r\nusdt: constant(address) = 0xdAC17F958D2ee523a2206206994597C13D831ec7\r\ntusd: constant(address) = 0x0000000000085d4780B73119b644AE5ecd22b376\r\n\r\n\r\n@external\r\ndef recycle():\r\n    dai_balance: uint256 = ERC20(dai).balanceOf(msg.sender)\r\n    usdc_balance: uint256 = ERC20(usdc).balanceOf(msg.sender)\r\n    usdt_balance: uint256 = ERC20(usdt).balanceOf(msg.sender)\r\n    tusd_balance: uint256 = ERC20(tusd).balanceOf(msg.sender)\r\n\r\n    if dai_balance > 0:\r\n        ERC20(dai).transferFrom(msg.sender, self, dai_balance)\r\n    if usdc_balance > 0:\r\n        ERC20(usdc).transferFrom(msg.sender, self, usdc_balance)\r\n    if usdt_balance > 0:\r\n        USDT(usdt).transferFrom(msg.sender, self, usdt_balance)\r\n    if tusd_balance > 0:\r\n        ERC20(tusd).transferFrom(msg.sender, self, tusd_balance)\r\n    \r\n    if ERC20(dai).allowance(self, ydeposit) == 0:\r\n        ERC20(dai).approve(ydeposit, MAX_UINT256)\r\n        ERC20(usdc).approve(ydeposit, MAX_UINT256)\r\n        USDT(usdt).approve(ydeposit, MAX_UINT256)\r\n        ERC20(tusd).approve(ydeposit, MAX_UINT256)\r\n\r\n    deposit_amounts: uint256[4] = [dai_balance, usdc_balance, usdt_balance, tusd_balance]\r\n    yCurveDeposit(ydeposit).add_liquidity(deposit_amounts, 0)\r\n    \r\n    ycrv_balance: uint256 = ERC20(ycrv).balanceOf(self)\r\n    if ERC20(ycrv).allowance(self, yvault) == 0:\r\n        ERC20(ycrv).approve(yvault, MAX_UINT256)\r\n    \r\n    if ycrv_balance > 0:\r\n        yVault(yvault).deposit(ycrv_balance)\r\n    \r\n    yusd_balance: uint256 = ERC20(yusd).balanceOf(self)\r\n    ERC20(yusd).transfer(msg.sender, yusd_balance)\r\n\r\n    assert ERC20(yusd).balanceOf(self) == 0, \"leftover yusd balance\"\r\n\r\n    log Recycled(msg.sender, deposit_amounts, yusd_balance)","ABI":"[{\"name\":\"Recycled\",\"inputs\":[{\"type\":\"address\",\"name\":\"user\",\"indexed\":true},{\"type\":\"uint256[4]\",\"name\":\"sent\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"received\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"recycle\",\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":22956}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.4","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}