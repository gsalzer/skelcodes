pragma solidity ^0.5.16;

/**
 * @title Collection of error messages
 * @author Aegis
 */
contract BaseReporter {
    event FailUre(uint _error, uint _remarks, uint _item);
    enum Error{
        SUCCESS,
        ERROR
    }

    enum ErrorRemarks {
        COMPTROLLER_TRANSFER_ALLOWED,
        ALLOW_SELF_TRANSFERS,
        DIVISION_BY_ZERO,

        SET_COMPTROLLER_OWNER_CHECK,
        SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED,
        SET_RESERVE_FACTOR_FRESH_CHECK,
        SET_RESERVE_FACTOR_ADMIN_CHECK,
        SET_RESERVE_FACTOR_BOUNDS_CHECK,
        
        ADD_RESERVES_ACCRUE_INTEREST_FAILED,
        ADD_RESERVES_FRESH_CHECK,
        
        REDUCE_RESERVES_ACCRUE_INTEREST_FAILED,
        REDUCE_RESERVES_ADMIN_CHECK,
        REDUCE_RESERVES_FRESH_CHECK,
        REDUCE_RESERVES_CASH_NOT_AVAILABLE,
        REDUCE_RESERVES_VALIDATION,

        SET_INTEREST_RATE_MODEL_OWNER_CHECK,
        SET_INTEREST_RATE_MODEL_FRESH_CHECK,

        INTEGER_OVERFLOW,
        INTEGER_UNDERFLOW,

        TRANSFER_NOT_ALLOWED,
        TRANSFER_NOT_ENOUGH,
        TRANSFER_TOO_MUCH,

        ACCRUE_INTEREST_SIMPLE_INTEREST_FACTOR_CALCULATION_FAILED,
        ACCRUE_INTEREST_ACCUMULATED_INTEREST_CALCULATION_FAILED,
        ACCRUE_INTEREST_NEW_TOTAL_BORROWS_CALCULATION_FAILED,
        ACCRUE_INTEREST_NEW_TOTAL_RESERVES_CALCULATION_FAILED,
        ACCRUE_INTEREST_NEW_BORROW_INDEX_CALCULATION_FAILED,

        MINT_COMPTROLLER_REJECTION,
        MINT_FRESHNESS_CHECK,
        MINT_EXCHANGE_RATE_READ_FAILED,
        REDEEM_ACCRUE_INTEREST_FAILED,
        REDEEM_EXCHANGE_RATE_READ_FAILED,
        CANNOT_BE_ZERO,

        REDEEM_EXCHANGE_TOKENS_CALCULATION_FAILED,
        REDEEM_EXCHANGE_AMOUNT_CALCULATION_FAILED,
        REDEEM_COMPTROLLER_REJECTION,
        REDEEM_FRESHNESS_CHECK,
        REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,
        REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,
        REDEEM_TRANSFER_OUT_NOT_POSSIBLE,

        BORROW_FRESHNESS_CHECK,
        BORROW_COMPTROLLER_REJECTION,
        BORROW_CASH_NOT_AVAILABLE,
        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,
        BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,
        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,
        
        REPAY_BORROW_ACCRUE_INTEREST_FAILED,
        REPAY_BEHALF_ACCRUE_INTEREST_FAILED,
        REPAY_BORROW_FRESHNESS_CHECK,
        REPAY_BORROW_COMPTROLLER_REJECTION,
        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,

        LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED,
        LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED,
        LIQUIDATE_FRESHNESS_CHECK,
        LIQUIDATE_COLLATERAL_FRESHNESS_CHECK,
        LIQUIDATE_COMPTROLLER_REJECTION,
        LIQUIDATE_LIQUIDATOR_IS_BORROWER,
        LIQUIDATE_CLOSE_AMOUNT_IS_ZERO,
        LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX,
        LIQUIDATE_REPAY_BORROW_FRESH_FAILED,
        LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER,
        LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,
        LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,
        LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,
        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,

        EXIT_MARKET_BALANCE_OWED,
        EXIT_MARKET_REJECTION,

        SET_PRICE_ORACLE_OWNER_CHECK,
        SET_CLOSE_FACTOR_OWNER_CHECK,
        SET_CLOSE_FACTOR_VALIDATION,

        SET_COLLATERAL_FACTOR_OWNER_CHECK,
        SET_COLLATERAL_FACTOR_NO_EXISTS,
        SET_COLLATERAL_FACTOR_VALIDATION,
        SET_COLLATERAL_FACTOR_WITHOUT_PRICE,

        SET_MAX_ASSETS_OWNER_CHECK,
        SET_LIQUIDATION_INCENTIVE_OWNER_CHECK,
        SET_LIQUIDATION_INCENTIVE_VALIDATION,
        SUPPORT_MARKET_EXISTS,
        SUPPORT_MARKET_OWNER_CHECK,
        SET_PAUSE_GUARDIAN_OWNER_CHECK,

        SET_PENDING_ADMIN_OWNER_CHECK,
        ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK,
        SET_PENDING_IMPLEMENTATION_OWNER_CHECK,
        MINT_ACCRUE_INTEREST_FAILED,
        BORROW_ACCRUE_INTEREST_FAILED,
        SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED

    }

    enum MathError {
        NO_ERROR,
        DIVISION_BY_ZERO,
        INTEGER_OVERFLOW,
        INTEGER_UNDERFLOW
    }

    function fail(Error _errorEnum, ErrorRemarks _remarks, uint _item) internal returns (uint) {
        emit FailUre(uint(_errorEnum), uint(_remarks), _item);
        return uint(_errorEnum);
    }
}
