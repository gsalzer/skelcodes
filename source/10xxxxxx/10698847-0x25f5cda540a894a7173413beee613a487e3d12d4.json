{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n    function transfer(address to, uint256 value) public returns (bool success);\r\n    function approve(address spender, uint256 value) public returns (bool success);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Artemis is ERC20Interface {\r\n    using SafeMath for uint256;\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public decimals;\r\n    uint256 _totalSupply;\r\n    address public owner;\r\n    bool public activeStatus = true;\r\n\r\n    event Active(address msgSender);\r\n    event Reset(address msgSender);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => uint256) public freezeOf;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n\r\n    constructor() public {\r\n        symbol = \"ARS\";\r\n        name = \"Artemis\";\r\n        decimals = 18;\r\n        _totalSupply = 10000000 * 10**uint(decimals);\r\n        owner = msg.sender;\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    function isOwner(address add) public view returns (bool) {\r\n      if (add == owner) {\r\n        return true;\r\n      } else return false;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n    if (!isOwner(msg.sender)) {\r\n            revert();\r\n         }\r\n    _;\r\n    }\r\n\r\n    modifier onlyActive {\r\n     if (!activeStatus) {\r\n            revert();\r\n        }\r\n    _;\r\n    }\r\n\r\n    function activeMode() public onlyOwner {\r\n        activeStatus = true;\r\n        emit Active(msg.sender);\r\n    }\r\n\r\n    function resetMode() public onlyOwner {\r\n        activeStatus = false;\r\n        emit Reset(msg.sender);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public onlyActive returns (bool success) {\r\n        if (to == address(0)) {\r\n            revert();\r\n        }\r\n    \tif (value <= 0) {\r\n    \t\trevert();\r\n        }\r\n        if (balances[msg.sender] < value) {\r\n            revert();\r\n        }\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public onlyActive returns (bool success) {\r\n        if (value <= 0) {\r\n            revert();\r\n        }\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public onlyActive returns (bool success) {\r\n        if (to == address(0)) {\r\n            revert();\r\n        }\r\n        if (value <= 0) {\r\n            revert();\r\n        }\r\n        if (balances[from] < value) {\r\n            revert();\r\n        }\r\n        if (value > allowed[from][msg.sender]) {\r\n            revert();\r\n        }\r\n        balances[from] = balances[from].sub(value);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 value) public onlyActive returns (bool success) {\r\n        if (balances[msg.sender] < value) {\r\n            revert();\r\n        }\r\n\t\tif (value <= 0) {\r\n\t\t    revert();\r\n\t\t}\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        _totalSupply = _totalSupply.sub(value);\r\n        emit Burn(msg.sender, value);\r\n        return true;\r\n    }\r\n\r\n\tfunction freeze(uint256 value) public onlyActive returns (bool success) {\r\n        if (balances[msg.sender] < value) {\r\n            revert();\r\n        }\r\n\t\tif (value <= 0){\r\n\t\t    revert();\r\n\t\t}\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].add(value);\r\n        emit Freeze(msg.sender, value);\r\n        return true;\r\n    }\r\n\r\n\tfunction unfreeze(uint256 value) public onlyActive returns (bool success) {\r\n        if (freezeOf[msg.sender] < value) {\r\n            revert();\r\n        }\r\n\t\tif (value <= 0) {\r\n\t\t    revert();\r\n\t\t}\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].sub(value);\r\n\t\tbalances[msg.sender] = balances[msg.sender].add(value);\r\n        emit Unfreeze(msg.sender, value);\r\n        return true;\r\n    }\r\n\r\n    function () external payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"Active\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"Reset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"activeMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activeStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Artemis","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://105b36601353a37c38355f2e4128ff6b04ac0a0e32a4bf0ee2f4f92f1875ab73"}]}