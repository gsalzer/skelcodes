{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.7; \r\n//rev modifica construttore Tag \r\n//certo v20050101c058 noima (c) all right reserved 2020 \r\ncontract BaseCertoChainContract {\r\n    address payable creator; \r\n    address payable owner; \r\n    \r\n    bool public isSealed;\r\n      \r\n    constructor() public    {   creator = msg.sender;   owner=msg.sender; }\r\n    \r\n    modifier onlyBy(address _account)\r\n    {\r\n        require(msg.sender != _account);\r\n        _;\r\n    }\r\n    \r\n    \r\n     modifier onlyIfNotSealed() //semantic when sealed is not possible to change sensible data\r\n    {\r\n        if (isSealed)\r\n            revert();\r\n        _;\r\n    }\r\n    \r\n    function   kill() public onlyBy(owner)\r\n    {               selfdestruct(owner);     }\r\n     \r\n     function setCreator(address payable _creator)  public onlyBy(creator)\r\n    {           creator = _creator;     \r\n                     emit EventReady(address(this),\"setCreator\");\r\n    }\r\n\r\n     function setOwner(address payable _owner)  public onlyBy(owner)\r\n    {           owner = _owner;    \r\n                     emit EventReady(address(this),\"SetOwner\");\r\n     }\r\n    \r\n    \r\nfunction setSealed() public  onlyBy(owner)  { isSealed = true;  emit EventSealed(address(this));   } //seal down contract not reversible\r\n\r\n event  EventSealed(address self); //invoked when contract is sealed\r\n event  EventSetCreator(address self); //invoked when we change creator\r\n event  EventSetOwner(address self); //invoked when we change owner\r\n event EventReady(address self,string method); //invoked when we have done the method action\r\n\r\n}\r\n\r\n\r\ncontract TagCertoChainContract   is BaseCertoChainContract    \r\n{  \r\n    bool public isActive;\r\n   \r\n \r\n\r\n    function constructorx(address payable _owner) public\r\n    {\r\n          owner=(_owner);\r\n          emit EventReady(address(this),\"constructor\");\r\n    } \r\n\r\n\r\n\r\n    constructor(address payable _owner,bytes32   signaturehash,bytes32 signaturemaskR ,bytes32 signaturemaskS, uint8 signaturemaskV ) public \r\n    {\r\n          owner=(_owner);\r\n          SignatureMaskR=signaturemaskR;\r\n          SignatureMaskS=signaturemaskS;\r\n          SignatureMaskV=signaturemaskV;          \r\n          SignatureHash=signaturehash;\r\n          emit EventReady(address(this),\"constructor\");\r\n    }\r\n\r\n    function ActivateTag(address Target) public onlyBy(owner)\r\n    {\r\n          TargetDocument=Target;\r\n          emit EventReady(address(this),\"ActivateTag\");\r\n    }\r\n\r\n    function SignTag(bytes32   signaturehash,bytes32 signaturemaskR ,bytes32 signaturemaskS, uint8 signaturemaskV ) public onlyBy(owner)\r\n    {\r\n          SignatureMaskR=signaturemaskR;\r\n          SignatureMaskS=signaturemaskS;\r\n          SignatureMaskV=signaturemaskV;          \r\n          SignatureHash=signaturehash;\r\n          emit EventReady(address(this),\"SignTag\");\r\n    }\r\n\r\n    function VerifyTag(bytes8 signaturepinS )  public view  returns (string memory)    {\r\n            bytes32 signatureR;\r\n            bytes32 signatureS;\r\n            bytes32 signatureSpad;\r\n            signatureSpad=signaturepinS;\r\n            signatureR=SignatureMaskR;\r\n            signatureS=SignatureMaskS|(signatureSpad);            \r\n            //emit EventReady(address(this),\"VerifyTag\");\r\n           if  (ecrecover(SignatureHash, SignatureMaskV,signatureR , signatureS) ==creator) {\r\n                 return \"OK IS TAG VALID\";\r\n           } else\r\n           {    return \"NOT A VALID TAG\";  }\r\n\r\n          // return signatureS;\r\n    }\r\n\r\n\r\n     function RecoverSigner(bytes32 msgHash,  bytes32 signaturepinR, bytes32 signaturepinS)  public  view returns (address) {\r\n          bytes32 signatureR;\r\n            bytes32 signatureS;\r\n             signatureR=SignatureMaskR|signaturepinR;\r\n              signatureS=SignatureMaskS|signaturepinS;\r\n             \r\n        return ecrecover(msgHash,SignatureMaskV,signatureR , signatureS) ;\r\n    }\r\n    \r\n     \r\n\r\n    address public  TargetDocument; \r\n    bytes32 public  SignatureMaskR;\r\n    bytes32 public  SignatureMaskS;\r\n    uint8   public   SignatureMaskV;\r\n    \r\n    \r\n    bytes32 public  SignatureHash;\r\n    \r\n}\r\n\r\ncontract DocumentCertoChainContract   is BaseCertoChainContract    \r\n{  \r\n  \r\n   \r\n    string  public  Description ; //Description\r\n    string  public  FileName;     //FileName\r\n    string  public  FileHash;     //SecuritySeal HASH\r\n    string  public  FileData;     //SecuritySeal DATA\r\n    address public  Revision; \r\n    address public  NextOwner; \r\n    address public  PrevOwner; \r\n    \r\n    \r\n    constructor(string memory  _Description, string memory  _FileName,string memory _FileHash,string memory _FileData) public\r\n    {\r\n          Revision=address(this);\r\n          NextOwner=address(this);\r\n          Description=_Description;\r\n          FileName=_FileName;\r\n          FileHash=_FileHash;\r\n          FileData=_FileData;\r\n\r\n\r\n         emit EventReady(address(this),\"constructor\");\r\n       \r\n    }\r\n    \r\n    function setRevision(address _Revision)  public onlyBy(creator) onlyIfNotSealed()\r\n    {\r\n          Revision = _Revision;\r\n          emit EventNewRevision(address(this));\r\n        \r\n    }\r\n     \r\n     \r\n     function setNextOwner(address _NextOwner)  public onlyBy(creator) onlyIfNotSealed()\r\n    {\r\n          NextOwner = _NextOwner;\r\n          emit EventNewOwner(address(this));\r\n    }\r\n    \r\n     function setPrevOwner(address _PrevOwner)  public onlyBy(creator) onlyIfNotSealed()\r\n    {\r\n          PrevOwner = _PrevOwner;\r\n          emit EventNewPrevOwner(address(this));\r\n    }\r\n     event EventNewOwner(address self);\r\n     event EventNewPrevOwner(address self);\r\n     event EventNewRevision(address self); \r\n     \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_FileName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_FileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_FileData\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventNewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventNewPrevOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventNewRevision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"EventReady\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FileData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FileHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FileName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NextOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrevOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Revision\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSealed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NextOwner\",\"type\":\"address\"}],\"name\":\"setNextOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PrevOwner\",\"type\":\"address\"}],\"name\":\"setPrevOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Revision\",\"type\":\"address\"}],\"name\":\"setRevision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSealed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DocumentCertoChainContract","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000005f464f524d415a494f4e4520494e464f524d415a494f4e450a444549204c41564f5241544f52490a4d4f44554c4f2053504543494649434f20414c544f205249534348494f0a436f6469636520636f72736f3a2032303230303038302d32343800000000000000000000000000000000000000000000000000000000000000000f53414c5641474e494e204d2e706466000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000477368613235363a3165306532343436363736356361616437323031316131343061383832663233383766626636613662313663303139366230613965333737386363306433643300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a323032302d30352d303600000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d0b73c0986f086e2a61d51da57619fd4f03735d6f9a42910673ce3b6c7be78c5"}]}