{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\n\r\ncontract TimeMiner {\r\n\r\n\tuint256 constant public TOKEN_PRECISION = 1e6;\r\n\tuint256 constant private PRECISION = 1e12; \r\n\t\r\n\tuint256 constant private initial_supply = 24 * TOKEN_PRECISION;\r\n\t\r\n\tstring constant public name = \"TimeMiner\";\r\n\tstring constant public symbol = \"TIME\";\r\n\tuint8 constant public decimals = 6;\r\n\r\n\tstruct User {\r\n\t    bool whitelisted;\r\n\t\tuint256 balance;\r\n\t\tmapping(address => uint256) allowance;\r\n\t\tuint256 appliedTokenCirculation;\r\n\t}\r\n\r\n\tstruct Info {\r\n\t\tuint256 totalSupply;\r\n\t\tmapping(address => User) users;\r\n\t\taddress admin;\r\n        \r\n        uint256 supplydivision;\r\n        uint256 supplymultiply;\r\n        \r\n        bool stableCoinSystem;\r\n        \r\n        uint256 coinWorkingTime;\r\n        uint256 coinCreationTime;\r\n\t}\r\n\t\r\n\tstruct PreSaleInfo {\r\n\t\taddress payable admin;\r\n        bool isPreSaleActive;\r\n        uint256 preSaleDivide;\r\n\t}\r\n\r\n\tInfo private info;\r\n\tPreSaleInfo private preSaleInfo;\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint256 tokens);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 tokens);\r\n\tevent Whitelist(address indexed user, bool status);\r\n\t\r\n\tconstructor() public {\r\n\t    info.stableCoinSystem = true;\r\n\r\n\t    info.coinWorkingTime = now;\r\n\t    info.coinCreationTime = now;\r\n\t     \r\n\t\tinfo.admin = msg.sender;\r\n\t\tinfo.totalSupply = initial_supply;\r\n\t\t\r\n\t\tinfo.supplydivision = 1;\r\n\t\tinfo.supplymultiply = 1;\r\n\t\t\r\n\t\tinfo.users[msg.sender].balance = initial_supply / 2;\r\n\t\tinfo.users[msg.sender].appliedTokenCirculation = initial_supply;\r\n\t\tinfo.users[msg.sender].whitelisted = true;\r\n\t\t\r\n\t\tinfo.users[address(this)].balance = initial_supply / 2;\r\n\t\tinfo.users[address(this)].appliedTokenCirculation = initial_supply;\r\n\t\tinfo.users[address(this)].whitelisted = true;\r\n\t\t\r\n\t    preSaleInfo.isPreSaleActive = true;\r\n\t    preSaleInfo.admin = msg.sender;\r\n\t    preSaleInfo.preSaleDivide = 1;\r\n\t}\r\n\t\r\n\tfunction preSale(uint _tokens) public payable {\r\n\t    require(preSaleInfo.isPreSaleActive);\r\n\t    require(msg.value > (5 ether * _tokens) / preSaleInfo.preSaleDivide);\r\n\t   \r\n\t    _transfer(address(this), msg.sender, _tokens * TOKEN_PRECISION);\t\r\n\t    \r\n    \tpreSaleInfo.admin.transfer(msg.value);\r\n\t}\r\n\t\r\n\tfunction changePreSalePriceIfToHigh(uint256 _preSaleDivide) public {\r\n\t    require(msg.sender == info.admin);\r\n\t    preSaleInfo.preSaleDivide = _preSaleDivide;\r\n\t}\r\n\r\n\tfunction preSaleFinished() public {\r\n\t    require(msg.sender == info.admin);\r\n\t    preSaleInfo.isPreSaleActive = false;\r\n\t    uint256 contractBalance = info.users[address(this)].balance;\r\n\t     _transfer(address(this), info.admin, contractBalance);\r\n\t}\r\n\t\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t    uint256 countOfCoinsToAdd = ((now - info.coinCreationTime) / 1 hours);\r\n        uint256 realTotalSupply = initial_supply + (((countOfCoinsToAdd * TOKEN_PRECISION) / info.supplydivision) * info.supplymultiply);\r\n\t\treturn realTotalSupply;\r\n\t}\r\n\t\r\n\tfunction balanceOfTokenCirculation(address _user) public view returns (uint256) {\r\n\t\treturn info.users[_user].appliedTokenCirculation;\r\n\t}\r\n\r\n\tfunction balanceOf(address _user) public view returns (uint256) {\r\n\t\treturn info.users[_user].balance;\r\n\t}\r\n\r\n\tfunction allowance(address _user, address _spender) public view returns (uint256) {\r\n\t\treturn info.users[_user].allowance[_spender];\r\n\t}\r\n\r\n\tfunction allInfoFor(address _user) public view returns (uint256 totalTokenSupply, uint256 userTokenCirculation, uint256 userBalance, uint256 realUserBalance) {\r\n\t\treturn (totalSupply(), balanceOfTokenCirculation(_user), balanceOf(_user), tokensToClaim(_user));\r\n\t}\r\n\t\r\n\tfunction tokensToClaim(address _user)  public view returns (uint256 totalTokenSupply)\r\n\t{\r\n\t    uint256 countOfCoinsToAdd = ((now - info.coinCreationTime) / 1 hours);\r\n        uint256 realTotalSupply = initial_supply + (((countOfCoinsToAdd * TOKEN_PRECISION) / info.supplydivision) * info.supplymultiply);\r\n        \r\n\t    uint256 AppliedTokenCirculation = info.users[_user].appliedTokenCirculation; \r\n        uint256 addressBalance = info.users[_user].balance;\r\n       \r\n        uint256 value1 = (addressBalance * PRECISION);\r\n        uint256 value2 = value1 / AppliedTokenCirculation;\r\n        uint256 value3 = value2 * realTotalSupply;\r\n        uint256 adjustedAddressBalance = (value3) / PRECISION;\r\n  \r\n        return (adjustedAddressBalance);\r\n\t}\r\n\t\r\n\tfunction approve(address _spender, uint256 _tokens) external returns (bool) {\r\n\t\tinfo.users[msg.sender].allowance[_spender] = _tokens;\r\n\t\temit Approval(msg.sender, _spender, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction whitelist(address _user, bool _status) public {\r\n\t\trequire(msg.sender == info.admin);\r\n\t\tinfo.users[_user].whitelisted = _status;\r\n\t\temit Whitelist(_user, _status);\r\n\t}\r\n\t\r\n\tfunction setPrizeFromNewAddress(uint256 _supplydivision, uint256 _supplymultiply) public {\r\n\t\trequire(msg.sender == info.admin);\r\n\t\tinfo.supplydivision = _supplydivision;\r\n\t\tinfo.supplymultiply = _supplymultiply;\r\n\t}\r\n\t\r\n\tfunction infoStableSystem() public view returns (bool _stableCoinSystem, uint256 _rewardSupplyDivision, uint256 _rewardSupplyMultiply) {\r\n\t\treturn (info.stableCoinSystem, info.supplydivision, info.supplymultiply);\r\n\t}\r\n\t\t\r\n\tfunction setStableCoinSystem(bool _stableCoinSystem) public {\r\n\t\trequire(msg.sender == info.admin);\r\n\t\tinfo.stableCoinSystem = _stableCoinSystem;\r\n\t}\r\n\t\r\n\tfunction isWhitelisted(address _user) public view returns (bool) {\r\n\t\treturn info.users[_user].whitelisted;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _tokens) external returns (bool) {\r\n\t\t_transfer(msg.sender, _to, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _tokens) external returns (bool) {\r\n\t\trequire(info.users[_from].allowance[msg.sender] >= _tokens);\r\n\t\tinfo.users[_from].allowance[msg.sender] -= _tokens;\r\n\t\t_transfer(_from, _to, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction _transfer(address _from, address _to, uint256 _tokens) internal returns (uint256) {\r\n\r\n\t \trequire(balanceOf(_from) >= _tokens && balanceOf(_from) >= 1);\r\n\t \t\r\n\t \tuint256 _transferred = 0;\r\n\t\t\r\n\t\tif(info.stableCoinSystem){\r\n\t\t \r\n\t\t \tbool isNewUser = info.users[_to].balance == 0;\r\n\t\t\r\n    \t\t// If new user come\r\n    \t\tif(isNewUser)\r\n    \t\t{\r\n    \t\t    info.users[_to].appliedTokenCirculation = info.totalSupply;\r\n    \t\t}\r\n    \t\t\r\n    \t\t// If time left\r\n    \t\tif(info.coinWorkingTime + 1 hours < now)\r\n    \t\t{\r\n    \t\t    uint256 countOfCoinsToAdd = ((now - info.coinCreationTime) / 1 hours);\r\n    \t\t    info.coinWorkingTime = now;\r\n    \t\t  \r\n                info.totalSupply = initial_supply + (((countOfCoinsToAdd * TOKEN_PRECISION) / info.supplydivision) * info.supplymultiply);\r\n    \t\t}\r\n    \t\t\r\n    \t\t// Adjust tokens from\r\n    \t\tuint256 fromAppliedTokenCirculation = info.users[_from].appliedTokenCirculation; \r\n    \t\t\r\n            uint256 addressBalanceFrom = info.users[_from].balance;\r\n            uint256 adjustedAddressBalanceFrom = ((((addressBalanceFrom * PRECISION) / fromAppliedTokenCirculation) * info.totalSupply)) / PRECISION;\r\n            \r\n            info.users[_from].balance = adjustedAddressBalanceFrom;\r\n            info.users[_from].appliedTokenCirculation = info.totalSupply;\r\n            \r\n            // Adjust tokens to\r\n            uint256 toAppliedTokenCirculation = info.users[_to].appliedTokenCirculation;\r\n            \r\n            uint256 addressBalanceTo = info.users[_to].balance;\r\n            uint256 adjustedAddressBalanceTo = ((((addressBalanceTo * PRECISION) / toAppliedTokenCirculation) * info.totalSupply)) / PRECISION;\r\n                     \r\n    \t\tinfo.users[_to].balance = adjustedAddressBalanceTo;\r\n    \t\tinfo.users[_to].appliedTokenCirculation = info.totalSupply;\r\n    \r\n    \t    // Adjusted tokens\r\n            uint256 adjustedTokens = (((((_tokens * PRECISION) / fromAppliedTokenCirculation) * info.totalSupply)) / PRECISION);\r\n    \t    \r\n    \t\tinfo.users[_from].balance -= adjustedTokens;\r\n    \t\t_transferred = adjustedTokens;\r\n    \t\tinfo.users[_to].balance += _transferred;\r\n    \t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t    \tinfo.users[_from].balance -= _tokens;\r\n    \t\t_transferred = _tokens;\r\n    \t\tinfo.users[_to].balance += _transferred;\r\n\t\t}\t\t\r\n\t\r\n\t\t\r\n\t\temit Transfer(_from, _to, _transferred);\r\n\t\r\n\t\treturn _transferred;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"Whitelist\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTokenCirculation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realUserBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOfTokenCirculation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_preSaleDivide\",\"type\":\"uint256\"}],\"name\":\"changePreSalePriceIfToHigh\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"infoStableSystem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_stableCoinSystem\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rewardSupplyDivision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardSupplyMultiply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"preSale\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"preSaleFinished\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supplydivision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supplymultiply\",\"type\":\"uint256\"}],\"name\":\"setPrizeFromNewAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stableCoinSystem\",\"type\":\"bool\"}],\"name\":\"setStableCoinSystem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokensToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"whitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TimeMiner","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a840d3258dc87c1428deb880899ce900bd2cfca654e8df12d363199614018047"}]}