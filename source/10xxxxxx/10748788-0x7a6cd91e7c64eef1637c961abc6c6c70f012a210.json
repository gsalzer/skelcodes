{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n    function transfer(address, uint) external returns (bool);\r\n    function burn(uint) external;\r\n}\r\n\r\ninterface YFVRewards {\r\n    function periodFinish() external view returns (uint);\r\n}\r\n\r\n// https://yfv.finance/voting\r\ncontract VIP2 {\r\n\r\n    address payable owner;\r\n    YFVRewards pool0 = YFVRewards(0xa8d3084Fa61C893eACAE2460ee77E3E5f11C8CFE);\r\n    TokenInterface yfv = TokenInterface(0x45f24BaEef268BB6d63AEe5129015d69702BCDfa);\r\n    TokenInterface usdc = TokenInterface(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\r\n    TokenInterface uniswapYFVETH = TokenInterface(0xcB4f983E705caeb7217c5C3785001Cb138115F0b);\r\n    address payable yfvMultisig = 0xb7b2Ea8A1198368f950834875047aA7294A2bDAa;\r\n    uint contractDeployTime;\r\n    uint initialPool0PeriodFinish;\r\n    bool isUniswapLPTLocked;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        contractDeployTime = block.timestamp;\r\n        initialPool0PeriodFinish = pool0.periodFinish();\r\n    }\r\n\r\n    // 325.76YFV will be sent to this contract before voting start\r\n    // If fund is unlocked, anyone can call this function to burn the 325.76YFV\r\n    function giveBack1_BurnYFV() public {\r\n        require(isFundUnlocked());\r\n        yfv.burn(yfv.balanceOf(address(this)));\r\n    }\r\n\r\n    // Liquidity token of 500YFV+ETH on uniswap will be sent to this contract before voting start\r\n    // If fund is unlocked, anyone can call this function to lock the LP tokens so owner can only withdraw after 6 weeks from contractDeployTime\r\n    function giveBack2_LockUNI() public {\r\n        require(isFundUnlocked());\r\n        isUniswapLPTLocked = true;\r\n    }\r\n\r\n    // 10,000 USDC will be sent to this contract before voting start\r\n    // If fund is unlocked, anyone can call this function to send the 10,000 USDC to the yfv multisig address\r\n    function giveBack3_DonationToTeam() public {\r\n        require(isFundUnlocked());\r\n        usdc.transfer(yfvMultisig, usdc.balanceOf(address(this)));\r\n    }\r\n\r\n    // Use the periodFinish data to check for unlock status\r\n    function isFundUnlocked() public view returns (bool) {\r\n        return pool0.periodFinish() > initialPool0PeriodFinish;\r\n    }\r\n\r\n    // If the fund is not unlocked after 2 weeks from contractDeployTime, owner can get back all assets in this contract\r\n    function ownerGetBackAfterTwoWeeks() public {\r\n        require(msg.sender == owner);\r\n        require(block.timestamp > contractDeployTime + 14 days);\r\n        yfv.transfer(owner, yfv.balanceOf(address(this)));\r\n        usdc.transfer(owner, usdc.balanceOf(address(this)));\r\n\r\n        if (!isUniswapLPTLocked) {\r\n          uniswapYFVETH.transfer(owner, uniswapYFVETH.balanceOf(address(this)));\r\n        }\r\n    }\r\n\r\n    // If the fund is unlocked, owner can only get back the YFV/ETH liquidity token after 6 weeks from contractDeployTime\r\n    function ownerGetBackUniswapTokenAfterSixWeeks() public {\r\n        require(msg.sender == owner);\r\n        require(block.timestamp > contractDeployTime + 42 days);\r\n        uniswapYFVETH.transfer(owner, uniswapYFVETH.balanceOf(address(this)));\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"giveBack1_BurnYFV\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"giveBack2_LockUNI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"giveBack3_DonationToTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFundUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerGetBackAfterTwoWeeks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerGetBackUniswapTokenAfterSixWeeks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VIP2","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7862882e3f1a3fdff31b241e34e35528992b53c94712dd9ec00b57bd1cfa0996"}]}