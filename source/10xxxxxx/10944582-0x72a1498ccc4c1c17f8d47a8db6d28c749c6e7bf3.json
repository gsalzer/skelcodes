{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ncontract ERC20Interface{\r\n    function totalSupply() public view returns (uint);\r\n    \r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n        \r\n    function allowance (address tokenOwner, address spender) public returns (uint remaining);\r\n    \r\n    function transfer(address _to, uint tokens) public returns (bool success);\r\n             \r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    \r\n    function transferFrom (address from, address to, uint tokens) public returns (bool success);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        require(b <= a, errorMessage);\r\n        uint c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint c = a / b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract uniswapFinance is ERC20Interface, SafeMath{\r\n    string private  name;\r\n    string private symbol;\r\n    uint8 public decimals;\r\n   \r\n    uint256 public _totalSupply;\r\n    \r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    function() public {\r\n        name = \"uniswap.finance\";\r\n        symbol = \"UNFI\";\r\n        decimals = 18;\r\n        _totalSupply = 50000000000000000000000;\r\n        \r\n        balances[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply); \r\n    }\r\n        function totalSupply() public view returns(uint)\r\n        {\r\n            return _totalSupply - balances[address(0)];\r\n        }\r\n        \r\n        function balanceOf(address tokenOwner) public view returns(uint)\r\n        {\r\n            return balances[tokenOwner];\r\n        }\r\n        \r\n        function allowance (address tokenOwner, address spender) public  returns(uint remaining)\r\n        {\r\n            return allowed[tokenOwner][spender];\r\n        }\r\n        \r\n        function approve(address spender, uint tokens) public returns (bool success) {\r\n            allowed[msg.sender][spender] = tokens;\r\n            emit Approval(msg.sender, spender, tokens);\r\n            return true;\r\n        }\r\n        \r\n        function transfer(address _to, uint tokens) public returns (bool success) {\r\n        if (balances[msg.sender] >= tokens \r\n            && tokens > 0\r\n            && balances[_to] + tokens > balances[_to]) {\r\n            balances[msg.sender] -= tokens;\r\n            balances[_to] += tokens;\r\n            emit Transfer(msg.sender, _to, tokens);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n        }\r\n        function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 tokens\r\n    ) public returns  (bool success) {\r\n        if (balances[_from] >= tokens\r\n            && allowed[_from][msg.sender] >= tokens\r\n            && tokens > 0\r\n            && balances[_to] + tokens > balances[_to]) {\r\n            balances[_from] -= tokens;\r\n            allowed[_from][msg.sender] -= tokens;\r\n            balances[_to] += tokens;\r\n            emit Transfer(_from, _to, tokens);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n        \r\n       \r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"uniswapFinance","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f8ad4bcccb2c91554facc599cc62a1e00bc22f0212a05c8ad2275d335055d0b8"}]}