[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_loopringDelegate",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_uniswapFactory",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_wethTokenAddress",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "payable": true,
        "stateMutability": "payable",
        "type": "fallback"
    },
    {
        "constant": true,
        "inputs": [
            {
                "internalType": "address",
                "name": "owner",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "tokenAddress",
                "type": "address"
            }
        ],
        "name": "brokerBalanceOf",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "orderHash",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "fillAmountB",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "requestedAmountS",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "requestedFeeAmount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "tokenRecipient",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes",
                                "name": "extraData",
                                "type": "bytes"
                            }
                        ],
                        "internalType": "struct BrokerData.BrokerOrder[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenS",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenB",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "feeToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalFillAmountB",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalRequestedAmountS",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalRequestedFeeAmount",
                        "type": "uint256"
                    }
                ],
                "internalType": "struct BrokerData.BrokerApprovalRequest",
                "name": "request",
                "type": "tuple"
            }
        ],
        "name": "brokerRequestAllowance",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "loopringDelegate",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "owner",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "broker",
                        "type": "address"
                    },
                    {
                        "internalType": "bytes32",
                        "name": "orderHash",
                        "type": "bytes32"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenB",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenS",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "feeToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "fillAmountB",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "spentAmountS",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "spentFeeAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenRecipient",
                        "type": "address"
                    },
                    {
                        "internalType": "bytes",
                        "name": "extraData",
                        "type": "bytes"
                    }
                ],
                "internalType": "struct BrokerData.BrokerInterceptorReport",
                "name": "fillReport",
                "type": "tuple"
            }
        ],
        "name": "onOrderFillReport",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "contract IUniswapExchange",
                "name": "exchange",
                "type": "address"
            },
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "orderHash",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "fillAmountB",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "requestedAmountS",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "requestedFeeAmount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "tokenRecipient",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes",
                                "name": "extraData",
                                "type": "bytes"
                            }
                        ],
                        "internalType": "struct BrokerData.BrokerOrder[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenS",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "tokenB",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "feeToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalFillAmountB",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalRequestedAmountS",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalRequestedFeeAmount",
                        "type": "uint256"
                    }
                ],
                "internalType": "struct BrokerData.BrokerApprovalRequest",
                "name": "request",
                "type": "tuple"
            },
            {
                "internalType": "bool",
                "name": "isTokenBExchangeWrapper",
                "type": "bool"
            }
        ],
        "name": "performSwap",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "exchangeAmount",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address",
                "name": "token",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "setupExchange",
                "type": "bool"
            }
        ],
        "name": "setupToken",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address[]",
                "name": "tokens",
                "type": "address[]"
            },
            {
                "internalType": "bool[]",
                "name": "setupExchanges",
                "type": "bool[]"
            }
        ],
        "name": "setupTokens",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "name": "tokenToExchange",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "name": "tokenToIsSetup",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "uniswapFactory",
        "outputs": [
            {
                "internalType": "contract IUniswapFactory",
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "wethTokenAddress",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address",
                "name": "token",
                "type": "address"
            }
        ],
        "name": "withdrawDust",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address",
                "name": "token",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
            }
        ],
        "name": "withdrawDust",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "withdrawEthDust",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "internalType": "address payable",
                "name": "recipient",
                "type": "address"
            }
        ],
        "name": "withdrawEthDust",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    }
]