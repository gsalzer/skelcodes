{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.11;\r\n\r\ncontract Unity {\r\n    address public ownerWallet;\r\n    struct Variables {\r\n        uint currUserID          ;\r\n        uint pool1currUserID     ;\r\n        uint pool2currUserID     ;\r\n        uint pool3currUserID     ;\r\n        uint pool4currUserID     ;\r\n        uint pool5currUserID     ;\r\n        uint pool6currUserID     ;\r\n        uint pool7currUserID     ;\r\n        uint pool8currUserID     ;\r\n        uint pool9currUserID     ;\r\n        uint pool10currUserID    ;\r\n        uint pool11currUserID    ;\r\n        uint pool12currUserID    ;\r\n    }\r\n    struct Variables2 {\r\n        uint pool1activeUserID   ;\r\n        uint pool2activeUserID   ;\r\n        uint pool3activeUserID   ;\r\n        uint pool4activeUserID   ;\r\n        uint pool5activeUserID   ;\r\n        uint pool6activeUserID   ;\r\n        uint pool7activeUserID   ;\r\n        uint pool8activeUserID   ;\r\n        uint pool9activeUserID   ;\r\n        uint pool10activeUserID  ;\r\n        uint pool11activeUserID  ;\r\n        uint pool12activeUserID  ;\r\n    }\r\n    Variables public vars;\r\n    Variables2 public vars2;\r\n\r\n    struct UserStruct {\r\n        bool isExist;\r\n        uint id;\r\n        uint referrerID;\r\n        uint referredUsers;\r\n        mapping(uint => uint) levelExpired;\r\n    }\r\n    \r\n    struct PoolUserStruct {\r\n        bool isExist;\r\n        uint id;\r\n        uint payment_received; \r\n    }\r\n    \r\n    mapping (address => UserStruct) public users;\r\n    mapping (uint => address) public userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool1users;\r\n    mapping (uint => address) public pool1userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool2users;\r\n    mapping (uint => address) public pool2userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool3users;\r\n    mapping (uint => address) public pool3userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool4users;\r\n    mapping (uint => address) public pool4userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool5users;\r\n    mapping (uint => address) public pool5userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool6users;\r\n    mapping (uint => address) public pool6userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool7users;\r\n    mapping (uint => address) public pool7userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool8users;\r\n    mapping (uint => address) public pool8userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool9users;\r\n    mapping (uint => address) public pool9userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool10users;\r\n    mapping (uint => address) public pool10userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool11users;\r\n    mapping (uint => address) public pool11userList;\r\n    \r\n    mapping (address => PoolUserStruct) public pool12users;\r\n    mapping (uint => address) public pool12userList;\r\n     \r\n    mapping(uint => uint) public LEVEL_PRICE;\r\n    \r\n    uint public unlimited_level_price   = 0;\r\n    \r\n    uint REGESTRATION_FESS      =   0.10    ether;\r\n    \r\n    uint pool1_price            =   0.25    ether;\r\n    uint pool2_price            =   0.50    ether;\r\n    uint pool3_price            =   0.75    ether;\r\n    uint pool4_price            =   1.25    ether;\r\n    uint pool5_price            =   2.00    ether;\r\n    uint pool6_price            =   3.50    ether;\r\n    uint pool7_price            =   6.00    ether;\r\n    uint pool8_price            =   10.00   ether;\r\n    uint pool9_price            =   15.00   ether;\r\n    uint pool10_price           =   20.00   ether;\r\n    uint pool11_price           =   30.00   ether;\r\n    uint pool12_price           =   50.00   ether;\r\n   \r\n    event regLevelEvent(address indexed _user, address indexed _referrer, uint _time);\r\n    event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);\r\n    event regPoolEntry(address indexed _user,uint _level,   uint _time);\r\n    event getPoolPayment(address indexed _user,address indexed _receiver, uint _level, uint _time);\r\n   \r\n    UserStruct[] public requests;\r\n    uint public totalEarned = 0;\r\n     \r\n    constructor() public {\r\n        ownerWallet = msg.sender;\r\n\r\n        LEVEL_PRICE[1] = 0.040 ether;   \r\n        LEVEL_PRICE[2] = 0.006 ether;   \r\n        LEVEL_PRICE[3] = 0.004 ether;   \r\n        LEVEL_PRICE[4] = 0.00222 ether;   \r\n        unlimited_level_price=0.00222 ether;   \r\n\r\n        UserStruct memory userStruct;\r\n        vars.currUserID++;\r\n\r\n        userStruct = UserStruct({\r\n            isExist: true,\r\n            id: vars.currUserID,\r\n            referrerID: 0,\r\n            referredUsers:0\r\n           \r\n        });\r\n        \r\n        users[ownerWallet] = userStruct;\r\n        userList[vars.currUserID] = ownerWallet;\r\n       \r\n       \r\n        PoolUserStruct memory pooluserStruct;\r\n        \r\n        vars.pool1currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool1currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool1activeUserID=vars.pool1currUserID;\r\n        pool1users[msg.sender] = pooluserStruct;\r\n        pool1userList[vars.pool1currUserID]=msg.sender;\r\n\r\n        vars.pool2currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool2currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool2activeUserID=vars.pool2currUserID;\r\n        pool2users[msg.sender] = pooluserStruct;\r\n        pool2userList[vars.pool2currUserID]=msg.sender;\r\n       \r\n        vars.pool3currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool3currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool3activeUserID=vars.pool3currUserID;\r\n        pool3users[msg.sender] = pooluserStruct;\r\n        pool3userList[vars.pool3currUserID]=msg.sender;\r\n       \r\n        vars.pool4currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool4currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool4activeUserID=vars.pool4currUserID;\r\n        pool4users[msg.sender] = pooluserStruct;\r\n        pool4userList[vars.pool4currUserID]=msg.sender;\r\n\r\n        vars.pool5currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool5currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool5activeUserID=vars.pool5currUserID;\r\n        pool5users[msg.sender] = pooluserStruct;\r\n        pool5userList[vars.pool5currUserID]=msg.sender;\r\n\r\n        vars.pool6currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool6currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool6activeUserID=vars.pool6currUserID;\r\n        pool6users[msg.sender] = pooluserStruct;\r\n        pool6userList[vars.pool6currUserID]=msg.sender;\r\n       \r\n        vars.pool7currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool7currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool7activeUserID=vars.pool7currUserID;\r\n        pool7users[msg.sender] = pooluserStruct;\r\n        pool7userList[vars.pool7currUserID]=msg.sender;\r\n       \r\n        vars.pool8currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool8currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool8activeUserID=vars.pool8currUserID;\r\n        pool8users[msg.sender] = pooluserStruct;\r\n        pool8userList[vars.pool8currUserID]=msg.sender;\r\n       \r\n        vars.pool9currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool9currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool9activeUserID=vars.pool9currUserID;\r\n        pool9users[msg.sender] = pooluserStruct;\r\n        pool9userList[vars.pool9currUserID]=msg.sender;\r\n       \r\n        vars.pool10currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool10currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool10activeUserID=vars.pool10currUserID;\r\n        pool10users[msg.sender] = pooluserStruct;\r\n        pool10userList[vars.pool10currUserID]=msg.sender;\r\n        \r\n        vars.pool11currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool11currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool11activeUserID=vars.pool11currUserID;\r\n        pool11users[msg.sender] = pooluserStruct;\r\n        pool11userList[vars.pool11currUserID]=msg.sender;\r\n        \r\n        vars.pool12currUserID++;\r\n        pooluserStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:vars.pool12currUserID,\r\n            payment_received:0\r\n        });\r\n        vars2.pool12activeUserID=vars.pool12currUserID;\r\n        pool12users[msg.sender] = pooluserStruct;\r\n        pool12userList[vars.pool12currUserID]=msg.sender;\r\n       \r\n       \r\n    }\r\n     \r\n    function regUser(uint _referrerID) public payable {\r\n       \r\n        require(!users[msg.sender].isExist, \"User Exists\");\r\n        require(_referrerID > 0 && _referrerID <= vars.currUserID, 'Incorrect referral ID');\r\n        require(msg.value == REGESTRATION_FESS, 'Incorrect Value');\r\n       \r\n        UserStruct memory userStruct;\r\n        vars.currUserID++;\r\n\r\n        userStruct = UserStruct({\r\n            isExist: true,\r\n            id: vars.currUserID,\r\n            referrerID: _referrerID,\r\n            referredUsers:0\r\n        });\r\n   \r\n        users[msg.sender] = userStruct;\r\n        userList[vars.currUserID]=msg.sender;\r\n       \r\n        users[userList[users[msg.sender].referrerID]].referredUsers=users[userList[users[msg.sender].referrerID]].referredUsers+1;\r\n        \r\n        payReferral(1,msg.sender);\r\n        emit regLevelEvent(msg.sender, userList[_referrerID], now);\r\n    \r\n    }\r\n\r\n    function payReferral(uint _level, address _user) internal {\r\n        address referer;\r\n       \r\n        referer = userList[users[_user].referrerID];\r\n        bool sent = false;\r\n       \r\n        uint level_price_local=0;\r\n        if(_level>4){\r\n            level_price_local=unlimited_level_price;\r\n        }\r\n        else{\r\n            level_price_local=LEVEL_PRICE[_level];\r\n        }\r\n        sent = address(uint160(referer)).send(level_price_local);\r\n\r\n        if (sent) {\r\n            totalEarned += level_price_local;\r\n            emit getMoneyForLevelEvent(referer, msg.sender, _level, now);\r\n            if(_level <= 20 && users[referer].referrerID >= 1){\r\n                payReferral(_level+1,referer);\r\n            }\r\n            else\r\n            {\r\n                sendBalance();\r\n            }\r\n           \r\n        }\r\n       \r\n        if(!sent) {\r\n            payReferral(_level, referer);\r\n        }\r\n     }\r\n    \r\n    function buyPool(uint poolNumber) public payable{\r\n        require(users[msg.sender].isExist, \"User Not Registered\");\r\n        \r\n        bool isinpool = isInPool(poolNumber,msg.sender);\r\n        require(!isinpool, \"Already in AutoPool\");\r\n        \r\n        require(poolNumber>=1,\"Pool number <0\");\r\n        require(poolNumber<=12,\"Pool number >12\");\r\n        \r\n        bool isPriceValid = checkPrice(poolNumber,msg.value);\r\n        require(isPriceValid,\"Price of Pool is Wrong\");\r\n        \r\n        PoolUserStruct memory userStruct;\r\n        address poolCurrentuser=getPoolCurrentUser(poolNumber);\r\n        increasePoolCurrentUserID(poolNumber);\r\n        \r\n        userStruct = PoolUserStruct({\r\n            isExist:true,\r\n            id:getPoolCurrentUserID(poolNumber),\r\n            payment_received:0\r\n        });\r\n        assignPoolUser(poolNumber,msg.sender,userStruct.id,userStruct);\r\n        uint pool_price = getPoolPrice(poolNumber);\r\n        \r\n        bool sent = false;\r\n        //direct fee for referer (10%)\r\n        uint fee = (pool_price * 10) / 100;\r\n        address referer;\r\n        referer = userList[users[msg.sender].referrerID];\r\n        \r\n        uint poolshare = pool_price - fee;\r\n        \r\n        if (address(uint160(referer)).send(fee))\r\n            sent = address(uint160(poolCurrentuser)).send(poolshare);\r\n        \r\n        if (sent) {\r\n            totalEarned += poolshare;\r\n            increasePoolPaymentReceive(poolNumber,poolCurrentuser);\r\n            if(getPoolPaymentReceive(poolNumber,poolCurrentuser)>=getPoolPaymentNumber(poolNumber))\r\n            {\r\n                increasePoolActiveUserID(poolNumber);\r\n            }\r\n            emit getPoolPayment(msg.sender,poolCurrentuser, poolNumber, now);\r\n            emit regPoolEntry(msg.sender, poolNumber, now);\r\n        }\r\n        \r\n    }\r\n    function getPoolPaymentNumber(uint _poolNumber) internal pure returns (uint){\r\n        if (_poolNumber <=6)\r\n            return 2;\r\n        else if ((_poolNumber > 6) && (_poolNumber <=10))\r\n            return 3;\r\n        else if (_poolNumber ==11)\r\n            return 4;\r\n        else if (_poolNumber ==12)\r\n            return 5; \r\n        \r\n        return 0;\r\n    }\r\n    \r\n    function isInPool(uint _poolNumber,address _PoolMember) internal view returns (bool){\r\n        if (_poolNumber == 1)\r\n            return pool1users[_PoolMember].isExist;\r\n        else if (_poolNumber == 2)\r\n            return pool2users[_PoolMember].isExist;\r\n        else if (_poolNumber == 3)\r\n            return pool3users[_PoolMember].isExist;\r\n        else if (_poolNumber == 4)\r\n            return pool4users[_PoolMember].isExist;\r\n        else if (_poolNumber == 5)\r\n            return pool5users[_PoolMember].isExist;\r\n        else if (_poolNumber == 6)\r\n            return pool6users[_PoolMember].isExist;\r\n        else if (_poolNumber == 7)\r\n            return pool7users[_PoolMember].isExist;\r\n        else if (_poolNumber == 8)\r\n            return pool8users[_PoolMember].isExist;\r\n        else if (_poolNumber == 9)\r\n            return pool9users[_PoolMember].isExist;\r\n        else if (_poolNumber == 10)\r\n            return pool10users[_PoolMember].isExist;\r\n        else if (_poolNumber == 11)\r\n            return pool11users[_PoolMember].isExist;\r\n        else if (_poolNumber == 12)\r\n            return pool12users[_PoolMember].isExist;\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function checkPrice(uint _poolNumber,uint256 Amount) internal view returns (bool){\r\n        bool ret = false;\r\n        \r\n        if ((_poolNumber == 1)&&(Amount ==pool1_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 2)&&(Amount ==pool2_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 3)&&(Amount ==pool3_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 4)&&(Amount ==pool4_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 5)&&(Amount ==pool5_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 6)&&(Amount ==pool6_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 7)&&(Amount ==pool7_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 8)&&(Amount ==pool8_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 9)&&(Amount ==pool9_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 10)&&(Amount ==pool10_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 11)&&(Amount ==pool11_price))\r\n            ret = true;\r\n        else if ((_poolNumber == 12)&&(Amount ==pool12_price))\r\n            ret = true;\r\n            \r\n        return ret;\r\n    }\r\n    \r\n    function getPoolCurrentUser(uint _poolNumber) internal view returns (address){\r\n        if (_poolNumber == 1)\r\n            return pool1userList[vars2.pool1activeUserID];\r\n        else if (_poolNumber == 2)\r\n            return pool2userList[vars2.pool2activeUserID];\r\n        else if (_poolNumber == 3)\r\n            return pool3userList[vars2.pool3activeUserID];\r\n        else if (_poolNumber == 4)\r\n            return pool4userList[vars2.pool4activeUserID];\r\n        else if (_poolNumber == 5)\r\n            return pool5userList[vars2.pool5activeUserID];\r\n        else if (_poolNumber == 6)\r\n            return pool6userList[vars2.pool6activeUserID];\r\n        else if (_poolNumber == 7)\r\n            return pool7userList[vars2.pool7activeUserID];\r\n        else if (_poolNumber == 8)\r\n            return pool8userList[vars2.pool8activeUserID];\r\n        else if (_poolNumber == 9)\r\n            return pool9userList[vars2.pool9activeUserID];\r\n        else if (_poolNumber == 10)\r\n            return pool10userList[vars2.pool10activeUserID];\r\n        else if (_poolNumber == 11)\r\n            return pool11userList[vars2.pool11activeUserID];\r\n        else if (_poolNumber == 12)\r\n            return pool12userList[vars2.pool12activeUserID];\r\n        \r\n        return address(0);\r\n    }\r\n    \r\n    function increasePoolCurrentUserID(uint _poolNumber) internal {\r\n       if (_poolNumber == 1)\r\n            vars.pool1currUserID++;\r\n        else if (_poolNumber == 2)\r\n            vars.pool2currUserID++;\r\n        else if (_poolNumber == 3)\r\n            vars.pool3currUserID++;\r\n        else if (_poolNumber == 4)\r\n            vars.pool4currUserID++;\r\n        else if (_poolNumber == 5)\r\n            vars.pool5currUserID++;\r\n        else if (_poolNumber == 6)\r\n            vars.pool6currUserID++;\r\n        else if (_poolNumber == 7)\r\n            vars.pool7currUserID++;\r\n        else if (_poolNumber == 8)\r\n            vars.pool8currUserID++;\r\n        else if (_poolNumber == 9)\r\n            vars.pool9currUserID++;\r\n        else if (_poolNumber == 10)\r\n            vars.pool10currUserID++;\r\n        else if (_poolNumber == 11)\r\n            vars.pool11currUserID++;\r\n        else if (_poolNumber == 12)\r\n            vars.pool12currUserID++;\r\n    }\r\n    \r\n    function getPoolCurrentUserID(uint _poolNumber) internal view returns (uint){\r\n        if (_poolNumber == 1)\r\n            return vars.pool1currUserID;\r\n        else if (_poolNumber == 2)\r\n            return vars.pool2currUserID;\r\n        else if (_poolNumber == 3)\r\n            return vars.pool3currUserID;\r\n        else if (_poolNumber == 4)\r\n            return vars.pool4currUserID;\r\n        else if (_poolNumber == 5)\r\n            return vars.pool5currUserID;\r\n        else if (_poolNumber == 6)\r\n            return vars.pool6currUserID;\r\n        else if (_poolNumber == 7)\r\n            return vars.pool7currUserID;\r\n        else if (_poolNumber == 8)\r\n            return vars.pool8currUserID;\r\n        else if (_poolNumber == 9)\r\n            return vars.pool9currUserID;\r\n        else if (_poolNumber == 10)\r\n            return vars.pool10currUserID;\r\n        else if (_poolNumber == 11)\r\n            return vars.pool11currUserID;\r\n        else if (_poolNumber == 12)\r\n            return vars.pool12currUserID;\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    function assignPoolUser(uint _poolNumber,address newPoolMember,uint poolCurrentUserID,PoolUserStruct memory userStruct) internal {\r\n        if (_poolNumber == 1){\r\n            pool1users[newPoolMember] = userStruct;\r\n            pool1userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 2){\r\n            pool2users[newPoolMember] = userStruct;\r\n            pool2userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 3){\r\n            pool3users[newPoolMember] = userStruct;\r\n            pool3userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 4){\r\n            pool4users[newPoolMember] = userStruct;\r\n            pool4userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 5){\r\n            pool5users[newPoolMember] = userStruct;\r\n            pool5userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 6){\r\n            pool6users[newPoolMember] = userStruct;\r\n            pool6userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 7){\r\n            pool7users[newPoolMember] = userStruct;\r\n            pool7userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 8){\r\n            pool8users[newPoolMember] = userStruct;\r\n            pool8userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 9){\r\n            pool9users[newPoolMember] = userStruct;\r\n            pool9userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 10){\r\n            pool10users[newPoolMember] = userStruct;\r\n            pool10userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 11){\r\n            pool11users[newPoolMember] = userStruct;\r\n            pool11userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n        else if (_poolNumber == 12){\r\n            pool12users[newPoolMember] = userStruct;\r\n            pool12userList[poolCurrentUserID]=newPoolMember;\r\n        }\r\n    }\r\n    \r\n    function getPoolPrice(uint _poolNumber) internal view returns (uint){\r\n        if (_poolNumber == 1)\r\n            return pool1_price;\r\n        else if (_poolNumber == 2)\r\n            return pool2_price;\r\n        else if (_poolNumber == 3)\r\n            return pool3_price;\r\n        else if (_poolNumber == 4)\r\n            return pool4_price;\r\n        else if (_poolNumber == 5)\r\n            return pool5_price;\r\n        else if (_poolNumber == 6)\r\n            return pool6_price;\r\n        else if (_poolNumber == 7)\r\n            return pool7_price;\r\n        else if (_poolNumber == 8)\r\n            return pool8_price;\r\n        else if (_poolNumber == 9)\r\n            return pool9_price;\r\n        else if (_poolNumber == 10)\r\n            return pool10_price;\r\n        else if (_poolNumber == 11)\r\n            return pool11_price;\r\n        else if (_poolNumber == 12)\r\n            return pool12_price;\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    function increasePoolPaymentReceive(uint _poolNumber, address CurrentUser) internal {\r\n        if (_poolNumber == 1)\r\n            pool1users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 2)\r\n            pool2users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 3)\r\n            pool3users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 4)\r\n            pool4users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 5)\r\n            pool5users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 6)\r\n            pool6users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 7)\r\n            pool7users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 8)\r\n            pool8users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 9)\r\n            pool9users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 10)\r\n            pool10users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 11)\r\n            pool11users[CurrentUser].payment_received+=1;\r\n        else if (_poolNumber == 12)\r\n            pool12users[CurrentUser].payment_received+=1;\r\n    }\r\n    \r\n    function getPoolPaymentReceive(uint _poolNumber, address CurrentUser) internal view returns(uint){\r\n        if (_poolNumber == 1)\r\n            return pool1users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 2)\r\n            return pool2users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 3)\r\n            return pool3users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 4)\r\n            return pool4users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 5)\r\n            return pool5users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 6)\r\n            return pool6users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 7)\r\n            return pool7users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 8)\r\n            return pool8users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 9)\r\n            return pool9users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 10)\r\n            return pool10users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 11)\r\n            return pool11users[CurrentUser].payment_received;\r\n        else if (_poolNumber == 12)\r\n            return pool12users[CurrentUser].payment_received;\r\n    }\r\n    \r\n    function increasePoolActiveUserID(uint _poolNumber) internal {\r\n        if (_poolNumber == 1)\r\n            vars2.pool1activeUserID+=1;\r\n        else if (_poolNumber == 2)\r\n            vars2.pool2activeUserID+=1;\r\n        else if (_poolNumber == 3)\r\n            vars2.pool3activeUserID+=1;\r\n        else if (_poolNumber == 4)\r\n            vars2.pool4activeUserID+=1;\r\n        else if (_poolNumber == 5)\r\n            vars2.pool5activeUserID+=1;\r\n        else if (_poolNumber == 6)\r\n            vars2.pool6activeUserID+=1;\r\n        else if (_poolNumber == 7)\r\n            vars2.pool7activeUserID+=1;\r\n        else if (_poolNumber == 8)\r\n            vars2.pool8activeUserID+=1;\r\n        else if (_poolNumber == 9)\r\n            vars2.pool9activeUserID+=1;\r\n        else if (_poolNumber == 10)\r\n            vars2.pool10activeUserID+=1;\r\n        else if (_poolNumber == 11)\r\n            vars2.pool11activeUserID+=1;\r\n        else if (_poolNumber == 12)\r\n            vars2.pool12activeUserID+=1;\r\n    }\r\n    \r\n    function getEthBalance() public view returns(uint) {\r\n    return address(this).balance;\r\n    }\r\n    \r\n    function sendBalance() private\r\n    {\r\n         if (!address(uint160(ownerWallet)).send(getEthBalance()))\r\n         {\r\n             \r\n         }\r\n    }\r\n   \r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool12userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool5users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool3userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool1userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool1currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool2currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool3currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool4currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool5currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool6currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool7currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool8currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool9currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool10currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool11currUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool12currUserID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool8userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool1users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool11users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool4userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool9userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool9users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool6users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool3users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LEVEL_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlimited_level_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool2userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool4users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool6userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referredUsers\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool2users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool7users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"regUser\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolNumber\",\"type\":\"uint256\"}],\"name\":\"buyPool\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool8users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referredUsers\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool11userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vars2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pool1activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool2activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool3activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool4activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool5activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool6activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool7activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool8activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool9activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool10activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool11activeUserID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool12activeUserID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool5userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool12users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool7userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pool10userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pool10users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"regLevelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"getMoneyForLevelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"regPoolEntry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"getPoolPayment\",\"type\":\"event\"}]","ContractName":"Unity","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://6d7cf87bb754292630c6f6a1c122fa6838bc1ad1f51ce96917647110a9d13d0f"}]}