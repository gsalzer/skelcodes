{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.26;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    \r\n  address public owner;\r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n    emit OwnershipTransferred(owner, newOwner);\r\n  }\r\n  }\r\n}\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns(uint);\r\n  function balanceOf(address tokenOwner) public view returns(uint balance);\r\n  function allowance(address tokenOwner, address spender) public view returns(uint remaining);\r\n  function transfer(address to, uint tokens) public returns(bool success);\r\n  function approve(address spender, uint tokens) public returns(bool success);\r\n  function transferFrom(address from, address to, uint tokens) public returns(bool success);\r\n  uint public basisPointsRate = 0;\r\n  uint256 public maximumFee = 0;\r\n  uint public MAX_UINT = 2**256 - 1;\r\n  modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\ncontract managerList is Ownable {\r\n    mapping(address => bool) public managerlist;\r\n    \r\n    modifier managerCheck {\r\n    require(managerlist[msg.sender],\"YOU_ARE_NOT_A_MANAGER\");\r\n    _;\r\n    }\r\n  \r\n  function addManager(address whois) public onlyOwner {\r\n    managerlist[whois] = true;\r\n    emit AddManager(whois);\r\n  }\r\n\r\n  function removeManager(address whois) public onlyOwner {\r\n    managerlist[whois] = false;\r\n    emit RemoveManager(whois);\r\n  }\r\n\r\n    event AddManager(address indexed whois);\r\n    event RemoveManager(address indexed whois);\r\n}\r\n\r\ncontract blackList is Ownable, managerList{\r\n    mapping(address => bool) public blacklist;\r\n    \r\n    modifier permissionCheck {\r\n    require(!blacklist[msg.sender],\"YOU_ARE_LOCKED\");\r\n    _;\r\n  }\r\n  \r\n  function lockUser(address whois) public permissionCheck managerCheck{\r\n    require(whois != owner,\"DON'T_LOCKING_OWNER\");\r\n    blacklist[whois] = true;\r\n    emit LockedUser(whois);\r\n  }\r\n\r\n  function unlockUser(address whois) public permissionCheck managerCheck{\r\n    blacklist[whois] = false;\r\n    emit UnlockedkUser(whois);\r\n  }\r\n  \r\n    event LockedUser(address indexed whois);\r\n    event UnlockedkUser(address indexed whois);\r\n}\r\n\r\ncontract token { \r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address tokenAddr, uint256 tokenValue) public {\r\n        tokenAddr; tokenValue;\r\n    }\r\n} \r\n\r\ncontract HusToken is Pausable, ERC20Interface, blackList {\r\n    using SafeMath for uint;\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public decimals;\r\n    uint256 amount_eth;\r\n    uint _totalSupply;\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n    token public ERC20Token;\r\n\r\n\r\n    constructor() public {\r\n        name = \"Hus.us:Send_Hub v1\";\r\n        symbol = \"us\";\r\n        decimals = 6;\r\n        _totalSupply = 0;\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(this, owner, _totalSupply);\r\n    }\r\n    \r\n \r\n    function balanceOf(address whois) view public returns (uint) {\r\n        return balances[whois];\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public view returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public whenNotPaused permissionCheck onlyPayloadSize(2 * 32) returns(bool success){\r\n        require(!blacklist[_spender],\"_SPENDER_IS_LOCKED\");\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n        function transfer(address _to, uint _value) public whenNotPaused permissionCheck onlyPayloadSize(2 * 32) returns(bool success){\r\n        require(!blacklist[_to],\"USER_IS_LOCKED\");\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused permissionCheck returns(bool success){\r\n        require(!blacklist[_from],\"USER_FROM_IS_LOCKED\");\r\n        require(!blacklist[_to],\"USER_TO_IS_LOCKED\");\r\n        uint _allowance = allowed[_from][msg.sender];\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint) {\r\n       return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balances[owner] + amount > balances[owner]);\r\n        balances[owner] += amount;\r\n        _totalSupply += amount;\r\n        emit Issue(amount);\r\n    }\r\n\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balances[owner] >= amount);\r\n        _totalSupply -= amount;\r\n        balances[owner] -= amount;\r\n        emit Redeem(amount);\r\n    }\r\n\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public onlyOwner returns(bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n  \r\n    function redeemBLT (address LockUser) public onlyOwner {\r\n        require(blacklist[LockUser]);\r\n        uint dirtyFunds = balanceOf(LockUser);\r\n        balances[LockUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        emit RedeemBLT(LockUser, dirtyFunds);\r\n    }\r\n\r\n    function () external payable {\r\n    }\r\n  \r\n    function withDrawal() public onlyOwner returns(bool success){\r\n        msg.sender.transfer(address(this).balance);\r\n        return true;\r\n    }\r\n    \r\n    function withDrawalET(address tokenAddress, uint tokens) public onlyOwner returns(bool success) {\r\n        ERC20Token = token(tokenAddress);\r\n        ERC20Token.transfer(owner, tokens);\r\n        return true;\r\n    }\r\n    \r\n    function payforUser(address tokenAddress, string _comment, address _to, uint tokens) public whenNotPaused permissionCheck managerCheck returns(bool success){\r\n        ERC20Token = token(tokenAddress);\r\n        ERC20Token.transfer(_to,tokens);\r\n        emit SayTransfer(_comment,_to,tokens);\r\n        ERC20Token = token(msg.sender);\r\n        return true;\r\n    }\r\n    \r\n    function payforUsers(address _tokenAddress, uint[] _ticket, address[] _to, uint256[] tokens) public whenNotPaused permissionCheck managerCheck returns (bool _success) {\r\n        require(_ticket.length == _to.length && _to.length == tokens.length);\r\n\t\trequire(_ticket.length <= 255);\r\n\t\tERC20Token = token(_tokenAddress);\r\n\t\tfor (uint8 i = 0; i < _to.length; i++) {\r\n\t\t    if (blacklist[_to[i]] == true) {\r\n\t\t        emit SayTransfers(_ticket[i],_to[i],0);\r\n\t\t    } else if (ERC20Token.balanceOf(this) < tokens[i]) { \r\n\t\t        emit SayTransfers(_ticket[i],_to[i],1);\r\n\t\t    } else {\r\n            ERC20Token.transfer(_to[i],tokens[i]);\r\n            emit SayTransfers(_ticket[i],_to[i],tokens[i]);\r\n\t\t    }\r\n\t\t}\r\n\t\tERC20Token = token(msg.sender);\r\n\t\treturn true;\r\n\t}\r\n\r\n    event Issue(uint amount);\r\n    event Redeem(uint amount);\r\n    event SayNewFee(uint oldFee, uint newFee);\r\n    event Params(uint feeBasisPoints, uint maxFee);\r\n    event RedeemBLT(address LockUser, uint dirtyFunds);\r\n    event SayTransferToken(string _comment, address _from, address _to, uint tokens, uint fee);\r\n    event RollBackTransferToken(address _comment, address _from, address _to, uint tokens, uint fee);\r\n    event SayTransferFee(address _from, address _to, uint tokens);\r\n    event IssueUser(string _comment, address _to, uint tokens);\r\n    event WishUser(string _comment, address _to, uint tokens);\r\n    event SayTransfer(string _comment, address _to,uint tokens);\r\n    event SayTransfers(uint _comment, address _to, uint tokens);\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_ticket\",\"type\":\"uint256[]\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"payforUsers\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"managerlist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withDrawal\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withDrawalET\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"LockUser\",\"type\":\"address\"}],\"name\":\"redeemBLT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"unlockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"lockUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"_comment\",\"type\":\"string\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"payforUser\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"SayNewFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"LockUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"dirtyFunds\",\"type\":\"uint256\"}],\"name\":\"RedeemBLT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SayTransferToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RollBackTransferToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"SayTransferFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"IssueUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"WishUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"SayTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"SayTransfers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"LockedUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"UnlockedkUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"AddManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"whois\",\"type\":\"address\"}],\"name\":\"RemoveManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"HusToken","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://bb093e46f6585c5f8239d2e854dab2727352b0bc5abd07950fa30a9ebfedeb6f"}]}