{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.10;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\nabstract contract YToken {\r\n    function getPricePerFullShare() external view virtual returns (uint256);\r\n}\r\n\r\ncontract ZapDelegator {\r\n    address[] public _coins;\r\n    address[] public _underlying_coins;\r\n    address public curve;\r\n    address public token;\r\n    \r\n    constructor(address[4] memory _coinsIn, address[4] memory _underlying_coinsIn, address _curve, address _pool_token) public {\r\n        for (uint i = 0; i < 4; i++) {\r\n            require(_underlying_coinsIn[i] != address(0));\r\n            require(_coinsIn[i] != address(0));\r\n            _coins.push(_coinsIn[i]);\r\n            _underlying_coins.push(_underlying_coinsIn[i]);\r\n        }\r\n        curve = _curve;\r\n        token = _pool_token;\r\n    }\r\n    \r\n    function coins(int128 i) public view returns (address) {\r\n        return _coins[uint256(i)];\r\n    }\r\n    \r\n    function underlying_coins(int128 i) public view returns (address) {\r\n        return _underlying_coins[uint256(i)];\r\n    }\r\n\r\n    fallback() external payable {\r\n        address _target = 0xFCBa3E75865d2d561BE8D220616520c171F12851;\r\n\r\n        assembly {\r\n            let _calldataMemOffset := mload(0x40)\r\n            let _callDataSZ := calldatasize()\r\n            let _size := and(add(_callDataSZ, 0x1f), not(0x1f))\r\n            mstore(0x40, add(_calldataMemOffset, _size))\r\n            calldatacopy(_calldataMemOffset, 0x0, _callDataSZ)\r\n            let _retval := delegatecall(gas(), _target, _calldataMemOffset, _callDataSZ, 0, 0)\r\n            switch _retval\r\n            case 0 {\r\n                revert(0,0)\r\n            } default {\r\n                let _returndataMemoryOff := mload(0x40)\r\n                mstore(0x40, add(_returndataMemoryOff, returndatasize()))\r\n                returndatacopy(_returndataMemoryOff, 0x0, returndatasize())\r\n                return(_returndataMemoryOff, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"_coinsIn\",\"type\":\"address[4]\"},{\"internalType\":\"address[4]\",\"name\":\"_underlying_coinsIn\",\"type\":\"address[4]\"},{\"internalType\":\"address\",\"name\":\"_curve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_underlying_coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"underlying_coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ZapDelegator","CompilerVersion":"v0.6.10+commit.00c0fcaf","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000085d4780b73119b644ae5ecd22b3760000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000085d4780b73119b644ae5ecd22b376000000000000000000000000329239599afb305da0a2ec69c58f8a6697f9f88d00000000000000000000000077c6e4a580c0dce4e5c7a17d0bc077188a83a059","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b535d9f3d61fb50f2219e3b740794baed27044fddac718fe1c56eb5c6436e9b7"}]}