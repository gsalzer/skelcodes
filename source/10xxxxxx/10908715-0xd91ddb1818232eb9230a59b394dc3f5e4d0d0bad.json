{"status":"1","message":"OK","result":[{"SourceCode":"// Root file: contracts/TokenQuery.sol\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity >= 0.5.1;\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract TokenQuery {\r\n    \r\n    struct Token {\r\n        string name;\r\n        string symbol;\r\n        uint8 decimals;\r\n        uint balanceOf;\r\n    }\r\n    \r\n    function queryInfo(address user, address[] memory tokens) public view returns(Token[] memory info_list){\r\n        info_list = new Token[](tokens.length);\r\n        for(uint i = 0;i < tokens.length;i++) {\r\n            info_list[i] = Token(IERC20(tokens[i]).name(), IERC20(tokens[i]).symbol(), IERC20(tokens[i]).decimals()\r\n            , IERC20(tokens[i]).balanceOf(user));\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"queryInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"balanceOf\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenQuery.Token[]\",\"name\":\"info_list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TokenQuery","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f9eaf9495e2b9656fe289ee630de8124fdcf612e21a5059ff7bfc855435584b0"}]}