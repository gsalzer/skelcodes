{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.8;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface ICurve {\r\n    function exchange(\r\n        int128 i,\r\n        int128 j,\r\n        uint256 dx,\r\n        uint256 min_dy\r\n    )\r\n        external;\r\n\r\n    function exchange_underlying(\r\n        int128 i,\r\n        int128 j,\r\n        uint256 dx,\r\n        uint256 min_dy\r\n    )\r\n        external;\r\n}\r\n\r\ncontract CurveWrapper {\r\n    ICurve public curve;\r\n    IERC20 public DAI;\r\n    IERC20 public sUSD;\r\n\r\n    event ExchangeDaiTosUSD(uint256 from, uint256 to);\r\n\r\n    constructor(ICurve _curve, IERC20 _DAI, IERC20 _sUSD) public {\r\n        curve = _curve;\r\n        DAI = _DAI;\r\n        sUSD = _sUSD;\r\n\r\n        DAI.approve(msg.sender, 10000000 * 1e18);\r\n        sUSD.approve(msg.sender, 10000000 * 1e18);\r\n    }\r\n\r\n    function exchangeDaiTosUSD(uint256 amount) external {\r\n        require(DAI.allowance(msg.sender, address(this)) >= amount, 'Not Allowed');\r\n        uint256 balance = DAI.balanceOf(msg.sender);\r\n        require(balance >= amount, 'Insufficient Dai');\r\n        require(DAI.transferFrom(msg.sender, address(this), amount), 'Failed Deposit Dai');\r\n        DAI.approve(address(curve), amount);\r\n        uint256 sUSDBalance = sUSD.balanceOf(address(this));\r\n        curve.exchange(0, 3, amount, 0);\r\n        uint256 result = sUSD.balanceOf(address(this)) - sUSDBalance;\r\n        require(result <= sUSD.balanceOf(address(this)) && result > 0, 'Invalid Status');\r\n        sUSD.transfer(msg.sender, result);\r\n\r\n        emit ExchangeDaiTosUSD(amount, result);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"_curve\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_DAI\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_sUSD\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"ExchangeDaiTosUSD\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchangeDaiTosUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sUSD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CurveWrapper","CompilerVersion":"v0.6.10+commit.00c0fcaf","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a5407eae9ba41422680e2e00537571bcc53efbfd0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f51","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ca7c578d87c45e6201b1ab2cae03465dec78e83a9b7c91b2260de5aa7fe5495a"}]}