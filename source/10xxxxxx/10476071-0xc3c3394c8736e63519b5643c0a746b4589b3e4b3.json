{"status":"1","message":"OK","result":[{"SourceCode":"/*! SPDX-License-Identifier: MIT License */\r\n\r\npragma solidity 0.6.8;\r\n\r\ninterface IEtherChain {\r\n    function drawPool() external;\r\n    function pool_last_draw() view external returns(uint40);\r\n}\r\n\r\ncontract Ownable {\r\n    address payable private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() internal {\r\n        _owner = msg.sender;\r\n\r\n        emit OwnershipTransferred(address(0), msg.sender);\r\n    }\r\n\r\n    function owner() public view returns(address payable) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable _new_owner) public onlyOwner {\r\n        require(_new_owner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, _new_owner);\r\n        _owner = _new_owner;\r\n    }\r\n}\r\n\r\ncontract ReOnwer is Ownable {\r\n    IEtherChain public etherChain;\r\n\r\n    constructor() public {\r\n        etherChain = IEtherChain(0xFa85069E3D1Ca1B09945CF11d2365386b1E4430A);\r\n    }\r\n\r\n    receive() payable external {}\r\n\r\n    function drawPool() external onlyOwner {\r\n        require(etherChain.pool_last_draw() + 1 days < block.timestamp); \r\n\r\n        etherChain.drawPool();\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        owner().transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"drawPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherChain\",\"outputs\":[{\"internalType\":\"contract IEtherChain\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_new_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ReOnwer","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://629c17fe3918fd199d8a7d3f0f295bbc8d17853973050d34a9b2c291688567a8"}]}