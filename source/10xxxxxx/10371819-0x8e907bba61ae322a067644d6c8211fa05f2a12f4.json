{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\nlibrary SafeMath\r\n{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    \t{\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent ChangeOwner(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n  \t\r\n  \tconstructor() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n  \t\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n  \t{\r\n    \trequire(_to != owner);\r\n    \trequire(_to != address(0x0));\r\n\r\n        address from = owner;\r\n      \towner = _to;\r\n  \t    \r\n      \temit ChangeOwner(from, _to);\r\n  \t}\r\n}\r\n\r\ncontract ERC20Interface\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    function totalSupply() view public returns (uint _supply);\r\n    function balanceOf( address _who ) public view returns (uint _value);\r\n    function transfer( address _to, uint _value) public returns (bool _success);\r\n    function approve( address _spender, uint _value ) public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\r\n}\r\n\r\ncontract LNXProtocolToken is ERC20Interface, OwnerHelper\r\n{\r\n    using SafeMath for uint;\r\n    \r\n    string public name;\r\n    uint public decimals;\r\n    string public symbol;\r\n    \r\n    uint constant private E18 = 1000000000000000000;\r\n    uint constant private month = 2592000;\r\n\t\r\n\t//2019 March 12 Tuesday AM 12:00:00\r\n    uint constant private originDeployDate = 1552348800;\r\n\t\r\n\t\r\n    // Total                                        2,473,750,000\r\n    uint constant public maxTotalSupply =           2473750000 * E18;\r\n    \r\n    // Team                                          247,375,000 (10%)\r\n    uint constant public maxTeamSupply =             247375000 * E18;\r\n    \r\n    // R&D                                           247,375,000 (10%)\r\n    uint constant public maxRnDSupply =              247375000 * E18;\r\n        \r\n    // EcoSystem                                     371,062,500 (15%)\r\n    uint constant public maxEcoSupply =              371062500 * E18;\r\n        \r\n    // Marketing                                     197,900,000 (8%)\r\n    uint constant public maxMktSupply =              197900000 * E18;\r\n        \r\n    // Reserve                                       296,850,000 (12%)\r\n    uint constant public maxReserveSupply =          296850000 * E18;\r\n        \r\n    // Advisor                                       123,687,500 (5%)\r\n    uint constant public maxAdvisorSupply =          123687500 * E18;\r\n    \r\n    // Sale Supply                                   989,500,000 (40%)\r\n    uint constant public maxSaleSupply =             989500000 * E18;\r\n    \r\n    uint constant public publicSaleSupply =          100000000 * E18;\r\n    uint constant public privateSaleSupply =         889500000 * E18;\r\n    \r\n    // Lock\r\n    uint constant public rndVestingSupply           = 9895000 * E18;\r\n    uint constant public rndVestingTime = 25;\r\n    \r\n    uint constant public teamVestingSupply          = 247375000 * E18;\r\n    uint constant public teamVestingLockDate        = 24 * month;\r\n\r\n    uint constant public advisorVestingSupply          = 30921875 * E18;\r\n    uint constant public advisorVestingLockDate        = 3 * month;\r\n    uint constant public advisorVestingTime = 4;\r\n    \r\n    uint public totalTokenSupply;\r\n    uint public tokenIssuedTeam;\r\n    uint public tokenIssuedRnD;\r\n    uint public tokenIssuedEco;\r\n    uint public tokenIssuedMkt;\r\n    uint public tokenIssuedRsv;\r\n    uint public tokenIssuedAdv;\r\n    uint public tokenIssuedSale;\r\n    \r\n    uint public burnTokenSupply;\r\n    \r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n    \r\n    uint public teamVestingTime;\r\n    \r\n    mapping (uint => uint) public rndVestingTimer;\r\n    mapping (uint => uint) public rndVestingBalances;\r\n    \r\n    mapping (uint => uint) public advVestingTimer;\r\n    mapping (uint => uint) public advVestingBalances;\r\n    \r\n    bool public tokenLock = true;\r\n    bool public saleTime = true;\r\n    uint public endSaleTime = 0;\r\n    \r\n    event TeamIssue(address indexed _to, uint _tokens);\r\n    event RnDIssue(address indexed _to, uint _tokens);\r\n    event EcoIssue(address indexed _to, uint _tokens);\r\n    event MktIssue(address indexed _to, uint _tokens);\r\n    event RsvIssue(address indexed _to, uint _tokens);\r\n    event AdvIssue(address indexed _to, uint _tokens);\r\n    event SaleIssue(address indexed _to, uint _tokens);\r\n    \r\n    event Burn(address indexed _from, uint _tokens);\r\n    \r\n    event TokenUnlock(address indexed _to, uint _tokens);\r\n    event EndSale(uint _date);\r\n    \r\n    constructor() public\r\n    {\r\n        name        = \"LNX Protocol\";\r\n        decimals    = 18;\r\n        symbol      = \"LNX\";\r\n        \r\n        totalTokenSupply    = 0;\r\n        \r\n        tokenIssuedTeam   = 0;\r\n        tokenIssuedRnD      = 0;\r\n        tokenIssuedEco     = 0;\r\n        tokenIssuedMkt      = 0;\r\n        tokenIssuedRsv    = 0;\r\n        tokenIssuedAdv    = 0;\r\n        tokenIssuedSale     = 0;\r\n\r\n        burnTokenSupply     = 0;\r\n        \r\n        require(maxTeamSupply == teamVestingSupply);\r\n        require(maxRnDSupply == rndVestingSupply.mul(rndVestingTime));\r\n        require(maxAdvisorSupply == advisorVestingSupply.mul(advisorVestingTime));\r\n\r\n        require(maxSaleSupply == publicSaleSupply + privateSaleSupply);\r\n        require(maxTotalSupply == maxTeamSupply + maxRnDSupply + maxEcoSupply + maxMktSupply + maxReserveSupply + maxAdvisorSupply + maxSaleSupply);\r\n    }\r\n    \r\n    // ERC - 20 Interface -----\r\n\r\n    function totalSupply() view public returns (uint) \r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n    \r\n    function balanceOf(address _who) view public returns (uint) \r\n    {\r\n        return balances[_who];\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        approvals[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true; \r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) view public returns (uint) \r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n        \r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // Vesting Function -----\r\n    \r\n    function teamIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        \r\n        uint nowTime = now;\r\n        require(nowTime > teamVestingTime);\r\n        \r\n        uint tokens = teamVestingSupply;\r\n\r\n        require(maxTeamSupply >= tokenIssuedTeam.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedTeam = tokenIssuedTeam.add(tokens);\r\n        \r\n        emit TeamIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 0 ~ 24\r\n    function rndIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(_time < rndVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > rndVestingTimer[_time] );\r\n        \r\n        uint tokens = rndVestingSupply;\r\n\r\n        require(tokens == rndVestingBalances[_time]);\r\n        require(maxRnDSupply >= tokenIssuedRnD.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        rndVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedRnD = tokenIssuedRnD.add(tokens);\r\n        \r\n        emit RnDIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 0 ~ 3\r\n    function advisorIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require( _time < advisorVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > advVestingTimer[_time] );\r\n        \r\n        uint tokens = advisorVestingSupply;\r\n\r\n        require(tokens == advVestingBalances[_time]);\r\n        require(maxAdvisorSupply >= tokenIssuedAdv.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        advVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedAdv = tokenIssuedAdv.add(tokens);\r\n        \r\n        emit AdvIssue(_to, tokens);\r\n    }\r\n    \r\n    function ecoIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedEco == 0);\r\n        \r\n        uint tokens = maxEcoSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedEco = tokenIssuedEco.add(tokens);\r\n        \r\n        emit EcoIssue(_to, tokens);\r\n    }\r\n    \r\n    function mktIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedMkt == 0);\r\n        \r\n        uint tokens = maxMktSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedMkt = tokenIssuedMkt.add(tokens);\r\n        \r\n        emit EcoIssue(_to, tokens);\r\n    }\r\n    \r\n    function rsvIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedRsv == 0);\r\n        \r\n        uint tokens = maxReserveSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedRsv = tokenIssuedRsv.add(tokens);\r\n        \r\n        emit EcoIssue(_to, tokens);\r\n    }\r\n    \r\n    function privateSaleIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedSale == 0);\r\n        \r\n        uint tokens = privateSaleSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedSale = tokenIssuedSale.add(tokens);\r\n        \r\n        emit SaleIssue(_to, tokens);\r\n    }\r\n    \r\n    function publicSaleIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedSale == privateSaleSupply);\r\n        \r\n        uint tokens = publicSaleSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedSale = tokenIssuedSale.add(tokens);\r\n        \r\n        emit SaleIssue(_to, tokens);\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // Lock Function -----\r\n    \r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == owner)\r\n        {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    function setTokenUnlock() onlyOwner public\r\n    {\r\n        require(tokenLock == true);\r\n        require(saleTime == false);\r\n        \r\n        tokenLock = false;\r\n    }\r\n    \r\n    function setTokenLock() onlyOwner public\r\n    {\r\n        require(tokenLock == false);\r\n        \r\n        tokenLock = true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // ETC / Burn Function -----\r\n    \r\n    function endSale() onlyOwner public\r\n    {\r\n        require(saleTime == true);\r\n        require(maxSaleSupply == tokenIssuedSale);\r\n        \r\n        saleTime = false;\r\n        \r\n        endSaleTime = originDeployDate;\r\n        \r\n        teamVestingTime = endSaleTime + teamVestingLockDate;\r\n        \r\n        for(uint i = 0; i < rndVestingTime; i++)\r\n        {\r\n            rndVestingTimer[i] =  endSaleTime + (month * i);\r\n            rndVestingBalances[i] = rndVestingSupply;\r\n        }\r\n        \r\n        for(uint i = 0; i < advisorVestingTime; i++)\r\n        {\r\n            advVestingTimer[i] = endSaleTime + (advisorVestingLockDate * i);\r\n            advVestingBalances[i] = advisorVestingSupply;\r\n        }\r\n        \r\n        emit EndSale(endSaleTime);\r\n    }\r\n    \r\n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner public\r\n    {\r\n\r\n        if(_contract == address(0x0))\r\n        {\r\n            uint eth = _value.mul(10 ** _decimals);\r\n            msg.sender.transfer(eth);\r\n        }\r\n        else\r\n        {\r\n            uint tokens = _value.mul(10 ** _decimals);\r\n            ERC20Interface(_contract).transfer(msg.sender, tokens);\r\n            \r\n            emit Transfer(address(0x0), msg.sender, tokens);\r\n        }\r\n    }\r\n    \r\n    function burnToken(uint _value) onlyOwner public\r\n    {\r\n        uint tokens = _value * E18;\r\n        \r\n        require(balances[msg.sender] >= tokens);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        \r\n        burnTokenSupply = burnTokenSupply.add(tokens);\r\n        totalTokenSupply = totalTokenSupply.sub(tokens);\r\n        \r\n        emit Burn(msg.sender, tokens);\r\n    }\r\n    \r\n    function close() onlyOwner public\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    // -----\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ecoIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mktIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedRnD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rndVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"rsvIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedEco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"publicSaleIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTeamSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedRsv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRnDSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"teamIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"rndIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rndVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMktSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAdvisorSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"privateSaleIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rndVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicSaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxReserveSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rndVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"advisorIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedAdv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEcoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TeamIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"RnDIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"EcoIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MktIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"RsvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"AdvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"SaleIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"EndSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LNXProtocolToken","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7bb8c106d851b36cadf7ea41fdf37c906bc4c9482713a11be3fed3a718fb6363"}]}