{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-08-30\r\n*/\r\n\r\npragma solidity ^0.6.7;\r\n\r\n\r\ncontract Owned {\r\n    address payable _owner;\r\n    address payable _newOwner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender==_owner);\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address payable newOwner) public onlyOwner {\r\n        require(newOwner!=address(0));\r\n        _newOwner = newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender==_newOwner);\r\n\r\n        if (msg.sender==_newOwner) {\r\n            _owner = _newOwner;\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract ERC20 {\r\n    function totalSupply() view public virtual returns (uint);\r\n    function balanceOf(address owner) view public virtual returns (uint256 balance);\r\n    function transfer(address to, uint256 value) public virtual returns (bool success);\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool success);\r\n    function approve(address spender, uint256 value) public virtual returns (bool success);\r\n    function allowance(address owner, address spender) view public virtual returns (uint256 remaining);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Token is Owned, ERC20 {\r\n    string public _symbol;\r\n    string public _name;\r\n    uint8 public _decimals;\r\n    uint public _totalSupply;\r\n\r\n    mapping (address=>uint256) _balances;\r\n    mapping (address=>mapping (address=>uint256)) _allowed;\r\n    mapping (address=>bool) _minters;\r\n\r\n    function balanceOf(address owner) view public virtual override returns (uint256 balance) {return _balances[owner];}\r\n\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool success) {\r\n        require (_balances[msg.sender]>=amount && amount>0);\r\n        _balances[msg.sender]-=amount;\r\n        _balances[to]+=amount;\r\n        emit Transfer(msg.sender,to,amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from,address to,uint256 amount) public virtual override returns (bool success) {\r\n        require (_balances[from]>=amount && _allowed[from][msg.sender]>=amount && amount>0);\r\n        _balances[from]-=amount;\r\n        _allowed[from][msg.sender]-=amount;\r\n        _balances[to]+=amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool success) {\r\n        _allowed[msg.sender][spender]=amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) view public virtual override returns (uint256 remaining) {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function totalSupply() view public virtual override returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    modifier onlyMinter() {\r\n        require(_minters[msg.sender]==true);\r\n        _;\r\n    } \r\n    \r\n    function addMinter(address minter) public onlyOwner {\r\n        require(minter != address(0), \"ERC20: zero address\");\r\n        \r\n        _minters[minter] = true;\r\n    }\r\n    \r\n    function removeMinter(address minter) public onlyOwner {\r\n        require(minter != address(0), \"ERC20: zero address\");\r\n        \r\n        _minters[minter] = false;\r\n    }\r\n\r\n    function mint(address account, uint amount) public onlyMinter {\r\n        require(account != address(0), \"ERC20: mint from the zero address\");\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function burn(address account, uint amount) public onlyMinter {\r\n        require(account != address(0), \"ERC20: burn to the zero address\");\r\n        require(_balances[account] >= amount, \"ERC20: burn amount exceeds balance\");\r\n\r\n        _balances[account] -= amount;\r\n        _totalSupply -= amount;\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n}\r\n\r\ncontract YFFAToken is Token{\r\n    constructor() public{\r\n        _symbol = \"YFFA\";\r\n        _name = \"Yearn Alpha Finance\";\r\n        _decimals = 18;\r\n        _owner = msg.sender;\r\n        _balances[_owner] = _totalSupply;\r\n        addMinter(_owner);\r\n    }\r\n\r\n    receive () payable external {\r\n        require(msg.value>0);\r\n        _owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"YFFAToken","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e196e279276c5d65912d91041204d1a57f00306dd71e291ad638269e78174d6f"}]}