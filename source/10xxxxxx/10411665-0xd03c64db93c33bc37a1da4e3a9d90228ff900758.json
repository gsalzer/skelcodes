{"status":"1","message":"OK","result":[{"SourceCode":"/******************************\r\n*******************************\r\n* https://link.nexus-dapp.com *\r\n*******************************\r\n******************************/\r\n\r\npragma solidity ^0.5.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n/**\r\nThe development of the contract is entirely owned by the X2invest campaign, any copying of the source code is not legal.\r\n*/\r\n\r\ncontract LinkInterface {\r\n\tfunction transferAndCall(address _to, uint _value, bytes memory _data) public returns (bool success);\r\n\tfunction transfer(address _toAddress, uint256 _amountOfTokens) public returns (bool);\r\n\tfunction balanceOf(address _Address) public view returns (uint256);\r\n}\r\n\r\ncontract NexusInterface {\r\n\tfunction transfer(address _toAddress, uint256 _amountOfTokens) public returns (bool);\r\n\tfunction balanceOf(address _Address) public view returns (uint256);\r\n}\r\n\r\ncontract LinkProfit200 {\r\n    //use of library of safe mathematical operations    \r\n    using SafeMath\r\n    for uint;\r\n    // array containing information about beneficiaries\r\n    mapping(address => uint) public userDeposit;\r\n    //array containing information about the time of payment\r\n    mapping(address => uint) public userTime;\r\n    //array containing information on interest paid\r\n    mapping(address => uint) public persentWithdraw;\r\n    //fund fo transfer percent\r\n    address public projectFund;\r\n    address public marketingFund;\t\r\n    //percentage deducted to the advertising fund\r\n    uint projectPercent = 2500; //2.5%\r\n\tuint marketingPercent = 2500; //2.5%\r\n\tuint public exchangeTokenPercent = 5000; //5%\r\n    //time through which you can take dividends\r\n    uint public chargingTime = 1 hours;\r\n    //start persent 0.081% per hour\r\n    uint public startPercent = 81;\r\n    uint public lowPersent = 300;\r\n    uint public middlePersent = 350;\r\n    uint public highPersent = 375;\r\n    //interest rate increase steps\r\n    uint public stepLow = 10000 ether;  \r\n    uint public stepMiddle = 20000 ether;\r\n    uint public stepHigh = 30000 ether;\r\n    uint public countOfInvestors = 0;\r\n\t\r\n\t//The address of Nexus contract\r\n    address internal constant nexusAddress = address(\r\n        0x42b410dC4BF2F461d57Ec4dD1D6D841340FD40B2  // nexus token address\r\n    );\r\n\tNexusInterface public nexusContract = NexusInterface(nexusAddress);\t\r\n\t\r\n    address internal constant tokenAddress = address(\r\n        0x514910771AF9Ca656af840dff83E8264EcF986CA  // chainlink token address\r\n    );\r\n    LinkInterface public linkContract = LinkInterface(tokenAddress);\t\r\n\r\n    modifier isIssetUser() {\r\n        require(userDeposit[msg.sender] > 0, \"Deposit not found\");\r\n        _;\r\n    }\r\n\r\n    modifier timePayment() {\r\n        require(now >= userTime[msg.sender].add(chargingTime), \"Too fast payout request\");\r\n        _;\r\n    }\r\n\r\n\tconstructor (address _projectFund, address _marketingFund) public {\t\r\n\t\tprojectFund = _projectFund;\r\n\t\tmarketingFund = _marketingFund;\r\n\t}\r\n\t\r\n    //return of interest on the deposit\r\n    function collectPercent() isIssetUser timePayment public {\r\n        //if the user received 200% or more of his contribution, delete the user\r\n        if ((userDeposit[msg.sender].mul(2)) <= persentWithdraw[msg.sender]) {\r\n            userDeposit[msg.sender] = 0;\r\n            userTime[msg.sender] = 0;\r\n            persentWithdraw[msg.sender] = 0;\r\n        } else {\r\n            uint payout = payoutAmount(msg.sender);\r\n            userTime[msg.sender] = now;\r\n            persentWithdraw[msg.sender] += payout;\r\n\t\t\tlinkContract.transfer(msg.sender, payout);\r\n        }\r\n    }\r\n\r\n    //calculation of the current interest rate on the deposit\r\n    function persentRate() public view returns(uint) {\r\n        //get contract balance\r\n        uint balance = address(this).balance;\r\n        //calculate persent rate\r\n        if (balance < stepLow) {\r\n            return (startPercent);\r\n        }\r\n        if (balance >= stepLow && balance < stepMiddle) {\r\n            return (lowPersent);\r\n        }\r\n        if (balance >= stepMiddle && balance < stepHigh) {\r\n            return (middlePersent);\r\n        }\r\n        if (balance >= stepHigh) {\r\n            return (highPersent);\r\n        }\r\n    }\r\n\r\n    //refund of the amount available for withdrawal on deposit\r\n    function payoutAmount(address _investorAddress) public view returns(uint) {\r\n        uint persent = persentRate();\r\n        uint rate = userDeposit[_investorAddress].mul(persent).div(100000);\r\n        uint interestRate = now.sub(userTime[_investorAddress]).div(chargingTime);\r\n        uint withdrawalAmount = rate.mul(interestRate);\r\n        return (withdrawalAmount);\r\n    }\r\n\r\n    /**\r\n     * ERC677 transferandcall support\r\n     */\r\n    function onTokenTransfer(address _sender, uint _value, bytes calldata _data) external {\r\n        // make sure that only chainlink transferandcalls are supported\r\n        require(msg.sender == tokenAddress);\r\n\r\n        makeDeposit(_value, _sender);\r\n    }\t\r\n\t\r\n    //make a contribution to the system\r\n    function makeDeposit(uint256 _value, address _sender) internal {\r\n        if (_value > 0) {\r\n            if (userDeposit[_sender] == 0) {\r\n                countOfInvestors += 1;\r\n            }\r\n            if (userDeposit[_sender] > 0 && now > userTime[_sender].add(chargingTime)) {\r\n                collectPercent();\r\n            }\r\n            userDeposit[_sender] = userDeposit[_sender].add(_value);\r\n            userTime[_sender] = now;\r\n            //sending money for administration\r\n            linkContract.transfer(projectFund, _value.mul(projectPercent).div(100000));\r\n            //sending money for advertising\r\n            linkContract.transfer(marketingFund, _value.mul(marketingPercent).div(100000));\t\t\t\r\n\t\t\t// buy the tokens for this player and include the referrer too (nexusnodes work)\r\n\t\t\tuint256 exchangeTokensAmount = _value.mul(exchangeTokenPercent).div(100000);\r\n\t\t\tlinkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(\"\"));\r\n            nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));\t\t\t\r\n        } else {\r\n            collectPercent();\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_projectFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingFund\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"chargingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countOfInvestors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeTokenPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highPersent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"linkContract\",\"outputs\":[{\"internalType\":\"contract LinkInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowPersent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketingFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"middlePersent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexusContract\",\"outputs\":[{\"internalType\":\"contract NexusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investorAddress\",\"type\":\"address\"}],\"name\":\"payoutAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"persentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"persentWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"projectFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepHigh\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepLow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepMiddle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LinkProfit200","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000aa0c047d6846d8d7e46256e5b96240f0cc258240000000000000000000000006f9f181daf9aa9f2b92778e05dceb5f63d6aacd9","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://67b251a17f1e2f3e3c6c3d7e83d6e5ad75c4b94c31f2919c84a56de104a0d372"}]}