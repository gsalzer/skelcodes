{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.0;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n//  voting contract \r\ninterface Nest_3_VoteFactory {\r\n    //  Check address \r\n\tfunction checkAddress(string calldata name) external view returns (address contractAddress);\r\n\t//  check whether the administrator \r\n\tfunction checkOwners(address man) external view returns (bool);\r\n}\r\n\r\n/**\r\n * @title NToken contract \r\n * @dev Include standard erc20 method, mining method, and mining data \r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Nest_NToken is IERC20 {\r\n    using SafeMath for uint256;\r\n    \r\n    mapping (address => uint256) private _balances;                                 //  Balance ledger \r\n    mapping (address => mapping (address => uint256)) private _allowed;             //  Approval ledger \r\n    uint256 private _totalSupply = 0 ether;                                         //  Total supply \r\n    string public name;                                                             //  Token name \r\n    string public symbol;                                                           //  Token symbol \r\n    uint8 public decimals = 18;                                                     //  Precision\r\n    uint256 public _createBlock;                                                    //  Create block number\r\n    uint256 public _recentlyUsedBlock;                                              //  Recently used block number\r\n    Nest_3_VoteFactory _voteFactory;                                                //  Voting factory contract\r\n    address _bidder;                                                                //  Owner\r\n    \r\n    /**\r\n    * @dev Initialization method\r\n    * @param _name Token name\r\n    * @param _symbol Token symbol\r\n    * @param voteFactory Voting factory contract address\r\n    * @param bidder Successful bidder address\r\n    */\r\n    constructor (string memory _name, string memory _symbol, address voteFactory, address bidder) public {\r\n    \tname = _name;                                                               \r\n    \tsymbol = _symbol;\r\n    \t_createBlock = block.number;\r\n    \t_recentlyUsedBlock = block.number;\r\n    \t_voteFactory = Nest_3_VoteFactory(address(voteFactory));\r\n    \t_bidder = bidder;\r\n    }\r\n    \r\n    /**\r\n    * @dev Reset voting contract method\r\n    * @param voteFactory Voting contract address\r\n    */\r\n    function changeMapping (address voteFactory) public onlyOwner {\r\n    \t_voteFactory = Nest_3_VoteFactory(address(voteFactory));\r\n    }\r\n    \r\n    /**\r\n    * @dev Additional issuance\r\n    * @param value Additional issuance amount\r\n    */\r\n    function increaseTotal(uint256 value) public {\r\n        address offerMain = address(_voteFactory.checkAddress(\"nest.nToken.offerMain\"));\r\n        require(address(msg.sender) == offerMain, \"No authority\");\r\n        _balances[offerMain] = _balances[offerMain].add(value);\r\n        _totalSupply = _totalSupply.add(value);\r\n        _recentlyUsedBlock = block.number;\r\n    }\r\n\r\n    /**\r\n    * @dev Check the total amount of tokens\r\n    * @return Total supply\r\n    */\r\n    function totalSupply() override public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n    * @dev Check address balance\r\n    * @param owner Address to be checked\r\n    * @return Return the balance of the corresponding address\r\n    */\r\n    function balanceOf(address owner) override public view returns (uint256) {\r\n        return _balances[owner];\r\n    }\r\n    \r\n    /**\r\n    * @dev Check block information\r\n    * @return createBlock Initial block number\r\n    * @return recentlyUsedBlock Recently mined and issued block\r\n    */\r\n    function checkBlockInfo() public view returns(uint256 createBlock, uint256 recentlyUsedBlock) {\r\n        return (_createBlock, _recentlyUsedBlock);\r\n    }\r\n\r\n    /**\r\n     * @dev Check owner's approved allowance to the spender\r\n     * @param owner Approving address\r\n     * @param spender Approved address\r\n     * @return Approved amount\r\n     */\r\n    function allowance(address owner, address spender) override public view returns (uint256) {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    /**\r\n    * @dev Transfer method\r\n    * @param to Transfer target\r\n    * @param value Transfer amount\r\n    * @return Whether the transfer is successful\r\n    */\r\n    function transfer(address to, uint256 value) override public returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Approval method\r\n     * @param spender Approval target\r\n     * @param value Approval amount\r\n     * @return Whether the approval is successful\r\n     */\r\n    function approve(address spender, uint256 value) override public returns (bool) {\r\n        require(spender != address(0));\r\n\r\n        _allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer tokens when approved\r\n     * @param from Transfer-out account address\r\n     * @param to Transfer-in account address\r\n     * @param value Transfer amount\r\n     * @return Whether approved transfer is successful\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) override public returns (bool) {\r\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\r\n        _transfer(from, to, value);\r\n        emit Approval(from, msg.sender, _allowed[from][msg.sender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the allowance\r\n     * @param spender Approval target\r\n     * @param addedValue Amount to increase\r\n     * @return whether increase is successful\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        require(spender != address(0));\r\n\r\n        _allowed[msg.sender][spender] = _allowed[msg.sender][spender].add(addedValue);\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the allowance\r\n     * @param spender Approval target\r\n     * @param subtractedValue Amount to decrease\r\n     * @return Whether decrease is successful\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        require(spender != address(0));\r\n\r\n        _allowed[msg.sender][spender] = _allowed[msg.sender][spender].sub(subtractedValue);\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Transfer method\r\n    * @param to Transfer target\r\n    * @param value Transfer amount\r\n    */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        _balances[from] = _balances[from].sub(value);\r\n        _balances[to] = _balances[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n    \r\n    /**\r\n    * @dev Check the creator\r\n    * @return Creator address\r\n    */\r\n    function checkBidder() public view returns(address) {\r\n        return _bidder;\r\n    }\r\n    \r\n    /**\r\n    * @dev Transfer creator\r\n    * @param bidder New creator address\r\n    */\r\n    function changeBidder(address bidder) public {\r\n        require(address(msg.sender) == _bidder);\r\n        _bidder = bidder; \r\n    }\r\n    \r\n    // Administrator only\r\n    modifier onlyOwner(){\r\n        require(_voteFactory.checkOwners(msg.sender));\r\n        _;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"voteFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_createBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_recentlyUsedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"changeBidder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voteFactory\",\"type\":\"address\"}],\"name\":\"changeMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBlockInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"createBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recentlyUsedBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Nest_NToken","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000006cd5698e8854fb6879d6b1c694223b389b465dea0000000000000000000000003ceefbbb0e6c60cf64db9d17b94917d6d78cec05000000000000000000000000000000000000000000000000000000000000000a4e546f6b656e303030310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054e30303031000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://732ed18cfb08aa8ddce47e3df3862d172ea4dcb0bc2be56c6b5c9a2c5af587cb"}]}