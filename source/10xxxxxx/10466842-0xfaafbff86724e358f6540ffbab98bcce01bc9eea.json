{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.1;\r\n\r\ninterface Staking {\r\n  function AddressBonus ( address ) external view returns ( uint256 );\r\n  function AddressBonusGet ( address _address ) external view returns ( uint256 );\r\n  function AmountMNESent ( address _address, bool _excludeCurrent, bool _currentOnly ) external view returns ( uint256 );\r\n  function AmountToPayBonus ( address _address ) external view returns ( uint256 );\r\n  function AmountToPayStaking ( address _address, bool _checkID, uint256 i, bool _excludeCurrent, bool _currentOnly ) external view returns ( uint256 );\r\n  function Bonus ( address, uint256 ) external view returns ( uint256 );\r\n  function BonusAmount ( address, uint256 ) external view returns ( uint256 );\r\n  function BonusAmountGet ( address _address ) external view returns ( uint256[] memory);\r\n  function BonusAmountGetAt ( address _address, uint256 i ) external view returns ( uint256 );\r\n  function BonusAmountLength ( address _address ) external view returns ( uint256 );\r\n  function BonusDay ( address, uint256 ) external view returns ( uint256 );\r\n  function BonusDayGet ( address _address ) external view returns ( uint256[] memory);\r\n  function BonusDayGetAt ( address _address, uint256 i ) external view returns ( uint256 );\r\n  function BonusDayLength ( address _address ) external view returns ( uint256 );\r\n  function BonusFrom ( address, uint256 ) external view returns ( address );\r\n  function BonusFromGet ( address _address ) external view returns ( address[] memory);\r\n  function BonusFromGetAt ( address _address, uint256 i ) external view returns ( address );\r\n  function BonusFromLength ( address _address ) external view returns ( uint256 );\r\n  function BonusGet ( address _address ) external view returns ( uint256[] memory);\r\n  function BonusGetAt ( address _address, uint256 i ) external view returns ( uint256 );\r\n  function BonusLength ( address _address ) external view returns ( uint256 );\r\n  function BonusPaid ( address ) external view returns ( bool );\r\n  function BonusPaidGet ( address _address ) external view returns ( bool );\r\n  function DateBonusPayoutPossible ( address _address ) external view returns ( uint256 );\r\n  function DateStakingPayoutPossible ( address _address ) external view returns ( uint256 );\r\n  function FillMaxInterestRate1 (  ) external;\r\n  function FillMaxInterestRate2 (  ) external;\r\n  function GetCurrentDay (  ) external view returns ( uint256 );\r\n  function PayoutAllStaking ( address _address ) external;\r\n  function PayoutBonus ( address _address ) external;\r\n  function PayoutStaking ( uint256 i, address _address ) external;\r\n  function StakingPaid ( address, uint256 ) external view returns ( bool );\r\n  function StakingPaidGet ( address _address ) external view returns ( bool[] memory);\r\n  function StakingPaidGetAt ( address _address, uint256 i ) external view returns ( bool );\r\n  function StakingPaidLength ( address _address ) external view returns ( uint256 );\r\n  function TransferAllFundsOut ( address _address, uint256 _amount ) external;\r\n  function blockPayouts (  ) external view returns ( bool );\r\n  function blockStaking (  ) external view returns ( bool );\r\n  function bonusAddress ( uint256 ) external view returns ( address );\r\n  function bonusAddressLength (  ) external view returns ( uint256 );\r\n  function contingency (  ) external view returns ( uint256 );\r\n  function daysParticipated ( address, uint256 ) external view returns ( uint256 );\r\n  function daysParticipatedGet ( address _address ) external view returns ( uint256[] memory);\r\n  function daysParticipatedGetAt ( address _address, uint256 i ) external view returns ( uint256 );\r\n  function daysParticipatedLength ( address _address ) external view returns ( uint256 );\r\n  function external1 (  ) external view returns ( address );\r\n  function gn (  ) external view returns ( address );\r\n  function maxInterestRate ( uint256 ) external view returns ( uint256 );\r\n  function maxInterestRateLength (  ) external view returns ( uint256 );\r\n  function mneContract (  ) external view returns ( address );\r\n  function mnePerDay ( uint256 ) external view returns ( uint256 );\r\n  function mnePerDayLength (  ) external view returns ( uint256 );\r\n  function mneSentPerDay ( address, uint256 ) external view returns ( uint256 );\r\n  function mneSentPerDayGet ( address _address ) external view returns ( uint256[] memory);\r\n  function mneSentPerDayGetAt ( address _address, uint256 i ) external view returns ( uint256 );\r\n  function mneSentPerDayLength ( address _address ) external view returns ( uint256 );\r\n  function newBonusCoins (  ) external view returns ( uint256 );\r\n  function newStakingCoins (  ) external view returns ( uint256 );\r\n  function overallBonus (  ) external view returns ( uint256 );\r\n  function overallMNEStaking (  ) external view returns ( uint256 );\r\n  function paidStakingCoins (  ) external view returns ( uint256 );\r\n  function participatedAddress ( uint256 ) external view returns ( address );\r\n  function participatedAddressLength (  ) external view returns ( uint256 );\r\n  function pc (  ) external view returns ( address );\r\n  function referralRate (  ) external view returns ( uint256 );\r\n  function referrerRateLevel2 (  ) external view returns ( uint256 );\r\n  function referrerRateLevel3 (  ) external view returns ( uint256 );\r\n  function referrerRateNormal (  ) external view returns ( uint256 );\r\n  function referrerRateShare (  ) external view returns ( uint256 );\r\n  function setUpdater (  ) external;\r\n  function startDate (  ) external view returns ( uint256 );\r\n  function startStaking ( address _sender, uint256 _amountToStake, address[] calldata _addressList, uint256[] calldata uintList ) external;\r\n  function updateExternal1 ( address _address ) external;\r\n  function updateGenesis ( address _address ) external;\r\n  function updateMneContract ( address _address ) external;\r\n  function updatePublicCalls ( address _address ) external;\r\n  function updateStartDate ( uint256 _startDate ) external;\r\n  function updateVars ( bool _blockPayouts, bool _blockStaking, uint256 _referralRate, uint256 _referrerRateNormal, uint256 _referrerRateLevel2, uint256 _referrerRateLevel3, uint256 _referrerRateShare, uint256 _contingency ) external;\r\n  function updaterAddress (  ) external view returns ( address );\r\n}\r\n\r\n\r\ncontract MinereumStakingHelperCurrent\r\n{\r\n\r\nStaking sk;\r\n\r\nconstructor() public\r\n{\r\n\tsk = Staking(0xCb2Aee9A6dAC92c1076f642FE4f2c9bcFFc81D9e);\r\n}\r\n\r\n\r\nfunction AmountMNESentCurrent(address _address) public view returns (uint256)\r\n{\r\n\tif (sk.mneSentPerDayLength(_address) == 0) return 0;\r\n\t\r\n\tuint currentDay = sk.GetCurrentDay();\r\n\t\r\n\tuint _currentDay = sk.daysParticipatedGetAt(_address, sk.daysParticipatedLength(_address) - 1);\r\n\t\r\n\tuint lasti = sk.daysParticipatedLength(_address) - 1;\r\n\t\r\n\tif (_currentDay == currentDay)\r\n\t{\t\t\r\n\t\treturn sk.mneSentPerDayGetAt(_address, lasti);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n\r\nfunction AmountToPayStakingCurrent(address _address) public view returns (uint256)\r\n{\r\n\tif (sk.daysParticipatedLength(_address) == 0) return 0;\r\n\t\r\n\tuint currentDay = sk.GetCurrentDay();\r\n\t\r\n\tuint _currentDay = sk.daysParticipatedGetAt(_address, sk.daysParticipatedLength(_address) - 1);\r\n\tuint lasti = sk.daysParticipatedLength(_address) - 1;\r\n\t\r\n\tif (_currentDay == currentDay)\r\n\t{\t\t\t\r\n\t\tuint interestRateToPay = sk.mneSentPerDayGetAt(_address, lasti) * sk.maxInterestRate(sk.daysParticipatedGetAt(_address, lasti)) * 1000000000000000 / sk.mnePerDay(sk.daysParticipatedGetAt(_address, lasti));\r\n\t\tuint coinsToMint = sk.mneSentPerDayGetAt(_address, lasti) * interestRateToPay / 1000000000000000 / 100;\r\n\t\tuint amountToPay = sk.mneSentPerDayGetAt(_address, lasti) + coinsToMint;\r\n\t\treturn amountToPay;\t\t\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn 0;\r\n\t}\t\t\r\n}\r\n\r\nfunction AmountToPayStakingOverall(address _address) public view returns (uint256)\r\n{\r\n\tuint currentDay = sk.GetCurrentDay();\r\n\tuint j = 0;\r\n\tuint finalAmount = 0;\r\n\twhile (j < sk.mneSentPerDayLength(_address))\r\n\t{\r\n\t\tif ((sk.daysParticipatedGetAt(_address, j) == currentDay)) break;\r\n\t\tif (!sk.StakingPaidGetAt(_address, j))\r\n\t\t{\r\n\t\t\tuint interestRateToPay = sk.mneSentPerDayGetAt(_address, j) * sk.maxInterestRate(sk.daysParticipatedGetAt(_address,j)) * 1000000000000000 / sk.mnePerDay(sk.daysParticipatedGetAt(_address, j));\r\n\t\t\tuint coinsToMint = sk.mneSentPerDayGetAt(_address, j) * interestRateToPay / 1000000000000000 / 100;\r\n\t\t\tuint amountToPay = sk.mneSentPerDayGetAt(_address, j) + coinsToMint;\r\n\t\t\tfinalAmount += amountToPay;\r\n\t\t}\r\n\t\tj++;\r\n\t}\r\n\treturn finalAmount;\r\n}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AmountMNESentCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AmountToPayStakingCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AmountToPayStakingOverall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MinereumStakingHelperCurrent","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1aa4348b8a72f6c9b68512f98a813f5cf0aa8577953dcc14cdf6768d903c989d"}]}