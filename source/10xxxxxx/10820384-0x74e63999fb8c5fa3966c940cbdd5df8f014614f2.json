{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract Token {\r\n    // An `address` is comparable to an email address - it's used to identify an account on Ethereum.\r\n    // Addresses can represent a smart contract or an external (user) accounts.\r\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#address\r\n    address public owner;\r\n\r\n    // A `mapping` is essentially a hash table data structure.\r\n    // This `mapping` assigns an unsigned integer (the token balance) to an address (the token holder).\r\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/types.html#mapping-types\r\n    mapping (address => uint) public balances;\r\n\r\n    // Events allow for logging of activity on the blockchain.\r\n    // Ethereum clients can listen for events in order to react to contract state changes.\r\n    // Learn more: https://solidity.readthedocs.io/en/v0.5.10/contracts.html#events\r\n    event Transfer(address from, address to, uint amount);\r\n\r\n    // Initializes the contract's data, setting the `owner`\r\n    // to the address of the contract creator.\r\n    constructor() public {\r\n        // All smart contracts rely on external transactions to trigger its functions.\r\n        // `msg` is a global variable that includes relevant data on the given transaction,\r\n        // such as the address of the sender and the ETH value included in the transaction.\r\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/units-and-global-variables.html#block-and-transaction-properties\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Creates an amount of new tokens and sends them to an address.\r\n    function mint(address receiver, uint amount) public {\r\n        // `require` is a control structure used to enforce certain conditions.\r\n        // If a `require` statement evaluates to `false`, an exception is triggered,\r\n        // which reverts all changes made to the state during the current call.\r\n        // Learn more: https://solidity.readthedocs.io/en/v0.5.10/control-structures.html#error-handling-assert-require-revert-and-exceptions\r\n\r\n        // Only the contract owner can call this function\r\n        require(msg.sender == owner, \"You are not the owner.\");\r\n\r\n        // Ensures a maximum amount of tokens\r\n        require(amount < 1e60, \"Maximum issuance succeeded\");\r\n\r\n        // Increases the balance of `receiver` by `amount`\r\n        balances[receiver] += amount;\r\n    }\r\n\r\n    // Sends an amount of existing tokens from any caller to an address.\r\n    function transfer(address receiver, uint amount) public {\r\n        // The sender must have enough tokens to send\r\n        require(amount <= balances[msg.sender], \"Insufficient balance.\");\r\n\r\n        // Adjusts token balances of the two addresses\r\n        balances[msg.sender] -= amount;\r\n        balances[receiver] += amount;\r\n\r\n        // Emits the event defined earlier\r\n        emit Transfer(msg.sender, receiver, amount);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Token","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://82ecfa598232225d9c632341d95037fda3f5aaf06f423aaabfa86b5861bf452e"}]}