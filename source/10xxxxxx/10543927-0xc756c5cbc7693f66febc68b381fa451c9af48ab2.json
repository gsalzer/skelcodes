{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n// author: Dylan Seago\r\n// dylan@bitaccess.co\r\n// Version: 0.4 (July 2017)\r\n\r\ncontract TokenWallet {\r\n\r\n  function transfer(address erc20contract, address to, uint value) public returns(uint) {\r\n    // erc20contract: the address of the ERC20 smart contract holding the tokens\r\n    // to: the address to transfer the tokens to\r\n    // value: the number of token base units to transfer\r\n    require(msg.sender == 0x09CB4d01B41Aea21D34B71bBa5c7b3eaAc2332E2);\r\n    ERC20Basic token = ERC20Basic(erc20contract);\r\n    token.transfer(to, value);\r\n  }\r\n\r\n  function() public { } // Reject all ether sent to the contract\r\n}\r\n\r\n\r\ncontract ERC20Basic { //contract definition of a ERC20 token with basic functionality.\r\n  uint public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint);\r\n  function transfer(address to, uint value) public;\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"erc20contract\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","ContractName":"TokenWallet","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://58688919f219304a2883ba99988f785a250569a06c4a9b672e20537bad85bb2c"}]}