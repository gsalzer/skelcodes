{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n *  @title PolicyRegistry\r\n *  @author Enrique Piqueras - <epiquerass@gmail.com>\r\n *  @dev A contract to maintain a policy for each subcourt.\r\n */\r\ncontract PolicyRegistry {\r\n    /* Events */\r\n\r\n    /** @dev Emitted when a policy is updated.\r\n     *  @param _subcourtID The ID of the policy's subcourt.\r\n     *  @param _policy The URI of the policy JSON.\r\n     */\r\n    event PolicyUpdate(uint indexed _subcourtID, string _policy);\r\n\r\n    /* Storage */\r\n\r\n    address public governor;\r\n    mapping(uint => string) public policies;\r\n\r\n    /* Modifiers */\r\n\r\n    /** @dev Requires that the sender is the governor. */\r\n    modifier onlyByGovernor() {require(governor == msg.sender, \"Can only be called by the governor.\"); _;}\r\n\r\n    /* Constructor */\r\n\r\n    /** @dev Constructs the `PolicyRegistry` contract.\r\n     *  @param _governor The governor's address.\r\n     */\r\n    constructor(address _governor) public {governor = _governor;}\r\n\r\n    /* External */\r\n\r\n    /** @dev Changes the `governor` storage variable.\r\n     *  @param _governor The new value for the `governor` storage variable.\r\n     */\r\n    function changeGovernor(address _governor) external onlyByGovernor {governor = _governor;}\r\n\r\n    /** @dev Sets the policy for the specified subcourt.\r\n     *  @param _subcourtID The ID of the specified subcourt.\r\n     *  @param _policy The URI of the policy JSON.\r\n     */\r\n    function setPolicy(uint _subcourtID, string _policy) external onlyByGovernor {\r\n        policies[_subcourtID] = _policy;\r\n        emit PolicyUpdate(_subcourtID, policies[_subcourtID]);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_subcourtID\",\"type\":\"uint256\"},{\"name\":\"_policy\",\"type\":\"string\"}],\"name\":\"setPolicy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_governor\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_subcourtID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_policy\",\"type\":\"string\"}],\"name\":\"PolicyUpdate\",\"type\":\"event\"}]","ContractName":"PolicyRegistry","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000004ebeab93f7d99a7a251fb04df33e2a8041dfb80","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f29f9a75e6afbb64a814362d9152e8b796792a74e6b6e9c61a88e50cc2293502"}]}