{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n   function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newowner;\r\n    address public admin;\r\n    address public dev;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyNewOwner {\r\n        require(msg.sender == newowner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newowner = _newOwner;\r\n    }\r\n    \r\n    function takeOwnership() public onlyNewOwner {\r\n        owner = newowner;\r\n    }    \r\n    \r\n    function setAdmin(address _admin) public onlyOwner {\r\n        admin = _admin;\r\n    }\r\n    \r\n    function setDev(address _dev) public onlyOwner {\r\n        dev = _dev;\r\n    }\r\n    \r\n    modifier onlyAdmin {\r\n        require(msg.sender == admin || msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyDev {\r\n        require(msg.sender == dev || msg.sender == admin || msg.sender == owner);\r\n        _;\r\n    }    \r\n}\r\n\r\nabstract contract ContractConn{\r\n    function transfer(address _to, uint _value) virtual public;\r\n    function transferFrom(address _from, address _to, uint _value) virtual public;\r\n    function balanceOf(address who) virtual public view returns (uint);\r\n}\r\n\r\n\r\ncontract Deposit is Ownable{\r\n\r\n    using SafeMath for uint256;\r\n    \r\n    struct DepositInfo {\r\n        uint256 id;\r\n        address depositor;\r\n        string coinType;\r\n        uint256 amount;\r\n        uint256 depositTime;\r\n        uint256 depositBlock;\r\n        uint256 ExpireBlock;\r\n    }\r\n    \r\n    ContractConn public usdt;\r\n    ContractConn public zild;\r\n    \r\n\r\n    uint256 public depositBlock = 78000;\r\n    uint256 public depositBlockChange;\r\n    uint256 public changeDepositTime;\r\n    bool    public needChangeTime = false;\r\n    \r\n    mapping(address => DepositInfo[]) public eth_deposit;\r\n    mapping(address => DepositInfo[]) public usdt_deposit;\r\n    mapping(address => DepositInfo[]) public zild_deposit;\r\n    \r\n    mapping(address => uint256) public user_ethdeposit_amount;\r\n    mapping(address => uint256) public user_usdtdeposit_amount;\r\n    mapping(address => uint256) public user_zilddeposit_amount;\r\n\r\n    uint256 public ethTotalDeposit;\r\n    uint256 public usdtTotalDeposit;\r\n    uint256 public zildTotalDeposit;\r\n\r\n    event SetDepositBlock(uint256 dblock,address indexed who,uint256 time);\r\n    event EffectDepositBlock(uint256 dblock,address indexed who,uint256 time);\r\n    event DepositETH(address indexed from,uint256 depid,uint256 damount,uint256 bblock,uint256 eblock,uint256 time);\r\n    event DepositUSDT(address indexed from,uint256 depid,uint256 damount,uint256 bblock,uint256 eblock,uint256 time);\r\n    event DepositZILD(address indexed from,uint256 depid,uint256 damount,uint256 bblock,uint256 eblock,uint256 time);\r\n    event WithdrawETH(address indexed to,uint256 damount,uint256 time);\r\n    event WithdrawUSDT(address indexed to,uint256 damount,uint256 time);\r\n    event WithdrawZILD(address indexed to,uint256 damount,uint256 time);\r\n    \r\n    constructor(address _usdt,address _zild) public {\r\n        usdt = ContractConn(_usdt);\r\n        zild = ContractConn(_zild);\r\n    }\r\n    \r\n    function setdepositblock(uint256 _block) public onlyAdmin {\r\n        require(_block > 0,\"Desposit: New deposit time must be greater than 0\");\r\n        depositBlockChange = _block;\r\n        changeDepositTime = block.number;\r\n        needChangeTime = true;\r\n        emit SetDepositBlock(_block,msg.sender,now);\r\n    }\r\n    \r\n    function effectblockchange() public onlyAdmin {\r\n        require(needChangeTime,\"Deposit: No new deposit time are set\");\r\n        uint256 currentTime = block.number;\r\n        uint256 effectTime = changeDepositTime.add(depositBlock);\r\n        if (currentTime < effectTime) return;\r\n        depositBlock = depositBlockChange;\r\n        needChangeTime = false;\r\n        emit SetDepositBlock(depositBlockChange,msg.sender,now);\r\n    }    \r\n\r\n    function DepositETHCount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return eth_deposit[_user].length;\r\n    }\r\n    \r\n    function DepositUSDTCount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return usdt_deposit[_user].length;\r\n    }\r\n    \r\n    function DepositZILDCount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return zild_deposit[_user].length;\r\n    }   \r\n\r\n    function DepositETHAmount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return user_ethdeposit_amount[_user];\r\n    }\r\n    \r\n    function DepositUSDTAmount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return user_usdtdeposit_amount[_user];\r\n    }\r\n    \r\n    function DepositZILDAmount(address _user)  view public returns(uint256) {\r\n        require(msg.sender == _user || msg.sender == owner, \"Deposit: Only check your own deposit records\");\r\n        return user_zilddeposit_amount[_user];\r\n    } \r\n\r\n    function depositETH() public payable returns(uint256){\r\n        uint256 length = eth_deposit[msg.sender].length;\r\n        uint256 deposit_id;\r\n        eth_deposit[msg.sender].push(\r\n            DepositInfo({\r\n                id: length,\r\n                depositor: msg.sender,\r\n                coinType: \"eth\",\r\n                amount: msg.value,\r\n                depositTime: now,\r\n                depositBlock: block.number,\r\n                ExpireBlock: block.number.add(depositBlock)\r\n            })\r\n        );\r\n        deposit_id = eth_deposit[msg.sender].length;\r\n        user_ethdeposit_amount[msg.sender] = user_ethdeposit_amount[msg.sender].add(msg.value);\r\n        ethTotalDeposit = ethTotalDeposit.add(msg.value);\r\n        emit DepositETH(msg.sender,length,msg.value,block.number,block.number.add(depositBlock),now);\r\n        return length;\r\n    }\r\n    \r\n    function depositUSDT(uint256 _amount) public returns(uint256){\r\n        usdt.transferFrom(address(msg.sender), address(this), _amount);\r\n        uint256 length = usdt_deposit[msg.sender].length;\r\n        usdt_deposit[msg.sender].push(\r\n            DepositInfo({\r\n                id: length,\r\n                depositor: msg.sender,\r\n                coinType: \"usdt\",\r\n                amount: _amount,\r\n                depositTime: now,\r\n                depositBlock: block.number,\r\n                ExpireBlock: block.number.add(depositBlock)\r\n            })\r\n        );\r\n        user_usdtdeposit_amount[msg.sender] = user_usdtdeposit_amount[msg.sender].add(_amount);\r\n        usdtTotalDeposit = usdtTotalDeposit.add(_amount);\r\n        emit DepositUSDT(msg.sender,length,_amount,block.number,block.number.add(depositBlock),now);\r\n        return length;\r\n    }\r\n\r\n    function depositZILD(uint256 _amount) public returns(uint256){\r\n        zild.transferFrom(address(msg.sender), address(this), _amount);\r\n        uint256 length = zild_deposit[msg.sender].length;\r\n        zild_deposit[msg.sender].push(\r\n            DepositInfo({\r\n                id: length,\r\n                depositor: msg.sender,\r\n                coinType: \"zild\",\r\n                amount: _amount,\r\n                depositTime: now,\r\n                depositBlock: block.number,\r\n                ExpireBlock: block.number.add(depositBlock)\r\n            })\r\n        );\r\n        user_zilddeposit_amount[msg.sender] = user_zilddeposit_amount[msg.sender].add(_amount);\r\n        zildTotalDeposit = zildTotalDeposit.add(_amount);\r\n        emit DepositZILD(msg.sender,length,_amount,block.number,block.number.add(depositBlock),now);\r\n        return length;\r\n    }\r\n\r\n    function withdrawEth(uint256 _deposit_id) public returns(bool){\r\n        require(block.number > eth_deposit[msg.sender][_deposit_id].ExpireBlock, \"The withdrawal block has not arrived!\");\r\n        require(eth_deposit[msg.sender][_deposit_id].amount > 0, \"There is no deposit available!\");\r\n        msg.sender.transfer(eth_deposit[msg.sender][_deposit_id].amount);\r\n        user_ethdeposit_amount[msg.sender] = user_ethdeposit_amount[msg.sender].sub(eth_deposit[msg.sender][_deposit_id].amount);\r\n        ethTotalDeposit = ethTotalDeposit.sub(eth_deposit[msg.sender][_deposit_id].amount);\r\n        eth_deposit[msg.sender][_deposit_id].amount =  0;\r\n        emit WithdrawETH(msg.sender,eth_deposit[msg.sender][_deposit_id].amount,now);\r\n        return true;\r\n    }\r\n    \r\n    function withdrawUSDT(uint256 _deposit_id) public returns(bool){\r\n        require(block.number > usdt_deposit[msg.sender][_deposit_id].ExpireBlock, \"The withdrawal block has not arrived!\");\r\n        require(usdt_deposit[msg.sender][_deposit_id].amount > 0, \"There is no deposit available!\");\r\n        usdt.transfer(msg.sender, usdt_deposit[msg.sender][_deposit_id].amount);\r\n        user_usdtdeposit_amount[msg.sender] = user_usdtdeposit_amount[msg.sender].sub(usdt_deposit[msg.sender][_deposit_id].amount);\r\n        usdtTotalDeposit = usdtTotalDeposit.sub(usdt_deposit[msg.sender][_deposit_id].amount);\r\n        usdt_deposit[msg.sender][_deposit_id].amount =  0;\r\n        emit WithdrawUSDT(msg.sender,usdt_deposit[msg.sender][_deposit_id].amount,now);\r\n        return true;\r\n    }\r\n\r\n    function withdrawZILD(uint256 _deposit_id) public returns(bool){\r\n        require(block.number > zild_deposit[msg.sender][_deposit_id].ExpireBlock, \"The withdrawal block has not arrived!\");\r\n        require(zild_deposit[msg.sender][_deposit_id].amount > 0, \"There is no deposit available!\");\r\n        zild.transfer(msg.sender,zild_deposit[msg.sender][_deposit_id].amount);\r\n        user_zilddeposit_amount[msg.sender] = user_zilddeposit_amount[msg.sender].sub(zild_deposit[msg.sender][_deposit_id].amount);\r\n        zildTotalDeposit = zildTotalDeposit.sub(zild_deposit[msg.sender][_deposit_id].amount);\r\n        zild_deposit[msg.sender][_deposit_id].amount =  0;\r\n        emit WithdrawZILD(msg.sender,zild_deposit[msg.sender][_deposit_id].amount,now);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zild\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DepositETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DepositUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eblock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DepositZILD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dblock\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"EffectDepositBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dblock\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"SetDepositBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"WithdrawETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"WithdrawUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"WithdrawZILD\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositETHAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositETHCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositUSDTAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositUSDTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositZILDAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"DepositZILDCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changeDepositTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositBlockChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositZILD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"effectblockchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethTotalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eth_deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"coinType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ExpireBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"needChangeTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newowner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"setdepositblock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract ContractConn\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtTotalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usdt_deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"coinType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ExpireBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_ethdeposit_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_usdtdeposit_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_zilddeposit_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deposit_id\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deposit_id\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deposit_id\",\"type\":\"uint256\"}],\"name\":\"withdrawZILD\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zild\",\"outputs\":[{\"internalType\":\"contract ContractConn\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zildTotalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zild_deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"coinType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ExpireBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Deposit","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000006699d34aa3013605d468d2755a2fe59a16b12b","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://aac5af75a0161e61b4d037c374b70a753e1ff7495770498dc539d3d2ddae91f8"}]}