{"status":"1","message":"OK","result":[{"SourceCode":"/* Description:\r\n * DFO Protocol - Community-Driven Governance.\r\n * This is the well-known Functionality provided by the DFO protocol, which is triggered when a Proposal is finalized (whether it is successful or not).\r\n * In case the Proposal Survey is successful (result value set to true), its proposer will receive an amount of Voting Tokens as a reward.\r\n * The reward amount is initially decided during the DFO Creation and can be changed with a proposal changing the value of the surveySingleReward variable set into the DFO StateHolder.\r\n */\r\n/* Discussion:\r\n * https://gitcoin.co/grants/154/decentralized-flexible-organization\r\n */\r\npragma solidity ^0.6.0;\r\n\r\ncontract CommunityDrivenGovernance {\r\n\r\n    function onStart(address, address) public {\r\n    }\r\n\r\n    function onStop(address) public {\r\n    }\r\n\r\n    function proposalEnd(address proposal, bool result) public {\r\n        if(!result) {\r\n            return;\r\n        }\r\n        IMVDProxy proxy = IMVDProxy(msg.sender);\r\n        if(IMVDFunctionalitiesManager(proxy.getMVDFunctionalitiesManagerAddress()).hasFunctionality(\"getSurveySingleReward\")) {\r\n            uint256 surveySingleReward = toUint256(proxy.read(\"getSurveySingleReward\", bytes(\"\")));\r\n            if(surveySingleReward > 0) {\r\n                proxy.transfer(IMVDFunctionalityProposal(proposal).getProposer(), surveySingleReward, proxy.getToken());\r\n            }\r\n        }\r\n    }\r\n\r\n    function toUint256(bytes memory bs) private pure returns(uint256 x) {\r\n        if(bs.length >= 32) {\r\n            assembly {\r\n                x := mload(add(bs, add(0x20, 0)))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IVotingToken {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IMVDProxy {\r\n    function getToken() external view returns(address);\r\n    function getMVDFunctionalitiesManagerAddress() external view returns(address);\r\n    function transfer(address receiver, uint256 value, address token) external;\r\n    function hasFunctionality(string calldata codeName) external view returns(bool);\r\n    function read(string calldata codeName, bytes calldata data) external view returns(bytes memory returnData);\r\n}\r\n\r\ninterface IMVDFunctionalityProposal {\r\n    function getProposer() external view returns(address);\r\n}\r\n\r\ninterface IMVDFunctionalitiesManager {\r\n    function hasFunctionality(string calldata codeName) external view returns(bool);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"proposalEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CommunityDrivenGovernance","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ef70c7569deaadff4cff194f6fddc97c364465e6338fa05bac611086c4512121"}]}