{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-or-later\n\n/**\nAuthor: CoFiX Core\n*/\n\npragma solidity ^0.6.6;\n\n\n// \ninterface ICoFiXKTable {\n    function setK0(uint256 tIdx, uint256 sigmaIdx, int128 k0) external;\n    function setK0InBatch(uint256[] memory tIdxs, uint256[] memory sigmaIdxs, int128[] memory k0s) external;\n    function getK0(uint256 tIdx, uint256 sigmaIdx) external view returns (int128);\n}\n\n// \ncontract CoFiXKTable is ICoFiXKTable {\n\n    address public governance;\n\n    int128[20][91] public k0Table; // sigmaIdx (0~29), tIdx (0~90)\n\n    constructor() public {\n        governance = msg.sender;\n    }\n\n    function setK0(uint256 tIdx, uint256 sigmaIdx, int128 k0) external override {\n        require(msg.sender == governance, \"CKTable: !governance\");\n        require(k0Table[tIdx][sigmaIdx] == 0, \"CKTable: already set\"); // only once, and not changeable\n        k0Table[tIdx][sigmaIdx] = k0;\n    }\n\n    function setK0InBatch(uint256[] memory tIdxs, uint256[] memory sigmaIdxs, int128[] memory k0s) external override {\n        require(msg.sender == governance, \"CKTable: !governance\");\n        uint256 loopCnt = tIdxs.length;\n        require(loopCnt == sigmaIdxs.length, \"CKTable: tIdxs sigmaIdx not match\");\n        require(loopCnt == k0s.length, \"CKTable: tIdxs k0s not match\");\n        for (uint256 i = 0; i < loopCnt; i++) {\n            require(k0Table[tIdxs[i]][sigmaIdxs[i]] == 0, \"CKTable: already set\"); // only once, and not changeable\n            k0Table[tIdxs[i]][sigmaIdxs[i]] = k0s[i];\n        }\n    }\n\n    function getK0(uint256 tIdx, uint256 sigmaIdx) external view override returns (int128) {\n        require(tIdx < 91, \"CKTable: tIdx must < 91\");\n        require(sigmaIdx < 20, \"CKTable: sigmaIdx must < 20\");\n        return k0Table[tIdx][sigmaIdx];\n    }\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigmaIdx\",\"type\":\"uint256\"}],\"name\":\"getK0\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"k0Table\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigmaIdx\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"k0\",\"type\":\"int128\"}],\"name\":\"setK0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tIdxs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sigmaIdxs\",\"type\":\"uint256[]\"},{\"internalType\":\"int128[]\",\"name\":\"k0s\",\"type\":\"int128[]\"}],\"name\":\"setK0InBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CoFiXKTable","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"20000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}