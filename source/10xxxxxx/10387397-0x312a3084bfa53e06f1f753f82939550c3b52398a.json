{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.5;\r\n\r\n\r\n/*\r\n\r\nBASIC ERC20 Crowdsale ICO ERC20 Token\r\n\r\n\r\n\r\n*/\r\n\r\nlibrary SafeMath{\r\n     function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n         if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n     function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n          require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n         \r\n     }\r\n}\r\n\r\n\r\ncontract BasicToken {\r\n    uint256 public totalSupply;\r\n    bool public allowTransfer;\r\n\r\n    function balanceOf(address _owner) external view  returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n    function approve(address _spender, uint256 _value)external returns (bool success);\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract StandardToken is BasicToken {\r\n\r\n    function transfer(address _to, uint256 _value)public returns (bool success) {\r\n        require(allowTransfer);\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value)public returns (bool success) {\r\n        require(allowTransfer);\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n       emit  Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value)public returns (bool success) {\r\n        require(allowTransfer);\r\n        allowed[msg.sender][_spender] = _value;\r\n       emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\n\r\ncontract FLUSH is StandardToken {\r\n    using SafeMath for *;\r\n\r\n    string public name = \"Flush Network\";\r\n    uint8 public decimals = 18;\r\n    string public symbol = \"FLUSH\";\r\n    uint256 public timestamp;\r\n      uint256 public sold;\r\n    address payable public creator;\r\n   uint256 public maxMintable;\r\n   address payable public ETHWallet;\r\n   bool public isFunding;\r\n   uint256 public exchangeRate;\r\n  \r\n    \r\n\r\n    constructor()public {\r\n        balances[msg.sender] = 0;\r\n        totalSupply = 0;\r\n        name = name;\r\n        decimals = decimals;\r\n        symbol = symbol;\r\n      \r\n        allowTransfer = true;\r\n         maxMintable = 1000000*10**18; // 1 million max sellable for ICO (18 decimals)\r\n        ETHWallet = msg.sender;\r\n        isFunding = true;\r\n        creator = msg.sender;\r\n       \r\n        exchangeRate = 2700;\r\n        createTokens();\r\n    }\r\n\r\n    // creates all tokens 5 million\r\n    // this address will hold all tokens\r\n    // all community contrubutions coins will be taken from this address\r\n    function createTokens() internal {\r\n        uint256 total = 10000000*10**18;\r\n        balances[address(this)] = total;\r\n        totalSupply = total;\r\n    }\r\n\r\n   \r\n\r\n    function mintToken(address to, uint256 amount,uint256 _amount) private returns (bool success) {\r\n    \r\n        require(balances[address(this)] >= amount);\r\n        balances[address(this)] -= amount;\r\n        balances[to] += amount;\r\n        if(_amount>0){\r\n        ETHWallet.transfer(_amount);\r\n        }\r\n        emit Transfer(address(this), to, amount);\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value)public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        //require(_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, address(this), _extraData));\r\n        return true;\r\n    }\r\n    \r\n     function closeSale() public {\r\n      require(msg.sender==creator && isFunding);\r\n       isFunding = false;\r\n      if(maxMintable - sold>0){\r\n          mintToken(creator,maxMintable-sold,0);\r\n           sold=0;\r\n            maxMintable=0;\r\n      }else{\r\n          sold=0;\r\n          maxMintable=0;\r\n      }\r\n   \r\n      \r\n    }\r\n    \r\n    \r\n    function updateMintAmount()public{\r\n        require(msg.sender==creator && isFunding==false);\r\n        if(timestamp==0){\r\n            timestamp=now;\r\n            \r\n        }\r\n        else{\r\n            require((now - timestamp)/3600 >= 24);\r\n        }\r\n        \r\n        uint256 unsold=maxMintable-sold;\r\n       \r\n       uint256 calc= (((9000000*10**18).mul(2)).div(100)).div(365);\r\n       \r\n        require(balanceOf(address(this))>=unsold+calc);\r\n      \r\n        maxMintable= unsold + calc;\r\n        sold=0;\r\n        timestamp=now;\r\n        \r\n    }\r\n     function updateRate(uint256 rate) public {\r\n        require(msg.sender==creator && isFunding==false);\r\n       \r\n        exchangeRate = rate;\r\n        \r\n    }\r\n     function changeCreator(address payable _creator) public {\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n    \r\n    function() external payable{\r\n        require(msg.value>=100000000000000000 && msg.value<=10000000000000000000);\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = sold + amount;\r\n        require(total<=maxMintable && total<=balanceOf(address(this)));\r\n        sold+=total;\r\n        uint256 _amount=msg.value;\r\n        mintToken(msg.sender,amount,_amount);\r\n\r\n    }\r\n    \r\n   \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMintable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateMintAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"FLUSH","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8391ab7ba93ec6dc1c8c53c72fa5413a337ca3fad54a373f71fb572b5b747065"}]}