{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n/**\r\n * \r\n * Vision Network Burn event\r\n * \r\n * Simple contract to BURN VSN tokens forever, after holding them for a day.\r\n * Smart contract by community member George.\r\n * https://www.vision-network.io/\r\n * \r\n */\r\n \r\ncontract Burn {\r\n    \r\n    ERC20 constant VSN = ERC20(0x456AE45c0CE901E2e7c99c0718031cEc0A7A59Ff);\r\n    \r\n    uint256 public timer;\r\n\r\n    event tokensBurnt(uint256 tokens);\r\n    \r\n    \r\n    /**\r\n     * Set the timer after the VSN have entered the contract.\r\n     * The timer will expire 24 hours after calling this function, enabling burn()\r\n     * Anyone can call this function.\r\n     */\r\n    function setTimer() external {\r\n        require(timer == 0);\r\n        require(VSN.balanceOf(address(this)) > 0);\r\n        timer = now + 24 hours;\r\n    } \r\n    \r\n    /**\r\n     * Burn the VSN tokens after the timer has expired. Anyone can call this function.\r\n     */\r\n    function burn() external {\r\n        require(timer != 0  && now > timer);\r\n        uint256 balance = VSN.balanceOf(address(this));\r\n        VSN.transfer(address(0), balance);\r\n        emit tokensBurnt(balance);\r\n        timer = 0;\r\n    } \r\n    \r\n    \r\n}\r\n\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokensBurnt\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Burn","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://97f9c59fd9c468e488cab06b4fcba1e08a3ab36dcd08384883e52f9ecfbb53f8"}]}