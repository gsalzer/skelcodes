{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ninterface IERC20 {\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ncontract TransferLogic {\r\n    /**\r\n     * @dev get ethereum address\r\n     */\r\n    function getAddressETH() public pure returns (address eth) {\r\n        eth = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n    }\r\n\r\n    /**\r\n     * @dev Deposit ERC20 from user\r\n     * @dev user must approve token transfer first\r\n     */\r\n    function deposit(address erc20, uint256 amount) external payable {\r\n        if (erc20 != getAddressETH()) {\r\n            IERC20(erc20).transferFrom(msg.sender, address(this), amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw ETH/ERC20 to user\r\n     */\r\n    function withdraw(\r\n        address erc20,\r\n        address receiver,\r\n        uint256 amount\r\n    ) external {\r\n        uint256 realAmt;\r\n\r\n        if (erc20 == getAddressETH()) {\r\n            realAmt = amount == 0 ? address(this).balance : amount;\r\n            address(uint160(receiver)).transfer(realAmt);\r\n        } else {\r\n            realAmt = amount == 0\r\n                ? IERC20(erc20).balanceOf(address(this))\r\n                : amount;\r\n            IERC20(erc20).transfer(receiver, realAmt);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddressETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"eth\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TransferLogic","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8aca466f1ba1ee958bdaabdec75e2e74343de0c919cb5f91bce6c21ee4f313c9"}]}