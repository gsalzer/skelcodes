{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ninterface TokenInterface {\r\n    function approve(address, uint256) external;\r\n    function transfer(address, uint) external;\r\n    function transferFrom(address, address, uint) external;\r\n    function deposit() external payable;\r\n    function withdraw(uint) external;\r\n    function balanceOf(address) external view returns (uint);\r\n    function decimals() external view returns (uint);\r\n}\r\n\r\ninterface EventInterface {\r\n    function emitEvent(uint connectorType, uint connectorID, bytes32 eventCode, bytes calldata eventData) external;\r\n}\r\n\r\ncontract Stores {\r\n\r\n  /**\r\n   * @dev Return ethereum address\r\n   */\r\n  function getEthAddr() internal pure returns (address) {\r\n    return 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE; // ETH Address\r\n  }\r\n\r\n  /**\r\n   * @dev Return InstaEvent Address.\r\n   */\r\n  function getEventAddr() internal pure returns (address) {\r\n    return 0x2af7ea6Cb911035f3eb1ED895Cb6692C39ecbA97; // InstaEvent Address\r\n  }\r\n\r\n  /**\r\n  * @dev Connector Details.\r\n  */\r\n  function connectorID() public view returns(uint model, uint id) {\r\n    (model, id) = (1, 43);\r\n  }\r\n\r\n}\r\n\r\ninterface AccountInterface {\r\n    function enable(address) external;\r\n    function disable(address) external;\r\n}\r\n\r\ninterface DydxFlashInterface {\r\n    function initiateFlashLoan(address _token, uint256 _amount, bytes calldata data) external;\r\n}\r\n\r\ncontract FlashLoanResolver is Stores {\r\n    event LogDydxFlashLoan(address indexed token, uint256 tokenAmt);\r\n\r\n    /**\r\n        * @dev Return ethereum address\r\n    */\r\n    function getDydxLoanAddr() internal pure returns (address) {\r\n        return address(0xf5b16af97B5CBa4Babe786238FF6016daE6bb890);\r\n    }\r\n\r\n    function getWethAddr() internal pure returns (address) {\r\n        return 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    }\r\n\r\n    /**\r\n     * @dev Borrow Flashloan and Cast spells.\r\n     * @param token Token Address.\r\n     * @param tokenAmt Token Amount.\r\n     * @param data targets & data for cast.\r\n     */\r\n    function borrowAndCast(address token, uint tokenAmt, bytes memory data) public payable {\r\n        DydxFlashInterface DydxLoanContract = DydxFlashInterface(getDydxLoanAddr());\r\n\r\n        AccountInterface(address(this)).enable(address(DydxLoanContract));\r\n\r\n        address _token = token == getEthAddr() ? getWethAddr() : token;\r\n\r\n        DydxLoanContract.initiateFlashLoan(_token, tokenAmt, data);\r\n\r\n        AccountInterface(address(this)).disable(address(DydxLoanContract));\r\n\r\n        emit LogDydxFlashLoan(token, tokenAmt);\r\n        bytes32 _eventCode = keccak256(\"LogDydxFlashLoan(address,uint256)\");\r\n        bytes memory _eventParam = abi.encode(token, tokenAmt);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n}\r\n\r\ncontract ConnectDydxFlashLoan is FlashLoanResolver {\r\n    string public constant name = \"dydx-flashloan-v1\";\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmt\",\"type\":\"uint256\"}],\"name\":\"LogDydxFlashLoan\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"borrowAndCast\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectorID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"model\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ConnectDydxFlashLoan","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://5292d250ec6134f4205d51fd73cbf627dc8c5e977e47421279923b2a17e50671"}]}