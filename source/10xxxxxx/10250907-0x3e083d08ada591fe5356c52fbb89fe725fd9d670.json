{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        \r\n\t    return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Token {\r\n    \r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    \r\n    address ownerWallet_;\r\n    uint256 totalSupply_;\r\n    string name_;\r\n    string symbol_;\r\n    uint256 decimals_;\r\n    uint256 MAX_UINT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;\r\n\r\n    using SafeMath for uint256;\r\n\r\n    constructor (uint256 c_total, \r\n                string memory c_name, \r\n                string memory c_symbol, \r\n                uint256 c_decimals,\r\n                address owner\r\n                ) public \r\n    {  \r\n       \r\n\t    setTotalSupply(c_total);\r\n\t    setName(c_name);\r\n\t    setSymbol(c_symbol);\r\n\t    setDecimals(c_decimals);\r\n\t    setOwnerWallet(owner);\r\n\r\n\t    balances[owner] = c_total;\r\n    }\r\n\r\n    \r\n    function setOwnerWallet(address ownerWallet) private {\r\n        ownerWallet_ = ownerWallet;\r\n    }\r\n\r\n    function ownerWallet() public view returns (address) {\r\n\t    return ownerWallet_;\r\n    }\r\n    \r\n    function setTotalSupply(uint256 totalSupply) internal {\r\n        totalSupply_ = totalSupply;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n\t    return totalSupply_;\r\n    }\r\n    \r\n    function setName(string memory name) internal {\r\n        name_ = name;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n\t    return name_;\r\n    }\r\n    \r\n    function setSymbol(string memory symbol) internal {\r\n        symbol_ = symbol;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n\t    return symbol_;\r\n    }\r\n    \r\n    function setDecimals(uint256 decimals) internal returns (uint256) {\r\n        decimals_ = decimals;\r\n    }\r\n\r\n    function decimals() public view returns (uint256) {\r\n\t    return decimals_;\r\n    }\r\n    \r\n    function balanceOf(address wallet) public view returns (uint) {\r\n        return balances[wallet];\r\n    }\r\n\r\n    function transfer(address receiver, uint numTokens) public returns (bool) {\r\n        require(numTokens < MAX_UINT);\r\n        require(numTokens <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\r\n        balances[receiver] = balances[receiver].add(numTokens);\r\n        \r\n        emit Transfer(msg.sender, receiver, numTokens);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function approve(address delegate, uint numTokens) public returns (bool) {\r\n        require(numTokens < MAX_UINT);\r\n        require(numTokens <= balances[msg.sender]);\r\n    \r\n        allowed[msg.sender][delegate] = numTokens;\r\n        \r\n        emit Approval(msg.sender, delegate, numTokens);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address delegate) public view returns (uint) {\r\n        return allowed[owner][delegate];\r\n    }\r\n\r\n    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\r\n        require(numTokens < MAX_UINT);\r\n        require(numTokens <= balances[owner]);    \r\n        require(numTokens <= allowed[owner][msg.sender]);\r\n    \r\n        balances[owner] = balances[owner].sub(numTokens);\r\n        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\r\n        balances[buyer] = balances[buyer].add(numTokens);\r\n        \r\n        emit Transfer(owner, buyer, numTokens);\r\n        \r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"c_total\",\"type\":\"uint256\"},{\"name\":\"c_name\",\"type\":\"string\"},{\"name\":\"c_symbol\",\"type\":\"string\"},{\"name\":\"c_decimals\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000001e848000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007fc121e691b3450e2213f241addb000184521301000000000000000000000000000000000000000000000000000000000000001143727970746f547275737420546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034354450000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ffbf272f83f37f4b39dace1b1c6771bd9a5183e09d83016eae3ccb949b2b3020"}]}