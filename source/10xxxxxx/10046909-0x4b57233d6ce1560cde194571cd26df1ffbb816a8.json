{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <0.7.0;\r\n\r\ncontract Documents {\r\n\r\n    // a single record of a submitted document hash\r\n    struct Document {\r\n        address submitter;\r\n        bytes32 hash;\r\n        uint blockNumber;\r\n        bool exists;\r\n    }\r\n\r\n    // hash table used to lookup and store all submitted document hashes\r\n    mapping(bytes32 => Document) public documents;\r\n\r\n    function addDocument(bytes32 hash) external {\r\n        // do not allow overwriting of existing entries\r\n        require(!documents[hash].exists);\r\n        // add new entry\r\n        documents[hash] = Document(msg.sender, hash, block.number, true);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"addDocument\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"documents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Documents","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://e67ef7b4fb4f34dbeafa9eadf0e8693a40f615f79d9bb0c949b323c555e248e1"}]}