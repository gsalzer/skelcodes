{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.14;\r\n\r\n\r\ncontract Ballast{\r\n\r\n    struct UserStruct {\r\n        bool isExist;\r\n        uint id;\r\n        uint referrerID;\r\n        uint totalEarning;\r\n        address[] referral;\r\n        mapping(uint => uint) levelExpired;\r\n    }\r\n    \r\n    struct AutoPoolStruct{\r\n        bool isExist;\r\n        bool poolStatus;\r\n        uint seqID;\r\n        uint poolReferrerID;\r\n        uint totalEarning;\r\n        address[] poolReferral;\r\n    }\r\n    \r\n    address payable public admin;\r\n    uint public entryFee = 0.08 ether;\r\n    uint public adminFee = 0.02 ether;\r\n    uint public Auto_Pool_Limit = 3;\r\n    \r\n    mapping(address => UserStruct) public users;\r\n    mapping(address => mapping(uint => mapping(uint =>AutoPoolStruct))) public usersPool;\r\n    mapping(uint => uint) public Auto_Pool_SeqID;\r\n    mapping(uint => uint) public Auto_Pool;\r\n    mapping(uint => uint) public Auto_Pool_Upline;\r\n    mapping(uint => uint) public Auto_Pool_System;\r\n    mapping(uint => mapping (uint => address)) public userPoolList;\r\n    mapping(uint => address) public userList;\r\n    mapping(address => mapping (uint => bool)) public userPoolStatus;\r\n    mapping(address => mapping(uint => uint[])) public userPoolSeqID;\r\n    \r\n    uint public currUserID = 0;\r\n    bool public lockStatus;\r\n\r\n    event UserEntryEvent(\r\n        address indexed _user,\r\n        address indexed _referrer,\r\n        uint _time\r\n    );\r\n    event AutoPoolEvent(\r\n        uint indexed _referrerID,\r\n        address indexed _user,\r\n        uint indexed _poolID,\r\n        uint _time\r\n    );\r\n    event AutoPoolUplineEvent(\r\n       uint indexed _referrerID,\r\n       uint indexed _poolID,\r\n       address indexed _user,\r\n       address[10] _uplines\r\n    );\r\n    \r\n    constructor() public {\r\n        admin = msg.sender;\r\n\r\n        Auto_Pool_SeqID[1] = 0;\r\n        Auto_Pool_SeqID[2] = 0;\r\n        Auto_Pool_SeqID[3] = 0;\r\n        \r\n        Auto_Pool[1] = 0.25 ether;\r\n        Auto_Pool[2] = 0.50 ether;\r\n        Auto_Pool[3] = 1 ether;\r\n        \r\n        Auto_Pool_Upline[1] = 0.02 ether;\r\n        Auto_Pool_Upline[2] = 0.04 ether;\r\n        Auto_Pool_Upline[3] = 0.08 ether;\r\n        \r\n        Auto_Pool_System[1] = 0.05 ether;\r\n        Auto_Pool_System[2] = 0.10 ether;\r\n        Auto_Pool_System[3] = 0.20 ether;\r\n        \r\n        UserStruct memory userStruct;\r\n        currUserID++;\r\n        Auto_Pool_SeqID[1]++;\r\n        Auto_Pool_SeqID[2]++;\r\n        Auto_Pool_SeqID[3]++;\r\n\r\n        userStruct = UserStruct({\r\n            isExist: true,\r\n            id: currUserID,\r\n            referrerID: 0,\r\n            totalEarning:0,\r\n            referral: new address[](0)\r\n        });\r\n        users[admin] = userStruct;    \r\n        userList[currUserID] = admin;\r\n        \r\n        AutoPoolStruct memory autoPoolStruct;\r\n        autoPoolStruct = AutoPoolStruct({\r\n            isExist: true,\r\n            poolStatus: true,\r\n            seqID: Auto_Pool_SeqID[1],\r\n            totalEarning:0,\r\n            poolReferrerID: 0,\r\n            poolReferral: new address[](0)\r\n        });\r\n        usersPool[admin][1][1] = autoPoolStruct;\r\n        usersPool[admin][2][1] = autoPoolStruct;\r\n        usersPool[admin][3][1] = autoPoolStruct;\r\n        userPoolList[1][Auto_Pool_SeqID[1]] = admin;\r\n        userPoolList[2][Auto_Pool_SeqID[2]] = admin;\r\n        userPoolList[3][Auto_Pool_SeqID[3]] = admin;\r\n        userPoolSeqID[admin][1].push(Auto_Pool_SeqID[1]);\r\n        userPoolSeqID[admin][2].push(Auto_Pool_SeqID[2]);\r\n        userPoolSeqID[admin][3].push(Auto_Pool_SeqID[3]);\r\n    }\r\n    \r\n    function() external {\r\n        revert(\"No contract call\");\r\n    }\r\n    \r\n    function userEntry(\r\n        uint _referrerID\r\n    ) \r\n        payable\r\n        public \r\n    {\r\n        \r\n        require(\r\n            lockStatus == false, \r\n            \"Contract Locked\"\r\n        );\r\n        require(\r\n            !users[msg.sender].isExist,\r\n            'User exist'\r\n        );\r\n        require(\r\n            _referrerID > 0 && _referrerID <= currUserID,\r\n            'Incorrect referrer Id'\r\n        );\r\n        require(\r\n            msg.value == entryFee,\r\n            \"insufficient value\"\r\n        );\r\n        \r\n        UserStruct memory userStruct;\r\n        currUserID++;\r\n\r\n        userStruct = UserStruct({\r\n            isExist: true,\r\n            id: currUserID,\r\n            totalEarning:0,\r\n            referrerID: _referrerID,\r\n            referral: new address[](0)\r\n        });\r\n\r\n        users[msg.sender] = userStruct;\r\n        userList[currUserID] = msg.sender;\r\n\r\n        users[userList[_referrerID]].referral.push(msg.sender);\r\n        uint referrerAmount = entryFee-adminFee;\r\n        address(uint160(userList[_referrerID])).transfer(referrerAmount); \r\n        admin.transfer(adminFee);\r\n        users[userList[_referrerID]].totalEarning += referrerAmount;\r\n        users[admin].totalEarning += adminFee;   \r\n        emit UserEntryEvent(\r\n            msg.sender,\r\n            userList[_referrerID],\r\n            now\r\n        );\r\n    }\r\n    \r\n    function AutoPool(\r\n        uint _poolID,\r\n        uint _poolRefSeqID\r\n    ) \r\n        payable\r\n        public \r\n    {   \r\n        require(lockStatus == false, \"Contract Locked\");\r\n        require(users[msg.sender].isExist,'User not exist');\r\n        require(!userPoolStatus[msg.sender][_poolID],'User exist in pool');\r\n        // require(usersPool[userList[_poolRefSeqID]][_poolID].poolStatus,'pool referrer is not exist');\r\n        require(_poolID <= 3 && _poolID > 0,\"_poolID must be greather than zero and less than 4\");\r\n        require(\r\n            _poolRefSeqID > 0 && _poolRefSeqID <= Auto_Pool_SeqID[_poolID],\r\n            'Incorrect pool referrer Id'\r\n        );\r\n        require(\r\n            usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].poolReferral.length < Auto_Pool_Limit,\r\n            \"reached poolReferral limit\"\r\n        );\r\n        require(msg.value == Auto_Pool[_poolID],\"Incorrect value\");\r\n        \r\n        Auto_Pool_SeqID[_poolID]++;\r\n        \r\n        AutoPoolStruct memory autoPoolStruct;\r\n        autoPoolStruct = AutoPoolStruct({\r\n            isExist: true,\r\n            poolStatus: false,\r\n            seqID: Auto_Pool_SeqID[_poolID],\r\n            totalEarning:0,\r\n            poolReferrerID: _poolRefSeqID,\r\n            poolReferral: new address[](0)\r\n        });\r\n        \r\n        usersPool[msg.sender][_poolID][Auto_Pool_SeqID[_poolID]] = autoPoolStruct;\r\n        \r\n        userPoolList[_poolID][Auto_Pool_SeqID[_poolID]] = msg.sender;\r\n        userPoolSeqID[msg.sender][_poolID].push(Auto_Pool_SeqID[_poolID]);\r\n        userPoolStatus[msg.sender][_poolID] = true;\r\n        \r\n        usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].poolReferral.push(msg.sender);\r\n        \r\n        if(usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].poolReferral.length == 1){\r\n            address(uint160(userPoolList[_poolID][_poolRefSeqID])).transfer(Auto_Pool[_poolID]); \r\n            usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].totalEarning += Auto_Pool[_poolID];\r\n        }\r\n        else if(usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].poolReferral.length == 2){\r\n            autoPoolUplines(msg.sender, _poolID,Auto_Pool_SeqID[_poolID]);\r\n        }\r\n        else{\r\n            address(uint160(userPoolList[_poolID][_poolRefSeqID])).transfer(Auto_Pool[_poolID]);\r\n            usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].totalEarning += Auto_Pool[_poolID];\r\n            \r\n            Auto_Pool_SeqID[_poolID]++;\r\n        \r\n            AutoPoolStruct memory autoPoolStructReinvest;\r\n            autoPoolStructReinvest = AutoPoolStruct({\r\n                isExist: true,\r\n                poolStatus: false,\r\n                seqID: Auto_Pool_SeqID[_poolID],\r\n                totalEarning:0,\r\n                poolReferrerID: usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][_poolRefSeqID].poolReferrerID,\r\n                poolReferral: new address[](0)\r\n            });\r\n            \r\n            usersPool[userPoolList[_poolID][_poolRefSeqID]][_poolID][Auto_Pool_SeqID[_poolID]] = autoPoolStructReinvest;\r\n            userPoolSeqID[userPoolList[_poolID][_poolRefSeqID]][_poolID].push(Auto_Pool_SeqID[_poolID]);\r\n            userPoolList[_poolID][Auto_Pool_SeqID[_poolID]] = userPoolList[_poolID][_poolRefSeqID];\r\n        }\r\n        \r\n        emit AutoPoolEvent(_poolRefSeqID,msg.sender, _poolID, now);    \r\n    }\r\n    \r\n    \r\n    function autoPoolUplines(\r\n        address _user,\r\n        uint _poolID,\r\n        uint _userPoolID\r\n        )\r\n        internal\r\n    {\r\n        address[10] memory  uplineUsers;\r\n        uint[10] memory uplineUsersID;\r\n        uplineUsers[0] =  userPoolList[_poolID][usersPool[_user][_poolID][_userPoolID].poolReferrerID];\r\n        uplineUsersID[0] = usersPool[_user][_poolID][_userPoolID].poolReferrerID;\r\n        uplineUsers[1] =  userPoolList[_poolID][usersPool[uplineUsers[0]][_poolID][uplineUsersID[0]].poolReferrerID];\r\n        uplineUsersID[1] = usersPool[uplineUsers[0]][_poolID][uplineUsersID[0]].poolReferrerID;\r\n        uplineUsers[2] =  userPoolList[_poolID][usersPool[uplineUsers[1]][_poolID][uplineUsersID[1]].poolReferrerID];\r\n        uplineUsersID[2] = usersPool[uplineUsers[1]][_poolID][uplineUsersID[1]].poolReferrerID;\r\n        uplineUsers[3] =  userPoolList[_poolID][usersPool[uplineUsers[2]][_poolID][uplineUsersID[2]].poolReferrerID];\r\n        uplineUsersID[3] = usersPool[uplineUsers[2]][_poolID][uplineUsersID[2]].poolReferrerID;\r\n        uplineUsers[4] =  userPoolList[_poolID][usersPool[uplineUsers[3]][_poolID][uplineUsersID[3]].poolReferrerID];\r\n        uplineUsersID[4] = usersPool[uplineUsers[3]][_poolID][uplineUsersID[3]].poolReferrerID;\r\n        uplineUsers[5] =  userPoolList[_poolID][usersPool[uplineUsers[4]][_poolID][uplineUsersID[4]].poolReferrerID];\r\n        uplineUsersID[5] = usersPool[uplineUsers[4]][_poolID][uplineUsersID[4]].poolReferrerID;\r\n        uplineUsers[6] =  userPoolList[_poolID][usersPool[uplineUsers[5]][_poolID][uplineUsersID[5]].poolReferrerID];\r\n        uplineUsersID[6] = usersPool[uplineUsers[5]][_poolID][uplineUsersID[5]].poolReferrerID;\r\n        uplineUsers[7] =  userPoolList[_poolID][usersPool[uplineUsers[6]][_poolID][uplineUsersID[6]].poolReferrerID];\r\n        uplineUsersID[7] = usersPool[uplineUsers[6]][_poolID][uplineUsersID[6]].poolReferrerID;\r\n        uplineUsers[8] =  userPoolList[_poolID][usersPool[uplineUsers[7]][_poolID][uplineUsersID[7]].poolReferrerID];\r\n        uplineUsersID[8] = usersPool[uplineUsers[7]][_poolID][uplineUsersID[7]].poolReferrerID;\r\n        uplineUsers[9] =  userPoolList[_poolID][usersPool[uplineUsers[8]][_poolID][uplineUsersID[8]].poolReferrerID];\r\n        uplineUsersID[9] = usersPool[uplineUsers[8]][_poolID][uplineUsersID[8]].poolReferrerID;\r\n        \r\n        for(uint i=0;i<10;i++){\r\n            if(uplineUsers[i] == address(0)){\r\n                uplineUsers[i] = userPoolList[_poolID][1];\r\n                uplineUsersID[i] = 1;\r\n            }\r\n        }\r\n        uint uplineAmount = Auto_Pool_Upline[_poolID];\r\n        \r\n        address(uint160(uplineUsers[0])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[1])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[2])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[3])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[4])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[5])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[6])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[7])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[8])).transfer(uplineAmount);\r\n        address(uint160(uplineUsers[9])).transfer(uplineAmount);\r\n        admin.transfer(Auto_Pool_System[_poolID]);\r\n        \r\n        usersPool[uplineUsers[0]][_poolID][uplineUsersID[0]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[1]][_poolID][uplineUsersID[1]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[2]][_poolID][uplineUsersID[2]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[3]][_poolID][uplineUsersID[3]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[4]][_poolID][uplineUsersID[4]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[5]][_poolID][uplineUsersID[5]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[6]][_poolID][uplineUsersID[6]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[7]][_poolID][uplineUsersID[7]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[8]][_poolID][uplineUsersID[8]].totalEarning += uplineAmount;\r\n        usersPool[uplineUsers[9]][_poolID][uplineUsersID[9]].totalEarning += uplineAmount;\r\n        usersPool[admin][_poolID][1].totalEarning += Auto_Pool_System[_poolID];\r\n        emit AutoPoolUplineEvent(usersPool[_user][_poolID][_userPoolID].poolReferrerID,_poolID,msg.sender, uplineUsers);\r\n       \r\n    }\r\n    \r\n    function viewUserReferral(address _user) public view returns(address[] memory) {\r\n        return users[_user].referral;\r\n    }\r\n    \r\n    function viewUserPoolReferral(address _user,uint _poolID,uint _userPoolID) public view returns(address[] memory) {\r\n        return usersPool[_user][_poolID][_userPoolID].poolReferral;\r\n    }\r\n    \r\n    function viewUserPoolSeqID(address _user,uint _poolID)public view returns(uint[] memory) {\r\n        return userPoolSeqID[_user][_poolID];\r\n    }\r\n    \r\n    function contractLock(bool _lockStatus) public returns (bool) {\r\n        require(msg.sender == admin, \"Invalid User\");\r\n\r\n        lockStatus = _lockStatus;\r\n        return true;\r\n    }\r\n    \r\n    function failSafe(address payable _toUser, uint _amount) public returns (bool) {\r\n        require(msg.sender == admin, \"only Owner Wallet\");\r\n        require(_toUser != address(0), \"Invalid Address\");\r\n        require(address(this).balance >= _amount, \"Insufficient balance\");\r\n\r\n        (_toUser).transfer(_amount);\r\n        return true;\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"AutoPoolEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[10]\",\"name\":\"_uplines\",\"type\":\"address[10]\"}],\"name\":\"AutoPoolUplineEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"UserEntryEvent\",\"type\":\"event\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolRefSeqID\",\"type\":\"uint256\"}],\"name\":\"AutoPool\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Auto_Pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Auto_Pool_Limit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Auto_Pool_SeqID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Auto_Pool_System\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Auto_Pool_Upline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lockStatus\",\"type\":\"bool\"}],\"name\":\"contractLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currUserID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_toUser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"failSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"userEntry\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPoolList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPoolSeqID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPoolStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarning\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"poolStatus\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"seqID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolReferrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarning\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userPoolID\",\"type\":\"uint256\"}],\"name\":\"viewUserPoolReferral\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"}],\"name\":\"viewUserPoolSeqID\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"viewUserReferral\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Ballast","CompilerVersion":"v0.5.14+commit.01f1aaa4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3e5964922f3c07dc7b36262954a305dfbf6a642fa2c72120c917dac60c891830"}]}