{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\ncontract ERC20Basic {\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address who) public view returns (uint256);\r\n\tfunction transfer(address  to, uint256 value) public returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender) public view returns (uint256);\r\n\tfunction transferFrom(address from, address  to, uint256 value) public returns (bool);\r\n\tfunction approve(address  spender, uint256 value) public returns (bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract DetailedERC20 is ERC20 {\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\t\r\n\tconstructor(string _name, string _symbol, uint8 _decimals) public {\r\n\t\tname = _name;\r\n\t\tsymbol = _symbol;\r\n\t\tdecimals = _decimals;\r\n\t}\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\tusing SafeMath for uint256;\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\tmapping(address => uint256) public balances;\r\n\tuint256 public _totalSupply;\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0) && _value > 0 &&_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n}\r\n\r\ncontract ERC20Token is BasicToken, ERC20 {\r\n\tusing SafeMath for uint256;\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\tmapping (address => mapping (address => uint256)) public allowed;\r\n\tmapping (address => uint256) public freezeOf;\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\trequire(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint256 _addedValue) public returns (bool success) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool success) {\r\n\t\tuint256 oldValue = allowed[msg.sender][_spender];\r\n\t\tif (_subtractedValue >= oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\t\t}\r\n\t\t\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\ncontract Ownable {\r\n\r\n\taddress public owner;\r\n\tmapping (address => bool) public admin;\r\n\t\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\t\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier onlyOwnerOrAdmin() {\r\n\t\trequire(msg.sender != address(0) || msg.sender == owner || admin[msg.sender] == true);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0) && newOwner != owner && admin[newOwner] == true);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction setAdmin(address newAdmin) onlyOwner public {\r\n\t\trequire(admin[newAdmin] != true && owner != newAdmin);\r\n\t\tadmin[newAdmin] = true;\r\n\t}\r\n\t\r\n\tfunction unsetAdmin(address Admin) onlyOwner public {\r\n\t\trequire(admin[Admin] != false && owner != Admin);\r\n\t\tadmin[Admin] = false;\r\n\t}\r\n  \r\n}\r\n\r\ncontract Pausable is Ownable {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() onlyOwner whenNotPaused public {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner whenPaused public {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n\t\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0 || b == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t\r\n\t\tuint256 c = a * b;\r\n\t\trequire(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\trequire(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n\r\n\r\ncontract BurnableToken is BasicToken, Ownable {\r\n\tevent Burn(address indexed burner, uint256 amount);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\tfunction burn(uint256 _value) onlyOwner public {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\t_totalSupply = _totalSupply.sub(_value);\r\n\t\temit Burn(msg.sender, _value);\r\n\t\temit Transfer(msg.sender, address(0), _value);\r\n\t}\r\n\t\r\n\tfunction burnAddress(address _from, uint256 _value) onlyOwner public {\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n        _totalSupply = _totalSupply.sub(_value);\r\n\t\temit Burn(_from, _value);\r\n\t\temit Transfer(_from, address(0), _value);\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\ncontract FreezeToken is BasicToken, Ownable {\r\n\tevent Freezen(address indexed freezer, uint256 amount);\r\n\tevent UnFreezen(address indexed freezer, uint256 amount);\r\n\t\r\n\tmapping (address => uint256) public freezeOf;\r\n\t\r\n    function freeze(uint256 _value) onlyOwner public {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tfreezeOf[msg.sender] = freezeOf[msg.sender].add(_value);\r\n\t\t_totalSupply = _totalSupply.sub(_value);\r\n\t\temit Freezen(msg.sender, _value);\r\n\t}\r\n\t\r\n\tfunction unfreeze(uint256 _value) onlyOwner public {\r\n\t    require(_value <= _totalSupply && freezeOf[msg.sender] >= _value);\r\n\t\tbalances[msg.sender] = balances[msg.sender].add(_value);\r\n\t\tfreezeOf[msg.sender] = freezeOf[msg.sender].sub(_value);\r\n\t\t_totalSupply = _totalSupply.add(_value);\r\n\t\temit Freezen(msg.sender, _value);\r\n\t}\r\n}\r\n\r\n\r\ncontract AsiaModelFestival is BurnableToken,FreezeToken, DetailedERC20, ERC20Token,Pausable{\r\n\tusing SafeMath for uint256;\r\n\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\tevent LockerChanged(address indexed owner, uint256 amount);\r\n\tevent Recall(address indexed owner, uint256 amount);\r\n\tevent TimeLockerChanged(address indexed owner, uint256 time, uint256 amount);\r\n\tevent TimeLockerChangedTime(address indexed owner, uint256 time);\r\n\tevent TimeLockerChangedBalance(address indexed owner, uint256 amount);\r\n\t\r\n\tmapping(address => uint) public locker;\r\n\tmapping(address => uint) public time;\r\n\tmapping(address => uint) public timeLocker;\r\n\tmapping(address => uint) public unLockAmount;\r\n\t\r\n\t\r\n\tstring public s_symbol = \"AMF\";\r\n \tstring public s_name = \"Asia Model Festival\";\r\n\tuint8 public s_decimals = 18;\r\n\t\r\n\tuint256 public TOTAL_SUPPLY = 40*(10**8)*(10**uint256(s_decimals));\r\n\r\n\tconstructor() DetailedERC20(s_name, s_symbol, s_decimals) public {\r\n\t\t_totalSupply = TOTAL_SUPPLY;\r\n\t\tbalances[owner] = _totalSupply;\r\n\t\temit Transfer(address(0x0), msg.sender, _totalSupply);\r\n\t}\r\n\r\n\t\r\n\tfunction transfer(address _to, uint256 _value)  public whenNotPaused returns (bool){\r\n\t\trequire(balances[msg.sender].sub(_value) >= locker[msg.sender].add(timeLocker[msg.sender]));\r\n\t\treturn super.transfer(_to, _value);\r\n\t}\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool){\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n\t\temit Transfer(_from, _to, _value);\r\n\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction lockOf(address _address) public view returns (uint256 _locker) {\r\n\t\treturn locker[_address];\r\n\t}\r\n\r\n\tfunction setLock(address _address, uint256 _value) public onlyOwnerOrAdmin {\r\n\t\trequire(_value <= _totalSupply &&_address != address(0));\r\n\t\tlocker[_address] = _value;\r\n\t\temit LockerChanged(_address, _value);\r\n\t}\r\n\tfunction setUnLock(address _address, uint256 _value) public onlyOwnerOrAdmin {\r\n\t\trequire(_value <= _totalSupply &&_address != address(0));\r\n\t\tlocker[_address] = locker[_address].sub(_value);\r\n\t\temit LockerChanged(_address, _value);\r\n\t}\r\n\t\r\n\r\n\tfunction recall(address _from, uint256 _amount) public onlyOwnerOrAdmin {\r\n\t\r\n\t\trequire(_amount > 0);\r\n\r\n\t\tuint256 currentLocker = locker[_from];\r\n\t\tuint256 currentBalance = balances[_from];\r\n\r\n\t\trequire(currentLocker >= _amount && currentBalance >= _amount);\r\n\r\n\t\tuint256 newLock = currentLocker.sub(_amount);\r\n\t\tlocker[_from] = newLock;\r\n\t\temit LockerChanged(_from, newLock);\r\n\r\n\t\t\r\n\t\tbalances[_from] = balances[_from].sub(_amount);\r\n\t\tbalances[owner] = balances[owner].add(_amount);\r\n\t\temit Transfer(_from, owner, _amount);\r\n\t\temit Recall(_from, _amount);\r\n\t\t\r\n    }\r\n\t\t\r\n\tfunction transferList(address[] _recipients, uint256[] _balances) public onlyOwnerOrAdmin{\r\n\t\trequire(_recipients.length == _balances.length);\r\n\t\t\r\n\t\tfor (uint i=0; i < _recipients.length; i++) {\r\n\t\t    balances[msg.sender] = balances[msg.sender].sub(_balances[i]);\r\n\t\t\tbalances[_recipients[i]] = balances[_recipients[i]].add(_balances[i]);\r\n    \t\temit Transfer(msg.sender,_recipients[i],_balances[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setLockList(address[] _recipients, uint256[] _balances) public onlyOwnerOrAdmin{\r\n\t\trequire(_recipients.length == _balances.length);\r\n\t\t\r\n\t\tfor (uint i=0; i < _recipients.length; i++) {\r\n\t\t\tlocker[_recipients[i]] = _balances[i];\r\n\t\t    emit LockerChanged(_recipients[i], _balances[i]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction timeLock(address _address,uint256 _time, uint256 _value) public onlyOwnerOrAdmin{\r\n        require(_address != address(0));\r\n        \r\n        uint256 unlockAmount = _value.div(10);\r\n        \r\n        time[_address] = _time;\r\n        timeLocker[_address] = timeLocker[_address].add(_value);\r\n        \r\n        unLockAmount[_address] = unLockAmount[_address].add(unlockAmount);\r\n        emit TimeLockerChanged(_address,_time,_value);\r\n    }\r\n    \r\n    function lockTimeOf(address _address) public view returns (uint256 _time) {\r\n\t\treturn time[_address];\r\n\t}\r\n\t\r\n\tfunction lockTimeAmountOf(address _address) public view returns (uint256 _value) {\r\n\t\treturn unLockAmount[_address];\r\n\t}\r\n\t\r\n\tfunction lockTimeBalanceOf(address _address) public view returns (uint256 _value) {\r\n\t\treturn timeLocker[_address];\r\n\t}\r\n\t\r\n\tfunction untimeLock(address _address) public onlyOwnerOrAdmin{\r\n        require(_address != address(0));\r\n        require(time[_address] <= now);\r\n        require(timeLocker[_address] >= 0);\r\n        \r\n        uint256 unlockAmount = unLockAmount[_address];\r\n        uint256 nextTime = time[_address] + 30 days;\r\n        time[_address] = nextTime;\r\n        \r\n        timeLocker[_address] = timeLocker[_address].sub(unlockAmount);\r\n        \r\n        emit TimeLockerChanged(_address,nextTime,unlockAmount);\r\n    }\r\n    \r\n    function timeLockList(address[] _recipients,uint256[] _time, uint256[] _value) public onlyOwnerOrAdmin{\r\n        require(_recipients.length == _value.length && _recipients.length == _time.length); \r\n        \r\n        for (uint i=0; i < _recipients.length; i++) {\r\n            \r\n            uint256 unlockAmount = _value[i].div(10);\r\n\r\n            \r\n            time[_recipients[i]] = _time[i];\r\n            timeLocker[_recipients[i]] = timeLocker[_recipients[i]].add(_value[i]);\r\n            \r\n            unLockAmount[_recipients[i]] = unLockAmount[_recipients[i]].add(unlockAmount);\r\n            emit TimeLockerChanged(_recipients[i],_time[i],_value[i]);    \r\n        }\r\n        \r\n    }\r\n    \r\n    function unTimeLockList(address[] _recipients) public onlyOwnerOrAdmin{\r\n\t\t\r\n\t\tfor (uint i=0; i < _recipients.length; i++) {\r\n\t\t    uint256 unlockAmount = unLockAmount[_recipients[i]];\r\n\t\t\tif(timeLocker[_recipients[i]].sub(unlockAmount) >= 0){\r\n                uint256 nextTime = now + 30 days;\r\n                time[_recipients[i]] = nextTime;\r\n                timeLocker[_recipients[i]] = timeLocker[_recipients[i]].sub(unlockAmount);\r\n                emit TimeLockerChanged(_recipients[i],nextTime,unlockAmount);\r\n            }\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction timeLockSetTime(address _address,uint256 _time) public onlyOwnerOrAdmin{\r\n        require(_address != address(0));\r\n        \r\n        time[_address] = _time;\r\n        emit TimeLockerChangedTime(_address,_time);\r\n    }\r\n    \r\n    function timeLockSetBalance(address _address,uint256 _value) public onlyOwnerOrAdmin{\r\n        require(_address != address(0));\r\n        \r\n        timeLocker[_address] = _value;\r\n        emit TimeLockerChangedBalance(_address,_value);\r\n    }\r\n    \r\n\tfunction() public payable {\r\n\t\trevert();\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"untimeLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s_symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"setLockList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"lockTimeOf\",\"outputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_time\",\"type\":\"uint256[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"timeLockList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Admin\",\"type\":\"address\"}],\"name\":\"unsetAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"lockOf\",\"outputs\":[{\"name\":\"_locker\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"timeLockSetBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"timeLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"timeLocker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"transferList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s_decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"unLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s_name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"lockTimeBalanceOf\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"}],\"name\":\"unTimeLockList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"lockTimeAmountOf\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUnLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"timeLockSetTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LockerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TimeLockerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TimeLockerChangedTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TimeLockerChangedBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"freezer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Freezen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"freezer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnFreezen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"AsiaModelFestival","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9baab1595f34c256ccea5f518ac55dc3436a37b921ae275c8da11ca36a3bfd3e"}]}