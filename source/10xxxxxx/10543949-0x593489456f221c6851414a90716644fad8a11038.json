{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\ncontract Lotto {\r\n\r\n  address public owner = msg.sender;\r\n  address[] internal playerPool;\r\n  address[] internal playerPoolZero;\r\n  address PlayerWinner;\r\n  uint seed = 0;\r\n  uint amount = 0.2 ether;\r\n  // events\r\n  event Payout(address from, address to, uint quantity);\r\n  event BoughtIn(address from);\r\n  event Rejected();\r\n\r\n  modifier onlyBy(address _account) {\r\n    require(msg.sender == _account);\r\n    _;\r\n  }\r\n \r\n modifier onlyplayer() {\r\n    require(playerPool.length < 50);\r\n    _;\r\n  }\r\n\r\n  function changeOwner(address _newOwner) public onlyBy(owner) {\r\n    owner = _newOwner;\r\n  }\r\n  \r\n  function randomizer() private view returns (uint256) {\r\n    \treturn uint256(keccak256(block.difficulty, now, playerPool));\r\n    }\r\n\r\n  function selectWinner() private{\r\n      \r\n    uint256 winner = randomizer() % playerPool.length;\r\n    PlayerWinner = playerPool[winner];\r\n    playerPool[winner].transfer(amount); \r\n    owner.transfer(this.balance); \r\n    setWinner(PlayerWinner); \r\n    playerPool.length = 0;\r\n   \r\n  }\r\n  \r\n  \r\n    function setWinner(address _PlayerWinner) private {\r\n        PlayerWinner = _PlayerWinner;\r\n    }\r\n    \r\n    function getWinner() public view returns (address)\r\n    {\r\n        return PlayerWinner;\r\n    }\r\n    \r\n    function refund() public onlyBy(owner) payable {\r\n    require(playerPool.length > 0);\r\n    for (uint i = 0; i < playerPool.length; i++) {\r\n      playerPool[i].transfer(100 finney);\r\n    }\r\n      playerPool.length = 0;\r\n    }\r\n    \r\n    function close() public onlyBy(owner) {\r\n    refund();\r\n    selfdestruct(owner);\r\n   }\r\n   \r\n    function getPlayers() public view returns (address[]) {\r\n        return playerPool;\r\n    }\r\n    \r\n    function getPlayersZero() public onlyBy(owner) view returns (address[] memory) {\r\n        return playerPoolZero;\r\n    }\r\n    \r\n    function getPlayerslength() public view returns (uint256) {\r\n        return playerPool.length;\r\n    }\r\n    \r\n    function getWinnerAdd() onlyBy(owner) public{\r\n        if(playerPool.length == 50){\r\n         selectWinner();\r\n        }\r\n    }\r\n    \r\n    function () public payable onlyplayer() {\r\n        if(msg.value >= 0.005 ether){\r\n        playerPool.push(msg.sender);\r\n        BoughtIn(msg.sender);  \r\n        } else {\r\n            playerPoolZero.push(msg.sender);\r\n       }\r\n    }\r\n    \r\n    function getBalance() public onlyBy(owner) view returns( uint256 ) {\r\n    return address(this).balance;\r\n}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getPlayerslength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayersZero\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getWinnerAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"BoughtIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Rejected\",\"type\":\"event\"}]","ContractName":"Lotto","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ab4a8d67dcd102715db794e55bf1537f5b210f083b8006ec011a39741f73680e"}]}