{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with buidler v1.4.3 https://buidler.dev\r\n\r\n// File contracts/interfaces/IMiniMeLike.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n/**\r\n * @dev A sparse MiniMe-like interface containing just `generateTokens()`.\r\n */\r\ninterface IMiniMeLike {\r\n    /**\r\n     * @notice Generates `_amount` tokens that are assigned to `_owner`\r\n     * @param _owner The address that will be assigned the new tokens\r\n     * @param _amount The quantity of tokens generated\r\n     * @return True if the tokens are generated correctly\r\n    */\r\n    function generateTokens(address _owner, uint _amount) external returns (bool);\r\n}\r\n\r\n\r\n// File contracts/interfaces/ITokenController.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n/**\r\n * @dev The MiniMe token controller contract must implement these functions\r\n *      ANT was compiled with solc 0.4.8, so there is no point in marking any of the functions as `view`.\r\n */\r\ninterface ITokenController {\r\n    /**\r\n    * @notice Called when `_owner` sends ether to the MiniMe Token contract\r\n    * @param _owner The address that sent the ether to create tokens\r\n    * @return True if the ether is accepted, false if it throws\r\n    */\r\n    function proxyPayment(address _owner) external payable returns (bool);\r\n\r\n    /**\r\n    * @notice Notifies the controller about a token transfer allowing the controller to react if desired\r\n    * @param _from The origin of the transfer\r\n    * @param _to The destination of the transfer\r\n    * @param _amount The amount of the transfer\r\n    * @return False if the controller does not authorize the transfer\r\n    */\r\n    function onTransfer(address _from, address _to, uint _amount) external returns (bool);\r\n\r\n    /**\r\n    * @notice Notifies the controller about an approval allowing the controller to react if desired\r\n    * @param _owner The address that calls `approve()`\r\n    * @param _spender The spender in the `approve()` call\r\n    * @param _amount The amount in the `approve()` call\r\n    * @return False if the controller does not authorize the approval\r\n    */\r\n    function onApprove(address _owner, address _spender, uint _amount) external returns (bool);\r\n}\r\n\r\n\r\n// File contracts/ANTController.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\n\r\n\r\ncontract ANTController is ITokenController {\r\n    string private constant ERROR_NOT_MINTER = \"ANTC_SENDER_NOT_MINTER\";\r\n    string private constant ERROR_NOT_ANT = \"ANTC_SENDER_NOT_ANT\";\r\n\r\n    IMiniMeLike public ant;\r\n    address public minter;\r\n\r\n    event ChangedMinter(address indexed minter);\r\n\r\n    /**\r\n    * @dev Ensure the msg.sender is the minter\r\n    */\r\n    modifier onlyMinter {\r\n        require(msg.sender == minter, ERROR_NOT_MINTER);\r\n        _;\r\n    }\r\n\r\n    constructor(IMiniMeLike _ant, address _minter) public {\r\n        ant = _ant;\r\n        _changeMinter(_minter);\r\n    }\r\n\r\n    /**\r\n    * @notice Generate ANT for a specified address\r\n    * @dev Note that failure to generate the requested tokens will result in a revert\r\n    * @param _owner Address to receive ANT\r\n    * @param _amount Amount to generate\r\n    * @return True if the tokens are generated correctly\r\n    */\r\n    function generateTokens(address _owner, uint256 _amount) external onlyMinter returns (bool) {\r\n        return ant.generateTokens(_owner, _amount);\r\n    }\r\n\r\n    /**\r\n    * @notice Change the permitted minter to another address\r\n    * @param _newMinter Address that will be permitted to mint ANT\r\n    */\r\n    function changeMinter(address _newMinter) external onlyMinter {\r\n        _changeMinter(_newMinter);\r\n    }\r\n\r\n    // Default ITokenController settings for allowing token transfers.\r\n    // ANT was compiled with solc 0.4.8, so there is no point in marking any of these functions as `view`:\r\n    //   - The original interface does not specify these as `constant`\r\n    //   - ANT does not use a `staticcall` when calling into these functions\r\n\r\n    /**\r\n    * @dev Callback function called from MiniMe-like instances when ETH is sent into the token contract\r\n    *      It allows specifying a custom logic to control if the ETH should be accepted or not\r\n    * @return Always false, this controller does not permit the ANT contract to receive ETH transfers\r\n    */\r\n    function proxyPayment(address /* _owner */) external payable returns (bool) {\r\n        // We only apply this extra check here to ensure `proxyPayment()` cannot be sent ETH from arbitrary addresses\r\n        require(msg.sender == address(ant), ERROR_NOT_ANT);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * @dev Callback function called from MiniMe-like instances when an ERC20 transfer is requested\r\n    *      It allows specifying a custom logic to control if a transfer should be allowed or not\r\n    * @return Always true, this controller allows all transfers\r\n    */\r\n    function onTransfer(address /* _from */, address /* _to */, uint /* _amount */) external returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Callback function called from MiniMe-like instances when an ERC20 approval is requested\r\n    *      It allows specifying a custom logic to control if an approval should be allowed or not\r\n    * @return Always true, this controller allows all approvals\r\n    */\r\n    function onApprove(address /* _owner */, address /* _spender */, uint /* _amount */) external returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    // Internal fns\r\n\r\n    function _changeMinter(address _newMinter) internal {\r\n        minter = _newMinter;\r\n        emit ChangedMinter(_newMinter);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IMiniMeLike\",\"name\":\"_ant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"ChangedMinter\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ant\",\"outputs\":[{\"internalType\":\"contract IMiniMeLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"changeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ANTController","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"000000000000000000000000960b236a07cf122663c4303350609a66a7b288c0000000000000000000000000beefbeef03c7e5a1c29e0aa675f8e16aee0a5fad","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://6d64f7ca8dc75e204cb471ac35210abb6b890af8b172b120f6468a7657e6ecac"}]}