{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.5.12;\r\n\r\n// https://github.com/dapphub/ds-pause\r\ninterface DSPauseAbstract {\r\n    function delay() external view returns (uint256);\r\n    function plot(address, bytes32, bytes calldata, uint256) external;\r\n    function exec(address, bytes32, bytes calldata, uint256) external returns (bytes memory);\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/cat.sol\r\ninterface CatAbstract {\r\n    function wards(address) external view returns (uint256);\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n    function box() external view returns (uint256);\r\n    function litter() external view returns (uint256);\r\n    function ilks(bytes32) external view returns (address, uint256, uint256);\r\n    function live() external view returns (uint256);\r\n    function vat() external view returns (address);\r\n    function vow() external view returns (address);\r\n    function file(bytes32, address) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function file(bytes32, bytes32, address) external;\r\n    function bite(bytes32, address) external returns (uint256);\r\n    function claw(uint256) external;\r\n    function cage() external;\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/end.sol\r\ninterface EndAbstract {\r\n    function file(bytes32, address) external;\r\n    function file(bytes32, uint256) external;\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/flip.sol\r\ninterface FlipAbstract {\r\n    function rely(address usr) external;\r\n    function deny(address usr) external;\r\n    function vat() external view returns (address);\r\n    function cat() external view returns (address);\r\n    function ilk() external view returns (bytes32);\r\n    function beg() external view returns (uint256);\r\n    function ttl() external view returns (uint48);\r\n    function tau() external view returns (uint48);\r\n    function file(bytes32, uint256) external;\r\n}\r\n\r\n// https://github.com/makerdao/flipper-mom/blob/master/src/FlipperMom.sol\r\ninterface FlipperMomAbstract {\r\n    function setAuthority(address) external;\r\n    function cat() external returns (address);\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n}\r\n\r\n// https://github.com/makerdao/osm\r\ninterface OsmAbstract {\r\n    function kiss(address) external;\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/vat.sol\r\ninterface VatAbstract {\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n}\r\n\r\n// https://github.com/makerdao/dss/blob/master/src/vow.sol\r\ninterface VowAbstract {\r\n    function rely(address usr) external;\r\n    function deny(address usr) external;\r\n}\r\n\r\ncontract SpellAction {\r\n\r\n    // MAINNET ADDRESSES\r\n    //\r\n    // The contracts in this list should correspond to MCD core contracts, verify\r\n    // against the current release list at:\r\n    //     https://changelog.makerdao.com/releases/mainnet/1.1.0/contracts.json\r\n\r\n    address constant MCD_VAT             = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant MCD_VOW             = 0xA950524441892A31ebddF91d3cEEFa04Bf454466;\r\n    address constant MCD_ADM             = 0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5;\r\n    address constant MCD_END             = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;\r\n    address constant FLIPPER_MOM         = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;\r\n    address constant MCD_CAT             = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;\r\n    address constant MCD_CAT_OLD         = 0x78F2c2AF65126834c51822F56Be0d7469D7A523E;\r\n\r\n    address constant MCD_FLIP_ETH_A      = 0xF32836B9E1f47a0515c6Ec431592D5EbC276407f;\r\n    address constant MCD_FLIP_ETH_A_OLD  = 0x0F398a2DaAa134621e4b687FCcfeE4CE47599Cc1;\r\n\r\n    address constant MCD_FLIP_BAT_A      = 0xF7C569B2B271354179AaCC9fF1e42390983110BA;\r\n    address constant MCD_FLIP_BAT_A_OLD  = 0x5EdF770FC81E7b8C2c89f71F30f211226a4d7495;\r\n\r\n    address constant MCD_FLIP_USDC_A     = 0xbe359e53038E41a1ffA47DAE39645756C80e557a;\r\n    address constant MCD_FLIP_USDC_A_OLD = 0x545521e0105C5698f75D6b3C3050CfCC62FB0C12;\r\n\r\n    address constant MCD_FLIP_USDC_B     = 0x77282aD36aADAfC16bCA42c865c674F108c4a616;\r\n    address constant MCD_FLIP_USDC_B_OLD = 0x6002d3B769D64A9909b0B26fC00361091786fe48;\r\n\r\n    address constant MCD_FLIP_WBTC_A     = 0x58CD24ac7322890382eE45A3E4F903a5B22Ee930;\r\n    address constant MCD_FLIP_WBTC_A_OLD = 0xF70590Fa4AaBe12d3613f5069D02B8702e058569;\r\n\r\n    address constant MCD_FLIP_ZRX_A      = 0xa4341cAf9F9F098ecb20fb2CeE2a0b8C78A18118;\r\n    address constant MCD_FLIP_ZRX_A_OLD  = 0x92645a34d07696395b6e5b8330b000D0436A9aAD;\r\n\r\n    address constant MCD_FLIP_KNC_A      = 0x57B01F1B3C59e2C0bdfF3EC9563B71EEc99a3f2f;\r\n    address constant MCD_FLIP_KNC_A_OLD  = 0xAD4a0B5F3c6Deb13ADE106Ba6E80Ca6566538eE6;\r\n\r\n    address constant MCD_FLIP_TUSD_A     = 0x9E4b213C4defbce7564F2Ac20B6E3bF40954C440;\r\n    address constant MCD_FLIP_TUSD_A_OLD = 0x04C42fAC3e29Fd27118609a5c36fD0b3Cb8090b3;\r\n\r\n    address constant MCD_FLIP_MANA_A     = 0x0a1D75B4f49BA80724a214599574080CD6B68357;\r\n    address constant MCD_FLIP_MANA_A_OLD = 0x4bf9D2EBC4c57B9B783C12D30076507660B58b3a;\r\n\r\n    address constant YEARN               = 0xCF63089A8aD2a9D8BD6Bb8022f3190EB7e1eD0f1;\r\n    address constant OSM_ETHUSD          = 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763;\r\n\r\n    // Decimals & precision\r\n    uint256 constant THOUSAND = 10 ** 3;\r\n    uint256 constant MILLION  = 10 ** 6;\r\n    uint256 constant WAD      = 10 ** 18;\r\n    uint256 constant RAY      = 10 ** 27;\r\n    uint256 constant RAD      = 10 ** 45;\r\n\r\n    function execute() external {\r\n\r\n        // ************************\r\n        // *** Liquidations 1.2 ***\r\n        // ************************\r\n\r\n        require(CatAbstract(MCD_CAT_OLD).vat() == MCD_VAT,          \"non-matching-vat\");\r\n        require(CatAbstract(MCD_CAT_OLD).vow() == MCD_VOW,          \"non-matching-vow\");\r\n\r\n        require(CatAbstract(MCD_CAT).vat() == MCD_VAT,              \"non-matching-vat\");\r\n        require(CatAbstract(MCD_CAT).live() == 1,                   \"cat-not-live\");\r\n\r\n        require(FlipperMomAbstract(FLIPPER_MOM).cat() == MCD_CAT,   \"non-matching-cat\");\r\n\r\n        /*** Update Cat ***/\r\n        CatAbstract(MCD_CAT).file(\"vow\", MCD_VOW);\r\n        VatAbstract(MCD_VAT).rely(MCD_CAT);\r\n        VatAbstract(MCD_VAT).deny(MCD_CAT_OLD);\r\n        VowAbstract(MCD_VOW).rely(MCD_CAT);\r\n        VowAbstract(MCD_VOW).deny(MCD_CAT_OLD);\r\n        EndAbstract(MCD_END).file(\"cat\", MCD_CAT);\r\n        CatAbstract(MCD_CAT).rely(MCD_END);\r\n\r\n        CatAbstract(MCD_CAT).file(\"box\", 30 * MILLION * RAD);\r\n\r\n        /*** Set Auth in Flipper Mom ***/\r\n        FlipperMomAbstract(FLIPPER_MOM).setAuthority(MCD_ADM);\r\n\r\n        /*** ETH-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_ETH_A), FlipAbstract(MCD_FLIP_ETH_A_OLD));\r\n\r\n        /*** BAT-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_BAT_A), FlipAbstract(MCD_FLIP_BAT_A_OLD));\r\n\r\n        /*** USDC-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_USDC_A), FlipAbstract(MCD_FLIP_USDC_A_OLD));\r\n        FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_USDC_A); // Auctions disabled\r\n\r\n        /*** USDC-B Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_USDC_B), FlipAbstract(MCD_FLIP_USDC_B_OLD));\r\n        FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_USDC_B); // Auctions disabled\r\n\r\n        /*** WBTC-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_WBTC_A), FlipAbstract(MCD_FLIP_WBTC_A_OLD));\r\n\r\n        /*** TUSD-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_TUSD_A), FlipAbstract(MCD_FLIP_TUSD_A_OLD));\r\n        FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_TUSD_A); // Auctions disabled\r\n\r\n        /*** ZRX-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_ZRX_A), FlipAbstract(MCD_FLIP_ZRX_A_OLD));\r\n\r\n        /*** KNC-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_KNC_A), FlipAbstract(MCD_FLIP_KNC_A_OLD));\r\n\r\n        /*** MANA-A Flip ***/\r\n        _changeFlip(FlipAbstract(MCD_FLIP_MANA_A), FlipAbstract(MCD_FLIP_MANA_A_OLD));\r\n\r\n        // *********************\r\n        // *** Other Changes ***\r\n        // *********************\r\n\r\n        /*** Risk Parameter Adjustments ***/\r\n\r\n        // set the global debt ceiling to 588,000,000\r\n        // 688 (current DC) - 100 (USDC-A decrease)\r\n        VatAbstract(MCD_VAT).file(\"Line\", 588 * MILLION * RAD);\r\n\r\n        // Set the USDC-A debt ceiling\r\n        //\r\n        // Existing debt: 140 million\r\n        // New debt ceiling: 40 million\r\n        uint256 USDC_A_LINE = 40 * MILLION * RAD;\r\n        VatAbstract(MCD_VAT).file(\"USDC-A\", \"line\", USDC_A_LINE);\r\n\r\n        /*** Whitelist yearn on ETHUSD Oracle ***/\r\n        OsmAbstract(OSM_ETHUSD).kiss(YEARN);\r\n    }\r\n\r\n    function _changeFlip(FlipAbstract newFlip, FlipAbstract oldFlip) internal {\r\n        bytes32 ilk = newFlip.ilk();\r\n        require(ilk == oldFlip.ilk(), \"non-matching-ilk\");\r\n        require(newFlip.vat() == oldFlip.vat(), \"non-matching-vat\");\r\n        require(newFlip.cat() == MCD_CAT, \"non-matching-cat\");\r\n        require(newFlip.vat() == MCD_VAT, \"non-matching-vat\");\r\n\r\n        CatAbstract(MCD_CAT).file(ilk, \"flip\", address(newFlip));\r\n        (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);\r\n        CatAbstract(MCD_CAT).file(ilk, \"chop\", oldChop / 10 ** 9);\r\n\r\n        CatAbstract(MCD_CAT).file(ilk, \"dunk\", 50 * THOUSAND * RAD);\r\n        CatAbstract(MCD_CAT).rely(address(newFlip));\r\n\r\n        newFlip.rely(MCD_CAT);\r\n        newFlip.rely(MCD_END);\r\n        newFlip.rely(FLIPPER_MOM);\r\n        newFlip.file(\"beg\", oldFlip.beg());\r\n        newFlip.file(\"ttl\", oldFlip.ttl());\r\n        newFlip.file(\"tau\", oldFlip.tau());\r\n    }\r\n}\r\n\r\ncontract DssSpell {\r\n    DSPauseAbstract public pause =\r\n        DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);\r\n    address         public action;\r\n    bytes32         public tag;\r\n    uint256         public eta;\r\n    bytes           public sig;\r\n    uint256         public expiration;\r\n    bool            public done;\r\n\r\n    // Provides a descriptive tag for bot consumption\r\n    // This should be modified weekly to provide a summary of the actions\r\n    // Hash: seth keccak -- \"$(wget https://raw.githubusercontent.com/makerdao/community/6304d5d461f6a0811699eb04fa48b95d68515d8f/governance/votes/Executive%20vote%20-%20August%2028%2C%202020.md -q -O - 2>/dev/null)\"\r\n    string constant public description =\r\n        \"2020-08-28 MakerDAO Executive Spell | Hash: 0x67885f84f0d31dc816fc327d9912bae6f207199d299543d95baff20cf6305963\";\r\n\r\n    constructor() public {\r\n        sig = abi.encodeWithSignature(\"execute()\");\r\n        action = address(new SpellAction());\r\n        bytes32 _tag;\r\n        address _action = action;\r\n        assembly { _tag := extcodehash(_action) }\r\n        tag = _tag;\r\n        expiration = now + 30 days;\r\n    }\r\n\r\n    modifier officeHours {\r\n        uint day = (now / 1 days + 3) % 7;\r\n        require(day < 5, \"Can only be cast on a weekday\");\r\n        uint hour = now / 1 hours % 24;\r\n        require(hour >= 14 && hour < 21, \"Outside office hours\");\r\n        _;\r\n    }\r\n\r\n    function schedule() public {\r\n        require(now <= expiration, \"This contract has expired\");\r\n        require(eta == 0, \"This spell has already been scheduled\");\r\n        eta = now + DSPauseAbstract(pause).delay();\r\n        pause.plot(action, tag, sig, eta);\r\n    }\r\n\r\n    function cast() public officeHours {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        pause.exec(action, tag, sig, eta);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"action\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"contract DSPauseAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"schedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tag\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DssSpell","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5c3f40da8c52415c76b8d3ab78b2e5d94624979698ab3903739e8e2a4701f9e4"}]}