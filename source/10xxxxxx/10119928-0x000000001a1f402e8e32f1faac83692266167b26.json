{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract DeadSender {\r\n    address payable private owner;\r\n    constructor()public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    event MultiTransfer(\r\n        address indexed _from,\r\n        uint256 indexed _value,\r\n        address _to,\r\n        uint256 _amount\r\n    );\r\n\r\n\r\n    function transfer(address payable[] memory _addresses, uint256[] memory _amounts)\r\n    payable public returns(bool)\r\n    {\r\n        uint256 startBalance = address(this).balance;\r\n        for (uint i = 0; i < _addresses.length; i++) {\r\n            _safeTransfer(_addresses[i], _amounts[i]);\r\n            emit MultiTransfer(msg.sender, msg.value, _addresses[i], _amounts[i]);\r\n        }\r\n        require(startBalance - msg.value == address(this).balance);\r\n        return true;\r\n    }\r\n\r\n    function _safeTransfer(address payable _to, uint256 _amount) private {\r\n        require(_to != address(0));\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    function kill() public onlyOwner() {\r\n        selfdestruct(owner);\r\n    }\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n    fallback () external payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"MultiTransfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"DeadSender","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a6c45973a817426ef799c91f8ec2d2e1d26ff33765f0b5d00f3f762db8bfda3c"}]}