{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.14;\r\n\r\ninterface IToken { // brief ERC-20 interface\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract LexDAOMagickBatonSpell01 {\r\n    address public accessToken = 0x027fa7C653fBfD1Fe49Bcf930a0E40fc429bCC72; // $LXDB\r\n    address public leethToken = 0x4D9D9a22458dD84dB8B0D074470f5d9536116eC5; // $LXK\r\n    IToken private token = IToken(accessToken);\r\n    IToken private leeth = IToken(leethToken);\r\n\r\n    function castSpell() public { // $LXDB holder can cast spell to withdraw balance of deposited $LXK\r\n        require(token.balanceOf(msg.sender) >= 1, \"token balance insufficient\");\r\n        leeth.transfer(msg.sender, leeth.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"accessToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"castSpell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"leethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LexDAOMagickBatonSpell01","CompilerVersion":"v0.5.14+commit.1f1aaa4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7cb3dc09a5aeeb6f50efc49b274cef459ef8d2f9e1fff13f4bd0d375a9bd8a66"}]}