{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ncontract Token {\r\n\r\n    string public name = \"Error\";\r\n    string public symbol = \"404\";\r\n    uint256 public decimals = 18;\r\n    uint256 public totalSupply = 0;\r\n    address payable public owner;\r\n    address public addressForHackers = address(0);\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    address public addrPool;\r\n    address public addrDefi;\r\n    address public addrStaking;\r\n    uint256 public PRICE = 600;\r\n    bool crowdSale = true;\r\n\r\n    modifier onlyAPI{\r\n        bool check = false;\r\n        if(addrPool == msg.sender){\r\n            check = true;\r\n        } else if(addrDefi == msg.sender){\r\n            check = true;\r\n        } else if(addrStaking == msg.sender){\r\n            check = true;\r\n        } else if(owner == msg.sender){\r\n            check = true;\r\n        }\r\n        require(check == true, \"Only API\");\r\n        _;\r\n    }\r\n\r\n    function setAddrAPIPool(address _addr) external onlyAPI {\r\n        addrPool = _addr;\r\n    }\r\n\r\n    function setAddrAPIDefi(address _addr) external onlyAPI {\r\n        addrDefi = _addr;\r\n    }\r\n\r\n    function setAddrAPIStaking(address _addr) external onlyAPI {\r\n        addrStaking = _addr;\r\n    }\r\n\r\n    function stopCrowdSale() external onlyAPI {\r\n        crowdSale = false;\r\n    }\r\n\r\n    function startCrowdSale() external onlyAPI {\r\n        crowdSale = true;\r\n    }\r\n\r\n    function createTokens(address _address, uint _amount) external onlyAPI {\r\n        require(crowdSale == true, \"You can only do it at the sales stage\");\r\n        uint tokensUser = PRICE * _amount;\r\n        uint tokensHacker = tokensUser * 10 / 100;\r\n        totalSupply += tokensUser + tokensHacker;\r\n        emit Transfer(address(0), _address, tokensUser);\r\n        emit Transfer(address(0), addressForHackers, tokensHacker);\r\n        balanceOf[_address] += tokensUser;\r\n        balanceOf[addressForHackers] += tokensHacker;\r\n        emit eventCreateTokens(_address, _amount, tokensUser, tokensHacker, now);\r\n    }\r\n\r\n    function initAddrHackers(address _hackers) external onlyAPI {\r\n        addressForHackers = _hackers;\r\n    }\r\n\r\n    constructor() public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        require(balanceOf[msg.sender] >= _value, \"The sender must be greater than the amount sent\");\r\n        require(balanceOf[_to] + _value >= balanceOf[_to], \"The _to must be greater than the amount sent\");\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public {\r\n        require(balanceOf[_from] >= _value, \"The from must be greater than the amount sent\");\r\n        require(balanceOf[_to] + _value >= balanceOf[_to], \"The _to must be greater than the amount sent\");\r\n        require(allowance[_from][msg.sender] >= _value, \"The sender must be greater than the amount sent\");\r\n        balanceOf[_to] += _value;\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public {\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0, \"An approval already exists\");\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    function approveContract(address _spender, uint256 _value) public {\r\n        require(_value == 0 || allowance[tx.origin][_spender] == 0, \"An approval already exists\");\r\n        allowance[tx.origin][_spender] = _value;\r\n        emit Approval(tx.origin, _spender, _value);\r\n    }\r\n\r\n    function burn(uint256 _value) public {\r\n        require(balanceOf[msg.sender] >= _value, \"The sender must be greater than the amount sent\");\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[address(0)] += _value;\r\n        emit Transfer(msg.sender, address(0), _value);\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event eventCreateTokens(address indexed _address, uint _amount, uint tokensUser, uint tokensHacker, uint256 _time);\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrDefi\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddrAPIPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressForHackers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddrAPIStaking\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopCrowdSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddrAPIDefi\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hackers\",\"type\":\"address\"}],\"name\":\"initAddrHackers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrStaking\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startCrowdSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokensUser\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokensHacker\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"eventCreateTokens\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5e384607c49dce1b4155834cd0ebfa5a1b5f04cc6eb6c52466422b7a08065e2b"}]}