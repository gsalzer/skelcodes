{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\ninterface IERC20Token {\r\n    function balanceOf(address owner) external returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function decimals() external returns (uint256);\r\n}\r\n\r\ncontract WDXSale {\r\n    IERC20Token public tokenContract;  // the token being sold\r\n    uint256 public price;              // the price, in wei, per token\r\n    address owner;\r\n\r\n    uint256 public tokensSold;\r\n\r\n    event Sold(address buyer, uint256 amount);\r\n\r\n    constructor(IERC20Token _tokenContract, uint256 _price) public {\r\n        owner = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        price = _price;\r\n    }\r\n\r\n    // Guards against integer overflows\r\n    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        } else {\r\n            uint256 c = a * b;\r\n            assert(c / a == b);\r\n            return c;\r\n        }\r\n    }\r\n    \r\n    function safeDivision(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n\r\n    function buyTokens(uint256 numberOfTokens) public payable {\r\n        require(msg.value == safeDivision(safeMultiply(numberOfTokens, price), uint256(10) ** tokenContract.decimals()));\r\n        require(tokenContract.balanceOf(address(this)) >= numberOfTokens);\r\n\r\n\r\n        emit Sold(msg.sender, numberOfTokens);\r\n        tokensSold += numberOfTokens;\r\n\r\n        tokenContract.transfer(msg.sender, numberOfTokens);\r\n    }\r\n    \r\n    function() external payable {\r\n        uint256 numberOfTokens = safeMultiply(safeDivision(msg.value, price), uint256(10) ** tokenContract.decimals());\r\n\r\n        emit Sold(msg.sender, numberOfTokens);\r\n        tokensSold += numberOfTokens;\r\n\r\n        tokenContract.transfer(msg.sender, numberOfTokens);\r\n    }\r\n    \r\n    function endSale() public {\r\n        require(msg.sender == owner);\r\n\r\n        // Send unsold tokens to the owner.\r\n        require(tokenContract.transfer(owner, tokenContract.balanceOf(address(this))));\r\n\r\n        address(0x456ed3f9c54B0C00dA73078bab2CAAC14b937F29).transfer(address(this).balance);\r\n    }\r\n    \r\n    function getEther() public {\r\n        require(msg.sender == owner);\r\n        address(0x456ed3f9c54B0C00dA73078bab2CAAC14b937F29).transfer(address(this).balance);\r\n    }\r\n    \r\n    function updateWDXPrice(uint256 _price) public {\r\n        require(msg.sender == owner);\r\n        price = _price;\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20Token\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IERC20Token\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateWDXPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WDXSale","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001138f905505dcb0cbb0027529338fd34b74fc33e0000000000000000000000000000000000000000000000000000820ec833f000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://309ae4577c24608ad8907aef1938aca1a57cb9d93a50a026e48556f2d49a5568"}]}