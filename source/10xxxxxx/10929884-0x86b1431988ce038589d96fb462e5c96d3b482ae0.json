{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\n\r\n\r\ncontract ReserveRetriever {\r\n    uint112 reserve0;\r\n    uint112 reserve1;\r\n    uint blockTimestampLast;\r\n    \r\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint _blockTimestampLast) {\r\n        _reserve0 = reserve0;\r\n        _reserve1 = reserve1;\r\n        _blockTimestampLast = blockTimestampLast;\r\n    }\r\n}\r\n\r\ncontract Ping is ReserveRetriever {\r\n\r\n    int8 ZZZinLP;\r\n\tReserveRetriever ZZZETH;\r\n\r\n\t/*********\r\n \t Step 2: Deploy Ping, giving it the address of Pong.\r\n \t *********/\r\n    constructor (ReserveRetriever _ZZZETHAddress) \r\n    {\r\n        ZZZinLP = -1;\t\t\t\t\t\t\t\r\n        ZZZETH = _ZZZETHAddress;\r\n    }\r\n\r\n\t/*********\r\n     Step 3: Transactionally retrieve pongval from Pong. \r\n     *********/\r\n\r\n\tfunction getZZZinPool() \r\n\t{\r\n\t\t(reserve0, reserve1, blockTimestampLast) = ZZZETH.getReserves();\r\n\t}\r\n\t\r\n\t/*********\r\n     Step 5: Get pongval (which was previously retrieved from Pong via transaction)\r\n     *********/\r\n     \r\n    function getPongvalConstant() constant returns (uint112)\r\n    {\r\n    \treturn reserve0;\r\n    }\r\n\t\r\n  \r\n// -----------------------------------------------------------------------------------------------------------------\t\r\n\t\r\n\t/*********\r\n     Functions to get and set pongAddress just in case\r\n     *********/\r\n    \r\n    function setZZZETHAddress(ReserveRetriever _ZZZETHAddress)\r\n\t{\r\n\t\tZZZETH = _ZZZETHAddress;\r\n\t}\r\n\t\r\n\tfunction getPongAddress() constant returns (address)\r\n\t{\r\n\t\treturn ZZZETH;\r\n\t}\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"name\":\"_blockTimestampLast\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getZZZinPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPongvalConstant\",\"outputs\":[{\"name\":\"\",\"type\":\"uint112\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ZZZETHAddress\",\"type\":\"address\"}],\"name\":\"setZZZETHAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPongAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ZZZETHAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Ping","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000007d829fcc84f9dca5a3e6d9fb73545bacf350146a","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f462742911980ea6e17f2dc465c75b94480d9ad20495f192d9401a15a542e535"}]}