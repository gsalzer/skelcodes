{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ncontract TryToGetYourMoney {\r\n    mapping(bytes32 => uint) passwordHashToBalance;\r\n    \r\n    function lockEthersWithPassword(\r\n        bytes32 passwordHash\r\n    ) public payable {\r\n        passwordHashToBalance[passwordHash] += msg.value;\r\n    }\r\n    \r\n    function getHash(string memory raw) public view returns(bytes32) {\r\n        return keccak256(abi.encodePacked(raw));\r\n    }\r\n    \r\n    function unlockEthersWithPassword(\r\n        string memory password\r\n    ) public {\r\n        bytes32 passwordHash = getHash(password);\r\n\r\n        require(\r\n            passwordHashToBalance[passwordHash] > 0,\r\n            \"No Ethers locked with specified password\"\r\n        );\r\n        \r\n        msg.sender.transfer(passwordHashToBalance[passwordHash]);\r\n\r\n        passwordHashToBalance[passwordHash] = 0;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"raw\",\"type\":\"string\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"passwordHash\",\"type\":\"bytes32\"}],\"name\":\"lockEthersWithPassword\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"name\":\"unlockEthersWithPassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TryToGetYourMoney","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MPL-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a60199ecb34b2f2ffad39abd1aff50297e2c63bd88379152d91416ff1882cd31"}]}