{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ninterface ERC20Interface {\r\n    function balanceOf(address owner)  external view returns(uint256 balance);\r\n    function transfer(address to, uint value) external returns(bool success);\r\n    function transferFrom(address _from, address _to, uint256 value)  external returns(bool success);\r\n    function Exchange_Price() external view returns(uint256 actual_Price);\r\n}\r\n\r\ncontract WBCATM {\r\n\r\n    address public _owner;\r\n    address public TOKEN_SC;\r\n    address public EXCHNG;\r\n    \r\n    uint8 public Provision;\r\n    uint256 public TOKEN_PRICE;\r\n\r\n    mapping ( address => uint256 ) public Token_Safe;\r\n    mapping ( address => uint256 ) public ETH_Deposit;\r\n\r\n    event Deposit(address user, uint256 amountETH);\r\n    event Exchange(address buyer, uint256 amount, uint paid, uint provision);\r\n    event withdrawBalance(address user, uint256 balanceETH );\r\n    event calculatedAmount(uint256 amount);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"only Owner\");\r\n        _;\r\n    }\r\n\r\n   constructor() public {\r\n        _owner = msg.sender;\r\n        TOKEN_SC = 0x79C90021A36250BcE01f11CFd847Ba30E05488B1;\r\n        TOKEN_PRICE = 0.001 ether;\r\n        Provision = 10;\r\n   }\r\n\r\n    function () external payable {\r\n        require(msg.value > 0);\r\n        ETH_Deposit[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function deposit(uint256 amount) payable public {\r\n        require(msg.value == amount);\r\n        require(amount > 0);\r\n        ETH_Deposit[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function exchangeToken2ETH(uint256 _amountWei) payable public {  \r\n        require(_amountWei > 0,\"Value must more then 0 !\");\r\n        ERC20Interface ERC20Token = ERC20Interface(TOKEN_SC);\r\n        ERC20Token.transferFrom(msg.sender, address(this), _amountWei);\r\n\r\n        Token_Safe[TOKEN_SC] = Token_Safe[TOKEN_SC] + _amountWei ;\r\n        \r\n        uint256 Prov = ((_amountWei* TOKEN_PRICE)/(10**18)) * Provision / 100 ;\r\n        uint256 amountWeiETH = ((_amountWei * TOKEN_PRICE)/(10**18)) - Prov ;\r\n        msg.sender.transfer(amountWeiETH);\r\n        emit Exchange ( msg.sender, _amountWei, amountWeiETH, Prov);\r\n    }\r\n\r\n    function withdrawETH(uint256 amountWeiETH) public payable onlyOwner {\r\n        require(amountWeiETH > 0,\"Value must more then 0 !\");\r\n        uint256 balanceETH;\r\n        balanceETH = address(this).balance;\r\n        require(balanceETH >= amountWeiETH);\r\n        address(uint160(msg.sender)).transfer(amountWeiETH);\r\n    }\r\n\r\n    function withdrawQPON() public onlyOwner {\r\n        require(Token_Safe[TOKEN_SC] > 0,\"Token Safe is empty !\");\r\n        ERC20Interface ERC20Token = ERC20Interface(TOKEN_SC);\r\n        ERC20Token.transfer(msg.sender, Token_Safe[TOKEN_SC]);\r\n        Token_Safe[TOKEN_SC] = 0;\r\n    }\r\n\r\n    function balanceOf() public onlyOwner view returns(uint256 balanceETH) {\r\n        balanceETH = address(this).balance;\r\n    }\r\n\r\n    function balanceOfToken() public view returns(uint256 balanceToken) {\r\n        balanceToken = Token_Safe[TOKEN_SC];\r\n    }\r\n\r\n    function Exchange_Price() public view returns (uint256 actual_Price) {\r\n        return TOKEN_PRICE;\r\n    }\r\n\r\n    function calcul(uint256 a, uint256 b, uint256 precision) internal pure returns (uint256 result) {\r\n        result = a*(10**precision)/b;\r\n    }\r\n\r\n    function set_TOKEN_SCAddress (address _TOKEN_SCAddress) public onlyOwner { \r\n        TOKEN_SC = _TOKEN_SCAddress;\r\n    }\r\n\r\n    function set_EXCHNGAddress (address _exchngSCAddress) public onlyOwner { \r\n        EXCHNG = _exchngSCAddress;\r\n    }\r\n\r\n    function set_Exchange_Price() public onlyOwner {\r\n        ERC20Interface ERC20Exchng = ERC20Interface(EXCHNG);\r\n        TOKEN_PRICE = ERC20Exchng.Exchange_Price();\r\n    }\r\n\r\n    function set_TokenPrice (uint256 _newPrice) public onlyOwner {\r\n        require(_newPrice > 0);\r\n        TOKEN_PRICE = _newPrice;\r\n    }\r\n\r\n    function set_Provision(uint8 setProvision) public onlyOwner {\r\n        Provision = setProvision;\r\n    }\r\n\r\n    function get_ETHDeposit(address _user) public view onlyOwner returns (uint256 BalanceOfUser){\r\n        BalanceOfUser = ETH_Deposit[_user];\r\n    }\r\n    function reset_ETHDeposit(address _user, uint256 BalanceOfUser) public onlyOwner {\r\n        ETH_Deposit[_user] = BalanceOfUser;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"name\":\"Exchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceETH\",\"type\":\"uint256\"}],\"name\":\"withdrawBalance\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ETH_Deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXCHNG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Exchange_Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actual_Price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Provision\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Token_Safe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceETH\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"name\":\"exchangeToken2ETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"get_ETHDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"BalanceOfUser\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"BalanceOfUser\",\"type\":\"uint256\"}],\"name\":\"reset_ETHDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchngSCAddress\",\"type\":\"address\"}],\"name\":\"set_EXCHNGAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"set_Exchange_Price\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"setProvision\",\"type\":\"uint8\"}],\"name\":\"set_Provision\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_TOKEN_SCAddress\",\"type\":\"address\"}],\"name\":\"set_TOKEN_SCAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"set_TokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWeiETH\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawQPON\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WBCATM","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"bzzr://402fbf2b66adcf8e10c79a5b718fe25bf26361cf364d03da576fe56f17811e7c"}]}