{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\n\r\ncontract Profit {\r\n  mapping(bytes32 => bool) public  payed;\r\n  // operator can update snark verification key\r\n  // after the final trusted setup ceremony operator rights are supposed to be transferred to zero address\r\n  address public operator;\r\n  modifier onlyOperator {\r\n    require(msg.sender == operator, \"Only operator can call this function.\");\r\n    _;\r\n  }\r\n\r\n  event  Pay(address wallet,uint256 amount);\r\n\r\n  /**\r\n    @dev The constructor\r\n  */\r\n  constructor (\r\n    address _operator\r\n  ) public{\r\n      operator = _operator;\r\n  }\r\n  function() payable  external{\r\n        \r\n    }\r\n\r\n  function pay(bytes32 key,address payable _wallet,uint256 _amount) external  onlyOperator{\r\n    require(!payed[key], \"The key has been already payed\");\r\n    payed[key] = true;\r\n    (bool success, ) = _wallet.call.value(_amount)(\"\");\r\n    require(success, \"payment to _wallet did not go thru\");\r\n    emit Pay(_wallet,_amount);\r\n  }\r\n\r\n   /** @dev operator can change his address */\r\n  function changeOperator(address _newOperator) external onlyOperator {\r\n    operator = _newOperator;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"payed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Pay\",\"type\":\"event\"}]","ContractName":"Profit","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000149a54eb2c93476e7d97bf69ec27c5286123fdd4","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8acd78da8b5c504361bff429736c39e5f422f107055acb8738bafdc4b073b73f"}]}