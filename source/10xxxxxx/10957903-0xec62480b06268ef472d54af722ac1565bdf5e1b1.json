{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n██████╗ ██╗ ██████╗ █████╗ ██████╗ ██████╗ ██╗ █████╗ ███╗   ██╗\r\n██╔══██╗██║██╔════╝██╔══██╗██╔══██╗██╔══██╗██║██╔══██╗████╗  ██║\r\n██████╔╝██║██║     ███████║██████╔╝██║  ██║██║███████║██╔██╗ ██║\r\n██╔══██╗██║██║     ██╔══██║██╔══██╗██║  ██║██║██╔══██║██║╚██╗██║\r\n██║  ██║██║╚██████╗██║  ██║██║  ██║██████╔╝██║██║  ██║██║ ╚████║\r\n╚═╝  ╚═╝╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝\r\n██╗     ██╗      ██████╗                                        \r\n██║     ██║     ██╔════╝                                        \r\n██║     ██║     ██║                                             \r\n██║     ██║     ██║                                             \r\n███████╗███████╗╚██████╗   \r\nDEAR MSG.SENDER(S):\r\n/ Ricardian LLC is a project in beta.\r\n// Please audit and use at your own risk.\r\n/// Entry into Ricardian LLC shall not create an attorney/client relationship.\r\n//// Likewise, Ricardian LLC should not be construed as legal advice or replacement for professional counsel.\r\n///// STEAL THIS C0D3SL4W\r\n~presented by Open, ESQ || LexDAO LLC\r\n*/\r\n\r\npragma solidity 0.5.17;\r\n\r\ncontract RicardianLLC { // based on GAMMA nft - 0xeF0ff94B152C00ED4620b149eE934f2F4A526387\r\n    address payable public ricardianLLCdao;\r\n    uint256 public mintFee;\r\n    uint256 public totalSupply;\r\n    uint256 public constant totalSupplyCap = uint256(-1);\r\n    uint256 public version;\r\n    string public masterOperatingAgreement;\r\n    string public name = \"Ricardian LLC, Series\";\r\n    string public symbol = \"LLC\";\r\n    bool public mintOpen;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(uint256 => address) public getApproved;\r\n    mapping(uint256 => address) public ownerOf;\r\n    mapping(uint256 => uint256) public tokenByIndex;\r\n    mapping(uint256 => string) public tokenURI;\r\n    mapping(bytes4 => bool) public supportsInterface; // eip-165 \r\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\r\n    mapping(address => mapping(uint256 => uint256)) public tokenOfOwnerByIndex;\r\n    \r\n    event Approval(address indexed approver, address indexed spender, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed holder, address indexed operator, bool approved);\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event UpdateMasterOperatingAgreement(uint256 indexed version, string indexed masterOperatingAgreement);\r\n    event UpdateMintFee(uint256 indexed mintFee);\r\n    event UpdateMintStatus(bool indexed mintOpen);\r\n    event UpdateRicardianLLCdao(address indexed ricardianLLCdao);\r\n\r\n    constructor (string memory _masterOperatingAgreement) public {\r\n        ricardianLLCdao = msg.sender;\r\n        masterOperatingAgreement = _masterOperatingAgreement;\r\n        supportsInterface[0x80ac58cd] = true; // ERC721 \r\n        supportsInterface[0x5b5e139f] = true; // METADATA\r\n        supportsInterface[0x780e9d63] = true; // ENUMERABLE\r\n    }\r\n    \r\n    function approve(address spender, uint256 tokenId) external {\r\n        require(msg.sender == ownerOf[tokenId] || isApprovedForAll[ownerOf[tokenId]][msg.sender], \"!owner/operator\");\r\n        getApproved[tokenId] = spender;\r\n        emit Approval(msg.sender, spender, tokenId); \r\n    }\r\n    \r\n    function mint() payable external { \r\n        if (!mintOpen) {require(msg.sender == ricardianLLCdao);}\r\n        require(msg.value == mintFee);\r\n        totalSupply++;\r\n        require(totalSupply <= totalSupplyCap, \"capped\");\r\n        uint256 tokenId = totalSupply;\r\n        balanceOf[msg.sender]++;\r\n        ownerOf[tokenId] = msg.sender;\r\n        tokenByIndex[tokenId - 1] = tokenId;\r\n        tokenURI[tokenId] = \"https://ipfs.globalupload.io/QmWnD9Tv6YGyMFCytGvoGTvnaGU8B6GPWWt1FwKfkuKD4V\";\r\n        tokenOfOwnerByIndex[msg.sender][tokenId - 1] = tokenId;\r\n        (bool success, ) = ricardianLLCdao.call.value(msg.value)(\"\");\r\n        require(success, \"!transfer\");\r\n        emit Transfer(address(0), msg.sender, tokenId); \r\n    }\r\n    \r\n    function setApprovalForAll(address operator, bool approved) external {\r\n        isApprovedForAll[msg.sender][operator] = approved;\r\n        emit ApprovalForAll(msg.sender, operator, approved);\r\n    }\r\n    \r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        balanceOf[from]--; \r\n        balanceOf[to]++; \r\n        getApproved[tokenId] = address(0);\r\n        ownerOf[tokenId] = to;\r\n        tokenOfOwnerByIndex[from][tokenId - 1] = 0;\r\n        tokenOfOwnerByIndex[to][tokenId - 1] = tokenId;\r\n        emit Transfer(from, to, tokenId); \r\n    }\r\n    \r\n    function transfer(address to, uint256 tokenId) external {\r\n        require(msg.sender == ownerOf[tokenId], \"!owner\");\r\n        _transfer(msg.sender, to, tokenId);\r\n    }\r\n    \r\n    function transferBatch(address[] calldata to, uint256[] calldata tokenId) external {\r\n        require(to.length == tokenId.length, \"!to/tokenId\");\r\n        for (uint256 i = 0; i < to.length; i++) {\r\n            require(msg.sender == ownerOf[tokenId[i]], \"!owner\");\r\n            _transfer(msg.sender, to[i], tokenId[i]);\r\n        }\r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint256 tokenId) external {\r\n        require(msg.sender == ownerOf[tokenId] || getApproved[tokenId] == msg.sender || isApprovedForAll[ownerOf[tokenId]][msg.sender], \"!owner/spender/operator\");\r\n        _transfer(from, to, tokenId);\r\n    }\r\n    \r\n    /************\r\n    DAO FUNCTIONS\r\n    ************/\r\n    modifier onlyRicardianLLCdao() {\r\n        require(msg.sender == ricardianLLCdao, \"!ricardianLLCdao\");\r\n        _;\r\n    }\r\n\r\n    function updateMasterOperatingAgreement(string calldata _masterOperatingAgreement) external onlyRicardianLLCdao {\r\n        version++;\r\n        masterOperatingAgreement = _masterOperatingAgreement;\r\n        emit UpdateMasterOperatingAgreement(version, masterOperatingAgreement);\r\n    }\r\n\r\n    function updateMintFee(uint256 _mintFee) external onlyRicardianLLCdao {\r\n        mintFee = _mintFee;\r\n        emit UpdateMintFee(mintFee);\r\n    }\r\n    \r\n    function updateMintStatus(bool _mintOpen) external onlyRicardianLLCdao {\r\n        mintOpen = _mintOpen;\r\n        emit UpdateMintStatus(mintOpen);\r\n    }\r\n\r\n    function updateRicardianLLCdao(address payable _ricardianLLCdao) external onlyRicardianLLCdao {\r\n        ricardianLLCdao = _ricardianLLCdao;\r\n        emit UpdateRicardianLLCdao(ricardianLLCdao);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_masterOperatingAgreement\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"masterOperatingAgreement\",\"type\":\"string\"}],\"name\":\"UpdateMasterOperatingAgreement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"name\":\"UpdateMintFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"mintOpen\",\"type\":\"bool\"}],\"name\":\"UpdateMintStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ricardianLLCdao\",\"type\":\"address\"}],\"name\":\"UpdateRicardianLLCdao\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterOperatingAgreement\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ricardianLLCdao\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_masterOperatingAgreement\",\"type\":\"string\"}],\"name\":\"updateMasterOperatingAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintFee\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_mintOpen\",\"type\":\"bool\"}],\"name\":\"updateMintStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_ricardianLLCdao\",\"type\":\"address\"}],\"name\":\"updateRicardianLLCdao\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"RicardianLLC","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004b68747470733a2f2f697066732e676c6f62616c75706c6f61642e696f2f516d626556397756697332744e6857504e347236764a4b6271316571596165413134694732766d72396575665959000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4b6e74d72c83e90df1be6c2933307cfd77a9ccab9cf242e16797b17b61e19bb6"}]}