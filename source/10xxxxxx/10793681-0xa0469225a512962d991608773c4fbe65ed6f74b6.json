{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\nlibrary SafeMath\r\n{\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256)\r\n  {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Variable\r\n{\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public decimals;\r\n  uint256 public totalSupply;\r\n  address public owner;\r\n  address public watchdog;\r\n\r\n  uint256 internal _decimals;\r\n  bool internal transferLock;\r\n  \r\n  mapping (address => bool) public allowedAddress;\r\n  mapping (address => bool) public blockedAddress;\r\n\r\n  mapping (address => uint256) public balanceOf;\r\n\r\n  address public newWatchdog;\r\n  address public newOwner;\r\n\r\n  constructor() public\r\n  {\r\n    name = \"FINL\";\r\n    symbol = \"FIN\";\r\n    decimals = 18;\r\n    _decimals = 10 ** uint256(decimals);\r\n    totalSupply = _decimals * 520000000;\r\n    transferLock = true;\r\n    owner =  msg.sender;\r\n    balanceOf[owner] = totalSupply;\r\n    watchdog = 0xADff76971879f4285df9d0bcc7893E388b1479BE;\r\n    allowedAddress[owner] = true;\r\n    newWatchdog = address(0);\r\n    newOwner = address(0);\r\n  }\r\n}\r\n\r\ncontract Modifiers is Variable\r\n{\r\n\r\n  modifier isOwner\r\n  {\r\n    assert(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n  modifier isValidAddress\r\n  {\r\n    assert(address(0) != msg.sender);\r\n    _;\r\n  }\r\n\r\n  modifier isWatchdog\r\n  {\r\n    assert(watchdog == msg.sender);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public isWatchdog\r\n  {\r\n      newOwner = _newOwner;\r\n  }\r\n\r\n  function transferOwnershipWatchdog(address _newWatchdog) public isOwner\r\n  {\r\n      newWatchdog = _newWatchdog;\r\n  }\r\n\r\n  function acceptOwnership() public isOwner\r\n  {\r\n      require(newOwner != address(0));\r\n      owner = newOwner;\r\n      newOwner = address(0);\r\n  }\r\n\r\n  function acceptOwnershipWatchdog() public isWatchdog\r\n  {\r\n      require(newWatchdog != address(0));\r\n      watchdog = newWatchdog;\r\n      newWatchdog = address(0);\r\n  }\r\n}\r\n\r\ncontract Event\r\n{\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event TokenBurn(address indexed from, uint256 value);\r\n}\r\n\r\ncontract manageAddress is Variable, Modifiers, Event\r\n{\r\n  function add_allowedAddress(address _address) public isOwner\r\n  {\r\n    allowedAddress[_address] = true;\r\n  }\r\n  function delete_allowedAddress(address _address) public isOwner\r\n  {\r\n    require(_address != owner);\r\n    allowedAddress[_address] = false;\r\n  }\r\n  function add_blockedAddress(address _address) public isOwner\r\n  {\r\n    require(_address != owner);\r\n    blockedAddress[_address] = true;\r\n  }\r\n  function delete_blockedAddress(address _address) public isOwner\r\n  {\r\n    blockedAddress[_address] = false;\r\n  }\r\n}\r\ncontract Admin is Variable, Modifiers, Event\r\n{\r\n  function admin_transferFrom(address _from, uint256 _value) public isOwner returns(bool success)\r\n  {\r\n    require(balanceOf[_from] >= _value);\r\n    require(balanceOf[owner] + (_value ) >= balanceOf[owner]);\r\n    balanceOf[_from] -= _value;\r\n    balanceOf[owner] += _value;\r\n    emit Transfer(_from, owner, _value);\r\n    return true;\r\n  }\r\n  function admin_tokenBurn(uint256 _value) public isOwner returns(bool success)\r\n  {\r\n    require(balanceOf[msg.sender] >= _value);\r\n    balanceOf[msg.sender] -= _value;\r\n    totalSupply -= _value;\r\n    emit TokenBurn(msg.sender, _value);\r\n    return true;\r\n  }\r\n}\r\ncontract Get is Variable, Modifiers\r\n{\r\n  function get_transferLock() public view returns(bool)\r\n  {\r\n    return transferLock;\r\n  }\r\n  function get_blockedAddress(address _address) public view returns(bool)\r\n  {\r\n    return blockedAddress[_address];\r\n  }\r\n}\r\n\r\ncontract Set is Variable, Modifiers, Event\r\n{\r\n  function setTransferLock(bool _transferLock) public isOwner returns(bool success)\r\n  {\r\n    transferLock = _transferLock;\r\n    return true;\r\n  }\r\n}\r\n\r\ncontract FINL is Variable, Event, Get, Set, manageAddress\r\n{\r\n  using SafeMath for uint256;\r\n\r\n  function() external payable \r\n  {\r\n    revert();\r\n  }\r\n  \r\n  function transfer(address _to, uint256 _value) public isValidAddress\r\n  {\r\n\trequire(allowedAddress[msg.sender] || transferLock == false);\r\n    require(!blockedAddress[msg.sender] && !blockedAddress[_to]);\r\n    require(balanceOf[msg.sender] >= _value && _value > 0);\r\n    require((balanceOf[_to].add(_value)) >= balanceOf[_to] );\r\n    \r\n    balanceOf[msg.sender] -= _value;\r\n    balanceOf[_to] += _value;\r\n    emit Transfer(msg.sender, _to, _value);\r\n  }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnershipWatchdog\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"add_allowedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"add_blockedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"delete_allowedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"delete_blockedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"get_blockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_transferLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newWatchdog\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_transferLock\",\"type\":\"bool\"}],\"name\":\"setTransferLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWatchdog\",\"type\":\"address\"}],\"name\":\"transferOwnershipWatchdog\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"watchdog\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FINL","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://417e4a088b850f4432ea2efa9e90d98d2dd11354490237282427673685232227"}]}