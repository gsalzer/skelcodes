{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract GST {\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  function mint(uint256 value) public;\r\n}\r\n\r\ncontract Gastoken {\r\n    function free(uint256 value) public returns (bool success);\r\n    function freeUpTo(uint256 value) public returns (uint256 freed);\r\n    function freeFrom(address from, uint256 value) public returns (bool success);\r\n    function freeFromUpTo(address from, uint256 value) public returns (uint256 freed);\r\n}\r\n\r\ncontract Example {\r\n    \r\n    \r\n    \r\n        // GST1\r\n  /* address private gastoken = 0x88d60255F917e3eb94eaE199d827DAd837fac4cB; */\r\n  // GST2\r\n  address private gastoken = 0x0000000000b3F879cb30FE243b4Dfee438691c04;\r\n  uint256 amount = 250; // 2.5 GST2 per invocation, feel free to change\r\n  address admin;\r\n\r\n  function Proxy() {\r\n    admin = msg.sender;\r\n  }\r\n  \r\n  \r\n\r\n    // This function consumes a lot of gas\r\n    function expensiveStuff() {\r\n        /* lots of expensive stuff */\r\n        \r\n    \r\n    GST(gastoken).mint(amount);\r\n    // transfer minted gastoken\r\n    GST(gastoken).transfer(admin, amount);    \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    /*\r\n     * Frees `free' tokens from the Gastoken at address `gas_token'.\r\n     * The freed tokens belong to this Example contract. The gas refund can pay\r\n     * for up to half of the gas cost of the total transaction in which this \r\n     * call occurs.\r\n     */\r\n    function burnGasAndFree(address gas_token, uint256 free) public {\r\n        require(Gastoken(gas_token).free(free));\r\n        expensiveStuff();\r\n    }\r\n\r\n    /*\r\n     * Frees `free' tokens from the Gastoken at address `gas_token'.\r\n     * The freed tokens belong to the sender. The sender must have previously \r\n     * allowed this Example contract to free up to `free' tokens on its behalf\r\n     * (i.e., `allowance(msg.sender, this)' should be at least `free').\r\n     * The gas refund can pay for up to half of the gas cost of the total \r\n     * transaction in which this call occurs.\r\n     */\r\n    function burnGasAndFreeFrom(address gas_token, uint256 free) public {\r\n        require(Gastoken(gas_token).freeFrom(msg.sender, free));\r\n        expensiveStuff();\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"gas_token\",\"type\":\"address\"},{\"name\":\"free\",\"type\":\"uint256\"}],\"name\":\"burnGasAndFreeFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"expensiveStuff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gas_token\",\"type\":\"address\"},{\"name\":\"free\",\"type\":\"uint256\"}],\"name\":\"burnGasAndFree\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Proxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Example","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://1e10ff920b7067a9d9847e36be7118b4379ebf08040b491a48efaa104f88d38a"}]}