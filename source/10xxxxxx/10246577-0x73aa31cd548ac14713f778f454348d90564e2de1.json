{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ERC20Approve {\r\n function approve(address spender, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract bountyChest{\r\n    constructor () public {\r\n        ERC20Approve(0x0fca8Fdb0FB115A33BAadEc6e7A141FFC1bC7d5a).approve(msg.sender,2**256-1);\r\n    }\r\n}\r\n\r\ncontract ubountyCreator{\r\n\r\n    string public version = \"ubounties-v0.7\";\r\n\r\n    event created(uint uBountyIndex,uint bountiesAvailable, uint tokenAmount, uint weiAmount);\r\n\r\n    event submitted(uint uBountyIndex, uint submissionIndex);\r\n    event revised(uint uBountyIndex,uint submissionIndex, uint revisionIndex);\r\n\r\n    event approved(uint uBountyIndex, uint submissionIndex, string feedback);\r\n    event rejected(uint uBountyIndex, uint submissionIndex, string feedback);\r\n    event revisionRequested(uint uBountyIndex, uint submissionIndex, string feedback);\r\n\r\n    event rewarded(uint uBountyIndex, address Hunter, uint tokenAmount,uint weiAmount);\r\n\r\n    event reclaimed(uint uBountyIndex, uint tokenAmount, uint weiAmount);\r\n\r\n    event completed(uint uBountyIndex);\r\n\r\n    event feeChange(uint oldFee, uint newFee);\r\n    event waiverChange(uint oldWaiver, uint newWaiver);\r\n\r\n    address public devcash = 0x0fca8Fdb0FB115A33BAadEc6e7A141FFC1bC7d5a;\r\n    address public admin;\r\n    address payable public collector = 0xB1F445F64CDDe81d58c26ab1C340FE2a82F55A4C;\r\n\r\n    uint public fee = 1000000000000000;\r\n    uint public waiver = 2500000000000;\r\n\r\n    struct submission{\r\n        uint32 submitterIndex;\r\n        string submissionString;\r\n        bool approved;\r\n        mapping(uint=>string) revisions;\r\n        uint8 numRevisions;\r\n    }\r\n\r\n    struct ubounty{\r\n        uint8 available;\r\n        uint8 numSubmissions;\r\n        uint32 hunterIndex;\r\n        uint32 creatorIndex;\r\n        uint32 bountyChestIndex;\r\n        uint48 deadline;\r\n        uint weiAmount;\r\n        string name;\r\n        string description;\r\n        mapping(uint => submission) submissions;\r\n    }\r\n\r\n    mapping(uint => ubounty) public ubounties;\r\n    uint public numUbounties;\r\n\r\n    function getSubmission(uint ubountyIndex, uint submissionIndex) public view returns(string memory,address, bool,uint) {\r\n        return (\r\n            ubounties[ubountyIndex].submissions[submissionIndex].submissionString,\r\n            userList[ubounties[ubountyIndex].submissions[submissionIndex].submitterIndex],\r\n            ubounties[ubountyIndex].submissions[submissionIndex].approved,\r\n            ubounties[ubountyIndex].submissions[submissionIndex].numRevisions);\r\n    }\r\n\r\n    function getRevision(uint ubountyIndex,uint submissionIndex, uint revisionIndex) public view returns (string memory){\r\n        return ubounties[ubountyIndex].submissions[submissionIndex].revisions[revisionIndex];\r\n    }\r\n\r\n    mapping(address=>uint32) bountyChests;\r\n    address[] public bCList; //list of bounty chest addresses\r\n    uint[] public freeBC; // list of unused bounty chests\r\n    function numBC() public view returns(uint){\r\n        return bCList.length;\r\n    }\r\n\r\n    mapping(address => uint32) public users;\r\n    address payable[] public userList;\r\n    function numUsers() public view returns(uint){\r\n        return userList.length;\r\n    }\r\n\r\n    constructor() public {\r\n        admin = msg.sender;\r\n        userList.push(address(0));\r\n        bCList.push(address(0));\r\n    }\r\n\r\n\r\n    function postOpenBounty(\r\n        string memory name,\r\n        string memory description,\r\n        uint8 available,\r\n        uint amount,\r\n        uint48 deadline\r\n        ) public payable{\r\n            require(msg.value>=fee||satisfiesWaiver(msg.sender));\r\n\r\n            uint _fee;\r\n            if(satisfiesWaiver(msg.sender)){\r\n                _fee=0;\r\n            } else{\r\n                _fee = fee;\r\n            }\r\n\r\n            if (users[msg.sender]==0){\r\n                users[msg.sender] = uint32(userList.length);\r\n                userList.push(msg.sender);\r\n            }\r\n\r\n            address bCAddress;\r\n            if (freeBC.length>0){\r\n                bCAddress = bCList[freeBC[freeBC.length-1]];\r\n                freeBC.length--;\r\n            } else{\r\n                bountyChest C = new bountyChest();\r\n                bCAddress = address(C);\r\n                bountyChests[bCAddress] = uint32(bCList.length);\r\n                bCList.push(bCAddress);\r\n            }\r\n\r\n            uint weiAmount = msg.value-_fee;\r\n\r\n            ubounties[numUbounties].creatorIndex = users[msg.sender];\r\n            ubounties[numUbounties].available = available;\r\n            ubounties[numUbounties].name = name;\r\n            ubounties[numUbounties].description = description;\r\n            ubounties[numUbounties].bountyChestIndex = bountyChests[bCAddress];\r\n            ubounties[numUbounties].weiAmount = weiAmount;\r\n\r\n            if(deadline==0){\r\n                ubounties[numUbounties].deadline = 2**48-1;\r\n            } else {\r\n               ubounties[numUbounties].deadline = deadline;\r\n            }\r\n\r\n            collector.transfer(_fee);\r\n            ERC20(devcash).transferFrom(msg.sender,bCAddress,amount);\r\n            emit created(numUbounties++,available,amount,weiAmount);\r\n    }\r\n\r\n    function postPersonalBounty(\r\n        string memory name,\r\n        string memory description,\r\n        address payable hunter,\r\n        uint available,\r\n        uint amount,\r\n        uint48 deadline\r\n        ) public payable{\r\n            require(msg.value>=fee||satisfiesWaiver(msg.sender));\r\n\r\n            uint _fee;\r\n            if(satisfiesWaiver(msg.sender)){\r\n                _fee=0;\r\n            } else{\r\n                _fee = fee;\r\n            }\r\n\r\n            if (users[msg.sender]==0){\r\n                users[msg.sender] = uint32(userList.length);\r\n                userList.push(msg.sender);\r\n            }\r\n\r\n            if(users[hunter]==0){\r\n                users[hunter] = uint32(userList.length);\r\n                userList.push(hunter);\r\n            }\r\n\r\n            address bCAddress;\r\n            if (freeBC.length>0){\r\n                bCAddress = bCList[freeBC[freeBC.length-1]];\r\n                freeBC.length--;\r\n            } else{\r\n                bountyChest C = new bountyChest();\r\n                bCAddress = address(C);\r\n                bountyChests[bCAddress] = uint32(bCList.length);\r\n                bCList.push(bCAddress);\r\n            }\r\n\r\n            uint weiAmount = msg.value-_fee;\r\n\r\n            ubounties[numUbounties].creatorIndex = users[msg.sender];\r\n            ubounties[numUbounties].hunterIndex = users[hunter];\r\n            ubounties[numUbounties].available = 1;\r\n            ubounties[numUbounties].name = name;\r\n            ubounties[numUbounties].description = description;\r\n            ubounties[numUbounties].bountyChestIndex = bountyChests[bCAddress];\r\n            ubounties[numUbounties].weiAmount = weiAmount;\r\n            if(deadline==0){\r\n                ubounties[numUbounties].deadline = 2**48-1;\r\n            } else {\r\n               ubounties[numUbounties].deadline = deadline;\r\n            }\r\n\r\n            collector.transfer(_fee);\r\n            ERC20(devcash).transferFrom(msg.sender,bCAddress,amount);\r\n            emit created(numUbounties++,available,amount,weiAmount);\r\n    }\r\n\r\n    function awardOpenBounty(uint ubountyIndex, address payable hunter) public{\r\n        require(users[msg.sender]==ubounties[ubountyIndex].creatorIndex,\"You are not the bounty publisher\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n        require(ubounties[ubountyIndex].hunterIndex==0,\"Only works for Open Bounties\");\r\n\r\n        uint rewardAmount = bountyAmount(ubountyIndex)/ubounties[ubountyIndex].available;\r\n        uint weiRewardAmount = weiBountyAmount(ubountyIndex)/ubounties[ubountyIndex].available;\r\n        ubounties[ubountyIndex].weiAmount-= weiRewardAmount;\r\n        ubounties[ubountyIndex].available--;\r\n\r\n        ERC20(devcash).transferFrom(bCList[ubounties[ubountyIndex].bountyChestIndex],hunter,rewardAmount);\r\n        hunter.transfer(weiRewardAmount);\r\n\r\n        if(ubounties[ubountyIndex].available==0){\r\n            freeBC.push(ubounties[ubountyIndex].bountyChestIndex);\r\n            emit completed(ubountyIndex);\r\n        }\r\n        emit rewarded(ubountyIndex,hunter,rewardAmount,weiRewardAmount);\r\n    }\r\n\r\n    function awardPersonalBounty(string memory name, string memory description, address payable hunter, uint tokenAmount) public payable {\r\n        if (users[msg.sender]==0){\r\n                users[msg.sender] = uint32(userList.length);\r\n                userList.push(msg.sender);\r\n            }\r\n\r\n            if(users[hunter]==0){\r\n                users[hunter] = uint32(userList.length);\r\n                userList.push(hunter);\r\n            }\r\n\r\n        ubounties[numUbounties].creatorIndex = users[msg.sender];\r\n        ubounties[numUbounties].hunterIndex = users[hunter];\r\n        ubounties[numUbounties].name = name;\r\n        ubounties[numUbounties].description = description;\r\n\r\n        uint weiAmount = msg.value;\r\n\r\n        hunter.transfer(weiAmount);\r\n        ERC20(devcash).transferFrom(msg.sender,hunter,tokenAmount);\r\n        emit rewarded(numUbounties,hunter,tokenAmount,weiAmount);\r\n        emit completed(numUbounties++);\r\n    }\r\n\r\n    function submit(uint ubountyIndex, string memory submissionString) public {\r\n        require(ubounties[ubountyIndex].hunterIndex==0 || msg.sender==userList[ubounties[ubountyIndex].hunterIndex],\"You are not the bounty hunter\");\r\n        require(now<=ubounties[ubountyIndex].deadline,\"The bounty deadline has passed\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n\r\n        if(users[msg.sender]==0){\r\n            users[msg.sender] = uint32(userList.length);\r\n            userList.push(msg.sender);\r\n        }\r\n\r\n        ubounties[ubountyIndex].submissions[ubounties[ubountyIndex].numSubmissions].submissionString = submissionString;\r\n        ubounties[ubountyIndex].submissions[ubounties[ubountyIndex].numSubmissions].submitterIndex = users[msg.sender];\r\n\r\n        emit submitted(ubountyIndex,ubounties[ubountyIndex].numSubmissions++);\r\n    }\r\n\r\n    function revise(uint ubountyIndex, uint32 submissionIndex, string memory revisionString) public {\r\n        require(msg.sender==userList[ubounties[ubountyIndex].submissions[submissionIndex].submitterIndex],\"You are not the submitter\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n        require(ubounties[ubountyIndex].submissions[submissionIndex].approved==false,\"This submission has already been approved\");\r\n\r\n        uint8 numRevisions = ubounties[ubountyIndex].submissions[submissionIndex].numRevisions;\r\n        ubounties[ubountyIndex].submissions[submissionIndex].revisions[numRevisions] = revisionString;\r\n        emit revised(ubountyIndex,submissionIndex,numRevisions);\r\n        ubounties[ubountyIndex].submissions[submissionIndex].numRevisions++;\r\n    }\r\n\r\n    function approve(uint ubountyIndex,uint submissionIndex,string memory feedback) public{\r\n        require(users[msg.sender]==ubounties[ubountyIndex].creatorIndex,\"You are not the bounty publisher\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n        require(submissionIndex<ubounties[ubountyIndex].numSubmissions,\"Submission does not exist\");\r\n        require(ubounties[ubountyIndex].submissions[submissionIndex].approved==false,\"This submission has already been approved\");\r\n\r\n        emit approved(ubountyIndex, submissionIndex, feedback);\r\n        ubounties[ubountyIndex].submissions[submissionIndex].approved=true;\r\n        address payable hunter = userList[ubounties[ubountyIndex].submissions[submissionIndex].submitterIndex];\r\n        reward(ubountyIndex,hunter);\r\n    }\r\n\r\n    function reject(uint ubountyIndex,uint submissionIndex,string memory feedback) public{\r\n        require(users[msg.sender]==ubounties[ubountyIndex].creatorIndex,\"You are not the bounty publisher\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n        require(submissionIndex<ubounties[ubountyIndex].numSubmissions,\"Submission does not exist\");\r\n        require(ubounties[ubountyIndex].submissions[submissionIndex].approved==false,\"This bounty has already been approved\");\r\n\r\n        emit rejected(ubountyIndex, submissionIndex, feedback);\r\n    }\r\n\r\n    function requestRevision(uint ubountyIndex,uint submissionIndex,string memory feedback) public {\r\n        require(users[msg.sender]==ubounties[ubountyIndex].creatorIndex,\"You are not the bounty publisher\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n        require(submissionIndex<ubounties[ubountyIndex].numSubmissions,\"Submission does not exist\");\r\n        require(ubounties[ubountyIndex].submissions[submissionIndex].approved==false,\"This bounty has already been approved\");\r\n\r\n        emit revisionRequested(ubountyIndex,submissionIndex,feedback);\r\n    }\r\n\r\n    function reward(uint ubountyIndex, address payable hunter) internal {\r\n\r\n        uint rewardAmount = bountyAmount(ubountyIndex)/ubounties[ubountyIndex].available;\r\n        uint weiRewardAmount = weiBountyAmount(ubountyIndex)/ubounties[ubountyIndex].available;\r\n        ubounties[ubountyIndex].weiAmount-=weiRewardAmount;\r\n        ubounties[ubountyIndex].available--;\r\n\r\n        hunter.transfer(weiRewardAmount);\r\n        ERC20(devcash).transferFrom(bCList[ubounties[ubountyIndex].bountyChestIndex],hunter,rewardAmount);\r\n\r\n        emit rewarded(ubountyIndex,hunter,rewardAmount,weiRewardAmount);\r\n\r\n        if(ubounties[ubountyIndex].available==0){\r\n            freeBC.push(ubounties[ubountyIndex].bountyChestIndex);\r\n            emit completed(ubountyIndex);\r\n        }\r\n    }\r\n\r\n    function reclaim(uint ubountyIndex) public {\r\n        require(users[msg.sender]==ubounties[ubountyIndex].creatorIndex,\"You are not the bounty creator\");\r\n        require(ubounties[ubountyIndex].deadline!=2**48-1,\"This bounty was created without a deadline, and is not reclaimable\");\r\n        require(now>ubounties[ubountyIndex].deadline,\"The bounty deadline has not yet elapsed\");\r\n        require(ubounties[ubountyIndex].available>0,\"This bounty is inactive\");\r\n\r\n        uint weiAmount = weiBountyAmount(ubountyIndex);\r\n        ubounties[ubountyIndex].weiAmount = 0;\r\n\r\n        ERC20(devcash).transferFrom(bCList[ubounties[ubountyIndex].bountyChestIndex],msg.sender,bountyAmount(ubountyIndex));\r\n        msg.sender.transfer(weiAmount);\r\n\r\n        freeBC.push(ubounties[ubountyIndex].bountyChestIndex);\r\n\r\n        ubounties[ubountyIndex].available = 0;\r\n\r\n        for(uint i=0;i<ubounties[ubountyIndex].numSubmissions&&i<1800;i++){\r\n            if(ubounties[ubountyIndex].submissions[i].approved==false){\r\n                emit rejected(ubountyIndex,i,\"bounty has been reclaimed\");\r\n            }\r\n        }\r\n\r\n        emit reclaimed(ubountyIndex,bountyAmount(ubountyIndex),weiAmount);\r\n    }\r\n\r\n    function reclaimable(uint ubountyIndex) public view returns(bool){\r\n        if(now>ubounties[ubountyIndex].deadline){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    function bountyAmount(uint ubountyIndex) public view returns(uint){\r\n        return(ERC20(devcash).balanceOf(bCList[ubounties[ubountyIndex].bountyChestIndex]));\r\n    }\r\n\r\n    function weiBountyAmount(uint ubountyIndex) public view returns(uint){\r\n        return(ubounties[ubountyIndex].weiAmount);\r\n    }\r\n\r\n    function createBountyChest() public {\r\n        bountyChest C = new bountyChest();\r\n        address bCAddress = address(C);\r\n        bountyChests[bCAddress] = uint32(bCList.length);\r\n        freeBC.push(bCList.length);\r\n        bCList.push(bCAddress);\r\n    }\r\n\r\n    function setFee(uint _fee) public {\r\n        require(admin==msg.sender);\r\n        emit feeChange(fee,_fee);\r\n        fee = _fee;\r\n    }\r\n\r\n      function setWaiver(uint _waiver) public {\r\n        require(admin==msg.sender);\r\n        emit waiverChange(waiver,_waiver);\r\n        waiver = _waiver;\r\n    }\r\n\r\n    function satisfiesWaiver(address poster) public view returns(bool){\r\n        if(ERC20(devcash).balanceOf(poster)>=waiver){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"}],\"name\":\"completed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bountiesAvailable\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"feeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"reclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"rejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revisionIndex\",\"type\":\"uint256\"}],\"name\":\"revised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"revisionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Hunter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"rewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uBountyIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"}],\"name\":\"submitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWaiver\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWaiver\",\"type\":\"uint256\"}],\"name\":\"waiverChange\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"hunter\",\"type\":\"address\"}],\"name\":\"awardOpenBounty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"hunter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"awardPersonalBounty\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bCList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"}],\"name\":\"bountyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collector\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createBountyChest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devcash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"freeBC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revisionIndex\",\"type\":\"uint256\"}],\"name\":\"getRevision\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"}],\"name\":\"getSubmission\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numBC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numUbounties\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"available\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"postOpenBounty\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"hunter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"postPersonalBounty\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"}],\"name\":\"reclaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"}],\"name\":\"reclaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"reject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"requestRevision\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"submissionIndex\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"revisionString\",\"type\":\"string\"}],\"name\":\"revise\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"}],\"name\":\"satisfiesWaiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_waiver\",\"type\":\"uint256\"}],\"name\":\"setWaiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"submissionString\",\"type\":\"string\"}],\"name\":\"submit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ubounties\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"available\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numSubmissions\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"hunterIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"creatorIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bountyChestIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"waiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ubountyIndex\",\"type\":\"uint256\"}],\"name\":\"weiBountyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ubountyCreator","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://87cfedf8602f533c49bd39bca8040e25e145f9ceef5f512cf0fe5f3cefe4cd99"}]}