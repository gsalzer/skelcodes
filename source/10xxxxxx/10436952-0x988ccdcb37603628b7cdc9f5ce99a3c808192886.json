{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract TransferTool {\r\n    address owner = 0x0;\r\n    function TransferTool () public  payable{//添加payable,支持在创建合约的时候，value往合约里面传eth\r\n        owner = msg.sender;\r\n    }\r\n    //批量转账\r\n    function transferEthsAvg(address[] _tos) payable public returns (bool) {//添加payable,支持在调用方法的时候，value往合约里面传eth，注意该value最终平分发给所有账户\r\n                require(_tos.length > 0);\r\n                require(msg.sender == owner);\r\n                var vv = this.balance/_tos.length;\r\n                for(uint32 i=0;i<_tos.length;i++){\r\n                   _tos[i].transfer(vv);\r\n                }\r\n             return true;\r\n    }\r\n    //添加payable,支持在调用方法的时候，value往合约里面传eth，注意该value最终平分发给所有账户\r\n    function transferEths(address[] _tos,uint256[] values) payable public returns (bool) {\r\n                require(_tos.length > 0);\r\n                require(msg.sender == owner);\r\n                for(uint32 i=0;i<_tos.length;i++){\r\n                   _tos[i].transfer(values[i]);\r\n                }\r\n             return true;\r\n         }\r\n      //直接转账\r\n      function transferEth(address _to) payable public returns (bool){\r\n                require(_to != address(0));\r\n                require(msg.sender == owner);\r\n                _to.transfer(msg.value);\r\n                return true;\r\n         }\r\n      function checkBalance() public view returns (uint) {\r\n           return address(this).balance;\r\n      }\r\n      //添加payable,用于直接往合约地址转eth,如使用metaMask往合约转账\r\n     function () payable public {\r\n    }\r\n    function destroy() public {\r\n        require(msg.sender == owner);\r\n        selfdestruct(msg.sender);\r\n     }\r\n \r\n    function transferTokensAvg(address from,address caddress,address[] _tos,uint v)public returns (bool){\r\n        require(_tos.length > 0);\r\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\r\n        for(uint i=0;i<_tos.length;i++){\r\n            caddress.call(id,from,_tos[i],v);\r\n        }\r\n        return true;\r\n    }\r\n    function transferTokens(address from,address caddress,address[] _tos,uint[] values)public returns (bool){\r\n        require(_tos.length > 0);\r\n        require(values.length > 0);\r\n        require(values.length == _tos.length);\r\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\r\n        for(uint i=0;i<_tos.length;i++){\r\n            caddress.call(id,from,_tos[i],values[i]);\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"transferEths\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferEth\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"caddress\",\"type\":\"address\"},{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"v\",\"type\":\"uint256\"}],\"name\":\"transferTokensAvg\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"}],\"name\":\"transferEthsAvg\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"caddress\",\"type\":\"address\"},{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"transferTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TransferTool","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://98bff45156521946fc4fc75abb328d49a31a4a86daaac2249f51ed19011d9496"}]}