{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20 {\r\n  uint256 public totalSupply;\r\n\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract TimeLockedWalletFactory {\r\n \r\n    mapping(address => address[]) wallets;\r\n\r\n    function getWallets(address _user) public view returns(address[]) {return wallets[_user];}\r\n\r\n    function newTimeLockedWallet(address _owner, uint256 _unlockDate) payable public returns(address wallet) {\r\n        wallet = new TimeLockedWallet(msg.sender, _owner, _unlockDate);\r\n        \r\n        wallets[msg.sender].push(wallet);\r\n        if(msg.sender != _owner){wallets[_owner].push(wallet);}\r\n        wallet.transfer(msg.value);\r\n        emit Created(wallet, msg.sender, _owner, now, _unlockDate, msg.value);\r\n    }\r\n\r\n    function () public {revert();}\r\n\r\n    event Created(address wallet, address from, address to, uint256 createdAt, uint256 unlockDate, uint256 amount);\r\n}\r\n\r\ncontract TimeLockedWallet {\r\n    address public creator;\r\n    address public owner;\r\n    uint256 public unlockDate;\r\n    uint256 public createdAt;\r\n\r\n    modifier onlyOwner {require(msg.sender == owner);_;}\r\n\r\n    constructor(address _creator, address _owner, uint256 _unlockDate) public {\r\n        creator = _creator;\r\n        owner = _owner;\r\n        unlockDate = _unlockDate;\r\n        createdAt = now;\r\n    }\r\n\r\n    function() payable public { emit Received(msg.sender, msg.value);}\r\n\r\n    function withdraw() onlyOwner public {\r\n       require(now >= unlockDate);\r\n       msg.sender.transfer(address(this).balance);\r\n       emit Withdraw(msg.sender, address(this).balance);\r\n    }\r\n\r\n    function withdrawTokens(address _tokenContract) onlyOwner public {\r\n       require(now >= unlockDate);\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(this);\r\n       token.transfer(owner, tokenBalance);\r\n       emit WithdrawTokens(_tokenContract, msg.sender, tokenBalance);\r\n    }\r\n\r\n    function info() public view returns(address, address, uint256, uint256, uint256) {\r\n        return (creator, owner, unlockDate, createdAt, address(this).balance);\r\n    }\r\n\r\n    event Received(address from, uint256 amount);\r\n    event Withdraw(address to, uint256 amount);\r\n    event WithdrawTokens(address tokenContract, address to, uint256 amount);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_unlockDate\",\"type\":\"uint256\"}],\"name\":\"newTimeLockedWallet\",\"outputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"createdAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Created\",\"type\":\"event\"}]","ContractName":"TimeLockedWalletFactory","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://927216322ba4560a7de2c745872b4f62746ce43f29a33b19a7182fd29f665e22"}]}