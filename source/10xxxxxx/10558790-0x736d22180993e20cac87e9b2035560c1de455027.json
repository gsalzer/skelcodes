{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\n\r\ninterface ISynthetix {\r\n    function exchangeOnBehalf(address, bytes32, uint, bytes32) external returns (uint);\r\n}\r\n\r\ncontract Implementation {\r\n\r\n    bool initialized;\r\n    ISynthetix synthetix;\r\n    uint256 public latestID;\r\n    mapping (uint256 => LimitOrder) public orders;\r\n\r\n    struct LimitOrder {\r\n        address payable submitter;\r\n        bytes32 sourceCurrencyKey;\r\n        uint256 sourceAmount;\r\n        bytes32 destinationCurrencyKey;\r\n        uint256 minDestinationAmount;\r\n        uint256 weiDeposit;\r\n        uint256 executionFee;\r\n    }\r\n\r\n    function initialize(address synthetixAddress) public {\r\n        require(initialized == false, \"Already initialized\");\r\n        initialized = true;\r\n        synthetix = ISynthetix(synthetixAddress);\r\n    }\r\n\r\n    function newOrder(bytes32 sourceCurrencyKey, uint sourceAmount, bytes32 destinationCurrencyKey, uint minDestinationAmount, uint executionFee) payable public returns (uint) {\r\n        require(msg.value > executionFee, \"wei deposit must be larger than executionFee\");\r\n        latestID++;\r\n        orders[latestID] = LimitOrder(\r\n            msg.sender,\r\n            sourceCurrencyKey,\r\n            sourceAmount,\r\n            destinationCurrencyKey,\r\n            minDestinationAmount,\r\n            msg.value,\r\n            executionFee\r\n        );\r\n        emit Order(latestID, msg.sender, sourceCurrencyKey, sourceAmount, destinationCurrencyKey, minDestinationAmount, executionFee, msg.value);\r\n        return latestID;\r\n    }\r\n\r\n    function cancelOrder(uint orderID) public {\r\n        require(orderID <= latestID, \"Order does not exist\");\r\n        LimitOrder storage order = orders[orderID];\r\n        require(order.submitter == msg.sender, \"Order already executed or cancelled\");\r\n        msg.sender.transfer(order.weiDeposit);\r\n        delete orders[orderID];\r\n        emit Cancel(orderID);\r\n    }\r\n\r\n    function executeOrder(uint orderID) public {\r\n        uint gasUsed = gasleft();\r\n        require(orderID <= latestID, \"Order does not exist\");\r\n        LimitOrder storage order = orders[orderID];\r\n        require(order.submitter != address(0), \"Order already executed or cancelled\");\r\n        uint destinationAmount = synthetix.exchangeOnBehalf(order.submitter, order.sourceCurrencyKey, order.sourceAmount, order.destinationCurrencyKey);\r\n        require(destinationAmount >= order.minDestinationAmount, \"target price not reached\");\r\n        emit Execute(orderID, order.submitter, msg.sender);\r\n        gasUsed -= gasleft();\r\n        uint refund = ((gasUsed + 32231) * tx.gasprice) + order.executionFee; // magic number generated using tests\r\n        require(order.weiDeposit >= refund, \"Insufficient weiDeposit\");\r\n        order.submitter.transfer(order.weiDeposit - refund);\r\n        delete orders[orderID];\r\n        msg.sender.transfer(refund);\r\n    }\r\n\r\n    event Order(uint indexed orderID, address indexed submitter, bytes32 sourceCurrencyKey, uint sourceAmount, bytes32 destinationCurrencyKey, uint minDestinationAmount, uint executionFee, uint weiDeposit);\r\n    event Cancel(uint indexed orderID);\r\n    event Execute(uint indexed orderID, address indexed submitter, address executer);\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderID\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sourceCurrencyKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"destinationCurrencyKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDestinationAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiDeposit\",\"type\":\"uint256\"}],\"name\":\"Order\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderID\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderID\",\"type\":\"uint256\"}],\"name\":\"executeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"synthetixAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sourceCurrencyKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCurrencyKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minDestinationAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"newOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"sourceCurrencyKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCurrencyKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minDestinationAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weiDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Implementation","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d233bdee517d4a856de8e23539aceda588aa8820561fe49684e34cc09bae0587"}]}