{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract DOSAddressBridgeInterface {\r\n    function getProxyAddress() public view returns(address);\r\n}\r\n\r\ncontract CommitReveal {\r\n    struct Participant {\r\n        uint secret;\r\n        bytes32 commitment;\r\n        bool revealed;\r\n    }\r\n\r\n    struct Campaign {\r\n        uint startBlock;\r\n        uint commitDuration;  // in blocks\r\n        uint revealDuration;  // in blocks\r\n        uint revealThreshold;\r\n        uint commitNum;\r\n        uint revealNum;\r\n        uint generatedRandom;\r\n        mapping(address => Participant) participants;\r\n        mapping(bytes32 => bool) commitments;\r\n    }\r\n\r\n    Campaign[] public campaigns;\r\n    DOSAddressBridgeInterface public addressBridge;\r\n\r\n    modifier checkCommit(uint _cid, bytes32 _commitment) {\r\n        Campaign storage c = campaigns[_cid];\r\n        require(_cid != 0 &&\r\n                block.number >= c.startBlock &&\r\n                block.number < c.startBlock + c.commitDuration,\r\n                \"not-in-commit\");\r\n        require(_commitment != \"\", \"empty-commitment\");\r\n        require(!c.commitments[_commitment], \"duplicate-commitment\");\r\n        _;\r\n    }\r\n    modifier checkReveal(uint _cid) {\r\n        Campaign storage c = campaigns[_cid];\r\n        require(_cid != 0 &&\r\n                block.number >= c.startBlock + c.commitDuration &&\r\n                block.number < c.startBlock + c.commitDuration + c.revealDuration,\r\n                \"not-in-reveal\");\r\n        _;\r\n    }\r\n    modifier checkFinish(uint _cid) {\r\n        Campaign storage c = campaigns[_cid];\r\n        require(_cid != 0 &&\r\n                block.number >= c.startBlock + c.commitDuration + c.revealDuration,\r\n                \"commit-reveal-not-finished\");\r\n        _;\r\n    }\r\n    modifier onlyFromProxy() {\r\n        require(msg.sender == addressBridge.getProxyAddress(), \"not-from-dos-proxy\");\r\n        _;\r\n    }\r\n\r\n    event LogStartCommitReveal(uint cid, uint startBlock, uint commitDuration, uint revealDuration, uint revealThreshold);\r\n    event LogCommit(uint cid, address from, bytes32 commitment);\r\n    event LogReveal(uint cid, address from, uint secret);\r\n    event LogRandom(uint cid, uint random);\r\n    event LogRandomFailure(uint cid, uint commitNum, uint revealNum, uint revealThreshold);\r\n\r\n    constructor(address _bridgeAddr) public {\r\n        // campaigns[0] is not used.\r\n        campaigns.length++;\r\n        addressBridge = DOSAddressBridgeInterface(_bridgeAddr);\r\n    }\r\n\r\n    // Returns new campaignId.\r\n    function startCommitReveal(\r\n        uint _startBlock,\r\n        uint _commitDuration,\r\n        uint _revealDuration,\r\n        uint _revealThreshold\r\n    )\r\n        public\r\n        onlyFromProxy\r\n        returns(uint)\r\n    {\r\n        uint newCid = campaigns.length;\r\n        campaigns.push(Campaign(_startBlock, _commitDuration, _revealDuration, _revealThreshold, 0, 0, 0));\r\n        emit LogStartCommitReveal(newCid, _startBlock, _commitDuration, _revealDuration, _revealThreshold);\r\n        return newCid;\r\n    }\r\n\r\n    function commit(uint _cid, bytes32 _secretHash) public checkCommit(_cid, _secretHash) {\r\n        Campaign storage c = campaigns[_cid];\r\n        c.commitments[_secretHash] = true;\r\n        c.participants[msg.sender] = Participant(0, _secretHash, false);\r\n        c.commitNum++;\r\n        emit LogCommit(_cid, msg.sender, _secretHash);\r\n    }\r\n\r\n    function reveal(uint _cid, uint _secret) public checkReveal(_cid) {\r\n        Campaign storage c = campaigns[_cid];\r\n        Participant storage p = c.participants[msg.sender];\r\n        require(!p.revealed && keccak256(abi.encodePacked(_secret)) == p.commitment,\r\n                \"revealed-secret-not-match-commitment\");\r\n        p.secret = _secret;\r\n        p.revealed = true;\r\n        c.revealNum++;\r\n        c.generatedRandom ^= _secret;\r\n        emit LogReveal(_cid, msg.sender, _secret);\r\n    }\r\n\r\n    // Return value of 0 representing invalid random output.\r\n    function getRandom(uint _cid) public checkFinish(_cid) returns (uint) {\r\n        Campaign storage c = campaigns[_cid];\r\n        if (c.revealNum >= c.revealThreshold) {\r\n            emit LogRandom(_cid, c.generatedRandom);\r\n            return c.generatedRandom;\r\n        } else{\r\n            emit LogRandomFailure(_cid, c.commitNum, c.revealNum, c.revealThreshold);\r\n            return 0;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridgeAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"LogCommit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"LogRandom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealThreshold\",\"type\":\"uint256\"}],\"name\":\"LogRandomFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"secret\",\"type\":\"uint256\"}],\"name\":\"LogReveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealThreshold\",\"type\":\"uint256\"}],\"name\":\"LogStartCommitReveal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressBridge\",\"outputs\":[{\"internalType\":\"contract DOSAddressBridgeInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"generatedRandom\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cid\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_secretHash\",\"type\":\"bytes32\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cid\",\"type\":\"uint256\"}],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealThreshold\",\"type\":\"uint256\"}],\"name\":\"startCommitReveal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CommitReveal","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000098a0e7026778840aacd28b9c03137d32e06f5ff1","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8e403e3d4475ddcaa31a37931b72b5c44ba52ecda6017d81d1df04f70633c7e1"}]}