{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract Ether {\r\n    struct Call {\r\n        address to;\r\n        bytes data;\r\n    }\r\n\r\n    function multicall(Call[] memory calls) public returns (bytes[] memory result) {\r\n        bool success;\r\n        result = new bytes[](calls.length);\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            (success, result[i]) = calls[i].to.call(calls[i].data);\r\n            require(success);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Ether.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"result\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Ether","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3176c9aeb7c866f2c8c7159aeba7b0f8c8eb7d14046cca8e63f92df7e928a707"}]}