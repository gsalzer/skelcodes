{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  \r\n  /**\r\n  * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n  * account.\r\n  */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  /**\r\n  * @dev Throws if called by any account other than the owner.\r\n  */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract PayFbit is Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  event Transfer(address indexed from,address indexed to,uint256 _tokenId);\r\n  event Approval(address indexed owner,address indexed approved,uint256 _tokenId);\r\n\r\n\r\n\r\n  string public  name = \"PayFbit Token\";\r\n  string public  symbol = \"PFBT\";\r\n  uint8 public decimals = 5;\r\n\r\n  uint256 public totalSupply = 310000000 * 10 ** uint256(decimals);\r\n  \r\n  uint  constant EndDate1     = 1609479000;  // 1 jan 2021\r\n  uint  constant EndDate2     = 1641015000;  // 1 jan 2022\r\n\r\n  mapping(address => uint256) balances;\r\n  mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    uint   amount1              =  217000000 * (10 ** uint256(decimals));   // 217,000,000 - (217M) \r\n    uint   amount2           =  31000000  * (10 ** uint256(decimals));   // 31,000,000 - (31M)\r\n    uint   amount3            =  9300000  * (10 ** uint256(decimals));   // 9,300,000 - (9.3M)\r\n    uint   amount4            =  31000000  * (10 ** uint256(decimals));   // 31,000,000 - (31M)    \r\n    uint   amount5            =  12400000  * (10 ** uint256(decimals));   // 12,400,000 - (12.4M)\r\n    uint   amount6   =  9300000 * (10 ** uint256(decimals));   //  9,300,000 - ( 9.3M )\r\n    \r\n\r\n\r\n    \r\n\r\n    //Deposit address\r\n    address public addressPublicPrivateSaleBounty       = 0xE693614c6025C1C8DD77Df381bFAa3e52a686FC4;   // 1 jan 2021\r\n    address public addressCoFoundersManagingPartners            = 0x8F21BafA9b44b1de4Ec35013d3a846AA2FC861b1; // 1 jan 2022 \r\n    address public addressDevelopmentTeam            = 0x2841e11548Fe3A0c6B34aBAe2446Ae8a715149A7;  // 1 jan 2022\r\n    address public addressICOAdvisors            = 0xAb503F71145AE3A769AE5084eEB1ae6693836D7e;  // 1 jan 2022\r\n    address public addressForFutureDevelopment            = 0xBc6E90612eE2b5608911534c25FDc8a473Ee32fc;  // 1 jan 2022\r\n    address public addressLegalAdvisor   = 0x3e569d848e188FeFE8E0c3a51d115BD1F1DD1Bfb; // 1 jan 2022\r\n     \r\n\r\n    /*\r\n    * Contract Constructor\r\n    */\r\n\r\n    constructor() public {\r\n                     // balances[msg.sender] = totalSupply;\r\n                    \r\n                     balances[addressPublicPrivateSaleBounty]     = amount1;\r\n                     balances[addressCoFoundersManagingPartners]          = amount2;\r\n                     balances[addressDevelopmentTeam]          = amount3;   \r\n                     balances[addressICOAdvisors]          = amount4;\r\n                     balances[addressForFutureDevelopment]          = amount5;\r\n                     balances[addressLegalAdvisor] = amount6;\r\n            }\r\n    \r\n    \r\n  \r\n\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n\r\n//   constructor() public {\r\n//     balances[msg.sender] = totalSupply;\r\n//   }\r\n\r\n\r\n  function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n    allowed[msg.sender][_spender] = _amount;\r\n    emit   Approval(msg.sender, _spender, _amount);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender ) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function getNow() public view returns (uint) {\r\n        return now;\r\n    }\r\n    \r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    //For 1 jan 2021\r\n    if (msg.sender == addressPublicPrivateSaleBounty){\r\n        require(now >= EndDate1);\r\n    }\r\n    //For 1 jan 2022\r\n    if ((msg.sender == addressCoFoundersManagingPartners || msg.sender == addressDevelopmentTeam || msg.sender == addressICOAdvisors || msg.sender == addressForFutureDevelopment || msg.sender == addressLegalAdvisor)){\r\n        require(now >= EndDate2);\r\n    }\r\n    require(_value <= balances[msg.sender]);\r\n    require(_to != address(0));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool)\r\n  {\r\n    //For 1 jan 2021\r\n    if (msg.sender == addressPublicPrivateSaleBounty){\r\n        require(now >= EndDate1);\r\n    }\r\n    //For 1 jan 2022\r\n     if ((msg.sender == addressCoFoundersManagingPartners || msg.sender == addressDevelopmentTeam || msg.sender == addressICOAdvisors || msg.sender == addressForFutureDevelopment || msg.sender == addressLegalAdvisor)){\r\n        require(now >= EndDate2);\r\n    }\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n    require(_to != address(0));\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n  \r\n  function burn(uint256 amount) external {\r\n    _burn(msg.sender, amount);\r\n  }\r\n  function _burn(address account, uint256 amount) internal {\r\n     //For 1 jan 2021\r\n    if (msg.sender == addressPublicPrivateSaleBounty){\r\n        require(now >= EndDate1);\r\n    }\r\n    //For 1 jan 2022\r\n     if ((msg.sender == addressCoFoundersManagingPartners || msg.sender == addressDevelopmentTeam || msg.sender == addressICOAdvisors || msg.sender == addressForFutureDevelopment || msg.sender == addressLegalAdvisor)){\r\n        require(now >= EndDate2);\r\n    }\r\n    require(amount != 0);\r\n    require(amount <= balances[account]);\r\n    // totalSupply = totalSupply.sub(amount);\r\n    balances[account] = balances[account].sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n  \r\n  function increaseApproval(address _spender, uint256 _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = (\r\n      allowed[msg.sender][_spender].add(_addedValue));\r\n      emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n      return true;\r\n    }\r\n\r\n    function decreaseApproval(address _spender,uint256 _subtractedValue) public returns (bool)\r\n    {\r\n      uint256 oldValue = allowed[msg.sender][_spender];\r\n      if (_subtractedValue >= oldValue) {\r\n        allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n          allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n      }\r\n\r\n    }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"addressICOAdvisors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressForFutureDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressLegalAdvisor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressDevelopmentTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressPublicPrivateSaleBounty\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressCoFoundersManagingPartners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PayFbit","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ca513fc145103ee819328c89fe55f81adffd8887ed5bd5bad6dd682d67d45b2b"}]}