{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ICurve {\r\n    function get_virtual_price() external view returns (uint256 out);\r\n    function underlying_coins(int128 tokenId) external view returns (address token);\r\n    function calc_token_amount(uint256[4] calldata amounts, bool deposit) external view returns (uint256 amount);\r\n    function get_dy(int128 sellTokenId, int128 buyTokenId, uint256 sellTokenAmt) external view returns (uint256 buyTokenAmt);\r\n}\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\ninterface IStakingRewards {\r\n  function balanceOf(address) external view returns (uint256);\r\n  function earned(address) external view returns (uint256);\r\n}\r\n\r\ncontract Resolver {\r\n    function getPosition(\r\n        address user,\r\n        TokenInterface curveToken,\r\n        IStakingRewards stakingPool,\r\n        TokenInterface rewardToken\r\n    ) public view returns (\r\n        uint userBal,\r\n        uint rewardsEarned,\r\n        uint stakedBal,\r\n        uint rewardBal\r\n    ) {\r\n        userBal = curveToken.balanceOf(user);\r\n        // Staking Details.\r\n        (stakedBal, rewardsEarned, rewardBal) = getStakingPosition(user, stakingPool, rewardToken);\r\n    }\r\n\r\n    function getStakingPosition(address user, IStakingRewards stakingPool, TokenInterface rewardToken) public view returns (\r\n        uint stakedBal,\r\n        uint rewardsEarned,\r\n        uint rewardBal\r\n    ) {\r\n        stakedBal = stakingPool.balanceOf(user);\r\n        rewardsEarned = stakingPool.earned(user);\r\n        rewardBal = rewardToken.balanceOf(user);\r\n    }\r\n\r\n    struct StatsData {\r\n        uint userBal;\r\n        uint rewardsEarned;\r\n        uint stakedBal;\r\n        uint rewardBal;\r\n    }\r\n    function getPositions(\r\n        address[] memory users,\r\n        TokenInterface curveToken,\r\n        IStakingRewards stakingPool,\r\n        TokenInterface rewardToken\r\n    ) public view returns (StatsData[] memory) {\r\n        StatsData[] memory data = new StatsData[](users.length);\r\n        for (uint i = 0; i < users.length; i++) {\r\n            (\r\n                uint userBal,\r\n                uint rewardsEarned,\r\n                uint stakedBal,\r\n                uint rewardBal\r\n            ) = getPosition(users[i], curveToken, stakingPool, rewardToken);\r\n            data[i] = StatsData(\r\n                userBal,\r\n                rewardsEarned,\r\n                stakedBal,\r\n                rewardBal\r\n            );\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function getPrice(ICurve curvePool) public view returns(uint price) {\r\n        return curvePool.get_virtual_price();\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterface\",\"name\":\"curveToken\",\"type\":\"address\"},{\"internalType\":\"contract IStakingRewards\",\"name\":\"stakingPool\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterface\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userBal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedBal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"contract TokenInterface\",\"name\":\"curveToken\",\"type\":\"address\"},{\"internalType\":\"contract IStakingRewards\",\"name\":\"stakingPool\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterface\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"getPositions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"userBal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedBal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBal\",\"type\":\"uint256\"}],\"internalType\":\"struct Resolver.StatsData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"curvePool\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IStakingRewards\",\"name\":\"stakingPool\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterface\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"getStakingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Resolver","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a9c44ec43576b4f8ccd22f489189aae6d069d4e15f84d013339abb6312750fd3"}]}