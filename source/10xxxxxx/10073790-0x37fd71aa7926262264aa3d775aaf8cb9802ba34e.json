{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.8;\r\n//SPDX-License-Identifier: UNLICENSED\r\n\r\n//certo v20050101005c060 noima (c) all right reserved 2020\r\ncontract BaseCertoChainContract {\r\n    address payable creator;\r\n    address payable owner;\r\n\r\n    bool public isSealed;\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyBy(address _account) {\r\n        require(msg.sender != _account);\r\n        _;\r\n    }\r\n\r\n    modifier onlyIfNotSealed() //semantic when sealed is not possible to change sensible data\r\n    {\r\n        if (isSealed) revert();\r\n        _;\r\n    }\r\n\r\n    function kill() public onlyBy(owner) {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function setCreator(address payable _creator) public onlyBy(creator) {\r\n        creator = _creator;\r\n        emit EventReady(address(this), \"setCreator\");\r\n    }\r\n\r\n    function setOwner(address payable _owner) public onlyBy(owner) {\r\n        owner = _owner;\r\n        emit EventReady(address(this), \"SetOwner\");\r\n    }\r\n\r\n    function setSealed() public onlyBy(owner) {\r\n        isSealed = true;\r\n        emit EventSealed(address(this));\r\n    } //seal down contract not reversible\r\n\r\n    event EventSealed(address self); //invoked when contract is sealed\r\n    event EventSetCreator(address self); //invoked when we change creator\r\n    event EventSetOwner(address self); //invoked when we change owner\r\n    event EventReady(address self, string method); //invoked when we have done the method action\r\n}\r\n\r\n\r\ncontract TagCertoChainContract is BaseCertoChainContract {\r\n    bool public isActive;\r\n\r\n    function constructorx(address payable _owner) public {\r\n        owner = (_owner);\r\n        emit EventReady(address(this), \"constructor\");\r\n    }\r\n\r\n    constructor(\r\n        address payable _owner,\r\n        bytes32 signaturehash,\r\n        bytes32 signaturemaskR,\r\n        bytes32 signaturemaskS,\r\n        uint8 signaturemaskV\r\n    ) public {\r\n        owner = (_owner);\r\n        SignatureMaskR = signaturemaskR;\r\n        SignatureMaskS = signaturemaskS;\r\n        SignatureMaskV = signaturemaskV;\r\n        SignatureHash = signaturehash;\r\n        emit EventReady(address(this), \"constructor\");\r\n    }\r\n\r\n    function ActivateTag(address Target) public onlyBy(owner) {\r\n        TargetDocument = Target;\r\n        emit EventReady(address(this), \"ActivateTag\");\r\n    }\r\n\r\n    function SignTag(\r\n        bytes32 signaturehash,\r\n        bytes32 signaturemaskR,\r\n        bytes32 signaturemaskS,\r\n        uint8 signaturemaskV\r\n    ) public onlyBy(owner) {\r\n        SignatureMaskR = signaturemaskR;\r\n        SignatureMaskS = signaturemaskS;\r\n        SignatureMaskV = signaturemaskV;\r\n        SignatureHash = signaturehash;\r\n        emit EventReady(address(this), \"SignTag\");\r\n    }\r\n\r\n    function VerifyTag(bytes8 signaturepinS)\r\n        public\r\n        view\r\n        returns (string memory)\r\n    {\r\n        bytes32 signatureR;\r\n        bytes32 signatureS;\r\n        bytes32 signatureSpad;\r\n        signatureSpad = signaturepinS;\r\n        signatureR = SignatureMaskR;\r\n        signatureS = SignatureMaskS | (signatureSpad);\r\n        //emit EventReady(address(this),\"VerifyTag\");\r\n        if (\r\n            ecrecover(SignatureHash, SignatureMaskV, signatureR, signatureS) ==\r\n            creator\r\n        ) {\r\n            return \"OK IS TAG VALID\";\r\n        } else {\r\n            return \"NOT A VALID TAG\";\r\n        }\r\n\r\n        // return signatureS;\r\n    }\r\n\r\n    function RecoverSigner(\r\n        bytes32 msgHash,\r\n        bytes32 signaturepinR,\r\n        bytes32 signaturepinS\r\n    ) public view returns (address) {\r\n        bytes32 signatureR;\r\n        bytes32 signatureS;\r\n        signatureR = SignatureMaskR | signaturepinR;\r\n        signatureS = SignatureMaskS | signaturepinS;\r\n\r\n        return ecrecover(msgHash, SignatureMaskV, signatureR, signatureS);\r\n    }\r\n\r\n    address public TargetDocument;\r\n    bytes32 public SignatureMaskR;\r\n    bytes32 public SignatureMaskS;\r\n    uint8 public SignatureMaskV;\r\n\r\n    bytes32 public SignatureHash;\r\n}\r\n\r\n\r\ncontract DocumentCertoChainContract is BaseCertoChainContract {\r\n    //string  public  Description ; //Description the description is in the trasaction log\r\n    //string  public  FileName;     //FileName the file FileName is in the transaction log\r\n    bytes32 public FileHash; //SecuritySeal HASH\r\n    bytes32 public DescriptionHash; //SecuritySeal HASH\r\n    int256 public FileData; //SecuritySeal DATA format AAMMDD\r\n\r\n    address public NextOwner;\r\n    address public PrevOwner;\r\n\r\n    constructor(\r\n       string memory _Description,\r\n       // string memory _FileName,\r\n        bytes32 _DescriptionHash,\r\n        bytes32 _FileHash,\r\n        int256 _FileData\r\n    ) public {\r\n        NextOwner = address(this);\r\n        //Description=_Description; the description is in the trasaction log\r\n        //FileName=_FileName;  the file FileName is in the transaction log\r\n        FileHash = _FileHash;\r\n        DescriptionHash = _DescriptionHash;\r\n        FileData = _FileData;\r\n        //emit EventNote(address(this), _FileName);\r\n        emit EventNote(address(this), _Description);\r\n        emit EventReady(address(this), \"constructor\");\r\n    }\r\n\r\n    function setNextOwner(address _NextOwner)\r\n        public\r\n        onlyBy(creator)\r\n        onlyIfNotSealed()\r\n    {\r\n        NextOwner = _NextOwner;\r\n        emit EventNewOwner(address(this));\r\n    }\r\n\r\n    function setPrevOwner(address _PrevOwner)\r\n        public\r\n        onlyBy(creator)\r\n        onlyIfNotSealed()\r\n    {\r\n        PrevOwner = _PrevOwner;\r\n        emit EventNewPrevOwner(address(this));\r\n    }\r\n\r\n    event EventNewOwner(address self);\r\n    event EventNewPrevOwner(address self);\r\n\r\n    event EventNote(address self,  string  note); // trace a note in the logs\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Description\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_DescriptionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_FileHash\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"_FileData\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventNewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventNewPrevOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"EventNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"EventReady\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"self\",\"type\":\"address\"}],\"name\":\"EventSetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DescriptionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FileData\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FileHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NextOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrevOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSealed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NextOwner\",\"type\":\"address\"}],\"name\":\"setNextOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PrevOwner\",\"type\":\"address\"}],\"name\":\"setPrevOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSealed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DocumentCertoChainContract","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000800db02321e23bd988437029ca1fed42d6cbf12d211879556bca7e4d26533204999a77e3ae9b5a778450ae1902fd0484c6edd2d39d271cfc69daaf2aa1c7185be60000000000000000000000000000000000000000000000000000002f0871aeaa0000000000000000000000000000000000000000000000000000000000000042414747494f524e414d454e544f0a4d4f44554c4f2053504543494649434f20414c544f205249534348494f0a436f6469636520636f72736f3a203230323030303939000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dd913e3efe7a5b9d2f1446caa0dfb0c886d2eccbb0f4939479778fce38df9dff"}]}