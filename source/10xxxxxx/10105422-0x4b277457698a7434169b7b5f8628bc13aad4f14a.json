{"status":"1","message":"OK","result":[{"SourceCode":"// BULLRUN - 4 EASY AND FAIR\r\n// 100 % PAYOUT\r\n// MINIMAL TRANSACTION COST\r\n//-----------------------------\r\n\r\npragma solidity ^0.6.6;\r\ncontract Bullrun4 {\r\n    \r\n    // Counter how many players are in the game\r\n    uint32 public num_players = 0;\r\n    \r\n    // For every player the position and the public ETH address is saved in a map.\r\n    mapping (uint => address payable) public players;\r\n    \r\n    // Only method of the contract\r\n    function add() public payable{\r\n        if (msg.value == 500 finney) { // To participate you must pay 500 finney (0.5 ETH)\r\n            players[num_players] = msg.sender; //save address of player\r\n            \r\n            num_players++; // One player is added, so we increase the player counter\r\n            \r\n            // Transfer the just now added 0.5 ETH to player position num_players divided by 2.\r\n            // This payout is done 2 times for one player, because odd and even number divided by 2 is the same integer. = 1 ETH return\r\n            players[num_players/2].transfer(address(this).balance);\r\n        }\r\n        else\r\n            revert(); // Error executing the function\r\n    }\r\n    \r\n    // Nothing more... no exit scam, fraud, nothing...\r\n}","ABI":"[{\"inputs\":[],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num_players\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Bullrun4","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://63c6e3e422bd365f13a4a7e7d955532ec58bcb0355bfd3b2ea2a41325524f35e"}]}