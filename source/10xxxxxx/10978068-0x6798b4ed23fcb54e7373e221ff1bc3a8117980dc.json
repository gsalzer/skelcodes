{"status":"1","message":"OK","result":[{"SourceCode":"{\"IERC20.sol\":{\"content\":\"\\r\\npragma solidity \\u003e0.6.0;\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n} // File: @openzeppelin/contracts/token/ERC20/IERC20.sol\"},\"TokenTimelock.sol\":{\"content\":\"\\r\\n\\r\\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\\r\\npragma solidity ^0.7.1;\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not inclusde\\r\\n * the optional functions; to access them see {ERC20Detailed}.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\ncontract TokenTimelock {\\r\\n\\r\\n    IERC20 private _token;\\r\\n\\r\\n    address private _beneficiary;\\r\\n\\r\\n    uint256 private _releaseTime;\\r\\n\\r\\n    constructor (IERC20 token, address beneficiary, uint256 timeLockDays) public {\\r\\n        // solhint-disable-next-line not-rely-on-time\\r\\n        _token = token;\\r\\n        _beneficiary = beneficiary;\\r\\n        _releaseTime = block.timestamp + (timeLockDays*24*3600);\\r\\n        require(_releaseTime \\u003e block.timestamp, \\\"ERROR\\\");\\r\\n    }\\r\\n    function token() public view returns (IERC20) {\\r\\n        return _token;\\r\\n    }\\r\\n    function balance() public view returns (uint256) {\\r\\n        return _token.balanceOf(address(this));\\r\\n    }\\r\\n    function beneficiary() public view returns (address) {\\r\\n        return _beneficiary;\\r\\n    }\\r\\n    function releaseTime() public view returns (uint256) {\\r\\n        return _releaseTime;\\r\\n    }\\r\\n    function getBlockTimestamp() public view returns (uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n    function canRelease() public view returns (bool) {\\r\\n        if(_releaseTime \\u003c block.timestamp){return true;}\\r\\n        else {return false;}\\r\\n    }\\r\\n    function release() public virtual {\\r\\n        // solhint-disable-next-line not-rely-on-time\\r\\n        require(block.timestamp \\u003e= _releaseTime, \\\"TokenTimelock: current time is before release time\\\");\\r\\n\\r\\n        uint256 amount = _token.balanceOf(address(this));\\r\\n        require(amount \\u003e 0, \\\"TokenTimelock: no tokens to release\\\");\\r\\n\\r\\n        _token.transfer(_beneficiary, amount);\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeLockDays\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TokenTimelock","CompilerVersion":"v0.7.2+commit.51b20bc0","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b177bd7919c399dde531744a20d5078baa1ecff200000000000000000000000087a20404f68cc2ce12e3f7c6fb68da9b43cc5d47000000000000000000000000000000000000000000000000000000000000001e","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b896e837ab6cc367c88cb04e7bbd0517d3db5a9fb12c00296710f814f5be264e"}]}