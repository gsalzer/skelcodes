{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n\r\n * GearProtocol's Dev fund Vault\r\n \r\n * Smart contract to lockup dev fund for a period of 6 months. \r\n\r\n * Official Website: \r\nhttps://GearProtocol.com\r\n \r\n */\r\n\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n\r\ncontract GearDevVault {\r\n    \r\n    ERC20 constant GearToken = ERC20(0xBD753A8D3bE45F4772145D75E28014a333B705Fb);\r\n    \r\n    address owner = msg.sender;\r\n    \r\n    \r\n    uint256 public LockPeriod;\r\n    address public UnlockRecipient;\r\n    \r\n    \r\n\r\n// Function allows GEAR token to be unlocked, after 6 months lockup period \r\n\r\n\r\n    function startUnlock(address recipient) external {\r\n        require(msg.sender == owner);\r\n        LockPeriod = now + 180 days;\r\n        UnlockRecipient = recipient;\r\n    }\r\n    \r\n    \r\n// Transfer token to dev, assuming the 6 months lockup has passed -preventing abuse.\r\n\r\n\r\n    function Unlock() external {\r\n        require(msg.sender == owner);\r\n        require(UnlockRecipient != address(0));\r\n        require(now > LockPeriod);\r\n        \r\n        uint256 GearBalance = GearToken.balanceOf(address(this));\r\n        GearToken.transfer(UnlockRecipient, GearBalance);\r\n    }  \r\n    \r\n}\r\n\r\n\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}","ABI":"[{\"inputs\":[],\"name\":\"LockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UnlockRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"startUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GearDevVault","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7ea8645e1cea4b8a408dfe3fb0157575e80fd11d99c30d88d7ab2512fc141768"}]}