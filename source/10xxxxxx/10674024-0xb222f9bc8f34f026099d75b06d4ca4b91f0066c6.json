{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ChainLinkInterface {\r\n    function latestAnswer() external view returns (int256);\r\n    function decimals() external view returns (uint256);\r\n}\r\n\r\ninterface ConnectorsInterface {\r\n  function chief(address) external view returns (bool);\r\n}\r\n\r\ninterface IndexInterface {\r\n  function master() external view returns (address);\r\n}\r\n\r\ncontract Basic {\r\n    address public constant connectors = 0xD6A602C01a023B98Ecfb29Df02FBA380d3B21E0c;\r\n    address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\r\n    uint public version = 1;\r\n\r\n    modifier isChief {\r\n        require(\r\n        ConnectorsInterface(connectors).chief(msg.sender) ||\r\n        IndexInterface(instaIndex).master() == msg.sender, \"not-Chief\");\r\n        _;\r\n    }\r\n\r\n    event LogAddChainLinkMapping(\r\n        string tokenSymbol,\r\n        address chainlinkFeed\r\n    );\r\n\r\n    event LogRemoveChainLinkMapping(\r\n        string tokenSymbol,\r\n        address chainlinkFeed\r\n    );\r\n\r\n    mapping (string => address) public chainLinkMapping;\r\n\r\n    function _addChainLinkMapping(\r\n        string memory token,\r\n        address chainlinkFeed\r\n    ) internal {\r\n        require(bytes(token).length > 0, \"token-not-vaild\");\r\n        require(chainlinkFeed != address(0), \"chainlinkFeed-not-vaild\");\r\n        require(chainLinkMapping[token] == address(0), \"chainlinkFeed-already-added\");\r\n\r\n        chainLinkMapping[token] = chainlinkFeed;\r\n        emit LogAddChainLinkMapping(token, chainlinkFeed);\r\n    }\r\n\r\n    function _removeChainLinkMapping(string memory token) internal {\r\n        require(bytes(token).length > 0, \"token-not-vaild\");\r\n        require(chainLinkMapping[token] != address(0), \"chainlinkFeed-not-added-yet\");\r\n\r\n        emit LogRemoveChainLinkMapping(token, chainLinkMapping[token]);\r\n        delete chainLinkMapping[token];\r\n    }\r\n\r\n    function addChainLinkMapping(\r\n        string[] memory tokens,\r\n        address[] memory chainlinkFeeds\r\n    ) public isChief {\r\n        require(tokens.length == chainlinkFeeds.length, \"lenght-not-same\");\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            _addChainLinkMapping(tokens[i], chainlinkFeeds[i]);\r\n        }\r\n    }\r\n\r\n    function removeChainLinkMapping(string[] memory tokens) public isChief {\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            _removeChainLinkMapping(tokens[i]);\r\n        }\r\n    }\r\n}\r\n\r\ncontract Resolver is Basic {\r\n    struct PriceData {\r\n        uint price;\r\n        uint decimals;\r\n    }\r\n    function getPrice(string[] memory tokens)\r\n    public\r\n    view\r\n    returns (\r\n        PriceData memory ethPriceInUsd,\r\n        PriceData memory btcPriceInUsd,\r\n        PriceData[] memory tokensPriceInETH\r\n    ) {\r\n        tokensPriceInETH = new PriceData[](tokens.length);\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            ChainLinkInterface feedContract = ChainLinkInterface(chainLinkMapping[tokens[i]]);\r\n            tokensPriceInETH[i] = PriceData({\r\n                price: uint(feedContract.latestAnswer()),\r\n                decimals: feedContract.decimals()\r\n            });\r\n        }\r\n        ChainLinkInterface ethFeed = ChainLinkInterface(chainLinkMapping[\"ETH\"]);\r\n        ChainLinkInterface btcFeed = ChainLinkInterface(chainLinkMapping[\"BTC\"]);\r\n        ethPriceInUsd = PriceData({\r\n            price: uint(ethFeed.latestAnswer()),\r\n            decimals: ethFeed.decimals()\r\n        });\r\n\r\n        btcPriceInUsd = PriceData({\r\n            price: uint(btcFeed.latestAnswer()),\r\n            decimals: btcFeed.decimals()\r\n        });\r\n    }\r\n\r\n    function getGasPrice() public view returns (uint gasPrice) {\r\n        gasPrice = uint(ChainLinkInterface(chainLinkMapping[\"gasFast\"]).latestAnswer());\r\n    }\r\n}\r\n\r\ncontract InstaChainLinkResolver is Resolver {\r\n    constructor (string[] memory tokens, address[] memory chainlinkFeeds) public {\r\n        require(tokens.length == chainlinkFeeds.length, \"Lenght-not-same\");\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            _addChainLinkMapping(tokens[i], chainlinkFeeds[i]);\r\n        }\r\n    }\r\n\r\n    string public constant name = \"ChainLink-Resolver-v1\";\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokens\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"chainlinkFeeds\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"chainlinkFeed\",\"type\":\"address\"}],\"name\":\"LogAddChainLinkMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"chainlinkFeed\",\"type\":\"address\"}],\"name\":\"LogRemoveChainLinkMapping\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokens\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"chainlinkFeeds\",\"type\":\"address[]\"}],\"name\":\"addChainLinkMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"chainLinkMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokens\",\"type\":\"string[]\"}],\"name\":\"getPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct Resolver.PriceData\",\"name\":\"ethPriceInUsd\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct Resolver.PriceData\",\"name\":\"btcPriceInUsd\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct Resolver.PriceData[]\",\"name\":\"tokensPriceInETH\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokens\",\"type\":\"string[]\"}],\"name\":\"removeChainLinkMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaChainLinkResolver","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000420000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000004a000000000000000000000000000000000000000000000000000000000000004e00000000000000000000000000000000000000000000000000000000000000520000000000000000000000000000000000000000000000000000000000000056000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005e00000000000000000000000000000000000000000000000000000000000000620000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000006a000000000000000000000000000000000000000000000000000000000000006ed4b5200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004434f4d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035ab4e430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000453555344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004425553440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044c454e440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044c494e4b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044d414e41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534e580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000359464900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003425443000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000130000000000000000000000005f4ec3df9cbd43714fe2740f5e3616155c5b8419000000000000000000000000773616e4d11a78f511299002da57a0a94577f1f4000000000000000000000000986b5e1e1755e3c2440e960477f25201b0a8bbd4000000000000000000000000ee9f2375b4bdf6387aa8265dd4fb8f16512a1d4600000000000000000000000024551a8fb2a7211a25a17b1481f043a8a8adc7f20000000000000000000000001b39ee86ec5979ba5c322b826b3ecb8c799916990000000000000000000000002da4983a622a8498bb1a21fae9d8f6c664939962000000000000000000000000d4ce430c3b67b3e2f7026d86e7128588629e24550000000000000000000000003886ba987236181d98f2401c507fb8bea7871df20000000000000000000000000d16d4528239e9ee52fa531af613acdb23d88c94000000000000000000000000656c0544ef4c98a6a98491833a89204abb045d6b0000000000000000000000008e0b7e6062272b5ef4524250bfff8e5bd3497757000000000000000000000000614715d2af89e6ec99a233818275142ce88d1cfd000000000000000000000000c9ddb0e869d931d031b24723132730ecf3b4f74d000000000000000000000000dc530d9457755926550b59e8eccdae762418155700000000000000000000000082a44d92d6c329826dc557c5e1be6ebec5d5feb900000000000000000000000079291a9d692df95334b1a0b3b4ae6bc606782f8c0000000000000000000000007c5d4f8345e66f68099581db340cd65b078c41f4000000000000000000000000f4030086522a5beea4988f8ca5b36dbc97bee88c","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://5147678ccee38c3132c470f32eb9a75ed78633302387bb2e7771593bd7341502"}]}