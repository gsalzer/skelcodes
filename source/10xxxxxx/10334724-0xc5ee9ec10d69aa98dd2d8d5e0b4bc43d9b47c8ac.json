{"status":"1","message":"OK","result":[{"SourceCode":"// \"SPDX-License-Identifier: UNLICENSED\"\r\n\r\npragma solidity 0.6.9;\r\n\r\ncontract Try06A2\r\n{\r\n    using SafeMath for uint256;\r\n    \r\n    address admin;\r\n\r\n    //@ Token attributes\r\n    string public constant symbol = \"TRY6A2\";\r\n    string public constant name = \"Try06A2 Token\";\r\n    uint8 public constant decimals = 16;\r\n    uint256 totalSupply = 4000000000 * 10 ** uint256(decimals);\r\n  \r\n    \r\n    //@ Event logging\r\n    event Transfer (address payable indexed _to,uint256 indexed _value);\r\n    event Approve (address payable indexed _from, address payable indexed _to, uint256 indexed _value);\r\n    event TransferFrom (address payable indexed _owner,address payable indexed _from, address payable indexed _to, uint256 _amount);\r\n\r\n    //@ Maps: ethereum address to number of tokens\r\n    mapping (address => uint256) public balances;\r\n    \r\n    //@ Owner can allows some other ethereum address to spend the allocated amount of tokens.\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    //@ Constructor / Setup \r\n    constructor () public \r\n    {\r\n        admin = msg.sender;\r\n        balances[admin] = totalSupply;\r\n  \r\n    }\r\n    \r\n    // Checks value entered is valid or not.\r\n    modifier isValidAmount (uint256 _value)\r\n    {\r\n        require (_value > 0, \"Invalid amount!\");\r\n        _;\r\n    }\r\n    \r\n     //@ Usual transfer function transfer tokens from one accont to another.\r\n    function transfer (address payable _to, uint256 _value) public \r\n    isValidAmount (_value)\r\n    returns (bool success)\r\n    {\r\n        require (balances[msg.sender] > _value, \"Insuffcient balance\");\r\n        \r\n        _transfer (msg.sender, _to, _value);    \r\n       \r\n        emit Transfer (_to, _value);\r\n       \r\n        return true;\r\n    }\r\n    \r\n    //@ This fuction give approvement for allowance of a certain value to be spend by a third party address.\r\n    //@ Like a wallet put some value in it and number of token allocated in it is used by address to it the tokens are allocated.\r\n    function approve (address payable _spender, uint256 _value) public \r\n    isValidAmount (_value)\r\n    returns (bool success)\r\n    {\r\n        require (_spender != address(0), \"Address not Exist\");\r\n        require (_value > 0, \"Invalid amount\");\r\n        require (balances[msg.sender] > 0, \"Insuffcient balance\");\r\n        \r\n        allowance[_spender][msg.sender] = _value;\r\n        \r\n        emit Approve (msg.sender, _spender, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    //@ This function is specific to allowance mapping only the one's allocated with certain amount of token \r\n    //@ can access this function\r\n    function transferFrom (address payable _from, address payable _to, uint256 _amount) public \r\n    isValidAmount (_amount)\r\n    returns (bool success)\r\n    {\r\n        require (allowance[msg.sender][_from] >= _amount);\r\n        require (balances[_from] > _amount, \"The owner has Insufficent balance\");\r\n        \r\n        allowance[msg.sender][_from] -= _amount;\r\n        balances[_from] -=_amount;\r\n        balances[_to] += _amount;\r\n        \r\n        emit TransferFrom (_from, msg.sender, _to, _amount);\r\n        \r\n        return true;\r\n    }\r\n    function getTotalSupply() public view returns (uint256) {\r\n    return totalSupply;\r\n    }\r\n\r\n    function getMyBalance() public view returns (uint) {\r\n    return balances[msg.sender];\r\n    }\r\n    function getBalanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n    }\r\n\r\n    //@ Internal function\r\n    function _transfer (address _from, address _to, uint256 _value) internal isValidAmount (_value){\r\n        \r\n        require (_to != address(0), \"Address not Exist\");\r\n        require (balances[_from] > _value, \"Insufficent balance\");\r\n        \r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n    }\r\n\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n    }\r\n\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n    }\r\n\r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Try06A2","CompilerVersion":"v0.6.9+commit.3e3065ac","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f0c9f2d96a84684035e1a3d9261aa0e83ca2006ab9fe40e8c856f4459012cc56"}]}