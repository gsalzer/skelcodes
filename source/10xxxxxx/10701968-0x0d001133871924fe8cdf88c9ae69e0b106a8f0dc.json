{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\nlibrary LTokenManager {\r\n\r\n  function decimalPriceToRate(string calldata _priceString)\r\n    external\r\n    pure\r\n    returns (uint256[2] memory rate_)\r\n  {\r\n    bool hasDp;\r\n    uint256 dp;\r\n    uint256 result;\r\n    uint256 oldResult;\r\n    bytes memory priceBytes = bytes(_priceString);\r\n\r\n    require(priceBytes.length != 0, \"Empty string\");\r\n\r\n    if (priceBytes[0] == \"0\" && priceBytes.length > 1)\r\n      require(priceBytes[1] == \".\", \"Bad format: leading zeros\");\r\n\r\n    for (uint i = 0; i < priceBytes.length; i++) {\r\n      if (priceBytes[i] == \".\" && !hasDp) {\r\n        require(i < priceBytes.length - 1, \"Bad format: expected mantissa\");\r\n        hasDp = true;\r\n      } else if (uint8(priceBytes[i]) >= 48 && uint8(priceBytes[i]) <= 57) {\r\n        if (hasDp) dp++;\r\n        oldResult = result;\r\n        result = result * 10 + (uint8(priceBytes[i]) - 48);\r\n        if (oldResult > result || 10**dp < 10**(dp -1))\r\n          revert(\"Overflow\");\r\n      }\r\n      else\r\n        revert(\"Bad character\");\r\n    }\r\n\r\n    require(result != 0, \"Zero value\");\r\n\r\n    while (result % 10 == 0) {\r\n      result = result / 10;\r\n      dp--;\r\n    }\r\n\r\n    rate_ = [result, 10**dp];\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_priceString\",\"type\":\"string\"}],\"name\":\"decimalPriceToRate\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"rate_\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"LTokenManager","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"petersburg","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c01142f39d6beb5d5eee157ce01680ff43119a7755aa75966b124a068e05315f"}]}