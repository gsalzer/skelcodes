{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n}\r\n\r\ncontract ActionRelayer {\r\n   \r\n    address public owner = 0x08EEc580AD41e9994599BaD7d2a74A9874A2852c;\r\n    \r\n    uint256 MAX_INT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;\r\n    \r\n    receive() external payable {}\r\n\r\n\r\n    function execute(\r\n      address[] memory to, bytes[] memory callData, uint256[] memory value\r\n    ) public {\r\n        require(msg.sender == owner);\r\n        bool callSuccess = false;\r\n        for (uint256 i = 0; i < to.length; i++) {\r\n            (callSuccess, ) = address(to[i]).call{value: value[i]}(callData[i]);\r\n            require(callSuccess);\r\n        }\r\n    }\r\n    \r\n    function approve(\r\n      address[] memory tokens, address to\r\n    ) public {\r\n        require(msg.sender == owner);\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            require(IERC20(tokens[i]).approve(to, MAX_INT));\r\n        }\r\n    }\r\n    \r\n    function takeTokens(\r\n      address[] memory tokens\r\n    ) public {\r\n        require(msg.sender == owner);\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            require(IERC20(tokens[i]).transfer(owner, IERC20(tokens[i]).balanceOf(address(this))));\r\n        }\r\n    }\r\n\r\n  \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"takeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ActionRelayer","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e61b394959b95da43b998d7463d5c13cebe2a4604162fb066a92ccfec679ca99"}]}