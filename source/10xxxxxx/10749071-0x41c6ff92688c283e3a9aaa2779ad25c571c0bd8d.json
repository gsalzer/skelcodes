{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\ninterface IRealityCards {\r\n\r\n    function collectRentAllTokens() external;\r\n    function numberOfTokens() external view returns(uint); \r\n    function ownerOf(uint) external view returns(address); \r\n    function currentOwnerRemainingDeposit(uint) external view returns(uint);\r\n\r\n}\r\n\r\ncontract rentCollector {\r\n    \r\n    mapping (uint256 => address) public marketAddresses; \r\n    uint public numberOfMarkets;\r\n    \r\n    function addMarket(uint _position, address _marketAddress) public {\r\n        require(msg.sender == 0xacD628D01dd8534Db6Ebe4894C1be3c8D34ebe14,\"not owner\");\r\n        marketAddresses[_position] = _marketAddress;\r\n    }\r\n    \r\n    function setNumberOfMarkets(uint _numberOfMarkets) public {\r\n        require(msg.sender == 0xacD628D01dd8534Db6Ebe4894C1be3c8D34ebe14,\"not owner\");\r\n        numberOfMarkets = _numberOfMarkets;\r\n    }\r\n    \r\n    function hasCardExpired() external view returns (bool) {\r\n        bool _expired = false;\r\n        \r\n        for (uint i = 0; i < numberOfMarkets; i++) {\r\n            IRealityCards rc = IRealityCards(marketAddresses[i]);\r\n            for (uint j = 0; j < rc.numberOfTokens(); j++) {\r\n                if (rc.currentOwnerRemainingDeposit(j) == 0 && rc.ownerOf(j) != address(rc)) {\r\n                    _expired = true;\r\n                }\r\n            }\r\n        }\r\n            \r\n    return _expired;\r\n        \r\n    }\r\n    \r\n    function collectRentAllTokensAllMarkets() public \r\n    {\r\n        bool _expired;\r\n        \r\n        for (uint i = 0; i < numberOfMarkets; i++) {\r\n            IRealityCards rc = IRealityCards(marketAddresses[i]);\r\n            _expired = false;\r\n            for (uint j = 0; j < rc.numberOfTokens(); j++) {\r\n                if (rc.currentOwnerRemainingDeposit(j) == 0 && rc.ownerOf(j) != address(rc)) {\r\n                    _expired = true;\r\n                }\r\n            if (_expired) {\r\n                rc.collectRentAllTokens(); \r\n                }\r\n            }\r\n        }\r\n    }\r\n        \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_position\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"}],\"name\":\"addMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectRentAllTokensAllMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasCardExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfMarkets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfMarkets\",\"type\":\"uint256\"}],\"name\":\"setNumberOfMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"rentCollector","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e309f72ef17bef7cf3378f7dd9ccec49a6b1087b232b1c8eee36c8863c0a4023"}]}