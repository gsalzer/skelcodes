{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.0;\r\n\r\ncontract SignatureVerifier {\r\n  /**\r\n   * @notice Recovers the address for an ECDSA signature and message hash, note that the hash is automatically prefixed with \"\\x19Ethereum Signed Message:\\n32\"\r\n   * @return address The address that was used to sign the message\r\n   */\r\n  function recoverAddress (bytes32 hash, uint8 v, bytes32 r, bytes32 s) public pure returns (address) {\r\n    bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\r\n    bytes32 prefixedHash = keccak256(abi.encodePacked(prefix, hash));\r\n    \r\n    return ecrecover(prefixedHash, v, r, s);\r\n  }\r\n  \r\n  /**\r\n   * @notice Checks if the recovered address from an ECDSA signature is equal to the address `signer` provided.\r\n   * @return valid Whether the provided address matches with the signature\r\n   */\r\n  function isValid (address signer, bytes32 hash, uint8 v, bytes32 r, bytes32 s) external pure returns (bool) {\r\n    return recoverAddress(hash, v, r, s) == signer;\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"recoverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SignatureVerifier","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dd35c138377b9aa4a891719143a1619db85dfe82740204b178d1cedea381150e"}]}