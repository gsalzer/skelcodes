{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <=0.7.0;\r\n\r\ncontract election2020 {\r\n  address payable public owner;\r\n  uint256 constant public feePerc = 5;\r\n  mapping (address => uint256) public betsBiden;\r\n  uint256 public betsBidenTotal;\r\n  mapping (address => uint256) public betsTrump;\r\n  uint256 public betsTrumpTotal;\r\n  uint256 public fees;\r\n  uint8 public electionResult; // 0 - election not completed, 1 - Biden won, 2 - Trump won\r\n  string public dappURL;\r\n  uint256 public electionDay = 1604379600; // 11/3/2020 12:00:00 AM EST\r\n\r\n  constructor() {\r\n    owner = tx.origin;\r\n    //electionResult = 0;\r\n    //betsBidenTotal = 0;\r\n    //betsTrumpTotal = 0;\r\n    //fees = 0;\r\n  }\r\n\r\n  /**\r\n   * Make sure cannot receive ETH any other way.\r\n   */\r\n  fallback() external payable {\r\n    revert(\"Not accepting payments any other way.\");\r\n  }\r\n\r\n  /**\r\n   * Change election day, in case it is changed officially.\r\n   */\r\n  function setElectionDay(uint256 _electionDay) external {\r\n    require(tx.origin == owner && 0 == electionResult);\r\n    electionDay = _electionDay;\r\n  }\r\n\r\n  function betOnBiden() external payable {\r\n    require(block.timestamp < electionDay, \"Too late - election has started!\");\r\n    uint256 fee = (msg.value * feePerc) / 100;\r\n    fees += fee;\r\n    betsBidenTotal += msg.value - fee;\r\n    betsBiden[tx.origin] = betsBiden[tx.origin] + msg.value - fee;\r\n  }\r\n\r\n  function betOnTrump() external payable {\r\n    require(block.timestamp < electionDay, \"Too late - election has started!\");\r\n    uint256 fee = (msg.value * feePerc) / 100;\r\n    fees += fee;\r\n    betsTrumpTotal += msg.value - fee;\r\n    betsTrump[tx.origin] = betsTrump[tx.origin] + msg.value - fee;\r\n  }\r\n\r\n  /**\r\n   * Enter results after election completes / oracle function.\r\n   */\r\n  function setElectionResult(uint8 _electionResult) external {\r\n    require(tx.origin == owner && 0 == electionResult);\r\n    electionResult = _electionResult;\r\n  }\r\n\r\n  /**\r\n   * Owner withdrawal of fees.\r\n   */\r\n  function withdrawFees() external {\r\n    require(tx.origin == owner && electionResult != 0, \"Election not complete!\");\r\n    owner.transfer(fees);\r\n    fees = 0;\r\n  }\r\n\r\n  /**\r\n   * Better withdrawal of fees.\r\n   */\r\n  function withdrawWins() public {\r\n    require(electionResult != 0, \"Election not complete!\");\r\n    uint256 win;\r\n    if (1 == electionResult) { // Biden won\r\n      win = ((betsBiden[tx.origin] * (100000 * betsTrumpTotal / betsBidenTotal)) / 100000) + betsBiden[tx.origin];\r\n    } else { // Trump won\r\n      win = ((betsTrump[tx.origin] * (100000 * betsBidenTotal / betsTrumpTotal)) / 100000) + betsTrump[tx.origin];\r\n    }\r\n    betsBiden[tx.origin] = 0;\r\n    betsTrump[tx.origin] = 0;\r\n    tx.origin.transfer(win);\r\n  }\r\n\r\n  /**\r\n   * Receive ETH to withdraw your wins.\r\n   */\r\n  receive() external payable {\r\n    require(msg.value == 0, \"Must send 0 to retrieve your wins.\");\r\n    withdrawWins();\r\n  }\r\n\r\n  function setDAppURL(string memory _dappURL) external {\r\n    require(tx.origin == owner);\r\n    dappURL = _dappURL;\r\n  }\r\n\r\n  function getMyBets() external view returns (uint256 myBetsTrump, uint256 myBetsBiden) {\r\n    myBetsTrump = betsTrump[tx.origin];\r\n    myBetsBiden = betsBiden[tx.origin];\r\n  }\r\n\r\n  // ERC-20 Methods\r\n  function name() public pure returns (string memory) { return \"EL20 - Bet on US Presidential Election 2020\"; }\r\n  function symbol() public pure returns (string memory) { return \"EL20\"; }\r\n  function decimals() public pure returns (uint8) { return 18; }\r\n  function totalSupply() public pure returns (uint256) { return 0; }\r\n  function transfer(address, uint256) public pure returns (bool success) { return false; }\r\n  function transferFrom(address, address, uint256) public pure returns (bool success) { return false; }\r\n  function approve(address, uint256) public pure returns (bool success) { return false; }\r\n  function allowance(address, address) public pure returns (uint256 remaining) { return 0; }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return betsTrump[_owner] + betsBiden[_owner];\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betOnBiden\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betOnTrump\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"betsBiden\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betsBidenTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"betsTrump\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betsTrumpTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionResult\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePerc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyBets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"myBetsTrump\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"myBetsBiden\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dappURL\",\"type\":\"string\"}],\"name\":\"setDAppURL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_electionDay\",\"type\":\"uint256\"}],\"name\":\"setElectionDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_electionResult\",\"type\":\"uint8\"}],\"name\":\"setElectionResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"election2020","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://33d5de7e800834ad8203b8d05bbad748dc4a953587a6dbbc95ee76319fdf3a5a"}]}