{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\nSmart Contract was developed by nodeberry.com for cubebit business solutions.\r\n\r\n*/\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\ncontract AdcubeContract1 {\r\n    \r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    uint256 public price = 50000000000000000;\r\n    uint256 public spillover = 3880000000000000;\r\n    uint256 public referralBonus = 5000000000000000;\r\n    address public owner;\r\n    \r\n    uint256 public totalUsers = 0;\r\n    uint256 public userAccounts = 0;\r\n    \r\n    struct User{\r\n        address referrer;\r\n        uint256 totalAccounts;\r\n        bool active;\r\n        mapping(uint256 => Account) accounts;\r\n    }\r\n    \r\n    struct UserDetails{\r\n        string fname;\r\n        string lname;\r\n        string username;\r\n        string country;\r\n        string location;\r\n        bool show;\r\n    }\r\n    \r\n    struct Account {\r\n        bool active;\r\n        address[] uplines;\r\n        address[] downlines;\r\n    }\r\n    \r\n    mapping(address => User) public users;\r\n    \r\n    mapping (address => UserDetails) public details;\r\n    \r\n    event Recieved(address,uint);\r\n    \r\n    event Referral(address,uint);\r\n    \r\n    event LevelBonus(address,uint);\r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function updateFiatPrice(uint256 _price, uint256 _referralBonus, uint256 _spillover) public onlyOwner{\r\n         price = _price;\r\n         spillover = _spillover;\r\n         referralBonus = _referralBonus;\r\n    }\r\n    \r\n    function register(address payable _referrer, uint256 _referrerAccount) external payable{\r\n        require(msg.value == price);\r\n        if(_referrer == owner){\r\n            registration(msg.sender,_referrer,_referrerAccount);\r\n        }\r\n        else{\r\n            User storage u = users[msg.sender];\r\n            User storage r = users[_referrer];\r\n            Account storage ra = r.accounts[_referrerAccount];\r\n            require(r.active == true);\r\n            require(ra.active == true);\r\n            require(u.active == false);\r\n            registration(msg.sender,_referrer,_referrerAccount);\r\n        }\r\n    }\r\n    \r\n    function deactive(address _account, uint256 _accountNo) public onlyOwner{\r\n        User storage u = users[_account];\r\n        Account storage ua = u.accounts[_accountNo];\r\n        ua.active = false;\r\n    }\r\n    \r\n    function blacklist(address _account) public onlyOwner{\r\n        User storage u = users[_account];\r\n        u.active = false;\r\n    }\r\n    \r\n    function reactivate(address _account) public onlyOwner{\r\n        User storage u = users[_account];\r\n        u.active = true;\r\n    }\r\n    \r\n    function registration(address _user, address payable _referrer, uint256 _referrerAccount) private{\r\n        totalUsers = totalUsers + 1;\r\n        userAccounts = userAccounts + 1;\r\n        User storage u = users[_user];\r\n        Account storage ua = u.accounts[1];\r\n        if(_referrer != owner){\r\n            u.referrer = _referrer;\r\n            u.totalAccounts = 1;\r\n            u.active = true;\r\n            ua.active = true;\r\n            pushDownlines(_user,_referrer,_referrerAccount);\r\n            pushUplines(_user,_referrer,_referrerAccount,1);\r\n            sendDirectBonus(_referrer);\r\n        } \r\n        else{\r\n            u.referrer = owner;\r\n            u.totalAccounts = 1;\r\n            u.active = true;\r\n            ua.active = true;\r\n            sendDirectBonus(payable(owner));\r\n            pushDownlines(_user,_referrer,_referrerAccount);\r\n            pushUplines(_user,_referrer,_referrerAccount,1);\r\n        }\r\n    }\r\n    \r\n    function pushUplines(address _user, address payable _referrer,uint256 _referrerAccount, uint256 _userAccount) private{\r\n        User storage u = users[_user];\r\n        User storage r = users[_referrer];\r\n        Account storage ra = r.accounts[_referrerAccount];\r\n        Account storage ua = u.accounts[_userAccount];\r\n        ua.uplines.push(_referrer);   \r\n        for(uint256 i = 0; i < ra.uplines.length; i++){\r\n               ua.uplines.push(ra.uplines[i]);\r\n         }\r\n        sendSpillOver(ua.uplines);\r\n    }\r\n    \r\n    function pushDownlines(address _user, address payable _referrer, uint256 _referrerAccount) private {\r\n        User storage r = users[_referrer];\r\n        Account storage ra = r.accounts[_referrerAccount];\r\n        ra.downlines.push(_user);\r\n        for(uint256 i=0; i < ra.uplines.length; i++ ){\r\n            User storage u = users[ra.uplines[i]];\r\n            uint256 total = u.totalAccounts;\r\n            for(uint256 j=total;j>0;j--){\r\n              Account storage ua = u.accounts[j];\r\n              if(ua.active == true){\r\n                  ua.downlines.push(_user);\r\n                  break;\r\n              }\r\n              j++;\r\n            }\r\n         }\r\n        if(_referrerAccount == 1 && ra.downlines.length >= 39){\r\n                 ra.active = false;\r\n         }\r\n         else if(_referrerAccount == 2 && ra.downlines.length >= 1082){\r\n                 ra.active = false;\r\n         }\r\n         else if(_referrerAccount > 2 && ra.downlines.length >= 29514){\r\n                ra.active = false;\r\n         }\r\n         else{\r\n             ra.active = true;\r\n         }\r\n    }\r\n    \r\n    \r\n    function purchase() external payable{\r\n         require(msg.value == price);\r\n         User storage u = users[msg.sender];\r\n         uint256 newAccount = u.totalAccounts;\r\n         newAccount = newAccount + 1;\r\n         uint256 oldAccount = u.totalAccounts;\r\n         require(u.active == true);\r\n         userAccounts = userAccounts + 1;\r\n         Account storage o = u.accounts[oldAccount];\r\n         Account storage a = u.accounts[newAccount];\r\n         a.active = true;\r\n         a.uplines = o.uplines;\r\n         u.totalAccounts = newAccount;\r\n         sendDirectBonus(payable(u.referrer));\r\n         sendSpillOver(a.uplines);\r\n    }\r\n    \r\n    \r\n    function sendSpillOver(address[] memory _reciepients) private{\r\n        if(_reciepients.length > 9){\r\n           for(uint i=0;i< 9;i++){\r\n              payable( _reciepients[i]).transfer(spillover);\r\n              emit LevelBonus(_reciepients[i],spillover);\r\n           }\r\n        }\r\n        else{\r\n          for(uint i=0;i<_reciepients.length;i++){\r\n              payable( _reciepients[i]).transfer(spillover);\r\n              emit LevelBonus(_reciepients[i],spillover);\r\n           }  \r\n        }\r\n    }\r\n    \r\n    function sendDirectBonus(address payable _reciever) private {\r\n        _reciever.transfer(referralBonus);\r\n        emit Referral(_reciever,referralBonus);\r\n    }\r\n    \r\n    function updateOwnership(address _newOwner) public onlyOwner{\r\n        owner = _newOwner;\r\n    }\r\n    \r\n    function balanceOf() external view returns(uint256){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function getUplines(uint _accountId) public view returns(address[] memory, bool status){\r\n        User storage u = users[msg.sender];\r\n        require(u.totalAccounts >= _accountId);\r\n        Account storage a = u.accounts[_accountId];\r\n        return(a.uplines,a.active);\r\n    }\r\n    \r\n    function getDownlines(uint _accountId) public view returns(address[] memory, bool status){\r\n        User storage u = users[msg.sender];\r\n        Account storage a = u.accounts[_accountId];\r\n        require(a.active == true);\r\n        return(a.downlines,a.active);\r\n    }\r\n    \r\n    function getOwnerDonwlines(uint _accountId) public view onlyOwner returns(address[] memory){\r\n        User storage u = users[owner];\r\n        Account storage a = u.accounts[_accountId];\r\n        return(a.downlines);\r\n    }\r\n    \r\n    function getAccountDetails(address _user) public view returns(address, uint, bool){\r\n        User storage u = users[_user];\r\n        return(u.referrer,u.totalAccounts,u.active);\r\n    }\r\n    \r\n    function getUserAccountDetails(address _user, uint256 _account) public view returns(address[] memory, address[] memory){\r\n        User storage u = users[_user];\r\n        Account storage a = u.accounts[_account];\r\n        return(a.uplines,a.downlines);\r\n    }\r\n    \r\n    function validate(address _address) public view returns(bool){\r\n        User storage u = users[_address];\r\n        return u.active;\r\n    }\r\n    \r\n    function updateProfile(string memory _fname, string memory _lname, string memory _country, string memory _location, string memory _username, bool _show) public{\r\n        UserDetails storage detail = details[msg.sender];\r\n        detail.fname = _fname;\r\n        detail.lname = _lname;\r\n        detail.country = _country;\r\n        detail.location = _location;\r\n        detail.username = _username;\r\n        detail.show = _show;\r\n    }\r\n    \r\n    function getProfile() public view returns(string memory,string memory,string memory,string memory,string memory,bool){\r\n        UserDetails storage detail = details[msg.sender];\r\n        return(detail.fname,detail.lname,detail.country,detail.location,detail.username,detail.show);\r\n    }\r\n    \r\n    function drain() public onlyOwner{\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LevelBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Recieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Referral\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_accountNo\",\"type\":\"uint256\"}],\"name\":\"deactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"details\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"fname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"show\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAccountDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accountId\",\"type\":\"uint256\"}],\"name\":\"getDownlines\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accountId\",\"type\":\"uint256\"}],\"name\":\"getOwnerDonwlines\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProfile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accountId\",\"type\":\"uint256\"}],\"name\":\"getUplines\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_account\",\"type\":\"uint256\"}],\"name\":\"getUserAccountDetails\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"reactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referrerAccount\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spillover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spillover\",\"type\":\"uint256\"}],\"name\":\"updateFiatPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"updateOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_show\",\"type\":\"bool\"}],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAccounts\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AdcubeContract1","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://816399ba9b629e8fee7751fc6c424b34a5ad417dac702e72b73cdb16c0f2d4a4"}]}