{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ninterface Token{\r\n    function assetContracts(address input) external view returns (bool);\r\n    function getTokens(address sendTo) external payable;\r\n    function setGasPrice(uint input) external;\r\n    function pricerAddress() external view returns (address payable);\r\n}\r\n\r\ncontract Secondary {\r\n    \r\n    address private OUSDAddress = 0xD2d01dd6Aa7a2F5228c7c17298905A7C7E1dfE81;\r\n   \r\n    function assetContracts(address input) internal view returns (bool){\r\n        return input == OUSDAddress || Token(OUSDAddress).assetContracts(input);\r\n    }\r\n    \r\n    function setGasPrice(uint input) internal {\r\n       \r\n       address pricerAddress = Token(OUSDAddress).pricerAddress();\r\n       Token(pricerAddress).setGasPrice(input);\r\n    }\r\n}\r\n\r\ncontract Frontpage is Secondary{\r\n\r\n    function buyTokens(address to, uint gasPrice) public payable {\r\n        require(assetContracts(to));\r\n        \r\n        setGasPrice(gasPrice);\r\n        Token(to).getTokens.value(msg.value)(msg.sender);\r\n    }\r\n   \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Frontpage","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://687fd94402c59741f764c1511927edb838234135ce53830277097d619c64d5e9"}]}