{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract OldContract\r\n{\r\n    function balanceOf(address addr) public view returns(uint256);\r\n    function user_addr(uint32 index)public view returns(address);\r\n}\r\n\r\ncontract AnowToken {\r\n    string public name = 'Anow ';\r\n    string public symbol = 'Anow';\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply;\r\n    uint256 private team_before_miner=3000000 ether;\r\n    mapping (address => USERINFO) public user;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    address private admin;\r\n    address private owner;\r\n    uint8 private updata_old;\r\n    struct USERINFO{\r\n        uint256 anow;\r\n        uint256 mine;\r\n        uint256 time;\r\n        uint8 is_hacker;\r\n    }\r\n    \r\n    constructor () public {\r\n        admin=msg.sender;\r\n        owner=address(0x166451fFd5F53d2691e0734bEF2f3503747380B9);\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n\r\n        require(_to !=address(0x0));\r\n        require(user[_from].anow >= _value);\r\n        require(user[_to].anow + _value > user[_to].anow);\r\n\r\n        uint previousBalances = user[_from].anow + user[_to].anow; \r\n        user[_from].anow -= _value;\r\n        user[_to].anow += _value;\r\n        emit Transfer(_from, _to, _value); \r\n        assert(user[_from].anow + user[_to].anow == previousBalances);  \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value); \r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]); \r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value; \r\n        return true;\r\n    }\r\n    \r\n    function balanceOf(address addr)public view returns(uint256)\r\n    {\r\n        return user[addr].anow;\r\n    }\r\n    \r\n    //挖矿\r\n    function set_miner(uint256 anow)public\r\n    {\r\n        require(anow<=user[msg.sender].anow);\r\n        user[msg.sender].anow -= anow;\r\n        totalSupply -= anow;\r\n        user[msg.sender].mine +=anow;\r\n        user[msg.sender].time =now;\r\n    }\r\n    //取矿\r\n\r\n    function get_miner(uint256 anow)public\r\n    {\r\n        require(user[msg.sender].is_hacker == 0);\r\n        uint256 time=now;\r\n        require(user[msg.sender].mine > 0);\r\n        require(time > user[msg.sender].time + 432000);\r\n        uint256 _anow=(user[msg.sender].mine)+user[msg.sender].mine/10;\r\n        _anow=(_anow > anow?anow:_anow);\r\n        totalSupply +=_anow;\r\n        user[msg.sender].mine = 0;\r\n        user[msg.sender].anow=user[msg.sender].anow+_anow;\r\n    }\r\n    function set_hacker(address addr,uint8 flags)public\r\n    {\r\n        require(msg.sender == admin || msg.sender == owner);\r\n        user[addr].is_hacker = flags; \r\n    }\r\n    //预挖\r\n    function team_miner(uint256 anow)public\r\n    {\r\n        require(msg.sender == admin || msg.sender == owner);\r\n        require(anow <= team_before_miner);\r\n        team_before_miner -= anow;\r\n        user[msg.sender].anow +=anow;\r\n    }\r\n    \r\n    function destroy_anow(uint256 anow)public\r\n    {\r\n        require(msg.sender == admin || msg.sender == owner);\r\n        require(anow <= user[owner].anow);\r\n        require(anow <= totalSupply);\r\n        totalSupply -=anow;\r\n        user[msg.sender].anow -=anow;\r\n    }\r\n    function get_old_anow(address contr, uint32 first,uint32 last)public\r\n    {\r\n        require(updata_old == 0);\r\n        address addr;\r\n        uint256 total;\r\n        uint256 a;\r\n        OldContract old=OldContract(contr);\r\n        for(uint32 i=first;i<=last;i++)\r\n        {\r\n            addr=old.user_addr(i);\r\n            a=old.balanceOf(addr);\r\n            user[addr].anow=a;\r\n            total+=a;\r\n        }\r\n        if(first == 1)\r\n            updata_old = 1;\r\n            \r\n        totalSupply += total;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contr\",\"type\":\"address\"},{\"name\":\"first\",\"type\":\"uint32\"},{\"name\":\"last\",\"type\":\"uint32\"}],\"name\":\"get_old_anow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"flags\",\"type\":\"uint8\"}],\"name\":\"set_hacker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"anow\",\"type\":\"uint256\"}],\"name\":\"destroy_anow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"name\":\"anow\",\"type\":\"uint256\"},{\"name\":\"mine\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"is_hacker\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"anow\",\"type\":\"uint256\"}],\"name\":\"set_miner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"anow\",\"type\":\"uint256\"}],\"name\":\"team_miner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"anow\",\"type\":\"uint256\"}],\"name\":\"get_miner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"AnowToken","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://71f8269c2fb655e5b27de3e3770a34cdbdedbf17113c979393b88f9b28685a23"}]}