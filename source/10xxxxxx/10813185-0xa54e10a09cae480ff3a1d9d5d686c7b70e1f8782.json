{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >= 0.5.0 < 0.6.0;\r\n\r\n\r\n/**\r\n * @title ROS marker\r\n */\r\n\r\n\r\n/**\r\n * @title ERC20 Standard Interface\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Token implementation\r\n */\r\ncontract TESTMarker is IERC20 {\r\n    string public name = \"TESTMarker\";\r\n    string public symbol = \"TESTMarker\";\r\n    uint8 public decimals = 18;\r\n    \r\n    uint256 companyAmount;\r\n\r\n    uint256 _totalSupply;\r\n    mapping(address => uint256) balances;\r\n\r\n    address public owner;\r\n    address public company;\r\n\r\n    modifier isOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        owner   = msg.sender;\r\n        company = 0x071F73f4D0befd4406901AACE6D5FFD6D297c561;\r\n\r\n        companyAmount   = toWei(100000000000);\r\n        _totalSupply    = toWei(100000000000);  //100,000,000,000\r\n\r\n        require(_totalSupply == companyAmount);\r\n        \r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, balances[owner]);\r\n        \r\n        transfer(company, companyAmount);\r\n\r\n\r\n        require(balances[owner] == 0);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address who) public view returns (uint256) {\r\n        return balances[who];\r\n    }\r\n    \r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(msg.sender != to);\r\n        require(msg.sender == owner || msg.sender == company);\r\n        require(value > 0);\r\n        \r\n        require( balances[msg.sender] >= value );\r\n        require( balances[to] + value >= balances[to] );\r\n\r\n        if (to == address(0) || to == address(0x1) || to == address(0xdead)) {\r\n             _totalSupply -= value;\r\n        }\r\n\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function retrieveCoins(address _address, uint256 value) public {\r\n        require(msg.sender == company);\r\n        \r\n        balances[_address] -= value;\r\n        balances[msg.sender] += value;\r\n\r\n        emit Transfer(_address, msg.sender, value);\r\n    }\r\n\r\n    \r\n\r\n    /** @dev private function\r\n     */\r\n\r\n    function toWei(uint256 value) private view returns (uint256) {\r\n        return value * (10 ** uint256(decimals));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"retrieveCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TESTMarker","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f764d2a111236801d07d8ba07d3b7a9b299e767c8b6dc9f231058c4de17db4da"}]}