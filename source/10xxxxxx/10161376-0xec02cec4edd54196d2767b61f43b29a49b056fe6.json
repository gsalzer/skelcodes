{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**Copyright (C) 2017-2020 Unifier System *Code by Ann Mandriana & Dimas Fachri\r\n*All righst reserved.\r\n*Author : unifiersystem Company supported by Vitalik, Satoshi & CodeXpert\r\n*/\r\n\r\ninterface MandrianaXDimas { function receiveApproval (address _from, uint256 _value, address _token, bytes _extradata) external;}\r\n\r\ncontract UnifierSecurity {\r\n    address public owner; ///Unifier System///\r\n    \r\n    constructor(){ ///Unifier System///\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner { ///Unifier System///\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership (address newOwner) onlyOwner { ///Unifier System///\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract UnifierSystem is UnifierSecurity {\r\n\r\n    string public name = \"Unifier\"; ///Unifier///\r\n    string public symbol = \"UNIF\"; ///UNIF///\r\n    uint8 public decimals = 7;\r\n    uint256 public totalSupply; ///Max to 100 Million UNIF///\r\n    \r\n    mapping (address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => bool) public frozenAccount;\r\n    \r\n    event Transfer ( address indexed from, address indexed to, uint256 value );\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event FrozenFunds(address target, bool frozen);\r\n    \r\n    constructor(\r\n        uint256 initialSupply,\r\n        string tokenName, ///Unifier///\r\n        string tokenSymbol ///UNIF///\r\n        ) public{\r\n            totalSupply = initialSupply*10**uint256(decimals);\r\n            balanceOf[msg.sender] = totalSupply;\r\n            name = tokenName; ///Unifier///\r\n            symbol = tokenSymbol; ///UNIF///\r\n    }\r\n    \r\n/** TRANSFER SECTION by Ann Mandriana & Dimas Fachri\r\n*/\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        \r\n        require(_to !=0x0);\r\n        require(balanceOf[_from] >=_value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(!frozenAccount[msg.sender]);\r\n        \r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        \r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        \r\n        emit Transfer (_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool success){\r\n        \r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    /// END of TRANSFER SECTION of Unifier $UNIF ///\r\n    \r\n    \r\n    /// Allowance of $UNIF ///\r\n    function transferFrom (address _from, address _to, uint256 _value) public returns (bool success){\r\n        \r\n        require(_value <=allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -=_value;\r\n        _transfer(_from,_to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve (address _spender, uint256 _value) public\r\n    returns (bool success){\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approveAndCall(address _spender, uint256 _value, bytes _extradata) public returns (bool success){\r\n        MandrianaXDimas spender = MandrianaXDimas(_spender);\r\n        \r\n        if(approve(_spender,_value)){\r\n            spender.receiveApproval(msg.sender, _value, this, _extradata);\r\n            return true;\r\n        }\r\n    }\r\n    /// Allowance of $UNIF End ///\r\n    \r\n    /// BURN of $UNIF ///\r\n    function burn (uint256 _value) onlyOwner public returns (bool success){\r\n        require(balanceOf[msg.sender] >= _value);\r\n        \r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function burnFrom(address _from, uint256 _value) onlyOwner public returns (bool success){\r\n        require(balanceOf[_from] >= _value);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        \r\n        balanceOf[_from] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n        \r\n    }\r\n    /// BURN of $UNIF End ///\r\n    \r\n    ///Mining and Minted $UNIF arrange by Ann Mandriana & Dimas Fachri///\r\n    function PreMining (address target, uint256 miningAmount) onlyOwner {\r\n        balanceOf[target] += miningAmount;\r\n        totalSupply += miningAmount;\r\n    }\r\n    /// Frozen Account will be only Accepted by the Unifier if there are Hacking activity ///\r\n    /// We only do it if there is a Stolen from Market Exchange or Reported as Scam ///\r\n    function freezeAccount (address target, bool freeze) onlyOwner {\r\n        frozenAccount[target] = freeze;\r\n        emit FrozenFunds (target, freeze);\r\n    }\r\n    /// End of Frozen Acoount Safety ///\r\n    \r\n    \r\n    \r\n/** Instagram at _itsmydims & at mandrianamusic\r\n*0x6FbaEC24476322C597d760CdA4856e32718d39e3 (Owner Address) \r\n*Â©2017-2020 by Unifier System, Ann Mandriana & Dimas Fachri /// (codexpert) (vitalik) (satoshi)\r\n*/\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"miningAmount\",\"type\":\"uint256\"}],\"name\":\"PreMining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extradata\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]","ContractName":"UnifierSystem","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000004ff000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000007556e6966696572000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004554e494600000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4d64b3a000a4f6f1f5c776b97409347016f9caed71a8b8a6a0e2e2b3dd447080"}]}