{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Erc20 {\r\n    function balanceOf(address _owner) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n    function approve(address _spender, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract Exchange {\r\n    function trade(\r\n        address src,\r\n        uint256 srcAmount,\r\n        address dest,\r\n        address destAddress,\r\n        uint256 maxDestAmount,\r\n        uint256 minConversionRate,\r\n        address walletId\r\n    ) public payable returns (uint256);\r\n}\r\n\r\ncontract LendingPool {\r\n    function deposit( address _reserve, uint256 _amount, uint16 _referralCode) external payable;\r\n}\r\n\r\ncontract aDaiGateway is Ownable {\r\n    Exchange constant kyberEx = Exchange(0x818E6FECD516Ecc3849DAf6845e3EC868087B755);\r\n    LendingPool constant lendingPool = LendingPool(0x398eC7346DcD622eDc5ae82352F02bE94C62d119);\r\n\r\n    Erc20 constant  dai = Erc20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\r\n    Erc20 constant aDai = Erc20(0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d);\r\n    address constant etherAddr = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\r\n\r\n    uint16 constant referral = 47;\r\n\r\n    constructor() public {\r\n        dai.approve(0x3dfd23A6c5E8BbcFc9581d2E864a68feb6a076d3, uint256(-1)); //lendingPoolCore\r\n    }\r\n\r\n    function() external payable {\r\n        etherToaDai(msg.sender);\r\n    }\r\n\r\n    function etherToaDai(address to)\r\n        public\r\n        payable\r\n        returns (uint256 outAmount)\r\n    {\r\n        uint256 in_eth = (msg.value * 997) / 1000;\r\n        uint256 amount = kyberEx.trade.value(in_eth)(\r\n            etherAddr,\r\n            in_eth,\r\n            address(dai),\r\n            address(this),\r\n            10**28,\r\n            1,\r\n            owner\r\n        );\r\n        lendingPool.deposit(address(dai), amount, referral);\r\n        outAmount = aDai.balanceOf(address(this));\r\n        aDai.transfer(to, outAmount);\r\n    }\r\n\r\n    function makeprofit() public {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"makeprofit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"etherToaDai\",\"outputs\":[{\"name\":\"outAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"aDaiGateway","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://eeae97cfe4b4f9a4ec6860f2b2b4b47da987e98a8f095478ae6e1b458b385907"}]}