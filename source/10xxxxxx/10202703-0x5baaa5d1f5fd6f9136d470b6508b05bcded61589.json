{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.5;\r\n\r\ninterface IMakerPriceFeed {\r\n  function read() external view returns (bytes32);\r\n}\r\n\r\ncontract MultiTransfer {\r\n    address owner;\r\n    address oracle;\r\n    \r\n    constructor (address _oracle) public {\r\n        owner = msg.sender;\r\n        oracle = _oracle;\r\n    }\r\n    \r\n    function changeOracleAddress(\r\n        address _oracle\r\n    )\r\n    public\r\n    {\r\n        require(msg.sender == owner);\r\n        oracle = _oracle;\r\n        \r\n    }\r\n    \r\n    function multiTransferETH(\r\n        address[] memory to,\r\n        uint256[] memory amounts\r\n    )\r\n    public\r\n    payable\r\n    {\r\n        require(to.length == amounts.length);\r\n        uint256 total = msg.value;\r\n        for(uint256 i = 0; i < to.length; i++) {\r\n            require(total >= amounts[i]);\r\n            address(uint160(to[i])).transfer(amounts[i]);\r\n            total -= amounts[i];\r\n        }\r\n        msg.sender.transfer(total);\r\n    }\r\n    \r\n    function multiTransferUSD(\r\n        address[] memory to,\r\n        uint256[] memory amounts\r\n    )\r\n    public\r\n    payable\r\n    {\r\n        require(to.length == amounts.length);\r\n        uint256 total = msg.value;\r\n        uint256 price = 10**36 / uint256(IMakerPriceFeed(oracle).read());\r\n        uint256 toSent;\r\n        \r\n        for(uint256 i = 0; i < to.length; i++) {\r\n            toSent = amounts[i] * price;\r\n            require(total >= toSent);\r\n            address(uint160(to[i])).transfer(toSent);\r\n            total -= toSent;\r\n        }\r\n        msg.sender.transfer(total);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"changeOracleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransferETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransferUSD\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"MultiTransfer","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000729d19f657bd0614b4985cf1d82531c67569197b","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://e80876ac1ec9dba6336dd6ef2a7145e798752086987505638f89be587c8ec6d5"}]}