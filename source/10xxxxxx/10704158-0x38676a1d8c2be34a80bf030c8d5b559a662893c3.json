{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20 {\r\n  uint256 public totalSupply;\r\n\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract SATOPAYLiquidity {\r\n\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    \r\n    constructor() public {\r\n        owner = address(0x8f75E4E6110F5112E37B260B3644473cc2085d71); // The reserves wallet address\r\n        \r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"You are not the owner\");\r\n        _;\r\n    }\r\n\r\n    \r\n    \r\n    // transfer Ownership to other address\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0x0));\r\n        emit OwnershipTransferred(owner,_newOwner);\r\n        owner = _newOwner;\r\n    }\r\n    \r\n\r\n    // keep all tokens sent to this address\r\n    function() payable public {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    // callable by owner only, after specified time\r\n    function withdrawAll() onlyOwner public {\r\n       // withdraw balance\r\n       msg.sender.transfer(address(this).balance);\r\n       emit Withdrew(msg.sender, address(this).balance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20(address _tokenContract) onlyOwner public {\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(this);\r\n       token.transfer(owner, tokenBalance);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, tokenBalance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20Amount(address _tokenContract, uint256 _amount) onlyOwner public {\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(this);\r\n       require(tokenBalance >= _amount, \"Not enough funds in the reserve\");\r\n       token.transfer(owner, _amount);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, _amount);\r\n    }\r\n\r\n\r\n    event Received(address from, uint256 amount);\r\n    event Withdrew(address to, uint256 amount);\r\n    event WithdrewTokens(address tokenContract, address to, uint256 amount);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20Amount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewTokens\",\"type\":\"event\"}]","ContractName":"SATOPAYLiquidity","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3bb4f2dc2dbbeb01d677b44b29c2fa6f0c4b59bd35cf87f2e0163a0c41bc1ff0"}]}