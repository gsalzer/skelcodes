{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ncontract InfiniteEthereum {\r\n    address public ownerWallet;\r\n\r\n    struct PoolStruct {\r\n        uint currentPool;\r\n        address user;\r\n        uint referrerID;\r\n        uint currentID;\r\n        uint[] referral;\r\n        uint payment_received; \r\n    }\r\n    \r\n    uint public DOWNLINE_LIMIT = 5;\r\n    bool public lockStatus;\r\n    \r\n    mapping(uint => mapping(uint =>PoolStruct)) public poolusers;\r\n    mapping (uint => mapping(uint => address)) public poolList;\r\n    mapping (uint => uint) public PoolcurrentID;\r\n    mapping (address => mapping(uint => uint)) public totalEarnings;\r\n    mapping (address => mapping(uint => uint[])) public userSequenceID;\r\n    \r\n    mapping (uint => uint) public poolPrice;\r\n    mapping (address => mapping (uint => bool)) public levelStatus;\r\n    \r\n    event JoinFee( address indexed UserAddress, uint UserID, uint Amount, uint Time);\r\n    event BuyPool(uint indexed Pool, address indexed UserAddress, uint UserID, address indexed toaddress, uint RefererID, uint Amount, uint Time);\r\n    event ReInvest(uint indexed Pool, address indexed UserAddress, uint ReInvestID, uint Time); \r\n    \r\n    constructor() public {\r\n        ownerWallet = msg.sender;\r\n        poolPrice[1] = 0.05 ether;\r\n        poolPrice[2] = 0.1 ether;\r\n        poolPrice[3] = 0.4 ether;\r\n        poolPrice[4] = 1.6 ether;\r\n        poolPrice[5] = 6.4 ether;\r\n        poolPrice[6] = 25.6 ether;\r\n        poolPrice[7] = 102.4 ether;\r\n        poolPrice[8] = 409.6 ether;\r\n        poolPrice[9] = 1638.4 ether;\r\n        poolPrice[10] = 6553.6 ether;\r\n        poolPrice[11] = 26214.4 ether;\r\n        poolPrice[12] = 104857.6 ether;\r\n        \r\n        for(uint i=1; i <= 12; i++) {\r\n            poolusers[i][1].currentPool = i;\r\n            poolusers[i][1].user = ownerWallet;\r\n            poolusers[i][1].referral = new uint[](0); \r\n            levelStatus[ownerWallet][i] = true;\r\n            poolusers[i][1].payment_received = 0;\r\n            PoolcurrentID[i]++;\r\n            poolusers[i][PoolcurrentID[i]].currentID = PoolcurrentID[i];\r\n            poolList[i][PoolcurrentID[i]] = ownerWallet;\r\n            userSequenceID[ownerWallet][i].push(PoolcurrentID[i]);\r\n        }\r\n    } \r\n    \r\n    function buyPool(uint _pool, uint _referrerID) public payable returns (bool) {\r\n        require(lockStatus == false, \"Contract Locked\");\r\n        require(_pool > 0 && _pool <= 12, \"Incorrect Pool\");\r\n        require(!levelStatus[msg.sender][_pool], \"User exist\");\r\n        require(msg.value == poolPrice[_pool], \"Incorrect value\");\r\n        require(_referrerID > 0 && _referrerID <= PoolcurrentID[_pool], \"Incorrect referrer Id\");\r\n       \r\n        if(poolusers[_pool][_referrerID].referral.length >= DOWNLINE_LIMIT)\r\n            _referrerID = findFreeReferrer( _pool, _referrerID);\r\n        \r\n        for (uint i = _pool - 1; i > 0; i--) \r\n                require(levelStatus[msg.sender][i], \"Buy Pool in sequence\");\r\n                \r\n        PoolcurrentID[_pool]++;\r\n\r\n        poolusers[_pool][PoolcurrentID[_pool]].currentPool = _pool;\r\n        poolusers[_pool][PoolcurrentID[_pool]].user = msg.sender;\r\n        poolusers[_pool][PoolcurrentID[_pool]].referrerID = _referrerID;\r\n        poolusers[_pool][PoolcurrentID[_pool]].referral = new uint[](0); \r\n        poolusers[_pool][PoolcurrentID[_pool]].currentID = PoolcurrentID[_pool];\r\n\r\n        poolList[_pool][PoolcurrentID[_pool]] = msg.sender;\r\n        userSequenceID[msg.sender][_pool].push(PoolcurrentID[_pool]);\r\n        poolusers[_pool][_referrerID].referral.push(PoolcurrentID[_pool]);\r\n        \r\n        levelStatus[msg.sender][_pool] = true;\r\n        \r\n        address Referrer = poolList[_pool][_referrerID];\r\n        uint UserID = PoolcurrentID[_pool];\r\n        \r\n        if(poolusers[_pool][_referrerID].payment_received < 4) {\r\n            if(_pool == 1){\r\n                uint amount = poolPrice[_pool]/2;\r\n                require(address(uint160(ownerWallet)).send(amount) && address(uint160(Referrer)).send(amount), \"Owner wallet and referer transfer failed\");\r\n                poolusers[_pool][_referrerID].payment_received += 1;\r\n                totalEarnings[Referrer][_pool] += amount;\r\n                totalEarnings[ownerWallet][_pool] += amount;\r\n                emit BuyPool(_pool, msg.sender, UserID, Referrer, _referrerID, amount, now);    \r\n                emit JoinFee( msg.sender, UserID, amount, now);\r\n            }\r\n            else{\r\n                require(address(uint160(Referrer)).send(poolPrice[_pool]), \"Transfer failed\");\r\n                poolusers[_pool][_referrerID].payment_received += 1;\r\n                totalEarnings[Referrer][_pool] += poolPrice[_pool];\r\n                emit BuyPool(_pool, msg.sender, UserID, Referrer, _referrerID, poolPrice[_pool], now);    \r\n            }\r\n        }    \r\n        else {\r\n            require(address(uint160(ownerWallet)).send(poolPrice[_pool]), \"Transfer Failed\");\r\n            \r\n            poolusers[_pool][_referrerID].payment_received += 1;\r\n            totalEarnings[ownerWallet][_pool] += poolPrice[_pool];\r\n            \r\n            PoolcurrentID[_pool]++;\r\n            \r\n            poolList[_pool][PoolcurrentID[_pool]] = Referrer;\r\n            poolusers[_pool][PoolcurrentID[_pool]].currentID = PoolcurrentID[_pool];\r\n            poolusers[_pool][PoolcurrentID[_pool]].user = Referrer;\r\n            poolusers[_pool][PoolcurrentID[_pool]].referrerID = poolusers[_pool][_referrerID].referrerID;\r\n            poolusers[_pool][PoolcurrentID[_pool]].currentPool = poolusers[_pool][_referrerID].currentPool;\r\n            userSequenceID[Referrer][_pool].push(PoolcurrentID[_pool]);\r\n            emit ReInvest(_pool, Referrer, PoolcurrentID[_pool], now); \r\n            emit BuyPool(_pool, msg.sender, UserID, ownerWallet, 1, poolPrice[_pool], now);\r\n        }\r\n        return true; \r\n    }\r\n    \r\n    function failSafe(address payable _toUser, uint _amount) public returns (bool) {\r\n        require(msg.sender == ownerWallet, \"only Owner Wallet\");\r\n        require(_toUser != address(0), \"Invalid Address\");\r\n        require(address(this).balance >= _amount, \"Insufficient balance\");\r\n\r\n        (_toUser).transfer(_amount);\r\n        return true;\r\n    }\r\n    \r\n    function updatePrice(uint _pool, uint _price) public returns (bool) {\r\n        require(msg.sender == ownerWallet, \"only OwnerWallet\");\r\n\r\n        poolPrice[_pool] = _price;\r\n        return true;\r\n    }\r\n    \r\n    function contractLock(bool _lockStatus) public returns (bool) {\r\n        require(msg.sender == ownerWallet, \"Invalid User\");\r\n\r\n        lockStatus = _lockStatus;\r\n        return true;\r\n    }\r\n    \r\n    function findFreeReferrer(uint _pool, uint _userID) public view returns(uint) {\r\n        if(poolusers[_pool][_userID].referral.length < DOWNLINE_LIMIT) return _userID;\r\n\r\n        uint[] memory referrals = new uint[](3125);\r\n        referrals[0] = poolusers[_pool][_userID].referral[0];\r\n        referrals[1] = poolusers[_pool][_userID].referral[1];\r\n        referrals[2] = poolusers[_pool][_userID].referral[2];\r\n        referrals[3] = poolusers[_pool][_userID].referral[3];\r\n        referrals[4] = poolusers[_pool][_userID].referral[4];\r\n\r\n        uint freeReferrer;\r\n        bool noFreeReferrer = true;\r\n\r\n        for(uint i = 0; i < 3125; i++) {\r\n            if(poolusers[_pool][referrals[i]].referral.length == DOWNLINE_LIMIT) {\r\n                if(i < 625) {\r\n                    referrals[(i+1)*5]   = poolusers[_pool][referrals[i]].referral[0];\r\n                    referrals[(i+1)*5+1] = poolusers[_pool][referrals[i]].referral[1];\r\n                    referrals[(i+1)*5+2] = poolusers[_pool][referrals[i]].referral[2];\r\n                    referrals[(i+1)*5+3] = poolusers[_pool][referrals[i]].referral[3];\r\n                }\r\n            }\r\n            else {\r\n                noFreeReferrer = false;\r\n                freeReferrer = referrals[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        require(!noFreeReferrer, \"No Free Referrer\");\r\n\r\n        return freeReferrer;\r\n    }\r\n    \r\n    function viewUserPoolSeqID(address _user,uint _poolID)public view returns(uint[] memory) {\r\n        return userSequenceID[_user][_poolID];\r\n    }\r\n    \r\n    function viewUserReferral(uint _pool, uint _userID) public view returns(uint[] memory) {\r\n        return poolusers[_pool][_userID].referral;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Pool\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"UserID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toaddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"RefererID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Time\",\"type\":\"uint256\"}],\"name\":\"BuyPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"UserID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Time\",\"type\":\"uint256\"}],\"name\":\"JoinFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Pool\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ReInvestID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Time\",\"type\":\"uint256\"}],\"name\":\"ReInvest\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOWNLINE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PoolcurrentID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"buyPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lockStatus\",\"type\":\"bool\"}],\"name\":\"contractLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_toUser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"failSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userID\",\"type\":\"uint256\"}],\"name\":\"findFreeReferrer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolusers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentPool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payment_received\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSequenceID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"}],\"name\":\"viewUserPoolSeqID\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userID\",\"type\":\"uint256\"}],\"name\":\"viewUserReferral\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InfiniteEthereum","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3498a7e0312c7b5053f31d99e157f484d444be12ba2c2a32abfe485487aab49a"}]}