{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\n/*  \r\n    Ethverse : https://ethverse.com\r\n    Tokens Lockup\r\n    \r\n    \r\n                       ``````````````                       \r\n                  `````              `````                  \r\n                ..`                       ```               \r\n             `.`                            `.`             \r\n            .`                                `.`           \r\n          `.            :oydmmmmdyo/`           ``          \r\n         ::          :yNMMMMMMMMMMMMMd+`         `:         \r\n       -d+         -dMMMMMMMMMMMMMMMMMMN+         .h:       \r\n     .hMy         +MMMMMMMMMMMMMMMMMMMMMMh         /Mh.     \r\n   `sMMN-        /MMMMMMMMMMMMMMMMMMMMMMMMy         mMMs`   \r\n `oNMMMm         mMMMMMMMMMMMMMMMMMMMMMMMMM-        oMMMNo` \r\n:mNNNNNh        .MMMMMMMMMMMMMMMMMMMMMMMMMM+        +NNNNNm/\r\n +hddddy        `NMMMMMMMMMMMMMMMMMMMMMMMMM/        /dddddo`\r\n  `odddd`        yMMMMMMMMMMMMMMMMMMMMMMMMN`        sddds.  \r\n    .sdd/        `mMMMMMMMMMMMMMMMMMMMMMMM:        .ddy-    \r\n      -yh.        `hMMMMMMMMMMMMMMMMMMMMm-         sh:      \r\n        :s`         :dMMMMMMMMMMMMMMMMmo`         //        \r\n          :`          .ohNMMMMMMMMMms:           -`         \r\n           ..             .:////:.             `.           \r\n            `.`                              `.`            \r\n              `..                          `.`              \r\n                 ````                   ```                 \r\n                    ````````    ````````                    \r\n                            `````                       \r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface IERC20Transfer {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = msg.sender;\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract ETHVerseTokensLockup is Ownable {\r\n    using SafeMath for uint256;\r\n    \r\n    uint256 public unlockTime = 1597586400;  // Sun, 16 Aug 2020 14:00:00 +0000\r\n    \r\n    uint256 public partialAmount;\r\n    uint256 public partialUnlockTime;\r\n    address public partialAddress;\r\n    \r\n    \r\n    constructor () public { }\r\n    \r\n    \r\n    function withdraw(address _contract, address _recipient, uint256 _amount) external onlyOwner {\r\n        require(now > unlockTime);\r\n        IERC20Transfer(_contract).transfer(_recipient, _amount);\r\n    }\r\n    \r\n    \r\n    function withdrawPartial(address _contract) external onlyOwner {\r\n        require(now > partialUnlockTime);\r\n        require(partialAmount > 0);\r\n        \r\n        partialAmount = 0;\r\n        \r\n        IERC20Transfer(_contract).transfer(partialAddress, partialAmount);\r\n    }\r\n    \r\n    \r\n    function requestPartialWithdraw(address _recipient, uint256 _amount) external onlyOwner {\r\n        partialAmount = _amount;\r\n        partialUnlockTime = unlockTime;\r\n        partialAddress = _recipient;\r\n    }\r\n    \r\n    \r\n    function extendLockTime(uint256 _time) external onlyOwner {\r\n        unlockTime = unlockTime.add(_time);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"extendLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partialAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partialAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partialUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestPartialWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"withdrawPartial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ETHVerseTokensLockup","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://522e8936c85cf30149624c8802df0bf0934f6ac2177bf52fb0f697e2210101ba"}]}