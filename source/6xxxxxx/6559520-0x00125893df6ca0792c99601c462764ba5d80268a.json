{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\ncontract owned {\r\n    constructor() public { owner = msg.sender; }\r\n\r\n    address owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n}\r\n\r\n\r\ncontract GasManager is owned {\r\n\r\n    function () payable public {}\r\n\r\n    function sendInBatch(address[] toAddressList, uint256[] amountList) public onlyOwner {\r\n        require(toAddressList.length == amountList.length);\r\n\r\n        for (uint i = 0; i < toAddressList.length; i++) {\r\n            toAddressList[i].transfer(amountList[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"toAddressList\",\"type\":\"address[]\"},{\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"sendInBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GasManager","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b0789bba7a16897ed97ee8d13c1a37704557503b7df1ba82228342b6eddd087a"}]}