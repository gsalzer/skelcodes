{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint);\r\n  function transfer(address to, uint value) public;\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint);\r\n  function transferFrom(address from, address to, uint value) public;\r\n  function approve(address spender, uint value) public;\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract Airdrop {\r\n  /**\r\n   * @dev daAirdrop to address\r\n   * @param _tokenAddr address the erc20 token address\r\n   * @param dests address[] addresses to airdrop\r\n   * @param values uint256[] value(in ether) to airdrop\r\n   */\r\n  function doAirdrop(address _tokenAddr, address[] dests, uint256[] values) public\r\n    returns (uint256) {\r\n    uint256 i = 0;\r\n    while (i < dests.length) {\r\n      ERC20(_tokenAddr).transferFrom(msg.sender,dests[i], values[i]);\r\n      i += 1;\r\n    }\r\n    return(i);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"doAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Airdrop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://efa6cbee3d3d96134f67e64fbedd64dcdf20e969aaa67a2d1651d6539ccf2b2c"}]}