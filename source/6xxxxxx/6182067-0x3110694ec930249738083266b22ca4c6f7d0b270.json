{"status":"1","message":"OK","result":[{"SourceCode":"contract Gastoken {\r\n    function free(uint256 value) public returns (bool success);\r\n    function freeUpTo(uint256 value) public returns (uint256 freed);\r\n    function freeFrom(address from, uint256 value) public returns (bool success);\r\n    function freeFromUpTo(address from, uint256 value) public returns (uint256 freed);\r\n    function approve(address spender, uint256 value) public returns (bool success);\r\n}\r\ncontract Livepeer {\r\n    function multiGenerate(address _merkleMineContract, address[] _recipients, bytes _merkleProofs) public;\r\n}\r\n\r\ncontract MultiMerkleMineWithGasToken {\r\n\r\n    /*\r\n     * Frees `free' tokens from the Gastoken at address `gas_token'.\r\n     * The freed tokens belong to this Example contract. The gas refund can pay\r\n     * for up to half of the gas cost of the total transaction in which this \r\n     * call occurs.\r\n     */\r\n    function burnGasAndFree(address gas_token, uint256 free, address _merkleMineContract, address[] _recipients, bytes _merkleProofs) public {\r\n        require(Gastoken(gas_token).free(free));\r\n        Livepeer(0x182EBF4C80B28efc45AD992ecBb9f730e31e8c7F).multiGenerate(_merkleMineContract, _recipients, _merkleProofs);\r\n    }\r\n\r\n    /*\r\n     * Frees `free' tokens from the Gastoken at address `gas_token'.\r\n     * The freed tokens belong to the sender. The sender must have previously \r\n     * allowed this Example contract to free up to `free' tokens on its behalf\r\n     * (i.e., `allowance(msg.sender, this)' should be at least `free').\r\n     * The gas refund can pay for up to half of the gas cost of the total \r\n     * transaction in which this call occurs.\r\n     */\r\n    function burnGasAndFreeFrom(address gas_token, uint256 free, address _merkleMineContract, address[] _recipients, bytes _merkleProofs) public {\r\n        Gastoken(gas_token).approve(this, free);\r\n        require(Gastoken(gas_token).freeFrom(msg.sender, free));\r\n        Livepeer(0x182EBF4C80B28efc45AD992ecBb9f730e31e8c7F).multiGenerate(_merkleMineContract, _recipients, _merkleProofs);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"gas_token\",\"type\":\"address\"},{\"name\":\"free\",\"type\":\"uint256\"},{\"name\":\"_merkleMineContract\",\"type\":\"address\"},{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_merkleProofs\",\"type\":\"bytes\"}],\"name\":\"burnGasAndFree\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gas_token\",\"type\":\"address\"},{\"name\":\"free\",\"type\":\"uint256\"},{\"name\":\"_merkleMineContract\",\"type\":\"address\"},{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_merkleProofs\",\"type\":\"bytes\"}],\"name\":\"burnGasAndFreeFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiMerkleMineWithGasToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://840508e2e25f79afd127648c681b2904d6c7050078c9ab2763c5cc6d75d81e22"}]}