{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BIWINToken {\r\n    using SafeMath for uint256;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n    \r\n    address public betaAddress;\r\n    address public alphaAddress;\r\n    \r\n    mapping (address => uint256) public balanceOf;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    constructor(uint256 initialSupply, string tokenName, string tokenSymbol, address alphaAddr, address betaAddr) {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        name = tokenName;                                   \r\n        symbol = tokenSymbol;\r\n        betaAddress = betaAddr;\r\n        alphaAddress = alphaAddr;\r\n        owner = msg.sender;\r\n        balanceOf[alphaAddress] = totalSupply;\r\n        balanceOf[betaAddress] = 0;\r\n    }\r\n    modifier onlyGame() {\r\n        require(msg.sender == alphaAddress);\r\n        _;\r\n    }\r\n    \r\n    function queryBalanceOf(address addr) public returns(uint256) {\r\n        require(addr != 0x0);\r\n        return balanceOf[addr];\r\n    }\r\n    \r\n   function queryOwnerAddr() public constant returns(address) {\r\n        return owner;\r\n    }\r\n    \r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        require(to != 0x0);\r\n        require(balanceOf[from] >= value);\r\n        require(balanceOf[to] + value > balanceOf[to]);\r\n        uint previousBalances = balanceOf[from] + balanceOf[to];\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        Transfer(from, to, value);\r\n        assert(balanceOf[from] + balanceOf[to] == previousBalances);\r\n    }\r\n    function transferToBetaAddress(address to, uint256 value) onlyGame {\r\n        require(to == betaAddress);\r\n        _transfer(msg.sender, to, value);\r\n    }\r\n    \r\n    function transfer(address to, uint256 value) public {\r\n        require(to != betaAddress);\r\n        require(msg.sender != alphaAddress);\r\n        _transfer(msg.sender, to, value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"alphaAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"queryBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferToBetaAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betaAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryOwnerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"alphaAddr\",\"type\":\"address\"},{\"name\":\"betaAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"BIWINToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000002faf08000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000084098601ae95a87ab4cffe8b738dabedfe221be9000000000000000000000000d43e7ba85c85bf5af1374a073550d25d454a2193000000000000000000000000000000000000000000000000000000000000000a424957494e546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034257540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://91dc5de4df761e5aaf8d76a2971f86e67398a1121751149a7365ca358ad12bcf"}]}