{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract TwentyDollars {\r\n    /*\r\n     * Storage\r\n     */\r\n\r\n    struct Bid {\r\n        address owner;\r\n        uint256 amount;\r\n    }\r\n\r\n    address owner;\r\n    uint256 public gameValue;\r\n    uint256 public gameEndBlock;\r\n    \r\n    Bid public highestBid;\r\n    Bid public secondHighestBid;\r\n    mapping (address => uint256) public balances;\r\n\r\n    \r\n    /*\r\n     * Modifiers\r\n     */\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBiddingOpen() {\r\n        require(block.number < gameEndBlock);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBiddingClosed() {\r\n        require(biddingClosed());\r\n        _;\r\n    }\r\n\r\n    modifier onlyHighestBidder() {\r\n        require(msg.sender == highestBid.owner);\r\n        _;\r\n    }\r\n    \r\n    \r\n    /*\r\n     * Constructor\r\n     */\r\n    \r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n        gameValue = msg.value;\r\n        gameEndBlock = block.number + 40000;\r\n    }\r\n\r\n\r\n    /*\r\n     * Public functions\r\n     */\r\n\r\n    function bid() public payable onlyBiddingOpen {\r\n        // Must bid higher than current highest bid.\r\n        require(msg.value > highestBid.amount);\r\n\r\n        // Push out second highest bid and set new highest bid.\r\n        balances[secondHighestBid.owner] += secondHighestBid.amount;\r\n        secondHighestBid = highestBid;\r\n        highestBid.owner = msg.sender;\r\n        highestBid.amount = msg.value;\r\n        \r\n        // Extend the game by ten blocks.\r\n        gameEndBlock += 10;\r\n    }\r\n    \r\n    function withdraw() public {\r\n        uint256 balance = balances[msg.sender];\r\n        require(balance > 0);\r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(balance);\r\n    }\r\n\r\n    function winnerWithdraw() public onlyBiddingClosed onlyHighestBidder {\r\n        address highestBidder = highestBid.owner;\r\n        require(highestBidder != address(0));\r\n        delete highestBid.owner;\r\n        highestBidder.transfer(gameValue);\r\n    }\r\n\r\n    function ownerWithdraw() public onlyOwner onlyBiddingClosed {\r\n        // Withdraw the value of the contract minus allocation for the winner. \r\n        uint256 winnerAllocation = (highestBid.owner == address(0)) ? 0 : gameValue;\r\n        owner.transfer(getContractBalance() - winnerAllocation);\r\n    }\r\n\r\n    function getMyBalance() public view returns (uint256) {\r\n        return balances[msg.sender];\r\n    }\r\n    \r\n    function getContractBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function biddingClosed() public view returns (bool) {\r\n        return block.number >= gameEndBlock;\r\n    }\r\n    \r\n    \r\n    /*\r\n     * Fallback\r\n     */\r\n\r\n    function () public payable {\r\n        bid();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"biddingClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondHighestBid\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gameValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"winnerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gameEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TwentyDollars","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e175d17750f77e9f28c8396d99be5e0cefa4ef45969b620a9858a6a418141dc7"}]}