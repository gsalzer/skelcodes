{"status":"1","message":"OK","result":[{"SourceCode":"////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////// ERC223 ///////////////////////////////////////\r\nlibrary SafeMath {\r\n  function mul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint a, uint b) internal returns (uint) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  function sub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\ncontract ERC223Interface {\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public ;\r\n    function transfer(address to, uint value, bytes data) public ;\r\n    //event Transfer(address indexed from, address indexed to, uint value, bytes data);\r\n    event Transfer(address indexed from, address indexed to, uint value); //ERC 20 style\r\n}\r\ncontract ERC223ReceivingContract {\r\n    function tokenFallback(address _from, uint _value, bytes _data) public;\r\n}\r\ncontract EducationToken is ERC223Interface {\r\n    \r\n    using SafeMath for uint;\r\n    \r\n    string public constant name = \"Education Token Test\";\r\n    string public constant symbol = \"KEDUTest\";\r\n    uint8  public constant decimals = 18;\r\n    \r\n    uint256 public constant totalSupply =  2 * (10 ** 9) * (10 ** 18); // 2 billion \"KEDU\"\r\n    uint256 public constant Million     =      (10 ** 6);\r\n    //uint256 public nowSupply = 0;\r\n    \r\n    address public constant contractOwner = 0x21bA616f20a14bc104615Cc955F818310E725aBA;\r\n    \r\n    mapping (address => uint256) balances;\r\n    \r\n    function EducationToken() {\r\n        preAllocation();\r\n    }\r\n\tfunction preAllocation() internal {\r\n        balances[0x21bA616f20a14bc104615Cc955F818310E725aBA] =   0*(10**6)*(10**18); //  0% ,code writer\r\n        balances[0x6F34740F96C76B4C228D8EFA5EC9C71205733102] = 200*(10**6)*(10**18); // 10% ,contractOwner1\r\n        balances[0x33fa06cD9A1451961890532bB3F2F2b6fB817976] = 200*(10**6)*(10**18); // 10% ,contractOwner2\r\n        balances[0x5d49508ab79A149663F036C9e1f820F2B78EC230] = 200*(10**6)*(10**18); // 10% ,contractOwner3\r\n        balances[0x45bC7Ac57f10b42133abf5a92861D4AA3C5EA3e8] = 200*(10**6)*(10**18); // 10% ,contractOwner4\r\n        balances[0xc157F7DcA6c101Cc2c63462d4E81bF5C335EFB49] = 200*(10**6)*(10**18); // 10% ,contractOwner5\r\n        balances[0x1306E082444370f11039b1eC19D85Bf3dF35Bb62] = 200*(10**6)*(10**18); // 10% ,contractOwner6\r\n        balances[0xC45E047cD81356d655D5c061311f62BBe2d2908C] = 200*(10**6)*(10**18); // 10% ,contractOwner7\r\n        balances[0x42b4B6BBb2619Afd619A56aeBa1533699c3A8e8d] = 200*(10**6)*(10**18); // 10% ,contractOwner8\r\n        balances[0xA8e5986C88556180Db85b3288CD10f383c1C04a6] = 200*(10**6)*(10**18); // 10% ,contractOwner9\r\n        balances[0xA6B60801869c732B75Ee980fC53458dAc75ebe7E] = 200*(10**6)*(10**18); // 10% ,contractOwner10\r\n\t}\r\n    function() payable {\r\n        require(msg.value >= 0.00001 ether);\r\n    }\r\n    function getETH(uint256 _amount) public {\r\n        //require(now>endTime);\r\n        require(msg.sender==contractOwner);\r\n        msg.sender.transfer(_amount);\r\n    }\r\n    function nowSupply() constant public returns(uint){\r\n        uint supply=totalSupply;\r\n        supply=supply-balances[0x21bA616f20a14bc104615Cc955F818310E725aBA];\r\n        supply=supply-balances[0x6F34740F96C76B4C228D8EFA5EC9C71205733102];\r\n        supply=supply-balances[0x33fa06cD9A1451961890532bB3F2F2b6fB817976];\r\n        supply=supply-balances[0x5d49508ab79A149663F036C9e1f820F2B78EC230];\r\n        supply=supply-balances[0x45bC7Ac57f10b42133abf5a92861D4AA3C5EA3e8];\r\n        supply=supply-balances[0xc157F7DcA6c101Cc2c63462d4E81bF5C335EFB49];\r\n        supply=supply-balances[0x1306E082444370f11039b1eC19D85Bf3dF35Bb62];\r\n        supply=supply-balances[0xC45E047cD81356d655D5c061311f62BBe2d2908C];\r\n        supply=supply-balances[0x42b4B6BBb2619Afd619A56aeBa1533699c3A8e8d];\r\n        supply=supply-balances[0xA8e5986C88556180Db85b3288CD10f383c1C04a6];\r\n        supply=supply-balances[0xA6B60801869c732B75Ee980fC53458dAc75ebe7E];\r\n        return supply;\r\n    }\r\n    \r\n    /////////////////////////////////////////////////////////////////////\r\n    ///////////////// ERC223 Standard functions /////////////////////////\r\n    /////////////////////////////////////////////////////////////////////\r\n    function transfer(address _to, uint _value, bytes _data) public {\r\n        // Standard function transfer similar to ERC20 transfer with no _data .\r\n        // Added due to backwards compatibility reasons .\r\n        uint codeLength;\r\n        assembly {\r\n            // Retrieve the size of the code on target address, this needs assembly .\r\n            codeLength := extcodesize(_to)\r\n        }\r\n\r\n        require(_value > 0);\r\n        require(balances[msg.sender] >= _value);\r\n        require(balances[_to]+_value > 0);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        if(codeLength>0) {\r\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n            receiver.tokenFallback(msg.sender, _value, _data);\r\n        }\r\n        emit Transfer(msg.sender, _to, _value);\r\n    }\r\n    function transfer(address _to, uint _value) public {\r\n        uint codeLength;\r\n        bytes memory empty;\r\n        assembly {\r\n            // Retrieve the size of the code on target address, this needs assembly .\r\n            codeLength := extcodesize(_to)\r\n        }\r\n\r\n        require(_value > 0);\r\n        require(balances[msg.sender] >= _value);\r\n        require(balances[_to]+_value > 0);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        if(codeLength>0) {\r\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n            receiver.tokenFallback(msg.sender, _value, empty);\r\n        }\r\n        emit Transfer(msg.sender, _to, _value);\r\n    }\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nowSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Million\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"EducationToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5b21fa405019e2444bb16cc4a54def5f473e6d62f7f07dbf5241f65d4e740a46"}]}