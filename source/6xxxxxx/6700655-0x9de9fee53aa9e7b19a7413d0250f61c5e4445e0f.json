{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function balanceOf(address who) external view returns (uint256);\r\n\r\n  function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n\r\n  function approve(address spender, uint256 value)\r\n    external returns (bool);\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    external returns (bool);\r\n\r\n  event Transfer(\r\n    address indexed from,\r\n    address indexed to,\r\n    uint256 value\r\n  );\r\n\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\ncontract MultiBalances { \r\n    function getBalances(address contractAddress, address[] addresses) public view returns (uint256[]){\r\n        IERC20 erc20 = IERC20(contractAddress);\r\n        uint addrLength = addresses.length;\r\n        uint256[]  memory balances = new uint256[](addrLength);\r\n        for(uint i = 0; i<addrLength; i++){\r\n            balances[i] = erc20.balanceOf(addresses[i]);\r\n        }\r\n        return balances;\r\n    } \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MultiBalances","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cab5ab262d2fbd15adfadc058fd4042cb77581cee895c3f6a74ae68cda33d305"}]}