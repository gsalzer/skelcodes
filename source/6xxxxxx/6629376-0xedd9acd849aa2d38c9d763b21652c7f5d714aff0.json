{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract token {\r\n    function transfer(address receiver, uint256 amount) public;\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function burnFrom(address from, uint256 value) public;\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract owned {\r\n        address public owner;\r\n\r\n        constructor() public {\r\n            owner = 0x953600669b794BB7a2E0Bc6C5a7f5fA96c3c1928;\r\n        }\r\n\r\n        modifier onlyOwner {\r\n            require(msg.sender == owner);\r\n            _;\r\n        }\r\n\r\n        function transferOwnership(address newOwner) onlyOwner public {\r\n            owner = newOwner;\r\n        }\r\n}\r\n\r\ncontract EzyStayzCrowdsale is owned{\r\n    using SafeMath for uint256;\r\n    \r\n    address public beneficiary;\r\n    uint256 public SoftCap;\r\n    uint256 public HardCap;\r\n    uint256 public amountRaised;\r\n    uint256 public preSaleStartdate;\r\n    uint256 public preSaleDeadline;\r\n    uint256 public mainSaleStartdate;\r\n    uint256 public mainSaleDeadline;\r\n    uint256 public price;\r\n    uint256 public fundTransferred;\r\n    uint256 public tokenSold;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n    bool returnFunds = false;\r\n\t\r\n\tevent GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    constructor() public {\r\n        beneficiary = 0x953600669b794BB7a2E0Bc6C5a7f5fA96c3c1928;\r\n        SoftCap = 15000 ether;\r\n        HardCap = 150000 ether;\r\n        preSaleStartdate = 1541030400;\r\n        preSaleDeadline = 1543622399;\r\n        mainSaleStartdate = 1543622400;\r\n        mainSaleDeadline = 1551398399;\r\n        price = 0.0004 ether;\r\n        tokenReward = token(0x49246EF0e2eF35CD7523072BE75bC857B9eC63d9);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        require(!crowdsaleClosed);\r\n        uint256 bonus = 0;\r\n        uint256 amount;\r\n        uint256 ethamount = msg.value;\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(ethamount);\r\n        amountRaised = amountRaised.add(ethamount);\r\n        \r\n        //add bounus for funders\r\n        if(now >= preSaleStartdate && now <= preSaleDeadline){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 33 / 100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate && now <= mainSaleStartdate + 30 days){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 25/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate + 30 days && now <= mainSaleStartdate + 45 days){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 15/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate + 45 days && now <= mainSaleStartdate + 60 days){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 10/100;\r\n            amount = amount.add(bonus);\r\n        } else {\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 7/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        \r\n        amount = amount.mul(100000000000000);\r\n        tokenReward.transfer(msg.sender, amount);\r\n        tokenSold = tokenSold.add(amount);\r\n\t\temit FundTransfer(msg.sender, ethamount, true);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= mainSaleDeadline) _; }\r\n\r\n    /**\r\n     *ends the campaign after deadline\r\n     */\r\n     \r\n    function endCrowdsale() public afterDeadline  onlyOwner {\r\n          crowdsaleClosed = true;\r\n    }\r\n    \r\n    function EnableReturnFunds() public onlyOwner {\r\n          returnFunds = true;\r\n    }\r\n    \r\n    function DisableReturnFunds() public onlyOwner {\r\n          returnFunds = false;\r\n    }\r\n\t\r\n\tfunction ChangePrice(uint256 _price) public onlyOwner {\r\n\t\t  price = _price;\t\r\n\t}\r\n\t\r\n\tfunction ChangeBeneficiary(address _beneficiary) public onlyOwner {\r\n\t\t  beneficiary = _beneficiary;\t\r\n\t}\r\n\t \r\n    function ChangePreSaleDates(uint256 _preSaleStartdate, uint256 _preSaleDeadline) onlyOwner public{\r\n          if(_preSaleStartdate != 0){\r\n               preSaleStartdate = _preSaleStartdate;\r\n          }\r\n          if(_preSaleDeadline != 0){\r\n               preSaleDeadline = _preSaleDeadline;\r\n          }\r\n\t\t  \r\n\t\t  if(crowdsaleClosed == true){\r\n\t\t\t crowdsaleClosed = false;\r\n\t\t  }\r\n    }\r\n    \r\n    function ChangeMainSaleDates(uint256 _mainSaleStartdate, uint256 _mainSaleDeadline) onlyOwner public{\r\n          if(_mainSaleStartdate != 0){\r\n               mainSaleStartdate = _mainSaleStartdate;\r\n          }\r\n          if(_mainSaleDeadline != 0){\r\n               mainSaleDeadline = _mainSaleDeadline; \r\n          }\r\n\t\t  \r\n\t\t  if(crowdsaleClosed == true){\r\n\t\t\t crowdsaleClosed = false;\r\n\t\t  }\r\n    }\r\n    \r\n    function getTokensBack() onlyOwner public{\r\n        uint256 remaining = tokenReward.balanceOf(this);\r\n        tokenReward.transfer(beneficiary, remaining);\r\n    }\r\n    \r\n    function safeWithdrawal() public afterDeadline {\r\n\t   if (returnFunds) {\r\n\t\t\tuint amount = balanceOf[msg.sender];\r\n\t\t\tif (amount > 0) {\r\n\t\t\t\tif (msg.sender.send(amount)) {\r\n\t\t\t\t   emit FundTransfer(msg.sender, amount, false);\r\n\t\t\t\t   balanceOf[msg.sender] = 0;\r\n\t\t\t\t   fundTransferred = fundTransferred.add(amount);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (returnFunds == false && beneficiary == msg.sender) {\r\n\t\t    uint256 ethToSend = amountRaised - fundTransferred;\r\n\t\t\tif (beneficiary.send(ethToSend)) {\r\n\t\t\t  fundTransferred = fundTransferred.add(ethToSend);\r\n\t\t\t} \r\n\t\t}\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EnableReturnFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_preSaleDeadline\",\"type\":\"uint256\"}],\"name\":\"ChangePreSaleDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"ChangeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mainSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_mainSaleDeadline\",\"type\":\"uint256\"}],\"name\":\"ChangeMainSaleDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"DisableReturnFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokensBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SoftCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"ChangePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"EzyStayzCrowdsale","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5945e3a88a99f3c05bf39fc2bd3d71019f7898d024e244c4377ef52029351d66"}]}