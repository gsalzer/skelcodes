{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract blockJournal {\r\n    address public creator;\r\n    \r\n    constructor() public {\r\n        creator = msg.sender;\r\n    }\r\n    \r\n    struct entry {\r\n        uint time;\r\n        uint block;\r\n        bytes sig;\r\n    }\r\n    \r\n    mapping (address=>mapping(bytes=>entry)) addressBytesEntryMap;\r\n    \r\n    function addEntry (bytes _sig) public {\r\n        entry memory newEntry = entry({\r\n           time: now,\r\n           block: block.number,\r\n           sig: _sig\r\n        });\r\n        if(addressBytesEntryMap[msg.sender][_sig].time>0) revert();\r\n        addressBytesEntryMap[msg.sender][_sig] = newEntry;\r\n    }\r\n    function getEntry (address _creator, bytes _sig) public view returns (bytes sig, uint _block, uint time) {\r\n        entry memory _entry = addressBytesEntryMap[_creator][_sig];\r\n        return (_entry.sig, _entry.block, _entry.time);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"addEntry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"},{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"getEntry\",\"outputs\":[{\"name\":\"sig\",\"type\":\"bytes\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"blockJournal","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://71bbb65dab7c312c4dbf75c15d50e993a73ca64080e9f064d9022b665b8502f1"}]}