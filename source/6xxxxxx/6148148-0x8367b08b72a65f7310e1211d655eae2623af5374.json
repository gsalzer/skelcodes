{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n/****************************************************************************\r\n*                   ******MAJz Token Smart Contract******                   *\r\n*                   Symbol      :   MAZ                                     *\r\n*                   Name        :   MAJz                                    *\r\n*                   Total Supply:   560 000 000                             *\r\n*                   Decimals    :   18                                      *\r\n*                   Almar Blockchain Technology                             *\r\n*                   *************************************                   *\r\n****************************************************************************/\r\n\r\n\r\n/****************************************************************************\r\n*                       Safemath Library                                    *\r\n*                       to prevent Over / Underflow                         *\r\n****************************************************************************/\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b; assert(c >= a); return c; }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) { assert(b <= a); return a - b; }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0){return 0;} c = a * b; assert(c / a == b); return c; }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) { return a / b; }\r\n}\r\n\r\n\r\n/****************************************************************************\r\n*                   Standart ERC20 Token Interface                          *\r\n*                   Contains Standart Token Functionalities                 *\r\n****************************************************************************/\r\ncontract ERC20Token {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _targetAddress) public view returns (uint256);\r\n    function transfer(address _targetAddress, uint256 _value) public returns (bool);\r\n    event Transfer(address indexed _originAddress, address indexed _targetAddress, uint256 _value);\r\n    \r\n    function allowance(address _originAddress, address _targetAddress) public view returns (uint256);\r\n    function approve(address _originAddress, uint256 _value) public returns (bool);\r\n    function transferFrom(address _originAddress, address _targetAddress, uint256 _value) public returns (bool);\r\n    event Approval(address indexed _originAddress, address indexed _targetAddress, uint256 _value);\r\n}\r\n\r\n\r\n/****************************************************************************\r\n*                       Ownership Contract                                  *\r\n*                       for authorization Control                           *\r\n****************************************************************************/\r\ncontract Ownership {\r\n    address public owner;\r\n\r\n    modifier onlyOwner() { require(msg.sender == owner); _; }\r\n    modifier validDestination(address _targetAddress) { require(_targetAddress != address(0x0)); _; }\r\n}\r\n\r\n\r\n/****************************************************************************\r\n*                       The Token Contract                                  *\r\n*                       with Extended funtionalities                        *\r\n****************************************************************************/\r\ncontract MAJz is ERC20Token, Ownership {\r\n    using SafeMath for uint256;\r\n\r\n    string public symbol;\r\n    string public name;\r\n    uint256 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n    \r\n    //Constructor of the Token\r\n    constructor() public{\r\n        symbol = \"MAZ\";\r\n        name = \"MAJz\";\r\n        decimals = 18;\r\n        totalSupply = 560000000000000000000000000;\r\n        balances[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n        emit Transfer(address(0), msg.sender, totalSupply); \r\n    }\r\n\r\n\r\n    /****************************************************************************\r\n    *                   Basic Token Functions                                   *\r\n    ****************************************************************************/\r\n    //Returns the totalSupply\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply;\r\n    }\r\n    //Return the balance of an specified account\r\n    function balanceOf(address _targetAddress) public view returns (uint256) {\r\n        return balances[_targetAddress];\r\n    }\r\n    \r\n    //Transfer function. Validates targetAdress not to be 0x0\r\n    function transfer(address _targetAddress, uint256 _value) validDestination(_targetAddress) public returns (bool) {\r\n        balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value); //SafeMath will throw if value > balance\r\n        balances[_targetAddress] = SafeMath.add(balances[_targetAddress], _value);\r\n        emit Transfer(msg.sender, _targetAddress, _value); \r\n        return true; \r\n    }\r\n\r\n    /****************************************************************************\r\n    *                   ERC20 Token Functions                                   *\r\n    ****************************************************************************/\r\n    function allowance(address _originAddress, address _targetAddress) public view returns (uint256){\r\n        return allowed[_originAddress][_targetAddress];\r\n    }\r\n\r\n    function approve(address _targetAddress, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_targetAddress] = _value;\r\n        emit Approval(msg.sender, _targetAddress, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _originAddress, address _targetAddress, uint256 _value) public returns (bool) {\r\n        balances[_originAddress] = SafeMath.sub(balances[_originAddress], _value); //SafeMath will throw if _value> balanceOf[_originAddress]\r\n        allowed[_originAddress][msg.sender] = SafeMath.sub(allowed[_originAddress][msg.sender], _value); //SafeMath will throw if _value > allowance\r\n        balances[_targetAddress] = SafeMath.add(balances[_targetAddress], _value);\r\n        emit Transfer(_originAddress, _targetAddress, _value);\r\n        return true;\r\n    }\r\n\r\n    function () public payable {\r\n        revert();\r\n    }\r\n\r\n    /****************************************************************************\r\n    *                   Extended Functionalites                                 *\r\n    ****************************************************************************/\r\n\r\n    //Burn the specified amount (_value) of tokens\r\n    function burnTokens(uint256 _value) public onlyOwner returns (bool){\r\n        balances[owner] = SafeMath.sub(balances[owner], _value); //SafeMath will throw if value > balance\r\n        totalSupply = SafeMath.sub(totalSupply, _value);\r\n        emit BurnTokens(_value);\r\n        return true;\r\n    }\r\n\r\n    //Emit new tokens\r\n    function emitTokens(uint256 _value) public onlyOwner returns (bool){\r\n        balances[owner] = SafeMath.add(balances[owner], _value); //SafeMath will throw if Overflow\r\n        totalSupply = SafeMath.add(totalSupply, _value);\r\n        emit EmitTokens(_value);\r\n        return true;\r\n    }\r\n\r\n    //Revert a transfer in case of error. onlyOwner\r\n    function revertTransfer(address _targetAddress, uint256 _value) public onlyOwner returns (bool) {\r\n        balances[_targetAddress] = SafeMath.sub(balances[_targetAddress], _value);\r\n        balances[owner] = SafeMath.add(balances[owner], _value);\r\n        emit RevertTransfer(_targetAddress, _value);\r\n        return true;\r\n    }\r\n    \r\n    event RevertTransfer(address _targetAddress, uint256 _value);\r\n    event BurnTokens(uint256 _value);\r\n    event EmitTokens(uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_originAddress\",\"type\":\"address\"},{\"name\":\"_targetAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"revertTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"emitTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_originAddress\",\"type\":\"address\"},{\"name\":\"_targetAddress\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"RevertTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BurnTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"EmitTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_originAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_originAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MAJz","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d16d9a76db3cdba16f019c32a40fb595da308dbf951c2bb1f4bbb26a9d8d6e9e"}]}