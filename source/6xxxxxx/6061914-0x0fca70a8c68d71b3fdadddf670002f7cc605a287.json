{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n//*************** SafeMath ***************\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      uint256 c = a * b;\r\n      assert(a == 0 || c / a == b);\r\n      return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      assert(b > 0);\r\n      uint256 c = a / b;\r\n      return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n  }\r\n}\r\n\r\n//*************** Ownable *************** \r\n\r\ncontract Ownable {\r\n  address public owner;\r\n  address public admin;\r\n\r\n  function Ownable() public {\r\n      owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n      require(msg.sender == owner);\r\n      _;\r\n  }\r\n\r\n  modifier onlyOwnerAdmin() {\r\n      require(msg.sender == owner || msg.sender == admin);\r\n      _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner)public onlyOwner {\r\n      if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n  }\r\n  function setAdmin(address _admin)public onlyOwner {\r\n      admin = _admin;\r\n  }\r\n\r\n}\r\n\r\n//************* ERC20 *************** \r\n\r\ncontract ERC20 {\r\n  \r\n  function balanceOf(address who)public constant returns (uint256);\r\n  function transfer(address to, uint256 value)public returns (bool);\r\n  function transferFrom(address from, address to, uint256 value)public returns (bool);\r\n  function allowance(address owner, address spender)public constant returns (uint256);\r\n  function approve(address spender, uint256 value)public returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract UtradeToken is ERC20,Ownable {\r\n\tusing SafeMath for uint256;\r\n\r\n\t// Token Info.\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint256 public totalSupply;\r\n\tuint256 public constant decimals = 8;\r\n\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tevent FundTransfer(address fundWallet, uint256 amount);\r\n\tevent Logs(string);\r\n\r\n\tconstructor( ) public {  \t\t\r\n\t\tname=\"UTP FOUNDATION\";\r\n\t\tsymbol=\"UTP\";\r\n\t\ttotalSupply = 1000000000*(10**decimals);\r\n\t\tbalanceOf[msg.sender] = totalSupply;\t\r\n\t}\r\n\r\n\tfunction balanceOf(address _who)public constant returns (uint256 balance) {\r\n\t    return balanceOf[_who];\r\n\t}\r\n\r\n\tfunction _transferFrom(address _from, address _to, uint256 _value)  internal {\r\n\t\trequire(_from != 0x0);\r\n\t    require(_to != 0x0);\r\n\t    require(balanceOf[_from] >= _value);\r\n\t    require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n\r\n\t    uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n\t    balanceOf[_from] = balanceOf[_from].sub(_value);\r\n\t    balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n\t    emit Transfer(_from, _to, _value);\r\n\r\n\t    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool){\t    \r\n\t    _transferFrom(msg.sender,_to,_value);\r\n\t    return true;\r\n\t}\r\n\tfunction transferLog(address _to, uint256 _value,string logs) public returns (bool){\r\n\t\t_transferFrom(msg.sender,_to,_value);\r\n\t\temit Logs(logs);\r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction ()public {\r\n\t}\r\n\r\n\r\n\tfunction allowance(address _owner, address _spender)public constant returns (uint256 remaining) {\r\n\t    return allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value)public returns (bool) {\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    emit Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint256 _value)public returns (bool) {\r\n\t    require(_from != 0x0);\r\n\t    require(_to != 0x0);\r\n\t    require(_value > 0);\r\n\t    require (allowed[_from][msg.sender] >= _value);\r\n\t    require(balanceOf[_from] >= _value);\r\n\t    require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value); \r\n\t     \r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function mintToken(address _target, uint256 _mintedAmount) onlyOwner public {\r\n        require(_target != 0x0);\r\n        require(_mintedAmount > 0);\r\n        require(totalSupply + _mintedAmount > totalSupply);\r\n        require(balanceOf[_target] + _mintedAmount > balanceOf[_target]);\r\n        balanceOf[_target] = balanceOf[_target].add(_mintedAmount);\r\n        totalSupply = totalSupply.add(_mintedAmount);\r\n        emit Transfer(0, this, _mintedAmount);\r\n        emit Transfer(this, _target, _mintedAmount);\r\n    }\r\n\r\n    function transferA2B(address _from ,address _to) onlyOwnerAdmin public {\t \r\n    \trequire(_from != 0x0);\r\n\t    require(_to != 0x0);  \t  \r\n    \trequire(balanceOf[_from] > 0); \r\n    \t//require(balanceOf[_to] == 0); \r\n\t    _transferFrom(_from,_to,balanceOf[_from]);\t   \r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"logs\",\"type\":\"string\"}],\"name\":\"transferLog\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferA2B\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fundWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"}],\"name\":\"Logs\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"UtradeToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5faa61957ea22cfa6005d30f5d05942bb7f06a3e4193f2a868b4564c305ecbe9"}]}