{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n// File: contracts/Users.sol\r\n\r\ncontract Users {\r\n    struct Entry {\r\n        uint keyIndex;\r\n        string value;\r\n    }\r\n\r\n    struct AddressStringMap {\r\n        mapping(address => Entry) data;\r\n        address[] keys;\r\n    }\r\n\r\n    AddressStringMap internal usernames;\r\n\r\n    function putUsername(string _username)\r\n        public\r\n        returns (bool)\r\n    {\r\n        address senderAddress = msg.sender;\r\n        Entry storage entry = usernames.data[senderAddress];\r\n        entry.value = _username;\r\n        if (entry.keyIndex > 0) {\r\n            return true;\r\n        } else {\r\n            entry.keyIndex = ++usernames.keys.length;\r\n            usernames.keys[entry.keyIndex - 1] = senderAddress;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function removeUsername()\r\n        public\r\n        returns (bool)\r\n    {\r\n        address senderAddress = msg.sender;\r\n        Entry storage entry = usernames.data[senderAddress];\r\n        if (entry.keyIndex == 0) {\r\n            return false;\r\n        }\r\n\r\n        if (entry.keyIndex <= usernames.keys.length) {\r\n            // Move an existing element into the vacated key slot.\r\n            usernames.data[usernames.keys[usernames.keys.length - 1]].keyIndex = entry.keyIndex;\r\n            usernames.keys[entry.keyIndex - 1] = usernames.keys[usernames.keys.length - 1];\r\n            usernames.keys.length -= 1;\r\n            delete usernames.data[senderAddress];\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function size()\r\n        public\r\n        view\r\n        returns (uint)\r\n    {\r\n        return usernames.keys.length;\r\n    }\r\n\r\n    function getUsernameByAddress(address _address)\r\n        public\r\n        constant\r\n        returns (string)\r\n    {\r\n        return usernames.data[_address].value;\r\n    }\r\n\r\n    function getAddressByIndex(uint idx)\r\n        public\r\n        constant\r\n        returns (address)\r\n    {\r\n        return usernames.keys[idx];\r\n    }\r\n\r\n    function getUsernameByIndex(uint idx)\r\n        public\r\n        constant\r\n        returns (string)\r\n    {\r\n        return usernames.data[usernames.keys[idx]].value;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getUsernameByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"putUsername\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeUsername\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getAddressByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUsernameByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Users","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6d089f43d6267dceaa63a1444b567a1ad62e4be0425cb972e699be3923be7242"}]}