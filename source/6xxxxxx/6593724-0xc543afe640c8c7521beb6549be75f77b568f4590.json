{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n\r\n\r\n    ╔═══╗╔═══╗╔════╗───╔╗─╔╗─╔╗\r\n    ║╔══╝║╔══╝╚═╗╔═╝──╔╝║╔╝║╔╝║\r\n    ║║╔═╗║╚══╗──║║────╚╗║╚╗║╚╗║\r\n    ║║╚╗║║╔══╝──║║─────║║─║║─║║\r\n    ║╚═╝║║╚══╗──║║─────║║─║║─║║\r\n    ╚═══╝╚═══╝──╚╝─────╚╝─╚╝─╚╝\r\n\r\n   Automatic returns 111% of each investment!\r\n   M A X  D E P O S I T E  I S  2 ETH  \r\n   NO HUMAN Factor - fully automatic!\r\n   http://get111.today/ \r\n   Join Telegram Group https://t.me/joinchat/Ky1lEBJD3jLvXXMqcpGEOQ\r\n   Admin https://t.me/Get111Admin\r\n  1. Send ETH to smart contract address\r\n     - from 0.01 to 2 ETH\r\n     - min 250000 gas limit \r\n  2. Wait a bit time..\r\n  3. Promote us if you want...\r\n  4. Get your 111%\r\n\r\n  Admin fee is 5% ( 3% for tech support. 2% for transaction gas fees )\r\n\r\n     \r\n \r\n  Автоматические выплаты 111% от вашего депозита!\r\n  М А К С И М А Л Ь Н Ы Й  Д Е П О З И Т  2 ETH \r\n  Без ЧЕЛОВЕЧЕСКОГО фактора - Полная автоматика!\r\n  http://get111.today/\r\n  Телеграм Группа  https://t.me/joinchat/Ky1lEBJD3jLvXXMqcpGEOQ\r\n  Админ https://t.me/Get111Admin\r\n  1. Отправьте ETH на адрес контракта\r\n     - от 0.01 до 2 ETH\r\n     - gas limit минимум 250000\r\n  2. Можете ждать, а можете,.\r\n  3. Рассказать друзьям.\r\n  4. Получите ваши 111% прибыли.\r\n\r\n  Комиссия администратора составляет 5% ( 3% тех поддержка. 2% издержки на оплату газа )\r\n\r\n*/\r\n\r\ncontract GET111 {\r\n    address constant private ADMIN = 0x411647BA6480bF5FDec2145f858FD37AeCBfC03B;\r\n    uint constant public ADMIN_FEE = 5;\r\n    uint constant public PROFIT = 111;\r\n\r\n    struct Deposit {\r\n        address depositor; //depositor address\r\n        uint128 deposit;   //deposit amount\r\n        uint128 expect;    //payout 111% (100% + 11%)\r\n    }\r\n\r\n    Deposit[] private queue;\r\n    uint public currentReceiverIndex = 0;\r\n\r\n    //That function receive deposits, saves and after make instant payments\r\n    function () public payable {\r\n        if(msg.value > 0){\r\n            require(gasleft() >= 220000, \"We require more gas!\"); //gas need to process transaction\r\n            require(msg.value <= 2 ether); //We not allow big sums, it is for contract long life\r\n\r\n            //Adding investor into queue. Now he expects to receive 111% of his deposit\r\n            queue.push(Deposit(msg.sender, uint128(msg.value), uint128(msg.value*PROFIT/100)));\r\n\r\n            //Send fees 5% (3%+2%)\r\n            uint admin = msg.value*ADMIN_FEE/100;\r\n            ADMIN.send(admin);\r\n\r\n            //First in line get paid instantly\r\n            pay();\r\n        }\r\n    }\r\n\r\n    //This function paying for the first users in line  \r\n    function pay() private {\r\n        uint128 money = uint128(address(this).balance);\r\n\r\n        for(uint i=0; i<queue.length; i++){\r\n\r\n            uint idx = currentReceiverIndex + i;\r\n\r\n            Deposit storage dep = queue[idx];\r\n\r\n            if(money >= dep.expect){\r\n                dep.depositor.send(dep.expect);\r\n                money -= dep.expect;\r\n\r\n                //User total paid\r\n                delete queue[idx];\r\n            }else{\r\n                \r\n                dep.depositor.send(money);\r\n                dep.expect -= money;\r\n                break;\r\n            }\r\n\r\n            if(gasleft() <= 50000)\r\n                break;\r\n        }\r\n\r\n        currentReceiverIndex += i;\r\n    }\r\n\r\n    function getDeposit(uint idx) public view returns (address depositor, uint deposit, uint expect){\r\n        Deposit storage dep = queue[idx];\r\n        return (dep.depositor, dep.deposit, dep.expect);\r\n    }\r\n\r\n    function getDepositsCount(address depositor) public view returns (uint) {\r\n        uint c = 0;\r\n        for(uint i=currentReceiverIndex; i<queue.length; ++i){\r\n            if(queue[i].depositor == depositor)\r\n                c++;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    function getDeposits(address depositor) public view returns (uint[] idxs, uint128[] deposits, uint128[] expects) {\r\n        uint c = getDepositsCount(depositor);\r\n\r\n        idxs = new uint[](c);\r\n        deposits = new uint128[](c);\r\n        expects = new uint128[](c);\r\n\r\n        if(c > 0) {\r\n            uint j = 0;\r\n            for(uint i=currentReceiverIndex; i<queue.length; ++i){\r\n                Deposit storage dep = queue[i];\r\n                if(dep.depositor == depositor){\r\n                    idxs[j] = i;\r\n                    deposits[j] = dep.deposit;\r\n                    expects[j] = dep.expect;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getQueueLength() public view returns (uint) {\r\n        return queue.length - currentReceiverIndex;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"currentReceiverIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"name\":\"idxs\",\"type\":\"uint256[]\"},{\"name\":\"deposits\",\"type\":\"uint128[]\"},{\"name\":\"expects\",\"type\":\"uint128[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"expect\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQueueLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDepositsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROFIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GET111","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://524b78b47dc51ede5488cf6ecbc5bdf5fc1db81a574a11035f09127c37260197"}]}