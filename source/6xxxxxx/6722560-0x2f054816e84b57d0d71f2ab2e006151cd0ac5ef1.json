{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns (uint256);\r\n\r\n  function balanceOf(address _who) public view returns (uint256);\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256);\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n\r\n  event Transfer(\r\n    address indexed from,\r\n    address indexed to,\r\n    uint256 value\r\n  );\r\n\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\n/**\r\n * @dev support ERC677\r\n * https://github.com/ethereum/EIPs/issues/677\r\n * |--------------|            |-----------------------|            |-------------------------|\r\n * |    Sender    |            | ERC677SenderInterface |            | ERC677ReceiverInterface |\r\n * |--------------|            |-----------------------|            |-------------------------|\r\n *        |       transferAndCall()        |                                      |\r\n *        |------------------------------->|            tokenFallback()           |\r\n *        |                                |------------------------------------->|\r\n *        |                                |                                      |\r\n */\r\ncontract ERC677ReceiverInterface {\r\n    function tokenFallback(address _sender, uint256 _value, bytes _extraData) \r\n        public returns (bool);\r\n}\r\n\r\ncontract ERC677SenderInterface {\r\n    function transferAndCall(address _recipient, uint256 _value, bytes _extraData) \r\n        public returns (bool);\r\n}\r\n\r\n/**\r\n *  ____ ___ ____  ____  ____  ___    _    _   _ \r\n * / ___|_ _|  _ \\| __ )|  _ \\|_ _|  / \\  | \\ | |\r\n * \\___ \\| || | | |  _ \\| |_) || |  / _ \\ |  \\| |\r\n *  ___) | || |_| | |_) |  _ < | | / ___ \\| |\\  |\r\n * |____/___|____/|____/|_| \\_\\___/_/   \\_\\_| \\_|\r\n * \r\n * SIDBRIAN is a token which based on ERC20 standard.\r\n * Some token will be locked after deploying contract.\r\n * Activator will unlock token at some specific moment.\r\n * */\r\n\r\ncontract SIDBRIAN is ERC20Interface, ERC677SenderInterface {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    constructor()\r\n        public\r\n    {\r\n        owner_ = msg.sender;\r\n        totalSupply_ = 1000000000 * (10**18);\r\n        activateTokens_ = 250000000 * (10**18);\r\n        increasingStep_ = 50000000 * (10**18);\r\n        \r\n        balances_[owner_] = activateTokens_;\r\n    }\r\n    \r\n    address public owner_;\r\n    \r\n    string public name = \"SIDBRIAN\";\r\n    string public symbol = \"SIDB\";\r\n    uint8 public decimals = 18;\r\n    \r\n    mapping(address => uint256) private balances_;\r\n    mapping(address => mapping(address => uint256)) private allowed_;\r\n    uint256 private totalSupply_;\r\n    \r\n    uint256 public activateTokens_;\r\n    uint256 public increasingStep_;\r\n    \r\n    bool public isPaused_ = false;\r\n    \r\n    mapping(address => bool) activators_;\r\n    \r\n    /**\r\n     *                   _ _  __ _               \r\n     *   /\\/\\   ___   __| (_)/ _(_) ___ _ __ ___ \r\n     *  /    \\ / _ \\ / _` | | |_| |/ _ \\ '__/ __|\r\n     * / /\\/\\ \\ (_) | (_| | |  _| |  __/ |  \\__ \\\r\n     * \\/    \\/\\___/ \\__,_|_|_| |_|\\___|_|  |___/\r\n     * \r\n     * */\r\n    \r\n    modifier onlyOwner(\r\n        address _address\r\n    )\r\n    {\r\n        require(\r\n            _address == owner_, \r\n            \"This action not allowed because of permission.\"\r\n        );\r\n        \r\n        _;\r\n    }\r\n    \r\n    modifier onlyActivator(\r\n        address _activator    \r\n    )\r\n    {\r\n        require(\r\n            activators_[_activator] == true, \r\n            \"The action not allowed because of permission.\"\r\n        );\r\n        _;\r\n    }\r\n    \r\n    modifier onlyUnpaused\r\n    {\r\n        require(\r\n            isPaused_ == false, \r\n            \"This action not allowed when pausing\"\r\n        );\r\n        \r\n        _;\r\n    }\r\n    \r\n    /**\r\n     *     __                 _       \r\n     *    /__\\_   _____ _ __ | |_ ___   \r\n     *   /_\\ \\ \\ / / _ \\ '_ \\| __/ __|\r\n     *  //__  \\ V /  __/ | | | |_\\__ \\\r\n     *  \\__/   \\_/ \\___|_| |_|\\__|___/\r\n     * */\r\n     \r\n    event Pause();\r\n    event Unpause();\r\n    event Activation(\r\n        address activator,\r\n        uint256 activeTokens\r\n    );\r\n    event RemoveActivator(\r\n        address activator\r\n    );\r\n    event AddActivator(\r\n        address activator\r\n    );\r\n    \r\n    event TransferOwnership(\r\n        address newOwner\r\n    );\r\n    \r\n    /**\r\n     *      __  __    ___ ____   ___      ___                 _   _                 \r\n     *     /__\\/__\\  / __\\___ \\ / _ \\    / __\\   _ _ __   ___| |_(_) ___  _ __  ___  \r\n     *    /_\\ / \\// / /    __) | | | |  / _\\| | | | '_ \\ / __| __| |/ _ \\| '_ \\/ __|\r\n     *   //__/ _  \\/ /___ / __/| |_| | / /  | |_| | | | | (__| |_| | (_) | | | \\__ \\\r\n     *   \\__/\\/ \\_/\\____/|_____|\\___/  \\/    \\__,_|_| |_|\\___|\\__|_|\\___/|_| |_|___/\r\n     *  ERC20 Functions\r\n     * */\r\n    \r\n    function totalSupply() \r\n        view\r\n        public \r\n        returns \r\n        (uint256)\r\n    {\r\n        return totalSupply_;\r\n    }\r\n    \r\n    function balanceOf(\r\n        address _who\r\n    )\r\n        view\r\n        public\r\n        returns\r\n        (uint256)\r\n    {\r\n        return balances_[_who];\r\n    }\r\n    \r\n    function allowance(\r\n        address _who, \r\n        address _spender\r\n    )\r\n        view\r\n        public\r\n        returns\r\n        (uint256)\r\n    {\r\n        return allowed_[_who][_spender];\r\n    }\r\n    \r\n    function transfer(\r\n        address _to, \r\n        uint256 _value\r\n    )\r\n        public\r\n        onlyUnpaused\r\n        returns\r\n        (bool)\r\n    {\r\n        require(balances_[msg.sender] >= _value, \"Insufficient balance\");\r\n        require(_to != address(0));\r\n        \r\n        balances_[msg.sender] = balances_[msg.sender].sub(_value);\r\n        balances_[_to] = balances_[_to].add(_value);\r\n        \r\n        emit Transfer(\r\n            msg.sender,\r\n            _to,\r\n            _value\r\n        );\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(\r\n        address _spender, \r\n        uint256 _value\r\n    )\r\n        public\r\n        returns\r\n        (bool)\r\n    {\r\n        allowed_[msg.sender][_spender] = _value;\r\n        emit Approval(\r\n            msg.sender,\r\n            _spender,\r\n            _value\r\n        );\r\n    }\r\n    \r\n    function transferFrom(\r\n        address _from, \r\n        address _to, \r\n        uint256 _value\r\n    )\r\n        public\r\n        onlyUnpaused\r\n        returns\r\n        (bool)\r\n    {\r\n        require(balances_[_from] >= _value, \"Owner Insufficient balance\");\r\n        require(allowed_[_from][msg.sender] >= _value, \"Spender Insufficient balance\");\r\n        require(_to != address(0), \"Don't burn the coin.\");\r\n        \r\n        balances_[_from] = balances_[_from].sub(_value);\r\n        balances_[_to] = balances_[_to].add(_value);\r\n        allowed_[_from][msg.sender] = allowed_[_from][msg.sender].sub(_value);\r\n        \r\n        emit Transfer(\r\n            _from,\r\n            _to,\r\n            _value\r\n        );\r\n    }\r\n    \r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addValue\r\n    )\r\n        public\r\n        returns\r\n        (bool)\r\n    {\r\n        allowed_[msg.sender][_spender] = \r\n            allowed_[msg.sender][_spender].add(_addValue);\r\n        \r\n        emit Approval(\r\n            msg.sender,\r\n            _spender,\r\n            allowed_[msg.sender][_spender]\r\n        );\r\n    }\r\n    \r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _substractValue\r\n    )\r\n        public\r\n        returns\r\n        (bool)\r\n    {\r\n        uint256 _oldValue = allowed_[msg.sender][_spender];\r\n        if(_oldValue >= _substractValue) {\r\n            allowed_[msg.sender][_spender] = _oldValue.sub(_substractValue);\r\n        } \r\n        else {\r\n            allowed_[msg.sender][_spender] = 0;    \r\n        }\r\n        \r\n        emit Approval(\r\n            msg.sender,\r\n            _spender,\r\n            allowed_[msg.sender][_spender]\r\n        );\r\n    }\r\n    \r\n    /**\r\n     *    ___       _     _ _          ___                 _   _                 \r\n     *   / _ \\_   _| |__ | (_) ___    / __\\   _ _ __   ___| |_(_) ___  _ __  ___ \r\n     *  / /_)/ | | | '_ \\| | |/ __|  / _\\| | | | '_ \\ / __| __| |/ _ \\| '_ \\/ __|\r\n     * / ___/| |_| | |_) | | | (__  / /  | |_| | | | | (__| |_| | (_) | | | \\__ \\\r\n     * \\/     \\__,_|_.__/|_|_|\\___| \\/    \\__,_|_| |_|\\___|\\__|_|\\___/|_| |_|___/\r\n     */\r\n    \r\n    function isPaused()\r\n        view\r\n        public \r\n        returns\r\n        (bool)\r\n    {\r\n        return isPaused_;\r\n    }\r\n    \r\n    /**\r\n     \r\n     *    ___                                            _       \r\n     *   /___\\__      ___ __   ___ _ __       ___  _ __ | |_   _ \r\n     *  //  //\\ \\ /\\ / / '_ \\ / _ \\ '__|____ / _ \\| '_ \\| | | | |\r\n     * / \\_//  \\ V  V /| | | |  __/ | |_____| (_) | | | | | |_| |\r\n     * \\___/    \\_/\\_/ |_| |_|\\___|_|        \\___/|_| |_|_|\\__, |\r\n     *                                                     |___/                                               \r\n     * The functions that owner can call.\r\n     */\r\n     \r\n    function pause()\r\n        public\r\n        onlyOwner(msg.sender)\r\n    {\r\n        isPaused_ = true;\r\n        emit Pause();\r\n    }\r\n    \r\n    function unpaused()\r\n        public\r\n        onlyOwner(msg.sender)\r\n    {\r\n        isPaused_ = false;\r\n        \r\n        emit Unpause();\r\n    }\r\n    \r\n    function addActivator(\r\n        address _activator\r\n    )\r\n        public\r\n        onlyOwner(msg.sender)\r\n    {\r\n        activators_[_activator] = true;\r\n        \r\n        emit AddActivator(_activator);\r\n    }\r\n    \r\n    function removeActivator(\r\n        address _activator\r\n    )\r\n        public\r\n        onlyOwner(msg.sender)\r\n    {\r\n        activators_[_activator] = false;\r\n        \r\n        emit RemoveActivator(_activator);\r\n    }\r\n    \r\n    function transferOwnership(\r\n        address _newOwner    \r\n    )\r\n        public\r\n        onlyOwner(msg.sender)\r\n    {\r\n        owner_ = _newOwner;\r\n        emit TransferOwnership(_newOwner);\r\n    }\r\n    \r\n    /**\r\n     *    _        _   _            _                              _       \r\n     *   /_\\   ___| |_(_)_   ____ _| |_ ___  _ __       ___  _ __ | |_   _ \r\n     *  //_\\\\ / __| __| \\ \\ / / _` | __/ _ \\| '__|____ / _ \\| '_ \\| | | | |\r\n     * /  _  \\ (__| |_| |\\ V / (_| | || (_) | | |_____| (_) | | | | | |_| |\r\n     * \\_/ \\_/\\___|\\__|_| \\_/ \\__,_|\\__\\___/|_|        \\___/|_| |_|_|\\__, |\r\n     *                                                               |___/                                               \r\n     * The functions that only activators can call.\r\n     * */\r\n     \r\n     function activateToken()\r\n        public\r\n        onlyActivator(msg.sender)\r\n    {\r\n        require(activateTokens_ <= totalSupply_, \"All token have been activated.\");\r\n        uint256 _beforeValue = activateTokens_;\r\n        activateTokens_ = _beforeValue.add(increasingStep_);\r\n        \r\n        emit Activation(\r\n            msg.sender,\r\n            activateTokens_\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev ERC677 support\r\n     * \r\n     * */\r\n    function transferAndCall(address _recipient,\r\n                    uint256 _value,\r\n                    bytes _extraData)\r\n        public\r\n        returns\r\n        (bool)\r\n    {\r\n        transfer(_recipient, _value);\r\n        if(isContract(_recipient)) {\r\n            require(ERC677ReceiverInterface(_recipient).tokenFallback(msg.sender, _value, _extraData));\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function isContract(address _addr) private view returns (bool) {\r\n        uint len;\r\n        assembly {\r\n            len := extcodesize(_addr)\r\n        }\r\n        return len > 0;\r\n    }\r\n}\r\n\r\n/**\r\n *   __        __                      _   _     \r\n    / _\\ __ _ / _| ___ _ __ ___   __ _| |_| |__  \r\n    \\ \\ / _` | |_ / _ \\ '_ ` _ \\ / _` | __| '_ \\ \r\n    _\\ \\ (_| |  _|  __/ | | | | | (_| | |_| | | |\r\n    \\__/\\__,_|_|  \\___|_| |_| |_|\\__,_|\\__|_| |_|\r\n      \r\n    SafeMath library, thanks to openzeppelin solidity.\r\n    https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/math/SafeMath.sol\r\n * */\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, reverts on overflow.\r\n  */\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = _a * _b;\r\n    require(c / _a == _b);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\r\n  */\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    require(_b > 0); // Solidity only automatically asserts when dividing by 0\r\n    uint256 c = _a / _b;\r\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    require(_b <= _a);\r\n    uint256 c = _a - _b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, reverts on overflow.\r\n  */\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    uint256 c = _a + _b;\r\n    require(c >= _a);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activator\",\"type\":\"address\"}],\"name\":\"addActivator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused_\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activator\",\"type\":\"address\"}],\"name\":\"removeActivator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_substractValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"increasingStep_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activateTokens_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner_\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activateToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"activator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"activeTokens\",\"type\":\"uint256\"}],\"name\":\"Activation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"activator\",\"type\":\"address\"}],\"name\":\"RemoveActivator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"activator\",\"type\":\"address\"}],\"name\":\"AddActivator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SIDBRIAN","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6b1854de56f5b8e0915490e0cb0d79c89e25cc13156fb589a6d2c00961f21995"}]}