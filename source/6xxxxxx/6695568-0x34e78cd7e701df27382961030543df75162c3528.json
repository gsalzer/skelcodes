{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/**\r\n* ETH CRYPTOCURRENCY DISTRIBUTION PROJECT v 3.0\r\n* Web              - https://3333eth.ru\r\n* \r\n* \r\n*  - GAIN 3,33% - 1% PER 24 HOURS (interest is charges in equal parts every 10 min)\r\n*  - Life-long payments\r\n*  - The revolutionary reliability\r\n*  - Minimal contribution 0.01 eth\r\n*  - Currency and payment - ETH\r\n*  - Contribution allocation schemes:\r\n*    -- 87% payments\r\n*    --  8% marketing\r\n*    --  5% technical support\r\n*\r\n*   ---About the Project\r\n*  Blockchain-enabled smart contracts have opened a new era of trustless relationships without \r\n*  intermediaries. This technology opens incredible financial possibilities. Our automated investment \r\n*  distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be \r\n*  freely accessed online. In order to insure our investors' complete security, full control over the \r\n*  project has been transferred from the organizers to the smart contract: nobody can influence the \r\n*  system's permanent autonomous functioning.\r\n* \r\n* RECOMMENDED GAS LIMIT: 200000\r\n* RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n* You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n* \r\n* ---It is not allowed to transfer from exchanges, only from your personal ETH wallet, for which you \r\n* have private keys.\r\n* \r\n* Contracts reviewed and approved by pros!\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n/**\r\nThe development of the contract is entirely owned by the 3333eth campaign, any copying of the source code is not legal.\r\n*/\r\ncontract ETH_v3 {\r\n    //use of library of safe mathematical operations    \r\n    using SafeMath\r\n    for uint;\r\n    // array containing information about beneficiaries\r\n    mapping(address => uint) public userDeposit;\r\n    //array containing information about the time of payment\r\n    mapping(address => uint) public userTime;\r\n    //array containing information on interest paid\r\n    mapping(address => uint) public persentWithdraw;\r\n    //fund fo transfer percent\r\n    address public projectFund = 0x18e9F86ed0430679f79EF2eA0cc5E1186b80c570;\r\n    //wallet for a charitable foundation\r\n    address public charityFund = 0xf36EEbB7438aDef0E7fE4650a6Cd6dB238B58c6a;\r\n    //percentage deducted to the advertising fund\r\n    uint projectPercent = 8;\r\n    //percent for a charitable foundation\r\n    uint public charityPercent = 5;\r\n    //time through which you can take dividends\r\n    uint public chargingTime = 1 hours;\r\n    //start persent 0.13% per hour\r\n    uint public startPercent = 250;\r\n    uint public lowPersent = 300;\r\n    uint public middlePersent = 350;\r\n    uint public highPersent = 375;\r\n    //interest rate increase steps\r\n    uint public stepLow = 1000 ether;\r\n    uint public stepMiddle = 2500 ether;\r\n    uint public stepHigh = 5000 ether;\r\n    uint public countOfInvestors = 0;\r\n    uint public countOfCharity = 0;\r\n\r\n    modifier isIssetUser() {\r\n        require(userDeposit[msg.sender] > 0, \"Deposit not found\");\r\n        _;\r\n    }\r\n\r\n    modifier timePayment() {\r\n        require(now >= userTime[msg.sender].add(chargingTime), \"Too fast payout request\");\r\n        _;\r\n    }\r\n\r\n    //return of interest on the deposit\r\n    function collectPercent() isIssetUser timePayment internal {\r\n        //if the user received 200% or more of his contribution, delete the user\r\n        if ((userDeposit[msg.sender].mul(2)) <= persentWithdraw[msg.sender]) {\r\n            userDeposit[msg.sender] = 0;\r\n            userTime[msg.sender] = 0;\r\n            persentWithdraw[msg.sender] = 0;\r\n        } else {\r\n            uint payout = payoutAmount();\r\n            userTime[msg.sender] = now;\r\n            persentWithdraw[msg.sender] += payout;\r\n            msg.sender.transfer(payout);\r\n        }\r\n    }\r\n\r\n    //calculation of the current interest rate on the deposit\r\n    function persentRate() public view returns(uint) {\r\n        //get contract balance\r\n        uint balance = address(this).balance;\r\n        //calculate persent rate\r\n        if (balance < stepLow) {\r\n            return (startPercent);\r\n        }\r\n        if (balance >= stepLow && balance < stepMiddle) {\r\n            return (lowPersent);\r\n        }\r\n        if (balance >= stepMiddle && balance < stepHigh) {\r\n            return (middlePersent);\r\n        }\r\n        if (balance >= stepHigh) {\r\n            return (highPersent);\r\n        }\r\n    }\r\n\r\n    //refund of the amount available for withdrawal on deposit\r\n    function payoutAmount() public view returns(uint) {\r\n        uint persent = persentRate();\r\n        uint rate = userDeposit[msg.sender].mul(persent).div(100000);\r\n        uint interestRate = now.sub(userTime[msg.sender]).div(chargingTime);\r\n        uint withdrawalAmount = rate.mul(interestRate);\r\n        return (withdrawalAmount);\r\n    }\r\n\r\n    //make a contribution to the system\r\n    function makeDeposit() private {\r\n        if (msg.value > 0) {\r\n            if (userDeposit[msg.sender] == 0) {\r\n                countOfInvestors += 1;\r\n            }\r\n            if (userDeposit[msg.sender] > 0 && now > userTime[msg.sender].add(chargingTime)) {\r\n                collectPercent();\r\n            }\r\n            userDeposit[msg.sender] = userDeposit[msg.sender].add(msg.value);\r\n            userTime[msg.sender] = now;\r\n            //sending money for advertising\r\n            projectFund.transfer(msg.value.mul(projectPercent).div(100));\r\n            //sending money to charity\r\n            uint charityMoney = msg.value.mul(charityPercent).div(100);\r\n            countOfCharity+=charityMoney;\r\n            charityFund.transfer(charityMoney);\r\n        } else {\r\n            collectPercent();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lowPersent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepHigh\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"charityPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"projectFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chargingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"charityFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepLow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countOfCharity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stepMiddle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highPersent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"persentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"middlePersent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countOfInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"persentWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ETH_v3","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4220891c524ffbad63e8b254cfab0b8bd50f6b3467924ebb8c099269281f28d3"}]}