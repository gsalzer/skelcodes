{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n// copyright contact@Etheremon.com\r\n\r\ncontract BasicAccessControl {\r\n    address public owner;\r\n    // address[] public moderators;\r\n    uint16 public totalModerators = 0;\r\n    mapping (address => bool) public moderators;\r\n    bool public isMaintaining = false;\r\n\r\n    function BasicAccessControl() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyModerators() {\r\n        require(msg.sender == owner || moderators[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier isActive {\r\n        require(!isMaintaining);\r\n        _;\r\n    }\r\n\r\n    function ChangeOwner(address _newOwner) onlyOwner public {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n\r\n    function AddModerator(address _newModerator) onlyOwner public {\r\n        if (moderators[_newModerator] == false) {\r\n            moderators[_newModerator] = true;\r\n            totalModerators += 1;\r\n        }\r\n    }\r\n    \r\n    function RemoveModerator(address _oldModerator) onlyOwner public {\r\n        if (moderators[_oldModerator] == true) {\r\n            moderators[_oldModerator] = false;\r\n            totalModerators -= 1;\r\n        }\r\n    }\r\n\r\n    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\r\n        isMaintaining = _isMaintaining;\r\n    }\r\n}\r\n\r\ncontract EtheremonTransformSetting is BasicAccessControl {\r\n    \r\n    uint32[] public randomClassIds = [32, 97, 80, 73, 79, 81, 101, 103, 105];\r\n    mapping(uint32 => uint8) public layingEggLevels;\r\n    mapping(uint32 => uint8) public layingEggDeductions;\r\n    mapping(uint32 => uint8) public transformLevels;\r\n    mapping(uint32 => uint32) public transformClasses;\r\n    \r\n    function setConfigClass(uint32 _classId, uint8 _layingLevel, uint8 _layingCost, uint8 _transformLevel, uint32 _tranformClass) onlyModerators public {\r\n        layingEggLevels[_classId] = _layingLevel;\r\n        layingEggDeductions[_classId] = _layingCost;\r\n        transformLevels[_classId] = _transformLevel;\r\n        transformClasses[_classId] = _tranformClass;\r\n    }\r\n    \r\n    function addRandomClass(uint32 _newClassId) onlyModerators public {\r\n        if (_newClassId > 0) {\r\n            for (uint index = 0; index < randomClassIds.length; index++) {\r\n                if (randomClassIds[index] == _newClassId) {\r\n                    return;\r\n                }\r\n            }\r\n            randomClassIds.push(_newClassId);\r\n        }\r\n    }\r\n    \r\n    function removeRandomClass(uint32 _oldClassId) onlyModerators public {\r\n        uint foundIndex = 0;\r\n        for (; foundIndex < randomClassIds.length; foundIndex++) {\r\n            if (randomClassIds[foundIndex] == _oldClassId) {\r\n                break;\r\n            }\r\n        }\r\n        if (foundIndex < randomClassIds.length) {\r\n            randomClassIds[foundIndex] = randomClassIds[randomClassIds.length-1];\r\n            delete randomClassIds[randomClassIds.length-1];\r\n            randomClassIds.length--;\r\n        }\r\n    }\r\n    \r\n    function initMonsterClassConfig() onlyModerators external {\r\n        setConfigClass(1, 0, 0, 20, 38);\r\n        setConfigClass(2, 0, 0, 20, 39);\r\n        setConfigClass(3, 0, 0, 26, 40);\r\n        setConfigClass(4, 0, 0, 20, 41);\r\n        setConfigClass(5, 0, 0, 20, 42);\r\n        setConfigClass(6, 0, 0, 25, 43);\r\n        setConfigClass(7, 0, 0, 28, 44);\r\n        setConfigClass(8, 0, 0, 25, 45);\r\n        setConfigClass(9, 0, 0, 27, 46);\r\n        setConfigClass(10, 0, 0, 29, 47);\r\n        setConfigClass(11, 0, 0, 25, 48);\r\n        setConfigClass(12, 0, 0, 26, 49);\r\n        setConfigClass(18, 0, 0, 28, 50);\r\n        setConfigClass(20, 0, 0, 20, 51);\r\n        setConfigClass(24, 0, 0, 39, 89);\r\n        setConfigClass(25, 0, 0, 20, 52);\r\n        setConfigClass(26, 0, 0, 21, 53);\r\n        setConfigClass(27, 0, 0, 28, 54);\r\n        \r\n        setConfigClass(28, 35, 5, 28, 55);\r\n        setConfigClass(29, 35, 5, 27, 56);\r\n        setConfigClass(30, 35, 5, 28, 57);\r\n        setConfigClass(31, 34, 5, 27, 58);\r\n        setConfigClass(32, 34, 5, 27, 59);\r\n        setConfigClass(33, 33, 5, 28, 60);\r\n        setConfigClass(34, 31, 5, 21, 61);\r\n        \r\n        setConfigClass(37, 34, 5, 26, 62);\r\n        setConfigClass(38, 0, 0, 40, 64);\r\n        setConfigClass(39, 0, 0, 40, 65);\r\n        setConfigClass(41, 0, 0, 39, 66);\r\n        setConfigClass(42, 0, 0, 42, 67);\r\n        setConfigClass(51, 0, 0, 37, 68);\r\n        setConfigClass(52, 0, 0, 39, 69);\r\n        setConfigClass(53, 0, 0, 38, 70);\r\n        setConfigClass(61, 0, 0, 39, 71);\r\n        setConfigClass(62, 0, 0, 5, 63);\r\n        \r\n        setConfigClass(77, 36, 5, 32, 82);\r\n        setConfigClass(78, 35, 5, 30, 83);\r\n        setConfigClass(79, 32, 5, 23, 84);\r\n        setConfigClass(80, 35, 5, 29, 85);\r\n        setConfigClass(81, 34, 5, 24, 86);\r\n        setConfigClass(84, 0, 0, 38, 87);\r\n        \r\n        setConfigClass(86, 0, 0, 41, 88);\r\n        setConfigClass(89, 0, 0, 42, 158);\r\n        setConfigClass(90, 0, 0, 28, 91);\r\n        setConfigClass(91, 0, 0, 38, 92);\r\n        setConfigClass(93, 0, 0, 28, 94);\r\n        setConfigClass(94, 0, 0, 38, 95);\r\n        \r\n        setConfigClass(97, 35, 5, 32, 98);\r\n        setConfigClass(99, 34, 5, 30, 100);\r\n        setConfigClass(101, 36, 5, 31, 102);\r\n        setConfigClass(103, 39, 7, 30, 104);\r\n        setConfigClass(106, 34, 5, 31, 107);\r\n        setConfigClass(107, 0, 0, 43, 108);\r\n        \r\n        setConfigClass(116, 0, 0, 27, 117);\r\n        setConfigClass(117, 0, 0, 37, 118);\r\n        setConfigClass(119, 0, 0, 28, 120);\r\n        setConfigClass(120, 0, 0, 37, 121);\r\n        setConfigClass(122, 0, 0, 29, 123);\r\n        setConfigClass(123, 0, 0, 36, 124);\r\n        setConfigClass(125, 0, 0, 26, 126);\r\n        setConfigClass(126, 0, 0, 37, 127);\r\n        setConfigClass(128, 0, 0, 26, 129);\r\n        setConfigClass(129, 0, 0, 38, 130);\r\n        setConfigClass(131, 0, 0, 27, 132);\r\n        setConfigClass(132, 0, 0, 37, 133);\r\n        setConfigClass(134, 0, 0, 35, 135);\r\n        setConfigClass(136, 0, 0, 36, 137);\r\n        setConfigClass(138, 0, 0, 36, 139);\r\n        setConfigClass(140, 0, 0, 35, 141);\r\n        setConfigClass(142, 0, 0, 36, 143);\r\n        setConfigClass(144, 0, 0, 34, 145);\r\n        setConfigClass(146, 0, 0, 36, 147);\r\n        setConfigClass(148, 0, 0, 26, 149);\r\n        setConfigClass(149, 0, 0, 37, 150);\r\n        \r\n        setConfigClass(151, 0, 0, 36, 152);\r\n        setConfigClass(156, 0, 0, 38, 157);\r\n    }\r\n    \r\n    // read access\r\n    \r\n    function getRandomClassId(uint _seed) constant external returns(uint32) {\r\n        return randomClassIds[_seed % randomClassIds.length];\r\n    }\r\n    \r\n    function getLayEggInfo(uint32 _classId) constant external returns(uint8 layingLevel, uint8 layingCost) {\r\n        layingLevel = layingEggLevels[_classId];\r\n        layingCost = layingEggDeductions[_classId];\r\n    }\r\n    \r\n    function getTransformInfo(uint32 _classId) constant external returns(uint32 transformClassId, uint8 level) {\r\n        transformClassId = transformClasses[_classId];\r\n        level = transformLevels[_classId];\r\n    }\r\n    \r\n    function getClassTransformInfo(uint32 _classId) constant external returns(uint8 layingLevel, uint8 layingCost, uint8 transformLevel, uint32 transformCLassId) {\r\n        layingLevel = layingEggLevels[_classId];\r\n        layingCost = layingEggDeductions[_classId];\r\n        transformLevel = transformLevels[_classId];\r\n        transformCLassId = transformClasses[_classId];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initMonsterClassConfig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"UpdateMaintaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_seed\",\"type\":\"uint256\"}],\"name\":\"getRandomClassId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalModerators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"transformLevels\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_classId\",\"type\":\"uint32\"},{\"name\":\"_layingLevel\",\"type\":\"uint8\"},{\"name\":\"_layingCost\",\"type\":\"uint8\"},{\"name\":\"_transformLevel\",\"type\":\"uint8\"},{\"name\":\"_tranformClass\",\"type\":\"uint32\"}],\"name\":\"setConfigClass\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newModerator\",\"type\":\"address\"}],\"name\":\"AddModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"layingEggDeductions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"layingEggLevels\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newClassId\",\"type\":\"uint32\"}],\"name\":\"addRandomClass\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_classId\",\"type\":\"uint32\"}],\"name\":\"getClassTransformInfo\",\"outputs\":[{\"name\":\"layingLevel\",\"type\":\"uint8\"},{\"name\":\"layingCost\",\"type\":\"uint8\"},{\"name\":\"transformLevel\",\"type\":\"uint8\"},{\"name\":\"transformCLassId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldModerator\",\"type\":\"address\"}],\"name\":\"RemoveModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldClassId\",\"type\":\"uint32\"}],\"name\":\"removeRandomClass\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"randomClassIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"transformClasses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_classId\",\"type\":\"uint32\"}],\"name\":\"getTransformInfo\",\"outputs\":[{\"name\":\"transformClassId\",\"type\":\"uint32\"},{\"name\":\"level\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_classId\",\"type\":\"uint32\"}],\"name\":\"getLayEggInfo\",\"outputs\":[{\"name\":\"layingLevel\",\"type\":\"uint8\"},{\"name\":\"layingCost\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintaining\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EtheremonTransformSetting","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c128482e53743f03127747dad059e277d6554033a60c5fc5a5009bf9589bc767"}]}