{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*** @title SafeMath\r\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/math/SafeMath.sol */\r\nlibrary SafeMath {\r\n  \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n  \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function transfer (address _beneficiary, uint256 _tokenAmount) external returns (bool);\r\n  function mintFromICO(address _to, uint256 _amount) external  returns(bool);\r\n  function buyTokenICO(address _investor, uint256 _value) external  returns(bool);\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol */\r\ncontract Ownable {\r\n  address public owner;\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\n/**\r\n * @title MainCrowdSale\r\n * @dev https://github.com/elephant-marketing/*/\r\n\r\ncontract MainSale is Ownable {\r\n  \r\n  ERC20 public token;\r\n  \r\n  ERC20 public BuyBackContract;\r\n  \r\n  using SafeMath for uint;\r\n  \r\n  address public backEndOperator = msg.sender;\r\n  \r\n  address team = 0x550cBC2C3Ac03f8f1d950FEf755Cd664fc498036; // 10 % - founders\r\n  \r\n  address bounty = 0x8118317911B0De31502aC978e1dD38e9EeE92538; // 2 % - bounty\r\n  \r\n  \r\n  mapping(address=>bool) public whitelist;\r\n  \r\n  mapping(address => uint256) public investedEther;\r\n  \r\n  mapping(address => uint8) public typeOfInvestors;\r\n  \r\n  \r\n  uint256 public startMainSale = 1539561600; // Monday, 15-Oct-18 00:00:00 UTC\r\n  \r\n  uint256 public endMainSale = 1544831999; // Friday, 14-Dec-18 23:59:59 UTC\r\n  \r\n  \r\n  uint256 public stage1Sale = startMainSale + 14 days; // 0- 7  days\r\n  \r\n  uint256 public stage2Sale = startMainSale + 28 days; // 8 - 14 days\r\n  \r\n  uint256 public stage3Sale = startMainSale + 42 days; // 15 - 21  days\r\n  \r\n  \r\n  uint256 public investors;\r\n  \r\n  uint256 public weisRaised;\r\n  \r\n  uint256 public buyPrice; // 1 USD\r\n  \r\n  uint256 public dollarPrice;\r\n  \r\n  uint256 public soldTokensMainSale;\r\n  \r\n  uint256 public softcapMainSale = 18500000*1e18; // 18,500,000 ANG - !!! в зачет пойдут бонусные\r\n  \r\n  uint256 public hardCapMainSale = 103500000*1e18; // 103,500,000 ANG - !!! в зачет пойдут бонусные\r\n  \r\n  \r\n  event Authorized(address wlCandidate, uint timestamp, uint8 investorType);\r\n  \r\n  event Revoked(address wlCandidate, uint timestamp);\r\n  \r\n  event UpdateDollar(uint256 time, uint256 _rate);\r\n  \r\n  event Refund(uint256 sum, address investor);\r\n  \r\n  \r\n  \r\n  modifier backEnd() {\r\n    require(msg.sender == backEndOperator || msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  \r\n  constructor(ERC20 _token, uint256 usdETH) public {\r\n    token = _token;\r\n    dollarPrice = usdETH;\r\n    buyPrice = (1e18/dollarPrice); // 1 usd\r\n  }\r\n  \r\n  \r\n  function setStartMainSale(uint256 newStartMainSale) public onlyOwner {\r\n    startMainSale = newStartMainSale;\r\n  }\r\n  \r\n  function setEndMainSale(uint256 newEndMainSale) public onlyOwner {\r\n    endMainSale = newEndMainSale;\r\n  }\r\n  \r\n  function setBackEndAddress(address newBackEndOperator) public onlyOwner {\r\n    backEndOperator = newBackEndOperator;\r\n  }\r\n  \r\n  function setBuyBackAddress(ERC20 newBuyBackAddress) public onlyOwner {\r\n    BuyBackContract = newBuyBackAddress;\r\n  }\r\n  \r\n  function setBuyPrice(uint256 _dollar) public onlyOwner {\r\n    dollarPrice = _dollar;\r\n    buyPrice = (1e18/dollarPrice); // 1 usd\r\n    emit UpdateDollar(now, dollarPrice);\r\n  }\r\n  \r\n  /*******************************************************************************\r\n   * Whitelist's section */\r\n  \r\n  function authorize(address wlCandidate, uint8 investorType) public backEnd  {\r\n    require(wlCandidate != address(0x0));\r\n    require(!isWhitelisted(wlCandidate));\r\n    require(investors == 1 || investorType == 2);\r\n    \r\n    whitelist[wlCandidate] = true;\r\n    investors++;\r\n    \r\n    if (investorType == 1) {\r\n      typeOfInvestors[wlCandidate] = 1;\r\n    } else {\r\n      typeOfInvestors[wlCandidate] = 2;\r\n    }\r\n    emit Authorized(wlCandidate, now, investorType);\r\n  }\r\n  \r\n  \r\n  function revoke(address wlCandidate) public  onlyOwner {\r\n    whitelist[wlCandidate] = false;\r\n    investors--;\r\n    emit Revoked(wlCandidate, now);\r\n  }\r\n  \r\n  \r\n  function isWhitelisted(address wlCandidate) internal view returns(bool) {\r\n    return whitelist[wlCandidate];\r\n  }\r\n  \r\n  \r\n  /*******************************************************************************\r\n   * Payable's section */\r\n  \r\n  function isMainSale() public constant returns(bool) {\r\n    return now >= startMainSale && now <= endMainSale;\r\n  }\r\n  \r\n  \r\n  function () public payable {\r\n    require(isWhitelisted(msg.sender));\r\n    require(isMainSale());\r\n    mainSale(msg.sender, msg.value);\r\n    require(soldTokensMainSale<=hardCapMainSale);\r\n    investedEther[msg.sender] = investedEther[msg.sender].add(msg.value);\r\n  }\r\n  \r\n  \r\n  function mainSale(address _investor, uint256 _value) internal {\r\n    uint256 tokens = _value.mul(1e18).div(buyPrice);\r\n    uint256 tokensByDate = tokens.mul(bonusDate()).div(100);\r\n    tokens = tokens.add(tokensByDate);\r\n    token.mintFromICO(_investor, tokens);\r\n    BuyBackContract.buyTokenICO(_investor, tokens);//Set count token for periods ICO\r\n    soldTokensMainSale = soldTokensMainSale.add(tokens); // only sold\r\n\t \r\n    uint256 tokensTeam = tokens.mul(5).div(44); // 10 %\r\n    token.mintFromICO(team, tokensTeam);\r\n    \r\n    uint256 tokensBoynty = tokens.div(44); // 2 %\r\n    token.mintFromICO(bounty, tokensBoynty);\r\n    \r\n    weisRaised = weisRaised.add(_value);\r\n  }\r\n  \r\n  \r\n  function bonusDate() private view returns (uint256){\r\n    if (now > startMainSale && now < stage1Sale) {  // 0 - 14 days preSale\r\n      return 30;\r\n    }\r\n    else if (now > stage1Sale && now < stage2Sale) { // 15 - 28 days preSale\r\n      return 20;\r\n    }\r\n    else if (now > stage2Sale && now < stage3Sale) { // 29 - 42 days preSale\r\n      return 10;\r\n    }\r\n    else if (now > stage3Sale && now < endMainSale) { // 43 - endSale\r\n      return 6;\r\n    }\r\n    \r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  \r\n  function mintManual(address receiver, uint256 _tokens) public backEnd {\r\n    token.mintFromICO(receiver, _tokens);\r\n    soldTokensMainSale = soldTokensMainSale.add(_tokens);\r\n    BuyBackContract.buyTokenICO(receiver, _tokens);//Set count token for periods ICO\r\n\t \r\n    uint256 tokensTeam = _tokens.mul(5).div(44); // 10 %\r\n    token.mintFromICO(team, tokensTeam);\r\n    \r\n    uint256 tokensBoynty = _tokens.div(44); // 2 %\r\n    token.mintFromICO(bounty, tokensBoynty);\r\n  }\r\n  \r\n  \r\n  function transferEthFromContract(address _to, uint256 amount) public onlyOwner {\r\n    _to.transfer(amount);\r\n  }\r\n  \r\n  \r\n  function refundPreSale() public {\r\n    require(soldTokensMainSale < soldTokensMainSale && now > endMainSale);\r\n    uint256 rate = investedEther[msg.sender];\r\n    require(investedEther[msg.sender] >= 0);\r\n    investedEther[msg.sender] = 0;\r\n    msg.sender.transfer(rate);\r\n    weisRaised = weisRaised.sub(rate);\r\n    emit Refund(rate, msg.sender);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"backEndOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldTokensMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refundPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"typeOfInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investedEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEthFromContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage1Sale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dollarPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStartMainSale\",\"type\":\"uint256\"}],\"name\":\"setStartMainSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage3Sale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dollar\",\"type\":\"uint256\"}],\"name\":\"setBuyPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wlCandidate\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"mintManual\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softcapMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBuyBackAddress\",\"type\":\"address\"}],\"name\":\"setBuyBackAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage2Sale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBackEndOperator\",\"type\":\"address\"}],\"name\":\"setBackEndAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newEndMainSale\",\"type\":\"uint256\"}],\"name\":\"setEndMainSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weisRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wlCandidate\",\"type\":\"address\"},{\"name\":\"investorType\",\"type\":\"uint8\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BuyBackContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCapMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"usdETH\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"investorType\",\"type\":\"uint8\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"UpdateDollar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"Refund\",\"type\":\"event\"}]","ContractName":"MainSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c5c02655bbd508545b4e32ec88cef3aa5e741d870000000000000000000000000000000000000000000000000000000000000123","Library":"","SwarmSource":"bzzr://7b7921e890523d45c3ead92a6484902f0fc5e9bb96cdb6b0fbc928eadef19245"}]}