{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n * http://solidity.readthedocs.io/en/latest\r\n * https://ethereumbuilders.gitbooks.io/guide/content/en/solidity_tutorials.html\r\n * Token standard: https://github.com/ethereum/EIPs/issues/20\r\n */\r\n// import \"contracts/StringLib.sol\";\r\n\r\npragma solidity ^0.4.24;\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeERC20 {\r\n  function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\r\n    assert(token.transfer(to, value));\r\n  }\r\n  function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal {\r\n    assert(token.transferFrom(from, to, value));\r\n  }\r\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\r\n    assert(token.approve(spender, value));\r\n  }\r\n}\r\n\r\ncontract owned {\r\n    address owner;\r\n\r\n    modifier onlyOwner { if (msg.sender == owner) _ ; }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function kill() public {\r\n        if (msg.sender == owner) {\r\n            selfdestruct(owner);\r\n        }\r\n    }\r\n}\r\n/*\r\n * This contract holds all sold tickets for an event. Tickets are\r\n * created on the fly, identified by an id. Owners are identified by\r\n * an address.\r\n *\r\n * The system currently does not support\r\n * - privileges\r\n * - returning tickets\r\n * - execution of tickets\r\n */\r\n\r\ncontract GETEventContract is owned {\r\n    using SafeERC20 for ERC20Basic;\r\n    event TicketTransfered(address indexed from, address indexed to, uint256 ticketid);\r\n\r\n    // all sold / owned tickets in the system\r\n    mapping (uint256 => address) public ticketOwner;\r\n\r\n    event GETUnstaked(uint256 amount);\r\n\r\n    function transferTicket(address _receiver, uint256 _ticketid) onlyOwner public {\r\n        /*\r\n         * Transfer a specific ticket to a new owner, creating it\r\n         * on the fly if necessary\r\n         */\r\n        ticketOwner[_ticketid] = _receiver;\r\n    }\r\n\r\n    function unstakeGET(ERC20Basic _token) public onlyOwner {\r\n        uint256 currentGETBalance = _token.balanceOf(address(this));\r\n        _token.safeTransfer(owner, currentGETBalance);\r\n        emit GETUnstaked(currentGETBalance);\r\n    } \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_ticketid\",\"type\":\"uint256\"}],\"name\":\"transferTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unstakeGET\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ticketid\",\"type\":\"uint256\"}],\"name\":\"TicketTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GETUnstaked\",\"type\":\"event\"}]","ContractName":"GETEventContract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://46397a3f0f86310f7056ca85cfefca5efd99044cbb13c637dcf492450785e731"}]}