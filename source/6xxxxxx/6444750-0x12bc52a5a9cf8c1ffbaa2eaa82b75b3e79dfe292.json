{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Adaptor to convert MakerDAO's \"pip\" price feed into BokkyPooBah's Pricefeed\r\n//\r\n// Used to convert MakerDAO ETH/USD pricefeed on the Ethereum mainnet at\r\n//   https://etherscan.io/address/0x729D19f657BD0614b4985Cf1D82531c67569197B\r\n// to be a slightly more useable form\r\n//\r\n// Deployed to: 0x12bc52A5a9cF8c1FfBAA2eAA82b75B3E79DfE292\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2018. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// PriceFeed Interface - _live is true if the rate is valid, false if invalid\r\n// ----------------------------------------------------------------------------\r\ncontract PriceFeedInterface {\r\n    function getRate() public view returns (uint _rate, bool _live);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// See https://github.com/bokkypoobah/MakerDAOSaiContractAudit/tree/master/audit#pip-and-pep-price-feeds\r\n// ----------------------------------------------------------------------------\r\ncontract MakerDAOPriceFeedInterface {\r\n    function peek() public view returns (bytes32 _value, bool _hasValue);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Pricefeed with interface compatible with MakerDAO's \"pip\" PriceFeed\r\n// ----------------------------------------------------------------------------\r\ncontract MakerDAOPriceFeedAdaptor is PriceFeedInterface {\r\n    MakerDAOPriceFeedInterface public makerDAOPriceFeed;\r\n\r\n    constructor(address _makerDAOPriceFeed) public {\r\n        makerDAOPriceFeed = MakerDAOPriceFeedInterface(_makerDAOPriceFeed);\r\n    }\r\n    function getRate() public view returns (uint _rate, bool _live) {\r\n        bytes32 value;\r\n        (value, _live) = makerDAOPriceFeed.peek();\r\n        _rate = uint(value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"makerDAOPriceFeed\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_live\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_makerDAOPriceFeed\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"MakerDAOPriceFeedAdaptor","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000729d19f657bd0614b4985cf1d82531c67569197b","Library":"","SwarmSource":"bzzr://028cbe24a14499ebea744dec82e0979de2bc85b7a567e11206f51371ea68dcb1"}]}