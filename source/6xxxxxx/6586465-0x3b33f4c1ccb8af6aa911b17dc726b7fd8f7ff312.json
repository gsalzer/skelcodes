{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() internal {\r\n    _owner = msg.sender;\r\n    emit OwnershipTransferred(address(0), _owner);\r\n  }\r\n\r\n  /**\r\n   * @return the address of the owner.\r\n   */\r\n  function owner() public view returns(address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(isOwner());\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @return true if `msg.sender` is the owner of the contract.\r\n   */\r\n  function isOwner() public view returns(bool) {\r\n    return msg.sender == _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract StrikersBaseInterface {\r\n\r\n  struct Card {\r\n    uint32 mintTime;\r\n    uint8 checklistId;\r\n    uint16 serialNumber;\r\n  }\r\n\r\n  Card[] public cards;\r\n}\r\n\r\ncontract StrikersMetadataIPFS is Ownable {\r\n\r\n  string public ipfsGateway;\r\n  StrikersBaseInterface public strikersBaseContract;\r\n\r\n  mapping(uint256 => string) internal starredCardURIs;\r\n  mapping(uint8 => string) internal checklistIdURIs;\r\n\r\n  constructor(string _ipfsGateway, address _strikersBaseAddress) public {\r\n    ipfsGateway = _ipfsGateway;\r\n    strikersBaseContract = StrikersBaseInterface(_strikersBaseAddress);\r\n    setupStarredCardURIs();\r\n  }\r\n\r\n  function setupStarredCardURIs() internal {\r\n    // ONE STAR HAZARD\r\n    starredCardURIs[1778] = \"Qmd5DBGsaeScxxqrB7Xmi3abK24zqx4DnwY6CQRGBZSdqb\";\r\n    starredCardURIs[8151] = \"Qmd5DBGsaeScxxqrB7Xmi3abK24zqx4DnwY6CQRGBZSdqb\";\r\n\r\n    // ONE STAR MBAPPE\r\n    starredCardURIs[882] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[2552] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[3043] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[4019] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[4460] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[5303] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[7109] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n    starredCardURIs[8494] = \"QmPzwhKZyhdie48xT6nFcW8CMkD9kz56NxbVM7RZsoMJEc\";\r\n\r\n    // ONE STAR GRIEZMANN\r\n    starredCardURIs[3448] = \"Qmafj7ShBgibLoS8yrYBBD7KphwPZPCRq5jRtr6opz8NvV\";\r\n    starredCardURIs[4455] = \"Qmafj7ShBgibLoS8yrYBBD7KphwPZPCRq5jRtr6opz8NvV\";\r\n    starredCardURIs[7366] = \"Qmafj7ShBgibLoS8yrYBBD7KphwPZPCRq5jRtr6opz8NvV\";\r\n    starredCardURIs[7619] = \"Qmafj7ShBgibLoS8yrYBBD7KphwPZPCRq5jRtr6opz8NvV\";\r\n\r\n    // ONE STAR POGBA\r\n    starredCardURIs[5233] = \"QmUXetpbGfBy2JuLowT9dtrcdQJ9GgcixgyddXWXo9EjD5\";\r\n    starredCardURIs[8089] = \"QmUXetpbGfBy2JuLowT9dtrcdQJ9GgcixgyddXWXo9EjD5\";\r\n\r\n    // ONE STAR COURTOIS\r\n    starredCardURIs[3224] = \"QmfADUDxupVBQPbNR5yo5cRFKBHGQmSpMXnxtYTkTTZFfw\";\r\n\r\n    // ONE STAR LLORIS\r\n    starredCardURIs[7357] = \"QmQvjcGXq2Kb2q2quXgrk6y7zr68cXQwre54vfiTNRM5xu\";\r\n    starredCardURIs[7407] = \"QmQvjcGXq2Kb2q2quXgrk6y7zr68cXQwre54vfiTNRM5xu\";\r\n    starredCardURIs[7697] = \"QmQvjcGXq2Kb2q2quXgrk6y7zr68cXQwre54vfiTNRM5xu\";\r\n\r\n    // ONE STAR ALLI\r\n    starredCardURIs[736] = \"QmawJzdsP9EaxVxcQMkaHhKNPgesigiLdFvokUzh9ZzqF7\";\r\n    starredCardURIs[5487] = \"QmawJzdsP9EaxVxcQMkaHhKNPgesigiLdFvokUzh9ZzqF7\";\r\n    starredCardURIs[7421] = \"QmawJzdsP9EaxVxcQMkaHhKNPgesigiLdFvokUzh9ZzqF7\";\r\n\r\n    // ONE STAR VARANE\r\n    starredCardURIs[2867] = \"QmdFxtcfi8qwww4NniFbMJuU7tTR4EDj79uLseVSZpSohJ\";\r\n    starredCardURIs[6252] = \"QmdFxtcfi8qwww4NniFbMJuU7tTR4EDj79uLseVSZpSohJ\";\r\n\r\n    // ONE STAR MANDZUKIC\r\n    starredCardURIs[6250] = \"QmTYT3im5aVjCX8jVBDer8YJedD4Z5KEnJtbVPr32eEN3e\";\r\n\r\n    // TWO STAR MANDZUKIC\r\n    starredCardURIs[7794] = \"Qmb89ETw9b1MRqRySxU8DxuQFBptiF1uN7wgkesWMwxAgF\";\r\n  }\r\n\r\n  function updateIpfsGateway(string _ipfsGateway) external onlyOwner {\r\n    ipfsGateway = _ipfsGateway;\r\n  }\r\n\r\n  function updateStarredCardURI(uint256 _tokenId, string _uri) external onlyOwner {\r\n    starredCardURIs[_tokenId] = _uri;\r\n  }\r\n\r\n  function checklistIdURI(uint8 _checklistId, string _uri) external onlyOwner {\r\n    checklistIdURIs[_checklistId] = _uri;\r\n  }\r\n\r\n  function tokenURI(uint256 _tokenId) external view returns (string) {\r\n    string memory starredCardURI = starredCardURIs[_tokenId];\r\n    if (bytes(starredCardURI).length > 0) {\r\n      return strConcat(ipfsGateway, starredCardURI);\r\n    }\r\n\r\n    uint8 checklistId;\r\n    (,checklistId,) = strikersBaseContract.cards(_tokenId);\r\n    return strConcat(ipfsGateway, checklistIdURIs[checklistId]);\r\n  }\r\n\r\n  function strConcat(string _a, string _b) internal pure returns (string) {\r\n    bytes memory _ba = bytes(_a);\r\n    bytes memory _bb = bytes(_b);\r\n    string memory ab = new string(_ba.length + _bb.length);\r\n    bytes memory bab = bytes(ab);\r\n    uint k = 0;\r\n    for (uint i = 0; i < _ba.length; i++) bab[k++] = _ba[i];\r\n    for (i = 0; i < _bb.length; i++) bab[k++] = _bb[i];\r\n    return string(bab);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ipfsGateway\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsGateway\",\"type\":\"string\"}],\"name\":\"updateIpfsGateway\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_checklistId\",\"type\":\"uint8\"},{\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"checklistIdURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"strikersBaseContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"updateStarredCardURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ipfsGateway\",\"type\":\"string\"},{\"name\":\"_strikersBaseAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"StrikersMetadataIPFS","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000dcaad9fd9a74144d226dbf94ce6162ca9f09ed7e000000000000000000000000000000000000000000000000000000000000001c68747470733a2f2f697066732e696e667572612e696f2f697066732f00000000","Library":"","SwarmSource":"bzzr://a419941ed475a266b77bc012ccbc643b9a5dae99bee77c3a3045a5c92687300c"}]}