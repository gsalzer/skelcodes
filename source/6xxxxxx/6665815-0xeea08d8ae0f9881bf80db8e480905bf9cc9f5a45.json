{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n/*\r\n * Standard token contract with ability to hold some amount on some balances before single initially specified deadline\r\n * Which is useful for example for holding unsold tokens for a year for next step of project management\r\n *\r\n * Implements initial supply and does not allow to supply more tokens later\r\n *\r\n */ \r\n\r\ncontract SBCS {\r\n\t/* Public variables of the token */\t\r\n\tstring public constant name = \"SBCS token\";\r\n\tstring public constant symbol = \"SBCS\";\t\r\n\tuint8 public constant decimals = 8;\r\n\taddress public owner;\r\n\tuint256 public totalSupply_;\r\n\r\n\r\n\t/* This creates an array with all balances */\r\n\tmapping (address => uint256) public balances;\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\t/* This generates a public event on the blockchain that will notify clients */\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\t\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\t\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\t/* Initializes contract with initial supply tokens to the creator of the contract */\r\n\tfunction SBCS() public {\r\n\t\towner= 0x47740D17F26A4e04bBA72A9a375774c581E1218E;\r\n\t\tbalances[owner] = 13767750500000000;\t\t\t\t\t\t\t// Give the creator all initial tokens\r\n\t\ttotalSupply_ = 13767750500000000;\t\t\t\t\t\t\t\t// Update total supply\r\n\t}\r\n    /*This returns total number of tokens in existence*/\r\n\tfunction totalSupply() public view returns (uint256) {\r\n    \treturn totalSupply_;\r\n  \t}\r\n\t\r\n\t/* Send coins */\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n    \trequire(balances[msg.sender] >=_value);\r\n\t\t\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\trequire(balances[_to] + _value >= balances[_to]);\r\n\r\n\t\tbalances[msg.sender] -= _value;\t\t\t\t\t \r\n\t\tbalances[_to] += _value;\t\t\t\t\t\r\n\t\tTransfer(msg.sender, _to, _value);\t\t\t\t  \r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*This pulls the allowed tokens amount from address to another*/\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\t\t\t\t\t\t  \r\n\t\trequire(_value <= balances[_from]);\t\t\t\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\trequire(balances[_to] + _value >= balances[_to]);\t\t\r\n\t\trequire(allowed[_from][msg.sender] >= _value);\t\t\t// Check allowance\r\n\r\n\t\tbalances[_from] -= _value;\t\t\t\t\t\t   \t\t\t// Subtract from the sender\r\n\t\tbalances[_to] += _value;\t\t\t\t\t\t\t \t\t// Add the same to the recipient\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n    \treturn balances[_owner];\r\n\t}\r\n\r\n\t/* Allow another contract to spend some tokens in your behalf. \r\n\tChanging an allowance brings the risk of double spending, when both old and new values will be used */\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n    \tallowed[msg.sender][_spender] = _value;\r\n    \tApproval(msg.sender, _spender, _value);\t\t\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\t/* This returns the amount of tokens that an owner allowed to a spender. */\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\t/* This function is used to increase the amount of tokens allowed to spend by spender.*/\r\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    \trequire(allowed[msg.sender][_spender] + _addedValue >= allowed[msg.sender][_spender]);\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender] + _addedValue;\r\n    \tApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    \treturn true;\r\n  \t}\r\n\r\n\t/* This function is used to decrease the amount of tokens allowed to spend by spender.*/\r\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n\t\tuint oldValue = allowed[msg.sender][_spender];\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} \r\n\t\telse {\r\n\t\t\tallowed[msg.sender][_spender] = oldValue - _subtractedValue;\r\n\t\t}\r\n\t\tApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n  \t}\r\n\r\n\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n    \towner = newOwner;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SBCS","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c2919d8a189466283776c576d0922d7207edb8b639841b1e08e76c9bff4532d8"}]}