{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tif (a == 0) {\r\n      \t\treturn 0;\r\n    \t}\r\n\r\n    \tc = a * b;\r\n    \tassert(c / a == b);\r\n    \treturn c;\r\n  \t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    \treturn a / b;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    \tassert(b <= a);\r\n    \treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    \tc = a + b;\r\n    \tassert(c >= a);\r\n    \treturn c;\r\n\t}\r\n}\r\n\r\ncontract ERC20Basic {\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address who) public view returns (uint256);\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender) public view returns (uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\tusing SafeMath for uint256;\r\n\r\n\tmapping(address => uint256) balances;\r\n\r\n\tuint256 totalSupply_;\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n    \treturn totalSupply_;\r\n  \t}\r\n\r\n  \tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n    \trequire(_to != address(0));\r\n    \trequire(_value <= balances[msg.sender]);\r\n\r\n    \tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n    \tbalances[_to] = balances[_to].add(_value);\r\n    \temit Transfer(msg.sender, _to, _value);\r\n    \treturn true;\r\n\t}\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\t\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n  \tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n    \tallowed[msg.sender][_spender] = _value;\r\n    \temit Approval(msg.sender, _spender, _value);\r\n    \treturn true;\r\n  \t}\r\n\r\n  \tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n    \treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    \tallowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n  \tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    \tuint oldValue = allowed[msg.sender][_spender];\r\n    \tif (_subtractedValue > oldValue) {\r\n      \t\tallowed[msg.sender][_spender] = 0;\r\n    \t} else {\r\n      \t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    \t}\r\n    \temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    \treturn true;\r\n  \t}\r\n  \r\n}\r\n\r\n\r\ncontract Ownable {\r\n  \taddress public owner;\r\n\r\n  \tevent OwnershipRenounced(address indexed previousOwner);\r\n  \tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  \tconstructor() public {\r\n    \towner = msg.sender;\r\n  \t}\r\n\r\n  \tmodifier onlyOwner() {\r\n    \trequire(msg.sender == owner);\r\n    \t_;\r\n  \t}\r\n\r\n  \tfunction renounceOwnership() public onlyOwner {\r\n    \temit OwnershipRenounced(owner);\r\n    \towner = address(0);\r\n  \t}\r\n\r\n  \tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n    \t_transferOwnership(_newOwner);\r\n  \t}\r\n\r\n  \tfunction _transferOwnership(address _newOwner) internal {\r\n    \trequire(_newOwner != address(0));\r\n    \temit OwnershipTransferred(owner, _newOwner);\r\n    \towner = _newOwner;\r\n  \t}\r\n}\r\n\r\n\r\ncontract PremiumToken is StandardToken, Ownable {\r\n\r\n\t// Pausable\r\n\t\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() onlyOwner whenNotPaused public {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner whenPaused public {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n\t\r\n\t\r\n\t// Burnable\r\n\t\r\n\tevent Burn(address indexed burner, uint256 value);\r\n\r\n\tfunction burn(uint256 _value) public whenNotPaused {\r\n\t\t_burn(msg.sender, _value);\r\n\t}\r\n\r\n\tfunction _burn(address _who, uint256 _value) internal {\r\n\t\trequire(_value <= balances[_who]);\r\n\r\n\t\tbalances[_who] = balances[_who].sub(_value);\r\n\t\ttotalSupply_ = totalSupply_.sub(_value);\r\n\t\temit Burn(_who, _value);\r\n\t\temit Transfer(_who, address(0), _value);\r\n\t}\r\n\t\r\n\t\r\n\t// Freezable\r\n\t\r\n\tmapping(address=>bool) public freezeIn;\r\n\tmapping(address=>bool) public freezeOut;\r\n\t\r\n\tevent FreezeIn(address[] indexed from, bool value);\r\n\tevent FreezeOut(address[] indexed from, bool value);\r\n\t\r\n\tfunction setFreezeIn(address[] addrs, bool value) public onlyOwner {\r\n\t\tfor (uint i=0; i<addrs.length; i++) {\r\n\t\t\tfreezeIn[addrs[i]]=value;\r\n\t\t}\r\n\r\n\t\temit FreezeIn(addrs, value);\r\n\t}\r\n\r\n\tfunction setFreezeOut(address[] addrs, bool value) public onlyOwner {\r\n\t\tfor (uint i=0; i<addrs.length; i++) {\r\n\t\t\tfreezeOut[addrs[i]]=value;\r\n\t\t}\r\n\r\n\t\temit FreezeOut(addrs, value);\r\n\t}\r\n\t\r\n\t\r\n\t// Lockable\r\n\t\r\n\tmapping(address=>uint) public lock;\r\n\t\r\n\tevent Lock(address[] indexed addrs, uint[] times);\r\n\t\r\n\tfunction setLock(address[] addrs, uint[] times) public onlyOwner {\r\n\t\trequire(addrs.length==times.length);\r\n\r\n\t\tfor (uint i=0; i<addrs.length; i++) {\r\n\t\t\tlock[addrs[i]]=times[i];\r\n\t\t}\r\n\t\t\r\n\t\temit Lock(addrs, times);\r\n\t}\r\n\t\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n\t\trequire(now>=lock[msg.sender]);\r\n\t\trequire(!freezeIn[_to]);\r\n\t\trequire(!freezeOut[msg.sender]);\r\n\t\t\r\n    \treturn super.transfer(_to, _value);\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n\t\trequire(now>=lock[_from]);\r\n\t\trequire(!freezeIn[_to]);\r\n\t\trequire(!freezeOut[_from]);\r\n\t\t\r\n\t\treturn super.transferFrom(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\n    \treturn super.approve(_spender, _value);\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\r\n    \treturn super.increaseApproval(_spender, _addedValue);\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\r\n    \treturn super.decreaseApproval(_spender, _subtractedValue);\r\n\t}\r\n\t\r\n\t// Mintable\r\n\tevent Mint(address indexed to, uint256 amount);\r\n\tevent MintFinished();\r\n\r\n\tbool public mintingFinished = false;\r\n\r\n\tmodifier canMint() {\r\n    \trequire(!mintingFinished);\r\n    \t_;\r\n\t}\r\n\r\n\tmodifier hasMintPermission() {\r\n    \trequire(msg.sender == owner);\r\n    \t_;\r\n\t}\r\n\r\n\tfunction mint(address _to, uint256 _amount) hasMintPermission canMint public returns (bool) {\r\n\t\ttotalSupply_ = totalSupply_.add(_amount);\r\n\t\tbalances[_to] = balances[_to].add(_amount);\r\n\t\temit Mint(_to, _amount);\r\n\t\temit Transfer(address(0), _to, _amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction finishMinting() onlyOwner canMint public returns (bool) {\r\n\t\tmintingFinished = true;\r\n \t\temit MintFinished();\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\n\r\ncontract Token is PremiumToken {\r\n\r\n\tstring public name;\r\n\tstring public symbol; \r\n\tuint8 public decimals; \r\n\r\n  \tconstructor (string _name, string _symbol, uint8 _decimals, uint256 _total) public {\r\n\t\tname = _name;\r\n\t\tsymbol = _symbol;\r\n\t\tdecimals = _decimals;\r\n\t\ttotalSupply_ = _total.mul(10 ** uint256(_decimals));\r\n\t\r\n    \tbalances[msg.sender] = totalSupply_;\r\n\t\r\n    \temit Transfer(address(0), msg.sender, totalSupply_);\r\n  \t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"name\":\"setLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFreezeOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeIn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFreezeIn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOut\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"FreezeIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"FreezeOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addrs\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"times\",\"type\":\"uint256[]\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000000125072656d69756d20546f6b656e2054657374000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035052540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://bf39a7c0fefb425f0133996e57869438971b2a741ce05a6d19ef256bf9582ae4"}]}