{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract Erabet {\r\n   address public owner;\r\n   uint256 public minimumBet = 0;\r\n   uint256 public totalBet = 0;\r\n   uint256 public maxAmountOfBets = 1000;\r\n   uint256 public numberOfBets = 0;\r\n   uint256 public numberWinner=0;\r\n   address[] public players;\r\n   uint256 winnerEtherAmount=0 ether;\r\n   uint256 winnerteambet=0;\r\n   uint256 factor=0;\r\n   uint256 teambet=0;\r\n\r\n\r\n    struct Player\r\n\t{\r\n      uint256 amountBet;\r\n      uint256 numberSelected;\r\n    }\r\n\r\n\r\n/*numberSelected can be only 3.\r\n1 - A team wins toss\r\n2 - B team wins toss\r\n\r\n*/\r\n    mapping(address => Player) public playerInfo;\r\n\r\n    function Erabet() public\r\n\t{\r\n      owner = msg.sender;\r\n    }\r\n\r\n    function transfer_ownership(address o) public{\r\n        require(msg.sender==owner); \r\n         owner = o;\r\n    }\r\n\r\n\r\n   function checkPlayerExists(address player) public constant returns(bool)\r\n   {\r\n      for(uint256 i = 0; i < players.length; i++)\r\n\t  {\r\n           if(players[i] == player) return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    function bet(uint256 numberSelected) public payable\r\n\t{\r\n      require(!checkPlayerExists(msg.sender));\r\n      require(msg.value >= minimumBet);\r\n      playerInfo[msg.sender].amountBet = msg.value;\r\n      playerInfo[msg.sender].numberSelected = numberSelected;\r\n      numberOfBets++;\r\n      players.push(msg.sender);\r\n      totalBet = totalBet + msg.value;\r\n      address(this).transfer(msg.value);\r\n    }\r\n\r\n   function() public payable {}                                          /*fallback function*/\r\n\r\n\r\n\r\n    function multiply_factor() public constant returns(uint)             /*used to check value of factor, not of use can be removed*/\r\n\t{\r\n        return factor;\r\n    }\r\n\r\n\r\n\r\n    function totalbal() public constant returns(uint256){                /*used to check total balance of in contract, not of use can be removed*/\r\n        return address(this).balance;\r\n    }\r\n\r\n\r\n\r\n\tfunction totalteambet(uint256 num)view public returns(uint256)       /*function to count totalbet placed in a team */\r\n\t{\r\n\tfor(uint256 i = 0; i < players.length; i++)\r\n\t  {\r\n            address playerAddress = players[i];\r\n              if(playerInfo[playerAddress].numberSelected == num)\r\n\t\t\t {  teambet =teambet + playerInfo[playerAddress].amountBet;\r\n\r\n             }\r\n\r\n      }\r\n\t return teambet;\r\n\t}\r\n\r\n\r\n\r\n    function distributePrizes(uint256 temp) public payable\r\n\t{\r\n     require(msg.sender == owner);\r\n     address[8] memory winners;                                          /*This is the count for the array of winners*/\r\n     numberWinner = temp;\r\n     /*We have to create a temporary in memory array with fixed size*/\r\n     uint256 count = 0;\r\n     for(uint256 i = 0; i < players.length; i++)\r\n\t  {\r\n            address playerAddress = players[i];\r\n              if(playerInfo[playerAddress].numberSelected == numberWinner)\r\n\t\t\t {   winnerteambet= winnerteambet + playerInfo[playerAddress].amountBet;\r\n                 winners[count] = playerAddress;\r\n                 count++;\r\n             }\r\n\r\n      }\r\n      uint256 dev = address(this).balance/50;\r\n      owner.transfer(dev);\r\n      uint256 _numerator  = address(this).balance * (10 ** 18);\r\n      factor =  ((_numerator / winnerteambet) + 5) / 10;\r\n      for(uint256 j = 0; j < count; j++)\r\n\t  {\r\n          if(winners[j] != address(0))                                  /* Check that the address in this fixed array is not empty */\r\n           {\r\n            address temp_player=winners[j];\r\n            uint256 betvalue= playerInfo[temp_player].amountBet;\r\n            winnerEtherAmount=betvalue*factor;\r\n            uint256 money = (winnerEtherAmount)/(10 ** 17);\r\n            winners[j].transfer(money);\r\n           }\r\n      }\r\n      //    delete playerInfo[playerAddress];                            /* Delete wwec all the players */\r\n    }\r\n\r\n\t                                                                   /*Delete playerinfo after bet is over*/\r\n\tfunction del()public\r\n    {\r\n     require(msg.sender == owner);\r\n     for(uint256 i = 0; i < players.length; i++)\r\n\t  {\r\n\t      address playerAddress = players[i];\r\n\t      delete playerInfo[playerAddress];                            /* Delete wwec all the players */\r\n\r\n\t  }\r\n    }\r\n\r\n\r\n\t\t\t                                                             /*refund*/\r\n\tfunction ref() public payable\r\n\t{\r\n\t require(msg.sender == owner);\r\n     //uint256 dev = this.balance/50;\r\n     //owner.transfer(dev);\r\n\t for(uint256 i = 0; i < players.length; i++)\r\n\t  {\r\n            address playerAddress = players[i];\r\n            uint256 refundamt = playerInfo[playerAddress].amountBet;\r\n\t\t\tplayers[i].transfer(refundamt);\r\n\r\n\r\n      }\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"ref\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfBets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"checkPlayerExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerInfo\",\"outputs\":[{\"name\":\"amountBet\",\"type\":\"uint256\"},{\"name\":\"numberSelected\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"temp\",\"type\":\"uint256\"}],\"name\":\"distributePrizes\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"numberSelected\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiply_factor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"del\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"totalteambet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAmountOfBets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalbal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"o\",\"type\":\"address\"}],\"name\":\"transfer_ownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Erabet","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9851b3291a8f1ae827acfdeb1f11d3de291747f66149445728e0ee318f472ce7"}]}