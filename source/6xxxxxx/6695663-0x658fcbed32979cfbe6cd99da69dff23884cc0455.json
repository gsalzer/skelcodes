{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract CompanyToken {\r\n\r\n    /* variables */\r\n    string public name; /* ERC20 Name */\r\n    string public symbol; /* ERC20 Symbol */\r\n    uint8 public decimals; /* ERC20 Decimals */\r\n    uint256 public totalSupply; /* ERC20 total Supply */\r\n    address public owner; /* Owner address */\r\n    uint256 public rate; /* Token Exchange Rate in Euro */\r\n\tbool public allow_buy; /* allow token payed with eth */\r\n    mapping(address => uint256) balances; /* Token Balances */\r\n\r\n    /* events */    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Mint(address indexed owner, uint256 value);\r\n    event SetOwner(address indexed owner);\r\n    event SetAllowBuy(bool allow_buy);\r\n    event SetRate(uint256 rate);\r\n    event CreateToken(address indexed sender, uint256 value);\r\n    \r\n    /* variables on contract create */\r\n    constructor() public {\r\n        totalSupply = 2500000; /* decimals * real value */\r\n        name = \"BSOnders\";\r\n        symbol = \"BSO\";\r\n        decimals = 2;\r\n        rate = 190;\r\n        balances[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n        allow_buy = false;\r\n    }\r\n    \r\n    /* modifier */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tassert(msg.data.length >= size + 4);\r\n\t\t_;\r\n\t}\r\n\t\r\n    /* default ERC20 functions */\r\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) private returns (bool success) {\r\n        require(balances[_from] >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }    \r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    /* set functions */ \r\n    function setRate(uint256 _value) public onlyOwner returns(bool success) {\r\n        rate = _value;\r\n        emit SetRate(_value);\r\n        return true;\r\n    }        \r\n\r\n    function setOwner(address _owner) public onlyOwner returns (bool success) {\r\n        owner = _owner;\r\n        emit SetOwner(_owner);\r\n        return true;\r\n    }    \r\n\r\n    function setAllowBuy(bool _value) public onlyOwner returns(bool success) {\r\n        allow_buy = _value;\r\n        emit SetAllowBuy(_value);\r\n        return true;\r\n    }\r\n\r\n    /* special functions */\r\n    function distribute(address[] recipients, uint256[] _value) public onlyOwner returns (bool success) {\r\n        for(uint i = 0; i < recipients.length; i++) {\r\n            transferFrom(owner, recipients[i], _value[i]);\r\n        }\r\n        return true;\r\n    }    \r\n   \r\n    function mint(uint256 _value) private returns (bool success) {\r\n        require(_value > 0);\r\n        balances[msg.sender] = balances[msg.sender] + _value;\r\n        totalSupply = totalSupply + _value;\r\n        emit Mint(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    /*\r\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public onlyOwner returns (bool success) {\r\n        require(balances[_from] >= _value);\r\n        balances[_from] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }    \r\n    */\r\n  \r\n    /* private functions */\r\n    function createToken(uint256 _value) private returns (bool success) {\r\n        // require(_value > 0);\r\n        // uint256 tokens = rate * _value * 10 ** uint(decimals) / (1 ether);\r\n        uint256 tokens = rate * _value * 100 / (1 ether);\r\n        mint(tokens);\r\n        emit CreateToken(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n     /* @notice Will receive any eth sent to the contract */\r\n    function() external payable {\r\n        if(allow_buy) {\r\n            createToken(msg.value);\r\n        } else {\r\n            revert(); // Reject any accidental Ether transfer\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allow_buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAllowBuy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"allow_buy\",\"type\":\"bool\"}],\"name\":\"SetAllowBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"SetRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateToken\",\"type\":\"event\"}]","ContractName":"CompanyToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fcb42a4dcef71c1ed2c714a14a9306e16e247328f68b2641a603970f6460292b"}]}