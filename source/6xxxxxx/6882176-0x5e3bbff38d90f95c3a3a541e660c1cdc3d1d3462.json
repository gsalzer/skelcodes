{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract WWGPreLaunch {\r\n    \r\n    /**\r\n     * \r\n     * WORLD WAR GOO (BETA LAUNCHING SOONISH)\r\n     * \r\n     * PRELAUNCH EVENT CONTRACT FOR LIMITED CLANS & PREMIUM FACTORIES!\r\n     *\r\n     * FOR MORE DETAILS VISIT: \r\n     * \r\n     * https://ethergoo.io\r\n     * https://discord.gg/ajsz8tn\r\n     * \r\n     */\r\n    \r\n    uint256 constant SUPPORTER_PACK_PRICE = 0.1 ether;\r\n    uint256 constant CRYPTO_CLAN_PRICE = 1 ether;\r\n    uint256 constant PREMIUM_FACTORY_PRICE = 0.5 ether;\r\n    uint256 constant GAS_LIMIT = 0.05 szabo; // 50 gwei\r\n    \r\n    uint256 public startTime = 1544832000; // Friday evening (00:00 UTC)\r\n    \r\n    uint256 clanIdStart; // Can release in waves\r\n    uint256 clanIdEnd;\r\n    uint256 factoryIdStart;\r\n    uint256 factoryIdEnd;\r\n    \r\n    address owner;\r\n    address holdee;\r\n    \r\n    mapping(address => bool) public supporters; // Public to grant access to beta & lootcrate etc.\r\n    mapping(uint256 => address) public factoryOwner; // Public to credit once minigame launched.\r\n    mapping(address => bool) private boughtFactory; // Limit 1 per player\r\n\r\n    WWGClanCoupon clanCoupons = WWGClanCoupon(0xd73b27ea8e7dd2f538332706a98d910d859c4f17); // Redeemable for clan on launch\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        holdee = address(0xf6fF7aD69aF2F8655Ff1863BEc350093880e03E7);\r\n    }\r\n    \r\n    function buySupporterPack() payable external {\r\n        require(msg.value >= SUPPORTER_PACK_PRICE);\r\n        require(now >= startTime);\r\n        require(!supporters[msg.sender]); // Once only\r\n        \r\n        supporters[msg.sender] = true;\r\n        owner.transfer(SUPPORTER_PACK_PRICE);\r\n        \r\n        // Refund extra sent\r\n        if (msg.value > SUPPORTER_PACK_PRICE) {\r\n            msg.sender.transfer(msg.value - SUPPORTER_PACK_PRICE);\r\n        }\r\n    }\r\n    \r\n    function buyCryptoClan(uint256 clanId) payable external {\r\n        require(msg.value >= CRYPTO_CLAN_PRICE);\r\n        require(tx.gasprice <= GAS_LIMIT);\r\n        require(msg.sender == tx.origin);\r\n        require(now >= startTime);\r\n        require(validClanId(clanId));\r\n       \r\n        clanCoupons.mintClan(clanId, msg.sender);\r\n        holdee.transfer(CRYPTO_CLAN_PRICE);\r\n        \r\n        // Refund extra sent\r\n        if (msg.value > CRYPTO_CLAN_PRICE) {\r\n            msg.sender.transfer(msg.value - CRYPTO_CLAN_PRICE);\r\n        }\r\n    }\r\n    \r\n    function buyPremiumFactory(uint256 factoryId) payable external {\r\n        require(msg.value >= PREMIUM_FACTORY_PRICE);\r\n        require(tx.gasprice <= GAS_LIMIT);\r\n        require(msg.sender == tx.origin);\r\n        require(now >= startTime);\r\n        require(factoryOwner[factoryId] == address(0));\r\n        require(!boughtFactory[msg.sender]);\r\n        require(validFactoryId(factoryId));\r\n        \r\n        factoryOwner[factoryId] = msg.sender;\r\n        boughtFactory[msg.sender] = true;\r\n        holdee.transfer(PREMIUM_FACTORY_PRICE);\r\n        \r\n         // Refund extra sent\r\n        if (msg.value > PREMIUM_FACTORY_PRICE) {\r\n            msg.sender.transfer(msg.value - PREMIUM_FACTORY_PRICE);\r\n        }\r\n    }\r\n    \r\n    function validClanId(uint256 id) private view returns (bool) {\r\n        return (id > 0 && clanIdStart <= id && id <= clanIdEnd);\r\n    }\r\n    \r\n    function validFactoryId(uint256 id) private view returns (bool) {\r\n        return (id > 0 && factoryIdStart <= id && id <= factoryIdEnd);\r\n    }\r\n    \r\n    function getClanOwners() public view returns (address[]) {\r\n        if (clanIdEnd - clanIdStart == 0) {\r\n            return;\r\n        }\r\n        \r\n        uint256 size = 1 + clanIdEnd - clanIdStart;\r\n        address[] memory clanOwners = new address[](size);\r\n\r\n        uint256 clanId = clanIdStart;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            clanOwners[i] = clanCoupons.ownerOf(clanId);\r\n            clanId++;\r\n        }\r\n        return clanOwners;\r\n    }\r\n    \r\n    function getFactoryOwners() public view returns (address[]) {\r\n        if (factoryIdEnd - factoryIdStart == 0) {\r\n            return;\r\n        }\r\n        \r\n        uint256 size = 1 + factoryIdEnd - factoryIdStart;\r\n        address[] memory factoryOwners = new address[](size);\r\n\r\n        uint256 factoryId = factoryIdStart;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            factoryOwners[i] = address(factoryOwner[factoryId]);\r\n            factoryId++;\r\n        }\r\n        return factoryOwners;\r\n    }\r\n    \r\n    // Unlock the clans/factories, ready for timer\r\n    function setValidIds(uint256 clanStart, uint256 clanEnd, uint256 factoryStart, uint256 factoryEnd) external {\r\n        require(msg.sender == owner);\r\n        clanIdStart = clanStart;\r\n        clanIdEnd = clanEnd;\r\n        factoryIdStart = factoryStart;\r\n        factoryIdEnd = factoryEnd;\r\n    }\r\n\r\n    // Just incase\r\n    function delay(uint256 newTime) external {\r\n        require(msg.sender == owner);\r\n        require(newTime >= startTime);\r\n        startTime = newTime;\r\n    }\r\n}\r\n\r\ninterface WWGClanCoupon {\r\n    function mintClan(uint256 clanId, address clanOwner) external;\r\n    function ownerOf(uint256 clanId) external view returns (address);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"clanStart\",\"type\":\"uint256\"},{\"name\":\"clanEnd\",\"type\":\"uint256\"},{\"name\":\"factoryStart\",\"type\":\"uint256\"},{\"name\":\"factoryEnd\",\"type\":\"uint256\"}],\"name\":\"setValidIds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"factoryOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"factoryId\",\"type\":\"uint256\"}],\"name\":\"buyPremiumFactory\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"supporters\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buySupporterPack\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFactoryOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"buyCryptoClan\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClanOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"delay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"WWGPreLaunch","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3c0fcdaf86fbf12d6581bcf6e82b845a088ad38256ee22797562382adb953043"}]}