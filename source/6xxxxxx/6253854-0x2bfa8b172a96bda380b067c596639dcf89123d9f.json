{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Lottery {\r\n\r\n    uint public lotteryStart;\r\n    uint public ticketPrice;\r\n    uint public ticketsAvailable;\r\n\r\n    mapping(uint => address) public owner;\r\n\r\n    modifier lotteryComplete {require(block.timestamp >= (lotteryStart + 7 days), \"lottery has not completed\"); _;}\r\n\r\n    constructor() public {\r\n        lotteryStart = 0;\r\n    }\r\n\r\n    function newLottery() public {\r\n        if (lotteryStart != 0) {\r\n            require(block.timestamp >= (lotteryStart + 7 days), \"lottery has not completed\");\r\n        }\r\n\r\n        for (uint ticket = 0; ticket < ticketsAvailable; ticket++) {\r\n            owner[ticket] = address(0);\r\n        }\r\n\r\n        ticketsAvailable = 100;\r\n        ticketPrice = 10 finney;\r\n        lotteryStart = block.timestamp;\r\n    }\r\n\r\n    function purchaseTicket(uint ticket) public payable {\r\n        require(owner[ticket] == address(0), \"the ticket has been purchased\");                    // the ticket hasn't been purchased\r\n        require(msg.value == ticketPrice, \"sent an invalid ticket price\");                      // value sent is the ticket price\r\n\r\n        owner[ticket] = msg.sender;\r\n    }\r\n\r\n    function completeLottery() public lotteryComplete {\r\n        address winner = owner[block.number % ticketsAvailable];\r\n\r\n        if (winner != address(0)) {\r\n            address(this).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function getTicketOwner(uint ticket) public view returns(address) {\r\n        return owner[ticket];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ticketPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketsAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ticket\",\"type\":\"uint256\"}],\"name\":\"getTicketOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"newLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ticket\",\"type\":\"uint256\"}],\"name\":\"purchaseTicket\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotteryStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"completeLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Lottery","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://589e3197a7996ed42ce67560bbe63ee1c275cb977db2659959aa9ac9e4a0318d"}]}