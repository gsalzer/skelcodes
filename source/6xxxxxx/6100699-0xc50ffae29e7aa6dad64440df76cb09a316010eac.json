{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n  function balanceOf(address _owner) public returns (uint256); \r\n  function transfer(address to, uint256 tokens) public returns (bool);\r\n  function transferFrom(address from, address to, uint256 tokens) public returns(bool);\r\n}\r\n\r\ncontract TokenLiquidityMarket { \r\n    \r\n  using SafeMath for uint256;  \r\n\r\n  address public platform;\r\n  address public admin;\r\n  address public traded_token;\r\n  \r\n  uint256 public eth_seed_amount;\r\n  uint256 public traded_token_seed_amount;\r\n  uint256 public commission_ratio;\r\n  uint256 public eth_balance;\r\n  uint256 public traded_token_balance;\r\n\r\n  bool public eth_is_seeded;\r\n  bool public traded_token_is_seeded;\r\n  bool public trading_deactivated;\r\n  bool public admin_commission_activated;\r\n\r\n  modifier only_admin() {\r\n      require(msg.sender == admin);\r\n      _;\r\n  }\r\n  \r\n  modifier trading_activated() {\r\n      require(trading_deactivated == false);\r\n      _;\r\n  }\r\n  \r\n  function TokenLiquidityMarket(address _traded_token,uint256 _eth_seed_amount, uint256 _traded_token_seed_amount, uint256 _commission_ratio) public {\r\n    admin = tx.origin;\r\n    platform = msg.sender; \r\n    traded_token = _traded_token;\r\n    eth_seed_amount = _eth_seed_amount;\r\n    traded_token_seed_amount = _traded_token_seed_amount;\r\n    commission_ratio = _commission_ratio;\r\n  }\r\n\r\n  function change_admin(address _newAdmin) public only_admin() {\r\n    admin = _newAdmin;\r\n  }\r\n  \r\n  function withdraw_arbitrary_token(address _token, uint256 _amount) public only_admin() {\r\n      require(_token != traded_token);\r\n      require(Token(_token).transfer(admin, _amount));\r\n  }\r\n\r\n  function withdraw_excess_tokens() public only_admin() {\r\n    uint256 queried_traded_token_balance_ = Token(traded_token).balanceOf(this);\r\n    require(queried_traded_token_balance_ >= traded_token_balance);\r\n    uint256 excess_ = queried_traded_token_balance_.sub(traded_token_balance);\r\n    require(Token(traded_token).transfer(admin, excess_));\r\n  }\r\n\r\n  function transfer_tokens_through_proxy_to_contract(address _from, address _to, uint256 _amount) private {\r\n    traded_token_balance = traded_token_balance.add(_amount);\r\n    require(Token(traded_token).transferFrom(_from,_to,_amount));\r\n  }  \r\n\r\n  function transfer_tokens_from_contract(address _to, uint256 _amount) private {\r\n    traded_token_balance = traded_token_balance.sub(_amount);\r\n    require(Token(traded_token).transfer(_to,_amount));\r\n  }\r\n\r\n  function transfer_eth_to_contract() private {\r\n    eth_balance = eth_balance.add(msg.value);\r\n  }\r\n  \r\n  function transfer_eth_from_contract(address _to, uint256 _amount) private {\r\n    eth_balance = eth_balance.sub(_amount);\r\n    _to.transfer(_amount);\r\n  }\r\n  \r\n  function deposit_token(uint256 _amount) private { \r\n    transfer_tokens_through_proxy_to_contract(msg.sender, this, _amount);\r\n  }  \r\n\r\n  function deposit_eth() private { \r\n    transfer_eth_to_contract();\r\n  }  \r\n  \r\n  function withdraw_token(uint256 _amount) public only_admin() {\r\n    transfer_tokens_from_contract(admin, _amount);\r\n  }\r\n  \r\n  function withdraw_eth(uint256 _amount) public only_admin() {\r\n    transfer_eth_from_contract(admin, _amount);\r\n  }\r\n\r\n  function set_traded_token_as_seeded() private {\r\n    traded_token_is_seeded = true;\r\n  }\r\n\r\n  function set_eth_as_seeded() private {\r\n    eth_is_seeded = true;\r\n  }\r\n\r\n  function seed_traded_token() public only_admin() {\r\n    require(!traded_token_is_seeded);\r\n    set_traded_token_as_seeded();\r\n    deposit_token(traded_token_seed_amount); \r\n  }\r\n  \r\n  function seed_eth() public payable only_admin() {\r\n    require(!eth_is_seeded);\r\n    require(msg.value == eth_seed_amount);\r\n    set_eth_as_seeded();\r\n    deposit_eth(); \r\n  }\r\n\r\n  function seed_additional_token(uint256 _amount) public only_admin() {\r\n    require(market_is_open());\r\n    deposit_token(_amount);\r\n  }\r\n\r\n  function seed_additional_eth() public payable only_admin() {\r\n    require(market_is_open());\r\n    deposit_eth();\r\n  }\r\n\r\n  function market_is_open() private view returns(bool) {\r\n    return (eth_is_seeded && traded_token_is_seeded);\r\n  }\r\n\r\n  function deactivate_trading() public only_admin() {\r\n    require(!trading_deactivated);\r\n    trading_deactivated = true;\r\n  }\r\n  \r\n  function reactivate_trading() public only_admin() {\r\n    require(trading_deactivated);\r\n    trading_deactivated = false;\r\n  }\r\n\r\n  function get_amount_sell(uint256 _amount) public view returns(uint256) {\r\n    uint256 traded_token_balance_plus_amount_ = traded_token_balance.add(_amount);\r\n    return (eth_balance.mul(_amount)).div(traded_token_balance_plus_amount_);\r\n  }\r\n\r\n  function get_amount_buy(uint256 _amount) public view returns(uint256) {\r\n    uint256 eth_balance_plus_amount_ = eth_balance.add(_amount);\r\n    return ((traded_token_balance).mul(_amount)).div(eth_balance_plus_amount_);\r\n  }\r\n  \r\n  function get_amount_minus_commission(uint256 _amount) private view returns(uint256) {\r\n    return ((_amount.mul(1 ether)).sub(commission_ratio)).div(1 ether);  \r\n  }\r\n\r\n  function activate_admin_commission() public only_admin() {\r\n    require(!admin_commission_activated);\r\n    admin_commission_activated = true;\r\n  }\r\n\r\n  function deactivate_admin_comission() public only_admin() {\r\n    require(admin_commission_activated);\r\n    admin_commission_activated = false;\r\n  }\r\n\r\n  function change_admin_commission(uint256 _new_commission_ratio) public only_admin() {\r\n     require(_new_commission_ratio != commission_ratio);\r\n     commission_ratio = _new_commission_ratio;\r\n  }\r\n\r\n\r\n  function complete_sell_exchange(uint256 _amount_give) private {\r\n    uint256 amount_get_ = get_amount_sell(_amount_give);\r\n    uint256 amount_get_minus_commission_ = get_amount_minus_commission(amount_get_);\r\n    uint256 platform_commission_ = (amount_get_.sub(amount_get_minus_commission_)).div(5);\r\n    uint256 admin_commission_ = ((amount_get_.sub(amount_get_minus_commission_)).mul(4)).div(5);\r\n    transfer_tokens_through_proxy_to_contract(msg.sender,this,_amount_give);\r\n    transfer_eth_from_contract(msg.sender,amount_get_minus_commission_);  \r\n    transfer_eth_from_contract(platform, platform_commission_);     \r\n    if(admin_commission_activated) {\r\n      transfer_eth_from_contract(admin, admin_commission_);     \r\n    }\r\n  }\r\n  \r\n  function complete_buy_exchange() private {\r\n    uint256 amount_get_ = get_amount_buy(msg.value);\r\n    uint256 amount_get_minus_commission_ = get_amount_minus_commission(amount_get_);\r\n    uint256 platform_commission_ = (amount_get_.sub(amount_get_minus_commission_)).div(5);\r\n    uint256 admin_commission_ = ((amount_get_.sub(amount_get_minus_commission_)).mul(4)).div(5);\r\n    transfer_eth_to_contract();\r\n    transfer_tokens_from_contract(msg.sender, amount_get_minus_commission_);\r\n    transfer_tokens_from_contract(platform, platform_commission_);\r\n    if(admin_commission_activated) {\r\n      transfer_tokens_from_contract(admin, admin_commission_);\r\n    }\r\n  }\r\n  \r\n  function sell_tokens(uint256 _amount_give) public trading_activated() {\r\n    require(market_is_open());\r\n    complete_sell_exchange(_amount_give);\r\n  }\r\n  \r\n  function buy_tokens() private trading_activated() {\r\n    require(market_is_open());\r\n    complete_buy_exchange();\r\n  }\r\n\r\n  function() public payable {\r\n    buy_tokens();\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"reactivate_trading\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deactivate_trading\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"change_admin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_eth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_is_seeded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"seed_eth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_arbitrary_token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platform\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_commission_ratio\",\"type\":\"uint256\"}],\"name\":\"change_admin_commission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin_commission_activated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"traded_token_is_seeded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"traded_token_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"get_amount_buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"seed_additional_token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount_give\",\"type\":\"uint256\"}],\"name\":\"sell_tokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commission_ratio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deactivate_admin_comission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"traded_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"get_amount_sell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"traded_token_seed_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"seed_additional_eth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_seed_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trading_deactivated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activate_admin_commission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw_excess_tokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"seed_traded_token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_traded_token\",\"type\":\"address\"},{\"name\":\"_eth_seed_amount\",\"type\":\"uint256\"},{\"name\":\"_traded_token_seed_amount\",\"type\":\"uint256\"},{\"name\":\"_commission_ratio\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TokenLiquidityMarket","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c997d07b0bc607b6d1bcb6fb9d4a5579c466c3e5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000b1a2bc2ec50000","Library":"","SwarmSource":"bzzr://aaaed0e7c804f10c1a3afd513d8adbdc7ab3f87ae7da7eaa390b7008f3c92166"}]}