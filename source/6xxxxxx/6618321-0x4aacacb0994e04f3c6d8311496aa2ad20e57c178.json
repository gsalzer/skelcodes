{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary Safe {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n\r\n}\r\ncontract HiEXCoin{\r\n    uint public totalSupply = 500004322.443245*10**18;  //Total amount of distribution\r\n    uint8 constant public decimals = 18;\r\n    string constant public name = \"HiEXCoin\";\r\n    string constant public symbol = \"HC\";\r\n    \r\n\taddress public owner;\r\n\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n\tmapping (address => uint256) public freezeOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor() public{\r\n        balanceOf[msg.sender] = totalSupply;\r\n\t\towner = msg.sender;\r\n    }\r\n\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    function transfer(address _to, uint256 _value) public {\r\n        require(_to != 0x0);\r\n\t\trequire(_value > 0);\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\r\n        balanceOf[_to] = Safe.safeAdd(balanceOf[_to], _value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of wei to be approved for transfer\r\n    /// @return Is it successfully approved\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n\t\trequire(_value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n       \r\n\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != 0x0);\r\n        require(_value > 0);\r\n        require(balanceOf[_from] > _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] = Safe.safeSub(balanceOf[_from], _value);\r\n        balanceOf[_to] = Safe.safeAdd(balanceOf[_to], _value);\r\n        allowance[_from][msg.sender] = Safe.safeSub(allowance[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /// @param _value The amount of token to be burned\r\n    /// @return Is it successfully burned\r\n    function burn(uint256 _value) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(_value > 0);\r\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\r\n        totalSupply = Safe.safeSub(totalSupply,_value);\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    /// @param _value The amount of token to be freeze\r\n    /// @return Is it successfully froze\r\n\tfunction freeze(uint256 _value) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n\t\trequire(_value > 0);\r\n        balanceOf[msg.sender] = Safe.safeSub(balanceOf[msg.sender], _value);\r\n        freezeOf[msg.sender] = Safe.safeAdd(freezeOf[msg.sender], _value);\r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\t\r\n    /// @param _value The amount of token to be unfreeze\r\n    /// @return Is it successfully unfroze\r\n\tfunction unfreeze(uint256 _value) public returns (bool) {\r\n        require(freezeOf[msg.sender] >= _value);\r\n        require(_value > 0);\r\n        freezeOf[msg.sender] = Safe.safeSub(freezeOf[msg.sender], _value);\r\n\t\tbalanceOf[msg.sender] = Safe.safeAdd(balanceOf[msg.sender], _value);\r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\t\r\n    function() payable public {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]","ContractName":"HiEXCoin","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://655a02c470e6e84c1314c0c3d421c703cdb2bcab0971a61b3aeba3f8065c8672"}]}