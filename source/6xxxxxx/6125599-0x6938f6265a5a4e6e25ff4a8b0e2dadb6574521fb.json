{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*\r\n*\r\n* Jackpot holding contract for Zlots.\r\n*  \r\n* This accepts token payouts from Zlots for every player loss,\r\n* and on a win, pays out *half* of the jackpot to the winner.\r\n*\r\n* Jackpot payout should only be called from Zlots.\r\n*\r\n*/\r\n\r\ncontract ZethrInterface {\r\n  function balanceOf(address who) public view returns (uint);\r\n  function transfer(address _to, uint _value) public returns (bool);\r\n\tfunction withdraw(address _recipient) public;\r\n}\r\n\r\n// Should receive Zethr tokens\r\ncontract ERC223Receiving {\r\n  function tokenFallback(address _from, uint _amountOfTokens, bytes _data) public returns (bool);\r\n}\r\n\r\n// The actual contract\r\ncontract ZlotsJackpotHoldingContract is ERC223Receiving {\r\n\r\n  // ------------------------- Modifiers\r\n\r\n  // Require msg.sender to be owner\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  } \r\n\r\n  // Require msg.sender to be zlots\r\n  modifier onlyZlots() {\r\n    require(msg.sender == zlots);\r\n    _;\r\n  }\r\n\r\n\t// -------------------------- Events\r\n\r\n  // Events\r\n  event JackpotPayout(\r\n    uint amountPaid,\r\n    address winner,\r\n    uint payoutNumber\r\n  );\r\n\r\n\t// -------------------------- Variables\r\n\r\n  // Configurables\r\n  address owner;\r\n  address zlots;\r\n  ZethrInterface Zethr = ZethrInterface(0xD48B633045af65fF636F3c6edd744748351E020D);\r\n\r\n  // Trackers\r\n  uint payoutNumber = 0; // How many times we've paid out the jackpot\r\n  uint totalPaidOut = 0; // The total amount we've paid out \r\n\r\n  // ------------------------- Functions\r\n\r\n\t// Constructor\r\n  constructor (address zlotsAddress) public {\r\n    owner = msg.sender;\r\n    zlots = zlotsAddress;\r\n  }\r\n\r\n  // When we transfer, divs are withdraw.\r\n  // This means we need an empty public payable.\r\n  function () public payable { }\r\n\r\n  // Callable only by Zlots\r\n  // Pay a winner half of the jackpot\r\n  function payOutWinner(address winner) onlyZlots {\r\n\t\t// Calculate payout & pay out\r\n \t\tuint payoutAmount = Zethr.balanceOf(address(this)) / 2;\r\n\t\tZethr.transfer(winner, payoutAmount);\t\r\n\r\n\t\t// Incremement the vars\r\n\t\tpayoutNumber += 1;\r\n\t\ttotalPaidOut += payoutAmount / 2;\r\n\r\n\t\temit JackpotPayout(payoutAmount / 2, winner, payoutNumber);\r\n  }\r\n\r\n\t// Admin function to pull all tokens if we need to - like upgrading this contract\r\n\tfunction pullTokens(address _to) public onlyOwner {\r\n    uint balance = Zethr.balanceOf(address(this));\r\n    Zethr.transfer(_to, balance);\r\n\t}\r\n\r\n  // Admin function to change zlots address if we need to\r\n  function setZlotsAddress(address zlotsAddress) public onlyOwner {\r\n    zlots = zlotsAddress;\r\n  }\r\n\r\n  // Token fallback to accept jackpot payments from Zlots\r\n  // These tokens can come from anywhere, really - why restrict?\r\n  function tokenFallback(address /*_from*/, uint /*_amountOfTokens*/, bytes/*_data*/) public returns (bool) {\r\n    // Do nothing, we can track the jackpot by this balance\r\n  }\r\n\r\n\t// View function - returns the jackpot amount\r\n  function getJackpot() public view returns (uint) {\r\n    return Zethr.balanceOf(address(this)) / 2;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"zlotsAddress\",\"type\":\"address\"}],\"name\":\"setZlotsAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"pullTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getJackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"payOutWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"zlotsAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"payoutNumber\",\"type\":\"uint256\"}],\"name\":\"JackpotPayout\",\"type\":\"event\"}]","ContractName":"ZlotsJackpotHoldingContract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000069e92cbd8f1b870ad2612c0b9f2b49324526cb4d","Library":"","SwarmSource":"bzzr://3832b02d4501529da8ab4663f1818513f2d3a0845ae7c9bdb27993c60cd978a5"}]}