{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n  address public tech;\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  modifier onlyTech() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n  \r\n  function transferTech(address newTech) public onlyOwner {\r\n    require(newTech != address(0));\r\n    tech = newTech;\r\n  }\r\n}\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract IceRockPay is ERC20Basic, Ownable {\r\n  event Payout(address indexed from, address indexed to, uint256 value);\r\n  using SafeMath for uint256;\r\n  mapping(address => uint256) balances;\r\n  string public name = \"Rock2Pay\";\r\n  string public symbol = \"Rock2Pay\";\r\n  uint256 totalSupply_;\r\n  uint8 public constant decimals = 18;\r\n  enum States {\r\n    Sale,\r\n    Stop\r\n  }\r\n  States public state;        \r\n  \r\n  constructor() public {\r\n    totalSupply_ = 0;\r\n    state = States.Sale;\r\n  }\r\n\r\n  modifier requireState(States _requiredState) {\r\n    require(state == _requiredState);\r\n    _;\r\n  }\r\n  \r\n  function requestPayout(uint256 _amount, address _address)\r\n  onlyTech\r\n  public\r\n  {\r\n    _address.transfer(_amount);\r\n  }\r\n  \r\n  function changeState(States _newState)\r\n  onlyTech\r\n  public\r\n  {\r\n    state = _newState;\r\n  }\r\n  \r\n  function decreaseTokens(address _address, uint256 _amount) \r\n  onlyTech\r\n  public {\r\n    balances[_address] = balances[_address].sub(_amount);\r\n    totalSupply_ = totalSupply_.sub(_amount);\r\n  }\r\n  \r\n  function decreaseTokensMulti(address[] _address, uint256[] _amount) \r\n  onlyTech\r\n  public {\r\n      for(uint i = 0; i < _address.length; i++){\r\n        balances[_address[i]] = balances[_address[i]].sub(_amount[i]);\r\n        totalSupply_ = totalSupply_.sub(_amount[i]);\r\n      }\r\n  }\r\n  \r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply_;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function addTokens(address _address, uint256 _amount) \r\n  onlyTech\r\n  public {\r\n    totalSupply_ = totalSupply_.add(_amount);\r\n    balances[_address] = balances[_address].add(_amount);\r\n    emit Transfer(msg.sender, _address, _amount);\r\n  }\r\n  \r\n  function addTokensMulti(address[] _address, uint256[] _amount) \r\n  onlyTech\r\n  public {\r\n      for(uint i = 0; i < _address.length; i++){\r\n        totalSupply_ = totalSupply_.add(_amount[i]);\r\n        balances[_address[i]] = balances[_address[i]].add(_amount[i]);\r\n        emit Transfer(msg.sender, _address[i], _amount[i]);\r\n      }\r\n  }\r\n  \r\n  function transfer(address to, uint tokens) public returns (bool success) {\r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n    if (to == owner) {\r\n        totalSupply_ = totalSupply_.sub(tokens);\r\n        msg.sender.transfer(tokens);\r\n        emit Payout(msg.sender, to, tokens);\r\n    } else {\r\n        balances[to] = balances[to].add(tokens);\r\n    }\r\n    emit Transfer(msg.sender, to, tokens);\r\n  }\r\n  \r\n  function() payable\r\n  public\r\n  {\r\n    \r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tech\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"requestPayout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newState\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"addTokensMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTech\",\"type\":\"address\"}],\"name\":\"transferTech\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"decreaseTokensMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"IceRockPay","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://033c13059ebd2f636e24bf025c3a286b41b8cc4e923e1f59099620016620b310"}]}