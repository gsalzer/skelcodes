{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract Bitmonds {\r\n    struct BitmondsOwner {\r\n        string bitmond;\r\n        string owner;\r\n    }\r\n\r\n    BitmondsOwner[] internal registry;\r\n\r\n    function take(string Bitmond, string Owner) public {\r\n        registry.push(BitmondsOwner(Bitmond, Owner));\r\n    }\r\n\r\n    function lookup(string Bitmond) public view returns (string Owner) {\r\n        for (uint i = 0; i < registry.length; i++) {\r\n            if (compareStrings(Bitmond, registry[i].bitmond)) {\r\n                Owner = registry[i].owner;\r\n            }\r\n        }\r\n    }\r\n\r\n    function compareStrings (string a, string b) internal pure returns (bool) {\r\n        return (keccak256(a) == keccak256(b));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"Bitmond\",\"type\":\"string\"},{\"name\":\"Owner\",\"type\":\"string\"}],\"name\":\"take\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"Bitmond\",\"type\":\"string\"}],\"name\":\"lookup\",\"outputs\":[{\"name\":\"Owner\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Bitmonds","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://239f60f311b814301d23482b68e5f0e4413d7830160a42e29112634fd3f5b0b7"}]}