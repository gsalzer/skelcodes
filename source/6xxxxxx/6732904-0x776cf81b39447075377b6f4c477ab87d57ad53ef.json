{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\nlibrary SafeMath {\r\n    \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ninterface SKWInterface {\r\n     \r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n\r\n}\r\n\r\ncontract SKWVesting1 {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    address public _beneficiary = 0x0;//受益地址\r\n    \r\n    uint256 public unLockTime_1;\r\n    \r\n    uint256 public unLockTime_2;\r\n    \r\n    uint256 public unLockTime_3;\r\n    \r\n    uint256 public unLockTime_4;\r\n    \r\n    uint256 public unLockTime_5;\r\n    \r\n    uint256 public unLockTime_6;\r\n    \r\n    uint256 public released;//释放数量 \r\n    \r\n    uint256 public totalBalance;//所有数量 \r\n    \r\n    SKWInterface constant _token = SKWInterface(0x007ac2F589eb9d4Fe1cEA9f46B5f4f52DaB73dd4);\r\n    \r\n    event Released(uint256 amount);\r\n    \r\n    constructor() public {\r\n       _beneficiary = 0x61effBFB271De468D54ADb7b154c4b003489ea69;\r\n       unLockTime_1 = 1543075200;//2018-11-25 00:00:00\r\n       unLockTime_2 = 1545667200;//2018-12-25 00:00:00\r\n       unLockTime_3 = 1548345600;//2019-1-25 00:00:00\r\n       unLockTime_4 = 1551024000;//2019-2-25 00:00:00\r\n       unLockTime_5 = 1553443200;//2019-3-25 00:00:00\r\n       unLockTime_6 = 1556121600;//2019-4-25 00:00:00\r\n       totalBalance = 5000000000000000;// 50000000.00000000 8个0\r\n       released = 0;\r\n    }\r\n    \r\n    function release() public {//释放\r\n        uint256 unreleased = releasableAmount();\r\n        require(unreleased > 0);\r\n        released = released.add(unreleased);\r\n        _token.transfer(_beneficiary, unreleased);\r\n        emit Released(unreleased);\r\n    }\r\n    \r\n    function releasableAmount() public view returns (uint256){\r\n        uint num = getUnLockNum();\r\n        if(num > 0 ){\r\n            uint256 currentBalance = totalBalance.div(6).mul(num) - released;\r\n            return currentBalance;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    function getUnLockNum() public view returns (uint){\r\n        uint256 n = now;\r\n        if(n < unLockTime_1){\r\n            return 0;\r\n        }else if(n >= unLockTime_1 && n < unLockTime_2){\r\n            return 1;\r\n        }else if(n >= unLockTime_2 && n < unLockTime_3){\r\n            return 2;\r\n        }else if(n >= unLockTime_3 && n < unLockTime_4){\r\n            return 3;\r\n        }else if(n >= unLockTime_4 && n < unLockTime_5){\r\n            return 4;\r\n        }else if(n >= unLockTime_5 && n < unLockTime_6){\r\n            return 5;\r\n        }else {\r\n            return 6;\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasableAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUnLockNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unLockTime_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"}]","ContractName":"SKWVesting1","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://88562de55bdb25853fa103a5bb3bfde98806b076d4bbdb663092d5d6da4ec86c"}]}