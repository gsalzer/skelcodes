{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract SEO{\r\n    uint price;\r\n    uint stop_time;\r\n    uint balance;\r\n    uint total_tickets;\r\n    uint time=1 days;\r\n    address winner;\r\n    address owner;\r\n    bool owner_flag=false;\r\n    mapping(address=>uint) own_tickets;\r\n    mapping(address=>bool) claim_status;\r\n    modifier game_over(){\r\n        require(now>stop_time);\r\n        _;\r\n    }\r\n    function SEO() public{\r\n        price=0.1 ether;\r\n        stop_time=now+time;\r\n        owner=msg.sender;\r\n    }\r\n    function buy() public payable{\r\n        require(msg.value>=price);\r\n        require(now<stop_time);\r\n        own_tickets[msg.sender]++;\r\n        balance+=msg.value;\r\n        winner=msg.sender;\r\n        stop_time=now+time;\r\n        price+=0.1 ether;\r\n        total_tickets++;\r\n    }\r\n    function claim() public payable game_over(){\r\n        require(!claim_status[msg.sender]==true);\r\n        uint tmp_value;\r\n        if(msg.sender==winner){\r\n            tmp_value=price-0.1 ether+(balance-price+0.1 ether)/20;\r\n        }\r\n        tmp_value+=(balance-(balance-price+0.1 ether)/10-price+0.1 ether)/total_tickets*own_tickets[msg.sender];\r\n        msg.sender.transfer(tmp_value);\r\n        claim_status[msg.sender]=true;\r\n    }\r\n    function force_stop() public{\r\n        require(msg.sender==owner);\r\n        stop_time=0;\r\n    }\r\n    function owner_withdraw() public payable game_over(){\r\n        require(owner_flag==false);\r\n        owner.transfer((balance-price+0.1 ether)/20);\r\n        owner_flag=true;\r\n    }\r\n    function get_price() public view returns (uint){\r\n        return price;\r\n    }\r\n    function get_time() public view returns (uint){\r\n        return stop_time;\r\n    }\r\n    function get_balance() public view returns(uint){\r\n        return balance;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"get_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"owner_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"force_stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"SEO","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fbf8d9f1a46ff47f443588009944fb73b6a4a6918d360e051406409de29e5225"}]}