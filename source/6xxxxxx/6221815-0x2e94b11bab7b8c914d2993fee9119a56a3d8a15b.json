{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    \r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\r\n}\r\n\r\ncontract ERC20 {\r\n\tuint public totalSupply = 1653200;\r\n\tfunction balanceOf(address who) constant returns (uint);\r\n\tfunction transfer(address to, uint value);\r\n\tfunction allowance(address owner, address spender) constant returns (uint);\r\n\r\n\tfunction transferFrom(address from, address to, uint value);\r\n\tfunction approve(address spender, uint value);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract CNODStandart is ERC20 {\r\n    using SafeMath for uint;\r\n    \r\n\tstring  public name        = \"Crypto Noda\";\r\n    string  public symbol      = \"CNOD\";\r\n    uint8   public decimals    = 0;\r\n\r\n\tmapping (address => mapping (address => uint)) allowed;\r\n\tmapping (address => uint) balances;\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) {\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) constant returns (uint balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n}\r\n\r\ncontract owned {\r\n    \r\n    address public owner;\r\n    address public newOwner;\r\n\t\r\n    function owned() public payable {\r\n        owner = msg.sender;\r\n    }\r\n\t\r\n    modifier onlyOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n\t\r\n    function changeOwner(address _owner) onlyOwner public {\r\n        require(_owner != 0);\r\n        newOwner = _owner;\r\n    }\r\n    \r\n    function confirmOwner() public {\r\n        require(newOwner == msg.sender);\r\n        owner = newOwner;\r\n        delete newOwner;\r\n    }\r\n}\r\n \r\ncontract Crowdsale is owned, CNODStandart {\r\n    \r\n\tusing SafeMath for uint;\r\n\tuint public start;\r\n\tuint public period;\r\n\tuint public hardcap;\r\n\tuint public softcap;\r\n\tuint public min_contribution;\r\n\tuint public totalEther;\r\n\tuint public wei25;\r\n\tuint public wei20;\r\n \r\n\tfunction Crowdsale() {\r\n\t\tstart = 1535328000;\r\n\t\tperiod = 45;\r\n\t\thardcap = 400000000000000000000;\r\n\t\tsoftcap = 180000000000000000000;\r\n\t\tmin_contribution = 50000000000000000;\r\n\t\ttotalEther = 0;\r\n\r\n\t\twei25 = 234410000000000;\r\n\t\twei20 = 250000000000000;\r\n\t}\r\n \r\n\tmodifier saleIsOn() {\r\n\t\trequire(now > start && now < start + period * 1 days);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier isUnderHardCap() {\r\n\t\trequire(totalEther <= hardcap);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction changeTotalSupply(uint _totalSupply) onlyOwner public {\r\n        totalSupply = _totalSupply;\r\n    }\r\n\t\r\n\tfunction minContribution(uint _min) onlyOwner public {\r\n        min_contribution = _min;\r\n    }\r\n\r\n\tfunction refund() {\r\n\t\trequire(this.balance < softcap && now > start + period * 1 days);\r\n\t\tuint value = balances[msg.sender]; \r\n\t\tbalances[msg.sender] = 0; \r\n\t\tmsg.sender.transfer(value); \r\n\t}\r\n\r\n\tfunction createTokens() isUnderHardCap saleIsOn payable {\r\n\t\trequire(msg.value >= min_contribution);\r\n\t\tuint tokens = 0;\r\n\t\tif (totalEther < 200000000000000000000){\r\n\t\t\ttokens = msg.value / wei25;\r\n\t\t} else {\r\n\t\t\ttokens = msg.value / wei20;\r\n\t\t}\r\n\t\trequire((totalSupply - tokens) >= 0);\r\n\t\tmsg.sender.send(tokens);\r\n\t\tbalances[msg.sender] = tokens;\r\n        Transfer(owner, msg.sender, tokens);\r\n\t\t\r\n\t\ttotalSupply -= tokens;\r\n\t\ttotalEther += msg.value;\r\n\t}\r\n\t\r\n\tfunction sendToOwnerBalance(address _to, uint256 _valueWei) onlyOwner public {\r\n\t\trequire(totalEther >= softcap);\r\n        _to.send(_valueWei);\r\n    }\r\n\r\n\tfunction() external payable {\r\n\t\tcreateTokens();\r\n\t}\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"changeTotalSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_min\",\"type\":\"uint256\"}],\"name\":\"minContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_contribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wei20\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wei25\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_valueWei\",\"type\":\"uint256\"}],\"name\":\"sendToOwnerBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cd88460d79bbdf0cc27397ce1fe829f677e990a1d7be1a2183e60e4e70394146"}]}