{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n/******************************************************************************\\\r\n* Author: Nick Mudge, nick@mokens.io\r\n* Mokens\r\n* Copyright (c) 2018\r\n*\r\n* The getStateHash function returns a hash that represents the state of a moken. \r\n* This can be used to verify that child non-fungible tokens have not\r\n* been added/removed right before a transfer or sale.\r\n/******************************************************************************/\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//Storage contracts\r\n////////////\r\n//Some delegate contracts are listed with storage contracts they inherit.\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//Mokens\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage0 {\r\n    // funcId => delegate contract\r\n    mapping(bytes4 => address) internal delegates;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenUpdates\r\n//MokenOwner\r\n//QueryMokenDelegates\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage1 is Storage0 {\r\n    address internal contractOwner;\r\n    bytes[] internal funcSignatures;\r\n    // signature => index+1\r\n    mapping(bytes => uint256) internal funcSignatureToIndex;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokensSupportsInterfaces\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage2 is Storage1 {\r\n    mapping(bytes4 => bool) internal supportedInterfaces;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenRootOwnerOf\r\n//MokenERC721Metadata\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage3 is Storage2 {\r\n    struct Moken {\r\n        string name;\r\n        uint256 data;\r\n        uint256 parentTokenId;\r\n    }\r\n    //tokenId => moken\r\n    mapping(uint256 => Moken) internal mokens;\r\n    uint256 internal mokensLength;\r\n    // child address => child tokenId => tokenId+1\r\n    mapping(address => mapping(uint256 => uint256)) internal childTokenOwner;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC721Enumerable\r\n//MokenLinkHash\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage4 is Storage3 {\r\n    // root token owner address => (tokenId => approved address)\r\n    mapping(address => mapping(uint256 => address)) internal rootOwnerAndTokenIdToApprovedAddress;\r\n    // token owner => (operator address => bool)\r\n    mapping(address => mapping(address => bool)) internal tokenOwnerToOperators;\r\n    // Mapping from owner to list of owned token IDs\r\n    mapping(address => uint32[]) internal ownedTokens;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC998ERC721TopDown\r\n//MokenERC998ERC721TopDownBatch\r\n//MokenERC721\r\n//MokenERC721Batch\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage5 is Storage4 {\r\n    // tokenId => (child address => array of child tokens)\r\n    mapping(uint256 => mapping(address => uint256[])) internal childTokens;\r\n    // tokenId => (child address => (child token => child index)\r\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256))) internal childTokenIndex;\r\n    // tokenId => (child address => contract index)\r\n    mapping(uint256 => mapping(address => uint256)) internal childContractIndex;\r\n    // tokenId => child contract\r\n    mapping(uint256 => address[]) internal childContracts;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC998ERC20TopDown\r\n//MokenStateChange\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage6 is Storage5 {\r\n    // tokenId => token contract\r\n    mapping(uint256 => address[]) internal erc20Contracts;\r\n    // tokenId => (token contract => token contract index)\r\n    mapping(uint256 => mapping(address => uint256)) erc20ContractIndex;\r\n    // tokenId => (token contract => balance)\r\n    mapping(uint256 => mapping(address => uint256)) internal erc20Balances;\r\n}\r\n\r\ncontract MokenStateChange is Storage6 {\r\n    uint256 constant MOKEN_LINK_HASH_MASK = 0xffffffffffffffff000000000000000000000000000000000000000000000000;\r\n\r\n    function getStateHash(uint256 _tokenId) public view returns (bytes32 stateHash) {\r\n        uint256 linkHash = mokens[_tokenId].data & MOKEN_LINK_HASH_MASK;\r\n        stateHash = keccak256(stateHash, linkHash);\r\n        address[] memory childContracts_ = childContracts[_tokenId];\r\n        uint256 length = childContracts_.length;\r\n        uint256 i;\r\n        if(length > 0) {\r\n            stateHash = keccak256(stateHash, childContracts_);\r\n            for (i = 0; i < length; i++) {\r\n                stateHash = keccak256(stateHash, childTokens[_tokenId][childContracts_[i]]);\r\n            }\r\n        }\r\n        address[] memory erc20Contracts_ = erc20Contracts[_tokenId];\r\n        length = erc20Contracts_.length;\r\n        if(length > 0) {\r\n            stateHash = keccak256(stateHash, erc20Contracts_);\r\n            for (i = 0; i < length; i++) {\r\n                stateHash = keccak256(stateHash, erc20Balances[_tokenId][erc20Contracts_[i]]);\r\n            }\r\n        }\r\n        return stateHash;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getStateHash\",\"outputs\":[{\"name\":\"stateHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MokenStateChange","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"999","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://98d0f2354f27118ab7f4dcad04522a77e81f68f96010cc642972f50ffa2bfae1"}]}