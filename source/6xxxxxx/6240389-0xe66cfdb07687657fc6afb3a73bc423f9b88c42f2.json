{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function safeAdd(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function safeSub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function safeMul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function safeDiv(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ninterface token {\r\n    function transfer(address to, uint tokens) external;\r\n    function balanceOf(address tokenOwner) external returns(uint balance);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    event tokensBought(address _addr, uint _amount);\r\n    event tokensCalledBack(uint _amount);\r\n    event privateSaleEnded(uint _time);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract Crowdsale is Owned{\r\n    using SafeMath for uint;\r\n    uint public endDate;\r\n    address public developer;\r\n    address public marketing;\r\n    address public kelly;\r\n    address public company;\r\n    uint public phaseOneEnd;\r\n    uint public phaseTwoEnd;\r\n    uint public phaseThreeEnd;\r\n    token public CCC;\r\n    \r\n    event tokensBought(address _addr, uint _amount);\r\n    constructor() public{\r\n    phaseOneEnd = now + 3 days;\r\n    phaseTwoEnd = now + 6 days;\r\n    phaseThreeEnd = now + 9 days;\r\n    CCC = token(0x4446B2551d7aCdD1f606Ef3Eed9a9af913AE3e51);\r\n    developer = 0x215c6e1FaFa372E16CfD3cA7D223fc7856018793;\r\n    company = 0x49BAf97cc2DF6491407AE91a752e6198BC109339;\r\n    kelly = 0x36e8A1C0360B733d6a4ce57a721Ccf702d4008dE;\r\n    marketing = 0x4DbADf088EEBc22e9A679f4036877B1F7Ce71e4f;\r\n    }\r\n    \r\n    function() payable public{\r\n        require(msg.value >= 0.4 ether);\r\n        require(now < phaseThreeEnd);\r\n        uint tokens;\r\n        if (now <= phaseOneEnd) {\r\n            tokens = msg.value * 12546;\r\n        } else if (now > phaseOneEnd && now <= phaseTwoEnd) {\r\n            tokens = msg.value * 12063;\r\n        }else if( now > phaseTwoEnd && now <= phaseThreeEnd){\r\n            tokens = msg.value * 11581;\r\n        }\r\n        CCC.transfer(msg.sender, tokens);\r\n        emit tokensBought(msg.sender, tokens);\r\n    }\r\n    \r\n    function safeWithdrawal() public onlyOwner {\r\n        require(now >= phaseThreeEnd);\r\n        uint amount = address(this).balance;\r\n        uint devamount = amount/uint(100);\r\n        uint devamtFinal = devamount*5;\r\n        uint marketamtFinal = devamount*5;\r\n        uint kellyamtFinal = devamount*5;\r\n        uint companyamtFinal = devamount*85;\r\n        developer.transfer(devamtFinal);\r\n        marketing.transfer(marketamtFinal);\r\n        company.transfer(companyamtFinal);\r\n        kelly.transfer(kellyamtFinal);\r\n\r\n        \r\n    }\r\n    \r\n\r\n    function withdrawTokens() public onlyOwner{\r\n        require(now >= phaseThreeEnd);\r\n        uint Ownerbalance = CCC.balanceOf(this);\r\n    \tCCC.transfer(owner, Ownerbalance);\r\n    \temit tokensCalledBack(Ownerbalance);\r\n\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kelly\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseOneEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseThreeEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CCC\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseTwoEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokensBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokensCalledBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"privateSaleEnded\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://82669e8ae0d7d90c5d0b49b8545e97b5bc33a1b4b43bbdb93078e64f495b5fb1"}]}