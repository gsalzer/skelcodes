{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*\r\n    @title Provides support and utilities for contract ownership\r\n*/\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n\r\n    /*\r\n        @dev constructor\r\n    */\r\n    constructor(address _owner) public {\r\n        owner = _owner;\r\n    }\r\n\r\n    /*\r\n        @dev allows execution by the owner only\r\n    */\r\n    modifier ownerOnly {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /*\r\n        @dev allows transferring the contract ownership\r\n        the new owner still needs to accept the transfer\r\n        can only be called by the contract owner\r\n\r\n        @param _newOwner    new contract owner\r\n    */\r\n    function transferOwnership(address _newOwner) public ownerOnly {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /*\r\n        @dev used by a new owner to accept an ownership transfer\r\n    */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract BatchTransfer is Ownable {\r\n\r\n    /*\r\n        @dev constructor\r\n\r\n    */\r\n    constructor () public Ownable(msg.sender) {}\r\n\r\n    function batchTransfer(address[] _destinations, uint256[] _amounts) \r\n        public\r\n        ownerOnly()\r\n        {\r\n            require(_destinations.length == _amounts.length);\r\n\r\n            for (uint i = 0; i < _destinations.length; i++) {\r\n                if (_destinations[i] != 0x0) {\r\n                    _destinations[i].transfer(_amounts[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n    function batchTransfer(address[] _destinations, uint256 _amount) \r\n        public\r\n        ownerOnly()\r\n        {\r\n            require(_destinations.length > 0);\r\n\r\n            for (uint i = 0; i < _destinations.length; i++) {\r\n                if (_destinations[i] != 0x0) {\r\n                    _destinations[i].transfer(_amount);\r\n                }\r\n            }\r\n        }\r\n        \r\n    function transfer(address _destination, uint256 _amount)\r\n        public\r\n        ownerOnly()\r\n        {\r\n            require(_destination != 0x0 && _amount > 0);\r\n            _destination.transfer(_amount);\r\n        }\r\n\r\n    function transferAllToOwner()\r\n        public\r\n        ownerOnly()\r\n        {\r\n            address(this).transfer(address(this).balance);\r\n        }\r\n        \r\n    function() public payable { }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"transferAllToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destinations\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destinations\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]","ContractName":"BatchTransfer","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a2609988c88164d8edb7d55b4a56cfea0f25f3b696655ddc3e46a2c81bef6beb"}]}