{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n* Copyright Accelerator 2019\r\n*\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy\r\n* of this software and associated documentation files (the \"Software\"), to deal\r\n* in the Software without restriction, including without limitation the rights\r\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the Software is furnished to\r\n* do so, subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in all\r\n* copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\npragma solidity ^0.4.24;\r\ncontract Accelerator {\r\n  function transfer(address to, uint256 tokens) public returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool success);\r\n}\r\ncontract Domain {\r\nstring public name;\r\nconstructor(string register_domain) public {\r\n    name = register_domain;\r\n}\r\n}\r\ncontract Registrar {\r\n  /// @dev Set constant values here\r\n  string public constant name = \"Accelerator-Registrar\";\r\n  address constant public ACCELERATOR_ADDR = 0x13F1b7FDFbE1fc66676D56483e21B1ecb40b58E2; // Accelerator contract address\r\n  // index of created contracts\r\n  address[] public contracts;\r\n  // useful to know the row count in contracts index\r\n  function getContractCount()\r\n    public\r\n    constant\r\n    returns(uint contractCount)\r\n  {\r\n    return contracts.length;\r\n  }\r\n  /// @dev Register Domain\r\n  function register(\r\n    string register_domain\r\n  ) public returns(address newContract)\r\n  {\r\n    //remember to call Token(address).approve(this, amount) or this contract will not be able to do the transfer on your behalf.\r\n    require(Accelerator(ACCELERATOR_ADDR).transferFrom(msg.sender, this, 10**21));\r\n    /// @dev Send the tokens to address(0) (the burn address) - require it or fail here\r\n    require(Accelerator(ACCELERATOR_ADDR).transfer(address(0), 10**21));\r\n    address c = new Domain(register_domain);\r\n    contracts.push(c);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractCount\",\"outputs\":[{\"name\":\"contractCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCELERATOR_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"register_domain\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[{\"name\":\"newContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Registrar","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://356211fc9b24b7b43d32ef896c893a16aeff4d84d4251010eead56e4167390db"}]}