{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract Game01 {\r\n    //the address of our team\r\n    address public teamAddress;\r\n    //addresses of players\r\n    address[] public players;\r\n    //sum of players\r\n    uint public sumOfPlayers;\r\n    //minimum bet\r\n    uint public lowestOffer;\r\n    //target block number\r\n    uint public blockNumber;\r\n    //store the hash of the target block\r\n    bytes32 public blcokHash;\r\n    //store the decimal number of the hash\r\n    uint public numberOfBlcokHash;\r\n    //store the winer index\r\n    uint public winerIndex;\r\n    //store the address of the winner\r\n    address public winer;\r\n    //private function:hunt for the lucky dog\r\n    function produceWiner() private {\r\n        //get the blockhash of the target blcok number\r\n        blcokHash = blockhash(blockNumber);\r\n        //convert hash to decimal\r\n        numberOfBlcokHash = uint(blcokHash);\r\n        //make sure that the block has been generated\r\n        require(numberOfBlcokHash != 0);\r\n        //calculating index of the winer\r\n        winerIndex = numberOfBlcokHash%sumOfPlayers;\r\n        //get the winer address\r\n        winer = players[winerIndex];\r\n        //calculating the gold of team\r\n        uint tempTeam = (address(this).balance/100)*10;\r\n        //transfe the gold to the team\r\n        teamAddress.transfer(tempTeam);\r\n        //calculating the gold of winer\r\n        uint tempBonus = address(this).balance - tempTeam;\r\n        //transfer the gold to the winer\r\n        winer.transfer(tempBonus);\r\n    }\r\n    //public function:hunt for the lucky dog\r\n    function goWiner() public {\r\n        produceWiner();\r\n    }\r\n    //public function:bet\r\n    function betYours() public payable OnlyBet() {\r\n        //make sure that the block has not been generated\r\n        blcokHash = blockhash(blockNumber);\r\n        numberOfBlcokHash = uint(blcokHash);\r\n        require(numberOfBlcokHash == 0);\r\n        //add the player to the player list\r\n        sumOfPlayers = players.push(msg.sender);\r\n    }\r\n    //make sure you bet enough ETH\r\n    modifier OnlyBet() {\r\n        require(msg.value >= lowestOffer);\r\n        _;\r\n    }\r\n    //constructor function\r\n    constructor(uint _blockNumber) public payable {\r\n        teamAddress = msg.sender;//initialize the team address\r\n        sumOfPlayers = 1;//initialize the players\r\n        players.push(msg.sender);//add the team address to the players\r\n        lowestOffer = 10000000000000000;//minimum bet:0.01ETH\r\n        blockNumber = _blockNumber;//initialize the target block number\r\n    }\r\n    //get the address of team\r\n    function getTeamAddress() public view returns(address addr) {\r\n        addr = teamAddress;\r\n    }\r\n    //get the minimum bet ETH\r\n    function getLowPrice() public view returns(uint low) {\r\n        low = lowestOffer;\r\n    }\r\n    //get the player address from the index\r\n    function getPlayerAddress(uint index) public view returns(address addr) {\r\n        addr = players[index];\r\n    }\r\n    //get sum of players\r\n    function getSumOfPlayers() public view returns(uint sum) {\r\n        sum = sumOfPlayers;\r\n    }\r\n    //get the target blcok number\r\n    function getBlockNumber() public view returns(uint num) {\r\n        num = blockNumber;\r\n    }\r\n    //get the balance of contract(bonus pools)\r\n    function getBalances() public view returns(uint balace) {\r\n        balace = address(this).balance;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"name\":\"balace\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLowPrice\",\"outputs\":[{\"name\":\"low\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"goWiner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sumOfPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTeamAddress\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winerIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSumOfPlayers\",\"outputs\":[{\"name\":\"sum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayerAddress\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfBlcokHash\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"betYours\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blcokHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowestOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"Game01","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000691db8","Library":"","SwarmSource":"bzzr://b4672b88db4e3acd30772b8395fcdf64192d39762cac65405745ba95ad7f2ea6"}]}