{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n  event OwnershipTransferred (address indexed _from, address indexed _to);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public{\r\n    owner = msg.sender;\r\n    OwnershipTransferred(address(0), owner);\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n    OwnershipTransferred(owner,newOwner);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Token\r\n * @dev API interface for interacting with the Token contract \r\n */\r\ninterface Token {\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n  function balanceOf(address _owner) constant external returns (uint256 balance);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool); \r\n}\r\n\r\n/**\r\n * @title RedeemAFTKTokenCampaign Ver 1.0 - Sept 17, 2018\r\n * @dev This contract can be used for AFTK token redumption. \r\n *       Admin will setBalance for users who can redeem tokens.\r\n */\r\ncontract RedeemAFTKTokenCampaign is Ownable {\r\n\r\n  Token token;\r\n  mapping(address => uint256) public redeemBalanceOf;\r\n  event BalanceSet(address indexed beneficiary, uint256 value);\r\n  event Redeemed(address indexed beneficiary, uint256 value);\r\n  event BalanceCleared(address indexed beneficiary, uint256 value);\r\n\r\n  function RedeemAFTKTokenCampaign() public {\r\n      address _tokenAddr = 0x7Fa2F70bD4C4120fDD539EBd55c04118ba336b9E;\r\n      token = Token(_tokenAddr);\r\n  }\r\n\r\nfunction setBalances(address[] dests, uint256[] values) onlyOwner public {\r\n    uint256 i = 0; \r\n    while (i < dests.length){\r\n        if(dests[i] != address(0)) \r\n        {\r\n            uint256 toSend = values[i] * 10**18;\r\n            redeemBalanceOf[dests[i]] += toSend;\r\n            BalanceSet(dests[i],values[i]);\r\n        }\r\n        i++;\r\n    }\r\n  }\r\n\r\n  function redeem(uint256 quantity) public {\r\n      uint256 baseUnits = quantity * 10**18;\r\n      uint256 senderEligibility = redeemBalanceOf[msg.sender];\r\n      uint256 tokensAvailable = token.balanceOf(this);\r\n      require(senderEligibility >= baseUnits);\r\n      require( tokensAvailable >= baseUnits);\r\n      if(token.transfer(msg.sender,baseUnits)){\r\n        redeemBalanceOf[msg.sender] -= baseUnits;\r\n        Redeemed(msg.sender,quantity);\r\n      }\r\n  }\r\n\r\n  function removeBalances(address[] dests, uint256[] values) onlyOwner public {\r\n    uint256 i = 0; \r\n    while (i < dests.length){\r\n        if(dests[i] != address(0)) \r\n        {\r\n            uint256 toRevoke = values[i] * 10**18;\r\n            if(redeemBalanceOf[dests[i]]>=toRevoke)\r\n            {\r\n                redeemBalanceOf[dests[i]] -= toRevoke;\r\n                BalanceCleared(dests[i],values[i]);\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n\r\n  }\r\n  \r\n  function getAvailableTokenCount() public view returns (uint256 balance)  {return token.balanceOf(this);} \r\n  /**\r\n  * @dev admin can destroy this contract\r\n  */\r\n  function destroy() onlyOwner public { uint256 tokensAvailable = token.balanceOf(this); require (tokensAvailable > 0); token.transfer(owner, tokensAvailable);  selfdestruct(owner);  } \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"removeBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableTokenCount\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BalanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BalanceCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"RedeemAFTKTokenCampaign","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://006324824caa35d0950e5c302517862b482f22a95c2dbe3300d7d8f5be0b39f2"}]}