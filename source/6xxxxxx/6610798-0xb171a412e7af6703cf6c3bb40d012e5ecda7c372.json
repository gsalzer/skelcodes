{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract ESSAdvance{\r\n    function airdrop(uint256 _airdropPrice,uint256 _ethPayment) public returns(uint256 _airdropAmount);\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function upgradeOwner(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract IterableMapping\r\n{\r\n  struct itmap\r\n  {\r\n    mapping(uint => IndexValue) data;\r\n    KeyFlag[] keys;\r\n    uint size;\r\n  }\r\n  struct IndexValue { uint keyIndex; uint value; }\r\n  struct KeyFlag { uint key; bool deleted; }\r\n  function insert(itmap storage self, uint key, uint value) internal returns (bool replaced)\r\n  {\r\n    uint keyIndex = self.data[key].keyIndex;\r\n    self.data[key].value = value;\r\n    if (keyIndex > 0)\r\n      return true;\r\n    else\r\n    {\r\n      keyIndex = self.keys.length++;\r\n      self.data[key].keyIndex = keyIndex + 1;\r\n      self.keys[keyIndex].key = key;\r\n      self.size++;\r\n      return false;\r\n    }\r\n  }\r\n  function remove(itmap storage self, uint key) internal returns (bool success)\r\n  {\r\n    uint keyIndex = self.data[key].keyIndex;\r\n    if (keyIndex == 0)\r\n      return false;\r\n    delete self.data[key];\r\n    self.keys[keyIndex - 1].deleted = true;\r\n    self.size --;\r\n  }\r\n  function contains(itmap storage self, uint key) internal view returns (bool)\r\n  {\r\n    return self.data[key].keyIndex > 0;\r\n  }\r\n  function iterate_start(itmap storage self) internal view returns (uint keyIndex)\r\n  {\r\n    return iterate_next(self, uint(-1));\r\n  }\r\n  function iterate_valid(itmap storage self, uint keyIndex) internal view returns (bool)\r\n  {\r\n    return keyIndex < self.keys.length;\r\n  }\r\n  function iterate_next(itmap storage self, uint keyIndex) internal view returns (uint r_keyIndex)\r\n  {\r\n    keyIndex++;\r\n    while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)\r\n      keyIndex++;\r\n    return keyIndex;\r\n  }\r\n  function iterate_get(itmap storage self, uint keyIndex) internal view returns (uint key, uint value)\r\n  {\r\n    key = self.keys[keyIndex].key;\r\n    value = self.data[key].value;\r\n  }\r\n}\r\n\r\n\r\ncontract Airdrop is IterableMapping,owned{\r\n\r\n    itmap validAddress;\r\n    function setValidAddress(uint idx,address addr) public onlyOwner{\r\n        insert(validAddress,idx,uint(addr));\r\n    }\r\n    function removeValidAddress(uint idx) public onlyOwner{\r\n        remove(validAddress,idx);\r\n    }\r\n    function getValidAddress(uint idx) public view returns(address){\r\n      return address(validAddress.data[idx].value);\r\n    }\r\n    function getValidAddressConfig() public view returns(uint[],address[]){\r\n        uint size = validAddress.size;\r\n        uint[] memory indexes = new uint[](size);\r\n        address[] memory addresses = new address[](size);\r\n        uint idx = 0;\r\n        for (uint i = iterate_start(validAddress); iterate_valid(validAddress, i); i = iterate_next(validAddress, i))\r\n        {\r\n            uint _index;\r\n            uint _address;\r\n            (_index,_address) = iterate_get(validAddress, i);\r\n            indexes[idx] = _index;\r\n            addresses[idx] = address(_address);\r\n            idx++;\r\n        }\r\n        return (indexes,addresses);\r\n    }\r\n    modifier onlyValidAddress() {\r\n      bool valid = false;\r\n      if(msg.sender == owner)\r\n        valid = true;\r\n      else\r\n      {\r\n        for (uint i = iterate_start(validAddress); iterate_valid(validAddress, i); i = iterate_next(validAddress, i))\r\n        {\r\n            uint _address;\r\n            (,_address) = iterate_get(validAddress, i);\r\n            if(msg.sender==address(_address))\r\n            {\r\n              valid = true;\r\n              break;\r\n            }\r\n        }\r\n      }\r\n      require(valid);\r\n      _;\r\n    }\r\n    address public essTokenAddr = 0xAbBE84B4ae1803FE74452BdC9Fc2407c4b8d2eE5;\r\n    function airdrop(uint256 _airdropPrice,uint256 _ethPayment) public onlyValidAddress returns(uint256 _airdropAmount){\r\n        return ESSAdvance(essTokenAddr).airdrop(_airdropPrice,_ethPayment);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"essTokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setValidAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getValidAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_airdropPrice\",\"type\":\"uint256\"},{\"name\":\"_ethPayment\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[{\"name\":\"_airdropAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"removeValidAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"upgradeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getValidAddressConfig\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Airdrop","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://536e98df58c8b242df3c9d51f80de9a019b570bce9796bf6473231e1b8f9a58e"}]}