{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n    function approve(address spender, uint256 tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n}\r\n\r\ncontract GGCPool{\r\n    // ------------------------------------------------------------------------\r\n    // Events\r\n    // ------------------------------------------------------------------------\r\n    //typeNo WL 1, ACL 2, BL 3, FeeL 4, TransConL 5, GGCPool 6, GGEPool 7  \r\n    event ListLog(address addr, uint8 indexed typeNo, bool active);\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    event Deposit(address indexed sender, uint value);\r\n\r\n    bool public transContractLocked = true;\r\n    address public owner;\r\n    address private ownerContract = address(0x0);\r\n    mapping(address => bool) public allowContractList;\r\n    mapping(address => bool) public blackList;\r\n    string public symbol;\r\n    string public  name;\r\n    \r\n    constructor() public {\r\n        symbol = \"GGCPool\";\r\n        name = \"GramGold Coin Pool\";\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function AssignGGCPoolOwner(address _ownerContract) \r\n    public \r\n    onlyOwner \r\n    notNull(_ownerContract) \r\n    {\r\n        ownerContract = _ownerContract;\r\n        emit OwnershipTransferred(owner, ownerContract);\r\n        owner = ownerContract;\r\n    }\r\n\r\n    function isContract(address _addr) \r\n    private \r\n    view \r\n    returns (bool) \r\n    {\r\n        if(allowContractList[_addr] || !transContractLocked){\r\n            return false;\r\n        }\r\n\r\n        uint256 codeLength = 0;\r\n\r\n        assembly {\r\n            codeLength := extcodesize(_addr)\r\n        }\r\n        \r\n        return (codeLength > 0);\r\n    }\r\n\r\n    function() \r\n    payable\r\n    {\r\n        if (msg.value > 0)\r\n            emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function tokenFallback(address from_, uint256 value_, bytes data_) \r\n    external \r\n    {\r\n        from_;\r\n        value_;\r\n        data_;\r\n        revert();\r\n    }\r\n    \r\n    // ------------------------------------------------------------------------\r\n    // Modifiers\r\n    // ------------------------------------------------------------------------\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier notNull(address _address) {\r\n        require(_address != address(0x0));\r\n        _;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // onlyOwner API\r\n    // ------------------------------------------------------------------------\r\n    function transferAnyERC20Token(address _tokenAddr, address _to, uint256 _amount) \r\n    public \r\n    onlyOwner \r\n    returns (bool success) \r\n    {\r\n        require(!blackList[_tokenAddr]);\r\n        require(!blackList[_to]);       \r\n        require(!isContract(_to));\r\n        return ERC20Interface(_tokenAddr).transfer(_to, _amount);\r\n    }\r\n\r\n    function reclaimEther(address _addr) \r\n    external \r\n    onlyOwner \r\n    {\r\n        assert(_addr.send(this.balance));\r\n    }\r\n    \r\n    function addBlacklist(address _addr) public notNull(_addr) onlyOwner {\r\n        blackList[_addr] = true; \r\n        emit ListLog(_addr, 3, true);\r\n    }\r\n    \r\n    function delBlackList(address _addr) public notNull(_addr) onlyOwner {\r\n        delete blackList[_addr];\r\n        emit ListLog(_addr, 3, false);\r\n    }\r\n\r\n    function setTransContractLocked(bool _lock) \r\n    public \r\n    onlyOwner \r\n    {\r\n        transContractLocked = _lock;    \r\n        emit ListLog(address(0x0), 5, _lock); \r\n    }   \r\n\r\n    function addAllowContractList(address _addr) \r\n    public \r\n    notNull(_addr) \r\n    onlyOwner \r\n    {\r\n        allowContractList[_addr] = true; \r\n        emit ListLog(_addr, 2, true);\r\n    }\r\n  \r\n    function delAllowContractList(address _addr) \r\n    public \r\n    notNull(_addr) \r\n    onlyOwner \r\n    {\r\n        delete allowContractList[_addr];\r\n        emit ListLog(_addr, 2, false);\r\n    }\r\n    \r\n    function changeName(string _name, string _symbol) \r\n    public\r\n    onlyOwner\r\n    {\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Public view API\r\n    // ------------------------------------------------------------------------\r\n    function getGGCTokenBalance(address _tokenAddr) \r\n    public\r\n    view \r\n    returns (uint256){\r\n\r\n        return ERC20Interface(_tokenAddr).balanceOf(this);\r\n    }\r\n\r\n    function getTransContractLocked() \r\n    public \r\n    view \r\n    returns (bool) \r\n    { \r\n        return transContractLocked;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"delAllowContractList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"delBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowContractList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerContract\",\"type\":\"address\"}],\"name\":\"AssignGGCPoolOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addAllowContractList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lock\",\"type\":\"bool\"}],\"name\":\"setTransContractLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addBlacklist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"getGGCTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transContractLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from_\",\"type\":\"address\"},{\"name\":\"value_\",\"type\":\"uint256\"},{\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTransContractLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"typeNo\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ListLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}]","ContractName":"GGCPool","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://27347be9d88b8cbc01f0ffcefd95ca0b49ce6373fd6d0ead15955af36dc81422"}]}