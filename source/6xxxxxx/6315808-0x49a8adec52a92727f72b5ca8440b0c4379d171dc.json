{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary AddressUtilsLib {\r\n\r\n    /**\r\n    * Returns whether there is code in the target address\r\n    * @dev This function will return false if invoked during the constructor of a contract,\r\n    *  as the code is not actually created until after the constructor finishes.\r\n    * @param _addr address address to check\r\n    * @return bool whether there is code in the target address\r\n    */\r\n    function isContract(address _addr) internal view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(_addr)\r\n        }\r\n\r\n        return size > 0;\r\n    }\r\n    \r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMathLib {\r\n\r\n    /**\r\n    * @dev uint256乘法\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev 除法\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(0==b);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev 减法运算\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev 加法运算\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev 64bit最大数\r\n    */\r\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n    * @dev 64bit最小数\r\n    */\r\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n    * @dev uint256最大数\r\n    */\r\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n    * @dev uint256最小数\r\n    */\r\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n    * account.\r\n    */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    \r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0));\r\n        emit    OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\npragma solidity ^0.4.24;\r\ncontract ERC20Basic {\r\n    /**\r\n    * @dev 传输事件\r\n    */\r\n    event Transfer(address indexed _from,address indexed _to,uint256 value);\r\n\r\n    //发送总量  \r\n    uint256 public  totalSupply;\r\n\r\n    /**\r\n    *@dev 获取名称\r\n     */\r\n    function name() public view returns (string);\r\n\r\n    /**\r\n    *@dev 获取代币符号\r\n     */\r\n    function symbol() public view returns (string);\r\n\r\n    /**\r\n    *@dev 支持几位小数\r\n     */\r\n    function decimals() public view returns (uint8);\r\n\r\n    /**\r\n    *@dev 获取发行量\r\n     */\r\n    function totalSupply() public view returns (uint256){\r\n        return totalSupply;\r\n    }\r\n\r\n    /**\r\n    * @dev 获取余额\r\n    */\r\n    function balanceOf(address _owner) public view returns (uint256);\r\n\r\n    /**\r\n    * @dev 转移代币\r\n    * @param _to 转移地址\r\n    * @param _value 数量\r\n    */\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\npragma solidity ^0.4.24;\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    /**\r\n    * @dev 授予事件\r\n    */\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n     /**\r\n    * @dev 查看_owner地址还可以调用_spender地址多少代币\r\n    * @param _owner 当前\r\n    * @param _spender 地址\r\n    * @return uint256 可调用的代币数\r\n    */\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n\r\n    /**\r\n    * @dev approve批准之后，当前帐号从_from账户转移_value代币\r\n    * @param _from 账户转移\r\n    * @param _to 转移地址\r\n    * @param _value 数量\r\n    */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n\r\n    /**\r\n    * @dev 授权地批准_spender账户从自己的账户转移_value个代币\r\n    * @param _spender 授权地址\r\n    * @param _value 授权数量\r\n    */\r\n    function approve(address _spender, uint256 _value) public returns (bool);\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Basic token\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n    //SafeMathLib接口\r\n    using SafeMathLib for uint256;\r\n    using AddressUtilsLib for address;\r\n    \r\n    //余额地址\r\n    mapping(address => uint256) public balances;\r\n\r\n    /**\r\n    * @dev 指定地址传输\r\n    * @param _from 传送地址\r\n    * @param _to 传送地址\r\n    * @param _value 传送数量\r\n    */\r\n    function _transfer(address _from,address _to, uint256 _value) public returns (bool){\r\n        require(!_from.isContract());\r\n        require(!_to.isContract());\r\n        require(0 < _value);\r\n        require(balances[_from] > _value);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev 指定地址传输\r\n    * @param _to 传送地址\r\n    * @param _value 传送数量\r\n    */\r\n    function transfer(address _to, uint256 _value) public returns (bool){\r\n        return   _transfer(msg.sender,_to,_value);\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n    * @dev 查询地址余额\r\n    * @param _owner 查询地址 \r\n    * @return uint256 返回余额\r\n    */\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\npragma solidity ^0.4.24;\r\n\r\ncontract UCBasic is ERC20,BasicToken{\r\n    //\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\r\n    /**\r\n    * @dev approve批准之后，调用transferFrom函数来转移token\r\n    * @param _from 当前用户token\r\n    * @param _to 转移地址\r\n    * @param _value 数量\r\n    */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool){\r\n        //检测传输值是否为空\r\n        require(0 < _value);\r\n        //检测地址是否有效\r\n        require(address(0) != _from && address(0) != _to);\r\n        //检测是否有余额可以支付\r\n        require(allowed[_from][msg.sender] > _value);\r\n        //检测账户余额是否够用\r\n        require(balances[_from] > _value);\r\n        //检测地址是否有效\r\n        require(!_from.isContract());\r\n        //检测地址是否有效\r\n        require(!_to.isContract());\r\n\r\n        //余额\r\n        uint256 _allowance = allowed[_from][msg.sender];\r\n\r\n        balances[_to] = balances[_to].add(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev 批准另一个人address来交易指定的代币\r\n    * @dev 0 address 表示没有授权的地址\r\n    * @dev 给定的时间内，一个token只能有一个批准的地址\r\n    * @dev 只有token的持有者或者授权的操作人才可以调用\r\n    * @param _spender 指定的地址\r\n    * @param _value uint256 可用余额\r\n    */\r\n    function approve(address _spender, uint256 _value) public returns (bool){\r\n        require(address(0) != _spender);\r\n        require(!_spender.isContract());\r\n        require(msg.sender != _spender);\r\n        require(0 != _value);\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n   /**\r\n    * @dev 查看_owner地址还可以调用_spender地址多少代币\r\n    * @param _owner 当前\r\n    * @param _spender 地址\r\n    * @return uint256 可调用的代币数\r\n    */\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        //检测地址是否有效\r\n        require(!_owner.isContract());\r\n        //检测地址是否有效\r\n        require(!_spender.isContract());\r\n\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\npragma solidity ^0.4.24;\r\n\r\ncontract STOToken is UCBasic,Ownable{\r\n    using SafeMathLib for uint256;\r\n    //名称\r\n    string constant public tokenName = \"STOCK\";\r\n    //标识\r\n    string constant public tokenSymbol = \"STO\";\r\n    //发行量30亿\r\n    uint256 constant public totalTokens = 30*10000*10000;\r\n    //小数位\r\n    uint8 constant public  totalDecimals = 18;   \r\n    //版本号\r\n    string constant private version = \"20180908\";\r\n    //接收以太坊地址\r\n    address private wallet;\r\n\r\n    constructor() public {\r\n        totalSupply = totalTokens*10**uint256(totalDecimals);\r\n        balances[msg.sender] = totalSupply;\r\n        wallet = msg.sender;\r\n    }\r\n\r\n    /**\r\n    *@dev 获取名称\r\n     */\r\n    function name() public view returns (string){\r\n        return tokenName;\r\n    }\r\n\r\n    /**\r\n    *@dev 获取代币符号\r\n     */\r\n    function symbol() public view returns (string){\r\n        return tokenSymbol;\r\n    }\r\n\r\n    /**\r\n    *@dev 支持几位小数\r\n     */\r\n    function decimals() public view returns (uint8){\r\n        return totalDecimals;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"STOToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://70851000963156452e472ac6f57e56ade2d6df25f33c061be8a19e4d7bdb82a0"}]}