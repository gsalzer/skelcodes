{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract MultiSigWallet {\r\n\r\n    event Deposit(address indexed sender, uint value);\r\n    event SubmitTransaction(address indexed sender,address indexed destination);\r\n    event ExecuteTransaction(address indexed from, uint value);\r\n\r\n    mapping (address => bool) public isOwner;\r\n    mapping (address => address) public ownerCommitedAddresses;\r\n    address[] public owners;\r\n\r\n    modifier ownerExists(address owner) {\r\n        if (!isOwner[owner])\r\n            throw;\r\n        _;\r\n    }\r\n\r\n    modifier notNull(address _address) {\r\n        if (_address == 0)\r\n            throw;\r\n        _;\r\n    }\r\n\r\n    modifier balanceGt0(address _address) {\r\n        if (this.balance == 0)\r\n            throw;\r\n        _;\r\n    }\r\n\r\n    /// @dev Fallback function allows to deposit ether.\r\n    function()\r\n        payable\r\n    {\r\n        if (msg.value > 0)\r\n            Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    /*\r\n     * Public functions\r\n     */\r\n    function MultiSigWallet()\r\n        public\r\n    { \r\n        owners = [0xC4a1D8CcAEdD700d2d450903b50401c0bC360A4E,0xCC7A9B1f9d84b94e1452db96eDacd9b0406ae051];\r\n        for (uint i=0; i<owners.length; i++) {\r\n            isOwner[owners[i]] = true;\r\n        }\r\n    }\r\n\r\n    /// Allows owner to submit a destination address.\r\n    /// @param destination Transaction target address.\r\n    function submitTransaction(address destination)\r\n        public\r\n        ownerExists(msg.sender)\r\n        notNull(destination)\r\n        balanceGt0(this)\r\n    {\r\n        ownerCommitedAddresses[msg.sender] = destination;\r\n        executeTransaction(destination);\r\n        SubmitTransaction(msg.sender,destination);\r\n    }\r\n\r\n    /// Allows owner to delete commited destination address\r\n    function deleteTransaction()\r\n        public\r\n        ownerExists(msg.sender)\r\n    {\r\n        delete ownerCommitedAddresses[msg.sender];\r\n    }\r\n\r\n    /*\r\n     * Internal functions\r\n     */\r\n    /// @param destination Transaction target address.\r\n    function executeTransaction(address destination)\r\n        internal\r\n    {\r\n        if(canExecute(destination)){\r\n            uint amount = this.balance;\r\n            destination.send(amount);\r\n            setOwnerAddressNull();\r\n            ExecuteTransaction(this,amount);\r\n        }\r\n    }\r\n\r\n    /// @param destination Transaction target address.\r\n    function canExecute(address destination)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        bool canPass = true;\r\n        for (uint i=0; i<owners.length; i++) {\r\n            if(( ownerCommitedAddresses[owners[i]]== 0) || destination != ownerCommitedAddresses[owners[i]]){\r\n                 canPass = false;\r\n            }\r\n        }\r\n        return canPass;\r\n    }\r\n\r\n    function setOwnerAddressNull()\r\n         internal\r\n    {\r\n        for (uint i=0; i<owners.length; i++) {\r\n            delete ownerCommitedAddresses[owners[i]];\r\n        }\r\n    }\r\n\r\n    /*\r\n    * Web3 call functions\r\n    */\r\n\r\n    function getOwners()\r\n        public\r\n        constant\r\n        returns (address[])\r\n    {\r\n        return owners;\r\n    }\r\n\r\n    function getOwnerSubmitAddress(address owner)\r\n        public\r\n        constant\r\n        returns (address)\r\n    {\r\n        return ownerCommitedAddresses[owner];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerSubmitAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerCommitedAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"SubmitTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"}]","ContractName":"MultiSigWallet","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4a5bf46cc06fba10d2022ab3d4e9cffa2621e5438156f9cc6252efb93d2aa804"}]}