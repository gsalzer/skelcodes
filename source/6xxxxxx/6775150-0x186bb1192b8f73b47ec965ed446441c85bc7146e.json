{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256 c) \r\n    {\r\n        c = a + b;\r\n        require(c >= a, \"SafeMath add failed\");\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract RandomNumber {\r\n\tusing SafeMath for *;\r\n\r\n\taddress _owner;\r\n\tuint24 private _number;\r\n\tuint256 private _id;\r\n    event onNewNumber\r\n    (\r\n        uint24 number,\r\n        uint256 id\r\n    );\r\n\t\r\n\tconstructor() \r\n\t\tpublic \r\n\t{\r\n\t\t_owner = msg.sender;\r\n\t\t_id = 0;\r\n\t\t_number = 0;\r\n\t}\r\n\t\r\n\tfunction getNumber() \r\n\t\tpublic \r\n\t\tview \r\n\t\treturns (uint24) \r\n\t{\r\n\t\treturn _number;\r\n\t}\r\n\r\n\tfunction getId() \r\n\t\tpublic \r\n\t\tview \r\n\t\treturns (uint256) \r\n\t{\r\n\t\treturn _id;\r\n\t}\r\n\r\n\r\n\tfunction genNumber(uint256 id) \r\n\t\tpublic \r\n\t\treturns (uint24) \r\n\t{\r\n\t\t_id = id;\r\n\t\t_number = random();\r\n\t\temit RandomNumber.onNewNumber (\r\n\t\t\t_number,\r\n\t\t\t_id\r\n\t\t);\r\n\t\treturn _number;\r\n\t}\r\n\r\n    function random()  \r\n    \tprivate \r\n    \tview \r\n    \treturns (uint24)\r\n    {\r\n        uint256 randnum = uint256(keccak256(abi.encodePacked(\r\n            \r\n            (block.timestamp).add\r\n            (block.difficulty).add\r\n            ((uint256(keccak256(abi.encodePacked(block.coinbase)))) / (now)).add\r\n            (block.gaslimit).add\r\n            ((uint256(keccak256(abi.encodePacked(msg.sender)))) / (now)).add\r\n            (block.number)\r\n            \r\n        )));\r\n        randnum = (randnum%1000000);\r\n        if(randnum<100000 || randnum>999999){\r\n            random();\r\n        }\r\n        else return uint24(randnum);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"genNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"number\",\"type\":\"uint24\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"onNewNumber\",\"type\":\"event\"}]","ContractName":"RandomNumber","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://80f75f1dcd83a3da117af54ff913d969e6cf4884afc458e64ed4c6fd97f910ef"}]}