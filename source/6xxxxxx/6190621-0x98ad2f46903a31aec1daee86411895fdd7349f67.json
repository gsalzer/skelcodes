{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner;\r\n\r\n    /**\r\n     * The address whcih deploys this contrcat is automatically assgined ownership.\r\n     * */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Functions with this modifier can only be executed by the owner of the contract. \r\n     * */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    event OwnershipTransferred(address indexed from, address indexed to);\r\n\r\n    /**\r\n    * Transfers ownership to new Ethereum address. This function can only be called by the \r\n    * owner.\r\n    * @param _newOwner the address to be granted ownership.\r\n    **/\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != 0x0);\r\n        OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract TokenInterface {\r\n    function balanceOf(address _who) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\n\r\n\r\ncontract Airdrop is Ownable {\r\n    \r\n    TokenInterface token;\r\n    \r\n    event NewTokenAddress(address indexed ERC20_ADDRESS);\r\n    event TokensWithdrawn(address indexed ERC20_ADDRESS, uint256 TOTAL);\r\n    event AirdropInvoked();\r\n    \r\n    /**\r\n     * Allows the owner of the contract to change the token to be airdropped\r\n     * \r\n     * @param _newTokenAddress The address of the token\r\n     * @return True if function executes, false otherwise\r\n     * */\r\n    function setTokenAddress(address _newTokenAddress) public onlyOwner returns(bool) {\r\n        require(_newTokenAddress != address(token));\r\n        require(_newTokenAddress != address(0));\r\n        token = TokenInterface(_newTokenAddress);\r\n        NewTokenAddress(_newTokenAddress);\r\n        return true;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Allows the owner of the contract to airdrop tokens using multiple values \r\n     * \r\n     * @param _addrs The array of recipient addresses\r\n     * @param _values The array of values (i.e., tokens) each corresponding address \r\n     * will receive.\r\n     * @return True if function executes, false otherwise\r\n     * */\r\n    function multiValueAirDrop(address[] _addrs, uint256[] _values) public onlyOwner returns(bool) {\r\n\t    require(_addrs.length == _values.length && _addrs.length <= 100);\r\n        for (uint i = 0; i < _addrs.length; i++) {\r\n            if (_addrs[i] != 0x0 && _values[i] > 0) {\r\n                token.transfer(_addrs[i], _values[i]);  \r\n            }\r\n        }\r\n        AirdropInvoked();\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows the owner of the contract to airdrop tokens of a single value\r\n     * \r\n     * @param _addrs The array of recipient addresses\r\n     * @param _value The amount of tokens each address will receive\r\n     * @return True if function executes, false otherwise\r\n     * */\r\n    function singleValueAirDrop(address[] _addrs, uint256 _value) public onlyOwner returns(bool){\r\n\t    require(_addrs.length <= 100 && _value > 0);\r\n        for (uint i = 0; i < _addrs.length; i++) {\r\n            if (_addrs[i] != 0x0) {\r\n                token.transfer(_addrs[i], _value);\r\n            }\r\n        }\r\n        AirdropInvoked();\r\n        return true;\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Allows the owner of the contract to withdraw tokens from the contract\r\n     * \r\n     * @param _addressOfToken The address of the tokens to be withdrawn \r\n     * @return True if function executes, false otherwise\r\n     * */\r\n    function withdrawTokens(address _addressOfToken) public onlyOwner returns(bool) {\r\n        TokenInterface tkn = TokenInterface(_addressOfToken);\r\n        if(tkn.balanceOf(address(this)) == 0) {\r\n            revert();\r\n        }\r\n        TokensWithdrawn(_addressOfToken, tkn.balanceOf(address(this)));\r\n        tkn.transfer(owner, tkn.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressOfToken\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"singleValueAirDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiValueAirDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ERC20_ADDRESS\",\"type\":\"address\"}],\"name\":\"NewTokenAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ERC20_ADDRESS\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"TOTAL\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AirdropInvoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Airdrop","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b16898a8c131035cabdda2d79f39fb248b49edf8163c34ac70cff4cc7127e66e"}]}