{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint256 amount) external;\r\n    function balanceOf(address _address) external returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ZNTZLTDistributionTest is Ownable {\r\n    \r\n    bool public isLive = true;\r\n    string public name = \"ZNT-ZLT Distribution Test\";\r\n    address public beneficiary;\r\n    uint256 public rateOfZNT = 500000;\r\n    uint256 public rateOfZLT = 3000;\r\n    uint256 public amountEthRaised = 0;\r\n    uint256 public availableZNT;\r\n    uint256 public availableZLT;\r\n    token public tokenZNT;\r\n    token public tokenZLT;\r\n    \r\n    mapping(address => uint256) public donationOf;\r\n    \r\n    constructor() public {\r\n        \r\n        beneficiary = msg.sender;\r\n    }\r\n\r\n    // Callback function, distribute tokens to sender when ETH donation is recieved\r\n    function () payable public {\r\n        \r\n        require(isLive);\r\n        uint256 donation = msg.value;\r\n        uint256 amountZNT = donation * rateOfZNT;\r\n        uint256 amountZLT = donation * rateOfZLT;\r\n        require(availableZNT >= amountZNT && availableZLT >= amountZLT);\r\n        donationOf[msg.sender] += donation;\r\n        amountEthRaised += donation;\r\n        availableZNT -= amountZNT;\r\n        availableZLT -= amountZLT;\r\n        tokenZNT.transfer(msg.sender, amountZNT);\r\n        tokenZLT.transfer(msg.sender, amountZLT);\r\n        beneficiary.transfer(donation);\r\n    }\r\n    \r\n    // Halts or resumes the distribution process\r\n    function toggleIsLive() public onlyOwner {\r\n        if(isLive) {\r\n            isLive = false;\r\n        } else {\r\n            isLive = true;\r\n        }\r\n    }\r\n    \r\n\r\n    // Withdraw available token in this contract\r\n    function withdrawAvailableToken(address _address, uint256 amountZNT, uint256 amountZLT) public onlyOwner {\r\n        require(availableZNT >= amountZNT && availableZLT >= amountZLT);\r\n        availableZNT -= amountZNT;\r\n        availableZLT -= amountZLT;\r\n        tokenZNT.transfer(_address, amountZNT);\r\n        tokenZLT.transfer(_address, amountZLT);\r\n    }\r\n    \r\n    // Set token rate per ETH donation/contribution\r\n    function setTokensPerEth(uint256 rateZNT, uint256 rateZLT) public onlyOwner {\r\n        \r\n        rateOfZNT = rateZNT;\r\n        rateOfZLT = rateZLT;\r\n    }\r\n    \r\n    // Set token contract addresses of tokens involved in distribution\r\n    function setTokenReward(address _addressZNT, address _addressZLT) public onlyOwner {\r\n        \r\n        tokenZNT = token(_addressZNT);\r\n        tokenZLT = token(_addressZLT);\r\n        setAvailableToken();\r\n    }\r\n    \r\n    // Set the available token balance of this contract\r\n    function setAvailableToken() public onlyOwner {\r\n        \r\n        availableZNT = tokenZNT.balanceOf(this);\r\n        availableZLT = tokenZLT.balanceOf(this);\r\n    }\r\n    \r\n    // Set the available token balance of this contract manually\r\n    function setAvailableTokenManually(uint256 amountZNT, uint256 amountZLT) public onlyOwner {\r\n        \r\n        availableZNT = amountZNT;\r\n        availableZLT = amountZLT;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateOfZLT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateOfZNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setAvailableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"amountZNT\",\"type\":\"uint256\"},{\"name\":\"amountZLT\",\"type\":\"uint256\"}],\"name\":\"withdrawAvailableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleIsLive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountEthRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressZNT\",\"type\":\"address\"},{\"name\":\"_addressZLT\",\"type\":\"address\"}],\"name\":\"setTokenReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amountZNT\",\"type\":\"uint256\"},{\"name\":\"amountZLT\",\"type\":\"uint256\"}],\"name\":\"setAvailableTokenManually\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rateZNT\",\"type\":\"uint256\"},{\"name\":\"rateZLT\",\"type\":\"uint256\"}],\"name\":\"setTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenZNT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenZLT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"donationOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableZLT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableZNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ZNTZLTDistributionTest","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a669d906f00c151410a07da49e213622e94b6e304282a1508a9e112b713be447"}]}