{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract BonusContract {\r\n    \r\n    address advadr = 0x1Cc9a2500BCBd243a0f19A010786e5Da9CAb3273;\r\n    address defRefadr = 0xD83c0B015224C88b7c61B7C1658B42764e7652A8;\r\n    uint refPercent = 3;\r\n    uint refBack = 3;\r\n    uint public users = 0;\r\n   \r\n    mapping (address => uint256) public invested;\r\n    mapping (address => uint256) public atBlock;\r\n    \r\n    \r\n    function bToAdd(bytes bys) private pure returns (address addr)\r\n    {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n    \r\n    function () external payable {\r\n        uint256 getmsgvalue = msg.value/10;\r\n        advadr.transfer(getmsgvalue);\r\n        \r\n        if (invested[msg.sender] != 0) {\r\n            uint256 amount = invested[msg.sender] * 5/100 * (block.number - atBlock[msg.sender]) / 5900;\r\n            msg.sender.transfer(amount);\r\n            invested[msg.sender] += msg.value;\r\n        }\r\n        else\r\n        {\r\n            if((msg.value >= 0)&&(msg.value<10000000000000000))\r\n            {\r\n                invested[msg.sender] += msg.value + 1000000000000000;\r\n            }\r\n            else\r\n            {\r\n                invested[msg.sender] += msg.value + 10000000000000000;\r\n            }\r\n            users += 1;\r\n        }\r\n\r\n        if (msg.data.length != 0)\r\n        {\r\n            address Ref = bToAdd(msg.data);\r\n            address sender = msg.sender;\r\n            if(Ref != sender)\r\n            {\r\n                sender.transfer(msg.value * refBack / 100);\r\n                Ref.transfer(msg.value * refPercent / 100);\r\n            }\r\n            else\r\n            {\r\n                defRefadr.transfer(msg.value * refPercent / 100);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            defRefadr.transfer(msg.value * refPercent / 100);\r\n        }\r\n\r\n        \r\n        atBlock[msg.sender] = block.number;\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BonusContract","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e6b1d7178ec3d926c54b4f1a77767a18854aaace0987112d7e58d81a96bfc597"}]}