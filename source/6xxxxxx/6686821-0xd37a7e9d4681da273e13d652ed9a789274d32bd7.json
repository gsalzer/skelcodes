{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface IERC20Token {                                     \r\n    function balanceOf(address owner) external returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function decimals() external returns (uint256);\r\n}\r\n\r\ncontract LUPXSale {\r\n    IERC20Token public tokenContract ;  // the token being sold\r\n    address owner ;\r\n    uint256 public tokensSold ;\r\n    uint256 public LUPXPrice ;\r\n    \r\n    event sold(address buyer, uint256 amount) ;\r\n    event priceAdjusted(uint256 oldPrice, uint256 newPrice) ;\r\n    event endOfSale(uint256 timeStamp) ; \r\n\r\n    constructor(IERC20Token _tokenContract, uint256 LUPXperETH) public {\r\n        owner = msg.sender ;\r\n        tokenContract = _tokenContract ;\r\n        LUPXPrice = LUPXperETH ; \r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner) ; \r\n        _;\r\n    }\r\n\r\n    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0 ;\r\n        } else {\r\n            uint256 c = a * b ;\r\n            assert(c / a == b) ;\r\n            return c ;\r\n        }\r\n    }\r\n\r\n    function () public payable {\r\n        uint256 soldAmount = 0 ; \r\n        \r\n        if (msg.value <= 0.5 ether) {\r\n            soldAmount = safeMultiply(msg.value, LUPXPrice) ;\r\n        }\r\n        else {\r\n           soldAmount = safeMultiply(msg.value*2, LUPXPrice) ; \r\n        }\r\n\r\n        require(tokenContract.balanceOf(this) >= soldAmount) ;\r\n        tokenContract.transfer(msg.sender, soldAmount) ;\r\n        \r\n        tokensSold += soldAmount/10**18 ; \r\n        emit sold(msg.sender, soldAmount/10**18) ; \r\n        \r\n        require(LUPXPrice >= 500) ; \r\n        LUPXPrice -= 500 ; \r\n    }\r\n    \r\n    function withdrawETH() public  onlyOwner {  //withdraw ether from contract\r\n        msg.sender.transfer(address(this).balance) ;  \r\n    }\r\n\r\n    function endLUPXSale() public onlyOwner {             //only the owner can stop the sale\r\n        require(tokenContract.transfer(owner, tokenContract.balanceOf(this))) ;\r\n        msg.sender.transfer(address(this).balance) ;\r\n        emit endOfSale(now) ; \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"LUPXPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endLUPXSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"LUPXperETH\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"priceAdjusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"endOfSale\",\"type\":\"event\"}]","ContractName":"LUPXSale","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000049c67ae22c334d0123dd6dbdc44f5302e130a88b00000000000000000000000000000000000000000000000000000000000f4240","Library":"","SwarmSource":"bzzr://5b4e7e7317cbfab76211e13099a24f441f04ebb27b9a5cee39f6f1e4943ca46c"}]}