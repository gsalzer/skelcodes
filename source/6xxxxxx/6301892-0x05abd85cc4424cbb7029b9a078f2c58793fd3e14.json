{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\ncontract WyoMesh {\r\n\r\n    struct Device {\r\n        string name;\r\n        bool permissioned;\r\n        // last TX hash?\r\n        //more meta data\r\n    }\r\n    struct IPFS_Hash {\r\n        string ipfs_hash;\r\n        bool auditor_signed; //\r\n    }\r\n\r\n    // need a store of the last *transaction* that a device successfully submitted - so you get a list you can scan back in the contrac twith latest -> latest -1 -> ... original.\r\n\r\n    address public auditor;\r\n    mapping(address => Device) private devices;\r\n    IPFS_Hash[] ipfs_hashes;\r\n    uint hash_index;\r\n\r\n    /// Create a new Master and auditor with $(_maxHashes) different ipfs_hashes.\r\n    constructor(uint8 _maxHashes) public {\r\n        auditor = msg.sender;\r\n        ipfs_hashes.length = _maxHashes;\r\n        devices[msg.sender].permissioned = true;\r\n        hash_index = 0;\r\n    }\r\n\r\n    /// Give $(toDevice) the right to add data on this contract\r\n    /// May only be called by $(auditor).\r\n    function addDevice(address toDevice) public returns(bool){\r\n        if (msg.sender != auditor) return false;\r\n        devices[toDevice].permissioned = true;\r\n        return true;\r\n    }\r\n\r\n\r\n    /// Submit an IPFS_Hash\r\n    function submitHash(string newIPFS_Hash) public returns(bool){\r\n        if(!devices[msg.sender].permissioned || hash_index >= ipfs_hashes.length-1) return false;\r\n        ipfs_hashes[hash_index].ipfs_hash = newIPFS_Hash;\r\n        hash_index++;\r\n        return true;\r\n    }\r\n\r\n    /// Get a submited IPFS_Hash\r\n    function getHash(uint8 index_) public returns(string){\r\n        return ipfs_hashes[index_].ipfs_hash;\r\n    }\r\n\r\n    /// Sign-off on event as a known auditor\r\n    function signAudit(uint8 index_) public returns(bool){\r\n      if(msg.sender != auditor) return false;\r\n        ipfs_hashes[index_].auditor_signed = true;\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"index_\",\"type\":\"uint8\"}],\"name\":\"signAudit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auditor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toDevice\",\"type\":\"address\"}],\"name\":\"addDevice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index_\",\"type\":\"uint8\"}],\"name\":\"getHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newIPFS_Hash\",\"type\":\"string\"}],\"name\":\"submitHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_maxHashes\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"WyoMesh","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000010","Library":"","SwarmSource":"bzzr://a14c6750ff0a2fa5917deaa724874d7f1b867116da933a1d5153773a13262af1"}]}