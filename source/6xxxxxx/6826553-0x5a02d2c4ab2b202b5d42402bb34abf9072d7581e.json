{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\ncontract ChessMoney {\r\n \r\n    //CONSTANT\r\n    uint256 private maxTickets;\r\n    uint256 public ticketPrice; \r\n     \r\n    //LOTTO REGISTER\r\n    uint256 public lottoIndex;\r\n    uint256 lastTicketTime;\r\n    \r\n    //LOTTO VARIABLES\r\n\tuint8 _direction;\r\n    uint256 numtickets;\r\n    uint256 totalBounty;\r\n    \r\n    address worldOwner;   \r\n     \r\n    event NewTicket(address indexed fromAddress, bool success);\r\n    event LottoComplete(address indexed fromAddress, uint indexed lottoIndex, uint256 reward);\r\n    \r\n    /// Create a new Lotto\r\n    function ChessMoney() public \r\n    {\r\n        worldOwner = msg.sender; \r\n        \r\n        ticketPrice = 0.00064 * 10**18;\r\n        maxTickets = 320;\r\n        \r\n\t\t_direction = 0;\r\n        lottoIndex = 1;\r\n        lastTicketTime = 0;\r\n        \r\n        numtickets = 0;\r\n        totalBounty = 0;\r\n    }\r\n\r\n    \r\n    function getBalance() public view returns (uint256 balance)\r\n    {\r\n        balance = 0;\r\n        \r\n        if(worldOwner == msg.sender) balance = this.balance;\r\n        \r\n        return balance;\r\n    }\r\n    \r\n    \r\n\tfunction withdraw() public \r\n    {\r\n        require(worldOwner == msg.sender);  \r\n        \r\n\t\t//reset values\r\n        lottoIndex += 1;\r\n        numtickets = 0;\r\n        totalBounty = 0;\r\n\t\t\r\n\t\tworldOwner.transfer(this.balance); \r\n    }\r\n    \r\n    \r\n    function getLastTicketTime() public view returns (uint256 time)\r\n    {\r\n        time = lastTicketTime; \r\n        return time;\r\n    }\r\n    \r\n\t\r\n    function AddTicket() public payable \r\n    {\r\n        require(msg.value == ticketPrice); \r\n        require(numtickets < maxTickets);\r\n        \r\n\t\t//update bif\r\n\t\tlastTicketTime = now;\r\n        numtickets += 1;\r\n        totalBounty += ticketPrice;\r\n        bool success = numtickets == maxTickets;\r\n\t\t\r\n        NewTicket(msg.sender, success);\r\n        \r\n\t\t//check if winner\r\n        if(success) \r\n        {\r\n            PayWinner(msg.sender);\r\n        } \r\n    }\r\n    \r\n    \r\n    function PayWinner( address winner ) private \r\n    { \r\n        require(numtickets == maxTickets);\r\n        \r\n\t\t//calc reward\r\n        uint ownerTax = totalBounty / 10;\r\n        uint winnerPrice = totalBounty - ownerTax;\r\n        \r\n        LottoComplete(msg.sender, lottoIndex, winnerPrice);\r\n         \r\n\t\t//reset values\r\n        lottoIndex += 1;\r\n        numtickets = 0;\r\n        totalBounty = 0;\r\n\t\t\r\n\t\t//change max tickets to give unpredictability\r\n\t\tif(_direction == 0 && maxTickets < 10) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 20) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 30) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 40) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 50) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 60) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 70) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 80) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 90) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 100) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 110) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 120) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 130) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 140) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 150) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 160) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 170) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 180) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 190) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 200) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 210) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 220) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 230) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 240) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 250) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 260) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 270) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 280) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 290) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 300) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets < 310) maxTickets += 1;\r\n\t\tif(_direction == 1 && maxTickets > 320) maxTickets -= 1;\r\n\t\tif(_direction == 0 && maxTickets == 10) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 20) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 30) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 40) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 50) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 60) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 70) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 80) _direction = 0;\r\n \t\tif(_direction == 0 && maxTickets == 90) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 100) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 110) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 120) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 130) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 140) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 150) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 160) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 170) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 180) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 190) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 200) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 210) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 220) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 230) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 240) _direction = 0;\r\n \t\tif(_direction == 0 && maxTickets == 250) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 260) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 270) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 280) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 290) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 300) _direction = 0;\r\n\t\tif(_direction == 0 && maxTickets == 310) _direction = 1;\r\n\t\tif(_direction == 1 && maxTickets == 320) _direction = 0;\r\n\t      \r\n\r\n        \r\n\t\t//give real money\r\n        worldOwner.transfer(ownerTax);\r\n        winner.transfer(winnerPrice); \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastTicketTime\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lottoIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AddTicket\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"NewTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"lottoIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"LottoComplete\",\"type\":\"event\"}]","ContractName":"ChessMoney","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://df60ad60d9378f23ea047ec4ee775d6b145de96ec9a2d228280ca7ac5c4d537b"}]}