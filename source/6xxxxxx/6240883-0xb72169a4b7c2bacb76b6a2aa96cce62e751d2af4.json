{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\nlibrary SafeMathLib {\r\n    function times(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function minus(uint a, uint b) internal pure returns (uint) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function plus(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a && c >= b);\r\n        return c;\r\n    }\r\n}\r\n\r\nlibrary ERC20Lib {\r\n    using SafeMathLib for uint;\r\n\r\n    struct TokenStorage {\r\n        mapping (address => uint) balances;\r\n        mapping (address => mapping (address => uint)) allowed;\r\n        uint totalSupply;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n\r\n    function init(TokenStorage storage self, uint _initial_supply, address _owner) internal {\r\n        self.totalSupply = _initial_supply;\r\n        self.balances[_owner] = _initial_supply;\r\n    }\r\n\r\n\r\n    function transfer(TokenStorage storage self, address _to, uint _value) internal returns (bool success) {\r\n        self.balances[msg.sender] = self.balances[msg.sender].minus(_value);\r\n        self.balances[_to] = self.balances[_to].plus(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(TokenStorage storage self, address _from, address _to, uint _value) internal returns (bool success) {\r\n        var _allowance = self.allowed[_from][msg.sender];\r\n\r\n        self.balances[_to] = self.balances[_to].plus(_value);\r\n        self.balances[_from] = self.balances[_from].minus(_value);\r\n        self.allowed[_from][msg.sender] = _allowance.minus(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(TokenStorage storage self, address _owner) internal view returns (uint balance) {\r\n        return self.balances[_owner];\r\n    }\r\n\r\n    function approve(TokenStorage storage self, address _spender, uint _value) internal returns (bool success) {\r\n        self.allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(TokenStorage storage self, address _owner, address _spender) internal view returns (uint remaining) {\r\n        return self.allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\ncontract BpxToken {\r\n    using ERC20Lib for ERC20Lib.TokenStorage;\r\n\r\n    ERC20Lib.TokenStorage token;\r\n\r\n    string public name = \"BPX\";\r\n    string public symbol = \"BPX\";\r\n    uint8 public decimals = 18;\r\n    uint public INITIAL_SUPPLY = 1000000000;\r\n\r\n    function BpxToken() public {\r\n        // adding decimals to initial supply\r\n        var totalSupply = INITIAL_SUPPLY * 10 ** uint256(decimals);\r\n        // adding total supply to owner which could be msg.sender or specific address\r\n        token.init(totalSupply, 0xC117Cbb17593aa21f3043FEca20F5CCEA2262d28);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return token.totalSupply;\r\n    }\r\n\r\n    function balanceOf(address who) public view returns (uint) {\r\n        return token.balanceOf(who);\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint) {\r\n        return token.allowance(owner, spender);\r\n    }\r\n\r\n    function transfer(address to, uint value) public returns (bool ok) {\r\n        return token.transfer(to, value);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public returns (bool ok) {\r\n        return token.transferFrom(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) public returns (bool ok) {\r\n        return token.approve(spender, value);\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BpxToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://96b92fd31eaabf5abea29e231b7849619424ef21d16a495737dd08f955d99d88"}]}