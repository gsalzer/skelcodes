{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// File: contracts/libraries/MultiSend.sol\r\n\r\n/// @title Multi Send - Allows to batch multiple transactions into one.\r\n/// @author Nick Dodson - <nick.dodson@consensys.net>\r\n/// @author Gonçalo Sá - <goncalo.sa@consensys.net>\r\n/// @author Stefan George - <stefan@gnosis.pm>\r\ncontract MultiSend {\r\n\r\n    /// @dev Sends multiple transactions and reverts all if one fails.\r\n    /// @param transactions Encoded transactions. Each transaction is encoded as a \r\n    ///                     tuple(operation,address,uint256,bytes), where operation \r\n    ///                     can be 0 for a call or 1 for a delegatecall. The bytes \r\n    ///                     of all encoded transactions are concatenated to form the input.\r\n    function multiSend(bytes memory transactions)\r\n        public\r\n    {\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            let length := mload(transactions)\r\n            let i := 0x20\r\n            for { } lt(i, length) { } {\r\n                let operation := mload(add(transactions, i))\r\n                let to := mload(add(transactions, add(i, 0x20)))\r\n                let value := mload(add(transactions, add(i, 0x40)))\r\n                let dataLength := mload(add(transactions, add(i, 0x80)))\r\n                let data := add(transactions, add(i, 0xa0))\r\n                let success := 0\r\n                switch operation \r\n                case 0 { success := call(gas, to, value, data, dataLength, 0, 0) }\r\n                case 1 { success := delegatecall(gas, to, data, dataLength, 0, 0) }\r\n                if eq(success, 0) { revert(0, 0) }\r\n                i := add(i, add(0xa0, mul(div(add(dataLength, 0x1f), 0x20), 0x20)))\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiSend","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://55529ffd57fb786ebd29bdf4a75bcd260979e759eb1554476718086e47fb6106"}]}