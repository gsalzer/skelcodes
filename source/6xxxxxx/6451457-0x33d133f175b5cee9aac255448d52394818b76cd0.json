{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 _a, uint256 _b) pure internal returns (uint256) {\r\n        uint256 c = _a + _b;\r\n        assert(c >= _a && c >= _b);\r\n        \r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 _a, uint256 _b) pure internal returns (uint256) {\r\n        assert(_b <= _a);\r\n\r\n        return _a - _b;\r\n    }\r\n\r\n    function mul(uint256 _a, uint256 _b) pure internal returns (uint256) {\r\n        uint256 c = _a * _b;\r\n        assert(_a == 0 || c / _a == _b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 _a, uint256 _b) pure internal returns (uint256) {\r\n        assert(_b == 0);\r\n\r\n        return _a / _b;\r\n    }\r\n}\r\n\r\ninterface tokenRecipient {\r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;\r\n}\r\n\r\ncontract Token {\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public decimals;\r\n    uint256 public totalSupply;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool _success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool _success);\r\n    function approve(address _spender, uint256 _value) public returns (bool _success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract TrexCoin is Token {\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n    uint256 public maxSupply;\r\n    bool public stopped = false;\r\n\r\n    event Burn(address indexed from, uint256 value);\r\n    event Mint(address indexed to, uint256 value);\r\n    event Stop();\r\n    event Start();\r\n    event Rename(string name, string symbol);\r\n\r\n    modifier isOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier isRunning {\r\n        assert(!stopped);\r\n        _;\r\n    }\r\n\r\n    modifier isValidAddress {\r\n        assert(msg.sender != 0x0);\r\n        _;\r\n    }\r\n\r\n    modifier hasPayloadSize(uint256 size) {\r\n        assert(msg.data.length >= size + 4);\r\n        _;\r\n    }    \r\n\r\n    function TrexCoin(uint256 _totalSupply, uint256 _maxSupply, string _name, string _symbol, uint8 _decimals) public {\r\n        owner = msg.sender;\r\n        decimals = _decimals;\r\n        maxSupply = _maxSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        _mint(owner, _totalSupply);\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) private returns (bool _success) {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public isRunning isValidAddress hasPayloadSize(2 * 32) returns (bool _success) {\r\n        return _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public isRunning isValidAddress hasPayloadSize(3 * 32) returns (bool _success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        \r\n        return _transfer(_from, _to, _value);\r\n    }\r\n\r\n    function _approve(address _owner, address _spender, uint256 _value) private returns (bool _success) {\r\n        allowance[_owner][_spender] = _value;\r\n\r\n        emit Approval(_owner, _spender, _value);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public isRunning isValidAddress hasPayloadSize(2 * 32) returns (bool _success) {\r\n        return _approve(msg.sender, _spender, _value);\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public isRunning isValidAddress hasPayloadSize(4 * 32) returns (bool _success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (_approve(msg.sender, _spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function _burn(address _from, uint256 _value) private returns (bool _success) {\r\n        require(balanceOf[_from] >= _value);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n\r\n        emit Burn(_from, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _value) public isRunning isValidAddress hasPayloadSize(32) returns (bool _success) {\r\n        return _burn(msg.sender, _value);\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public isRunning isValidAddress hasPayloadSize(2 * 32) returns (bool _success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n\r\n        return _burn(_from, _value);\r\n    }\r\n\r\n    function _mint(address _to, uint256 _value) private {\r\n        require(_to != 0x0);\r\n        require(totalSupply + _value <= maxSupply);\r\n        if (_value > 0) {\r\n            totalSupply = totalSupply.add(_value);\r\n            balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n            emit Mint(_to, _value);\r\n        }\r\n    }\r\n\r\n    function mint(uint256 _value) public isOwner {\r\n        _mint(owner, _value);\r\n    }\r\n\r\n    function mintTo(address _to, uint256 _value) public isOwner {\r\n        _mint(_to, _value);\r\n    }\r\n\r\n    function start() public isOwner {\r\n        stopped = false;\r\n\r\n        emit Start();\r\n    }\r\n    \r\n    function stop() public isOwner {\r\n        stopped = true;\r\n\r\n        emit Stop();\r\n    }\r\n\r\n    function rename(string _name, string _symbol) public isOwner {\r\n        name = _name;\r\n        symbol = _symbol;\r\n\r\n        emit Rename(_name, _symbol);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"rename\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Start\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"Rename\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TrexCoin","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000362e2a1d696eccb1800000000000000000000000000000000000000000000000be4064fbcc1d7ea600000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000095472657820436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045452455800000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://bb1f7eafba02439bb77a92dcf4929a0e73ed0e492b0632cbc89df9aedd1989c3"}]}