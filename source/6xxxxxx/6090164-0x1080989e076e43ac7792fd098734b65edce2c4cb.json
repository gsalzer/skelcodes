{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n\r\ncontract owned {\r\n    constructor() public { owner = msg.sender; }\r\n\r\n    address owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n}\r\n\r\n\r\ncontract AddressManager is owned {\r\n\r\n    mapping (address => bool) _tankByAddress;\r\n\r\n    function setTank(address tankAddress) public onlyOwner {\r\n        _tankByAddress[tankAddress] = true;\r\n    }\r\n\r\n    function removeTank(address tankAddress) public onlyOwner {\r\n        _tankByAddress[tankAddress] = false;\r\n    }\r\n\r\n    function isTank(address tankAddress) public constant returns (bool) {\r\n        return _tankByAddress[tankAddress];\r\n    }\r\n}\r\n\r\n\r\ncontract Wallet {\r\n\r\n    address _addressManagerAddress;\r\n\r\n    constructor(address addressManagerAddress) public {\r\n        _addressManagerAddress = addressManagerAddress;\r\n    }\r\n\r\n    function () payable public {}\r\n\r\n    function transferEther(address toAddress, uint256 amount) public {\r\n        require(AddressManager(_addressManagerAddress).isTank(msg.sender));\r\n        toAddress.transfer(amount);\r\n    }\r\n\r\n    function transferToken(address token, address toAddress, uint256 amount) public {\r\n        require(AddressManager(_addressManagerAddress).isTank(msg.sender));\r\n        ERC20(token).transfer(toAddress, amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addressManagerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Wallet","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005bc5182b436d9f9f27d0dcad7dc113f624902e89","Library":"","SwarmSource":"bzzr://00e2026cca65124bf7ba0250af86316f3326c57d2c44a6a6ecffb9e92ec3945d"}]}