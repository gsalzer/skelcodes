{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n    interface ERC20 {\r\n        function transfer(address _beneficiary, uint256 _tokenAmount) external returns (bool);\r\n        function transferFromICO(address _to, uint256 _value) external returns(bool);\r\n    }\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract MainSale is Ownable {\r\n\r\n    using SafeMath for uint;\r\n\r\n    ERC20 public token;\r\n    \r\n    address reserve = 0x611200beabeac749071b30db84d17ec205654463;\r\n    address promouters = 0x2632d043ac8bbbad07c7dabd326ade3ca4f6b53e;\r\n    address bounty = 0xff5a1984fade92bfb0e5fd7986186d432545b834;\r\n\r\n    uint256 public constant decimals = 18;\r\n    uint256 constant dec = 10**decimals;\r\n\r\n    mapping(address=>bool) whitelist;\r\n\r\n    uint256 public startCloseSale = now; // start // 1.07.2018 10:00 UTC\r\n    uint256 public endCloseSale = 1532987999; // Monday, 30-Jul-18 23:59:59 UTC-2\r\n\r\n    uint256 public startStage1 = 1532988001; // Tuesday, 31-Jul-18 00:00:01 UTC-2\r\n    uint256 public endStage1 = 1533074399; // Tuesday, 31-Jul-18 23:59:59 UTC-2\r\n\r\n    uint256 public startStage2 = 1533074400; // Wednesday, 01-Aug-18 00:00:00 UTC-2\r\n    uint256 public endStage2 = 1533679199; // Tuesday, 07-Aug-18 23:59:59 UTC-2\r\n\r\n    uint256 public startStage3 = 1533679200; // Wednesday, 08-Aug-18 00:00:00 UTC-2 \r\n    uint256 public endStage3 = 1535752799; // Friday, 31-Aug-18 23:59:59 UTC-2\r\n\r\n    uint256 public buyPrice = 920000000000000000; // 0.92 Ether\r\n    \r\n    uint256 public ethUSD;\r\n\r\n    uint256 public weisRaised = 0;\r\n\r\n    string public stageNow = \"NoSale\";\r\n    \r\n    event Authorized(address wlCandidate, uint timestamp);\r\n    event Revoked(address wlCandidate, uint timestamp);\r\n\r\n    constructor() public {}\r\n\r\n    function setToken (ERC20 _token) public onlyOwner {\r\n        token = _token;\r\n    }\r\n    \r\n    /*******************************************************************************\r\n     * Whitelist's section\r\n     */\r\n    function authorize(address wlCandidate) public onlyOwner  {\r\n        require(wlCandidate != address(0x0));\r\n        require(!isWhitelisted(wlCandidate));\r\n        whitelist[wlCandidate] = true;\r\n        emit Authorized(wlCandidate, now);\r\n    }\r\n\r\n    function revoke(address wlCandidate) public  onlyOwner {\r\n        whitelist[wlCandidate] = false;\r\n        emit Revoked(wlCandidate, now);\r\n    }\r\n\r\n    function isWhitelisted(address wlCandidate) public view returns(bool) {\r\n        return whitelist[wlCandidate];\r\n    }\r\n    \r\n    /*******************************************************************************\r\n     * Setter's Section\r\n     */\r\n\r\n    function setStartCloseSale(uint256 newStartSale) public onlyOwner {\r\n        startCloseSale = newStartSale;\r\n    }\r\n\r\n    function setEndCloseSale(uint256 newEndSale) public onlyOwner{\r\n        endCloseSale = newEndSale;\r\n    }\r\n\r\n    function setStartStage1(uint256 newsetStage2) public onlyOwner{\r\n        startStage1 = newsetStage2;\r\n    }\r\n\r\n    function setEndStage1(uint256 newsetStage3) public onlyOwner{\r\n        endStage1 = newsetStage3;\r\n    }\r\n\r\n    function setStartStage2(uint256 newsetStage4) public onlyOwner{\r\n        startStage2 = newsetStage4;\r\n    }\r\n\r\n    function setEndStage2(uint256 newsetStage5) public onlyOwner{\r\n        endStage2 = newsetStage5;\r\n    }\r\n\r\n    function setStartStage3(uint256 newsetStage5) public onlyOwner{\r\n        startStage3 = newsetStage5;\r\n    }\r\n\r\n    function setEndStage3(uint256 newsetStage5) public onlyOwner{\r\n        endStage3 = newsetStage5;\r\n    }\r\n\r\n    function setPrices(uint256 newPrice) public onlyOwner {\r\n        buyPrice = newPrice;\r\n    }\r\n    \r\n    function setETHUSD(uint256 _ethUSD) public onlyOwner { \r\n        ethUSD = _ethUSD;\r\n    \r\n    \r\n    }\r\n    \r\n    /*******************************************************************************\r\n     * Payable Section\r\n     */\r\n    function ()  public payable {\r\n        \r\n        require(msg.value >= (1*1e18/ethUSD*100));\r\n\r\n        if (now >= startCloseSale || now <= endCloseSale) {\r\n            require(isWhitelisted(msg.sender));\r\n            closeSale(msg.sender, msg.value);\r\n            stageNow = \"Close Sale for Whitelist's members\";\r\n            \r\n        } else if (now >= startStage1 || now <= endStage1) {\r\n            sale1(msg.sender, msg.value);\r\n            stageNow = \"Stage 1\";\r\n\r\n        } else if (now >= startStage2 || now <= endStage2) {\r\n            sale2(msg.sender, msg.value);\r\n             stageNow = \"Stage 2\";\r\n\r\n        } else if (now >= startStage3 || now <= endStage3) {\r\n            sale3(msg.sender, msg.value);\r\n             stageNow = \"Stage 3\";\r\n\r\n        } else {\r\n            stageNow = \"No Sale\";\r\n            revert();\r\n        } \r\n    }\r\n    \r\n    // issue token in a period of closed sales\r\n    function closeSale(address _investor, uint256 _value) internal {\r\n\r\n        uint256 tokens = _value.mul(1e18).div(buyPrice); // 68%\r\n        uint256 bonusTokens = tokens.mul(30).div(100); // + 30% per stage\r\n        tokens = tokens.add(bonusTokens); \r\n        token.transferFromICO(_investor, tokens);\r\n        weisRaised = weisRaised.add(msg.value);\r\n\r\n        uint256 tokensReserve = tokens.mul(15).div(68); // 15 %\r\n        token.transferFromICO(reserve, tokensReserve);\r\n\r\n        uint256 tokensBoynty = tokens.div(34); // 2 %\r\n        token.transferFromICO(bounty, tokensBoynty);\r\n\r\n        uint256 tokensPromo = tokens.mul(15).div(68); // 15%\r\n        token.transferFromICO(promouters, tokensPromo);\r\n    }\r\n    \r\n    // the issue of tokens in period 1 sales\r\n    function sale1(address _investor, uint256 _value) internal {\r\n\r\n        uint256 tokens = _value.mul(1e18).div(buyPrice); // 66% \r\n\r\n        uint256 bonusTokens = tokens.mul(10).div(100); // + 10% per stage\r\n        tokens = tokens.add(bonusTokens); // 66 %\r\n\r\n        token.transferFromICO(_investor, tokens);\r\n\r\n        uint256 tokensReserve = tokens.mul(5).div(22); // 15 %\r\n        token.transferFromICO(reserve, tokensReserve);\r\n\r\n        uint256 tokensBoynty = tokens.mul(2).div(33); // 4 %\r\n        token.transferFromICO(bounty, tokensBoynty);\r\n\r\n        uint256 tokensPromo = tokens.mul(5).div(22); // 15%\r\n        token.transferFromICO(promouters, tokensPromo);\r\n\r\n        weisRaised = weisRaised.add(msg.value);\r\n    }\r\n    \r\n    // the issue of tokens in period 2 sales\r\n    function sale2(address _investor, uint256 _value) internal {\r\n\r\n        uint256 tokens = _value.mul(1e18).div(buyPrice); // 64 %\r\n\r\n        uint256 bonusTokens = tokens.mul(5).div(100); // + 5% \r\n        tokens = tokens.add(bonusTokens);\r\n\r\n        token.transferFromICO(_investor, tokens);\r\n\r\n        uint256 tokensReserve = tokens.mul(15).div(64); // 15 %\r\n        token.transferFromICO(reserve, tokensReserve);\r\n\r\n        uint256 tokensBoynty = tokens.mul(3).div(32); // 6 %\r\n        token.transferFromICO(bounty, tokensBoynty);\r\n\r\n        uint256 tokensPromo = tokens.mul(15).div(64); // 15%\r\n        token.transferFromICO(promouters, tokensPromo);\r\n\r\n        weisRaised = weisRaised.add(msg.value);\r\n    }\r\n\r\n    // the issue of tokens in period 3 sales\r\n    function sale3(address _investor, uint256 _value) internal {\r\n\r\n        uint256 tokens = _value.mul(1e18).div(buyPrice); // 62 %\r\n        token.transferFromICO(_investor, tokens);\r\n\r\n        uint256 tokensReserve = tokens.mul(15).div(62); // 15 %\r\n        token.transferFromICO(reserve, tokensReserve);\r\n\r\n        uint256 tokensBoynty = tokens.mul(4).div(31); // 8 %\r\n        token.transferFromICO(bounty, tokensBoynty);\r\n\r\n        uint256 tokensPromo = tokens.mul(15).div(62); // 15%\r\n        token.transferFromICO(promouters, tokensPromo);\r\n\r\n        weisRaised = weisRaised.add(msg.value);\r\n    }\r\n\r\n    /*******************************************************************************\r\n     * Manual Management\r\n     */\r\n    function transferEthFromContract(address _to, uint256 amount) public onlyOwner {\r\n        _to.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage2\",\"type\":\"uint256\"}],\"name\":\"setStartStage1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endStage3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEthFromContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wlCandidate\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startStage2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endStage2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage5\",\"type\":\"uint256\"}],\"name\":\"setEndStage2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage5\",\"type\":\"uint256\"}],\"name\":\"setStartStage3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endStage1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wlCandidate\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startStage3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newEndSale\",\"type\":\"uint256\"}],\"name\":\"setEndCloseSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startStage1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wlCandidate\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageNow\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weisRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage4\",\"type\":\"uint256\"}],\"name\":\"setStartStage2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endCloseSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ethUSD\",\"type\":\"uint256\"}],\"name\":\"setETHUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage5\",\"type\":\"uint256\"}],\"name\":\"setEndStage3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startCloseSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStartSale\",\"type\":\"uint256\"}],\"name\":\"setStartCloseSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newsetStage3\",\"type\":\"uint256\"}],\"name\":\"setEndStage1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MainSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://02e2dad292bfe7bd64b2555bd0c31d72c6c071c66f6727e7d7f356845e2c23d9"}]}