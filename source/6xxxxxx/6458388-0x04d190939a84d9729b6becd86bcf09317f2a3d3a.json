{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * See https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address _who) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n// File: openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address _owner, address _spender)\r\n    public view returns (uint256);\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)\r\n    public returns (bool);\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n// File: openzeppelin-solidity/contracts/lifecycle/Pausable.sol\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() public onlyOwner whenNotPaused {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() public onlyOwner whenPaused {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\n// File: contracts/network/AbstractDeployer.sol\r\n\r\ncontract AbstractDeployer is Ownable {\r\n    function title() public view returns(string);\r\n\r\n    function deploy(bytes data)\r\n        external onlyOwner returns(address result)\r\n    {\r\n        // solium-disable-next-line security/no-low-level-calls\r\n        require(address(this).call(data), \"Arbitrary call failed\");\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            returndatacopy(0, 0, 32)\r\n            result := mload(0)\r\n        }\r\n    }\r\n}\r\n\r\n// File: contracts/interface/IBasicMultiToken.sol\r\n\r\ncontract IBasicMultiToken is ERC20 {\r\n    event Bundle(address indexed who, address indexed beneficiary, uint256 value);\r\n    event Unbundle(address indexed who, address indexed beneficiary, uint256 value);\r\n\r\n    function tokensCount() public view returns(uint256);\r\n    function tokens(uint i) public view returns(ERC20);\r\n    \r\n    function bundleFirstTokens(address _beneficiary, uint256 _amount, uint256[] _tokenAmounts) public;\r\n    function bundle(address _beneficiary, uint256 _amount) public;\r\n\r\n    function unbundle(address _beneficiary, uint256 _value) public;\r\n    function unbundleSome(address _beneficiary, uint256 _value, ERC20[] _tokens) public;\r\n\r\n    function disableBundling() public;\r\n    function enableBundling() public;\r\n}\r\n\r\n// File: contracts/interface/IMultiToken.sol\r\n\r\ncontract IMultiToken is IBasicMultiToken {\r\n    event Update();\r\n    event Change(address indexed _fromToken, address indexed _toToken, address indexed _changer, uint256 _amount, uint256 _return);\r\n\r\n    function weights(address _token) public view returns(uint256);\r\n\r\n    function getReturn(address _fromToken, address _toToken, uint256 _amount) public view returns (uint256 returnAmount);\r\n    function change(address _fromToken, address _toToken, uint256 _amount, uint256 _minReturn) public returns (uint256 returnAmount);\r\n\r\n    function disableChanges() public;\r\n}\r\n\r\n// File: contracts/network/MultiTokenNetwork.sol\r\n\r\ncontract MultiTokenNetwork is Pausable {\r\n    address[] private _multitokens;\r\n    AbstractDeployer[] private _deployers;\r\n\r\n    event NewMultitoken(address indexed mtkn);\r\n    event NewDeployer(uint256 indexed index, address indexed oldDeployer, address indexed newDeployer);\r\n\r\n    function multitokensCount() public view returns(uint256) {\r\n        return _multitokens.length;\r\n    }\r\n\r\n    function multitokens(uint i) public view returns(address) {\r\n        return _multitokens[i];\r\n    }\r\n\r\n    function allMultitokens() public view returns(address[]) {\r\n        return _multitokens;\r\n    }\r\n\r\n    function deployersCount() public view returns(uint256) {\r\n        return _deployers.length;\r\n    }\r\n\r\n    function deployers(uint i) public view returns(AbstractDeployer) {\r\n        return _deployers[i];\r\n    }\r\n\r\n    function allWalletBalances(address wallet) public view returns(uint256[]) {\r\n        uint256[] memory balances = new uint256[](_multitokens.length);\r\n        for (uint i = 0; i < _multitokens.length; i++) {\r\n            balances[i] = ERC20(_multitokens[i]).balanceOf(wallet);\r\n        }\r\n        return balances;\r\n    }\r\n\r\n    function deleteMultitoken(uint index) public onlyOwner {\r\n        require(index < _multitokens.length, \"deleteMultitoken: index out of range\");\r\n        if (index != _multitokens.length - 1) {\r\n            _multitokens[index] = _multitokens[_multitokens.length - 1];\r\n        }\r\n        _multitokens.length -= 1;\r\n    }\r\n\r\n    function deleteDeployer(uint index) public onlyOwner {\r\n        require(index < _deployers.length, \"deleteDeployer: index out of range\");\r\n        if (index != _deployers.length - 1) {\r\n            _deployers[index] = _deployers[_deployers.length - 1];\r\n        }\r\n        _deployers.length -= 1;\r\n    }\r\n\r\n    function disableBundlingMultitoken(uint index) public onlyOwner {\r\n        IBasicMultiToken(_multitokens[index]).disableBundling();\r\n    }\r\n\r\n    function enableBundlingMultitoken(uint index) public onlyOwner {\r\n        IBasicMultiToken(_multitokens[index]).enableBundling();\r\n    }\r\n\r\n    function disableChangesMultitoken(uint index) public onlyOwner {\r\n        IMultiToken(_multitokens[index]).disableChanges();\r\n    }\r\n\r\n    function setDeployer(uint256 index, AbstractDeployer deployer) public onlyOwner whenNotPaused {\r\n        require(deployer.owner() == address(this), \"setDeployer: first set MultiTokenNetwork as owner\");\r\n        emit NewDeployer(index, _deployers[index], deployer);\r\n        _deployers[index] = deployer;\r\n    }\r\n\r\n    function deploy(uint256 index, bytes data) public whenNotPaused {\r\n        address mtkn = _deployers[index].deploy(data);\r\n        _multitokens.push(mtkn);\r\n        emit NewMultitoken(mtkn);\r\n    }\r\n\r\n    function makeCall(address target, uint256 value, bytes data) public onlyOwner {\r\n        // solium-disable-next-line security/no-call-value\r\n        require(target.call.value(value)(data), \"Arbitrary call failed\");\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"allWalletBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"disableBundlingMultitoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multitokensCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"disableChangesMultitoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"makeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"deployers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"deleteDeployer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"enableBundlingMultitoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"multitokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allMultitokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"deleteMultitoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"setDeployer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"mtkn\",\"type\":\"address\"}],\"name\":\"NewMultitoken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"oldDeployer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"NewDeployer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MultiTokenNetwork","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://228b728b82d58cdaa2cddef52a18a835a6e070d0840657d3b80f5793417d9536"}]}