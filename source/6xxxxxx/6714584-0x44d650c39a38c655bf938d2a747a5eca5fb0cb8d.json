{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract fastum{\r\n    uint public start = 6704620;\r\n    address constant private PROMO = 0x9c89290daC9EcBBa5efEd422308879Df9B123eBf;\r\n    modifier saleIsOn() {\r\n      require(block.number > start);\r\n      _;\r\n    }\r\n    uint public currentReceiverIndex = 0; \r\n    uint public MIN_DEPOSIT = 0.03 ether;\r\n    uint private PROMO_PERCENT = 45;\r\n    address public investorWithMaxCountOfTransaction;\r\n    LastDeposit public last;\r\n    constructor() public payable{}\r\n    struct Deposit {\r\n        address depositor; \r\n        uint128 deposit;   \r\n    }\r\n    struct LastDeposit {\r\n        address depositor;\r\n        uint blockNumber;\r\n    }\r\n\r\n    Deposit[] public queue;\r\n    \r\n    function () saleIsOn private payable {\r\n        if(msg.value == 0 && msg.sender == last.depositor) {\r\n            require(gasleft() >= 220000, \"We require more gas!\");\r\n            require(last.blockNumber + 45 < block.number, \"Last depositor should wait 45 blocks (~9-11 minutes) to claim reward\");\r\n            uint128 money = uint128((address(this).balance));\r\n            last.depositor.transfer((money*85)/100);\r\n            for(uint i=0; i<queue.length; i++){\r\n                uint c;\r\n                uint max;\r\n                c = getDepositsCount(queue[i].depositor);\r\n                if(max < c){\r\n                    max = c;\r\n                    investorWithMaxCountOfTransaction = queue[i].depositor;\r\n                }\r\n            }\r\n            investorWithMaxCountOfTransaction.transfer(money*15/100);\r\n            delete last;\r\n        }\r\n        else if(msg.value > 0 && msg.sender != PROMO){\r\n            require(gasleft() >= 220000, \"We require more gas!\");\r\n            require(msg.value >= MIN_DEPOSIT); \r\n\r\n            queue.push(Deposit(msg.sender, uint128(msg.value)));\r\n\r\n            last.depositor = msg.sender;\r\n            last.blockNumber = block.number;\r\n            \r\n            uint promo = msg.value*PROMO_PERCENT/100;\r\n            PROMO.transfer(promo);\r\n        }\r\n    }\r\n\r\n    function getDeposit(uint idx) public view returns (address depositor, uint deposit){\r\n        Deposit storage dep = queue[idx];\r\n        return (dep.depositor, dep.deposit);\r\n    }\r\n    \r\n    function getDepositsCount(address depositor) public view returns (uint) {\r\n        uint c = 0;\r\n        for(uint i=currentReceiverIndex; i<queue.length; ++i){\r\n            if(queue[i].depositor == depositor)\r\n                c++;\r\n        }\r\n        return c;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"currentReceiverIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDepositsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"deposit\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorWithMaxCountOfTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"fastum","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0603b22521cb5416dbb1308a6f6c75183c7adf2fed683f29cb6c10f7a28feab3"}]}