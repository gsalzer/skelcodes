{"status":"1","message":"OK","result":[{"SourceCode":"// compiler: 0.4.21+commit.dfe3193c.Emscripten.clang\r\npragma solidity ^0.4.21;\r\n\r\n// https://www.ethereum.org/token\r\ninterface tokenRecipient {\r\n  function receiveApproval( address from, uint256 value, bytes data ) external;\r\n}\r\n\r\n// ERC223 - LLT Luxury Lifestyle Token Intel-wise Edition - RS\r\n// ERC20 token with added ERC223 and Ethereum-Token support\r\n\r\n// Combination of multiple interfaces:\r\n// https://theethereum.wiki/w/index.php/ERC20_Token_Standard\r\n// https://www.ethereum.org/token (uncontrolled, non-standard)\r\n// https://github.com/Dexaran/ERC23-tokens/blob/Recommended/ERC223_Token.sol\r\n\r\ninterface ContractReceiver {\r\n  function tokenFallback( address from, uint value, bytes data ) external;\r\n}\r\n\r\ncontract ERC223Token\r\n{\r\n  string  public name;\r\n  string  public symbol;\r\n  uint8   public decimals;\r\n  uint256 public totalSupply;\r\n\r\n  mapping( address => uint256 ) balances_;\r\n  mapping( address => mapping(address => uint256) ) allowances_;\r\n\r\n  // ERC20\r\n  event Approval( address indexed owner,\r\n                  address indexed spender,\r\n                  uint value );\r\n\r\n  event Transfer( address indexed from,\r\n                  address indexed to,\r\n                  uint256 value );\r\n               // bytes    data ); use ERC20 version instead\r\n\r\n  // Ethereum Token\r\n  event Burn( address indexed from, uint256 value );\r\n\r\n  constructor( uint256 initialSupply,\r\n                        string tokenName,\r\n                        uint8 decimalUnits,\r\n                        string tokenSymbol ) public\r\n  {\r\n    totalSupply = initialSupply * 10 ** uint256(decimalUnits);\r\n    balances_[msg.sender] = totalSupply;\r\n    name = tokenName;\r\n    decimals = decimalUnits;\r\n    symbol = tokenSymbol;\r\n    emit Transfer( address(0), msg.sender, totalSupply );\r\n  }\r\n\r\n  function() public payable { revert(); } // does not accept money\r\n\r\n  // ERC20\r\n  function balanceOf( address owner ) public constant returns (uint) {\r\n    return balances_[owner];\r\n  }\r\n\r\n  // ERC20\r\n  //\r\n  // WARNING! When changing the approval amount, first set it back to zero\r\n  // AND wait until the transaction is mined. Only afterwards set the new\r\n  // amount. Otherwise you may be prone to a race condition attack.\r\n  // See: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n\r\n  function approve( address spender, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    allowances_[msg.sender][spender] = value;\r\n    emit Approval( msg.sender, spender, value );\r\n    return true;\r\n  }\r\n \r\n  // recommended fix for known attack on any ERC20\r\n  function safeApprove( address _spender,\r\n                        uint256 _currentValue,\r\n                        uint256 _value ) public\r\n                        returns (bool success) {\r\n\r\n    // If current allowance for _spender is equal to _currentValue, then\r\n    // overwrite it with _value and return true, otherwise return false.\r\n\r\n    if (allowances_[msg.sender][_spender] == _currentValue)\r\n      return approve(_spender, _value);\r\n\r\n    return false;\r\n  }\r\n\r\n  // ERC20\r\n  function allowance( address owner, address spender ) public constant\r\n  returns (uint256 remaining)\r\n  {\r\n    return allowances_[owner][spender];\r\n  }\r\n\r\n  // ERC20\r\n  function transfer(address to, uint256 value) public returns (bool success)\r\n  {\r\n    bytes memory empty; // null\r\n    _transfer( msg.sender, to, value, empty );\r\n    return true;\r\n  }\r\n\r\n  // ERC20\r\n  function transferFrom( address from, address to, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    allowances_[from][msg.sender] -= value;\r\n    bytes memory empty;\r\n    _transfer( from, to, value, empty );\r\n\r\n    return true;\r\n  }\r\n\r\n  // Ethereum Token Definition\r\n  function approveAndCall( address spender,\r\n                           uint256 value,\r\n                           bytes context ) public\r\n  returns (bool success)\r\n  {\r\n    if ( approve(spender, value) )\r\n    {\r\n      tokenRecipient recip = tokenRecipient( spender );\r\n      recip.receiveApproval( msg.sender, value, context );\r\n      return true;\r\n    }\r\n    return false;\r\n  }        \r\n\r\n  // Ethereum Token\r\n  function burn( uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    require( balances_[msg.sender] >= value );\r\n    balances_[msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    emit Burn( msg.sender, value );\r\n    return true;\r\n  }\r\n\r\n  // Ethereum Token\r\n  function burnFrom( address from, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    require( balances_[from] >= value );\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    balances_[from] -= value;\r\n    allowances_[from][msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    emit Burn( from, value );\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Transfer and invoke specified callback\r\n  function transfer( address to,\r\n                     uint value,\r\n                     bytes data,\r\n                     string custom_fallback ) public returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    if ( isContract(to) )\r\n    {\r\n      ContractReceiver rx = ContractReceiver( to );\r\n      require( address(rx).call.value(0)(bytes4(keccak256(abi.encodePacked(custom_fallback))),\r\n               msg.sender,\r\n               value,\r\n               data) );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Transfer to a contract or externally-owned account\r\n  function transfer( address to, uint value, bytes data ) public\r\n  returns (bool success)\r\n  {\r\n    if (isContract(to)) {\r\n      return transferToContract( to, value, data );\r\n    }\r\n\r\n    _transfer( msg.sender, to, value, data );\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Transfer to contract and invoke tokenFallback() method\r\n  function transferToContract( address to, uint value, bytes data ) private\r\n  returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    ContractReceiver rx = ContractReceiver(to);\r\n    rx.tokenFallback( msg.sender, value, data );\r\n\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Fetch contract size (This must be non-zero to be a contract)\r\n  function isContract( address _addr ) private constant returns (bool)\r\n  {\r\n    uint length;\r\n    assembly { length := extcodesize(_addr) }\r\n    return (length > 0);\r\n  }\r\n\r\n  function _transfer( address from,\r\n                      address to,\r\n                      uint value,\r\n                      bytes data ) internal\r\n  {\r\n    require( to != 0x0 );\r\n    require( balances_[from] >= value );\r\n    require( balances_[to] + value > balances_[to] ); // catch overflow\r\n\r\n    balances_[from] -= value;\r\n    balances_[to] += value;\r\n\r\n    //Transfer( from, to, value, data ); This is the ERC223 compatible version\r\n    bytes memory empty;\r\n    empty = data;\r\n    emit Transfer( from, to, value ); // This is the ERC20 compatible version\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_currentValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ERC223Token","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000164c7578757279204c6966657374796c6520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000034c4c540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://8189450c1d264b42e11cca519e897fb88cff1fddd7c0d123c3e83d1a408dbabc"}]}