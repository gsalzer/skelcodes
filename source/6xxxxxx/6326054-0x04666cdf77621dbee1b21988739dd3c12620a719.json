{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/*********************************************************************************\r\n *********************************************************************************\r\n *\r\n * Name of the project: Senddox registration service\r\n * Version: 0.6\r\n * Author: Ethernity.live \r\n *\r\n *********************************************************************************\r\n ********************************************************************************/\r\n\r\n /* New ERC20 contract interface */\r\n\r\ncontract ERC20Basic {\r\n\tuint256 public totalSupply;\r\n\tfunction balanceOf(address who) constant returns (uint256);\r\n\tfunction transfer(address to, uint256 value) returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n// Interface for Storage\r\ncontract GlobalStorageMultiId { \r\n\tuint256 public regPrice;\r\n\tfunction registerUser(bytes32 _id) payable returns(bool);\r\n\tfunction changeAddress(bytes32 _id , address _newAddress) returns(bool);\r\n\tfunction setUint(bytes32 _id , bytes32 _key , uint _data , bool _overwrite) returns(bool);\r\n\tfunction getUint(bytes32 _id , bytes32 _key) constant returns(uint);\r\n\tevent Error(string _string);\r\n\tevent RegisteredUser(address _address , bytes32 _id);\r\n\tevent ChangedAdd(bytes32 _id , address _old , address _new);\r\n}\r\n\r\ncontract UpgDocs {\r\n\tfunction confirm(bytes32 _storKey) returns(bool);\r\n\tevent DocsUpgraded(address _oldAddress,address _newAddress);\r\n}\r\n\r\n// The Token\r\ncontract RegDocuments {\r\n\tstring public version;\r\n\taddress public admin;\r\n\taddress public owner;\r\n\tuint public price;\r\n\tbool registered;\r\n\taddress storageAddress;\r\n\tbytes32 public storKey;\r\n\tuint public adminPerc;\r\n\r\n\tGlobalStorageMultiId public Storage;\r\n\r\n\tevent RegDocument(address indexed from);\r\n\tevent DocsUpgraded(address _oldAddress,address _newAddress);\r\n\tevent ReceivedPayment(address indexed _address,uint256 _value);\r\n\r\n\t// Modifiers\r\n\r\n\tmodifier onlyAdmin() {\r\n\t\tif ( msg.sender != admin && msg.sender != owner ) revert();\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\tif ( msg.sender != owner ) revert();\r\n\t\t_;\r\n\t}\r\n\r\n\r\n\t// Constructor\r\n\tconstructor() {     \r\n\t\tprice = 0.01 ether;  \r\n\t\tadmin = msg.sender;        \r\n\t\towner = 0xc238ff50c09787e7b920f711850dd945a40d3232;\r\n\t\tversion = \"v0.6\";\r\n\t\t// storageAddress = 0xabc66b985ce66ba651f199555dd4236dbcd14daa; // Kovan\r\n\t\t// storageAddress = 0xb94cde73d07e0fcd7768cd0c7a8fb2afb403327a; // Rinkeby\r\n\t\tstorageAddress = 0x8f49722c61a9398a1c5f5ce6e5feeef852831a64; // Mainnet\r\n\t\tadminPerc = 2;\r\n\t\tStorage = GlobalStorageMultiId(storageAddress);\r\n\t}\r\n\r\n\r\n\t// GlobalStorage functions\r\n\t// ----------------------------------------\r\n\r\n\tfunction getStoragePrice() onlyAdmin constant returns(uint) {\r\n\t\treturn Storage.regPrice();\r\n\t}\r\n\r\n\tfunction registerDocs(bytes32 _storKey) onlyAdmin payable {\r\n\t\t// Register key with IntelligentStorage\r\n\t\trequire(!registered); // It only does it one time\r\n\t\tuint _value = Storage.regPrice();\r\n\t\tstorKey = _storKey;\r\n\t\tStorage.registerUser.value(_value)(_storKey);\r\n\t\tregistered = true;\r\n\t}\r\n\r\n\tfunction upgradeDocs(address _newAddress) onlyAdmin {\r\n\t\t// This is to update this contract to a new address and transfer ownership of Storage to the new address\r\n\t\tUpgDocs newDocs = UpgDocs(_newAddress);\r\n\t\trequire(newDocs.confirm(storKey));\r\n\t\tStorage.changeAddress(storKey,_newAddress);\r\n\t\t_newAddress.send(this.balance);\r\n\t}\r\n\r\n\tfunction confirm(bytes32 _storKey) returns(bool) {\r\n\t\t// This is called from older version, to register key for IntelligentStorage\r\n\t\trequire(!registered);\r\n\t\tstorKey = _storKey;\r\n\t\tregistered = true;\r\n\t\temit DocsUpgraded(msg.sender,this);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Admin functions\r\n\t// -------------------------------------\r\n\r\n\tfunction changeOwner(address _newOwnerAddress) onlyOwner returns(bool){\r\n\t\towner = _newOwnerAddress;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction changeAdmin(address _newAdmin) onlyOwner returns(bool) {\r\n\t\tadmin = _newAdmin;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction sendToken(address _token,address _to , uint _value) onlyOwner returns(bool) {\r\n\t\t// To send ERC20 tokens sent accidentally\r\n\t\tERC20Basic Token = ERC20Basic(_token);\r\n\t\trequire(Token.transfer(_to, _value));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction changePerc(uint _newperc) onlyAdmin public {\r\n\t\tadminPerc = _newperc;\r\n\t}\r\n\r\n\tfunction changePrice(uint _newPrice) onlyAdmin public {\r\n\t\tprice = _newPrice;\r\n\t}\r\n\r\n\t// Main functions\r\n\t// -----------------------------------------------------\r\n\r\n\tfunction() payable public {\r\n\t\t// Invoked by users to pay for the service\r\n\t\tuint a = getUint(msg.sender);\r\n\t\tsetUint(msg.sender, a + msg.value);\r\n\t\tadmin.send(msg.value * adminPerc / 100);\r\n\t\towner.send(this.balance);\r\n\t\temit ReceivedPayment(msg.sender, msg.value);\r\n\t}\r\n\r\n\tfunction sendCredits(address[] _addresses, uint _amountEach) onlyAdmin public returns (bool success) {\r\n\t\t// Invoked by admin to give balance to users\r\n\t\tfor (uint8 i=0; i<_addresses.length; i++){\r\n\t\t\tuint a = getUint(_addresses[i]);\r\n\t\t\tsetUint(_addresses[i], a + _amountEach);\r\n\t\t\temit ReceivedPayment(_addresses[i],_amountEach);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getBalance(address _address) constant returns(uint) {\r\n\t\treturn getUint(_address);\r\n\t}\r\n\r\n\tfunction regDoc(address _address, string _hash) onlyAdmin returns (bool success) {\r\n\t\tuint a = getUint(_address);\r\n\t\trequire(a >= price);\r\n\t\tsetUint(_address, a - price);\r\n\t\temit RegDocument(_address);\r\n\t\treturn true;\r\n\t\t}\r\n\r\n\tfunction getPrice() constant returns(uint) {\r\n\t\treturn price;\r\n\t}\r\n\r\n\t// Internal functions\r\n\r\n\tfunction setUint(address _address, uint _value) internal {\r\n\t\tStorage.setUint(storKey, bytes32(_address), _value, true);\r\n\t}\r\n\r\n\tfunction getUint(address _address) internal constant returns(uint) {\r\n\t\treturn Storage.getUint(storKey, bytes32(_address));\r\n\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getStoragePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminPerc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amountEach\",\"type\":\"uint256\"}],\"name\":\"sendCredits\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"upgradeDocs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"storKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"regDoc\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_storKey\",\"type\":\"bytes32\"}],\"name\":\"registerDocs\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_storKey\",\"type\":\"bytes32\"}],\"name\":\"confirm\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newperc\",\"type\":\"uint256\"}],\"name\":\"changePerc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerAddress\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Storage\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"RegDocument\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"DocsUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ReceivedPayment\",\"type\":\"event\"}]","ContractName":"RegDocuments","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5c0b07bf623c83188cc261367f85cd1bf1386aa20367b947ee94c9f45a9f0656"}]}