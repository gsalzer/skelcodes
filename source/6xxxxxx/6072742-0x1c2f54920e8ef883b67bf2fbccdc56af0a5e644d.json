{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Basic {\r\n\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract Moses is Basic{\r\n\r\n  event Attend(uint32 indexed id,string indexed attentHash);\r\n  event PublishResult(uint32 indexed id,string indexed result,bool indexed finish);\r\n\r\n\r\n  struct MoseEvent {\r\n    uint32 id;\r\n    string attendHash;\r\n    string result;\r\n    bool finish;\r\n  }\r\n\r\n  mapping (uint32 => MoseEvent) internal moseEvents;\r\n\r\n  /**\r\n  * @dev Storing predictive event participation information\r\n  *\r\n  * The contract owner collects the event participation information\r\n  * and stores the prediction event participation information\r\n  * @param _id  unique identification of predicted events\r\n  * @param _attendHash prediction event participation information hash value\r\n  */\r\n  function attend(uint32 _id,string _attendHash) public onlyOwner returns (bool) {\r\n    require(moseEvents[_id].id == uint32(0),\"The event exists\");\r\n    moseEvents[_id] = MoseEvent({id:_id, attendHash:_attendHash, result: \"\", finish:false});\r\n    emit Attend(_id, _attendHash);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Publish forecast event results\r\n   * @param _id unique identification of predicted events\r\n   * @param _result prediction result information\r\n   */\r\n  function publishResult(uint32 _id,string _result) public onlyOwner returns (bool) {\r\n    require(moseEvents[_id].id != uint32(0),\"The event not exists\");\r\n    require(!moseEvents[_id].finish,\"The event has been completed\");\r\n    moseEvents[_id].result = _result;\r\n    moseEvents[_id].finish = true;\r\n    emit PublishResult(_id, _result, true);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Query the event to participate in the HASH by guessing the event ID\r\n   */\r\n  function showMoseEvent(uint32 _id) public view returns (uint32,string,string,bool) {\r\n    return (moseEvents[_id].id, moseEvents[_id].attendHash,moseEvents[_id].result,moseEvents[_id].finish);\r\n  }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint32\"}],\"name\":\"showMoseEvent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint32\"},{\"name\":\"_attendHash\",\"type\":\"string\"}],\"name\":\"attend\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"publishResult\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint32\"},{\"indexed\":true,\"name\":\"attentHash\",\"type\":\"string\"}],\"name\":\"Attend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint32\"},{\"indexed\":true,\"name\":\"result\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"finish\",\"type\":\"bool\"}],\"name\":\"PublishResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Moses","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5303d41004796e54dfda122affe0b062bce31942dcb86c9ad441b69909291380"}]}