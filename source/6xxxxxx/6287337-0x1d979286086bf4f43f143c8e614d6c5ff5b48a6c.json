{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n\r\ncontract Voucher {\r\n\r\n    bytes32 private token;\r\n    address private owner;\r\n    uint private created_at;\r\n    uint private updated_at;\r\n    uint private expires_at;\r\n    /** in days **/\r\n    bool private burnt;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(bytes32 voucher_token, uint _lifetime) public {\r\n        token = voucher_token;\r\n        burnt = false;\r\n        created_at = now;\r\n        updated_at = now;\r\n        expires_at = created_at + (_lifetime * 60*60*24);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Burn a Voucher\r\n     */\r\n    function burn(bytes32 voucher_token) public returns (bool success){\r\n        require(token == voucher_token, \"Forbidden.\");\r\n        require(msg.sender == owner);\r\n        require(!burnt, \"Already burnt.\");\r\n        burnt = true;\r\n        updated_at = now;\r\n        return true;\r\n    }\r\n\r\n    function is_burnt(bytes32 voucher_token) public returns (bool) {\r\n        require(token == voucher_token, \"Forbidden.\");\r\n        require(msg.sender == owner);\r\n        if (is_expired(voucher_token)){\r\n            burn(voucher_token);\r\n        }\r\n        return burnt;\r\n    }\r\n\r\n    function is_expired(bytes32 voucher_token) view public returns(bool){\r\n        require(token == voucher_token, \"Forbidden.\");\r\n        return expires_at != created_at && expires_at < now;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"voucher_token\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"voucher_token\",\"type\":\"bytes32\"}],\"name\":\"is_expired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"voucher_token\",\"type\":\"bytes32\"}],\"name\":\"is_burnt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"voucher_token\",\"type\":\"bytes32\"},{\"name\":\"_lifetime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Voucher","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"373765336365373833633530306466613162316165656132666135316261656500000000000000000000000000000000000000000000000000000000000000b4","Library":"","SwarmSource":"bzzr://f87bb497cb5174685a7d446e96ebaa0b749438440238be2e2a1e3d3c01b39f07"}]}