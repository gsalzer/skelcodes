{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n\r\ncontract owned {\r\n\r\n    address public owner;\r\n    address[] public admins;\r\n    mapping (address => bool) public isAdmin;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n        isAdmin[msg.sender] = true;\r\n        admins.push(msg.sender);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin {\r\n        require(isAdmin[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    function addAdmin(address user) onlyOwner public {\r\n        require(!isAdmin[user]);\r\n        isAdmin[user] = true;\r\n        admins.push(user);\r\n    }\r\n\r\n    function removeAdmin(address user) onlyOwner public {\r\n        require(isAdmin[user]);\r\n        isAdmin[user] = false;\r\n        for (uint i = 0; i < admins.length - 1; i++)\r\n            if (admins[i] == user) {\r\n                admins[i] = admins[admins.length - 1];\r\n                break;\r\n            }\r\n        admins.length -= 1;\r\n    }\r\n\r\n    function replaceAdmin(address oldAdmin, address newAdmin) onlyOwner public {\r\n        require(isAdmin[oldAdmin]);\r\n        require(!isAdmin[newAdmin]);\r\n        for (uint i = 0; i < admins.length; i++)\r\n            if (admins[i] == oldAdmin) {\r\n                admins[i] = newAdmin;\r\n                break;\r\n            }\r\n        isAdmin[oldAdmin] = false;\r\n        isAdmin[newAdmin] = true;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getAdmins() public view returns (address[]) {\r\n        return admins;\r\n    }\r\n\r\n}\r\n\r\ncontract ZingCopyright is owned {\r\n\r\n    struct Copyright {\r\n        string fingerprint;\r\n        string owner;\r\n        bool exist;\r\n    }\r\n\r\n    mapping (string => Copyright) copyrights;\r\n\r\n    function setCopyright(string uid, string copyrightId, string fingerprint) onlyAdmin public {\r\n        require(!copyrights[copyrightId].exist);\r\n        copyrights[copyrightId] = Copyright({\r\n            fingerprint: fingerprint,\r\n            owner: uid,\r\n            exist: true\r\n        });\r\n    }\r\n\r\n    function revokeCopyright(string copyrightId) onlyAdmin public {\r\n        require(copyrights[copyrightId].exist);\r\n        delete copyrights[copyrightId];\r\n    }\r\n\r\n    function getCopyright(string copyrightId) public view returns (string _owner, string _fingerprint) {\r\n        _owner = copyrights[copyrightId].owner;\r\n        _fingerprint = copyrights[copyrightId].fingerprint;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uid\",\"type\":\"string\"},{\"name\":\"copyrightId\",\"type\":\"string\"},{\"name\":\"fingerprint\",\"type\":\"string\"}],\"name\":\"setCopyright\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAdmin\",\"type\":\"address\"},{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"replaceAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"copyrightId\",\"type\":\"string\"}],\"name\":\"getCopyright\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"string\"},{\"name\":\"_fingerprint\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"copyrightId\",\"type\":\"string\"}],\"name\":\"revokeCopyright\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ZingCopyright","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://af7b9a00302405aab63665c80f782ac7cf4975f819463e39b32842629c0583a2"}]}