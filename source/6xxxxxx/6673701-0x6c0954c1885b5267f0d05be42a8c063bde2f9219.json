{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract EthFund {\r\n    uint constant FIVE = 20; // separate 5 %\r\n\r\n    address public marketing1;\r\n    address public marketing2;\r\n\r\n    mapping(address => uint[]) public balances;\r\n    mapping(address => uint[]) public paid;\r\n    mapping(address => uint) public depositedAt;\r\n    mapping(address => uint) public timestamps;\r\n    \r\n    constructor() public {\r\n        marketing1 = 0x256B9fb6Aa3bbEb383aAC308995428E920307193; // wallet for marketing1;\r\n        marketing2 = 0xdc756C7599aCbeB1F540e15431E51F3eCe58019d; // wallet for marketing2;\r\n    }\r\n\r\n    function() external payable {\r\n        uint len = balances[msg.sender].length;\r\n        uint profit = 0;\r\n        for (uint i = 0; i < len; i++) {\r\n            uint investment = balances[msg.sender][i];\r\n            if (investment != 0 && investment * 2 > paid[msg.sender][i]) { // 200 %\r\n                uint p = investment / 100 * (block.number - timestamps[msg.sender]) / 5900;\r\n                paid[msg.sender][i] += p;\r\n                profit += p;\r\n            } else {\r\n                delete balances[msg.sender][i];\r\n                delete paid[msg.sender][i];\r\n            }\r\n        }\r\n        if (profit > 0) {\r\n            msg.sender.transfer(profit);\r\n        }\r\n\r\n        if (msg.value > 0) {\r\n            uint marketingCommission = msg.value / FIVE;\r\n            marketing1.transfer(marketingCommission);\r\n            marketing2.transfer(marketingCommission);\r\n\r\n            address referrer = bytesToAddress(msg.data);\r\n            address investor = msg.sender;\r\n            if (referrer != address(0) && referrer != msg.sender) {\r\n                uint referralCommission = msg.value / FIVE;\r\n                referrer.transfer(referralCommission);\r\n                investor.transfer(referralCommission);\r\n            }\r\n\r\n            if (block.number - depositedAt[msg.sender] >= 5900 || len == 0) {\r\n                balances[msg.sender].push(msg.value);\r\n                paid[msg.sender].push(0);\r\n                depositedAt[msg.sender] = block.number;\r\n            } else {\r\n                balances[msg.sender][len - 1] += msg.value;\r\n            }\r\n        }\r\n\r\n        if (profit == 0 && msg.value == 0) {\r\n            delete balances[msg.sender];\r\n            delete paid[msg.sender];\r\n            delete timestamps[msg.sender];\r\n        } else {\r\n            timestamps[msg.sender] = block.number;\r\n        }\r\n    }\r\n\r\n    function bytesToAddress(bytes bs) internal pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(bs, 0x14))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketing1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketing2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"timestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"EthFund","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9aa29c0ef22f40b0e10a9bce4470807f8f748bc474b0c4f4b8f95d29d1b5ead4"}]}