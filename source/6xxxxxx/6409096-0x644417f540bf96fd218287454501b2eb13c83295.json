{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface token {\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n}\r\n\r\ncontract Dividends {\r\n    address private maintoken = 0x2f7823aaf1ad1df0d5716e8f18e1764579f4abe6;\r\n    address private owner = msg.sender;\r\n    address private user;\r\n    uint256 private usertoken;\r\n    uint256 private userether;\r\n    uint256 public dividends1token = 3521126760563;\r\n    uint256 public dividendstart = 1538051599;\r\n    mapping (address => uint256) public users;\r\n    mapping (address => uint256) public admins;\r\n    token public tokenReward;\r\n    \r\n    function Dividends() public {\r\n        tokenReward = token(maintoken);\r\n        admins[msg.sender] = 1;\r\n    }\r\n\r\n    function() external payable {\r\n        \r\n        if (admins[msg.sender] != 1) {\r\n            \r\n            user = msg.sender;\r\n            \r\n            usertoken = tokenReward.balanceOf(user);\r\n            \r\n            if ( (now > dividendstart ) && (usertoken != 0) && (users[user] != 1) ) {\r\n                \r\n                userether = usertoken * dividends1token + msg.value;\r\n                user.transfer(userether);\r\n                \r\n                users[user] = 1;\r\n            } else {\r\n                user.transfer(msg.value);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function admin(address _admin, uint8 _value) public {\r\n        require(msg.sender == owner);\r\n        \r\n        admins[_admin] = _value;\r\n    }\r\n    \r\n    function out() public {\r\n        require(msg.sender == owner);\r\n        \r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint8\"}],\"name\":\"admin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividends1token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"out\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividendstart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Dividends","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e3a917b7e61a010f01276f75f314d23c4766c91b045012075c8aefeac193740a"}]}