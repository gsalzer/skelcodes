{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\ncontract VirtuDollar {\r\n    // ERC20 standard specs\r\n    string public name = \"Virtu Dollar\";\r\n    string public symbol = \"V$\";\r\n    string public standard = \"Virtu Dollar v1.0\";\r\n    uint8 public decimals = 18;\r\n\r\n    // VirtuDollar total supply which is publicly visible on the ethereum blockchain.\r\n    uint256 public VDollars;\r\n\r\n    // Map for owner addresses that holds the balances.\r\n    mapping( address => uint256) public balanceOf;\r\n\r\n    // Map for owner addresses that holds the allowed addresses and remaining allowance\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    // Virtu dollar owner identity\r\n    address owner;\r\n\r\n    // The smart contract will start initially with a zero total supply\r\n    constructor(uint256 _initialSupply) public {\r\n        // Initiate the owner\r\n        owner = msg.sender;\r\n        // Update the owner balance\r\n        balanceOf[owner] = _initialSupply * 10 ** uint256(decimals);\r\n        // Mint the initial virtu dollar supply\r\n        VDollars = balanceOf[owner];\r\n    }\r\n\r\n    // Implementing the ERC 20 transfer function\r\n    function transfer (address _to, uint256 _value) public returns (bool success) {\r\n        // Require the value to be already present in the balance\r\n        require(balanceOf[msg.sender] >= _value);\r\n        // Decrement the balance of the sender\r\n        balanceOf[msg.sender] -= _value;\r\n        // Increment the balance of the recipient\r\n        balanceOf[_to] += _value;\r\n        // Fire the Transfer event\r\n        emit Transfer(msg.sender, _to, _value);\r\n        // Return the success flag\r\n        return true;\r\n    }\r\n\r\n    // Implementing the ERC 20 transfer event\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _value\r\n    );\r\n\r\n    // Implementing the ERC 20 delegated transfer function\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        // Checking the value is available in the balance\r\n        require(_value <= balanceOf[_from]);\r\n        // Checking the value is allowed\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        // Performing the transfer\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        // Decrementing the allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        // Firing the transfer event\r\n        emit Transfer(_from, _to, _value);\r\n        // Returning the success flag\r\n        return true;\r\n    }\r\n\r\n    // Implementing the ERC 20 approval event\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n\r\n    // Impelmenting the ERC 20 approve function\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        // Setting the allowance to the new amount\r\n        allowance[msg.sender][_spender] = _value;\r\n        // Firing the approval event\r\n        emit Approval(msg.sender, _spender, _value);\r\n        // Returning the success flag\r\n        return true;\r\n    }\r\n\r\n    // Implementing the Burn event\r\n    event Burn (\r\n        address indexed _from,\r\n        uint256 _value\r\n    );\r\n\r\n    // Implementing the burn function\r\n    function burn (uint256 _value) public returns (bool success) {\r\n        // Checking the owner has enough balance\r\n        require(balanceOf[msg.sender] >= _value);\r\n        // Decrementing the balance\r\n        balanceOf[msg.sender] -= _value;\r\n        // Burning the tokens\r\n        VDollars -= _value;\r\n        // Firing the burn event\r\n        emit Burn(msg.sender, _value);\r\n        // Returning the success flag\r\n        return true;\r\n    }\r\n\r\n    // Implementing the delegated burn function\r\n    function burnFrom (address _from, uint256 _value) public returns (bool success) {\r\n        // Check if the owner has enough balance\r\n        require(balanceOf[_from] >= _value);\r\n        // Check if the spender has enough allowance\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        // Decrement the owner balance\r\n        balanceOf[_from] -= _value;\r\n        // Decrement the allowance value\r\n        allowance[_from][msg.sender] -= _value;\r\n        // Burn the tokens\r\n        VDollars -= _value;\r\n        // Fire the burn event\r\n        emit Burn(_from, _value);\r\n        // Returning the success flag\r\n        return true;\r\n    }\r\n\r\n    // Implementing the Mint event\r\n    event Mint(\r\n        address indexed _from,\r\n        uint256 _value\r\n    );\r\n\r\n    // Implementing the mint function\r\n    function mint (uint256 _value) public returns (bool success) {\r\n        // Checking the owner is the owner of the coin\r\n        require(msg.sender == owner);\r\n        // Incrementing the owner balance\r\n        balanceOf[owner] += _value;\r\n        // Minting the tokens\r\n        VDollars += _value;\r\n        // Firing the mint event\r\n        emit Mint(msg.sender, _value);\r\n        // Returning the success flag\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VDollars\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"}]","ContractName":"VirtuDollar","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000186a0","Library":"","SwarmSource":"bzzr://e39cbcc128966a70742f7b0c763a38e8a4792df8cf8d65305a7da9ef7b3bb6fa"}]}