{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// ----------------------------------------------------------------------------\r\n// BokkyPooBah's Pricefeed from a single source\r\n//\r\n// Deployed to: 0x4604646C55410EAa6Cf43b04d26071E36bC227Ef\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2018. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n    bool private initialised;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function initOwned(address _owner) internal {\r\n        require(!initialised);\r\n        owner = _owner;\r\n        initialised = true;\r\n    }\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n    function transferOwnershipImmediately(address _newOwner) public onlyOwner {\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Maintain a list of operators that are permissioned to execute certain\r\n// functions\r\n// ----------------------------------------------------------------------------\r\ncontract Operated is Owned {\r\n    mapping(address => bool) public operators;\r\n\r\n    event OperatorAdded(address _operator);\r\n    event OperatorRemoved(address _operator);\r\n\r\n    modifier onlyOperator() {\r\n        require(operators[msg.sender] || owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    function initOperated(address _owner) internal {\r\n        initOwned(_owner);\r\n    }\r\n    function addOperator(address _operator) public onlyOwner {\r\n        require(!operators[_operator]);\r\n        operators[_operator] = true;\r\n        emit OperatorAdded(_operator);\r\n    }\r\n    function removeOperator(address _operator) public onlyOwner {\r\n        require(operators[_operator]);\r\n        delete operators[_operator];\r\n        emit OperatorRemoved(_operator);\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// PriceFeed Interface - _live is true if the rate is valid, false if invalid\r\n// ----------------------------------------------------------------------------\r\ncontract PriceFeedInterface {\r\n    function getRate() public view returns (uint _rate, bool _live);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Pricefeed from a single source\r\n// ----------------------------------------------------------------------------\r\ncontract PriceFeed is PriceFeedInterface, Operated {\r\n    string public name;\r\n    uint public rate;\r\n    bool public live;\r\n\r\n    event SetRate(uint oldRate, bool oldLive, uint newRate, bool newLive);\r\n\r\n    constructor(string _name, uint _rate, bool _live) public {\r\n        initOperated(msg.sender);\r\n        name = _name;\r\n        rate = _rate;\r\n        live = _live;\r\n        emit SetRate(0, false, rate, live);\r\n    }\r\n    function setRate(uint _rate, bool _live) public onlyOperator {\r\n        emit SetRate(rate, live, _rate, _live);\r\n        rate = _rate;\r\n        live = _live;\r\n    }\r\n    function getRate() public view returns (uint _rate, bool _live) {\r\n        return (rate, live);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_live\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_live\",\"type\":\"bool\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipImmediately\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_live\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldLive\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"newRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newLive\",\"type\":\"bool\"}],\"name\":\"SetRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"OperatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PriceFeed","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000263c3344300000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000011475a452f45544820507269636546656564000000000000000000000000000000","Library":"","SwarmSource":"bzzr://10f9c8b9c3bdf57395b3e3fd37a47470a5fead986b46d6d240505f43711678d0"}]}