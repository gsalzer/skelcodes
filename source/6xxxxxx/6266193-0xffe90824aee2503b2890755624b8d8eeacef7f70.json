{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/**\r\n*\r\n* ETH CRYPTOCURRENCY DISTRIBUTION PROJECT\r\n* Web              - https://333eth.io\r\n* Twitter          - https://twitter.com/333eth_io\r\n* Telegram_channel - https://t.me/Ethereum333\r\n* EN  Telegram_chat: https://t.me/Ethereum333_chat_en\r\n* RU  Telegram_chat: https://t.me/Ethereum333_chat_ru\r\n* KOR Telegram_chat: https://t.me/Ethereum333_chat_kor\r\n* Email:             mailto:support(at sign)333eth.io\r\n* \r\n*  - GAIN 3,33% PER 24 HOURS (every 5900 blocks)\r\n*  - Life-long payments\r\n*  - The revolutionary reliability\r\n*  - Minimal contribution 0.01 eth\r\n*  - Currency and payment - ETH\r\n*  - Contribution allocation schemes:\r\n*    -- 83% payments\r\n*    -- 17% Marketing + Operating Expenses\r\n*\r\n*   ---About the Project\r\n*  Blockchain-enabled smart contracts have opened a new era of trustless relationships without \r\n*  intermediaries. This technology opens incredible financial possibilities. Our automated investment \r\n*  distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be \r\n*  freely accessed online. In order to insure our investors' complete security, full control over the \r\n*  project has been transferred from the organizers to the smart contract: nobody can influence the \r\n*  system's permanent autonomous functioning.\r\n* \r\n* ---How to use:\r\n*  1. Send from ETH wallet to the smart contract address 0x311f71389e3DE68f7B2097Ad02c6aD7B2dDE4C71\r\n*     any amount from 0.01 ETH.\r\n*  2. Verify your transaction in the history of your application or etherscan.io, specifying the address \r\n*     of your wallet.\r\n*  3a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're \r\n*      spending too much on GAS)\r\n*  OR\r\n*  3b. For reinvest, you need to first remove the accumulated percentage of charges (by sending 0 ether \r\n*      transaction), and only after that, deposit the amount that you want to reinvest.\r\n*  \r\n* RECOMMENDED GAS LIMIT: 200000\r\n* RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n* You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n*\r\n* ---It is not allowed to transfer from exchanges, only from your personal ETH wallet, for which you \r\n* have private keys.\r\n* \r\n* Contracts reviewed and approved by pros!\r\n* \r\n* Main contract - Revolution. Scroll down to find it.\r\n*/\r\n\r\n\r\ncontract InvestorsStorage {\r\n  struct investor {\r\n    uint keyIndex;\r\n    uint value;\r\n    uint paymentTime;\r\n    uint refBonus;\r\n  }\r\n  struct itmap {\r\n    mapping(address => investor) data;\r\n    address[] keys;\r\n  }\r\n  itmap private s;\r\n  address private owner;\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner, \"access denied\");\r\n    _;\r\n  }\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n    s.keys.length++;\r\n  }\r\n\r\n  function insert(address addr, uint value) public onlyOwner returns (bool) {\r\n    uint keyIndex = s.data[addr].keyIndex;\r\n    if (keyIndex != 0) return false;\r\n    s.data[addr].value = value;\r\n    keyIndex = s.keys.length++;\r\n    s.data[addr].keyIndex = keyIndex;\r\n    s.keys[keyIndex] = addr;\r\n    return true;\r\n  }\r\n\r\n  function investorFullInfo(address addr) public view returns(uint, uint, uint, uint) {\r\n    return (\r\n      s.data[addr].keyIndex,\r\n      s.data[addr].value,\r\n      s.data[addr].paymentTime,\r\n      s.data[addr].refBonus\r\n    );\r\n  }\r\n\r\n  function investorBaseInfo(address addr) public view returns(uint, uint, uint) {\r\n    return (\r\n      s.data[addr].value,\r\n      s.data[addr].paymentTime,\r\n      s.data[addr].refBonus\r\n    );\r\n  }\r\n\r\n  function investorShortInfo(address addr) public view returns(uint, uint) {\r\n    return (\r\n      s.data[addr].value,\r\n      s.data[addr].refBonus\r\n    );\r\n  }\r\n\r\n  function addRefBonus(address addr, uint refBonus) public onlyOwner returns (bool) {\r\n    if (s.data[addr].keyIndex == 0) return false;\r\n    s.data[addr].refBonus += refBonus;\r\n    return true;\r\n  }\r\n\r\n  function addValue(address addr, uint value) public onlyOwner returns (bool) {\r\n    if (s.data[addr].keyIndex == 0) return false;\r\n    s.data[addr].value += value;\r\n    return true;\r\n  }\r\n\r\n  function setPaymentTime(address addr, uint paymentTime) public onlyOwner returns (bool) {\r\n    if (s.data[addr].keyIndex == 0) return false;\r\n    s.data[addr].paymentTime = paymentTime;\r\n    return true;\r\n  }\r\n\r\n  function setRefBonus(address addr, uint refBonus) public onlyOwner returns (bool) {\r\n    if (s.data[addr].keyIndex == 0) return false;\r\n    s.data[addr].refBonus = refBonus;\r\n    return true;\r\n  }\r\n\r\n  function keyFromIndex(uint i) public view returns (address) {\r\n    return s.keys[i];\r\n  }\r\n\r\n  function contains(address addr) public view returns (bool) {\r\n    return s.data[addr].keyIndex > 0;\r\n  }\r\n\r\n  function size() public view returns (uint) {\r\n    return s.keys.length;\r\n  }\r\n\r\n  function iterStart() public pure returns (uint) {\r\n    return 1;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"refBonus\",\"type\":\"uint256\"}],\"name\":\"addRefBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"paymentTime\",\"type\":\"uint256\"}],\"name\":\"setPaymentTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"keyFromIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"investorFullInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"investorBaseInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"iterStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"investorShortInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"refBonus\",\"type\":\"uint256\"}],\"name\":\"setRefBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"InvestorsStorage","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://202cd60ed611d02a3542cf0ddd798bf96ca6c1a5b963d3e40b3387a9e48dd648"}]}