{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract WishingWell {\r\n\r\n    event wishMade(address indexed wisher, string wish, uint256 amount);\r\n    \r\n    address owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(\r\n            msg.sender == owner,\r\n            \"Only owner can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address new_owner) public onlyOwner {\r\n        owner = new_owner;\r\n    }\r\n    \r\n    function makeWish(string wish) public payable {\r\n        emit wishMade(msg.sender, wish, msg.value);\r\n    }\r\n    \r\n    function withdrawAll() public onlyOwner {\r\n        address(owner).transfer(address(this).balance);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"wish\",\"type\":\"string\"}],\"name\":\"makeWish\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"wisher\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wish\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wishMade\",\"type\":\"event\"}]","ContractName":"WishingWell","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8d46f6a2fba9389088a2b5fff88805f13285fcc4e38e0ef5f6254ea76ff530f8"}]}