{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract Token \r\n{\r\n\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n\t\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n\t\r\n    function transfer(address _to, uint256 _value) returns (bool success) {}\r\n\t\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n\t\r\n    function approve(address _spender, uint256 _value) returns (bool success) {}\r\n\t\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\t\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n}\r\n\r\n\r\ncontract StandardToken is Token\r\n{\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) \r\n\t{\r\n        \r\n        \r\n\t\t\r\n        if (balances[msg.sender] >= _value && _value > 0) \r\n\t\t{\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } \r\n\t\telse \r\n\t\t{ \r\n\t\treturn false; \r\n\t\t}\r\n    }\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success) \r\n\t{\r\n        \r\n        \r\n\t\t\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) \r\n\t\t{\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } \r\n\t\telse \r\n\t\t{ \r\n\t\treturn false; \r\n\t\t}\r\n    }\r\n\t\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) \r\n\t{\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) \r\n\t{\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) \r\n\t{\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    uint256 public totalSupply;\r\n}\r\n\r\ncontract Midelcoin is StandardToken \r\n{\r\n\r\n\t/* Public variables of the token */\r\n\r\n    /*\r\n    NOTE:\r\n    The following variables are OPTIONAL vanities. One does not have to include them.\r\n    They allow one to customize the token contract & in no way influences the core functionality.\r\n    Some wallets/interfaces might not even bother to look at this information.\r\n    */\r\n\t\r\n\tstring public name;                   // Token Name can be seen by the public\r\n    uint8 public decimals;                // How many decimals to show. Standard compliant 18 is used.\r\n    string public symbol;                 // The token symbol.\r\n    string public version = 'H1.0'; \t  //human 1.0 standard. Just an arbitrary version scheme.\r\n    uint256 public unitsOneEthCanBuy;     // Setting the ICO price.\r\n    uint256 public totalEthInWei;         // WEI is the smallest unit of ETH (the equivalent of cent in USD or satoshi in BTC). We'll store the total ETH raised via our ICO here.  \r\n    address public fundsWallet;           // Where the ETH raised is transferred?\r\n\tuint256 public startDate;\r\n    uint256 public bonusEnds;\r\n    uint256 public endDate;\r\n    uint256 public tokens;\r\n\t\r\n\t// This is a constructor function \r\n \r\n    function Midelcoin() {\r\n        balances[msg.sender] = 100000000000000000000000000;             // 100000000 ( Tokens) * 1000000000000000000 (18 decimals).\r\n        totalSupply = 100000000000000000000000000;                      // 100000000MDL total supply.\r\n        name = \"Midelcoin\";                                   \t\t\t \t// The token name is Midelcoin. \r\n        decimals = 18;                                               \t// Amount of decimals for display purposes\r\n        symbol = \"MDL\";                                             \t// Symbol for display purposes\r\n        unitsOneEthCanBuy = 24400;                                      // The price fixed at ETH = $122 at the rate of $0.005/MDL\r\n        fundsWallet = msg.sender;                                    \t// The owner of the contract gets ETH\r\n\t\t\r\n\t\tbonusEnds = now + 4 weeks;                                      // Bonus ends exactly a month after the contract launch\r\n        endDate = now + 10 weeks;                                       // Sale ends exactly two months after the launch\r\n    }\r\n\t\r\n\tfunction () public payable {\r\n\r\n        require(now >= startDate && now <= endDate);\r\n        \r\n        if (balances[fundsWallet] >= 25000000)\r\n        {\r\n            if (now <= bonusEnds) \r\n\t\t\t{\r\n\r\n\t\t\t\ttokens = msg.value * 26000;\r\n\r\n\t\t\t} \r\n        \r\n\t\t\telse\r\n\t\t\t{\r\n\r\n\t\t\t\ttokens = msg.value * 24400;\r\n\r\n\t\t\t}\r\n        }\r\n\t\t\r\n\t\telse \r\n\t\t{\r\n\t\t\ttokens = msg.value * 0; \r\n\t\t}\r\n\r\n        balances[fundsWallet] = balances[fundsWallet] - tokens;\r\n        balances[msg.sender] = balances[msg.sender] + tokens;\r\n\r\n        Transfer(fundsWallet, msg.sender, tokens); // Broadcast a message to the blockchain\r\n\r\n        //Transfer ether to fundsWallet\r\n        fundsWallet.transfer(msg.value);  \r\n\r\n    }\r\n\t\r\n\t/* Approves and then calls the receiving contract */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusEnds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitsOneEthCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEthInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Midelcoin","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ddfa345e69f6f9b2e0faa49855b7963dfc00d3f760c2c7f421bfb0ce57b3bfb5"}]}