{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Token\r\n{\r\n    function totalSupply() constant returns (uint supply) {}\r\n    function balanceOf(address _owner) constant returns (uint balance) {}\r\n    function transfer(address _to, uint _value) returns (bool success) {}\r\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\r\n    function approve(address _spender, uint _value) returns (bool success) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract StandardToken is Token\r\n{\r\n    function transfer(address _to, uint _value) returns (bool success)\r\n    {\r\n        if (balances[msg.sender] >= _value && _value > 0)\r\n        {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            emit Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) returns (bool success)\r\n    {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0)\r\n        {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            emit Transfer(_from, _to, _value);\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint balance)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint _value) returns (bool success)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint remaining)\r\n    {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint) balances;\r\n    mapping (address => mapping (address => uint)) allowed;\r\n    uint public totalSupply;\r\n}\r\n\r\ncontract IzzyToken is StandardToken\r\n{\r\n    string public name;\r\n    uint8 public decimals;\r\n    string public symbol;\r\n\r\n    address public admin;\r\n\r\n    constructor(string _name, string _symbol, uint _totalSupply, address _admin)\r\n    {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = 18;\r\n        admin = _admin;\r\n        totalSupply = _totalSupply * 10 ** uint(decimals);\r\n        balances[admin] = totalSupply;\r\n    }\r\n\r\n    function ()\r\n    {\r\n        revert();\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint _value, bytes _extraData) returns (bool success)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        if(!_spender.call(bytes4(bytes32(keccak256(\"receiveApproval(address,uint,address,bytes)\"))), msg.sender, _value, this, _extraData))\r\n            { revert(); }\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract IZZYTokenSale\r\n{\r\n    address public beneficiary;\r\n    address public creator;\r\n    IzzyToken public izzyT;\r\n    uint public tokenSold;\r\n    uint public tokeninOneEther;\r\n    uint public minContributionInEther;\r\n    uint public maxContributionInEther;\r\n    bool crowdsaleClosed = false;\r\n\r\n    mapping(address => uint) public boughtBy;\r\n    mapping(address => uint) public ethContribution;\r\n    mapping(address => uint) public status; // 0-Invalid 1-Valid\r\n\r\n    constructor(\r\n        address _beneficiary,\r\n        uint _tokeninOneEther,\r\n        uint _minContributionInEther,\r\n        uint _maxContributionInEther,\r\n        address addressOfTokenUsedAsReward)\r\n    {\r\n        beneficiary = _beneficiary;\r\n        creator = msg.sender;\r\n        tokeninOneEther = _tokeninOneEther;\r\n        minContributionInEther = _minContributionInEther * 1 ether;\r\n        maxContributionInEther = _maxContributionInEther * 1 ether;\r\n        izzyT = IzzyToken(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n    function () payable\r\n    {\r\n        require(!crowdsaleClosed);\r\n        require(status[msg.sender] != 0);\r\n        require(msg.value + ethContribution[msg.sender] >= minContributionInEther);\r\n        require(msg.value + ethContribution[msg.sender] <= maxContributionInEther);\r\n\r\n        uint bonus = 35;\r\n\r\n        uint amount = msg.value * tokeninOneEther;\r\n        uint amountToSend = amount + (amount * bonus) / 100;\r\n\r\n        if(izzyT.balanceOf(address(this)) < amountToSend)\r\n            revert();\r\n\r\n        boughtBy[msg.sender] += amountToSend;\r\n        tokenSold += amount;\r\n        ethContribution[msg.sender] += msg.value;\r\n        izzyT.transfer(msg.sender, amountToSend);\r\n        beneficiary.transfer(address(this).balance);\r\n    }\r\n\r\n    function updateBeneficiary(address _beneficiary)\r\n    {\r\n        require (msg.sender == creator);\r\n        beneficiary = _beneficiary;\r\n    }\r\n\r\n    function addContributor(address _contributor)\r\n    {\r\n        require(msg.sender == beneficiary);\r\n        require(_contributor != address(0));\r\n        require(status[_contributor] == 0);\r\n        status[_contributor] = 1;\r\n    }\r\n\r\n    function closeSale()\r\n    {\r\n        require(msg.sender == beneficiary);\r\n        izzyT.transfer(msg.sender, izzyT.balanceOf(address(this)));\r\n        beneficiary.transfer(address(this).balance);\r\n        crowdsaleClosed = true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"updateBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContributionInEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"boughtBy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokeninOneEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxContributionInEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"addContributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"izzyT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_tokeninOneEther\",\"type\":\"uint256\"},{\"name\":\"_minContributionInEther\",\"type\":\"uint256\"},{\"name\":\"_maxContributionInEther\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"IZZYTokenSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000003f8e5f551f8a30d5fae7ecffb4079e4f4cf7f4780000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003200000000000000000000000003e43a1de52407536446e4008caabe5c5931f5888","Library":"","SwarmSource":"bzzr://0f0493cc7bca3cc2d2b702eff36feaa9097bc822d0603aa2f3126c2c4c891f9f"}]}