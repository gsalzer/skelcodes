{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract TokenInterface {\r\n    function name() public view returns (string);\r\n    function symbol() public view returns (string);\r\n    function decimals() public view returns (uint256);\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _owner) public view returns (uint256);\r\n}\r\n\r\ncontract Utils {\r\n    function contractuallyOf(address _address) public view returns(bool) {\r\n        uint length;\r\n        assembly {\r\n            length := extcodesize(_address)\r\n        }\r\n        return (length > 0);\r\n    }\r\n\r\n    function tokenOf(address _contract, address _owner) public view returns(\r\n        bool contractually,\r\n        bool tokenized,\r\n        string name,\r\n        string symbol,\r\n        uint256 decimals,\r\n        uint256 totalSupply,\r\n        uint256 balance\r\n    ) {\r\n        contractually = contractuallyOf(_contract);\r\n        if (contractually) {\r\n            TokenInterface token = TokenInterface(_contract);\r\n            name = token.name();\r\n            symbol = token.symbol();\r\n            decimals = token.decimals();\r\n            totalSupply = token.totalSupply();\r\n            balance = token.balanceOf(_owner);\r\n            \r\n            if (bytes(name).length > 0 && bytes(symbol).length > 0 && totalSupply > 0) {\r\n                tokenized = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function recover(bytes32 _hash, bytes _sig) public pure returns (address) {\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n\r\n        if (_sig.length != 65) {\r\n            return (address(0));\r\n        }\r\n\r\n        assembly {\r\n            r := mload(add(_sig, 32))\r\n            s := mload(add(_sig, 64))\r\n            v := byte(0, mload(add(_sig, 96)))\r\n        }\r\n\r\n        if (v < 27) {\r\n            v += 27;\r\n        }\r\n\r\n        if (v != 27 && v != 28) {\r\n            return (address(0));\r\n        } else {\r\n            return ecrecover(_hash, v, r, s);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokenOf\",\"outputs\":[{\"name\":\"contractually\",\"type\":\"bool\"},{\"name\":\"tokenized\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"contractuallyOf\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Utils","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://88dbd79684ae2b63ecf157c74a310271f68153846bf3682c4f87d24376c506ad"}]}