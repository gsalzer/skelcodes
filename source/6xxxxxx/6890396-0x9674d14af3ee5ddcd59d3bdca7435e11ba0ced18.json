{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\ncontract Prosperity {\r\n    \r\n    /**\r\n     * Converts all incoming ethereum to tokens for the caller, and passes down the referral\r\n     */\r\n    function buy(address _referredBy) public payable returns(uint256);\r\n    \r\n    /**\r\n     * Converts all of caller's dividends to tokens.\r\n     */\r\n    function reinvest() public;\r\n    \r\n    /**\r\n     * Liquifies tokens to ethereum.\r\n     */\r\n    function sell(uint256 _amountOfTokens) public;\r\n    \r\n    /**\r\n     * Alias of sell() and withdraw().\r\n     */\r\n    function exit() public;\r\n    \r\n    /**\r\n     * Withdraws all of the callers earnings.\r\n     */\r\n    function withdraw() public;\r\n    \r\n    /**\r\n     * Retrieve the token balance of any single address.\r\n     */\r\n    function balanceOf(address _customerAddress) view public returns(uint256);\r\n    \r\n    /**\r\n     * Retrieve the dividend balance of any single address.\r\n     */\r\n    function dividendsOf(address _customerAddress) view public returns(uint256);\r\n}\r\n\r\ncontract Fertilizer {\r\n    \r\n    /*==============================\r\n    =            EVENTS            =\r\n    ==============================*/\r\n    event onDistribute(\r\n        address pusher, \r\n        uint256 percent, \r\n        uint256 oldBal, \r\n        uint256 newBal\r\n    );\r\n    \r\n    \r\n    /*================================\r\n    =            DATASETS            =\r\n    ================================*/\r\n    address internal fund_;\r\n    Prosperity internal Exchange_;\r\n    \r\n    \r\n    /*=======================================\r\n    =            PUBLIC FUNCTIONS            =\r\n    =======================================*/\r\n    constructor() \r\n        public \r\n    {\r\n        Exchange_ = Prosperity(0xFf567f72F6BC585A3143E6852A2fF7DF26e5f455);\r\n        fund_ = 0x1E2F082CB8fd71890777CA55Bd0Ce1299975B25f;\r\n    }\r\n    \r\n    // used so the distribute function can call Prosperities withdraw function\r\n    function() external payable {}\r\n    \r\n    function distribute(uint256 _percent) \r\n        public\r\n    {\r\n        require(_percent > 0 && _percent < 100);\r\n        \r\n        address _pusher = msg.sender;\r\n        uint256 _bal = address(this).balance;\r\n        \r\n        // setup _stop.  this will be used to tell the loop to stop\r\n        uint256 _stop = (_bal * (100 - _percent)) / 100;\r\n        \r\n        // buy & sell    \r\n        Exchange_.buy.value(_bal)(fund_);\r\n        Exchange_.sell(Exchange_.balanceOf(address(this)));\r\n        \r\n        // setup tracker.  this will be used to tell the loop to stop\r\n        uint256 _tracker = Exchange_.dividendsOf(address(this));\r\n\r\n        // reinvest/sell loop\r\n        while (_tracker >= _stop) \r\n        {\r\n            // lets burn some tokens to distribute dividends to THC hodlers\r\n            Exchange_.reinvest();\r\n            Exchange_.sell(Exchange_.balanceOf(address(this)));\r\n            \r\n            // update our tracker with estimates (yea. not perfect, but cheaper on gas)\r\n            _tracker = (_tracker * 64) / 100;\r\n        }\r\n        \r\n        // withdraw\r\n        Exchange_.withdraw();\r\n        \r\n        // fire event\r\n        emit onDistribute(_pusher, _percent, _bal, address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pusher\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"percent\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldBal\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newBal\",\"type\":\"uint256\"}],\"name\":\"onDistribute\",\"type\":\"event\"}]","ContractName":"Fertilizer","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c9645927623d8592df12e8f0144e1a5b90d27f4f69c5b3bcdd96862123bd2fd9"}]}