{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    require(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n    function approve(address _spender, uint256 _value) external returns (bool success);\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n    using SafeMath for uint256;\r\n    function transfer(address _to, uint256 _value) external returns (bool success) {\r\n      if (balances[msg.sender] >= _value) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value) {\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) external view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender,  uint256 _value) external returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval (address _spender, uint _addedValue) external returns (bool success) {\r\n      allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n      emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n      return true;\r\n    }\r\n\r\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\r\n      uint oldValue = allowed[msg.sender][_spender];\r\n      if (_subtractedValue >= oldValue) {\r\n        allowed[msg.sender][_spender] = 0;\r\n      } else {\r\n        allowed[msg.sender][_spender] -= _subtractedValue;\r\n      }\r\n      emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n      return true;\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract Ownable {\r\n    event TransferOwner(address _from, address _to);\r\n\r\n    address public owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit TransferOwner(0x0, msg.sender);\r\n    }\r\n    \r\n    function setOwner(address _owner) external returns (bool) {\r\n        require(owner == msg.sender);\r\n        owner = _owner;\r\n        emit TransferOwner(msg.sender, _owner);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract MintableToken is StandardToken, Ownable {\r\n    function mint(address _to, uint256 _amount) external returns (bool) {\r\n        require(owner == msg.sender, \"Only owner can mint\");\r\n        totalSupply = totalSupply.add(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(0x0, _to, _amount);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract MetaToken is MintableToken {\r\n    string private iName;\r\n    string private iSymbol;\r\n    uint8 private iDecimals;\r\n\r\n    // The admin can only change metadata\r\n    // it can't mint tokens or change values\r\n    address public admin;\r\n\r\n    constructor(\r\n        string _name,\r\n        string _symbol,\r\n        uint8 _decimals,\r\n        address _admin\r\n    ) public {\r\n        iName = _name;\r\n        iSymbol = _symbol;\r\n        iDecimals = _decimals;\r\n        admin = _admin;\r\n    }\r\n    \r\n    function name() external view returns (string) {\r\n        return iName;\r\n    }\r\n    \r\n    function symbol() external view returns (string) {\r\n        return iSymbol;\r\n    }\r\n    \r\n    function decimals() external view returns (uint8) {\r\n        return iDecimals;\r\n    }\r\n    \r\n    function setName(string _name) external {\r\n        require(msg.sender == admin, \"Only admin\");\r\n        iName = _name;\r\n    }\r\n    \r\n    function setSymbol(string _symbol) external {\r\n        require(msg.sender == admin, \"Only admin\");\r\n        iSymbol = _symbol;\r\n    }\r\n    \r\n    function setAdmin(address _admin) external {\r\n        require(msg.sender == admin, \"Only admin\");\r\n        admin = _admin;\r\n    }\r\n}\r\n\r\ncontract Button is Ownable {\r\n    // metadata\r\n    string public constant name = \"THE BUTTON\";\r\n    string public constant symbol = \"BUTTON\";\r\n    string public constant version = \"0.0\";\r\n    uint8 public constant decimals = 0;\r\n    uint256 public constant totalSupply = 1;\r\n    \r\n    uint256 private _ticket = 750000000000000;\r\n    uint256 public end;\r\n    \r\n    // 1 hour\r\n    uint256 public duration = 1 * 60 * 60;\r\n    \r\n    // Ticket window\r\n    uint256 public window = 24 * 60 * 60;\r\n    \r\n    // Plays in window\r\n    \r\n    // E-BUTTON Tokens\r\n    MetaToken public eButton;\r\n    MetaToken public eTicket;\r\n    MetaToken public wtToken;\r\n\r\n    // Winner\r\n    address public best;\r\n    \r\n    // Bids\r\n    mapping(uint256 => uint256) public total;\r\n    \r\n    // Events \r\n    event Buy(address _by, uint256 _ticket, uint256 _end);\r\n    event Claim(address _by, uint256 _amount);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n    \r\n    constructor() public {\r\n        end = now + duration;\r\n        eButton = new MetaToken('E-BUTTON Token', \"E-BUTTON\", 18, msg.sender);\r\n        eTicket = new MetaToken('TICKET Token', \"T-BUTTON\", 0, msg.sender);\r\n        wtToken = new MetaToken('Why ??? token', 'WHY', 0, msg.sender);\r\n    }\r\n    \r\n    function balanceOf(address _owner) external view returns (uint256) {\r\n        return _owner == best ? 1 : 0; \r\n    }\r\n    \r\n    function ticket() external view returns (uint256) {\r\n        if (total[now / window] == 0) {\r\n            // Recalc ticket\r\n            uint256 lastPlayDay = (end - duration) / window;\r\n            return (total[lastPlayDay] / 30 + _ticket * 2) / 3;\r\n        } else {\r\n            return _ticket;\r\n        }\r\n    }\r\n    \r\n    function claim() external returns (bool) {\r\n        require(msg.sender == best, \"The caller is not the winner\");\r\n        require(now >= end, \"The round didn't end\");\r\n        require(best.send(address(this).balance), \"The winner can't receive ETH\");\r\n        emit Claim(msg.sender, address(this).balance);\r\n        _ticket = 750000000000000;\r\n        return true;\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _amount) external returns (bool) {\r\n        require(_amount == 1, \"THERE IS ONLY ONE BUTTON\");\r\n        require(msg.sender == best, \"THE BUTTON IS NOT YOURS\");\r\n        emit Transfer(msg.sender, _to, 1);\r\n        best = _to;\r\n        return true;\r\n    }\r\n    \r\n    function() external payable {\r\n        uint256 day = now / window;\r\n\r\n        // Recalc ticket if required\r\n        if (total[day] == 0) {\r\n            uint256 lastPlayDay = (end - duration) / window;\r\n            _ticket = (total[lastPlayDay] / 30 + _ticket * 2) / 3;\r\n        }\r\n        \r\n        require(msg.value >= _ticket, \"Didn't pay the ticket\");\r\n        emit Transfer(best, msg.sender, 1);\r\n        \r\n        if (best == msg.sender && (end - now) < duration / 4) {\r\n            // GOOD! You are outbidding yourself\r\n            // have a Why token as medal\r\n            wtToken.mint(msg.sender, 1);\r\n        }\r\n        \r\n        best = msg.sender;\r\n        owner.send((msg.value / 100) * 5); // Ignore fee failure\r\n        end = now + duration;\r\n\r\n        total[day] += _ticket;\r\n\r\n        emit Buy(msg.sender, _ticket, end);\r\n\r\n        // Emit extra Tokens\r\n        eButton.mint(msg.sender, _ticket);\r\n        eTicket.mint(msg.sender, 1);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"TransferOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MetaToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000091b5ae17a7b5dc5bebe617b2f0569f1f517e376000000000000000000000000000000000000000000000000000000000000000c5449434b455420546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008542d425554544f4e000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d02e1741d753c313be758efb27aea511bbcd4fb338c1dff380374f49cf6b062b"}]}