{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/**\r\n * @title Contrato padrão para definição do proprietário do contrato detentor do token\r\n * @author Alaor Jr.\r\n */\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Contrato para criação do token utilizado no projeto \"MaisPetro\"\r\n * @author Alaor Jr.\r\n */\r\ncontract Igni is owned {\r\n    /// Informações do token\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 1;\r\n    uint256 public totalSupply;\r\n\r\n    /// Array associativo de saldos das carteiras\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    /// Evento que notifica a aplicação cliente Etherum da transferência de tokens\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// Evento que notifica a aplicação cliente Etherum da aprovação de saldo de um proprietário para um \"gastador\"\r\n    event Approval(address indexed holder, address indexed spender, uint256 value);\r\n\r\n    /// Evento que notifica a aplicação cliente Etherum da \"queima\" de tokens\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * @notice Inicializa o contrato com as informações do token passadas por parâmetro\r\n     * @dev É executado uma única vez no momento do deploy na Ethereum Virtual Machine (EVM)\r\n     */\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[msg.sender] = totalSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfere tokens de uma carteira para outra\r\n     * @dev Função interna que pode apenas ser chamada pelo contrato\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);                                            // Previne de enviar tokens para o endereço 0x0\r\n        require(balanceOf[_from] >= _value);                            // Verifica se o saldo na carteira de origem é suficiente\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);              // Previne overflow na carteira de destino\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);  // Verificação adicional para um caso de overflow não detectado\r\n    }\r\n\r\n    /**\r\n     * @notice Transfere tokens para uma carteira\r\n     *\r\n     * @param _to    Endereço da carteira que receberá os tokens\r\n     * @param _value Quantidade de tokens a ser enviado\r\n     *\r\n     * @return bool\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfere tokens de para uma carteira em nome de outra carteira\r\n     *\r\n     * @param _from  Endereço da carteira que enviará os tokens\r\n     * @param _to    Endereço da carteira que receberá os tokens\r\n     * @param _value Quantidade de tokens a ser enviado\r\n     * @param _value Quantidade de tokens que serão debitados do valor a receber por \"_to\", como forma de taxa da transação\r\n     *\r\n     * @return bool\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value, uint256 _fee) onlyOwner public returns (bool success) {\r\n        _transfer(_from, owner, _fee);\r\n        _transfer(_from, _to, _value - _fee);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"Igni","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000c65d400000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000747616c6c6f6e7300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000447414c4c00000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://92583613dea0839dbdb2864617b0acea0517af2a999172e464c663896dc7f1f2"}]}