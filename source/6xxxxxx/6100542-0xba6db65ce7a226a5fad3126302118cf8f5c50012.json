{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract CChain {\r\n\r\n    //Model User\r\n    struct User {\r\n        int8 gifters;\r\n        uint id;\r\n        uint lineNo;\r\n        bool in_queue;\r\n        string uid;\r\n        address eth_address;\r\n       // bool newPayer;\r\n    }\r\n\r\n    //Store User\r\n    User[] userStore;\r\n\r\n    //Fetch User\r\n    mapping(address => User) public users;\r\n    mapping(uint => address) public intUsers;\r\n    //Store User Count\r\n    uint public userCount;\r\n    //pay price\r\n    //uint price = 0.10 ether;\r\n    //contract fee\r\n    //uint contract_price = 0.025 ether;\r\n    uint gift = 0.30 ether;\r\n    uint public total_price = 0.125 ether;\r\n    //my own\r\n    address public iown;\r\n\r\n    uint public currentlyInLine;\r\n    uint public lineCount;\r\n\r\n     //Constructor\r\n    constructor() public{\r\n        iown = msg.sender;\r\n        currentlyInLine = 0;\r\n        lineCount = 0;\r\n    }\r\n\r\n    //add User to Contract\r\n    function addUser(string _user_id, address _user_address) private {\r\n        require(users[_user_address].id == 0);\r\n\r\n        userCount++;\r\n        userStore.length++;\r\n        User storage u = userStore[userStore.length - 1];\r\n        u.id = userCount;\r\n        u.uid = _user_id;\r\n        u.eth_address = _user_address;\r\n        u.in_queue = false;\r\n        u.gifters = 0;\r\n\r\n        users[_user_address] = u;\r\n        //intUsers[userCount] = _user_address;\r\n        //checkGifters();\r\n    }\r\n\r\n\r\n    //Pay to get in line\r\n    function getInLine(string _user_id, address _user_address) public payable returns (bool) {\r\n        require(msg.value >= total_price);\r\n        require(users[_user_address].in_queue == false);\r\n\r\n        if(users[_user_address].id == 0) {\r\n            addUser(_user_id, _user_address);\r\n        }\r\n\r\n        lineCount++;\r\n        User storage u = users[_user_address];\r\n        u.in_queue = true;\r\n        u.lineNo = lineCount;\r\n        intUsers[lineCount] = _user_address;\r\n\r\n        checkGifters();\r\n\r\n        return true;\r\n    }\r\n\r\n    function checkGifters() private {\r\n        if(currentlyInLine == 0){\r\n            currentlyInLine = 1;\r\n        }\r\n        else{\r\n            address add = intUsers[currentlyInLine];\r\n            User storage u = users[add];\r\n            u.gifters++;\r\n            if(u.gifters == 3 && u.in_queue == true){\r\n                u.in_queue = false;\r\n                currentlyInLine++;\r\n            }\r\n        }\r\n    }\r\n\r\n    //read your gifter\r\n    function getMyGifters(address _user_address) external view returns (int8) {\r\n        return users[_user_address].gifters;\r\n    }\r\n\r\n    //user withdraw\r\n    function getGifted(address _user_address) external {\r\n        require(users[_user_address].id != 0);\r\n        require(users[_user_address].gifters == 3);\r\n\r\n        if(users[_user_address].id != 0 && users[_user_address].gifters == 3){\r\n            _user_address.transfer(gift);\r\n            User storage u = users[_user_address];\r\n            u.gifters = 0;\r\n        }\r\n    }\r\n\r\n    //admin\r\n    function withdraw() external{\r\n        require(msg.sender == iown);\r\n        iown.transfer(address(this).balance);\r\n    }\r\n\r\n    function withdrawAmount(uint amount) external{\r\n        require(msg.sender == iown);\r\n        iown.transfer(amount);\r\n    }\r\n\r\n    function getThisBalance() external view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user_address\",\"type\":\"address\"}],\"name\":\"getMyGifters\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentlyInLine\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user_id\",\"type\":\"string\"},{\"name\":\"_user_address\",\"type\":\"address\"}],\"name\":\"getInLine\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"iown\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getThisBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"gifters\",\"type\":\"int8\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"lineNo\",\"type\":\"uint256\"},{\"name\":\"in_queue\",\"type\":\"bool\"},{\"name\":\"uid\",\"type\":\"string\"},{\"name\":\"eth_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"intUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user_address\",\"type\":\"address\"}],\"name\":\"getGifted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lineCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CChain","CompilerVersion":"v0.4.25-nightly.2018.6.6+commit.59b35fa5","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://402a53fbe1eb4c7f14b0f02e9127ab9d418407b7fccff0039017286dc7f844fc"}]}