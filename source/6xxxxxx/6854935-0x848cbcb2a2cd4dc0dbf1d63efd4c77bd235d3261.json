{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/*\r\n * Website: smartolution.org\r\n *\r\n * Easiest way to participate in original Smartolution!\r\n * This is not a separate project, all ether goes to the original contract!\r\n * 0xe0ae35fe7Df8b86eF08557b535B89bB6cb036C23\r\n * \r\n * Smartolution.org (0xe0ae35fe7Df8b86eF08557b535B89bB6cb036C23)\r\n * requires you to send daily transactions for 44 days!\r\n *\r\n * This contract DOES IT FOR YOU!\r\n *\r\n * ONE transaction and AUTOMATIC PAYOUTS for 44 days! \r\n * \r\n * How it works?\r\n * Easy! \r\n * Your first and only payment will be split into 45 equal parts\r\n * and sent as an automatic daily payment to smartolution contract!\r\n * Starting from the next day for 44 days you are going to recieve\r\n * INCREASING PAYOUTS from original smartolution contract!\r\n *\r\n * NO NEED to send 0 ether transactions, FULLY AUTOMATED PAYROLL!\r\n *\r\n * Send any amount inbetween 0.45 and 225 ether!\r\n *\r\n * Minimum: 0.45 ether (0.01 ether daily) ~170% payout @ 45th day\r\n * Maximum: 225 ehter (5 ether daily) ~155% payout @ 45th day\r\n * Gas limit: 500 000\r\n * Recommended gas price: https://ethgasstation.info/\r\n * \r\n */\r\ncontract EasySmartolution {\r\n\r\n    event ParticipantAdded(address _sender);\r\n    event ParticipantRemoved(address _sender);\r\n    event ReferrerAdded(address _contract, address _sender);\r\n\r\n    mapping (address => address) public participants; \r\n    mapping (address => bool) public referrers;\r\n    \r\n    address private processing;\r\n \r\n    constructor(address _processing) public {\r\n        processing = _processing;\r\n    }\r\n    \r\n    function () external payable {\r\n        if (participants[msg.sender] == address(0)) {\r\n            addParticipant(msg.sender, address(0));\r\n        } else {\r\n            require(msg.value == 0, \"0 ether to manually make a daily payment\");\r\n\r\n            processPayment(msg.sender);\r\n        }\r\n    }\r\n    \r\n    function addParticipant(address _address, address _referrer) payable public {\r\n        require(participants[_address] == address(0), \"This participant is already registered\");\r\n        require(msg.value >= 0.45 ether && msg.value <= 225 ether, \"Deposit should be between 0.45 ether and 225 ether (45 days)\");\r\n        \r\n        participants[_address] = address(new Participant(_address, msg.value / 45));\r\n        processPayment(_address);\r\n        \r\n        processing.send(msg.value / 20);\r\n        if (_referrer != address(0) && referrers[_referrer]) {\r\n            _referrer.send(msg.value / 20);\r\n        }\r\n  \r\n        emit ParticipantAdded(_address);\r\n    }\r\n    \r\n    function addReferrer(address _address) public {\r\n        require(!referrers[_address], \"This address is already a referrer\");\r\n        \r\n        referrers[_address] = true;\r\n        EasySmartolutionRef refContract = new EasySmartolutionRef(address(this));\r\n        refContract.setReferrer(_address);\r\n        emit ReferrerAdded(address(refContract), _address);\r\n    }\r\n\r\n    function processPayment(address _address) public {\r\n        Participant participant = Participant(participants[_address]);\r\n\r\n        bool done = participant.processPayment.value(participant.daily())();\r\n        \r\n        if (done) {\r\n            participants[_address] = address(0);\r\n            emit ParticipantRemoved(_address);\r\n        }\r\n    }\r\n}\r\n\r\ncontract EasySmartolutionRef {\r\n    address public referrer;\r\n    address public smartolution;\r\n    \r\n    constructor (address _smartolution) public {\r\n        smartolution = _smartolution;\r\n    }\r\n\r\n    function setReferrer(address _referrer) external {\r\n        require(referrer == address(0), \"referrer can only be set once\");\r\n        referrer = _referrer;\r\n    }\r\n\r\n    function () external payable {\r\n        if (msg.value > 0) {\r\n            EasySmartolution(smartolution).addParticipant.value(msg.value)(msg.sender, referrer);\r\n        } else {\r\n            EasySmartolution(smartolution).processPayment(msg.sender);\r\n        }\r\n    }\r\n}\r\n\r\ncontract Participant {\r\n    address constant smartolution = 0xe0ae35fe7Df8b86eF08557b535B89bB6cb036C23;\r\n\r\n    address public owner;\r\n    uint public daily;\r\n    \r\n    constructor(address _owner, uint _daily) public {\r\n        owner = _owner;\r\n        daily = _daily;\r\n    }\r\n    \r\n    function () external payable {}\r\n    \r\n    function processPayment() external payable returns (bool) {\r\n        require(msg.value == daily, \"Invalid value\");\r\n        \r\n        uint indexBefore;\r\n        uint index;\r\n        (,indexBefore,) = SmartolutionInterface(smartolution).users(address(this));\r\n        smartolution.call.value(msg.value)();\r\n        (,index,) = SmartolutionInterface(smartolution).users(address(this));\r\n\r\n        require(index != indexBefore, \"Smartolution rejected that payment, too soon or not enough ether\");\r\n    \r\n        owner.send(address(this).balance);\r\n\r\n        return index == 45;\r\n    }\r\n}\r\n\r\ncontract SmartolutionInterface {\r\n    struct User {\r\n        uint value;\r\n        uint index;\r\n        uint atBlock;\r\n    }\r\n\r\n    mapping (address => User) public users; \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"smartolution\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referrer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"setReferrer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_smartolution\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"EasySmartolutionRef","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002628E13a3CBDC52Ed96b4B8D6b1041D3EF3A409e","Library":"","SwarmSource":"bzzr://01d611e6aff4163b28a366562072ac6c963d9039df7717cff8a6775c73433b8b"}]}