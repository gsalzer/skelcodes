{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC20Interface {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint public totalSupply;\r\n\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n//设置代币控制合约的管理员\r\ncontract Owned {\r\n \r\n    // modifier(条件)，表示必须是权力所有者才能do something，类似administrator的意思\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;//do something \r\n    }\r\n \r\n\t//权力所有者\r\n    address public owner;\r\n \r\n\t//合约创建的时候执行，执行合约的人是第一个owner\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\t//新的owner,初始为空地址，类似null\r\n    address newOwner=0x0;\r\n \r\n\t//更换owner成功的事件\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n \r\n    //现任owner把所有权交给新的owner(需要新的owner调用acceptOwnership方法才会生效)\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n \r\n    //新的owner接受所有权,权力交替正式生效\r\n    function acceptOwnership() public{\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n}\r\n\r\n//代币的控制合约\r\ncontract Controlled is Owned{\r\n \r\n\t//创世vip\r\n    constructor() public {\r\n       setExclude(msg.sender,true);\r\n    }\r\n \r\n    // 控制代币是否可以交易，true代表可以(exclude里的账户不受此限制，具体实现在下面的transferAllowed里)\r\n    bool public transferEnabled = true;\r\n \r\n    // 是否启用账户锁定功能，true代表启用\r\n    bool lockFlag=true;\r\n\t// 锁定的账户集合，address账户，bool是否被锁，true:被锁定，当lockFlag=true时，恭喜，你转不了账了，哈哈\r\n    mapping(address => bool) locked;\r\n\t// 拥有特权用户，不受transferEnabled和lockFlag的限制，vip啊，bool为true代表vip有效\r\n    mapping(address => bool) exclude;\r\n \r\n\t//设置transferEnabled值\r\n    function enableTransfer(bool _enable) public onlyOwner returns (bool success){\r\n        transferEnabled=_enable;\r\n\t\treturn true;\r\n    }\r\n \r\n\t//设置lockFlag值\r\n    function disableLock(bool _enable) public onlyOwner returns (bool success){\r\n        lockFlag=_enable;\r\n        return true;\r\n    }\r\n \r\n\t// 把_addr加到锁定账户里，拉黑名单。。。\r\n    function addLock(address _addr) public onlyOwner returns (bool success){\r\n        require(_addr!=msg.sender);\r\n        locked[_addr]=true;\r\n        return true;\r\n    }\r\n \r\n\t//设置vip用户\r\n    function setExclude(address _addr,bool _enable) public onlyOwner returns (bool success){\r\n        exclude[_addr]=_enable;\r\n        return true;\r\n    }\r\n \r\n\t//解锁_addr用户\r\n    function removeLock(address _addr) public onlyOwner returns (bool success){\r\n        locked[_addr]=false;\r\n        return true;\r\n    }\r\n\t//控制合约 核心实现\r\n    modifier transferAllowed(address _addr) {\r\n        if (!exclude[_addr]) {\r\n            require(transferEnabled,\"transfer is not enabeled now!\");\r\n            if(lockFlag){\r\n                require(!locked[_addr],\"you are locked!\");\r\n            }\r\n        }\r\n        _;\r\n    }\r\n \r\n}\r\n\r\ncontract EpilogueToken is ERC20Interface,Controlled {\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n    \r\n    constructor() public {\r\n        name = 'Epilogue';  //代币名称\r\n        symbol = 'EP'; //代币符号\r\n        decimals = 18; //小数点 \r\n        totalSupply = 100000000 * 10 ** uint256(decimals); //代币发行总量 \r\n        balanceOf[msg.sender] = totalSupply; //指定发行量\r\n    }\r\n    \r\n    function transfer(address to, uint256 tokens) public returns (bool success) {\r\n        \r\n        require(to != address(0));\r\n        require(balanceOf[msg.sender] >= tokens);\r\n        require(balanceOf[to] + tokens >= balanceOf[to]);\r\n        \r\n        balanceOf[msg.sender] -= tokens;\r\n        balanceOf[to] += tokens;\r\n        \r\n        emit Transfer(msg.sender, to, tokens);\r\n        \r\n        return true;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        \r\n        require(to != address(0));\r\n        require(allowed[from][msg.sender] >= tokens);\r\n        require(balanceOf[from] >= tokens);\r\n        require(balanceOf[to] + tokens >= balanceOf[to]);\r\n        \r\n        balanceOf[from] -= tokens;\r\n        balanceOf[to] += tokens;\r\n        \r\n        allowed[from][msg.sender] -= tokens;\r\n        \r\n        emit Transfer(from, to, tokens);\r\n        \r\n        return true;\r\n    }\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        \r\n        emit Approval(msg.sender, spender, tokens);\r\n        \r\n        return true;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"disableLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"setExclude\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"enableTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EpilogueToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c1bd93981c48a06858fb8b1b9dcb937183ce83b2959bc92b4c528d115deb6ccc"}]}