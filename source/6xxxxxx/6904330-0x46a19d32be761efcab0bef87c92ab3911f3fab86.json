{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title SafeMaths\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract HotLot {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public INTERVAL_TIME = 8 hours;\r\n    uint256 public JACKPOT_INTERVAL_TIME = 72 hours;\r\n    uint256 public constant PERCENT_REWARD_TO_JACKPOT = 20;\r\n    uint256 public constant PERCENT_REWARD_TOP_RANK = 30;\r\n    uint256 public constant PERCENT_REWARD_TOP1 = 60;\r\n    uint256 public constant PERCENT_REWARD_TOP2 = 30;\r\n    uint256 public constant PERCENT_REWARD_TOP3 = 10;\r\n    uint256 public DEPOSIT_AMOUNT = 0.02 * (10 ** 18);\r\n\r\n    address public owner;\r\n    address public winner1;\r\n    uint256 public winnerAmount1 = 0;\r\n    address public winner2;\r\n    uint256 public winnerAmount2 = 0;\r\n    address public winner3;\r\n    uint256 public winnerAmount3 = 0;\r\n\r\n    address public winnerJackpot1;\r\n    uint256 public winnerJackpotAmount1 = 0;\r\n    address public winnerJackpot2;\r\n    uint256 public winnerJackpotAmount2 = 0;\r\n    address public winnerJackpot3;\r\n    uint256 public winnerJackpotAmount3 = 0;\r\n\r\n    uint256 public amountRound = 0;\r\n    uint256 public amountJackpot = 0;\r\n    uint256 public roundTime;\r\n    uint256 public jackpotTime;\r\n    uint256 public countPlayerRound = 0;\r\n    uint256 public countPlayerJackpot = 0;\r\n    uint256 public countRound = 0;\r\n    uint256 public countJackpot = 0;\r\n    uint256 private _seed;\r\n\r\n    struct Player {\r\n        address wallet;\r\n        bool playing;\r\n        bool playingJackpot;\r\n    }\r\n\r\n    Player[] public players;\r\n\r\n    event DepositSuccess(address _from, uint256 _amount, uint256 countRound, uint256 countJackpot);\r\n    event RewardRoundWinner(\r\n        address wallet1, \r\n        uint256 amount1, \r\n        address wallet2, \r\n        uint256 amount2, \r\n        address wallet3, \r\n        uint256 amount3, \r\n        uint256 rewardRank\r\n    );\r\n    event RewardJackpotWinner(\r\n        address wallet1, uint256 amount1, \r\n        address wallet2, uint256 amount2, \r\n        address wallet3, uint256 amount3, \r\n        uint256 rewardRank\r\n    );\r\n\r\n    function HotLot() public {\r\n        owner = msg.sender;\r\n        roundTime = now.add(INTERVAL_TIME);\r\n        jackpotTime = now.add(JACKPOT_INTERVAL_TIME);\r\n    }\r\n\r\n    /**\r\n    * Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function () payable {\r\n        deposit();\r\n    }\r\n\r\n    /**\r\n    * Deposit from player\r\n    */\r\n    function deposit() public payable {\r\n        require(msg.value >= DEPOSIT_AMOUNT);\r\n\r\n        players.push(Player({\r\n            wallet: msg.sender,\r\n            playing: true,\r\n            playingJackpot: true\r\n        }));\r\n\r\n        amountRound = amountRound.add(msg.value);\r\n        countPlayerRound = countPlayerRound.add(1);\r\n        countPlayerJackpot = countPlayerJackpot.add(1);\r\n\r\n        emit DepositSuccess(msg.sender, msg.value, countRound, countJackpot);\r\n\r\n        if (now >= roundTime && amountRound > 0 && countPlayerRound > 1) {\r\n            roundTime = now.add(INTERVAL_TIME);\r\n            executeRound();\r\n\r\n            if (now >= jackpotTime && amountJackpot > 0 && countPlayerJackpot > 1) {\r\n                jackpotTime = now.add(JACKPOT_INTERVAL_TIME);\r\n                executeJackpot();\r\n            }\r\n        }\r\n    }\r\n\r\n    function executeRound() private {\r\n        uint256 count = 0;\r\n        address wallet1;\r\n        address wallet2;\r\n        address wallet3;\r\n        uint256 luckyNumber1 = generateLuckyNumber(countPlayerRound);\r\n        uint256 luckyNumber2 = generateLuckyNumber(countPlayerRound);\r\n        uint256 luckyNumber3 = generateLuckyNumber(countPlayerRound);\r\n\r\n        for (uint256 i = 0; i < players.length; i++) {\r\n            if (players[i].playing) {\r\n                count = count.add(1);\r\n                if (count == luckyNumber1) {\r\n                    wallet1 = players[i].wallet;\r\n                }\r\n                if (count == luckyNumber2) {\r\n                    wallet2 = players[i].wallet;\r\n                }\r\n                if (count == luckyNumber3) {\r\n                    wallet3 = players[i].wallet;\r\n                }\r\n                players[i].playing = false;\r\n            }\r\n        }\r\n\r\n        countRound = countRound.add(1);\r\n        uint256 rewardRank = amountRound.mul(PERCENT_REWARD_TOP_RANK).div(100);\r\n        uint256 amountToJackpot = amountRound.mul(PERCENT_REWARD_TO_JACKPOT).div(100);\r\n        uint256 reward = amountRound.sub(rewardRank.add(amountToJackpot));\r\n\r\n        amountJackpot = amountJackpot.add(amountToJackpot);\r\n\r\n        winnerAmount1 = reward.mul(PERCENT_REWARD_TOP1).div(100);\r\n        winner1 = wallet1;\r\n        winnerAmount2 = reward.mul(PERCENT_REWARD_TOP2).div(100);\r\n        winner2 = wallet2;\r\n        winnerAmount3 = reward.sub(winnerAmount1.add(winnerAmount2));\r\n        winner3 = wallet3;\r\n\r\n        amountRound = 0;\r\n        countPlayerRound = 0;\r\n\r\n        winner1.transfer(winnerAmount1);\r\n        winner2.transfer(winnerAmount2);\r\n        winner3.transfer(winnerAmount3);\r\n        owner.transfer(rewardRank);\r\n\r\n        emit RewardRoundWinner(\r\n            winner1, \r\n            winnerAmount1, \r\n            winner2, \r\n            winnerAmount2, \r\n            winner3, \r\n            winnerAmount3, \r\n            rewardRank\r\n        );\r\n    }\r\n\r\n    function executeJackpot() private {\r\n        uint256 count = 0;\r\n        address wallet1;\r\n        address wallet2;\r\n        address wallet3;\r\n        uint256 luckyNumber1 = generateLuckyNumber(countPlayerJackpot);\r\n        uint256 luckyNumber2 = generateLuckyNumber(countPlayerJackpot);\r\n        uint256 luckyNumber3 = generateLuckyNumber(countPlayerJackpot);\r\n\r\n        for (uint256 i = 0; i < players.length; i++) {\r\n            if (players[i].playingJackpot) {\r\n                count = count.add(1);\r\n                if (count == luckyNumber1) {\r\n                    wallet1 = players[i].wallet;\r\n                }\r\n                if (count == luckyNumber2) {\r\n                    wallet2 = players[i].wallet;\r\n                }\r\n                if (count == luckyNumber3) {\r\n                    wallet3 = players[i].wallet;\r\n                }\r\n                players[i].playing = false;\r\n            }\r\n        }\r\n\r\n        uint256 rewardRank = amountJackpot.mul(PERCENT_REWARD_TOP_RANK).div(100);\r\n        uint256 reward = amountJackpot.sub(rewardRank);\r\n\r\n        winnerJackpotAmount1 = reward.mul(PERCENT_REWARD_TOP1).div(100);\r\n        winnerJackpot1 = wallet1;\r\n        winnerJackpotAmount2 = reward.mul(PERCENT_REWARD_TOP2).div(100);\r\n        winnerJackpot2 = wallet2;\r\n        winnerJackpotAmount3 = reward.sub(winnerJackpotAmount1.add(winnerJackpotAmount2));\r\n        winnerJackpot3 = wallet3;\r\n\r\n        countJackpot = countJackpot.add(1);\r\n        amountJackpot = 0;\r\n        countPlayerJackpot = 0;\r\n        delete players;\r\n\r\n        owner.transfer(rewardRank);\r\n        winnerJackpot1.transfer(winnerJackpotAmount1);\r\n        winnerJackpot2.transfer(winnerJackpotAmount2);\r\n        winnerJackpot3.transfer(winnerJackpotAmount3);\r\n\r\n        emit RewardJackpotWinner(\r\n            winnerJackpot1, \r\n            winnerJackpotAmount1, \r\n            winnerJackpot2, \r\n            winnerJackpotAmount2, \r\n            winnerJackpot3, \r\n            winnerJackpotAmount3, \r\n            rewardRank\r\n        );\r\n    }\r\n\r\n    function maxRandom() public returns (uint256 number) {\r\n        _seed = uint256(keccak256(\r\n            _seed,\r\n            block.blockhash(block.number - 1),\r\n            block.coinbase,\r\n            block.difficulty,\r\n            players.length,\r\n            countPlayerJackpot,\r\n            countPlayerRound,\r\n            winnerJackpot1,\r\n            winnerJackpotAmount1,\r\n            winnerAmount1,\r\n            winner1,\r\n            now\r\n        ));\r\n\r\n        return _seed;\r\n    }\r\n\r\n    function generateLuckyNumber(uint256 maxNumber) private returns (uint256 number) {\r\n        return (maxRandom() % maxNumber) + 1;\r\n    }\r\n\r\n    /**\r\n    * Allows the current owner to transfer control of the contract to a newOwner.\r\n    * _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        require(_newOwner != address(0x0));\r\n\r\n        owner = _newOwner;\r\n    }\r\n    \r\n    function setIntervalTime(uint256 _time) public onlyOwner {\r\n        require(_time > 0);\r\n        INTERVAL_TIME = _time;\r\n    }\r\n    \r\n    function setIntervalJackpotTime(uint256 _time) public onlyOwner {\r\n        require(_time > 0);\r\n        JACKPOT_INTERVAL_TIME = _time;\r\n    }\r\n    \r\n    function setMinAmountDeposit(uint256 _amount) public onlyOwner {\r\n        require(_amount > 0);\r\n        DEPOSIT_AMOUNT = _amount;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"winner2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countJackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setIntervalTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_REWARD_TOP3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpotTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winner1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INTERVAL_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_REWARD_TOP_RANK\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpot3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerAmount2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countPlayerRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerAmount3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JACKPOT_INTERVAL_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpot2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountJackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_REWARD_TOP2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpot1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countPlayerJackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinAmountDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpotAmount1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_REWARD_TOP1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpotAmount2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerAmount1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"maxRandom\",\"outputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setIntervalJackpotTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEPOSIT_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_REWARD_TO_JACKPOT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roundTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerJackpotAmount3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"playing\",\"type\":\"bool\"},{\"name\":\"playingJackpot\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winner3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"countRound\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"countJackpot\",\"type\":\"uint256\"}],\"name\":\"DepositSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wallet2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wallet3\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount3\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rewardRank\",\"type\":\"uint256\"}],\"name\":\"RewardRoundWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wallet2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wallet3\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount3\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rewardRank\",\"type\":\"uint256\"}],\"name\":\"RewardJackpotWinner\",\"type\":\"event\"}]","ContractName":"HotLot","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d31b339b40bb4967e7af754ba2c246837de815455865b8778f56ef70161005b1"}]}