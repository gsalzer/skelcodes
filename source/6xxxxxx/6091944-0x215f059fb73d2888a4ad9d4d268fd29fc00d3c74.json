{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\ncontract moduleTokenInterface{\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed a_owner, address indexed _spender, uint256 _value);\r\n    event OwnerChang(address indexed _old,address indexed _new,uint256 _coin_change);\r\n\tevent adminUsrChange(address usrAddr,address changeBy,bool isAdded);\r\n\tevent onAdminTransfer(address to,uint256 value);\r\n}\r\n\r\ncontract moduleToken is moduleTokenInterface {\r\n    \r\n    struct transferPlanInfo{\r\n        uint256 transferValidValue;\r\n        bool isInfoValid;\r\n    }\r\n    \r\n    struct ethPlanInfo{\r\n\t    uint256 ethNum;\r\n\t    uint256 coinNum;\r\n\t    bool isValid;\r\n\t}\r\n\t\r\n\t//管理员之一发起一个转账操作，需要多人批准时采用这个数据结构\r\n\tstruct transferEthAgreement{\r\n\t\t//要哪些人签署\r\n\t    mapping(address=>bool) signUsrList;\t\t\r\n\t\t\r\n\t\t//已经签署的人数\r\n\t\tuint32 signedUsrCount;\r\n\t\t\r\n\t\t//要求转出的eth数量\r\n\t    uint256 transferEthInWei;\r\n\t\t\r\n\t\t//转往哪里\r\n\t\taddress to;\r\n\t\t\r\n\t\t//当前转账要求的发起人\r\n\t\taddress infoOwner;\r\n\t\t\r\n\t\t//当前记录是否有效(必须123456789)\r\n\t    uint32 magic;\r\n\t    \r\n\t    //是否生效了\r\n\t    bool isValid;\r\n\t}\r\n\t\r\n\t\r\n\r\n    string public name;                   //名称，例如\"My test token\"\r\n    uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.\r\n    string public symbol;               //token简称,like MTT\r\n    address public owner;\r\n    \r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n\t\r\n\t//是否允许直接接受eth而不返回cot\r\n\tbool public canRecvEthDirect=false;\r\n    \r\n    \r\n    //以下为本代币协议特殊逻辑所需的相关变\r\n    //\r\n    \r\n    //币的价格，为0时则花钱按价格购买的逻辑不生效   \r\n\tuint256 public coinPriceInWei;\r\n\t\r\n\t//在列表里的人转出代币必须遵守规定的时间、数量限制(比如实现代币定时解冻)\r\n\tmapping(address=>transferPlanInfo) public transferPlanList;\r\n\t\r\n\t//指定的人按指定的以太币数量、代币数量购买代币，不按价格逻辑购买（比如天使轮募资）\r\n\t//否则按价格相关逻辑处理购买代币的请求\r\n\tmapping(address => ethPlanInfo) public ethPlanList;\r\n\t\r\n\tuint public blockTime=block.timestamp;\r\n    \r\n    bool public isTransPaused=true;//为true时禁止转账 \r\n    \r\n     //实现多管理员相关的变量  \r\n    struct adminUsrInfo{\r\n        bool isValid;\r\n\t    string userName;\r\n\t\tstring descInfo;\r\n    }\r\n    mapping(address=>adminUsrInfo) public adminOwners; //管理员组\r\n    bool public isAdminOwnersValid;\r\n    uint32 public adminUsrCount;//有效的管理员用户数\r\n    mapping(uint256=>transferEthAgreement) public transferEthAgreementList;\r\n\r\n    function moduleToken(\r\n        uint256 _initialAmount,\r\n        uint8 _decimalUnits) public \r\n    {\r\n        owner=msg.sender;//记录合约的owner\r\n\t\tif(_initialAmount<=0){\r\n\t\t    totalSupply = 100000000000;   // 设置初始总量\r\n\t\t    balances[owner]=100000000000;\r\n\t\t}else{\r\n\t\t    totalSupply = _initialAmount;   // 设置初始总量\r\n\t\t    balances[owner]=_initialAmount;\r\n\t\t}\r\n\t\tif(_decimalUnits<=0){\r\n\t\t    decimals=2;\r\n\t\t}else{\r\n\t\t    decimals = _decimalUnits;\r\n\t\t}\r\n        name = \"CareerOn Token\"; \r\n        symbol = \"COT\";\r\n    }\r\n    \r\n    function changeContractName(string _newName,string _newSymbol) public {\r\n        require(msg.sender==owner || adminOwners[msg.sender].isValid);\r\n        name=_newName;\r\n        symbol=_newSymbol;\r\n    }\r\n    \r\n    \r\n    function transfer(\r\n        address _to, \r\n        uint256 _value) public returns (bool success) \r\n    {\r\n        if(isTransPaused){\r\n            emit Transfer(msg.sender, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n        }\r\n        //默认totalSupply 不会超过最大值 (2^256 - 1).\r\n        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常\r\n\t\tif(_to==address(this)){\r\n\t\t\temit Transfer(msg.sender, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n\t\tif(balances[msg.sender] < _value || \r\n\t\t\tbalances[_to] + _value <= balances[_to])\r\n\t\t{\r\n\t\t\temit Transfer(msg.sender, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n        if(transferPlanList[msg.sender].isInfoValid && transferPlanList[msg.sender].transferValidValue<_value)\r\n\t\t{\r\n\t\t\temit Transfer(msg.sender, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value\r\n        balances[_to] += _value;//往接收账户增加token数量_value\r\n        if(transferPlanList[msg.sender].isInfoValid){\r\n            transferPlanList[msg.sender].transferValidValue -=_value;\r\n        }\r\n        emit Transfer(msg.sender, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(\r\n        address _from, \r\n        address _to, \r\n        uint256 _value) public returns (bool success) \r\n    {\r\n        if(isTransPaused){\r\n            emit Transfer(_from, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n        }\r\n\t\tif(_to==address(this)){\r\n\t\t\temit Transfer(_from, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n        if(balances[_from] < _value ||\r\n\t\t\tallowed[_from][msg.sender] < _value)\r\n\t\t{\r\n\t\t\temit Transfer(_from, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n        if(transferPlanList[_from].isInfoValid && transferPlanList[_from].transferValidValue<_value)\r\n\t\t{\r\n\t\t\temit Transfer(_from, _to, 0);//触发转币交易事件\r\n            revert();\r\n            return;\r\n\t\t}\r\n        balances[_to] += _value;//接收账户增加token数量_value\r\n        balances[_from] -= _value; //支出账户_from减去token数量_value\r\n        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value\r\n        if(transferPlanList[_from].isInfoValid){\r\n            transferPlanList[_from].transferValidValue -=_value;\r\n        }\r\n        emit Transfer(_from, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n    \r\n    function balanceOf(address accountAddr) public constant returns (uint256 balance) {\r\n        return balances[accountAddr];\r\n    }\r\n\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) \r\n    { \r\n        require(msg.sender!=_spender && _value>0);\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address _owner, \r\n        address _spender) public constant returns (uint256 remaining) \r\n    {\r\n        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数\r\n    }\r\n\t\r\n\t//以下为本代币协议的特殊逻辑\r\n\t\r\n\t//转移协议所有权并将附带的代币一并转移过去\r\n\tfunction changeOwner(address newOwner) public{\r\n        require(msg.sender==owner && msg.sender!=newOwner);\r\n        balances[newOwner]=balances[owner];\r\n        balances[owner]=0;\r\n        owner=newOwner;\r\n        emit OwnerChang(msg.sender,newOwner,balances[owner]);//触发合约所有权的转移事件\r\n    }\r\n    \r\n    function setPauseStatus(bool isPaused)public{\r\n        if(msg.sender!=owner && !adminOwners[msg.sender].isValid){\r\n            revert();\r\n            return;\r\n        }\r\n        isTransPaused=isPaused;\r\n    }\r\n    \r\n    //设置转账限制，比如冻结什么的\r\n\tfunction setTransferPlan(address addr,\r\n\t                        uint256 allowedMaxValue,\r\n\t                        bool isValid) public\r\n\t{\r\n\t    if(msg.sender!=owner && !adminOwners[msg.sender].isValid){\r\n\t        revert();\r\n\t        return ;\r\n\t    }\r\n\t    transferPlanList[addr].isInfoValid=isValid;\r\n\t    if(transferPlanList[addr].isInfoValid){\r\n\t        transferPlanList[addr].transferValidValue=allowedMaxValue;\r\n\t    }\r\n\t}\r\n    \r\n    //把本代币协议账户下的eth转到指定账户\r\n\tfunction TransferEthToAddr(address _to,uint256 _value)public payable{\r\n        require(msg.sender==owner && !isAdminOwnersValid);\r\n        _to.transfer(_value);\r\n    }\r\n    \r\n    function createTransferAgreement(uint256 agreeMentId,\r\n                                      uint256 transferEthInWei,\r\n                                      address to) public {\r\n        require(adminOwners[msg.sender].isValid && \r\n        transferEthAgreementList[agreeMentId].magic!=123456789 && \r\n        transferEthAgreementList[agreeMentId].magic!=987654321);\r\n        transferEthAgreementList[agreeMentId].magic=123456789;\r\n        transferEthAgreementList[agreeMentId].infoOwner=msg.sender;\r\n        transferEthAgreementList[agreeMentId].transferEthInWei=transferEthInWei;\r\n        transferEthAgreementList[agreeMentId].to=to;\r\n        transferEthAgreementList[agreeMentId].isValid=true;\r\n        transferEthAgreementList[agreeMentId].signUsrList[msg.sender]=true;\r\n        transferEthAgreementList[agreeMentId].signedUsrCount=1;\r\n        \r\n    }\r\n\t\r\n\tfunction disableTransferAgreement(uint256 agreeMentId) public {\r\n\t\trequire(transferEthAgreementList[agreeMentId].infoOwner==msg.sender &&\r\n\t\t\t    transferEthAgreementList[agreeMentId].magic==123456789);\r\n\t\ttransferEthAgreementList[agreeMentId].isValid=false;\r\n\t\ttransferEthAgreementList[agreeMentId].magic=987654321;\r\n\t}\r\n\t\r\n\tfunction sign(uint256 agreeMentId,address to,uint256 transferEthInWei) public payable{\r\n\t\trequire(transferEthAgreementList[agreeMentId].magic==123456789 &&\r\n\t\ttransferEthAgreementList[agreeMentId].isValid &&\r\n\t\ttransferEthAgreementList[agreeMentId].transferEthInWei==transferEthInWei &&\r\n\t\ttransferEthAgreementList[agreeMentId].to==to &&\r\n\t\tadminOwners[msg.sender].isValid &&\r\n\t\t!transferEthAgreementList[agreeMentId].signUsrList[msg.sender]&&\r\n\t\tadminUsrCount>=2\r\n\t\t);\r\n\t\ttransferEthAgreementList[agreeMentId].signUsrList[msg.sender]=true;\r\n\t\ttransferEthAgreementList[agreeMentId].signedUsrCount++;\r\n\t\t\r\n\t\tif(transferEthAgreementList[agreeMentId].signedUsrCount<=adminUsrCount/2)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tto.transfer(transferEthInWei);\r\n\t\ttransferEthAgreementList[agreeMentId].isValid=false;\r\n\t\ttransferEthAgreementList[agreeMentId].magic=987654321;\r\n\t\temit onAdminTransfer(to,transferEthInWei);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tstruct needToAddAdminInfo{\r\n\t\tuint256 magic;\r\n\t\tmapping(address=>uint256) postedPeople;\r\n\t\tuint32 postedCount;\r\n\t}\r\n\tmapping(address=>needToAddAdminInfo) public needToAddAdminInfoList;\r\n\tfunction addAdminOwners(address usrAddr,\r\n\t\t\t\t\t  string userName,\r\n\t\t\t\t\t  string descInfo)public \r\n\t{\r\n\t\tneedToAddAdminInfo memory info;\r\n\t\t//不是管理员也不是owner，则禁止任何操作\r\n\t\tif(!adminOwners[msg.sender].isValid && owner!=msg.sender){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//任何情况,owner地址不可以被添加到管理员组\r\n\t\tif(usrAddr==owner){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//已经在管理员组的不可以被添加\r\n\t\tif(adminOwners[usrAddr].isValid){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//不允许添加自己到管理员组\r\n\t\tif(usrAddr==msg.sender){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//管理员不到2人时，owner可以至多添加2人到管理员\r\n\t\tif(adminUsrCount<2){\r\n\t\t\tif(msg.sender!=owner){\r\n\t\t\t\trevert();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tadminOwners[usrAddr].isValid=true;\r\n\t\t\tadminOwners[usrAddr].userName=userName;\r\n\t\t\tadminOwners[usrAddr].descInfo=descInfo;\r\n\t\t\tadminUsrCount++;\r\n\t\t\tif(adminUsrCount>=2) isAdminOwnersValid=true;\r\n\t\t\temit adminUsrChange(usrAddr,msg.sender,true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//管理员大于等于2人时，owner添加管理员需要得到过半数管理员的同意，而且至少必须是2\r\n\t\tif(msg.sender==owner){\r\n\t\t\t//某个用户已经被要求添加到管理员组，owner此时是没有投票权的\r\n\t\t\tif(needToAddAdminInfoList[usrAddr].magic==123456789){\r\n\t\t\t\trevert();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//允许owner把某个人添加到要求进入管理员组的列表里，后续由其它管理员投票\r\n\t\t\tinfo.magic=123456789;\r\n\t\t\tinfo.postedCount=0;\r\n\t\t\tneedToAddAdminInfoList[usrAddr]=info;\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}//管理员大于等于2人时，owner添加新的管理员，必须过半数管理员同意且至少是2\r\n\t\telse if(adminOwners[msg.sender].isValid)\r\n\t\t{\r\n\t\t\t//管理员只能投票确认添加管理员，不能直接添加管理员\r\n\t\t\tif(needToAddAdminInfoList[usrAddr].magic!=123456789){\r\n\t\t\t\trevert();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//已经投过票的管理员不允许再投\t\t\t\r\n\t\t\tif(needToAddAdminInfoList[usrAddr].postedPeople[msg.sender]==123456789){\r\n\t\t\t\trevert();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tneedToAddAdminInfoList[usrAddr].postedCount++;\r\n\t\t\tneedToAddAdminInfoList[usrAddr].postedPeople[msg.sender]=123456789;\r\n\t\t\tif(adminUsrCount>=2 && \r\n\t\t\t   needToAddAdminInfoList[usrAddr].postedCount>adminUsrCount/2){\r\n\t\t\t\tadminOwners[usrAddr].userName=userName;\r\n\t\t\t\tadminOwners[usrAddr].descInfo=descInfo;\r\n\t\t\t\tadminOwners[usrAddr].isValid=true;\r\n\t\t\t\tneedToAddAdminInfoList[usrAddr]=info;\r\n\t\t\t\tadminUsrCount++;\r\n\t\t\t\temit adminUsrChange(usrAddr,msg.sender,true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\treturn revert();//其它情况一律不可以添加管理员\r\n\t\t}\t\t\r\n\t}\r\n\tstruct needDelFromAdminInfo{\r\n\t\tuint256 magic;\r\n\t\tmapping(address=>uint256) postedPeople;\r\n\t\tuint32 postedCount;\r\n\t}\r\n\tmapping(address=>needDelFromAdminInfo) public needDelFromAdminInfoList;\r\n\tfunction delAdminUsrs(address usrAddr) public {\r\n\t\tneedDelFromAdminInfo memory info;\r\n\t\t//尚不是管理员，无需删除\r\n\t\tif(!adminOwners[usrAddr].isValid){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//当前管理员数小于4的话不让再删用户\r\n\t\tif(adminUsrCount<4){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//当前管理员数是奇数时不让删用户\r\n\t\tif(adminUsrCount%2!=0){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//不允许把自己退出管理员\r\n\t\tif(usrAddr==msg.sender){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(msg.sender==owner){\r\n\t\t\t//owner没有权限确认删除管理员\r\n\t\t\tif(needDelFromAdminInfoList[usrAddr].magic==123456789){\r\n\t\t\t\trevert();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//owner可以提议删除管理员，但是需要管理员过半数同意\r\n\t\t\tinfo.magic=123456789;\r\n\t\t\tinfo.postedCount=0;\r\n\t\t\tneedDelFromAdminInfoList[usrAddr]=info;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//管理员确认删除用户\r\n\t\t\r\n\t\t//管理员只有权限确认删除\r\n\t\tif(needDelFromAdminInfoList[usrAddr].magic!=123456789){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//已经投过票的不允许再投\r\n\t\tif(needDelFromAdminInfoList[usrAddr].postedPeople[msg.sender]==123456789){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tneedDelFromAdminInfoList[usrAddr].postedCount++;\r\n\t\tneedDelFromAdminInfoList[usrAddr].postedPeople[msg.sender]=123456789;\r\n\t\t//同意的人数尚未超过一半则直接返回\r\n\t\tif(needDelFromAdminInfoList[usrAddr].postedCount<=adminUsrCount/2){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//同意的人数超过一半\r\n\t\tadminOwners[usrAddr].isValid=false;\r\n\t\tif(adminUsrCount>=1) adminUsrCount--;\r\n\t\tif(adminUsrCount<=1) isAdminOwnersValid=false;\r\n\t\tneedDelFromAdminInfoList[usrAddr]=info;\r\n\t\temit adminUsrChange(usrAddr,msg.sender,false);\r\n\t}\r\n\t\r\n\t//设置指定人按固定eth数、固定代币数购买代币，比如天使轮募资\r\n\tfunction setEthPlan(address addr,uint256 _ethNum,uint256 _coinNum,bool _isValid) public {\r\n\t    require(msg.sender==owner &&\r\n\t        _ethNum>=0 &&\r\n\t        _coinNum>=0 &&\r\n\t        (_ethNum + _coinNum)>0 &&\r\n\t        _coinNum<=balances[owner]);\r\n\t    ethPlanList[addr].isValid=_isValid;\r\n\t    if(ethPlanList[addr].isValid){\r\n\t        ethPlanList[addr].ethNum=_ethNum;\r\n\t        ethPlanList[addr].coinNum=_coinNum;\r\n\t    }\r\n\t}\r\n\t\r\n\t//设置代币价格(Wei)\r\n\tfunction setCoinPrice(uint256 newPriceInWei) public returns(uint256 oldPriceInWei){\r\n\t    require(msg.sender==owner);\r\n\t    uint256 _old=coinPriceInWei;\r\n\t    coinPriceInWei=newPriceInWei;\r\n\t    return _old;\r\n\t}\r\n\t\r\n\tfunction balanceInWei() public constant returns(uint256 nowBalanceInWei){\r\n\t    return address(this).balance;\r\n\t}\r\n\t\r\n\tfunction changeRecvEthStatus(bool _canRecvEthDirect) public{\r\n\t\tif(msg.sender!=owner){\r\n\t\t\trevert();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcanRecvEthDirect=_canRecvEthDirect;\r\n\t}\r\n\t\r\n\t//回退函数\r\n    //合约账户收到eth时会被调用\r\n    //任何异常时，这个函数也会被调用\r\n\t//若有零头不找零，避免被DDOS攻击\r\n    function () public payable {\r\n\t\tif(canRecvEthDirect){\r\n\t\t\treturn;\r\n\t\t}\r\n        if(ethPlanList[msg.sender].isValid==true &&\r\n            msg.value>=ethPlanList[msg.sender].ethNum &&\r\n            ethPlanList[msg.sender].coinNum>=0 &&\r\n            ethPlanList[msg.sender].coinNum<=balances[owner]){\r\n                ethPlanList[msg.sender].isValid=false;\r\n                balances[owner] -= ethPlanList[msg.sender].coinNum;//从消息发送者账户中减去token数量_value\r\n                balances[msg.sender] += ethPlanList[msg.sender].coinNum;//往接收账户增加token数量_value\r\n\t\t        emit Transfer(this, msg.sender, ethPlanList[msg.sender].coinNum);//触发转币交易事件\r\n        }else if(!ethPlanList[msg.sender].isValid &&\r\n            coinPriceInWei>0 &&\r\n            msg.value/coinPriceInWei<=balances[owner] &&\r\n            msg.value/coinPriceInWei+balances[msg.sender]>balances[msg.sender]){\r\n            uint256 buyCount=msg.value/coinPriceInWei;\r\n            balances[owner] -=buyCount;\r\n            balances[msg.sender] +=buyCount;\r\n            emit Transfer(this, msg.sender, buyCount);//触发转币交易事件\r\n               \r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinPriceInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"allowedMaxValue\",\"type\":\"uint256\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"setTransferPlan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_ethNum\",\"type\":\"uint256\"},{\"name\":\"_coinNum\",\"type\":\"uint256\"},{\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"setEthPlan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newName\",\"type\":\"string\"},{\"name\":\"_newSymbol\",\"type\":\"string\"}],\"name\":\"changeContractName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAdminOwnersValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPriceInWei\",\"type\":\"uint256\"}],\"name\":\"setCoinPrice\",\"outputs\":[{\"name\":\"oldPriceInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"needToAddAdminInfoList\",\"outputs\":[{\"name\":\"magic\",\"type\":\"uint256\"},{\"name\":\"postedCount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"needDelFromAdminInfoList\",\"outputs\":[{\"name\":\"magic\",\"type\":\"uint256\"},{\"name\":\"postedCount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"}],\"name\":\"sign\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canRecvEthDirect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usrAddr\",\"type\":\"address\"}],\"name\":\"delAdminUsrs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usrAddr\",\"type\":\"address\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"descInfo\",\"type\":\"string\"}],\"name\":\"addAdminOwners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethPlanList\",\"outputs\":[{\"name\":\"ethNum\",\"type\":\"uint256\"},{\"name\":\"coinNum\",\"type\":\"uint256\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferEthAgreementList\",\"outputs\":[{\"name\":\"signedUsrCount\",\"type\":\"uint32\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"infoOwner\",\"type\":\"address\"},{\"name\":\"magic\",\"type\":\"uint32\"},{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferPlanList\",\"outputs\":[{\"name\":\"transferValidValue\",\"type\":\"uint256\"},{\"name\":\"isInfoValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"setPauseStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"},{\"name\":\"transferEthInWei\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createTransferAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_canRecvEthDirect\",\"type\":\"bool\"}],\"name\":\"changeRecvEthStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceInWei\",\"outputs\":[{\"name\":\"nowBalanceInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminOwners\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"descInfo\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agreeMentId\",\"type\":\"uint256\"}],\"name\":\"disableTransferAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferEthToAddr\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminUsrCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"a_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_coin_change\",\"type\":\"uint256\"}],\"name\":\"OwnerChang\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"usrAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"changeBy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdded\",\"type\":\"bool\"}],\"name\":\"adminUsrChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"onAdminTransfer\",\"type\":\"event\"}]","ContractName":"moduleToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://c3a9b313f9ac9fa12c1dcdf024c1f8917b7382b7b4d4ff73009fa34b015d0c83"}]}