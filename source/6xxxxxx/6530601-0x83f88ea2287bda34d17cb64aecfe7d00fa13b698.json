{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function balanceOf(address who) external view returns (uint256);\r\n\r\n  function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n\r\n  function approve(address spender, uint256 value)\r\n    external returns (bool);\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    external returns (bool);\r\n\r\n  event Transfer(\r\n    address indexed from,\r\n    address indexed to,\r\n    uint256 value\r\n  );\r\n\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\ncontract  CheckErc20 { \r\n\r\n    function getMulBalance(address[] erc20,address addr) public view returns (uint256[]){\r\n        uint erc20Length = erc20.length;\r\n        uint256[]  memory balances = new uint256[](erc20Length);\r\n        for(uint i = 0;i<erc20Length;i++){\r\n            IERC20 erc20Contract = IERC20(erc20[i]);\r\n            uint256 erc20Balance = erc20Contract.balanceOf(addr);\r\n            balances[i] = erc20Balance;\r\n        }\r\n        return balances;\r\n    } \r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"erc20\",\"type\":\"address[]\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getMulBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CheckErc20","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cf0e340786fb03e1a93ffa5c5dafe09c2a3d09fa343527cdc2a22e081274d04a"}]}