{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract ArchiveCreation {\r\n   struct Archive {\r\n     string projectNameToken;\r\n   }\r\n\r\n   mapping (bytes32 => Archive) registry;\r\n   bytes32[] records;\r\n   address private owner_;\r\n\r\n   function ArchiveCreation() {\r\n     owner_ = msg.sender;\r\n   }\r\n\r\n   function signArchive(bytes32 hash, string projectNameToken) public {\r\n\t   if (owner_ == msg.sender) {\r\n\t     records.push(hash);\r\n\t     registry[hash] = Archive(projectNameToken);\r\n\t   }\r\n   }\r\n\r\n   function getRecords() public view returns (bytes32[]) {\r\n     return records;\r\n   }\r\n\r\n   function getRecordNameToken(bytes32 hash) public view returns (string) {\r\n     return registry[hash].projectNameToken;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getRecordNameToken\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"projectNameToken\",\"type\":\"string\"}],\"name\":\"signArchive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRecords\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"ArchiveCreation","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://32ac0fbe3fb14b5312ce67a1ed89569644ee34315c169f074f87893a207c7820"}]}