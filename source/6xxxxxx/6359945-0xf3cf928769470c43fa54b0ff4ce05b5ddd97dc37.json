{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\npragma experimental \"v0.5.0\";\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract ERC20 {\r\n  function transferFrom (address from, address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract SpecialCampaign {\r\n\r\n  address public owner;\r\n  address public rcv;\r\n\r\n  uint256 constant public fstPerWei = 3000;\r\n\r\n  uint256 constant private min = 0;\r\n  uint256 constant private max = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\r\n\r\n  ERC20   public FST;\r\n  address public fstCentral;\r\n\r\n  bytes32 public sh;\r\n  bool    public finalized = false;\r\n\r\n  event RCVDeclare (address rcv);\r\n  event Finalize   (uint256 fstkReceivedEtherWei, uint256 rcvReceivedFSTWei);\r\n\r\n  struct Bonus {\r\n    uint256 gte;\r\n    uint256 lt;\r\n    uint256 bonusPercentage;\r\n  }\r\n\r\n  Bonus[] public bonusArray;\r\n\r\n  constructor (ERC20 _FST, address _fstCentral, bytes32 _secretHash) public {\r\n    owner = msg.sender;\r\n    rcv = address(0);\r\n\r\n    bonusArray.push(Bonus(       min,  300 ether,   0));\r\n    bonusArray.push(Bonus( 300 ether,  900 ether, 120));\r\n    bonusArray.push(Bonus( 900 ether, 1500 ether, 128));\r\n    bonusArray.push(Bonus(1500 ether,        max, 132));\r\n\r\n    FST = _FST;\r\n    fstCentral = _fstCentral;\r\n\r\n    sh = _secretHash;\r\n  }\r\n\r\n  // Epoch timestamp: 1538323201\r\n  // Timestamp in milliseconds: 1538323201000\r\n  // Human time (GMT): Sunday, September 30, 2018 4:00:01 PM\r\n  // Human time (your time zone): Monday, October 1, 2018 12:00:01 AM GMT+08:00\r\n\r\n  function () external payable {\r\n    require(now <= 1538323201);\r\n  }\r\n\r\n  function declareRCV(string _secret) public {\r\n    require(\r\n      sh  == keccak256(abi.encodePacked(_secret)) &&\r\n      rcv == address(0)\r\n    );\r\n\r\n    rcv = msg.sender;\r\n\r\n    emit RCVDeclare(rcv);\r\n  }\r\n\r\n  function finalize () public {\r\n    require(\r\n      msg.sender == owner &&\r\n      rcv        != address(0) &&\r\n      now        >  1538323201 &&\r\n      finalized  == false\r\n    );\r\n\r\n    finalized = true;\r\n\r\n    uint256 fstkReceivedEtherWei = address(this).balance;\r\n    uint256 rcvReceivedFSTWei = 0;\r\n\r\n    // rollback\r\n    if (fstkReceivedEtherWei < 300 ether) {\r\n      rcv.transfer(fstkReceivedEtherWei);\r\n      emit Finalize(0, 0);\r\n      return;\r\n    }\r\n\r\n    for (uint8 i = 0; i < bonusArray.length; i++) {\r\n      Bonus storage b = bonusArray[i];\r\n\r\n      if (fstkReceivedEtherWei >= b.gte && fstkReceivedEtherWei < b.lt) {\r\n        rcvReceivedFSTWei = fstkReceivedEtherWei * b.bonusPercentage * fstPerWei / 100;\r\n      }\r\n    }\r\n\r\n    require(FST.transferFrom(fstCentral, rcv, rcvReceivedFSTWei));\r\n    fstCentral.transfer(fstkReceivedEtherWei);\r\n\r\n    emit Finalize(fstkReceivedEtherWei, rcvReceivedFSTWei);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bonusArray\",\"outputs\":[{\"name\":\"gte\",\"type\":\"uint256\"},{\"name\":\"lt\",\"type\":\"uint256\"},{\"name\":\"bonusPercentage\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FST\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secret\",\"type\":\"string\"}],\"name\":\"declareRCV\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sh\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstPerWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rcv\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstCentral\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_FST\",\"type\":\"address\"},{\"name\":\"_fstCentral\",\"type\":\"address\"},{\"name\":\"_secretHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"rcv\",\"type\":\"address\"}],\"name\":\"RCVDeclare\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fstkReceivedEtherWei\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rcvReceivedFSTWei\",\"type\":\"uint256\"}],\"name\":\"Finalize\",\"type\":\"event\"}]","ContractName":"SpecialCampaign","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"330000000","ConstructorArguments":"00000000000000000000000051c028bc9503874d74965638a4632a266d31f61f000000000000000000000000684564950fdafedad73a79c9074aed1b85428feb1bdf5fc934a413ff5d8a8c0f0b9b94108d3a277ea7c16d740eb972bdfc8cc702","Library":"","SwarmSource":""}]}