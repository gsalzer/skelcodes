{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/*\r\nGame: MylittleProgram\r\nDev: WhiteMatrix\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n/**\r\n* @dev Multiplies two numbers, throws on overflow.\r\n*/\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\nif (a == 0) {\r\nreturn 0;\r\n}\r\nuint256 c = a * b;\r\nassert(c / a == b);\r\nreturn c;\r\n}\r\n\r\n/**\r\n* @dev Integer division of two numbers, truncating the quotient.\r\n*/\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// assert(b > 0); // Solidity automatically throws when dividing by 0\r\nuint256 c = a / b;\r\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\nreturn c;\r\n}\r\n\r\n/**\r\n* @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n*/\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\nassert(b <= a);\r\nreturn a - b;\r\n}\r\n\r\n/**\r\n* @dev Adds two numbers, throws on overflow.\r\n*/\r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\nuint256 c = a + b;\r\nassert(c >= a);\r\nreturn c;\r\n}\r\n}\r\n\r\ncontract MylittleProgram {\r\nusing SafeMath for uint256;\r\nmapping (address => bool) private admins;\r\nmapping (uint => uint256) public levels;\r\nmapping (uint => bool) private lock;\r\naddress contractCreator;\r\naddress winnerAddress;\r\nuint256 prize;\r\nfunction MylittleProgram () public {\r\n\r\ncontractCreator = msg.sender;\r\nwinnerAddress = 0xFb2D26b0caa4C331bd0e101460ec9dbE0A4783A4;\r\nadmins[contractCreator] = true;\r\n}\r\n\r\nstruct Pokemon {\r\nstring pokemonName;\r\naddress ownerAddress;\r\nuint256 currentPrice;\r\n}\r\nPokemon[] pokemons;\r\n\r\n//modifiers\r\nmodifier onlyContractCreator() {\r\nrequire (msg.sender == contractCreator);\r\n_;\r\n}\r\nmodifier onlyAdmins() {\r\nrequire(admins[msg.sender]);\r\n_;\r\n}\r\n\r\n//Owners and admins\r\n\r\n/* Owner */\r\nfunction setOwner (address _owner) onlyContractCreator() public {\r\ncontractCreator = _owner;\r\n}\r\n\r\nfunction addAdmin (address _admin) public {\r\nadmins[_admin] = true;\r\n}\r\n\r\nfunction removeAdmin (address _admin) onlyContractCreator() public {\r\ndelete admins[_admin];\r\n}\r\n\r\n// Adresses\r\nfunction setPrizeAddress (address _WinnerAddress) onlyAdmins() public {\r\nwinnerAddress = _WinnerAddress;\r\n}\r\n\r\nbool isPaused;\r\n/*\r\nWhen countdowns and events happening, use the checker.\r\n*/\r\nfunction pauseGame() public onlyContractCreator {\r\nisPaused = true;\r\n}\r\nfunction unPauseGame() public onlyContractCreator {\r\nisPaused = false;\r\n}\r\nfunction GetGamestatus() public view returns(bool) {\r\nreturn(isPaused);\r\n}\r\n\r\nfunction addLock (uint _pokemonId) onlyContractCreator() public {\r\nlock[_pokemonId] = true;\r\n}\r\n\r\n\r\n\r\nfunction getPokemonLock(uint _pokemonId) public view returns(bool) {\r\nreturn(lock[_pokemonId]);\r\n}\r\n\r\n/*\r\nThis function allows users to purchase PokeMon.\r\nThe price is automatically multiplied by 1.5 after each purchase.\r\nUsers can purchase multiple PokeMon.\r\n*/\r\nfunction putPrize() public payable {\r\n\r\nrequire(msg.sender != address(0));\r\nprize = prize + msg.value;\r\n\r\n}\r\n\r\n\r\nfunction withdraw () onlyAdmins() public {\r\n\r\nwinnerAddress.transfer(prize);\r\n\r\n}\r\nfunction pA() public view returns (address _pA ) {\r\nreturn winnerAddress;\r\n}\r\n\r\nfunction totalPrize() public view returns (uint256 _totalSupply) {\r\nreturn prize;\r\n}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"GetGamestatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pA\",\"outputs\":[{\"name\":\"_pA\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_WinnerAddress\",\"type\":\"address\"}],\"name\":\"setPrizeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pokemonId\",\"type\":\"uint256\"}],\"name\":\"addLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPrize\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pokemonId\",\"type\":\"uint256\"}],\"name\":\"getPokemonLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"putPrize\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levels\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unPauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"MylittleProgram","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://475db49a0a478e2a3d11cf748fb005299fb1a9ab4aeccec71cedacd711f122b3"}]}