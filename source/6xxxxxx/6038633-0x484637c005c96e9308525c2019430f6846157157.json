{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Subscribers {\r\n\r\n    address public owner;\r\n\r\n    uint256 public monthlyPrice = 0.01 ether;\r\n    uint256 public annualPrice = 0.1 ether;\r\n\r\n    struct Subscriber {\r\n        uint256 expires;\r\n        address addy;\r\n    }\r\n\r\n    mapping (bytes32 => Subscriber) public subs;\r\n\r\n    event Subscribed(bytes32 emailHash, uint8 mode, address subber);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address _owner) onlyOwner external {\r\n        withdraw();\r\n        owner = _owner;\r\n    }\r\n\r\n    function setMonthlyPrice(uint256 _price) onlyOwner external {\r\n        monthlyPrice = _price;\r\n    }\r\n\r\n    function setAnnualPrice(uint256 _price) onlyOwner external {\r\n        annualPrice = _price;\r\n    }\r\n\r\n    function subscribeMe(uint8 _monthOrYear, bytes32 _email) external payable {\r\n        subscribe(msg.sender, _monthOrYear, _email);\r\n    }\r\n\r\n    function subscribe(address _subscriber, uint8 _monthOrYear, bytes32 _email) public payable {\r\n        \r\n        // Extend sub if already subbed\r\n        uint256 from = subs[_email].expires;\r\n        if (from == 0) {\r\n            from = now;\r\n        }\r\n\r\n        uint256 requiredPrice = (_monthOrYear == 1) ? monthlyPrice : annualPrice;\r\n        require(msg.value >= requiredPrice);\r\n        \r\n        uint256 requiredDuration = (_monthOrYear == 1) ? 2629746 : 31556952;\r\n        subs[_email] = Subscriber(from + requiredDuration, _subscriber);\r\n\r\n        emit Subscribed(_email, _monthOrYear, _subscriber);\r\n    }\r\n\r\n    function withdraw() onlyOwner public {\r\n        address(owner).transfer(address(this).balance);\r\n    }\r\n\r\n    function freeSub(address _subscriber, uint8 _monthOrYear, bytes32 _email) onlyOwner external {\r\n        uint256 requiredDuration = (_monthOrYear == 1) ? 2629746 : 31556952;\r\n        subs[_email] = Subscriber(now + requiredDuration, _subscriber);\r\n\r\n        emit Subscribed(_email, _monthOrYear, _subscriber);\r\n    }\r\n\r\n    function checkExpires(bytes32 _email) public view returns (uint256) {\r\n        return subs[_email].expires;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setMonthlyPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"subs\",\"outputs\":[{\"name\":\"expires\",\"type\":\"uint256\"},{\"name\":\"addy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_subscriber\",\"type\":\"address\"},{\"name\":\"_monthOrYear\",\"type\":\"uint8\"},{\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"freeSub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setAnnualPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"checkExpires\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monthOrYear\",\"type\":\"uint8\"},{\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"subscribeMe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"annualPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_subscriber\",\"type\":\"address\"},{\"name\":\"_monthOrYear\",\"type\":\"uint8\"},{\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"subscribe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"emailHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"mode\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"subber\",\"type\":\"address\"}],\"name\":\"Subscribed\",\"type\":\"event\"}]","ContractName":"Subscribers","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f802b2ef19ce41c663a076a4982d34f966c96d44ea891c604b805efde813240f"}]}