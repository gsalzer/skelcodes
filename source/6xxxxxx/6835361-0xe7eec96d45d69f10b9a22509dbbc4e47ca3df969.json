{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address _who) public view returns (uint256);\r\n}\r\n\r\ncontract DataStorage {\r\n    \r\n    string[] datas;\r\n    mapping(uint => bool) dataExist;\r\n    int datasCounter;\r\n    ERC20 token;\r\n\r\n    constructor(ERC20 _token) public {\r\n        require(_token != address(0));\r\n        token = _token;\r\n    }\r\n\r\n    function create(string _property) public {\r\n        require(token.balanceOf(msg.sender) > 0, \"only members can run this function\");\r\n        uint id = datas.length;\r\n        datas.push(_property);\r\n        dataExist[id] = true;\r\n        datasCounter++;\r\n    }\r\n\r\n    function getDataCount() public view returns(uint) {\r\n        return datas.length;\r\n    }\r\n\r\n    function balanceOf(address _who) public view returns(uint256) {\r\n        return token.balanceOf(_who);\r\n    }\r\n\r\n    function read(uint _id) public view returns(string) {\r\n        require(token.balanceOf(msg.sender) > 0, \"only members can run this function\");\r\n        require(dataExist[_id], \"the data doesn't exist\");\r\n        return datas[_id];\r\n    }\r\n\r\n    function remove(uint _id) public {\r\n        require(token.balanceOf(msg.sender) > 0, \"only members can run this function\");\r\n        require(dataExist[_id], \"the data doesn't exist\");\r\n        dataExist[_id] = false;\r\n        datasCounter--;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDataCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_property\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DataStorage","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006f123503fc11f4a915e222808349c8aff4d6c3c0","Library":"","SwarmSource":"bzzr://4e7df18cad2dcd294d383dac4192a4b751d6e635bc09613028be731d6aa351b1"}]}