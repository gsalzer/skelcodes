{"status":"1","message":"OK","result":[{"SourceCode":"// Unattributed material copyright New Alchemy Limited, 2017. All rights reserved.\r\npragma solidity >=0.4.10;\r\n\r\n// from Zeppelin\r\ncontract SafeMath {\r\n    function safeMul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint a, uint b) internal returns (uint) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal returns (uint) {\r\n        uint c = a + b;\r\n        require(c>=a && c>=b);\r\n        return c;\r\n    }\r\n}\r\n// end from Zeppelin\r\n\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress newOwner;\r\n\r\n\tfunction Owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction changeOwner(address _newOwner) onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() {\r\n\t\tif (msg.sender == newOwner) {\r\n\t\t\towner = newOwner;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract Pausable is Owned {\r\n\tbool public paused;\r\n\r\n\tfunction pause() onlyOwner {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner {\r\n\t\tpaused = false;\r\n\t}\r\n\r\n\tmodifier notPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract Finalizable is Owned {\r\n\tbool public finalized;\r\n\r\n\tfunction finalize() onlyOwner {\r\n\t\tfinalized = true;\r\n\t}\r\n\r\n\tmodifier notFinalized() {\r\n\t\trequire(!finalized);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract IToken {\r\n\tfunction transfer(address _to, uint _value) returns (bool);\r\n\tfunction balanceOf(address owner) returns(uint);\r\n}\r\n\r\ncontract TokenReceivable is Owned {\r\n\tfunction claimTokens(address _token, address _to) onlyOwner returns (bool) {\r\n\t\tIToken token = IToken(_token);\r\n\t\treturn token.transfer(_to, token.balanceOf(this));\r\n\t}\r\n}\r\n\r\ncontract EventDefinitions {\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract Token is Finalizable, TokenReceivable, SafeMath, EventDefinitions, Pausable {\r\n\tstring constant public name = \"Rights Token\";\r\n\tuint8 constant public decimals = 8;\r\n\tstring constant public symbol = \"RTK\";\r\n\tController public controller;\r\n\tstring public motd;\r\n\tevent Motd(string message);\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction setMotd(string _m) onlyOwner {\r\n\t\tmotd = _m;\r\n\t\tMotd(_m);\r\n\t}\r\n\r\n\tfunction setController(address _c) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_c);\r\n\t}\r\n\r\n\t// functions below this line are public\r\n\r\n\tfunction balanceOf(address a) constant returns (uint) {\r\n\t\treturn controller.balanceOf(a);\r\n\t}\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn controller.totalSupply();\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn controller.allowance(_owner, _spender);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.transfer(msg.sender, _to, _value)) {\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3) notPaused returns (bool success) {\r\n\t\tif (controller.transferFrom(msg.sender, _from, _to, _value)) {\r\n\t\t\tTransfer(_from, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\t// promote safe user behavior\r\n\t\tif (controller.approve(msg.sender, _spender, _value)) {\r\n\t\t\tApproval(msg.sender, _spender, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _spender, uint _addedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.increaseApproval(msg.sender, _spender, _addedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _spender, uint _subtractedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.decreaseApproval(msg.sender, _spender, _subtractedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmodifier onlyPayloadSize(uint numwords) {\r\n\t\tassert(msg.data.length >= numwords * 32 + 4);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction burn(uint _amount) notPaused {\r\n\t\tcontroller.burn(msg.sender, _amount);\r\n\t\tTransfer(msg.sender, 0x0, _amount);\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\tassert(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction controllerTransfer(address _from, address _to, uint _value) onlyController {\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction controllerApprove(address _owner, address _spender, uint _value) onlyController {\r\n\t\tApproval(_owner, _spender, _value);\r\n\t}\r\n}\r\n\r\ncontract Controller is Owned, Finalizable {\r\n\tLedger public ledger;\r\n\tToken public token;\r\n\r\n\tfunction Controller() {\r\n\t}\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction setToken(address _token) onlyOwner {\r\n\t\ttoken = Token(_token);\r\n\t}\r\n\r\n\tfunction setLedger(address _ledger) onlyOwner {\r\n\t\tledger = Ledger(_ledger);\r\n\t}\r\n\r\n\tmodifier onlyToken() {\r\n\t\trequire(msg.sender == address(token));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyLedger() {\r\n\t\trequire(msg.sender == address(ledger));\r\n\t\t_;\r\n\t}\r\n\r\n\t// public functions\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn ledger.totalSupply();\r\n\t}\r\n\r\n\tfunction balanceOf(address _a) constant returns (uint) {\r\n\t\treturn ledger.balanceOf(_a);\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn ledger.allowance(_owner, _spender);\r\n\t}\r\n\r\n\t// functions below this line are onlyLedger\r\n\r\n\tfunction ledgerTransfer(address from, address to, uint val) onlyLedger {\r\n\t\ttoken.controllerTransfer(from, to, val);\r\n\t}\r\n\r\n\t// functions below this line are onlyToken\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transferFrom(_spender, _from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.approve(_owner, _spender, _value);\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.increaseApproval(_owner, _spender, _addedValue);\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.decreaseApproval(_owner, _spender, _subtractedValue);\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyToken {\r\n\t\tledger.burn(_owner, _amount);\r\n\t}\r\n}\r\n\r\ncontract Ledger is Owned, SafeMath, Finalizable, TokenReceivable {\r\n\tController public controller;\r\n\tmapping(address => uint) public balanceOf;\r\n\tmapping (address => mapping (address => uint)) public allowance;\r\n\tuint public totalSupply;\r\n\tuint public mintingNonce;\r\n\tbool public mintingStopped;\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction Ledger() {\r\n\t}\r\n\r\n\tfunction setController(address _controller) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_controller);\r\n\t}\r\n\r\n\tfunction stopMinting() onlyOwner {\r\n\t\tmintingStopped = true;\r\n\t}\r\n\r\n\tfunction multiMint(uint nonce, uint256[] bits) external onlyOwner {\r\n\t\trequire(!mintingStopped);\r\n\t\tif (nonce != mintingNonce) return;\r\n\t\tmintingNonce += 1;\r\n\t\tuint256 lomask = (1 << 96) - 1;\r\n\t\tuint created = 0;\r\n\t\tfor (uint i=0; i<bits.length; i++) {\r\n\t\t\taddress a = address(bits[i]>>96);\r\n\t\t\tuint value = bits[i]&lomask;\r\n\t\t\tbalanceOf[a] = balanceOf[a] + value;\r\n\t\t\tcontroller.ledgerTransfer(0, a, value);\r\n\t\t\tcreated += value;\r\n\t\t}\r\n\t\ttotalSupply += created;\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] < _value) return false;\r\n\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] < _value) return false;\r\n\r\n\t\tvar allowed = allowance[_from][_spender];\r\n\t\tif (allowed < _value) return false;\r\n\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tallowance[_from][_spender] = safeSub(allowed, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyController returns (bool success) {\r\n\t\t// require user to set to zero before resetting to nonzero\r\n\t\tif ((_value != 0) && (allowance[_owner][_spender] != 0)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tallowance[_owner][_spender] = _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tallowance[_owner][_spender] = safeAdd(oldValue, _addedValue);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowance[_owner][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowance[_owner][_spender] = safeSub(oldValue, _subtractedValue);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyController {\r\n\t\tbalanceOf[_owner] = safeSub(balanceOf[_owner], _amount);\r\n\t\ttotalSupply = safeSub(totalSupply, _amount);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ledger\",\"type\":\"address\"}],\"name\":\"setLedger\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ledger\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"ledgerTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Controller","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e30b2469bc6c419ad4d60d77c0aa9d9b5fa942b828602ddc6494104175188a9c"}]}