{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// File: node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * See https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n// File: contracts/MyanmarDonations.sol\r\n\r\n// ----------------------------------------------------------------------------\r\n// MyanmarDonations - Donations Contract to help people due to Myanmar flood\r\n//\r\n// Copyright (c) 2018 InfoCorp Technologies Pte Ltd.\r\n// http://www.sentinel-chain.org/\r\n//\r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\ncontract MyanmarDonations is Ownable {\r\n\r\n    // SENC Token Address\r\n    address public SENC_CONTRACT_ADDRESS = 0xA13f0743951B4f6E3e3AA039f682E17279f52bc3;\r\n    // Exchange Wallet Address\r\n    address public DONATION_WALLET = 0xB4ea16258020993520F59cC786c80175C1b807D7;\r\n    // Foundation Wallet Address\r\n    address public FOUNDATION_WALLET = 0x2c76E65d3b3E38602CAa2fAB56e0640D0182D8F8;\r\n    // Start date: 2018-08-08 10:00:00 (GMT +8)\r\n    uint256 public START_DATE = 1533693600;\r\n    // End date:   2018-08-10 18:00:00 (GMT +8)\r\n    uint256 public END_DATE = 1533895200;\r\n    // Ether hard cap\r\n    uint256 public ETHER_HARD_CAP = 30 ether;\r\n    // InfoCorp donation\r\n    uint256 public INFOCORP_DONATION = 30 ether;\r\n    // Total Ether hard cap to receive\r\n    uint256 public TOTAL_ETHER_HARD_CAP = ETHER_HARD_CAP + INFOCORP_DONATION;\r\n    // SENC-ETH pegged rate based on EOD rate of the 2nd August from coingecko in Wei\r\n    uint256 constant public FIXED_RATE = 41369152116499 wei;\r\n    // 30 is the max cap in Ether\r\n    uint256 public SENC_HARD_CAP = ETHER_HARD_CAP * 10 ** 18 / FIXED_RATE;\r\n    // Total of SENC collected at the end of the donation\r\n    uint256 public totalSencCollected;\r\n    // Marks the end of the donation.\r\n    bool public finalized = false;\r\n\r\n    modifier onlyDonationAddress() {\r\n        require(msg.sender == DONATION_WALLET);\r\n        _;\r\n    }\r\n\r\n    /// @notice Receive initial funds.\r\n    function() public payable {\r\n        require(msg.value == TOTAL_ETHER_HARD_CAP);\r\n        require(\r\n            address(this).balance <= TOTAL_ETHER_HARD_CAP,\r\n            \"Contract balance hardcap reachead\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice The `finalize()` should only be called after donation\r\n     * hard cap reached or the campaign reached the final day.\r\n     */\r\n    function finalize() public onlyDonationAddress returns (bool) {\r\n        require(getSencBalance() >= SENC_HARD_CAP || now >= END_DATE, \"SENC hard cap rached OR End date reached\");\r\n        require(!finalized, \"Donation not already finalized\");\r\n        // The Ether balance collected in Wei\r\n        totalSencCollected = getSencBalance();\r\n        if (totalSencCollected >= SENC_HARD_CAP) {\r\n            // Transfer of donations to the donations address\r\n            DONATION_WALLET.transfer(address(this).balance);\r\n        } else {\r\n            uint256 totalDonatedEthers = convertToEther(totalSencCollected) + INFOCORP_DONATION;\r\n            // Transfer of donations to the donations address\r\n            DONATION_WALLET.transfer(totalDonatedEthers);\r\n            // Transfer ETH remaining to foundation\r\n            claimTokens(address(0), FOUNDATION_WALLET);\r\n        }\r\n        // Transfer SENC to foundation\r\n        claimTokens(SENC_CONTRACT_ADDRESS, FOUNDATION_WALLET);\r\n        finalized = true;\r\n        return finalized;\r\n    }\r\n\r\n    /**\r\n     * @notice The `claimTokens()` should only be called after donation\r\n     * ends or if a security issue is found.\r\n     * @param _to the recipient that receives the tokens.\r\n     */\r\n    function claimTokens(address _token, address _to) public onlyDonationAddress {\r\n        require(_to != address(0), \"Wallet format error\");\r\n        if (_token == address(0)) {\r\n            _to.transfer(address(this).balance);\r\n            return;\r\n        }\r\n\r\n        ERC20Basic token = ERC20Basic(_token);\r\n        uint256 balance = token.balanceOf(this);\r\n        require(token.transfer(_to, balance), \"Token transfer unsuccessful\");\r\n    }\r\n\r\n    /// @notice The `sencToken()` is the getter for the SENC Token.\r\n    function sencToken() public view returns (ERC20Basic) {\r\n        return ERC20Basic(SENC_CONTRACT_ADDRESS);\r\n    }\r\n\r\n    /// @notice The `getSencBalance()` retrieve the SENC balance of the contract in Wei.\r\n    function getSencBalance() public view returns (uint256) {\r\n        return sencToken().balanceOf(address(this));\r\n    }\r\n\r\n    /// @notice The `getTotalDonations()` retrieve the Ether balance collected so far in Wei.\r\n    function getTotalDonations() public view returns (uint256) {\r\n        return convertToEther(finalized ? totalSencCollected : getSencBalance());\r\n    }\r\n    \r\n    /// @notice The `setEndDate()` changes unit timestamp on wich de donations ends.\r\n    function setEndDate(uint256 _endDate) external onlyOwner returns (bool){\r\n        END_DATE = _endDate;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice The `convertToEther()` converts value of SENC Tokens to Ether based on pegged rate.\r\n     * @param _value the amount of SENC to be converted.\r\n     */\r\n    function convertToEther(uint256 _value) private pure returns (uint256) {\r\n        return _value * FIXED_RATE / 10 ** 18;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"DONATION_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FOUNDATION_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSencCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENC_CONTRACT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"END_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_ETHER_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalDonations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSencBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIXED_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INFOCORP_DONATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sencToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENC_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHER_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MyanmarDonations","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://02ec22c1e43efe115b79e3993dda832d1d99e4e06e644478dc9b5770c8406586"}]}