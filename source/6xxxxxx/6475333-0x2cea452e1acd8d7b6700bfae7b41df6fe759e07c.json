{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BasePlan {\r\n  using SafeMath for uint256;\r\n\r\n  event Released(uint256 amount);\r\n\r\n  address public beneficiary;\r\n  uint256 public start;\r\n  uint256 public lockedTime;\r\n  uint256 public releasePeriod;\r\n  uint256 public releasePercent;\r\n  uint256 public duration;\r\n\r\n  mapping (address => uint256) public released;\r\n  // mapping (address => uint256) public releasedAt;\r\n\r\n  // core team start at 1566000000                         2% per month       0.2 (20%)\r\n  // investment start at first release  lock 12 months,    5% per month       0.2 (20%)\r\n  // community start at first release                      1% per month       0.3 (30%)\r\n  // fund start at first release          lock 12 months,  5% per month       0.2 (20%)\r\n  // mint  10%\r\n\r\n  constructor(\r\n    address _beneficiary,\r\n    uint256 _start,         // 1566000000 or now\r\n    uint256 _lockedTime,    // 0 or 12 months\r\n    uint256 _releasePeriod, // 1 month 3600 * 24 * 30\r\n    uint256 _releasePercent // like 2,5\r\n  )\r\n    public\r\n  {\r\n    require(_beneficiary != address(0));\r\n    require (_start >= now);\r\n    require(_releasePercent > 0 && _releasePercent <= 100);\r\n\r\n    beneficiary = _beneficiary;\r\n    start = _start;\r\n    releasePeriod = _releasePeriod;\r\n    lockedTime = _lockedTime;\r\n    releasePercent = _releasePercent;\r\n    duration = SafeMath.add(lockedTime, _releasePeriod * SafeMath.div(100, _releasePercent)); // lock time + release period\r\n  }\r\n\r\n  function release(ERC20 _token) public {\r\n    uint256 unreleased = releasableAmount(_token);\r\n    require(unreleased > 0);\r\n\r\n    released[_token] = released[_token].add(unreleased);\r\n    _token.transfer(beneficiary, unreleased);\r\n    emit Released(unreleased);\r\n  }\r\n  \r\n  function releasableAmount(ERC20 _token) public view returns (uint256) {\r\n    uint256 currentBalance = _token.balanceOf(this);\r\n    uint256 totalBalance = currentBalance.add(released[_token]);\r\n    \r\n    uint256 time = now;\r\n    if (time >= start.add(duration)) {\r\n      return currentBalance; \r\n    } \r\n    if (time <= start.add(lockedTime)) {\r\n      return 0;\r\n    } \r\n    \r\n    return totalBalance.mul(releasePercent).div(100).mul(\r\n        (now - lockedTime - start).div(releasePeriod)\r\n        ) -  released[_token];\r\n  }\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"releasableAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_lockedTime\",\"type\":\"uint256\"},{\"name\":\"_releasePeriod\",\"type\":\"uint256\"},{\"name\":\"_releasePercent\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"}]","ContractName":"BasePlan","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000007e992a88319fb0d7f038c9a62f58f40f46237691000000000000000000000000000000000000000000000000000000005d57438000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000278d000000000000000000000000000000000000000000000000000000000000000002","Library":"","SwarmSource":"bzzr://a22c3904c03e1b47f5d932f496b219b20d629e2987474200c10f6dc597921507"}]}