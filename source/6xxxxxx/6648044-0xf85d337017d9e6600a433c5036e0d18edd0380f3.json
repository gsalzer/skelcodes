{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n *\r\n * Easy Invest FOREVER Contract\r\n *  - GAIN VARIABLE INTEREST AT A RATE OF AT LEAST 1% PER 5900 blocks (approx. 24 hours) UP TO 10% PER DAY (dependent on incoming ETH and contract balance in past 24 hour period)\r\n *  - ZERO SUM GAME - NO COMMISSION on your investment (every ether stays on contract's balance)\r\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\r\n *  - ADDED GAME ELEMENT OF CHOOSING THE BEST TIME TO WITHDRAW TO MAXIMIZE INTEREST (less frequent withdrawals at higher interest rates will return faster)\r\n *  - ONLY 100ETH balance increase per day needed for 10% interest so whales will boost the contract to newer heights to receive higher interest.\r\n *  \r\n *  - For Fairness on high interest days, a maximum of only 10% of total investment can be returned per withdrawal so you should make withdrawals regularly or lose the extra interest.\r\n * \r\n * How to use:\r\n *  1. Send any amount of ether to make an investment\r\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\r\n *  OR\r\n *  2b. Send more ether to reinvest AND get your profit at the same time\r\n *\r\n * RECOMMENDED GAS LIMIT: 100000\r\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n *\r\n * Contract reviewed and approved by pros!\r\n *\r\n */\r\ncontract EasyInvestForeverProtected2 {\r\n    mapping (address => uint256) public invested;   // records amounts invested\r\n    mapping (address => uint256) public bonus;      // records for bonus for good investors\r\n    mapping (address => uint) public atTime;    // records blocks at which investments were made\r\n\tuint256 public previousBalance = 0;             // stores the previous contract balance in steps of 5900 blocks (for current interest calculation)\r\n\tuint256 public interestRate = 1;                // stores current interest rate - initially 1%\r\n\tuint public nextTime = now + 2 days; // next block number to adjust interestRate\r\n\t\r\n    // this function called every time anyone sends a transaction to this contract\r\n    function () external payable {\r\n        uint varNow = now;\r\n        uint varAtTime = atTime[msg.sender];\r\n        if(varAtTime > varNow) varAtTime = varNow;\r\n        atTime[msg.sender] = varNow;         // record block number of this transaction\r\n        if (varNow >= nextTime) {            // update interestRate, previousBalance and nextBlock if block.number has increased enough (every 5900 blocks)\r\n\t\t    uint256 currentBalance = address(this).balance;\r\n\t\t    if (currentBalance < previousBalance) currentBalance = previousBalance; // prevents overflow in next line from negative difference and ensures falling contract remains at 1%\r\n\t\t\tinterestRate = (currentBalance - previousBalance) / 10e18 + 1;            // 1% interest base percentage increments for every 10ETH balance increase each period\r\n\t\t\tinterestRate = (interestRate > 10) ? 10 : ((interestRate < 1) ? 1 : interestRate);  // clamp interest between 1% to 10% inclusive\r\n\t\t\tpreviousBalance = currentBalance;      // if contract has fallen, currentBalance remains at the previous high and balance has to catch up for higher interest\r\n\t\t\tnextTime = varNow + 2 days;            // covers rare cases where there have been no transactions for over a day (unlikely)\r\n\t\t}\r\n\t\t\r\n\t\tif (invested[msg.sender] != 0) {            // if sender (aka YOU) is invested more than 0 ether\r\n            uint256 amount = invested[msg.sender] * interestRate / 100 * (varNow - varAtTime) / 1 days;   // interest amount = (amount invested) * interestRate% * (blocks since last transaction) / 5900\r\n            amount = (amount > invested[msg.sender] / 10) ? invested[msg.sender] / 10 : amount;  // limit interest to no more than 10% of invested amount per withdrawal\r\n            \r\n            // Protection from remove all bank\r\n            if(varNow - varAtTime < 1 days && amount > 10e15 * 5) amount = 10e15 * 5;\r\n            if(amount > address(this).balance / 10) amount = address(this).balance / 10;\r\n\r\n            if(amount > 0) msg.sender.transfer(amount);            // send calculated amount of ether directly to sender (aka YOU)\r\n\r\n            if(varNow - varAtTime >= 1 days && msg.value >= 10e17) \r\n            {\r\n                invested[msg.sender] += msg.value;\r\n                bonus[msg.sender] += msg.value;\r\n            }\r\n            \r\n        }\r\n\r\n\t\tinvested[msg.sender] += msg.value;          // update invested amount (msg.value) of this transaction\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"nextTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"previousBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"EasyInvestForeverProtected2","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c3a3f3b1379cfecce6c27e237c03374a5bad938e245927099fe2b887b8392f4b"}]}