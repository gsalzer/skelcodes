{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n /*\r\n *Software is provided \"AS IS\" without warranty of any kind,\r\n *either express or implied,\r\n *including but not limited to the implied warranties of merchantability and fitness for a particular purpose.\r\n *\r\n *Any similarity of code is purely coincidental.\r\n */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\trequire(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b > 0);\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b <= a);\r\n\t\tuint256 c = a - b;\r\n\t\treturn c;\r\n\t}\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\trequire(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b != 0);\r\n\t\treturn a % b;\r\n\t}\r\n}\r\ncontract SmartLand_5x2 {    \r\n\tusing SafeMath for uint;\r\n\tmapping(address => uint) public userDeposit;\r\n\tmapping(address => uint) public userTime;\r\n\tmapping(address => uint) public userWithdraw;\r\n\taddress public projectWallet = 0xe06405Be05e91C85d769C095Da6d394C5fe59778;\r\n\tuint userProfit = 110;\r\n\tuint projectPercent = 2;\r\n\tuint public chargingTime = 86400 seconds;\r\n\tuint public percentDay = 22000;\r\n\tuint public countOfInvestments = 0;\r\n\tuint public maxInvest = 5 ether;\r\n\tmodifier ifIssetUser() {\r\n\t\trequire(userDeposit[msg.sender] > 0, \"Deposit not found\");\r\n\t\t_;\r\n\t}\r\n\tmodifier timePayment() {\r\n\t\trequire(now >= userTime[msg.sender].add(chargingTime), \"Deposit not found\");\r\n\t\t_;\r\n\t}\r\n\tfunction collectPercent() ifIssetUser timePayment internal {\r\n\t\tif ((userDeposit[msg.sender].mul(userProfit).div(100)) <= userWithdraw[msg.sender]) {\r\n\t\t\tuserDeposit[msg.sender] = 0;\r\n\t\t\tuserTime[msg.sender] = 0;\r\n\t\t\tuserWithdraw[msg.sender] = 0;\r\n\t\t} else {\r\n\t\t\tuint payout = payoutAmount();\r\n\t\t\tuserTime[msg.sender] = now;\r\n\t\t\tuserWithdraw[msg.sender] += payout;\r\n\t\t\tmsg.sender.transfer(payout);\r\n\t\t}\r\n\t}\r\n\tfunction payoutAmount() public view returns(uint) {\r\n\t\tuint percent = (percentDay);\r\n\t\tuint rate = userDeposit[msg.sender].mul(percent).div(100000);\r\n\t\tuint interestRate = now.sub(userTime[msg.sender]).div(chargingTime);\r\n\t\tuint withdrawalAmount = rate.mul(interestRate);\r\n\t\treturn (withdrawalAmount);\r\n\t}\r\n\tfunction makeDeposit() private {\r\n\t\trequire (msg.value <= (maxInvest), 'Excess max invest');\r\n\t\tif (msg.value > 0) {\r\n\t\t\tif (userDeposit[msg.sender] == 0) {\r\n\t\t\t\tcountOfInvestments += 1;\r\n\t\t\t}\r\n\t\t\tif (userDeposit[msg.sender] > 0 && now > userTime[msg.sender].add(chargingTime)) {\r\n\t\t\t\tcollectPercent();\r\n\t\t\t}\r\n\t\t\tuserDeposit[msg.sender] = userDeposit[msg.sender].add(msg.value);\r\n\t\t\tuserTime[msg.sender] = now;\r\n\t\t\tprojectWallet.transfer(msg.value.mul(projectPercent).div(100));\t\t\t\r\n\t\t} else {\r\n\t\t\tcollectPercent();\r\n\t\t}\r\n\t}\r\n\tfunction returnDeposit() ifIssetUser private {\r\n\t\tuint withdrawalAmount = userDeposit[msg.sender].sub(userWithdraw[msg.sender]).sub(userDeposit[msg.sender].mul(projectPercent).div(100));\r\n\t\trequire(userDeposit[msg.sender] > withdrawalAmount, 'You have already repaid your deposit');\r\n\t\tuserDeposit[msg.sender] = 0;\r\n\t\tuserTime[msg.sender] = 0;\r\n\t\tuserWithdraw[msg.sender] = 0;\r\n\t\tmsg.sender.transfer(withdrawalAmount);\r\n\t}\r\n\tfunction() external payable {\r\n\t\tif (msg.value == 0.000111 ether) {\r\n\t\t\treturnDeposit();\r\n\t\t} else {\r\n\t\t\tmakeDeposit();\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxInvest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chargingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"projectWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countOfInvestments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SmartLand_5x2","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://95b6de1ca16ddb4ecfc6a6c961da12f890c15483ab8baeafd175d4676986388d"}]}