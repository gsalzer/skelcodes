{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract DiscountToken { mapping (address => uint256) public balanceOf; }\r\n\r\ncontract TwoCoinsOneMoon {\r\n    struct Bettor {\r\n        address account;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct Event {\r\n        uint256 winner; //0 - blue; 1 - red\r\n        uint256 newMoonLevel;\r\n        uint256 block;\r\n        uint256 blueCap;\r\n        uint256 redCap;\r\n    }\r\n\r\n    uint256 public lastLevelChangeBlock;\r\n    uint256 public lastEventId;\r\n    uint256 public moonLevel;\r\n\r\n    uint256 public marketCapBlue;\r\n    uint256 public marketCapRed;\r\n    \r\n    uint256 public startBetBlue;\r\n    uint256 public startBetRed;\r\n\r\n    Bettor[] public bettorsBlue;\r\n    Bettor[] public bettorsRed;\r\n\r\n    Event[] public history;\r\n\r\n    mapping (address => uint) public balance;\r\n\r\n    address private feeCollector;\r\n\r\n    DiscountToken discountToken;\r\n\r\n    constructor() public {\r\n        marketCapBlue = 0;\r\n        marketCapRed = 0;\r\n        \r\n        startBetBlue = 0;\r\n        startBetRed = 0;\r\n        \r\n        feeCollector = 0xa949f4b5083b6f8a4e945812754e86e08b418f13;\r\n        discountToken = DiscountToken(0x14be332156b67f8e8a1e99a59c6943c128260abb);\r\n        lastLevelChangeBlock = block.number;\r\n        moonLevel = 500 finney;\r\n    }\r\n\r\n    function getBetAmount() private returns (uint256) {\r\n        require (msg.value >= 100 finney);\r\n\r\n        uint256 betAmount = msg.value;\r\n        if (discountToken.balanceOf(msg.sender) == 0) {\r\n            uint256 comission = betAmount * 4 / 100;\r\n            betAmount -= comission;\r\n            balance[feeCollector] += comission;\r\n        }\r\n\r\n        return betAmount;\r\n    }\r\n\r\n    function betBlueCoin() public payable {\r\n        uint256 betAmount = getBetAmount();\r\n\r\n        marketCapBlue += betAmount;\r\n        bettorsBlue.push(Bettor({account:msg.sender, amount:betAmount}));\r\n\r\n        checkMoon();\r\n    }\r\n\r\n    function betRedCoin() public payable {\r\n        uint256 betAmount = getBetAmount();\r\n\r\n        marketCapRed += betAmount;\r\n        bettorsRed.push(Bettor({account:msg.sender, amount:betAmount}));\r\n\r\n        checkMoon();\r\n    }\r\n\r\n    function withdraw() public {\r\n        if (balance[feeCollector] != 0) {\r\n            uint256 fee = balance[feeCollector];\r\n            balance[feeCollector] = 0;\r\n            feeCollector.call.value(fee)();\r\n        }\r\n\r\n        uint256 amount = balance[msg.sender];\r\n        balance[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function depositBalance(uint256 winner) private {\r\n        uint256 i;\r\n        if (winner == 0) {\r\n            for (i = startBetBlue; i < bettorsBlue.length; i++) {\r\n                balance[bettorsBlue[i].account] += bettorsBlue[i].amount;\r\n                balance[bettorsBlue[i].account] += 10**18 * bettorsBlue[i].amount / marketCapBlue * marketCapRed / 10**18;\r\n            }\r\n        }\r\n        else {\r\n            for (i = startBetRed; i < bettorsRed.length; i++) {\r\n                balance[bettorsRed[i].account] += bettorsRed[i].amount;\r\n                balance[bettorsRed[i].account] += 10**18 * bettorsRed[i].amount / marketCapRed * marketCapBlue / 10**18;\r\n            }\r\n        }\r\n    }\r\n\r\n    function addEvent(uint256 winner) private {\r\n        history.push(Event({winner: winner, newMoonLevel: moonLevel, block: block.number, blueCap: marketCapBlue, redCap: marketCapRed}));\r\n        lastEventId = history.length - 1;\r\n        lastLevelChangeBlock = block.number;\r\n    }\r\n\r\n    function burstBubble() private {\r\n        uint256 winner;\r\n        if (marketCapBlue == marketCapRed) {\r\n            winner = block.number % 2;\r\n        }\r\n        else if (marketCapBlue > marketCapRed) {\r\n            winner = 0;\r\n        }\r\n        else {\r\n            winner = 1;\r\n        }\r\n        depositBalance(winner);\r\n        moonLevel = moonLevel * 2;\r\n        addEvent(winner);\r\n\r\n        marketCapBlue = 0;\r\n        marketCapRed = 0;\r\n        \r\n        startBetBlue = bettorsBlue.length;\r\n        startBetRed = bettorsRed.length;\r\n    }\r\n\r\n    function checkMoon() private {\r\n        if (block.number - lastLevelChangeBlock > 42000) {\r\n           moonLevel = moonLevel / 2;\r\n           addEvent(2);\r\n        }\r\n        if (marketCapBlue >= moonLevel || marketCapRed >= moonLevel) {\r\n            burstBubble();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastEventId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBetRed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"betRedCoin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastLevelChangeBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"history\",\"outputs\":[{\"name\":\"winner\",\"type\":\"uint256\"},{\"name\":\"newMoonLevel\",\"type\":\"uint256\"},{\"name\":\"block\",\"type\":\"uint256\"},{\"name\":\"blueCap\",\"type\":\"uint256\"},{\"name\":\"redCap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBetBlue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bettorsRed\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketCapRed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"moonLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketCapBlue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"betBlueCoin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bettorsBlue\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TwoCoinsOneMoon","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3b91ef6c52350382f764ab55ade4ca03384b44ea1d3ed1a3bb81514cf45f4f79"}]}