{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'Fusionchain' Token contract\r\n//\r\n// Deployed to : 0xAfa5b5e0C7cd2E1882e710B63EAb0D6f8cbDbf43\r\n// Symbol      : FIX\t\r\n// Name        : Fusionchain\r\n// Total supply: 7,300,000,000 FIX\r\n// Decimals    : 7\r\n//\r\n// by Fusionchain Developer Team --- Oct 31,2018.\r\n//\r\n// All-in-One the decentralized financial network.\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract FusionchainSafeMath \r\n{\r\n\tfunction safeAdd(uint a, uint b) public pure returns (uint c) \r\n\t{\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction safeSub(uint a, uint b) public pure returns (uint c) \r\n\t{\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction safeMul(uint a, uint b) public pure returns (uint c) \r\n\t{\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\t\r\n\tfunction safeDiv(uint a, uint b) public pure returns (uint c) \r\n\t{\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//  Interface\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract FusionchainInterface \r\n{\r\n\tfunction totalSupply() public constant returns (uint);\r\n\tfunction balanceOf(address tokenOwner) public constant returns (uint balance);\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n\tfunction transfer(address to, uint tokens) public returns (bool success);\r\n\tfunction approve(address spender, uint tokens) public returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\tfunction burn(uint _value) returns (bool success);\r\n\r\n\t// This generates a public event on the blockchain that will notify clients\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\r\n\t// This generates a public event on the blockchain that will notify clients\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract FusionchainApproveAndCallFallBack \r\n{\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// FusionchainOwned contract\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract FusionchainOwned \r\n{\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\tconstructor() public \r\n\t{\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner \r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner \r\n\t{\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public \r\n\t{\r\n\t\trequire(msg.sender == newOwner);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Fusionchain ERC20 Token, with the addition of symbol, name and decimals and assisted\r\n// token transfers\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract Fusionchain is FusionchainInterface, FusionchainOwned, FusionchainSafeMath\r\n {\r\n\t// Public variables of the token\r\n\tstring public symbol; \t\r\n\tstring public name;  \t\r\n\tuint   public decimals;  \r\n\tuint   public _totalSupply;\r\n\r\n\t// This creates an array with all balances\r\n\tmapping(address => uint) balances;\r\n\t// Owner of account approves the transfer of an amount to another account    \r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\r\n\t/**\r\n     * Constructor function\r\n     *\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n    */\r\n\r\n\tfunction Fusionchain () public \r\n\t{\r\n\t\tsymbol = \"FIX\";       //Token symbol\r\n\t\tname = \"Fusionchain\";    //Token name\r\n\t\tdecimals = 7;        // 7 is the most common number of decimal places\r\n\t\t_totalSupply = 7300000000*10**decimals; // 7,300,000,000 FIX, 7 decimal places \r\n\t\tbalances[0xAfa5b5e0C7cd2E1882e710B63EAb0D6f8cbDbf43] = _totalSupply;\r\n\t\t\r\n\t\temit Transfer(address(0), 0xAfa5b5e0C7cd2E1882e710B63EAb0D6f8cbDbf43, _totalSupply);\r\n\t}\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Total supply\r\n\t// ------------------------------------------------------------------------\r\n\r\n\tfunction totalSupply() public constant returns (uint) \r\n\t{\r\n\t\treturn _totalSupply  - balances[address(0)];\r\n\t}\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Get the token balance for account tokenOwner\r\n\t// ------------------------------------------------------------------------\r\n\r\n\tfunction balanceOf(address _tokenOwner) public constant returns (uint balance) \r\n\t{\r\n\t\treturn balances[_tokenOwner];\r\n\t}\r\n\r\n\t/**\r\n     * Transfer tokens\r\n     *\r\n     * Send `_value` tokens to `_to` from your account\r\n     *\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n    */\r\n\r\n\tfunction transfer(address _to, uint _value) public returns (bool success)\r\n\t{\r\n\t\tbalances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t\tbalances[_to] = safeAdd(balances[_to], _value);\r\n\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n     * Set allowance for other address\r\n     *\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\r\n     *\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n    */\r\n\r\n\tfunction approve(address _spender, uint _value) public returns (bool success) \r\n\t{\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\t\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n     * Transfer tokens from other address\r\n     *\r\n     * Send `_value` tokens to `_to` on behalf of `_from`\r\n     *\r\n     * @param _from The address of the sender\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n    */\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success) \r\n\t{\r\n\t\tbalances[_from] = safeSub(balances[_from], _value);\r\n\t\tallowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\r\n\t\tbalances[_to] = safeAdd(balances[_to], _value);\r\n\t\t\r\n\t\temit Transfer(_from, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Returns the amount of tokens approved by the owner that can be\r\n\t// transferred to the spender's account\r\n\t// ------------------------------------------------------------------------\r\n\r\n\tfunction allowance(address _tokenOwner, address _spender) public constant returns (uint remaining) \r\n\t{\r\n\t\treturn allowed[_tokenOwner][_spender];\r\n\t}\r\n\r\n\r\n\t/**\r\n     * Set allowance for other address and notify\r\n     *\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\r\n     *\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n     * @param _data some extra information to send to the approved contract\r\n    */\r\n\r\n\tfunction approveAndCall(address _spender, uint _value, bytes _data) public returns (bool success) \r\n\t{\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\tFusionchainApproveAndCallFallBack(_spender).receiveApproval(msg.sender, _value, this, _data);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Don't accept ETH \r\n\t// ------------------------------------------------------------------------\r\n\r\n\tfunction () public payable \r\n\t{\r\n\t\trevert();\r\n\t}\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Owner can transfer out any accidentally sent ERC20 tokens\r\n\t// ------------------------------------------------------------------------\r\n\r\n\tfunction transferAnyERC20Token(address _tokenAddress, uint _value) public onlyOwner returns (bool success) \r\n\t{\r\n\t\treturn FusionchainInterface(_tokenAddress).transfer(owner, _value);\r\n\t}\r\n\r\n\t/**\r\n     * Destroy tokens\r\n     *\r\n     * Remove `_value` tokens from the system irreversibly\r\n     *\r\n     * @param _value the amount of money to burn\r\n    */\r\n\r\n\tfunction burn(uint _value) returns (bool success) \r\n\t{\r\n\t\t//Check if the sender has enough\r\n\t\tif (balances[msg.sender] < _value) \r\n\t\t\tthrow; \r\n\r\n\t\tif (_value <= 0) \r\n\t\t    throw; \r\n\r\n\t\t// Subtract from the sender\r\n\t\tbalances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\r\n\t\t// Updates totalSupply \r\n\t\t_totalSupply =safeSub(_totalSupply,_value);\r\n\t\t\r\n\t\temit Transfer(msg.sender,0x0,_value);\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Fusionchain","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://af37e087f718f6fd195a74177caf19e397c48168c256d330c3c3ac06c3e54309"}]}