{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract VfSE_Lottery is Ownable {\r\n  using SafeMath for uint256;\r\n  address[] private players;\r\n  address[] public winners;\r\n  uint256[] public payments;\r\n  uint256 private feeValue;\r\n  address public lastWinner;\r\n  address public authorizedToDraw;\r\n  address[] private last10Winners = [0,0,0,0,0,0,0,0,0,0];  \r\n  uint256 public lastPayOut;\r\n  uint256 public amountRised;\r\n  address public house;\r\n  uint256 public round;\r\n  uint256 public playValue;\r\n  uint256 public roundEnds;\r\n  uint256 public roundDuration = 1 days;\r\n  bool public stopped;\r\n  address public SecondAddressBalance = 0xFBb1b73C4f0BDa4f67dcA266ce6Ef42f520fBB98;\r\n  address public ThirdAddressBalance = 0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE;\r\n  address public FourthAddressBalance = 0x267be1C1D684F78cb4F6a176C4911b741E4Ffdc0;\r\n  mapping (address => uint256) public payOuts;\r\n  uint256 private _seed;\r\n  \r\n  function bitSlice(uint256 n, uint256 bits, uint256 slot) private pure returns(uint256) {\r\n    uint256 offset = slot * bits;\r\n    uint256 mask = uint256((2**bits) - 1) << offset;\r\n    return uint256((n & mask) >> offset);\r\n  }\r\n\r\n  function maxRandom() private returns (uint256 randomNumber) {\r\n    _seed = uint256(keccak256(_seed, blockhash(block.number - 1), block.coinbase, block.difficulty, blockhash(1), FourthAddressBalance.balance, SecondAddressBalance.balance, ThirdAddressBalance.balance));\r\n    return _seed;\r\n  }\r\n\r\n  function random(uint256 upper) private returns (uint256 randomNumber) {\r\n    return maxRandom() % upper;\r\n  }\r\n    \r\n  function setHouseAddress(address _house) onlyOwner public {\r\n    house = _house;\r\n  }\r\n\r\n  function setSecondAddressBalance(address _SecondAddressBalance) onlyOwner public {\r\n    SecondAddressBalance = _SecondAddressBalance;\r\n  }\r\n  \r\n  function setThirdAddressBalance(address _ThirdAddressBalance) onlyOwner public {\r\n    ThirdAddressBalance = _ThirdAddressBalance;\r\n  }\r\n  \r\n  function setFourthAddressBalance(address _FourthAddressBalance) onlyOwner public {\r\n    FourthAddressBalance = _FourthAddressBalance;\r\n  }\r\n\r\n  function setAuthorizedToDraw(address _authorized) onlyOwner public {\r\n    authorizedToDraw = _authorized;\r\n  }\r\n\r\n  function setFee(uint256 _fee) onlyOwner public {\r\n    feeValue = _fee;\r\n  }\r\n  \r\n  function setPlayValue(uint256 _amount) onlyOwner public {\r\n    playValue = _amount;\r\n  }\r\n\r\n  function stopLottery(bool _stop) onlyOwner public {\r\n    stopped = _stop;\r\n  }\r\n\r\n  function produceRandom(uint256 upper) private returns (uint256) {\r\n    uint256 rand = random(upper);\r\n    //output = rand;\r\n    return rand;\r\n  }\r\n\r\n  function getPayOutAmount() private view returns (uint256) {\r\n    //uint256 balance = address(this).balance;\r\n    uint256 fee = amountRised.mul(feeValue).div(100);\r\n    return (amountRised - fee);\r\n  }\r\n\r\n  function draw() private {\r\n    require(now > roundEnds);\r\n    uint256 howMuchBets = players.length;\r\n    uint256 k;\r\n    lastWinner = players[produceRandom(howMuchBets)];\r\n    lastPayOut = getPayOutAmount();\r\n    \r\n    winners.push(lastWinner);\r\n    if (winners.length > 9) {\r\n      for (uint256 i = (winners.length - 10); i < winners.length; i++) {\r\n        last10Winners[k] = winners[i];\r\n        k += 1;\r\n      }\r\n    }\r\n\r\n    payments.push(lastPayOut);\r\n    payOuts[lastWinner] += lastPayOut;\r\n    lastWinner.transfer(lastPayOut);\r\n    \r\n    players.length = 0;\r\n    round += 1;\r\n    amountRised = 0;\r\n    roundEnds = now + roundDuration;\r\n    \r\n    emit NewWinner(lastWinner, lastPayOut);\r\n  }\r\n\r\n  function drawNow() public {\r\n    require(authorizedToDraw == msg.sender);\r\n    draw();\r\n  }\r\n\r\n  function play() payable public {\r\n    require (msg.value == playValue);\r\n    require (!stopped);\r\n\r\n    if (now > roundEnds) {\r\n      if (players.length < 2) {\r\n        roundEnds = now + roundDuration;\r\n      } else {\r\n        draw();\r\n      }\r\n    }\r\n    players.push(msg.sender);\r\n    amountRised = amountRised.add(msg.value);\r\n  }\r\n\r\n  function() payable public {\r\n    play();\r\n  }\r\n\r\n  constructor() public {\r\n    house = msg.sender;\r\n    authorizedToDraw = msg.sender;\r\n    feeValue = 10;\r\n    playValue = 100 finney;\r\n  }\r\n    \r\n  function getBalance() onlyOwner public {\r\n    uint256 thisBalance = address(this).balance;\r\n    house.transfer(thisBalance);\r\n  }\r\n  \r\n  function getPlayersCount() public view returns (uint256) {\r\n    return players.length;\r\n  }\r\n  \r\n  function getWinnerCount() public view returns (uint256) {\r\n    return winners.length;\r\n  }\r\n  \r\n  function getPlayers() public view returns (address[]) {\r\n    return players;\r\n  }\r\n  \r\n  function getSecondAddressBalance() public view returns (uint256) {\r\n    return SecondAddressBalance.balance;\r\n  }\r\n  \r\n  function getThirdAddressBalance() public view returns (uint256) {\r\n    return ThirdAddressBalance.balance;\r\n  }\r\n  \r\n  function getFourthAddressBalance() public view returns (uint256) {\r\n    return FourthAddressBalance.balance;\r\n  }\r\n  function last10() public view returns (address[]) {\r\n    if (winners.length < 11) {\r\n      return winners;\r\n    } else {\r\n      return last10Winners;\r\n    }\r\n  }\r\n  event NewWinner(address _winner, uint256 _amount);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastPayOut\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSecondAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last10\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_FourthAddressBalance\",\"type\":\"address\"}],\"name\":\"setFourthAddressBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFourthAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getThirdAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ThirdAddressBalance\",\"type\":\"address\"}],\"name\":\"setThirdAddressBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FourthAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"stopLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"payOuts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setPlayValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinnerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"setAuthorizedToDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roundEnds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ThirdAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SecondAddressBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawNow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_house\",\"type\":\"address\"}],\"name\":\"setHouseAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_SecondAddressBalance\",\"type\":\"address\"}],\"name\":\"setSecondAddressBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roundDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authorizedToDraw\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"house\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"NewWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"VfSE_Lottery","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b452b6ff7596724fbe06b3d7fe053eafadfc31b1d43cde142d54a9465aec4a5d"}]}