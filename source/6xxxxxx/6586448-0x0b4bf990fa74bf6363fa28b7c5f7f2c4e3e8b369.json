{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a + _b;\r\n    assert(c >= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract SmartRock {\r\n    using SafeMath for uint256;\r\n    uint constant public MINIMUM_INVEST = 1000000000000000 wei;\r\n    uint constant public MAXIMUM_INVEST = 50000000000000000000 wei;\r\n    uint constant public PERCENT_STEP1 = 250000000000000000000 wei;\r\n    uint constant public PERCENT_STEP2 = 500000000000000000000 wei;\r\n    uint constant public PERCENT_STEP3 = 750000000000000000000 wei;\r\n    uint constant public PERCENT_STEP4 = 1000000000000000000000 wei;\r\n    mapping (address => uint256) blocksData;\r\n    mapping (address => uint256) deposits;\r\n    mapping (address => uint256) referals;\r\n    mapping (address => uint256) referalsData;\r\n    address ad = 0x4F51785F0Fb33f869728dA547181a8F20F8c433E;\r\n    address income = 0x15781b8d632A1B158B85d98418E2CA0219D6f675;\r\n    \r\n\tfunction() payable public {\r\n\t    get();\r\n\t}\r\n\t\r\n\tfunction get() payable public {\r\n\t    require(msg.value >= MINIMUM_INVEST, \"Too small amount, minimum 0.001 ether\");\r\n\t    require(msg.value <= MAXIMUM_INVEST, \"Too big amount, max 1 ether\");\r\n\t    uint256 refPercent;\r\n\t    uint256 refpay;\r\n\t    uint256 percent;\r\n\t    percent = getPercent();\r\n\t    \r\n\t    if(deposits[msg.sender] != 0 && now > blocksData[msg.sender] + 1200) {\r\n    \t    uint256 paymount;\r\n    \t    paymount = deposits[msg.sender].mul(percent).div(10000).mul(getBlockTime(msg.sender)).div(86400);\r\n\t        msg.sender.transfer(paymount);\r\n\t        \r\n\t        if(referals[msg.sender] != 0) {\r\n\t            refpay = referals[msg.sender].mul(percent).div(10000).mul(2).div(100).mul(getRefTime(msg.sender)).div(86400);\r\n            \treferalsData[msg.sender] = now;\r\n            \tmsg.sender.transfer(refpay);\r\n\t        }\r\n\t    } \r\n\t    \r\n\t    deposits[msg.sender] += msg.value; \r\n\t    blocksData[msg.sender] = now;\r\n\t    address ref = bytesToAddress(msg.data);\r\n\t    \r\n\t    ad.transfer(msg.value.div(100).mul(10));\r\n\t    income.transfer(msg.value.div(100).mul(5));\r\n\t    \r\n\t    if (ref > 0x0 && ref != msg.sender) {\r\n            if(referals[ref] != 0) {\r\n            \trefpay = referals[ref].mul(percent).div(10000).mul(2).div(100).mul(getRefTime(ref)).div(86400);\r\n            \tref.transfer(refpay);\r\n            }\r\n            \r\n            referals[ref] += msg.value;\r\n            referalsData[ref] = now;\r\n            refPercent = msg.value.mul(3).div(100);  \r\n            ref.transfer(refPercent);\r\n            deposits[msg.sender] += msg.value.mul(1).div(100); \r\n\t    }\r\n\t}\r\n\t\r\n    function getBalance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getPercent() public view returns(uint256) {\r\n        uint256 balance = getBalance();\r\n        uint256 percent = 0;\r\n        if(balance > PERCENT_STEP4)\r\n            percent = 400; \r\n        if(balance < PERCENT_STEP3)\r\n            percent = 350; \r\n        if(balance < PERCENT_STEP2)\r\n            percent = 325; \r\n        if(balance < PERCENT_STEP1)\r\n            percent = 300;\r\n   \r\n        return percent;\r\n    }\r\n    \r\n    function getBlockTime(address addr) public view returns(uint256) {\r\n        return now - blocksData[addr];\r\n    }\r\n\r\n    function getRefTime(address addr) public view returns(uint256) {\r\n        return now - referalsData[addr];\r\n    }\r\n\r\n\tfunction bytesToAddress(bytes bys) private pure returns (address addr) {\r\n\t\tassembly {\r\n\t\t\taddr := mload(add(bys, 20))\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_STEP1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_INVEST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_STEP3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_STEP2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRefTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBlockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENT_STEP4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXIMUM_INVEST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SmartRock","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d3ccaae56fbf143e9f3870369f94550629a2c873c0f6131496407e49a7d560c0"}]}