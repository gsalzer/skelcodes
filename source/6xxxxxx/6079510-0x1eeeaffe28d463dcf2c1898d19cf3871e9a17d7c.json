{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract SNOVToken {\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract MultiOwnable {\r\n\r\n    mapping(address => bool) ownerMap;\r\n    address[] public owners;\r\n\r\n    event OwnerAdded(address indexed _newOwner);\r\n    event OwnerRemoved(address indexed _oldOwner);\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender));\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        // Add default owner\r\n        address owner = msg.sender;\r\n        ownerMap[owner] = true;\r\n        owners.push(owner);\r\n    }\r\n\r\n    function ownerCount() public constant returns (uint256) {\r\n        return owners.length;\r\n    }\r\n\r\n    function isOwner(address owner) public constant returns (bool) {\r\n        return ownerMap[owner];\r\n    }\r\n\r\n    function addOwner(address owner) public onlyOwner returns (bool) {\r\n        if (!isOwner(owner) && owner != 0) {\r\n            ownerMap[owner] = true;\r\n            owners.push(owner);\r\n\r\n            emit OwnerAdded(owner);\r\n            return true;\r\n        } else return false;\r\n    }\r\n\r\n    function removeOwner(address owner) public onlyOwner returns (bool) {\r\n        if (isOwner(owner)) {\r\n            ownerMap[owner] = false;\r\n            for (uint i = 0; i < owners.length - 1; i++) {\r\n                if (owners[i] == owner) {\r\n                    owners[i] = owners[owners.length - 1];\r\n                    break;\r\n                }\r\n            }\r\n            owners.length -= 1;\r\n\r\n            emit OwnerRemoved(owner);\r\n            return true;\r\n        } else return false;\r\n    }\r\n}\r\n\r\ncontract MultiTransfer is MultiOwnable {\r\n    \r\n    function MultiTransaction(address _tokenAddress, address[] _addresses, uint256[] _values) public onlyOwner {\r\n        SNOVToken token = SNOVToken(_tokenAddress);\r\n        for (uint256 i = 0; i < _addresses.length; i++) {\r\n            token.transfer(_addresses[i], _values[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"MultiTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldOwner\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"}]","ContractName":"MultiTransfer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9e6cf59b711245a4b3b3c3f29b34bfb6ce8d81239acaff23edc262479cde3ad7"}]}