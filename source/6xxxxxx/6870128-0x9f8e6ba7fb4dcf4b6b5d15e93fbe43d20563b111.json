{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract ERC20Basic {\r\n  \r\n  \r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  \r\n    \r\n  function allowance(address owner, address spender)\r\n    public view returns (uint256);\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    public returns (bool);\r\n\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev 围绕ERC20操作发生故障的包装程序.\r\n * 可以在合约中通过这样使用这个库 `using SafeERC20 for ERC20;` 来使用安全的操作`token.safeTransfer(...)`\r\n */\r\nlibrary SafeERC20 {\r\n  \r\n  function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\r\n    require(token.transfer(to, value));\r\n  }\r\n\r\n  function safeTransferFrom(\r\n    ERC20 token,\r\n    address from,\r\n    address to,\r\n    uint256 value\r\n  )\r\n    internal\r\n  {\r\n    require(token.transferFrom(from, to, value));\r\n  }\r\n\r\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\r\n    require(token.approve(spender, value));\r\n  }\r\n}\r\n\r\n/**\r\n * @title TokenTimelock 锁定期释放token\r\n * @dev TokenTimelock 是一个令token持有人合同，将允许一个受益人在给定的发布时间之后提取token\r\n */\r\ncontract TokenTimelock {\r\n  //这里用到了上面的SafeERC20\r\n  using SafeERC20 for ERC20Basic;\r\n\r\n  // ERC20 basic token contract being held\r\n  ERC20Basic public token;\r\n  address public owner;\r\n  \r\n  // token 释放受益人组  \r\n  mapping (address => uint256) public beneficiary;\r\n  address[] beneficial;\r\n  // token可以被释放的时间戳\r\n  uint256 public releaseTime;\r\n  // 对token，受益人address和释放时间初始化\r\n  constructor(\r\n    ERC20Basic _token,\r\n    uint256 _releaseTime\r\n  )\r\n    public\r\n  {\r\n    require(_releaseTime > block.timestamp);\r\n    token = _token;\r\n    owner = msg.sender;\r\n    releaseTime = _releaseTime;\r\n  }\r\n  \r\n  function pushInvestor(address Ins,uint256 count) public  {\r\n      require (msg.sender == owner);\r\n      require (block.timestamp < releaseTime);\r\n      beneficial.push(Ins);\r\n      beneficiary[Ins] = count;\r\n  }\r\n  function chkBalance() public view returns (uint) {\r\n         return token.balanceOf(this);\r\n      \r\n  }\r\n  /**\r\n   * @notice 将时间限制内的token转移给受益人.\r\n   */\r\n  function release() public {\r\n    require(block.timestamp >= releaseTime);\r\n    \r\n    for (uint i=0;i<beneficial.length;i++ ){\r\n        uint256 amount = token.balanceOf(this);\r\n        require(amount > 0);\r\n        uint256 count = beneficiary[beneficial[i]];\r\n        if (amount>=count){\r\n             beneficiary[beneficial[i]] = 0;\r\n             token.safeTransfer(beneficial[i], count);\r\n        }\r\n    }\r\n  }\r\n  /**\r\n   * @notice owner可以退回合约内的token.\r\n   */\r\n  function revoke() public {\r\n      require (msg.sender == owner);\r\n      uint256 amount = token.balanceOf(this);\r\n      require(amount > 0);\r\n      token.safeTransfer(owner, amount);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Ins\",\"type\":\"address\"},{\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"pushInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chkBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TokenTimelock","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000060b742c823a11601d56550679db4c14ece723fa5000000000000000000000000000000000000000000000000000000005c531b80","Library":"","SwarmSource":"bzzr://6cacedf1a00288a0e8000f4e4835fa8506a940ada228a671eb3348ae809fd0fd"}]}