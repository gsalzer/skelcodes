{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n/**\r\n*\r\n* ETH CRYPTOCURRENCY DISTRIBUTION PROJECT\r\n* Web              - https://doeth.io/\r\n* Twitter          - https://twitter.com/eth_do\r\n* Telegram_channel - https://t.me/joinchat/JnIiXhAlqjy-7FYaMRso1g\r\n*\r\n*  - GAIN 4% PER 24 HOURS (every 5900 blocks)\r\n*  - Life-long payments\r\n*  - The revolutionary reliability\r\n*  - Minimal contribution 0.01 eth\r\n*  - Currency and payment - ETH\r\n*  - Contribution allocation schemes:\r\n*    -- 85% payments\r\n*    -- 15% Marketing + Operating Expenses\r\n*\r\n*   ---About the Project\r\n*  Blockchain-enabled smart contracts have opened a new era of trustless relationships without\r\n*  intermediaries. This technology opens incredible financial possibilities. Our automated investment\r\n*  distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be\r\n*  freely accessed online. In order to insure our investors' complete security, full control over the\r\n*  project has been transferred from the organizers to the smart contract: nobody can influence the\r\n*  system's permanent autonomous functioning.\r\n*\r\n* ---How to use:\r\n*  1. Send from ETH wallet to the smart contract address 0x0ff434793ba552db7861064ccb0268a9c05a20d2\r\n*     any amount from 0.01 ETH.\r\n*  2. Verify your transaction in the history of your application or etherscan.io, specifying the address\r\n*     of your wallet.\r\n*  3a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're\r\n*      spending too much on GAS)\r\n*  OR\r\n*  3b. For reinvest, you need to first remove the accumulated percentage of charges (by sending 0 ether\r\n*      transaction), and only after that, deposit the amount that you want to reinvest.\r\n* \r\n* RECOMMENDED GAS LIMIT: 200000\r\n* RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n* You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n*\r\n* ---It is not allowed to transfer from exchanges, only from your personal ETH wallet, for which you\r\n* have private keys.\r\n*\r\n* Contracts reviewed and approved by pros!\r\n*\r\n* Main contract - DOETH.\r\n*/\r\nlibrary SafeMath {\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a + _b;\r\n    assert(c >= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract DOETH {\r\n    using SafeMath for uint256;\r\n\r\n    address public constant marketingAddress = 0x2dB7088799a5594A152c8dCf05976508e4EaA3E4;\r\n\r\n    mapping (address => uint256) deposited;\r\n    mapping (address => uint256) withdrew;\r\n    mapping (address => uint256) refearned;\r\n    mapping (address => uint256) blocklock;\r\n\r\n    uint256 public totalDepositedWei = 0;\r\n    uint256 public totalWithdrewWei = 0;\r\n\r\n    function() payable external\r\n    {\r\n        uint256 marketingPerc = msg.value.mul(15).div(100);\r\n\r\n        marketingAddress.transfer(marketingPerc);\r\n        \r\n        if (deposited[msg.sender] != 0)\r\n        {\r\n            address investor = msg.sender;\r\n            uint256 depositsPercents = deposited[msg.sender].mul(4).div(100).mul(block.number-blocklock[msg.sender]).div(5900);\r\n            investor.transfer(depositsPercents);\r\n\r\n            withdrew[msg.sender] += depositsPercents;\r\n            totalWithdrewWei = totalWithdrewWei.add(depositsPercents);\r\n        }\r\n\r\n        address referrer = bytesToAddress(msg.data);\r\n        uint256 refPerc = msg.value.mul(4).div(100);\r\n        \r\n        if (referrer > 0x0 && referrer != msg.sender)\r\n        {\r\n            referrer.transfer(refPerc);\r\n\r\n            refearned[referrer] += refPerc;\r\n        }\r\n\r\n        blocklock[msg.sender] = block.number;\r\n        deposited[msg.sender] += msg.value;\r\n\r\n        totalDepositedWei = totalDepositedWei.add(msg.value);\r\n    }\r\n\r\n    function userDepositedWei(address _address) public view returns (uint256)\r\n    {\r\n        return deposited[_address];\r\n    }\r\n\r\n    function userWithdrewWei(address _address) public view returns (uint256)\r\n    {\r\n        return withdrew[_address];\r\n    }\r\n\r\n    function userDividendsWei(address _address) public view returns (uint256)\r\n    {\r\n        return deposited[_address].mul(4).div(100).mul(block.number-blocklock[_address]).div(5900);\r\n    }\r\n\r\n    function userReferralsWei(address _address) public view returns (uint256)\r\n    {\r\n        return refearned[_address];\r\n    }\r\n\r\n    function bytesToAddress(bytes bys) private pure returns (address addr)\r\n    {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDividendsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userReferralsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"DOETH","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b61e9ff4bb17d35ff1021dfe6c2a2b699217b500338c7e33708ea1b82911f374"}]}