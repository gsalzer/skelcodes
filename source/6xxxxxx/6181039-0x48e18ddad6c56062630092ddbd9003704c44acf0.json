{"status":"1","message":"OK","result":[{"SourceCode":"/* ==================================================================== */\r\n/* Copyright (c) 2018 The TokenTycoon Project.  All rights reserved.\r\n/* \r\n/* https://tokentycoon.io\r\n/*  \r\n/* authors rickhunter.shen@gmail.com   \r\n/*         ssesunding@gmail.com            \r\n/* ==================================================================== */\r\n\r\npragma solidity ^0.4.23;\r\n\r\ncontract AccessAdmin {\r\n    bool public isPaused = false;\r\n    address public addrAdmin;  \r\n\r\n    event AdminTransferred(address indexed preAdmin, address indexed newAdmin);\r\n\r\n    constructor() public {\r\n        addrAdmin = msg.sender;\r\n    }  \r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == addrAdmin);\r\n        _;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!isPaused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(isPaused);\r\n        _;\r\n    }\r\n\r\n    function setAdmin(address _newAdmin) external onlyAdmin {\r\n        require(_newAdmin != address(0));\r\n        emit AdminTransferred(addrAdmin, _newAdmin);\r\n        addrAdmin = _newAdmin;\r\n    }\r\n\r\n    function doPause() external onlyAdmin whenNotPaused {\r\n        isPaused = true;\r\n    }\r\n\r\n    function doUnpause() external onlyAdmin whenPaused {\r\n        isPaused = false;\r\n    }\r\n}\r\n\r\ncontract AccessService is AccessAdmin {\r\n    address public addrService;\r\n    address public addrFinance;\r\n\r\n    modifier onlyService() {\r\n        require(msg.sender == addrService);\r\n        _;\r\n    }\r\n\r\n    modifier onlyFinance() {\r\n        require(msg.sender == addrFinance);\r\n        _;\r\n    }\r\n\r\n    function setService(address _newService) external {\r\n        require(msg.sender == addrService || msg.sender == addrAdmin);\r\n        require(_newService != address(0));\r\n        addrService = _newService;\r\n    }\r\n\r\n    function setFinance(address _newFinance) external {\r\n        require(msg.sender == addrFinance || msg.sender == addrAdmin);\r\n        require(_newFinance != address(0));\r\n        addrFinance = _newFinance;\r\n    }\r\n\r\n    function withdraw(address _target, uint256 _amount) \r\n        external \r\n    {\r\n        require(msg.sender == addrFinance || msg.sender == addrAdmin);\r\n        require(_amount > 0);\r\n        address receiver = _target == address(0) ? addrFinance : _target;\r\n        uint256 balance = address(this).balance;\r\n        if (_amount < balance) {\r\n            receiver.transfer(_amount);\r\n        } else {\r\n            receiver.transfer(address(this).balance);\r\n        }      \r\n    }\r\n}\r\n\r\ninterface WonderTokenInterface {\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    function safeGiveByContract(uint256 _tokenId, address _to) external;\r\n    function getProtoIdByTokenId(uint256 _tokenId) external view returns(uint256); \r\n}\r\n\r\ninterface ManagerTokenInterface {\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    function safeGiveByContract(uint256 _tokenId, address _to) external;\r\n    function getProtoIdByTokenId(uint256 _tokenId) external view returns(uint256);\r\n}\r\n\r\ninterface TalentCardInterface {\r\n    function safeSendCard(uint256 _amount, address _to) external;\r\n}\r\n\r\ninterface ERC20BaseInterface {\r\n    function balanceOf(address _from) external view returns(uint256);\r\n    function transfer(address _to, uint256 _value) external;\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\r\n    function approve(address _spender, uint256 _value) external; \r\n}\r\n\r\ncontract TTCInterface is ERC20BaseInterface {\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) external returns (bool);\r\n}\r\n\r\n/// This Random is inspired by https://github.com/axiomzen/eth-random\r\ncontract Random {\r\n    uint256 _seed;\r\n\r\n    function _rand() internal returns (uint256) {\r\n        _seed = uint256(keccak256(abi.encodePacked(_seed, blockhash(block.number - 1), block.coinbase, block.difficulty)));\r\n        return _seed;\r\n    }\r\n\r\n    function _randBySeed(uint256 _outSeed) internal view returns (uint256) {\r\n        return uint256(keccak256(abi.encodePacked(_outSeed, blockhash(block.number - 1), block.coinbase, block.difficulty)));\r\n    }\r\n}\r\n\r\n\r\ncontract TTLottery is AccessService, Random {\r\n    TTCInterface ttcToken;\r\n    ManagerTokenInterface ttmToken;\r\n    WonderTokenInterface ttwToken;\r\n    TalentCardInterface tttcToken;\r\n\r\n    event ManagerSold(\r\n        address indexed buyer,\r\n        address indexed buyTo,\r\n        uint256 mgrId,\r\n        uint256 nextTokenId\r\n    );\r\n\r\n    event WonderSold(\r\n        address indexed buyer,\r\n        address indexed buyTo,\r\n        uint256 wonderId,\r\n        uint256 nextTokenId\r\n    );\r\n\r\n    event LotteryResult(\r\n        address indexed buyer,\r\n        address indexed buyTo,\r\n        uint256 lotteryCount,\r\n        uint256 lotteryRet\r\n    );\r\n\r\n    constructor() public {\r\n        addrAdmin = msg.sender;\r\n        addrFinance = msg.sender;\r\n        addrService = msg.sender;\r\n\r\n        ttcToken = TTCInterface(0xfB673F08FC82807b4D0E139e794e3b328d63551f);\r\n    }\r\n\r\n    function setTTMTokenAddress(address _addr) external onlyAdmin {\r\n        require(_addr != address(0));\r\n        ttmToken = ManagerTokenInterface(_addr);\r\n    }\r\n\r\n    function setTTWTokenAddress(address _addr) external onlyAdmin {\r\n        require(_addr != address(0));\r\n        ttwToken = WonderTokenInterface(_addr);\r\n    }\r\n\r\n    function setTTCTokenAddress(address _addr) external onlyAdmin {\r\n        require(_addr != address(0));\r\n        ttcToken = TTCInterface(_addr);\r\n    }\r\n\r\n    function setTalentCardAddress(address _addr) external onlyAdmin {\r\n        require(_addr != address(0));\r\n        tttcToken = TalentCardInterface(_addr);\r\n    }\r\n    \r\n    mapping (address => uint64) public lotteryHistory; \r\n\r\n    uint64 public nextLotteryTTMTokenId4 = 211;         // ManagerId: 4, tokenId: 211~285, lotteryRet:4 \r\n    uint64 public nextLotteryTTMTokenId5 = 286;         // ManagerId: 5, tokenId: 286~360, lotteryRet:5\r\n    uint64 public nextLotteryTTMTokenId9 = 511;         // ManagerId: 9, tokenId: 511~560, lotteryRet:6\r\n    uint64 public nextLotteryTTMTokenId10 = 561;        // ManagerId:10, tokenId: 561~610, lotteryRet:7\r\n\r\n    uint64 public nextLotteryTTWTokenId3 = 91;          // WonderId:  3, tokenId:  91~150, lotteryRet:8\r\n    uint64 public nextLotteryTTWTokenId4 = 151;         // WonderId:  4, tokenId: 151~180, lotteryRet:9\r\n\r\n    function setNextLotteryTTMTokenId4(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTMTokenId4 >= 211 && nextLotteryTTMTokenId4 <= 286);\r\n        nextLotteryTTMTokenId4 = _val;\r\n    }\r\n\r\n    function setNextLotteryTTMTokenId5(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTMTokenId5 >= 286 && nextLotteryTTMTokenId5 <= 361);\r\n        nextLotteryTTMTokenId5 = _val;\r\n    }\r\n\r\n    function setNextLotteryTTMTokenId9(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTMTokenId9 >= 511 && nextLotteryTTMTokenId9 <= 561);\r\n        nextLotteryTTMTokenId9 = _val;\r\n    }\r\n\r\n    function setNextLotteryTTMTokenId10(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTMTokenId10 >= 561 && nextLotteryTTMTokenId10 <= 611);\r\n        nextLotteryTTMTokenId10 = _val;\r\n    }\r\n\r\n    function setNextLotteryTTWTokenId3(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTWTokenId3 >= 91 && nextLotteryTTWTokenId3 <= 151);\r\n        nextLotteryTTWTokenId3 = _val;\r\n    }\r\n\r\n    function setNextLotteryTTWTokenId4(uint64 _val) external onlyAdmin {\r\n        require(nextLotteryTTWTokenId4 >= 151 && nextLotteryTTWTokenId4 <= 181);\r\n        nextLotteryTTWTokenId4 = _val;\r\n    }\r\n\r\n    function _getExtraParam(bytes _extraData) \r\n        private \r\n        pure\r\n        returns(address addr, uint256 lotteryCount) \r\n    {\r\n        assembly { addr := mload(add(_extraData, 20)) } \r\n        lotteryCount = uint256(_extraData[20]);\r\n    }\r\n\r\n    function receiveApproval(address _sender, uint256 _value, address _token, bytes _extraData) \r\n        external\r\n        whenNotPaused \r\n    {\r\n        require(msg.sender == address(ttcToken));\r\n        require(_extraData.length == 21);\r\n        (address toAddr, uint256 lotteryCount) = _getExtraParam(_extraData);\r\n        require(ttcToken.transferFrom(_sender, address(this), _value));\r\n        if (lotteryCount == 1) {\r\n            _lottery(_value, toAddr, _sender);\r\n        } else if(lotteryCount == 5) {\r\n            _lottery5(_value, toAddr, _sender);\r\n        } else {\r\n            require(false, \"Invalid lottery count\");\r\n        }\r\n    }\r\n\r\n    function lotteryByETH(address _gameWalletAddr) \r\n        external \r\n        payable\r\n        whenNotPaused \r\n    {\r\n        _lottery(msg.value, _gameWalletAddr, msg.sender);\r\n    }\r\n\r\n    function lotteryByETH5(address _gameWalletAddr) \r\n        external \r\n        payable\r\n        whenNotPaused \r\n    {\r\n        _lottery5(msg.value, _gameWalletAddr, msg.sender);\r\n    }\r\n\r\n    function _lotteryCard(uint256 _seed, address _gameWalletAddr) \r\n        private \r\n        returns(uint256 lotteryRet)\r\n    {\r\n        uint256 rdm = _seed % 10000;\r\n        if (rdm < 6081) {\r\n            tttcToken.safeSendCard(1, _gameWalletAddr);\r\n            lotteryRet = 1;\r\n        } else if (rdm < 8108) {\r\n            tttcToken.safeSendCard(3, _gameWalletAddr);\r\n            lotteryRet = 2;\r\n        } else if (rdm < 9324) {\r\n            tttcToken.safeSendCard(5, _gameWalletAddr);\r\n            lotteryRet = 3;\r\n        } else {\r\n            tttcToken.safeSendCard(10, _gameWalletAddr);\r\n            lotteryRet = 4;\r\n        }\r\n    }\r\n\r\n    function _lotteryCardNoSend(uint256 _seed)\r\n        private\r\n        pure \r\n        returns(uint256 lotteryRet, uint256 cardCnt) \r\n    {\r\n        uint256 rdm = _seed % 10000;\r\n        if (rdm < 6081) {\r\n            cardCnt = 1;\r\n            lotteryRet = 1;\r\n        } else if (rdm < 8108) {\r\n            cardCnt = 3;\r\n            lotteryRet = 2;\r\n        } else if (rdm < 9324) {\r\n            cardCnt = 5;\r\n            lotteryRet = 3;\r\n        } else {\r\n            cardCnt = 10;\r\n            lotteryRet = 4;\r\n        }\r\n    }\r\n\r\n    function _lotteryToken(uint256 _seed, address _gameWalletAddr, address _buyer) \r\n        private \r\n        returns(uint256 lotteryRet) \r\n    {\r\n        uint256[6] memory weightArray;\r\n        uint256 totalWeight = 0;\r\n        if (nextLotteryTTMTokenId4 <= 285) {\r\n            totalWeight += 2020;\r\n            weightArray[0] = totalWeight;\r\n        }\r\n        if (nextLotteryTTMTokenId5 <= 360) {\r\n            totalWeight += 2020;\r\n            weightArray[1] = totalWeight;\r\n        }\r\n        if (nextLotteryTTMTokenId9 <= 560) {\r\n            totalWeight += 1340;\r\n            weightArray[2] = totalWeight;\r\n        }\r\n        if (nextLotteryTTMTokenId10 <= 610) {\r\n            totalWeight += 1340;\r\n            weightArray[3] = totalWeight;\r\n        }\r\n        if (nextLotteryTTWTokenId3 <= 150) {\r\n            totalWeight += 2220;\r\n            weightArray[4] = totalWeight;\r\n        }\r\n        if (nextLotteryTTWTokenId4 <= 180) {\r\n            totalWeight += 1000;\r\n            weightArray[5] = totalWeight;\r\n        }\r\n\r\n        if (totalWeight > 0) {\r\n            uint256 rdm = _seed % totalWeight;\r\n            for (uint32 i = 0; i < 6; ++i) {\r\n                if (weightArray[i] == 0 || rdm >= weightArray[i]) {\r\n                    continue;\r\n                }\r\n                if (i == 0) {\r\n                    nextLotteryTTMTokenId4 += 1;\r\n                    ttmToken.safeGiveByContract(nextLotteryTTMTokenId4 - 1, _gameWalletAddr);\r\n                    emit ManagerSold(_buyer, _gameWalletAddr, 4, nextLotteryTTMTokenId4);\r\n                } else if (i == 1) {\r\n                    nextLotteryTTMTokenId5 += 1;\r\n                    ttmToken.safeGiveByContract(nextLotteryTTMTokenId5 - 1, _gameWalletAddr);\r\n                    emit ManagerSold(_buyer, _gameWalletAddr, 5, nextLotteryTTMTokenId5);\r\n                } else if (i == 2) {\r\n                    nextLotteryTTMTokenId9 += 1;\r\n                    ttmToken.safeGiveByContract(nextLotteryTTMTokenId9 - 1, _gameWalletAddr);\r\n                    emit ManagerSold(_buyer, _gameWalletAddr, 9, nextLotteryTTMTokenId9);\r\n                } else if (i == 3) {\r\n                    nextLotteryTTMTokenId10 += 1;\r\n                    ttmToken.safeGiveByContract(nextLotteryTTMTokenId10 - 1, _gameWalletAddr);\r\n                    emit ManagerSold(_buyer, _gameWalletAddr, 10, nextLotteryTTMTokenId10);\r\n                } else if (i == 4) {\r\n                    nextLotteryTTWTokenId3 += 1;\r\n                    ttwToken.safeGiveByContract(nextLotteryTTWTokenId3 - 1, _gameWalletAddr);\r\n                    emit WonderSold(_buyer, _gameWalletAddr, 3, nextLotteryTTWTokenId3);\r\n                } else {\r\n                    nextLotteryTTWTokenId4 += 1;\r\n                    ttwToken.safeGiveByContract(nextLotteryTTWTokenId4 - 1, _gameWalletAddr);\r\n                    emit WonderSold(_buyer, _gameWalletAddr, 4, nextLotteryTTWTokenId4);\r\n                }\r\n                lotteryRet = i + 5;\r\n                break;\r\n            } \r\n        }\r\n    }\r\n\r\n    function _lottery(uint256 _value, address _gameWalletAddr, address _buyer) \r\n        private \r\n    {\r\n        require(_value == 0.039 ether);\r\n        require(_gameWalletAddr != address(0));\r\n\r\n        uint256 lotteryRet;\r\n        uint256 seed = _rand();\r\n        uint256 rdm = seed % 10000;\r\n        seed /= 10000;\r\n        if (rdm < 400) {\r\n            lotteryRet = _lotteryToken(seed, _gameWalletAddr, _buyer);\r\n            if (lotteryRet == 0) {\r\n                lotteryRet = _lotteryCard(seed, _gameWalletAddr);\r\n            }\r\n        } else {\r\n            lotteryRet = _lotteryCard(seed, _gameWalletAddr);\r\n        }\r\n        lotteryHistory[_gameWalletAddr] = uint64(lotteryRet);\r\n        emit LotteryResult(_buyer, _gameWalletAddr, 1, lotteryRet);\r\n    }\r\n\r\n    function _lottery5(uint256 _value, address _gameWalletAddr, address _buyer) \r\n        private \r\n    {\r\n        require(_value == 0.1755 ether);\r\n        require(_gameWalletAddr != address(0));\r\n\r\n        uint256 seed = _rand();\r\n        uint256 lotteryRet = 0;\r\n        uint256 lRet;\r\n        uint256 cardCountTotal = 0;\r\n        uint256 cardCount;\r\n        for (uint256 i = 0; i < 5; ++i) {\r\n            if (i > 0) {\r\n                seed = _randBySeed(seed);\r\n            }\r\n            uint256 rdm = seed % 10000;\r\n            seed /= 10000;\r\n            if (rdm < 400) {\r\n                lRet = _lotteryToken(seed, _gameWalletAddr, _buyer);\r\n                if (lRet == 0) {\r\n                    (lRet, cardCount) = _lotteryCardNoSend(seed);\r\n                    cardCountTotal += cardCount;\r\n                }\r\n                lotteryRet += (lRet * (100 ** i));\r\n            } else {\r\n                (lRet, cardCount) = _lotteryCardNoSend(seed);\r\n                cardCountTotal += cardCount;\r\n                lotteryRet += (lRet * (100 ** i));\r\n            }\r\n        }\r\n\r\n        require(cardCountTotal <= 50);\r\n\r\n        if (cardCountTotal > 0) {\r\n            tttcToken.safeSendCard(cardCountTotal, _gameWalletAddr);\r\n        }\r\n        lotteryHistory[_gameWalletAddr] = uint64(lotteryRet);\r\n\r\n        emit LotteryResult(_buyer, _gameWalletAddr, 5, lotteryRet);\r\n    }\r\n\r\n    function withdrawERC20(address _erc20, address _target, uint256 _amount)\r\n        external\r\n    {\r\n        require(msg.sender == addrFinance || msg.sender == addrAdmin);\r\n        require(_amount > 0);\r\n        address receiver = _target == address(0) ? addrFinance : _target;\r\n        ERC20BaseInterface erc20Contract = ERC20BaseInterface(_erc20);\r\n        uint256 balance = erc20Contract.balanceOf(address(this));\r\n        require(balance > 0);\r\n        if (_amount < balance) {\r\n            erc20Contract.transfer(receiver, _amount);\r\n        } else {\r\n            erc20Contract.transfer(receiver, balance);\r\n        }   \r\n    }\r\n\r\n    function getLotteryInfo(address _walletAddr)\r\n        external\r\n        view \r\n        returns(\r\n           uint64 ttmCnt4,\r\n           uint64 ttmCnt5,\r\n           uint64 ttmCnt9,\r\n           uint64 ttmCnt10,\r\n           uint64 ttWCnt3,\r\n           uint64 ttwCnt4, \r\n           uint64 lastLottery\r\n        )\r\n    {\r\n        ttmCnt4 = 286 - nextLotteryTTMTokenId4;\r\n        ttmCnt5 = 361 - nextLotteryTTMTokenId5;\r\n        ttmCnt9 = 561 - nextLotteryTTMTokenId9;\r\n        ttmCnt10 = 611 - nextLotteryTTMTokenId10;\r\n        ttWCnt3 = 151 - nextLotteryTTWTokenId3;\r\n        ttwCnt4 = 181 - nextLotteryTTWTokenId4;\r\n        lastLottery = lotteryHistory[_walletAddr];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTWTokenId4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTMTokenId5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_walletAddr\",\"type\":\"address\"}],\"name\":\"getLotteryInfo\",\"outputs\":[{\"name\":\"ttmCnt4\",\"type\":\"uint64\"},{\"name\":\"ttmCnt5\",\"type\":\"uint64\"},{\"name\":\"ttmCnt9\",\"type\":\"uint64\"},{\"name\":\"ttmCnt10\",\"type\":\"uint64\"},{\"name\":\"ttWCnt3\",\"type\":\"uint64\"},{\"name\":\"ttwCnt4\",\"type\":\"uint64\"},{\"name\":\"lastLottery\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setTTWTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTMTokenId4\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_erc20\",\"type\":\"address\"},{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTWTokenId3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTMTokenId4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setTalentCardAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTMTokenId9\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTMTokenId9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lotteryHistory\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrFinance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTMTokenId10\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTWTokenId3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameWalletAddr\",\"type\":\"address\"}],\"name\":\"lotteryByETH5\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFinance\",\"type\":\"address\"}],\"name\":\"setFinance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTMTokenId5\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextLotteryTTMTokenId10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint64\"}],\"name\":\"setNextLotteryTTWTokenId4\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newService\",\"type\":\"address\"}],\"name\":\"setService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrService\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setTTCTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setTTMTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameWalletAddr\",\"type\":\"address\"}],\"name\":\"lotteryByETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"buyTo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mgrId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nextTokenId\",\"type\":\"uint256\"}],\"name\":\"ManagerSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"buyTo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wonderId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nextTokenId\",\"type\":\"uint256\"}],\"name\":\"WonderSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"buyTo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lotteryCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lotteryRet\",\"type\":\"uint256\"}],\"name\":\"LotteryResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"preAdmin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminTransferred\",\"type\":\"event\"}]","ContractName":"TTLottery","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://75b8b7c847f4dced4b5eb3472bdb6ec89c69f11e59a7daee0ba36fa6d8556a53"}]}