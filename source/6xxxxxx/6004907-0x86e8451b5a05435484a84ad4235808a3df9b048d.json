{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * @title Certificate Library\r\n *  ░V░e░r░i░f░i░e░d░ ░O░n░ ░C░h░a░i░n░\r\n * Visit https://verifiedonchain.com/\r\n */\r\npragma solidity 0.4.24;\r\n\r\nlibrary CertificateLibrary {\r\n    struct Document {\r\n        bytes ipfsHash;\r\n        bytes32 transcriptHash;\r\n        bytes32 contentHash;\r\n    }\r\n    \r\n    /**\r\n     * @notice Add Certification to a student\r\n     * @param _contentHash - Hash of the document\r\n     * @param _ipfsHash - IPFS Hash of the document\r\n     * @param _transcriptHash - Transcript Hash of the document\r\n     **/\r\n    function addCertification(Document storage self, bytes32 _contentHash, bytes _ipfsHash, bytes32 _transcriptHash) public {\r\n        self.ipfsHash = _ipfsHash;\r\n        self.contentHash= _contentHash;\r\n        self.transcriptHash = _transcriptHash;\r\n    }\r\n    \r\n    /**\r\n     * @notice Validate Certification to a student\r\n     * @param _ipfsHash - IPFS Hash of the document\r\n     * @param _contentHash - Content Hash of the document\r\n     * @param _transcriptHash - Transcript Hash of the document\r\n     * @return Returns true if validation is successful\r\n     **/\r\n    function validate(Document storage self, bytes _ipfsHash, bytes32 _contentHash, bytes32 _transcriptHash) public view returns(bool) {\r\n        bytes storage ipfsHash = self.ipfsHash;\r\n        bytes32 contentHash = self.contentHash;\r\n        bytes32 transcriptHash = self.transcriptHash;\r\n        return contentHash == _contentHash && keccak256(ipfsHash) == keccak256(_ipfsHash) && transcriptHash == _transcriptHash;\r\n    }\r\n    \r\n    /**\r\n     * @notice Validate IPFS Hash alone of a student\r\n     * @param _ipfsHash - IPFS Hash of the document\r\n     * @return Returns true if validation is successful\r\n     **/\r\n    function validateIpfsDoc(Document storage self, bytes _ipfsHash) public view returns(bool) {\r\n        bytes storage ipfsHash = self.ipfsHash;\r\n        return keccak256(ipfsHash) == keccak256(_ipfsHash);\r\n    }\r\n    \r\n    /**\r\n     * @notice Validate Content Hash alone of a student\r\n     * @param _contentHash - Content Hash of the document\r\n     * @return Returns true if validation is successful\r\n     **/\r\n    function validateContentHash(Document storage self, bytes32 _contentHash) public view returns(bool) {\r\n        bytes32 contentHash = self.contentHash;\r\n        return contentHash == _contentHash;\r\n    }\r\n    \r\n    /**\r\n     * @notice Validate Content Hash alone of a student\r\n     * @param _transcriptHash - Transcript Hash of the document\r\n     * @return Returns true if validation is successful\r\n     **/\r\n    function validateTranscriptHash(Document storage self, bytes32 _transcriptHash) public view returns(bool) {\r\n        bytes32 transcriptHash = self.transcriptHash;\r\n        return transcriptHash == _transcriptHash;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"CertificateLibrary.Document storage\"},{\"name\":\"_transcriptHash\",\"type\":\"bytes32\"}],\"name\":\"validateTranscriptHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"CertificateLibrary.Document storage\"},{\"name\":\"_contentHash\",\"type\":\"bytes32\"}],\"name\":\"validateContentHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"CertificateLibrary.Document storage\"},{\"name\":\"_ipfsHash\",\"type\":\"bytes\"},{\"name\":\"_contentHash\",\"type\":\"bytes32\"},{\"name\":\"_transcriptHash\",\"type\":\"bytes32\"}],\"name\":\"validate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"CertificateLibrary.Document storage\"},{\"name\":\"_contentHash\",\"type\":\"bytes32\"},{\"name\":\"_ipfsHash\",\"type\":\"bytes\"},{\"name\":\"_transcriptHash\",\"type\":\"bytes32\"}],\"name\":\"addCertification\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"CertificateLibrary.Document storage\"},{\"name\":\"_ipfsHash\",\"type\":\"bytes\"}],\"name\":\"validateIpfsDoc\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CertificateLibrary","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://04d91109bb0289981e5a408a89a2313ed92bbf5639c9a548d77790216a0c8fc1"}]}