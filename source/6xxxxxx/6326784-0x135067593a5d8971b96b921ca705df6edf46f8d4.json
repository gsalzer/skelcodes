{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract CandyContract is owned{\r\n\r\n    token public tokenReward;\r\n    uint public totalCandyNo; \r\n\r\n    address public collectorAddress;\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constructor function\r\n     */\r\n    constructor(\r\n        address addressOfTokenUsedAsReward,\r\n        address collector\r\n    ) public {\r\n        totalCandyNo = 1e9;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n        collectorAddress = collector;\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        require(totalCandyNo > 0);\r\n        uint amount = getCurrentCandyAmount();\r\n        require(amount > 0); \r\n        require(balanceOf[msg.sender] == 0);\r\n\r\n        totalCandyNo -= amount;\r\n        balanceOf[msg.sender] = amount;\r\n\r\n        tokenReward.transfer(msg.sender, amount * 1e18);\r\n        emit FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    function getCurrentCandyAmount() private view returns (uint amount){\r\n\r\n        if (totalCandyNo >= 7.5e5){\r\n            return 200;\r\n        }else if (totalCandyNo >= 5e5){\r\n            return 150;\r\n        }else if (totalCandyNo >= 2.5e5){\r\n            return 100;\r\n        }else if (totalCandyNo >= 50){\r\n            return 50;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function collectBack() onlyOwner public{\r\n\r\n        require(totalCandyNo > 0);\r\n\r\n        require(collectorAddress != 0x0);\r\n\r\n        tokenReward.transfer(collectorAddress, totalCandyNo * 1e18);\r\n        totalCandyNo = 0;\r\n\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"collectBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCandyNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectorAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"collector\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"CandyContract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001e05efba2fd19cc48a123a9e38afa6a9ffc18f410000000000000000000000008948e4b00deb0a5adb909f4dc5789d20d0851d71","Library":"","SwarmSource":"bzzr://b68dd0ed143a62560bc1019b4ad4306a56d7f54fe8831fcfc300ba8ee727f51b"}]}