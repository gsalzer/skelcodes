{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract CreateBlogger {\r\n    address [] public deployedBlogs;\r\n\r\n    function createBlogger() public returns(address) {\r\n        address newBlogger = new Blogger(msg.sender);\r\n        deployedBlogs.push(newBlogger);\r\n        return newBlogger;\r\n    }\r\n\r\n    function getDeployedBlogs() public view returns(address[]) {\r\n        return deployedBlogs;\r\n    }\r\n}\r\n\r\n\r\ncontract Blogger {\r\n\r\n    address public author;\r\n    uint public donationCount;\r\n    uint public withdrawalDate;\r\n\r\n\r\n    struct Donate {\r\n        address funder;\r\n        uint value;\r\n    }\r\n    mapping(address => bool) public didGive;\r\n    mapping(address => Donate) public donationRecords;\r\n\r\n\r\n    modifier restricted() {\r\n        require (msg.sender == author);\r\n        _;\r\n    }\r\n\r\n    constructor (address sender) public {\r\n        author = sender;\r\n        donationCount = 0;\r\n        withdrawalDate = now + 30 days;\r\n    }\r\n\r\n    function donate() public payable {\r\n        donationCount ++;\r\n        didGive[msg.sender] = true;\r\n\r\n        Donate memory newDonation = Donate({\r\n            funder: msg.sender,\r\n            value: msg.value\r\n        });\r\n        donationRecords[msg.sender] = newDonation;\r\n\r\n    }\r\n\r\n    function requestRefund() public {\r\n        require(didGive[msg.sender]);\r\n        Donate storage record = donationRecords[msg.sender];\r\n\r\n        require(record.funder == msg.sender);\r\n        record.funder.transfer(record.value);\r\n\r\n        didGive[msg.sender] = false;\r\n        Donate memory clearRecords = Donate({\r\n            funder: 0,\r\n            value: 0\r\n        });\r\n        donationRecords[msg.sender] = clearRecords;\r\n    }\r\n\r\n    function withdraw() public restricted {\r\n        require(withdrawalDate < now);\r\n\r\n        author.transfer(address(this).balance);\r\n        withdrawalDate = now + 30 days;\r\n\r\n    }\r\n\r\n    function getContractValue() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getSummary() public view returns (address, uint, uint, uint) {\r\n        return (\r\n            author,\r\n            donationCount,\r\n            withdrawalDate,\r\n            address(this).balance\r\n            );\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"createBlogger\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedBlogs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDeployedBlogs\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CreateBlogger","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fa9ef6eaa8732cce957a0fa87fa4e51091c75360b4d2c69c116214f6a0b783f1"}]}