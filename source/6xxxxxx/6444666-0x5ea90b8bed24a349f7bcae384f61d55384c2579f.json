{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ninterface TokenOLD {\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n}\r\n\r\ninterface TokenNEW {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract ClaimSPTI{\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    TokenNEW public newTokenReward;\r\n    TokenOLD  public oldToken;\r\n    address public creator;\r\n    address public owner = 0x1Ab98C0833e034b1E81F4F0282914C615d795299;\r\n    uint256 public startDate;\r\n    uint256 public endDate;\r\n\r\n\r\n    modifier isCreator() {\r\n        require(msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    constructor() public {\r\n        startDate = 1538554875;\r\n        endDate = startDate + 30 days;\r\n        creator = msg.sender;\r\n        newTokenReward = TokenNEW(0xc91d83955486e5261528d1acc1956529d2fe282b); //Instantiate the new reward\r\n        oldToken = TokenOLD(0xa673802792379714201ebc5f586c3a44b0248681); //Instantiate old token to be replaced\r\n    }\r\n    \r\n    function() public payable {\r\n        \r\n        require(now > startDate);\r\n        require(now < endDate);\r\n        require(msg.value == 0); // Only 0 ether accepted, This is not an IC Oh!\r\n        uint oldSptiUserBal;\r\n        oldSptiUserBal = getBalance(msg.sender); //Get Old SPTI balance\r\n        require(oldSptiUserBal > 0); // Make sure claimant actually possesses Old SPTI\r\n        require(oldToken.transferFrom(msg.sender, 0xceC74106a23329745b07f6eC5e1E39803b3fF31F, oldSptiUserBal));\r\n        \r\n        //If all of the above happens accordingly, go ahead and release new token\r\n        //to old token holders\r\n        uint256 amount = oldSptiUserBal.div(8);\r\n        newTokenReward.transfer(msg.sender, amount);\r\n        emit FundTransfer(msg.sender, amount, true);\r\n\r\n    }\r\n    \r\n    function getBalance(address userAddress) public view returns (uint256){\r\n        uint bal = oldToken.balanceOf(userAddress);\r\n        return bal;\r\n    }\r\n    \r\n    function transferToken(address to, uint256 value) isCreator public {\r\n        newTokenReward.transfer(to, value);      \r\n    }\r\n\r\n    function kill() isCreator public {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newTokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oldToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"ClaimSPTI","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://09788b967e843cc385d54749d5ebdda168b6280c0858712ddae79b474d923eb0"}]}