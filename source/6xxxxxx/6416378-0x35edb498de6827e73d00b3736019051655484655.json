{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param _newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n/*\r\n  BASIC ERC20 Sale Contract\r\n  @author Hunter Long\r\n  @repo https://github.com/hunterlong/ethereum-ico-contract\r\n  (c) SCU GmbH 2018. The MIT Licence.\r\n*/\r\ncontract SCUTokenCrowdsale is Ownable {\r\n\r\n    uint256 public totalSold; //eurocents\r\n\r\n    FiatContract public fiat;\r\n    ERC20 public Token;\r\n    address public ETHWallet;\r\n    Whitelist public white;\r\n\r\n    uint256 public tokenSold;\r\n    uint256 public tokenPrice;\r\n\r\n    uint256 public deadline;\r\n    uint256 public start;\r\n\r\n    bool public crowdsaleClosed;\r\n\r\n    event Contribution(address from, uint256 amount);\r\n\r\n    constructor() public {\r\n        ETHWallet = 0x78D97495f7CA56aC3956E847BB75F825834575A4;\r\n        Token = ERC20(0xBD82A3C93B825c1F93202F9Dd0a120793E029BAD);\r\n        crowdsaleClosed = false;\r\n        white = Whitelist(0xc0b11003708F9d8896c7676fD129188041B7F60B);\r\n        tokenSold = 0; // per contract\r\n        tokenPrice = 20; // eurocents\r\n        fiat = FiatContract(0x8055d0504666e2B6942BeB8D6014c964658Ca591);\r\n        //https://ethereum.stackexchange.com/questions/34110/compare-dates-in-solidity\r\n        start = now;\r\n        deadline = now + 80 * 1 days;\r\n    }\r\n\r\n    function () public payable {\r\n        require(msg.value>0);\r\n        require(white.isWhitelisted(msg.sender) == true);\r\n        require(!crowdsaleClosed);\r\n        require(now <= deadline && now >= start);\r\n        //https://ethereum.stackexchange.com/questions/9256/float-not-allowed-in-solidity-vs-decimal-places-asked-for-token-contract\r\n        //fee falls away\r\n\r\n        uint256 amount = (msg.value / getTokenPrice()) * 1 ether;\r\n        totalSold += (amount / tokenPrice) * 100;\r\n\r\n        //afterwards calculate  pre sale bonusprogramm\r\n        if(tokenSold < 6000000)\r\n        {\r\n        amount = amount + ((amount * 25) / 100);\r\n        }\r\n        else if(tokenSold < 12000000)\r\n        {\r\n        amount = amount + ((amount * 15) / 100);\r\n        }\r\n        else\r\n        {\r\n        amount = amount + ((amount * 10) / 100);\r\n        }\r\n\r\n        ETHWallet.transfer(msg.value);\r\n        Token.transferFrom(owner, msg.sender, amount);\r\n        emit Contribution(msg.sender, amount);\r\n    }\r\n\r\n    function getTokenPrice() internal view returns (uint256) {\r\n        return getEtherInEuroCents() * tokenPrice / 100;\r\n    }\r\n\r\n    function getEtherInEuroCents() internal view returns (uint256) {\r\n        return fiat.EUR(0) * 100;\r\n    }\r\n\r\n    function closeCrowdsale() public onlyOwner returns (bool) {\r\n        crowdsaleClosed = true;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Whitelist {\r\n    function isWhitelisted(address _account) public constant returns (bool);\r\n\r\n}\r\n\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transfer(address to, uint value) public returns (bool ok);\r\n    function transferFrom(address from, address to, uint value) public returns (bool ok);\r\n    function approve(address spender, uint value) public returns (bool ok);\r\n    function mint(address to, uint256 value) public returns (uint256);\r\n}\r\n\r\ncontract FiatContract {\r\n    function ETH(uint _id) public view returns (uint256);\r\n    function USD(uint _id) public view returns (uint256);\r\n    function EUR(uint _id) public view returns (uint256);\r\n    function GBP(uint _id) public view returns (uint256);\r\n    function updatedAt(uint _id) public view returns (uint);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"white\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fiat\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SCUTokenCrowdsale","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f97eabb0cdc64e8e20ee4cf842183ae87fdbca737fc531fcdc3aa6c37d74e0ba"}]}