{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/GodMode.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title God Mode\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev This contract provides a basic interface for God\r\n///  in a contract as well as the ability for God to pause\r\n///  the contract\r\ncontract GodMode {\r\n    /// @dev Is the contract paused?\r\n    bool public isPaused;\r\n\r\n    /// @dev God's address\r\n    address public god;\r\n\r\n    /// @dev Only God can run this function\r\n    modifier onlyGod()\r\n    {\r\n        require(god == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev This function can only be run while the contract\r\n    ///  is not paused\r\n    modifier notPaused()\r\n    {\r\n        require(!isPaused);\r\n        _;\r\n    }\r\n\r\n    /// @dev This event is fired when the contract is paused\r\n    event GodPaused();\r\n\r\n    /// @dev This event is fired when the contract is unpaused\r\n    event GodUnpaused();\r\n\r\n    constructor() public\r\n    {\r\n        // Make the creator of the contract God\r\n        god = msg.sender;\r\n    }\r\n\r\n    /// @dev God can change the address of God\r\n    /// @param _newGod The new address for God\r\n    function godChangeGod(address _newGod) public onlyGod\r\n    {\r\n        god = _newGod;\r\n    }\r\n\r\n    /// @dev God can pause the game\r\n    function godPause() public onlyGod\r\n    {\r\n        isPaused = true;\r\n\r\n        emit GodPaused();\r\n    }\r\n\r\n    /// @dev God can unpause the game\r\n    function godUnpause() public onlyGod\r\n    {\r\n        isPaused = false;\r\n\r\n        emit GodUnpaused();\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthAbstractInterface.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title King of Eth Abstract Interface\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Abstract interface contract for titles and taxes\r\ncontract KingOfEthAbstractInterface {\r\n    /// @dev The address of the current King\r\n    address public king;\r\n\r\n    /// @dev The address of the current Wayfarer\r\n    address public wayfarer;\r\n\r\n    /// @dev Anyone can pay taxes\r\n    function payTaxes() public payable;\r\n}\r\n\r\n// File: contracts/KingOfEthBlindAuctionsReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/// @title King of Eth: Blind Auctions Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev This contract provides a reference to the blind auctions contract\r\ncontract KingOfEthBlindAuctionsReferencer is GodMode {\r\n    /// @dev The address of the blind auctions contract\r\n    address public blindAuctionsContract;\r\n\r\n    /// @dev Only the blind auctions contract can run this\r\n    modifier onlyBlindAuctionsContract()\r\n    {\r\n        require(blindAuctionsContract == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev God can set a new blind auctions contract\r\n    /// @param _blindAuctionsContract the address of the blind auctions\r\n    ///  contract\r\n    function godSetBlindAuctionsContract(address _blindAuctionsContract)\r\n        public\r\n        onlyGod\r\n    {\r\n        blindAuctionsContract = _blindAuctionsContract;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthOpenAuctionsReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/// @title King of Eth: Open Auctions Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev This contract provides a reference to the open auctions contract\r\ncontract KingOfEthOpenAuctionsReferencer is GodMode {\r\n    /// @dev The address of the auctions contract\r\n    address public openAuctionsContract;\r\n\r\n    /// @dev Only the open auctions contract can run this\r\n    modifier onlyOpenAuctionsContract()\r\n    {\r\n        require(openAuctionsContract == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev God can set a new auctions contract\r\n    function godSetOpenAuctionsContract(address _openAuctionsContract)\r\n        public\r\n        onlyGod\r\n    {\r\n        openAuctionsContract = _openAuctionsContract;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthAuctionsReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\n/// @title King of Eth: Auctions Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev This contract provides a reference to the auctions contracts\r\ncontract KingOfEthAuctionsReferencer is\r\n      KingOfEthBlindAuctionsReferencer\r\n    , KingOfEthOpenAuctionsReferencer\r\n{\r\n    /// @dev Only an auctions contract can run this\r\n    modifier onlyAuctionsContract()\r\n    {\r\n        require(blindAuctionsContract == msg.sender\r\n             || openAuctionsContract == msg.sender);\r\n        _;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/// @title King of Eth Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Functionality to allow contracts to reference the king contract\r\ncontract KingOfEthReferencer is GodMode {\r\n    /// @dev The address of the king contract\r\n    address public kingOfEthContract;\r\n\r\n    /// @dev Only the king contract can run this\r\n    modifier onlyKingOfEthContract()\r\n    {\r\n        require(kingOfEthContract == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev God can change the king contract\r\n    /// @param _kingOfEthContract The new address\r\n    function godSetKingOfEthContract(address _kingOfEthContract)\r\n        public\r\n        onlyGod\r\n    {\r\n        kingOfEthContract = _kingOfEthContract;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthBoard.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\n\r\n\r\n/// @title King of Eth: Board\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Contract for board\r\ncontract KingOfEthBoard is\r\n      GodMode\r\n    , KingOfEthAuctionsReferencer\r\n    , KingOfEthReferencer\r\n{\r\n    /// @dev x coordinate of the top left corner of the boundary\r\n    uint public boundX1 = 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef;\r\n\r\n    /// @dev y coordinate of the top left corner of the boundary\r\n    uint public boundY1 = 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef;\r\n\r\n    /// @dev x coordinate of the bottom right corner of the boundary\r\n    uint public boundX2 = 0x800000000000000000000000000000000000000000000000000000000000000f;\r\n\r\n    /// @dev y coordinate of the bottom right corner of the boundary\r\n    uint public boundY2 = 0x800000000000000000000000000000000000000000000000000000000000000f;\r\n\r\n    /// @dev Number used to divide the total number of house locations\r\n    /// after any expansion to yield the number of auctions that  will be\r\n    /// available to start for the expansion's duration\r\n    uint public constant auctionsAvailableDivisor = 10;\r\n\r\n    /// @dev Amount of time the King must wait between increasing the board\r\n    uint public constant kingTimeBetweenIncrease = 2 weeks;\r\n\r\n    /// @dev Amount of time the Wayfarer must wait between increasing the board\r\n    uint public constant wayfarerTimeBetweenIncrease = 3 weeks;\r\n\r\n    /// @dev Amount of time that anyone but the King or Wayfarer must wait\r\n    ///  before increasing the board\r\n    uint public constant plebTimeBetweenIncrease = 4 weeks;\r\n\r\n    /// @dev The last time the board was increased in size\r\n    uint public lastIncreaseTime;\r\n\r\n    /// @dev The direction of the next increase\r\n    uint8 public nextIncreaseDirection;\r\n\r\n    /// @dev The number of auctions that players may choose to start\r\n    ///  for this expansion\r\n    uint public auctionsRemaining;\r\n\r\n    constructor() public\r\n    {\r\n        // Game is paused as God must start it\r\n        isPaused = true;\r\n\r\n        // Set the auctions remaining\r\n        setAuctionsAvailableForBounds();\r\n    }\r\n\r\n    /// @dev Fired when the board is increased in size\r\n    event BoardSizeIncreased(\r\n          address initiator\r\n        , uint newBoundX1\r\n        , uint newBoundY1\r\n        , uint newBoundX2\r\n        , uint newBoundY2\r\n        , uint lastIncreaseTime\r\n        , uint nextIncreaseDirection\r\n        , uint auctionsRemaining\r\n    );\r\n\r\n    /// @dev Only the King can run this\r\n    modifier onlyKing()\r\n    {\r\n        require(KingOfEthAbstractInterface(kingOfEthContract).king() == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev Only the Wayfarer can run this\r\n    modifier onlyWayfarer()\r\n    {\r\n        require(KingOfEthAbstractInterface(kingOfEthContract).wayfarer() == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev Set the total auctions available\r\n    function setAuctionsAvailableForBounds() private\r\n    {\r\n        uint boundDiffX = boundX2 - boundX1;\r\n        uint boundDiffY = boundY2 - boundY1;\r\n\r\n        auctionsRemaining = boundDiffX * boundDiffY / 2 / auctionsAvailableDivisor;\r\n    }\r\n\r\n    /// @dev Increase the board's size making sure to keep steady at\r\n    ///  the maximum outer bounds\r\n    function increaseBoard() private\r\n    {\r\n        // The length of increase\r\n        uint _increaseLength;\r\n\r\n        // If this increase direction is right\r\n        if(0 == nextIncreaseDirection)\r\n        {\r\n            _increaseLength = boundX2 - boundX1;\r\n            uint _updatedX2 = boundX2 + _increaseLength;\r\n\r\n            // Stay within bounds\r\n            if(_updatedX2 <= boundX2 || _updatedX2 <= _increaseLength)\r\n            {\r\n                boundX2 = ~uint(0);\r\n            }\r\n            else\r\n            {\r\n                boundX2 = _updatedX2;\r\n            }\r\n        }\r\n        // If this increase direction is down\r\n        else if(1 == nextIncreaseDirection)\r\n        {\r\n            _increaseLength = boundY2 - boundY1;\r\n            uint _updatedY2 = boundY2 + _increaseLength;\r\n\r\n            // Stay within bounds\r\n            if(_updatedY2 <= boundY2 || _updatedY2 <= _increaseLength)\r\n            {\r\n                boundY2 = ~uint(0);\r\n            }\r\n            else\r\n            {\r\n                boundY2 = _updatedY2;\r\n            }\r\n        }\r\n        // If this increase direction is left\r\n        else if(2 == nextIncreaseDirection)\r\n        {\r\n            _increaseLength = boundX2 - boundX1;\r\n\r\n            // Stay within bounds\r\n            if(boundX1 <= _increaseLength)\r\n            {\r\n                boundX1 = 0;\r\n            }\r\n            else\r\n            {\r\n                boundX1 -= _increaseLength;\r\n            }\r\n        }\r\n        // If this increase direction is up\r\n        else if(3 == nextIncreaseDirection)\r\n        {\r\n            _increaseLength = boundY2 - boundY1;\r\n\r\n            // Stay within bounds\r\n            if(boundY1 <= _increaseLength)\r\n            {\r\n                boundY1 = 0;\r\n            }\r\n            else\r\n            {\r\n                boundY1 -= _increaseLength;\r\n            }\r\n        }\r\n\r\n        // The last increase time is now\r\n        lastIncreaseTime = now;\r\n\r\n        // Set the next increase direction\r\n        nextIncreaseDirection = (nextIncreaseDirection + 1) % 4;\r\n\r\n        // Reset the auctions available\r\n        setAuctionsAvailableForBounds();\r\n\r\n        emit BoardSizeIncreased(\r\n              msg.sender\r\n            , boundX1\r\n            , boundY1\r\n            , boundX2\r\n            , boundY2\r\n            , now\r\n            , nextIncreaseDirection\r\n            , auctionsRemaining\r\n        );\r\n    }\r\n\r\n    /// @dev God can start the game\r\n    function godStartGame() public onlyGod\r\n    {\r\n        // Reset increase times\r\n        lastIncreaseTime = now;\r\n\r\n        // Unpause the game\r\n        godUnpause();\r\n    }\r\n\r\n    /// @dev The auctions contracts can decrement the number\r\n    ///  of auctions that are available to be started\r\n    function auctionsDecrementAuctionsRemaining()\r\n        public\r\n        onlyAuctionsContract\r\n    {\r\n        auctionsRemaining -= 1;\r\n    }\r\n\r\n    /// @dev The auctions contracts can increment the number\r\n    ///  of auctions that are available to be started when\r\n    ///  an auction ends wihout a winner\r\n    function auctionsIncrementAuctionsRemaining()\r\n        public\r\n        onlyAuctionsContract\r\n    {\r\n        auctionsRemaining += 1;\r\n    }\r\n\r\n    /// @dev The King can increase the board much faster than the plebs\r\n    function kingIncreaseBoard()\r\n        public\r\n        onlyKing\r\n    {\r\n        // Require enough time has passed since the last increase\r\n        require(lastIncreaseTime + kingTimeBetweenIncrease < now);\r\n\r\n        increaseBoard();\r\n    }\r\n\r\n    /// @dev The Wayfarer can increase the board faster than the plebs\r\n    function wayfarerIncreaseBoard()\r\n        public\r\n        onlyWayfarer\r\n    {\r\n        // Require enough time has passed since the last increase\r\n        require(lastIncreaseTime + wayfarerTimeBetweenIncrease < now);\r\n\r\n        increaseBoard();\r\n    }\r\n\r\n    /// @dev Any old pleb can increase the board\r\n    function plebIncreaseBoard() public\r\n    {\r\n        // Require enough time has passed since the last increase\r\n        require(lastIncreaseTime + plebTimeBetweenIncrease < now);\r\n\r\n        increaseBoard();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"godPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"plebTimeBetweenIncrease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIncreaseDirection\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kingIncreaseBoard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"plebIncreaseBoard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wayfarerTimeBetweenIncrease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastIncreaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kingTimeBetweenIncrease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openAuctionsContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"auctionsDecrementAuctionsRemaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newGod\",\"type\":\"address\"}],\"name\":\"godChangeGod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"godStartGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"wayfarerIncreaseBoard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kingOfEthContract\",\"type\":\"address\"}],\"name\":\"godSetKingOfEthContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blindAuctionsContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionsRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"godUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boundY2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"god\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blindAuctionsContract\",\"type\":\"address\"}],\"name\":\"godSetBlindAuctionsContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionsAvailableDivisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_openAuctionsContract\",\"type\":\"address\"}],\"name\":\"godSetOpenAuctionsContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kingOfEthContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"auctionsIncrementAuctionsRemaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boundX2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boundY1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boundX1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newBoundX1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newBoundY1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newBoundX2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newBoundY2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lastIncreaseTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nextIncreaseDirection\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"auctionsRemaining\",\"type\":\"uint256\"}],\"name\":\"BoardSizeIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GodPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GodUnpaused\",\"type\":\"event\"}]","ContractName":"KingOfEthBoard","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fd8687367d2464aad4bb586f743e9c4305b5e6155ebde991b33a36e44aca8343"}]}