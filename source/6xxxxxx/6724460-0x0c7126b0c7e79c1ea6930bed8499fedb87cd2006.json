{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract CoooinsCoinAd {\r\n\r\n\tusing SafeMath for uint256;\r\n\r\n\tstring public adMessage;\r\n\tstring public adUrl;\r\n\tuint256 public purchaseTimestamp;\r\n\tuint256 public purchaseSeconds;\r\n\tuint256 public adPriceWeek;\r\n\tuint256 public adPriceMonth;\r\n\taddress public contractOwner;\r\n\r\n\tevent newAd(address indexed buyer, uint256 amount, string adMessage, string adUrl, uint256 purchaseSeconds, uint256 purchaseTimestamp);\r\n\r\n\tmodifier onlyContractOwner {\r\n\t\trequire(msg.sender == contractOwner);\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor() public {\r\n\t\tadPriceWeek = 50000000000000000;\r\n\t\tadPriceMonth = 150000000000000000;\r\n\t\tcontractOwner = 0x2E26a4ac59094DA46a0D8d65D90A7F7B51E5E69A;\r\n\t}\r\n\r\n\tfunction withdraw() public onlyContractOwner {\r\n\t\tcontractOwner.transfer(address(this).balance);\r\n\t}\r\n\r\n\tfunction setAdPriceWeek(uint256 amount) public onlyContractOwner {\r\n\t\tadPriceWeek = amount;\r\n\t}\r\n\r\n\tfunction setAdPriceMonth(uint256 amount) public onlyContractOwner {\r\n\t\tadPriceMonth = amount;\r\n\t}\r\n\r\n\tfunction updateAd(string message, string url) public payable {\r\n\t\t// set minimum amount and make sure ad hasnt expired\r\n\t\trequire(msg.value >= adPriceWeek);\r\n\t\trequire(block.timestamp > purchaseTimestamp.add(purchaseSeconds));\r\n\r\n\t\t// set ad time limit in seconds\r\n\t\tif (msg.value >= adPriceMonth) {\r\n\t\t\tpurchaseSeconds = 2592000; // 1 month\r\n\t\t} else {\r\n\t\t\tpurchaseSeconds = 604800; // 1 week\r\n\t\t}\r\n\r\n\t\tadMessage = message;\r\n\t\tadUrl = url;\r\n\r\n\t\tpurchaseTimestamp = block.timestamp;\r\n\r\n\t\temit newAd(msg.sender, msg.value, adMessage, adUrl, purchaseSeconds, purchaseTimestamp);\r\n\t}\r\n\r\n\tfunction getPurchaseTimestampEnds() public view returns (uint _getPurchaseTimestampAdEnds) {\r\n\t\treturn purchaseTimestamp.add(purchaseSeconds);\r\n\t}\r\n\r\n\tfunction getBalance() public view returns(uint256){\r\n\t\treturn address(this).balance;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"updateAd\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"purchaseTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adPriceMonth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAdPriceWeek\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPurchaseTimestampEnds\",\"outputs\":[{\"name\":\"_getPurchaseTimestampAdEnds\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAdPriceMonth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adUrl\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adPriceWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"purchaseSeconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"adMessage\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"adUrl\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"purchaseSeconds\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"purchaseTimestamp\",\"type\":\"uint256\"}],\"name\":\"newAd\",\"type\":\"event\"}]","ContractName":"CoooinsCoinAd","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d1ed7c12d4b716bf25c726a7d210b9318f4879b7371b3c0a948de2005a5834a4"}]}