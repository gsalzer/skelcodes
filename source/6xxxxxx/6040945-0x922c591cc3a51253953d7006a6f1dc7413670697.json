{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract Token {\r\n    function balanceOf(address guy) public view returns (uint);\r\n    function transfer(address dst, uint wad) public returns (bool);\r\n}\r\n\r\ncontract RecuringInternetPayer{\r\n    address zac  = 0x1F4E7Db8514Ec4E99467a8d2ee3a63094a904e7A;\r\n    address josh = 0x650a7762FdB32BF64849345209DeaA8F9574cBC7;\r\n    Token dai = Token(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359); //DAI token address\r\n    uint constant perSecondDaiParticlePayout = 28935185185185 ; // $75 x 10^18 / (60*60*24*30)\r\n    uint amountPaid;\r\n    uint createdAt;\r\n    \r\n    constructor() public { createdAt = now; }\r\n\r\n    modifier onlyZacOrJosh(){ require(msg.sender == zac || msg.sender == josh); _; }\r\n    \r\n    function payJosh() public{\r\n        uint totalPayout = perSecondDaiParticlePayout * (now - createdAt);\r\n        dai.transfer(josh, totalPayout - amountPaid);\r\n        amountPaid = totalPayout;\r\n    }\r\n    function withdraw() public onlyZacOrJosh{\r\n        payJosh();\r\n        dai.transfer(zac, dai.balanceOf(this));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payJosh\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"RecuringInternetPayer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cf157252141b410e78c5c6003914da914f1e05b2dcbd7a56e740ca6d80c6ccf3"}]}