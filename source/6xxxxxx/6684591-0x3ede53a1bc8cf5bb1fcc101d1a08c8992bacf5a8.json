{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract T1WinTokenConfig {\r\n    /*=====================================\r\n    =            EVENT               =\r\n    =====================================*/\r\n    event addConfigUser(\r\n    address indexed userAddress,\r\n    uint ethereumReinvested\r\n    );\r\n     event addToken(\r\n    address indexed tokenAddress,\r\n    string tokenName\r\n    );\r\n     event removeToken(\r\n    address indexed tokenAddress,\r\n    string tokenName\r\n    );\r\n    /*=====================================\r\n    =            CONSTANTS               =\r\n    =====================================*/\r\n    T1WinAdmin constant private t1WinAdmin = T1WinAdmin(0xcc258f29443d849efd5dccf233bfe29533b042bc);\r\n\r\n    uint constant internal  configEthSpent       = 1   ether;\r\n\r\n    \r\n    address[] configUserList; \r\n\r\n    T1Wdatasets.TokenConfiguration[] public tokenListArray;\r\n    //token address -> token object map \r\n    mapping (address => T1Wdatasets.TokenConfiguration) public tokenListMap;\r\n    //address -> add config user map  \r\n    mapping (address => T1Wdatasets.AddConfigurationUser) public configurationUserMap;\r\n    mapping (address => uint256) public configurationUserCheck;\r\n   address private adminAddress;\r\n    modifier onlyAuthorizedAdmin {\r\n        adminAddress=t1WinAdmin.getAdmin();\r\n        require(adminAddress == msg.sender);\r\n        _;\r\n    }\r\n    modifier isWithinETHLimits(uint256 _eth) {\r\n        // add a configuration need 1 ETH\r\n        require(_eth == 1000000000000000000);\r\n        _;    \r\n    }\r\n    //get token array lenght\r\n    function getTokenArrayLength() \r\n        public\r\n        view\r\n        returns(uint) \r\n    {\r\n        return tokenListArray.length;\r\n    }    \r\n    //get token from array\r\n    function getToken(uint n)\r\n        public \r\n        view\r\n        returns (address, string,uint8,bool ) {\r\n        return (tokenListArray[n].tokenAddress, tokenListArray[n].tokenName,tokenListArray[n].tokenDecimals,tokenListArray[n].used);\r\n    }  \r\n    function getTokenByAddress(address a)\r\n        public \r\n        view\r\n        returns (address, string,uint8,bool ) {\r\n        T1Wdatasets.TokenConfiguration token = tokenListMap[a];\r\n        return (token.tokenAddress, token.tokenName,token.tokenDecimals,token.used);\r\n    } \r\n    function getTokenNameByAddress(address a)\r\n        public \r\n        view\r\n        returns (string ) {\r\n             T1Wdatasets.TokenConfiguration token = tokenListMap[a];\r\n             return(token.tokenName);\r\n        }\r\n      function getTokenDecimalsByAddress(address a)\r\n        public \r\n        view\r\n        returns (uint8 ) {\r\n             T1Wdatasets.TokenConfiguration token = tokenListMap[a];\r\n             return(token.tokenDecimals);\r\n        }   \r\n     //add new token by admin\r\n    function addNewTokenByAdmin(address _tokenAddress, string _tokenName,uint8 decimal)\r\n            onlyAuthorizedAdmin()\r\n            public\r\n        {\r\n            //check the token address already exist or not exit\r\n             require(!tokenListMap[_tokenAddress].used);\r\n             tokenListMap[_tokenAddress]= T1Wdatasets.TokenConfiguration(_tokenAddress, _tokenName,decimal,true);\r\n             tokenListArray.push(tokenListMap[_tokenAddress]);\r\n             emit addToken(_tokenAddress, _tokenName);\r\n        }\r\n     //remove token by admin    \r\n    function removeNewTokenByAdmin(address _tokenAddress)\r\n            onlyAuthorizedAdmin()\r\n            public\r\n        {\r\n            //remove from map\r\n            delete tokenListMap[_tokenAddress];\r\n            //remove from array \r\n            for (uint i = 0; i < tokenListArray.length; i++) {\r\n                if (tokenListArray[i].tokenAddress == _tokenAddress) {\r\n                    tokenListArray[i] = tokenListArray[tokenListArray.length - 1];\r\n                    tokenListArray.length -= 1;\r\n                    break;\r\n                }\r\n            }\r\n          \r\n        }\r\n    function addNewToken(address _tokenAddress, bytes32 _tokenName)\r\n            isWithinETHLimits(msg.value)\r\n            public\r\n            payable\r\n        {\r\n          uint256 checkUserStatu = configurationUserCheck[msg.sender];\r\n            //1 . chcke if the address already existin the config address array\r\n            \r\n            if(checkUserStatu == 0){\r\n                //this is new user, change the user statu to 1.\r\n                configurationUserCheck[msg.sender]=1;\r\n                // inital a  new configuration user\r\n                T1Wdatasets.AddConfigurationUser memory configurationUser ; \r\n                configurationUser.addr = msg.sender;\r\n                configurationUser.ethTotalAmount += msg.value;\r\n                configurationUserMap[msg.sender] = configurationUser;\r\n                emit addConfigUser(msg.sender , msg.value);\r\n               \r\n            }\r\n    \r\n            //2. add new Token\r\n            \r\n              \r\n        }\r\n\r\n}\r\n\r\n/*================================\r\n=            Interface            =\r\n================================*/\r\n\r\ninterface T1WinAdmin {\r\n    function getAdmin() external view returns(address);\r\n}\r\n/*================================\r\n=            DATASETS            =\r\n================================*/\r\nlibrary T1Wdatasets {\r\n\r\n    struct TokenConfiguration{\r\n        address tokenAddress; //round play token address\r\n        string tokenName;  //round play token name \r\n        uint8 tokenDecimals; //Token decimals\r\n        bool used;\r\n      \r\n    }\r\n    \r\n    \r\n    \r\n    /*\r\n     * What address can work with this configuration\r\n     */\r\n    struct AddConfigurationUser {\r\n        address addr;   // player address\r\n        uint256 ethTotalAmount; //eth total amount\r\n        bool used;\r\n    }\r\n  \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"configurationUserMap\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"ethTotalAmount\",\"type\":\"uint256\"},{\"name\":\"used\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenListMap\",\"outputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"name\":\"used\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getTokenNameByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenListArray\",\"outputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"name\":\"used\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"configurationUserCheck\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getTokenByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"removeNewTokenByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenArrayLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"decimal\",\"type\":\"uint8\"}],\"name\":\"addNewTokenByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getTokenDecimalsByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_tokenName\",\"type\":\"bytes32\"}],\"name\":\"addNewToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethereumReinvested\",\"type\":\"uint256\"}],\"name\":\"addConfigUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"addToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenName\",\"type\":\"string\"}],\"name\":\"removeToken\",\"type\":\"event\"}]","ContractName":"T1WinTokenConfig","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://00473da6e381ca4dd207c8922ed9a9cd29ebb0c769f7643a4e26ca46109c5528"}]}