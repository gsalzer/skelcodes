{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\n\r\nlibrary SafeMath {\r\n  function safeMul(uint256 a, uint256 b)  internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n}\r\n\r\ncontract InTestPro1{\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n    bool public movePermissionStat = false;\r\n    bool public isLockTransfer = false;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n  \tmapping (address => uint256) public freezeOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    mapping (address => bool)  public lockOf;\r\n\r\n    event AddSupply(address indexed from,uint256 _value);\r\n\r\n    /* This notifies clients about the amount burnt */\r\n    event BurnSupply(address indexed from, uint256 _value);\r\n\r\n    /* This notifies clients about the amount frozen */\r\n    event Freeze(address indexed from, uint256 _value);\r\n\r\n  \t/* This notifies clients about the amount unfrozen */\r\n    event Unfreeze(address indexed from, uint256 _value);\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 _value);\r\n\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    event MovePermission(address indexed form ,address indexed to);\r\n\r\n\r\n    constructor(uint256 initialSupply,  string tokenName, uint8 decimalUnits,  string tokenSymbol) public{\r\n      balanceOf[msg.sender] = initialSupply;\r\n      totalSupply = initialSupply;\r\n      name=tokenName;\r\n      symbol =tokenSymbol;\r\n      decimals = decimalUnits;\r\n      owner = msg.sender;\r\n    }\r\n\r\n    // function InTokenTest1130(uint256 initialSupply,\r\n    //                       string tokenName,\r\n    //                       uint8 decimalUnits,\r\n    //                       string tokenSymbol)  public {\r\n\r\n    //   balanceOf[msg.sender] = initialSupply;\r\n    //   totalSupply = initialSupply;\r\n    //   name=tokenName;\r\n    //   symbol =tokenSymbol;\r\n    //   decimals = decimalUnits;\r\n    //   owner = msg.sender;\r\n    // }\r\n\r\n    modifier onlyOwner{\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier canTransfer{\r\n        require(!isLockTransfer && !lockOf[msg.sender] );\r\n        _;\r\n    }\r\n\r\n    /* Change contract name */\r\n    function changeTokenName(string _tokenName) onlyOwner public returns (bool){\r\n        name = _tokenName;\r\n        return true;\r\n    }\r\n\r\n    /* Change contract symbol */\r\n    function changeSymbol(string tokenSymbol)  onlyOwner public returns (bool){\r\n         symbol = tokenSymbol;\r\n    }\r\n\r\n    /* Add supply symbol  */\r\n    function addSupply(uint256 _addSupply)  onlyOwner public returns (bool){\r\n        require(_addSupply>0);\r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender],_addSupply);\r\n        totalSupply = SafeMath.safeAdd(totalSupply,_addSupply);\r\n        emit AddSupply(msg.sender,_addSupply);\r\n        return true;\r\n    }\r\n\r\n    /* burn symbol */\r\n    function burnSupply(uint256 supply) onlyOwner public returns (bool){\r\n        require(supply>0);\r\n        balanceOf[owner] = SafeMath.safeSub(balanceOf[owner],supply);\r\n        totalSupply = SafeMath.safeSub(totalSupply,supply);\r\n        emit BurnSupply(msg.sender,supply);\r\n        return true;\r\n    }\r\n\r\n    /* setter MovePermissionStat */\r\n    function setMovePermissionStat(bool status) onlyOwner public {\r\n       movePermissionStat = status;\r\n    }\r\n\r\n    /* move  permissions */\r\n    function movePermission(address to) onlyOwner public returns (bool){\r\n       require(movePermissionStat);\r\n       balanceOf[to] = SafeMath.safeAdd(balanceOf[to],balanceOf[owner]);\r\n       balanceOf[owner] = 0;\r\n       owner = to;\r\n       emit MovePermission(msg.sender,to);\r\n       return true;\r\n    }\r\n\r\n    function freezeAll(address to)  public returns (bool) {\r\n       return  freeze(to,balanceOf[to]);\r\n    }\r\n\r\n    function freeze(address to,uint256 _value) onlyOwner public returns (bool) {\r\n        require(to != 0x0 && to != owner && _value > 0) ;\r\n        /* banlanceof */\r\n        balanceOf[to] = SafeMath.safeSub(balanceOf[to],_value);\r\n        freezeOf[to] = SafeMath.safeAdd(freezeOf[to],_value);\r\n        emit Freeze(to,_value);\r\n        return true;\r\n    }\r\n\r\n    /* unFreeze value  */\r\n    function unFreeze(address to,uint256 _value) onlyOwner public returns (bool) {\r\n       require(to != 0x0 && to != owner && _value > 0);\r\n       freezeOf[to] = SafeMath.safeSub(freezeOf[to],_value);\r\n       balanceOf[to] = SafeMath.safeAdd(balanceOf[to],_value);\r\n       emit Unfreeze(to,_value);\r\n       return true;\r\n    }\r\n\r\n    /* unFreeze all  */\r\n    function unFreezeAll(address to) public returns (bool) {\r\n        return unFreeze(to,freezeOf[to]);\r\n    }\r\n\r\n    function lockAccount(address to) onlyOwner public returns (bool){\r\n       lockOf[to] = true;\r\n       return true;\r\n    }\r\n\r\n    function unlockAccount(address to) onlyOwner public returns (bool){\r\n       lockOf[to] = false;\r\n       return true;\r\n    }\r\n\r\n    function lockTransfer() onlyOwner public returns (bool){\r\n       isLockTransfer = true;\r\n       return true;\r\n    }\r\n\r\n    function unlockTransfer() onlyOwner public returns (bool){\r\n       isLockTransfer = false;\r\n       return true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) canTransfer public {\r\n       require (_to != 0x0 && _value > 0 ) ;\r\n       require (balanceOf[msg.sender] >= _value) ;\r\n       balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n       balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);\r\n       emit Transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /* Allow another contract to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value)  public returns (bool) {\r\n        require ( _spender!=0x0 && _value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender,_spender,_value);\r\n        return true;\r\n    }\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value)  public returns (bool) {\r\n        require(_to != 0x0 && _value > 0);\r\n        require( !isLockTransfer && !lockOf[_from] && balanceOf[_from] >= _value && _value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);\r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function kill() onlyOwner  public {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addSupply\",\"type\":\"uint256\"}],\"name\":\"addSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"lockAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockOf\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setMovePermissionStat\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"unlockAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"movePermissionStat\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"changeSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"}],\"name\":\"changeTokenName\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"burnSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLockTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"movePermission\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"freezeAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"unFreezeAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"AddSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BurnSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"form\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"MovePermission\",\"type\":\"event\"}]","ContractName":"InTestPro1","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000a496e5465737450726f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006494e545031320000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d418fb5f44ad73f8ee245aea7e3eb925b5e23a9b2b58ebeb0177887abc2e49e5"}]}