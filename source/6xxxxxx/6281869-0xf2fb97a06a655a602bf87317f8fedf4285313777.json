{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/*\r\n\r\n  BASIC ERC20 Sale Contract\r\n  \r\n  Create this Sale contract first! \r\n  \r\n     Sale(address ethwallet)   // this will send the received ETH funds to this address\r\n\r\n\r\n  @author Hunter Long\r\n  @repo https://github.com/hunterlong/ethereum-ico-contract\r\n\r\n*/\r\n\r\n\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  function mintToken(address to, uint256 value) returns (uint256);\r\n  function changeTransfer(bool allowed);\r\n}\r\n\r\n\r\ncontract Sale {\r\n\r\n    uint256 public maxMintable;\r\n    uint256 public totalMinted;\r\n    uint public exchangeRate;\r\n    bool public isFunding;\r\n    ERC20 public Token;\r\n    address public ETHWallet;\r\n\r\n    bool private configSet;\r\n    address public creator;\r\n\r\n    event Contribution(address from, uint256 amount);\r\n\r\n    function Sale(address _wallet) {\r\n        maxMintable = 10000000000000000000000000000; \r\n        ETHWallet = _wallet;\r\n        isFunding = true;\r\n        creator = msg.sender;\r\n        exchangeRate = 25000;\r\n    }\r\n\r\n    // setup function to be ran only 1 time\r\n    // setup token address\r\n    function setup(address token_address) {\r\n        require(!configSet);\r\n        Token = ERC20(token_address);\r\n        configSet = true;\r\n    }\r\n\r\n    function closeSale() external {\r\n      require(msg.sender==creator);\r\n      isFunding = false;\r\n    }\r\n    \r\n    function () payable {\r\n        this.contribute();\r\n    }\r\n\r\n    // CONTRIBUTE FUNCTION\r\n    // converts ETH to TOKEN and sends new TOKEN to the sender\r\n    function contribute() external payable {\r\n        require(msg.value>0);\r\n        require(isFunding);\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = totalMinted + amount;\r\n        require(total<=maxMintable);\r\n        totalMinted += amount;\r\n        ETHWallet.transfer(msg.value);\r\n        Token.mintToken(msg.sender, amount);\r\n        Contribution(msg.sender, amount);\r\n    }\r\n\r\n    // update the ETH/COIN rate\r\n    function updateRate(uint256 rate) external {\r\n        require(msg.sender==creator);\r\n        require(isFunding);\r\n        exchangeRate = rate;\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator) external {\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n\r\n    // change transfer status for ERC20 token\r\n    function changeTransferStats(bool _allowed) external {\r\n        require(msg.sender==creator);\r\n        Token.changeTransfer(_allowed);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMintable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"changeTransferStats\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"}]","ContractName":"Sale","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000429a97147be1db6f260da0bbd348fc8cca1668d8","Library":"","SwarmSource":"bzzr://a2410ecca36dfcba6073c15a131eef3ba7fc8841329ffd7c1a3b6d74d2d33776"}]}