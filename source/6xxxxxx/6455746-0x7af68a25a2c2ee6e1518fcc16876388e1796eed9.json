{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.25;\r\n/* 创建一个父类， 账户管理员 */\r\ncontract owned {\r\n\r\n    address public owner;\r\n\r\n    constructor() public {\r\n    owner = msg.sender;\r\n    }\r\n    /* modifier是修改标志 */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    /* 修改管理员账户， onlyOwner代表只能是用户管理员来修改 */\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }   \r\n}\r\ncontract lepaitoken is owned{\r\n    uint public systemprice;\r\n    struct putusers{\r\n\t    \taddress puser;//竞拍人\r\n\t    \tuint addtime;//竞拍时间\r\n\t    \tuint addmoney; //竞拍价格\r\n\t    \tstring useraddr; //竞拍人地址 \r\n    }\r\n    struct auctionlist{\r\n        address adduser;//添加人0\r\n        uint opentime;//开始时间1\r\n        uint endtime;//结束时间2\r\n        uint openprice;//起拍价格3\r\n        uint endprice;//最高价格4\r\n        uint onceprice;//每次加价5\r\n        uint currentprice;//当前价格6\r\n        string goodsname; //商品名字7\r\n        string goodspic; //商品图片8 \r\n        bool ifend;//是否结束9\r\n        uint ifsend;//是否发货10\r\n        uint lastid;//竞拍数11\r\n        mapping(uint => putusers) aucusers;//竞拍人的数据组\r\n        mapping(address => uint) ausers;//竞拍人的竞拍价格\r\n    }\r\n    auctionlist[] public auctionlisting; //竞拍中的\r\n    auctionlist[] public auctionlistend; //竞拍结束的\r\n    auctionlist[] public auctionlistts; //竞拍投诉 \r\n    mapping(address => uint[]) userlist;//用户所有竞拍的订单\r\n    mapping(address => uint[]) mypostauct;//发布者所有发布的订单\r\n    //0x56F527C3F4a24bB2BeBA449FFd766331DA840FFA\r\n    btycInterface constant private btyc = btycInterface(0x56F527C3F4a24bB2BeBA449FFd766331DA840FFA);\r\n    /* 通知 */\r\n\tevent auctconfim(address target, uint tokens);//竞拍成功通知\r\n\tevent getmoneys(address target, uint tokens);//获取返利通知\r\n\tconstructor() public {\r\n\t    systemprice = 20000 ether;\r\n\t}\r\n\t/*添加拍卖 */\r\n\tfunction addauction(address addusers,uint opentimes, uint endtimes, uint onceprices, uint openprices, uint endprices, string goodsnames, string goodspics) public returns(uint){\r\n\t    uint _now = now;\r\n\t    require(opentimes >= _now - 1 hours);\r\n\t    require(opentimes < _now + 2 days);\r\n\t    require(endtimes > opentimes);\r\n\t    //require(endtimes > _now + 2 days);\r\n\t    require(endtimes < opentimes + 2 days);\r\n\t    require(btyc.balanceOf(addusers) >= systemprice);\r\n\t    auctionlisting.push(auctionlist(addusers, opentimes, endtimes, openprices, endprices, onceprices, openprices, goodsnames, goodspics, false, 0, 0));\r\n\t    uint lastid = auctionlisting.length;\r\n\t    mypostauct[addusers].push(lastid);\r\n\t    return(lastid);\r\n\t}\r\n\t//发布者发布的数量\r\n\tfunction getmypostlastid() public view returns(uint){\r\n\t    return(mypostauct[msg.sender].length);\r\n\t}\r\n\t//发布者发布的订单id\r\n\tfunction getmypost(uint ids) public view returns(uint){\r\n\t    return(mypostauct[msg.sender][ids]);\r\n\t}\r\n\t//用户余额\r\n\tfunction balanceOf(address addr) public view returns(uint) {\r\n\t    return(btyc.balanceOf(addr));\r\n\t}\r\n\t//用户可用余额\r\n\tfunction canuse(address addr) public view returns(uint) {\r\n\t    return(btyc.getcanuse(addr));\r\n\t}\r\n\t//合约现有余额\r\n\tfunction ownerof() public view returns(uint) {\r\n\t    return(btyc.balanceOf(this));\r\n\t}\r\n\t//把合约余额转出\r\n\tfunction sendleftmoney(uint money, address toaddr) public onlyOwner{\r\n\t    btyc.transfer(toaddr, money);\r\n\t}\r\n\t/*用户竞拍*/\r\n\tfunction inputauction(uint auctids, address pusers, uint addmoneys,string useraddrs) public {\r\n\t    uint _now = now;\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    require(c.ifend == false);\r\n\t    require(c.ifsend == 0);\r\n\t    \r\n\t    uint userbalance = canuse(pusers);\r\n\t    require(addmoneys > c.currentprice);\r\n\t    require(addmoneys <= c.endprice);\r\n\t    uint userhasmoney = c.ausers[pusers];\r\n\t    uint money = addmoneys;\r\n\t    if(userhasmoney > 0) {\r\n\t        require(addmoneys > userhasmoney);\r\n\t        money = addmoneys - userhasmoney;\r\n\t    }\r\n\t    \r\n\t    require(userbalance >= money);\r\n\t    if(c.endtime < _now) {\r\n\t        c.ifend = true;\r\n\t    }else{\r\n\t        if(addmoneys == c.endprice){\r\n\t            c.ifend = true;\r\n\t        }\r\n\t        btyc.transfer(this, money);\r\n\t        c.ausers[pusers] = addmoneys;\r\n\t        c.currentprice = addmoneys;\r\n\t        c.aucusers[c.lastid++] = putusers(pusers, _now, addmoneys,  useraddrs);\r\n\t    \r\n\t        userlist[pusers].push(auctids);\r\n\t        emit auctconfim(pusers, money);\r\n\t    }\r\n\t    \r\n\t    \r\n\t    //}\r\n\t    \r\n\t}\r\n\t//获取用户自己竞拍的总数\r\n\tfunction getuserlistlength(address uaddr) public view returns(uint len) {\r\n\t    len = userlist[uaddr].length;\r\n\t}\r\n\t//查看单个订单\r\n\tfunction viewauction(uint aid) public view returns(address addusers,uint opentimes, uint endtimes, uint onceprices, uint openprices, uint endprices, uint currentprices, string goodsnames, string goodspics, bool ifends, uint ifsends, uint anum){\r\n\t\tauctionlist storage c = auctionlisting[aid];\r\n\t\taddusers = c.adduser;//0\r\n\t\topentimes = c.opentime;//1\r\n\t\tendtimes = c.endtime;//2\r\n\t\tonceprices = c.onceprice;//3\r\n\t\topenprices = c.openprice;//4\r\n\t\tendprices = c.endprice;//5\r\n\t\tcurrentprices = c.currentprice;//6\r\n\t\tgoodspics = c.goodspic;//7\r\n\t\tgoodsnames = c.goodsname;//8\r\n\t\tifends = c.ifend;//9\r\n\t\tifsends = c.ifsend;//10\r\n\t\tanum = c.lastid;//11\r\n\t\t\r\n\t}\r\n\t//获取单个订单的竞拍者数据\r\n\tfunction viewauctionlist(uint aid, uint uid) public view returns(address pusers,uint addtimes,uint addmoneys){\r\n\t    auctionlist storage c = auctionlisting[aid];\r\n\t    putusers storage u = c.aucusers[uid];\r\n\t    pusers = u.puser;//0\r\n\t    addtimes = u.addtime;//1\r\n\t    addmoneys = u.addmoney;//2\r\n\t}\r\n\t//获取所有竞拍商品的总数\r\n\tfunction getactlen() public view returns(uint) {\r\n\t    return(auctionlisting.length);\r\n\t}\r\n\t//获取投诉订单的总数\r\n\tfunction getacttslen() public view returns(uint) {\r\n\t    return(auctionlistts.length);\r\n\t}\r\n\t//获取竞拍完结的总数\r\n\tfunction getactendlen() public view returns(uint) {\r\n\t    return(auctionlistend.length);\r\n\t}\r\n\t//发布者设定发货\r\n\tfunction setsendgoods(uint auctids) public {\r\n\t    uint _now = now;\r\n\t     auctionlist storage c = auctionlisting[auctids];\r\n\t     require(c.adduser == msg.sender);\r\n\t     require(c.endtime < _now);\r\n\t     require(c.ifsend == 0);\r\n\t     c.ifsend = 1;\r\n\t     c.ifend = true;\r\n\t}\r\n\t//竞拍者收到货物后动作\r\n\tfunction setgetgoods(uint auctids) public {\r\n\t    uint _now = now;\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    require(c.endtime < _now);\r\n\t    require(c.ifend == true);\r\n\t    require(c.ifsend == 1);\r\n\t    putusers storage lasttuser = c.aucusers[c.lastid];\r\n\t    require(lasttuser.puser == msg.sender);\r\n\t    c.ifsend = 2;\r\n\t    uint getmoney = lasttuser.addmoney*70/100;\r\n\t    btyc.mintToken(c.adduser, getmoney);\r\n\t    auctionlistend.push(c);\r\n\t}\r\n\t//获取用户的发货地址（发布者）\r\n\tfunction getuseraddress(uint auctids) public view returns(string){\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    require(c.adduser == msg.sender);\r\n\t    //putusers memory mdata = c.aucusers[c.lastid];\r\n\t    return(c.aucusers[c.lastid].useraddr);\r\n\t}\r\n\tfunction editusetaddress(uint aid, string setaddr) public returns(bool){\r\n\t    auctionlist storage c = auctionlisting[aid];\r\n\t    putusers storage data = c.aucusers[c.lastid];\r\n\t    require(data.puser == msg.sender);\r\n\t    data.useraddr = setaddr;\r\n\t    return(true);\r\n\t}\r\n\t/*用户获取拍卖金额和返利，只能返利一次 */\r\n\tfunction endauction(uint auctids) public {\r\n\t    //uint _now = now;\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    require(c.ifsend == 2);\r\n\t    uint len = c.lastid;\r\n\t    putusers storage firstuser = c.aucusers[0];\r\n        address suser = msg.sender;\r\n\t    \r\n\t    require(c.ifend == true);\r\n\t    require(len > 1);\r\n\t    require(c.ausers[suser] > 0);\r\n\t    uint sendmoney = 0;\r\n\t    if(len == 2) {\r\n\t        require(firstuser.puser == suser);\r\n\t        sendmoney = c.currentprice*3/10 + c.ausers[suser];\r\n\t    }else{\r\n\t        if(firstuser.puser == suser) {\r\n\t            sendmoney = c.currentprice*1/10 + c.ausers[suser];\r\n\t        }else{\r\n\t            uint onemoney = (c.currentprice*2/10)/(len-2);\r\n\t            sendmoney = onemoney + c.ausers[suser];\r\n\t        }\r\n\t    }\r\n\t    require(sendmoney > 0);\r\n\t    btyc.mintToken(suser, sendmoney);\r\n\t    c.ausers[suser] = 0;\r\n\t    emit getmoneys(suser, sendmoney);\r\n\t    \r\n\t}\r\n\t//设定拍卖标准价\r\n\tfunction setsystemprice(uint price) public onlyOwner{\r\n\t    systemprice = price;\r\n\t}\r\n\t//管理员冻结发布者和商品\r\n\tfunction setauctionother(uint auctids) public onlyOwner{\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    btyc.freezeAccount(c.adduser, true);\r\n\t    c.ifend = true;\r\n\t    c.ifsend = 3;\r\n\t}\r\n\t//设定商品状态\r\n\tfunction setauctionsystem(uint auctids, uint setnum) public onlyOwner{\r\n\t    auctionlist storage c = auctionlisting[auctids]; \r\n\t    c.ifend = true;\r\n\t    c.ifsend = setnum;\r\n\t}\r\n\t//设定商品正常\r\n\tfunction setauctionotherfree(uint auctids) public onlyOwner{\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    btyc.freezeAccount(c.adduser, false);\r\n\t    c.ifsend = 2;\r\n\t}\r\n\t//投诉发布者未发货或货物不符\r\n\tfunction tsauction(uint auctids) public{\r\n\t   auctionlist storage c = auctionlisting[auctids];\r\n\t   uint _now = now;\r\n\t   require(c.endtime > _now);\r\n\t   require(c.endtime + 2 days < _now);\r\n\t   require(c.aucusers[c.lastid].puser == msg.sender);\r\n\t   if(c.endtime + 2 days < _now && c.ifsend == 0) {\r\n\t       c.ifsend = 5;\r\n\t       c.ifend = true;\r\n\t       auctionlistts.push(c);\r\n\t   }\r\n\t   if(c.endtime + 9 days < _now && c.ifsend == 1) {\r\n\t       c.ifsend = 5;\r\n\t       c.ifend = true;\r\n\t       auctionlistts.push(c);\r\n\t   }\r\n\t}\r\n\t//管理员设定违规竞拍返还竞拍者\r\n\tfunction endauctionother(uint auctids) public {\r\n\t    //uint _now = now;\r\n\t    auctionlist storage c = auctionlisting[auctids];\r\n\t    address suser = msg.sender;\r\n\t    require(c.ifsend == 3);\r\n\t    require(c.ausers[suser] > 0);\r\n\t    btyc.mintToken(suser,c.ausers[suser]);\r\n\t    c.ausers[suser] = 0;\r\n\t    emit getmoneys(suser, c.ausers[suser]);\r\n\t}\r\n\t\r\n}\r\n//btyc接口类\r\ninterface btycInterface {\r\n    //mapping(address => uint) balances;\r\n    function balanceOf(address _addr) external view returns (uint256);\r\n    function mintToken(address target, uint256 mintedAmount) external returns (bool);\r\n    function transfer(address to, uint tokens) external returns (bool);\r\n    function freezeAccount(address target, bool freeze) external returns (bool);\r\n    function getcanuse(address tokenOwner) external view returns(uint);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"aid\",\"type\":\"uint256\"},{\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"viewauctionlist\",\"outputs\":[{\"name\":\"pusers\",\"type\":\"address\"},{\"name\":\"addtimes\",\"type\":\"uint256\"},{\"name\":\"addmoneys\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getacttslen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"},{\"name\":\"pusers\",\"type\":\"address\"},{\"name\":\"addmoneys\",\"type\":\"uint256\"},{\"name\":\"useraddrs\",\"type\":\"string\"}],\"name\":\"inputauction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionlistts\",\"outputs\":[{\"name\":\"adduser\",\"type\":\"address\"},{\"name\":\"opentime\",\"type\":\"uint256\"},{\"name\":\"endtime\",\"type\":\"uint256\"},{\"name\":\"openprice\",\"type\":\"uint256\"},{\"name\":\"endprice\",\"type\":\"uint256\"},{\"name\":\"onceprice\",\"type\":\"uint256\"},{\"name\":\"currentprice\",\"type\":\"uint256\"},{\"name\":\"goodsname\",\"type\":\"string\"},{\"name\":\"goodspic\",\"type\":\"string\"},{\"name\":\"ifend\",\"type\":\"bool\"},{\"name\":\"ifsend\",\"type\":\"uint256\"},{\"name\":\"lastid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerof\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"setsendgoods\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"getuseraddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"aid\",\"type\":\"uint256\"},{\"name\":\"setaddr\",\"type\":\"string\"}],\"name\":\"editusetaddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionlistend\",\"outputs\":[{\"name\":\"adduser\",\"type\":\"address\"},{\"name\":\"opentime\",\"type\":\"uint256\"},{\"name\":\"endtime\",\"type\":\"uint256\"},{\"name\":\"openprice\",\"type\":\"uint256\"},{\"name\":\"endprice\",\"type\":\"uint256\"},{\"name\":\"onceprice\",\"type\":\"uint256\"},{\"name\":\"currentprice\",\"type\":\"uint256\"},{\"name\":\"goodsname\",\"type\":\"string\"},{\"name\":\"goodspic\",\"type\":\"string\"},{\"name\":\"ifend\",\"type\":\"bool\"},{\"name\":\"ifsend\",\"type\":\"uint256\"},{\"name\":\"lastid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setsystemprice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uaddr\",\"type\":\"address\"}],\"name\":\"getuserlistlength\",\"outputs\":[{\"name\":\"len\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"setgetgoods\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"endauction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"},{\"name\":\"setnum\",\"type\":\"uint256\"}],\"name\":\"setauctionsystem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"setauctionotherfree\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getactlen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addusers\",\"type\":\"address\"},{\"name\":\"opentimes\",\"type\":\"uint256\"},{\"name\":\"endtimes\",\"type\":\"uint256\"},{\"name\":\"onceprices\",\"type\":\"uint256\"},{\"name\":\"openprices\",\"type\":\"uint256\"},{\"name\":\"endprices\",\"type\":\"uint256\"},{\"name\":\"goodsnames\",\"type\":\"string\"},{\"name\":\"goodspics\",\"type\":\"string\"}],\"name\":\"addauction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getactendlen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctionlisting\",\"outputs\":[{\"name\":\"adduser\",\"type\":\"address\"},{\"name\":\"opentime\",\"type\":\"uint256\"},{\"name\":\"endtime\",\"type\":\"uint256\"},{\"name\":\"openprice\",\"type\":\"uint256\"},{\"name\":\"endprice\",\"type\":\"uint256\"},{\"name\":\"onceprice\",\"type\":\"uint256\"},{\"name\":\"currentprice\",\"type\":\"uint256\"},{\"name\":\"goodsname\",\"type\":\"string\"},{\"name\":\"goodspic\",\"type\":\"string\"},{\"name\":\"ifend\",\"type\":\"bool\"},{\"name\":\"ifsend\",\"type\":\"uint256\"},{\"name\":\"lastid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"toaddr\",\"type\":\"address\"}],\"name\":\"sendleftmoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"aid\",\"type\":\"uint256\"}],\"name\":\"viewauction\",\"outputs\":[{\"name\":\"addusers\",\"type\":\"address\"},{\"name\":\"opentimes\",\"type\":\"uint256\"},{\"name\":\"endtimes\",\"type\":\"uint256\"},{\"name\":\"onceprices\",\"type\":\"uint256\"},{\"name\":\"openprices\",\"type\":\"uint256\"},{\"name\":\"endprices\",\"type\":\"uint256\"},{\"name\":\"currentprices\",\"type\":\"uint256\"},{\"name\":\"goodsnames\",\"type\":\"string\"},{\"name\":\"goodspics\",\"type\":\"string\"},{\"name\":\"ifends\",\"type\":\"bool\"},{\"name\":\"ifsends\",\"type\":\"uint256\"},{\"name\":\"anum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systemprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ids\",\"type\":\"uint256\"}],\"name\":\"getmypost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"tsauction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"endauctionother\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"canuse\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getmypostlastid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"auctids\",\"type\":\"uint256\"}],\"name\":\"setauctionother\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"auctconfim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"getmoneys\",\"type\":\"event\"}]","ContractName":"lepaitoken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6addaaf67404441513a4c4c6a89bf26ee3e7bffb5c28e486c1fb85a7a86cfadc"}]}