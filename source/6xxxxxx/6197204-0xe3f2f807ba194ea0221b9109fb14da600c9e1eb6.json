{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface ERC721Receiver {\r\n\r\n    function onERC721Received(address operator, address from, uint tokenId, bytes data) external returns (bytes4);\r\n}\r\n\r\ncontract Emojisan {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool value);\r\n\r\n    string public constant name = \"emojisan.github.io\";\r\n    string public constant symbol = \"EMJS\";\r\n    address public minter;\r\n    mapping (bytes4 => bool) public supportsInterface;\r\n    mapping (uint => address) private tokenToOwner;\r\n    uint public totalSupply;\r\n    uint[] public tokenByIndex;\r\n    mapping (address => uint[]) public tokenOfOwnerByIndex;\r\n    mapping (address => mapping (uint => uint)) private indexInTokenOfOwnerByIndex;\r\n    mapping (uint => address) public getApproved;\r\n    mapping (address => mapping (address => bool)) public isApprovedForAll;\r\n\r\n    constructor() public {\r\n        minter = msg.sender;\r\n        supportsInterface[0x01ffc9a7] = true;\r\n        supportsInterface[0x80ac58cd] = true;\r\n        supportsInterface[0x780e9d63] = true;\r\n        supportsInterface[0x5b5e139f] = true;\r\n    }\r\n\r\n    function ownerOf(uint tokenId) external view returns (address) {\r\n        address owner = tokenToOwner[tokenId];\r\n        require(owner != 0);\r\n        return owner;\r\n    }\r\n\r\n    function tokens() external view returns (uint[]) {\r\n        return tokenByIndex;\r\n    }\r\n\r\n    function tokensOfOwner(address owner) external view returns (uint[]) {\r\n        return tokenOfOwnerByIndex[owner];\r\n    }\r\n\r\n    function balanceOf(address owner) external view returns (uint) {\r\n        return tokenOfOwnerByIndex[owner].length;\r\n    }\r\n\r\n    function tokenURI(uint tokenId) public view returns (string) {\r\n        require(tokenToOwner[tokenId] != 0);\r\n        bytes memory base = \"https://raw.githubusercontent.com/emojisan/data/master/tkn/\";\r\n        uint length = 0;\r\n        uint tmp = tokenId;\r\n        do {\r\n            tmp /= 62;\r\n            length++;\r\n        } while (tmp != 0);\r\n        bytes memory uri = new bytes(base.length + length);\r\n        for (uint i = 0; i < base.length; i++) {\r\n            uri[i] = base[i];\r\n        }\r\n        do {\r\n            length--;\r\n            tmp = tokenId % 62;\r\n            if (tmp < 10) tmp += 48;\r\n            else if (tmp < 36) tmp += 55;\r\n            else tmp += 61;\r\n            uri[base.length + length] = bytes1(tmp);\r\n            tokenId /= 62;\r\n        } while (length != 0);\r\n        return string(uri);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint tokenId) public {\r\n        require(to != address(this));\r\n        require(to != 0);\r\n        address owner = tokenToOwner[tokenId];\r\n        address approved = getApproved[tokenId];\r\n        require(from == owner);\r\n        require(msg.sender == owner || msg.sender == approved || isApprovedForAll[owner][msg.sender]);\r\n        tokenToOwner[tokenId] = to;\r\n        uint index = indexInTokenOfOwnerByIndex[from][tokenId];\r\n        uint lastIndex = tokenOfOwnerByIndex[from].length - 1;\r\n        if (index != lastIndex) {\r\n            uint lastTokenId = tokenOfOwnerByIndex[from][lastIndex];\r\n            tokenOfOwnerByIndex[from][index] = lastTokenId;\r\n            indexInTokenOfOwnerByIndex[from][lastTokenId] = index;\r\n        }\r\n        tokenOfOwnerByIndex[from].length--;\r\n        uint length = tokenOfOwnerByIndex[to].push(tokenId);\r\n        indexInTokenOfOwnerByIndex[to][tokenId] = length - 1;\r\n        if (approved != 0) {\r\n            delete getApproved[tokenId];\r\n        }\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint tokenId, bytes data) public {\r\n        transferFrom(from, to, tokenId);\r\n        uint size;\r\n        assembly { size := extcodesize(to) }\r\n        if (size != 0) {\r\n            bytes4 magic = ERC721Receiver(to).onERC721Received(msg.sender, from, tokenId, data);\r\n            require(magic == 0x150b7a02);\r\n        }\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint tokenId) external {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    function approve(address approved, uint tokenId) external {\r\n        address owner = tokenToOwner[tokenId];\r\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender]);\r\n        getApproved[tokenId] = approved;\r\n        emit Approval(owner, approved, tokenId);\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool value) external {\r\n        isApprovedForAll[msg.sender][operator] = value;\r\n        emit ApprovalForAll(msg.sender, operator, value);\r\n    }\r\n\r\n    function mint(uint tokenId) external {\r\n        require(msg.sender == minter);\r\n        require(tokenToOwner[tokenId] == 0);\r\n        tokenToOwner[tokenId] = msg.sender;\r\n        totalSupply++;\r\n        tokenByIndex.push(tokenId);\r\n        uint length = tokenOfOwnerByIndex[msg.sender].push(tokenId);\r\n        indexInTokenOfOwnerByIndex[msg.sender][tokenId] = length - 1;\r\n        emit Transfer(0, msg.sender, tokenId);\r\n    }\r\n\r\n    function setMinter(address newMinter) external {\r\n        require(msg.sender == minter);\r\n        minter = newMinter;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"approved\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}]","ContractName":"Emojisan","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f8fd5444272ddcbbdae7968ad85a7aacced16fdab3a6008ec518ef7702a6acb8"}]}