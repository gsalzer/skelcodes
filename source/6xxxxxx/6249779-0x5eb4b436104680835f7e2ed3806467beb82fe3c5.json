{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*\r\n    YumeriumManager(address ethwallet, address YUM Token)   \r\n    @author Yumerium Ltd\r\n*/\r\ncontract YumeriumManager {\r\n    using SafeMath for uint256;\r\n    address public creator;\r\n\r\n    YUM public Yumerium;\r\n    address public YumeriumTeamWallet;\r\n    mapping (address => bool) public YumeriumProducts;\r\n    address[] public arrProducts; // array of players to tract and distribute them tokens when the game ends\r\n\r\n    uint public eventSaleEnd = 1537920000; // 09/26/2018 @ 12:00am (UTC)\r\n    uint public mainSaleEnd = 1539129600; //10/10/2018 @ 12:00am (UTC)\r\n\r\n    uint256 public saleExchangeRate4 = 3333;\r\n    uint256 public saleExchangeRate5 = 3158;\r\n    uint256 public saleExchangeRate = 3000;\r\n    \r\n    uint256 public volumeType1 = 1429 * 10 ** 16; //14.29 eth\r\n    uint256 public volumeType2 = 7143 * 10 ** 16;\r\n    uint256 public volumeType3 = 14286 * 10 ** 16;\r\n    uint256 public volumeType4 = 42857 * 10 ** 16;\r\n    uint256 public volumeType5 = 71429 * 10 ** 16;\r\n    uint256 public volumeType6 = 142857 * 10 ** 16;\r\n    uint256 public volumeType7 = 428571 * 10 ** 16;\r\n\r\n    event GetYumerium(address product, address sender, uint256 amount);\r\n\r\n    constructor(address _token_address) public {\r\n        creator = msg.sender;\r\n        Yumerium = YUM(_token_address);\r\n        YumeriumTeamWallet = msg.sender;\r\n        YumeriumProducts[this] = true;\r\n    }\r\n\r\n    function () external payable {\r\n        getYumerium(msg.sender);\r\n    }\r\n    \r\n    \r\n    function getYumerium(address sender) public payable returns (uint256) {\r\n        require(YumeriumProducts[msg.sender], \"This isn't our product!\");\r\n        uint256 amount;\r\n        uint256 exchangeRate;\r\n        if(now < eventSaleEnd) {\r\n            exchangeRate = saleExchangeRate4;\r\n        } else if (now < mainSaleEnd) { // this must be applied even after the sale period is done\r\n            exchangeRate = saleExchangeRate5;\r\n        } else { // this must be applied even after the sale period is done\r\n            exchangeRate = saleExchangeRate;\r\n        }\r\n        \r\n        amount = msg.value.mul(exchangeRate).div(10 ** 10);\r\n        \r\n        if(msg.value >= volumeType7) {\r\n            amount = amount.mul(180).div(100);\r\n        } else if(msg.value >= volumeType6) {\r\n            amount = amount.mul(160).div(100);\r\n        } else if(msg.value >= volumeType5) {\r\n            amount = amount.mul(140).div(100);\r\n        } else if(msg.value >= volumeType4) {\r\n            amount = amount.mul(130).div(100);\r\n        } else if(msg.value >= volumeType3) {\r\n            amount = amount.mul(120).div(100);\r\n        } else if(msg.value >= volumeType2) {\r\n            amount = amount.mul(110).div(100);\r\n        } else if(msg.value >= volumeType1) {\r\n            amount = amount.mul(105).div(100);\r\n        }\r\n\r\n        YumeriumTeamWallet.transfer(msg.value);\r\n        Yumerium.sale(sender, amount);\r\n        \r\n        emit GetYumerium(msg.sender, sender, amount);\r\n        return amount;\r\n    }\r\n\r\n    function calculateToken(uint256 ethValue) public view returns (uint256) {\r\n        uint256 amount;\r\n        uint256 exchangeRate;\r\n        if(now < eventSaleEnd) {\r\n            exchangeRate = saleExchangeRate4;\r\n        } else if (now < mainSaleEnd) { // this must be applied even after the sale period is done\r\n            exchangeRate = saleExchangeRate5;\r\n        } else { // this must be applied even after the sale period is done\r\n            exchangeRate = saleExchangeRate;\r\n        }\r\n        \r\n        amount = ethValue.mul(exchangeRate).div(10 ** 10);\r\n        \r\n        if(ethValue >= volumeType7) {\r\n            amount = amount.mul(180).div(100);\r\n        } else if(ethValue >= volumeType6) {\r\n            amount = amount.mul(160).div(100);\r\n        } else if(ethValue >= volumeType5) {\r\n            amount = amount.mul(140).div(100);\r\n        } else if(ethValue >= volumeType4) {\r\n            amount = amount.mul(130).div(100);\r\n        } else if(ethValue >= volumeType3) {\r\n            amount = amount.mul(120).div(100);\r\n        } else if(ethValue >= volumeType2) {\r\n            amount = amount.mul(110).div(100);\r\n        } else if(ethValue >= volumeType1) {\r\n            amount = amount.mul(105).div(100);\r\n        }\r\n\r\n        return amount;\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator) external {\r\n        require(msg.sender==creator, \"You're not a creator!\");\r\n        creator = _creator;\r\n    }\r\n    // change creator address\r\n    function changeTeamWallet(address _teamWallet) external {\r\n        require(msg.sender==creator, \"You're not a creator!\");\r\n        YumeriumTeamWallet = _teamWallet;\r\n    }\r\n\r\n    // change creator address\r\n    function addProduct(address _contractAddress) external {\r\n        require(msg.sender==creator, \"You're not a creator!\");\r\n        require(!YumeriumProducts[_contractAddress], \"This product is already in the manager\");\r\n        if (!YumeriumProducts[_contractAddress])\r\n        {\r\n            YumeriumProducts[_contractAddress] = true;\r\n            arrProducts.push(_contractAddress);\r\n        }\r\n    }\r\n    // change creator address\r\n    function replaceProduct(address _old_contract_address, address _new_contract_address) external {\r\n        require(msg.sender==creator, \"You're not a creator!\");\r\n        require(YumeriumProducts[_old_contract_address], \"This product isn't already in the manager\");\r\n        if (YumeriumProducts[_old_contract_address])\r\n        {\r\n            YumeriumProducts[_old_contract_address] = false;\r\n            for (uint256 i = 0; i < arrProducts.length; i++) {\r\n                if (arrProducts[i] == _old_contract_address) {\r\n                    arrProducts[i] = _new_contract_address;\r\n                    YumeriumProducts[_new_contract_address] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getNumProducts() public view returns(uint256) {\r\n        return arrProducts.length;\r\n    }\r\n}\r\n\r\ncontract YUM {\r\n    function sale(address to, uint256 value) public;\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        // uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ethValue\",\"type\":\"uint256\"}],\"name\":\"calculateToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleExchangeRate5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_old_contract_address\",\"type\":\"address\"},{\"name\":\"_new_contract_address\",\"type\":\"address\"}],\"name\":\"replaceProduct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"YumeriumTeamWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Yumerium\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getYumerium\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumProducts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleExchangeRate4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventSaleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamWallet\",\"type\":\"address\"}],\"name\":\"changeTeamWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"volumeType5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"YumeriumProducts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"addProduct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"arrProducts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"product\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GetYumerium\",\"type\":\"event\"}]","ContractName":"YumeriumManager","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007f4404db6a3f4d3cfb41d5920d81d44d64759235","Library":"","SwarmSource":"bzzr://9f283c418d213a1f9237aca405e13ea3583c35fd58d7ea0ac76cfbac664c4429"}]}