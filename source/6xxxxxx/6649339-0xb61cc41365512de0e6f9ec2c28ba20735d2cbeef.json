{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract SUPERBANK{\r\n    mapping (address => uint256) invested;\r\n    mapping (address => uint256) dateInvest;\r\n    uint constant public FEE = 1;\r\n    uint constant public ADMIN_FEE = 8;\r\n    uint constant public REFERRER_FEE = 11;\r\n    address private adminAddr;\r\n    \r\n    constructor() public{\r\n        adminAddr = msg.sender;\r\n    }\r\n\r\n    function () external payable {\r\n        address sender = msg.sender;\r\n        \r\n        if (invested[sender] != 0) {\r\n            uint256 amount = getInvestorDividend(sender);\r\n            if (amount >= address(this).balance){\r\n                amount = address(this).balance;\r\n            }\r\n            sender.transfer(amount);\r\n        }\r\n\r\n        dateInvest[sender] = now;\r\n        invested[sender] += msg.value;\r\n\r\n        if (msg.value > 0){\r\n            adminAddr.transfer(msg.value * ADMIN_FEE / 100);\r\n            address ref = bytesToAddress(msg.data);\r\n            if (ref != sender && invested[ref] != 0){\r\n                ref.transfer(msg.value * REFERRER_FEE / 100);\r\n                sender.transfer(msg.value * REFERRER_FEE / 100);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function getInvestorDividend(address addr) public view returns(uint256) {\r\n        return invested[addr] * FEE / 100 * (now - dateInvest[addr]) / 1 days;\r\n    }\r\n    \r\n    function bytesToAddress(bytes bys) private pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERRER_FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getInvestorDividend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SUPERBANK","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d3757c7c355afde59ab10cb059535ad88522a9f2bf8bc0f0743e685853e8aad1"}]}