{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ninterface EtherShare {\r\n    function allShare(uint ShareID, uint ReplyID) returns (address,string,uint,bool,string);\r\n}\r\n\r\n// Enable users to reward authors from EtherShare and record the reward\r\ncontract EtherShareReward {\r\n    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\r\n    \r\n    struct oneReward {\r\n        address from;\r\n        uint value;\r\n    }\r\n    mapping(uint => mapping(uint => oneReward[])) public allRewards;\r\n    \r\n    function Reward(uint ShareID, uint ReplyID) payable public {\r\n        address to;\r\n        (to,,,,) = ES.allShare(ShareID,ReplyID); // get the author\r\n        to.transfer(msg.value);\r\n        allRewards[ShareID][ReplyID].push(oneReward(msg.sender, msg.value)); // record the reward\r\n    }\r\n\r\n    function getSum(uint ShareID, uint ReplyID) view public returns (uint) {\r\n        uint sum = 0;\r\n        for (uint i=0; i<allRewards[ShareID][ReplyID].length; ++i)\r\n            sum += allRewards[ShareID][ReplyID][i].value;\r\n        return sum;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ShareID\",\"type\":\"uint256\"},{\"name\":\"ReplyID\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRewards\",\"outputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ShareID\",\"type\":\"uint256\"},{\"name\":\"ReplyID\",\"type\":\"uint256\"}],\"name\":\"getSum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EtherShareReward","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://625bc7904a168078c5aad7730861862b5d335e738599a8c1199af8b3ca102cd9"}]}