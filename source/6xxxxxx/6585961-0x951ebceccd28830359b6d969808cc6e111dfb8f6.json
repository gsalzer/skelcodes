{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tc = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\t\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner, \"msg.sender == owner\");\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\trequire(address(0) != _newOwner, \"address(0) != _newOwner\");\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public {\r\n\t\trequire(msg.sender == newOwner, \"msg.sender == newOwner\");\r\n\t\temit OwnershipTransferred(owner, msg.sender);\r\n\t\towner = msg.sender;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\n\r\ncontract Authorizable is Ownable {\r\n    mapping(address => bool) public authorized;\r\n  \r\n    event AuthorizationSet(address indexed addressAuthorized, bool indexed authorization);\r\n\r\n    constructor() public {\r\n        authorized[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyAuthorized() {\r\n        require(authorized[msg.sender], \"authorized[msg.sender]\");\r\n        _;\r\n    }\r\n\r\n    function setAuthorized(address addressAuthorized, bool authorization) onlyOwner public {\r\n        emit AuthorizationSet(addressAuthorized, authorization);\r\n        authorized[addressAuthorized] = authorization;\r\n    }\r\n  \r\n}\r\n\r\ncontract tokenInterface {\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract ERC20_MultiTimelock is Ownable, Authorizable {\r\n    using SafeMath for uint256;\r\n\r\n\ttokenInterface public tokenContract;\r\n\t\r\n\tuint256 public startRelease;\r\n\tuint256 public timelock;\r\n\t\r\n\tmapping (address => uint256) public tkn_amount;\r\n\tmapping (address => uint256) public tkn_sent;\r\n\t\r\n\tfunction remaining(address _user) public view returns(uint256 balanceLocked) {\r\n\t    return tkn_amount[_user].sub(tkn_sent[_user]);\r\n\t}\r\n\r\n    uint256 public totalSupply;\r\n\r\n\tconstructor(address _tokenAddress, uint256 _timelock) public {\r\n\t\ttokenContract = tokenInterface(_tokenAddress);\r\n\t\ttimelock = _timelock;\r\n\t}\r\n\t\r\n    //Emergency withdraw\r\n    function EmergencyWithdrawNoAccountedTokens() onlyOwner public returns(uint256 thisBalance, uint256 tknToSend, address to) {\r\n        thisBalance = tokenContract.balanceOf(this);\r\n        tknToSend = thisBalance.sub(totalSupply);\r\n        to = msg.sender;\r\n        tokenContract.transfer(to, tknToSend);\r\n    }\r\n\r\n    //set start time to countdown\r\n\tfunction setRelease(uint256 _time) onlyOwner public {\r\n\t    require( startRelease == 0 , \"startRelease == 0 \");\r\n\t    startRelease = _time;\r\n\t}\r\n\t\r\n\t//claim\r\n\tfunction claim() public returns (bool) {\r\n\t    require( startRelease != 0 , \"startRelease != 0 \");\r\n\t    require( remaining(msg.sender) > 0, \"balanceOf(msg.sender) > 0\");\r\n\t    uint256 endRelease = startRelease.add(timelock);\r\n\r\n    \tif ( now > startRelease ) {\r\n    \t\tuint256 timeprogress = now.sub(startRelease);\r\n    \t\tuint256 rate = 0;\r\n    \t\tif( now > endRelease) { \r\n    \t\t\trate = 1e18;\r\n    \t\t} else {\r\n    \t\t\trate =  timeprogress.mul(1e18).div(timelock);   \r\n    \t\t}\r\n    \t}\r\n\t\t\r\n\t\tuint256 tknToSend = remaining(msg.sender).mul(rate).div(1e18);\r\n\t\ttkn_sent[msg.sender] = tkn_sent[msg.sender].add(tknToSend);\r\n\t\t\r\n\t\trequire(tknToSend > 0,\"tknToSend > 0\");\r\n\t\t\r\n\t\ttokenContract.transfer(msg.sender, tknToSend);\r\n\t\t\r\n\t    totalSupply = totalSupply.sub(tknToSend);\r\n\t    \r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction () public {\r\n\t    claim();\r\n\t}\r\n\t\r\n\t//deposit\r\n\tfunction depositToken( address _beneficiary, uint256 _amount) onlyAuthorized public {\r\n\t    require( tokenContract.transferFrom(msg.sender, this, _amount), \"tokenContract.transferFrom(msg.sender, this, _amount)\" );\r\n\t    \r\n\t    tkn_amount[_beneficiary] = tkn_amount[_beneficiary].add(_amount);\r\n\t    \r\n\t    totalSupply = totalSupply.add(_amount);\r\n\t}\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"EmergencyWithdrawNoAccountedTokens\",\"outputs\":[{\"name\":\"thisBalance\",\"type\":\"uint256\"},{\"name\":\"tknToSend\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tkn_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startRelease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressAuthorized\",\"type\":\"address\"},{\"name\":\"authorization\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tkn_sent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"remaining\",\"outputs\":[{\"name\":\"balanceLocked\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setRelease\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_timelock\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addressAuthorized\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"authorization\",\"type\":\"bool\"}],\"name\":\"AuthorizationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"ERC20_MultiTimelock","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002efe439c2f00438b27d5e8959bfb54f018993a120000000000000000000000000000000000000000000000000000000000a082a0","Library":"","SwarmSource":"bzzr://dd48df6b8b36697b1756e9791902479f4274a9661e537c288c213e818a61d95d"}]}