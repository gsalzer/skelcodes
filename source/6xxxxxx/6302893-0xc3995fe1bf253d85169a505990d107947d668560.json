{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract TokenContract {\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner, \"Only Owner\");\r\n    _;\r\n  }\r\n}\r\n\r\ncontract GymRewardsExchange is Ownable {\r\n  TokenContract public tkn;\r\n  bool public active = true;\r\n  mapping (address => uint256) public deposits;\r\n  mapping (address => string) public ethtoeosAddress;\r\n  mapping (bytes32 => address) public eostoethAddress;\r\n  mapping (uint256 => address) public indexedAddress;\r\n  uint256 public addresIndex = 0;\r\n\r\n  constructor() public {\r\n    tkn = TokenContract(0x92D3e963aA94D909869940A8d15FA16CcbC6655E);\r\n  }\r\n\r\n  function activateExchange(bool _active) public onlyOwner {\r\n    active = _active;\r\n  }\r\n\r\n  function deposit(bytes32 _addressHash, string _eosAddress) public {\r\n    require(active, \"Exchange is not active\");\r\n    uint256 currentBalance = tkn.balanceOf(msg.sender);\r\n    require(currentBalance > 0, \"You should have Tokens to exchange\");\r\n    require(tkn.allowance(msg.sender, address(this)) == currentBalance, \"This contract needs aproval for the whole amount of tokens\");\r\n    require(deposits[msg.sender] == 0, \"Only one deposit per address is allowed\");\r\n    if (tkn.transferFrom(msg.sender, address(this), currentBalance)) {\r\n      addresIndex += 1;\r\n      indexedAddress[addresIndex] = msg.sender;\r\n      deposits[msg.sender] = currentBalance;\r\n      ethtoeosAddress[msg.sender] = _eosAddress;\r\n      eostoethAddress[_addressHash] = msg.sender;\r\n      emit NewDeposit(msg.sender, currentBalance, _eosAddress);\r\n    }\r\n  }\r\n\r\n  function checkAddressDeposit(address _address) public view returns (uint256) {\r\n      return(deposits[_address]);\r\n  }\r\n  \r\n  function checkAddressEOS(address _address) public view returns (string) {\r\n      return(ethtoeosAddress[_address]);\r\n  }\r\n\r\n  function checkAddressETH(bytes32 _address) public view returns (address) {\r\n      return(eostoethAddress[_address]);\r\n  }\r\n  \r\n  event NewDeposit(address senderAccount, uint256 amount, string eosAddress);\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"bytes32\"}],\"name\":\"checkAddressETH\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tkn\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eostoethAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkAddressDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethtoeosAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"activateExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addresIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressHash\",\"type\":\"bytes32\"},{\"name\":\"_eosAddress\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkAddressEOS\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"senderAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eosAddress\",\"type\":\"string\"}],\"name\":\"NewDeposit\",\"type\":\"event\"}]","ContractName":"GymRewardsExchange","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b8f14af457fdd7f7855f9dfc94b3cb4a11ef8e2c9f99d6073d2ff14f04c748e1"}]}