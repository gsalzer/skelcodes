{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract MinimalTokenInterface {\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    function decimals() public returns (uint8);\r\n}\r\n\r\ncontract TokenPriveProviderInterface {\r\n    function tokenPrice() public constant returns (uint);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Dividends implementation interface\r\n// ----------------------------------------------------------------------------\r\ncontract SNcoin_AgentsSale is Owned {\r\n    MinimalTokenInterface public tokenContract;\r\n    address public spenderAddress;\r\n    address public vaultAddress;\r\n    bool public fundingEnabled;\r\n    uint public totalCollected;         // In wei\r\n    TokenPriveProviderInterface public tokenPriceProvider;         // In wei\r\n    mapping(address => address) agents;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor(address _tokenAddress, address _spenderAddress, address _vaultAddress, bool _fundingEnabled, address _tokenPriceProvider) public {\r\n        require (_tokenAddress != 0);\r\n        require (_spenderAddress != 0);\r\n        require (_vaultAddress != 0);\r\n        require (_tokenPriceProvider != 0);\r\n        tokenContract = MinimalTokenInterface(_tokenAddress);\r\n        spenderAddress = _spenderAddress;\r\n        vaultAddress = _vaultAddress;\r\n        fundingEnabled = _fundingEnabled;\r\n        tokenPriceProvider = TokenPriveProviderInterface(_tokenPriceProvider);\r\n    }\r\n\r\n    function setSpenderAddress(address _spenderAddress) public onlyOwner {\r\n        require (_spenderAddress != 0);\r\n        spenderAddress = _spenderAddress;\r\n        return;\r\n    }\r\n\r\n    function setVaultAddress(address _vaultAddress) public onlyOwner {\r\n        require (_vaultAddress != 0);\r\n        vaultAddress = _vaultAddress;\r\n        return;\r\n    }\r\n\r\n    function setFundingEnabled(bool _fundingEnabled) public onlyOwner {\r\n        fundingEnabled = _fundingEnabled;\r\n        return;\r\n    }\r\n\r\n    function updateTokenPriceProvider(address _newTokenPriceProvider) public onlyOwner {\r\n        require(_newTokenPriceProvider != 0);\r\n        tokenPriceProvider = TokenPriveProviderInterface(_newTokenPriceProvider);\r\n        require(tokenPriceProvider.tokenPrice() > 10**9);\r\n        return;\r\n    }\r\n\r\n    function setAgentAddress(address _agentSigner, address _agentAddress) public onlyOwner {\r\n        require (_agentSigner != 0);\r\n        agents[_agentSigner] = _agentAddress;\r\n        return;\r\n    }\r\n\r\n    function buy(uint _discount, bytes _promocode) public payable {\r\n        require (fundingEnabled);\r\n        uint tokenPrice = tokenPriceProvider.tokenPrice(); // In wei\r\n        require (tokenPrice > 10**9);\r\n        require (msg.value >= tokenPrice);\r\n        require (_discount <= 20);\r\n        require (_promocode.length == 97);\r\n\r\n\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n        bytes32 h;\r\n        assembly {\r\n          r := mload(add(_promocode, 32))\r\n          s := mload(add(_promocode, 64))\r\n          v := and(mload(add(_promocode, 65)), 255)\r\n          h := mload(add(_promocode, 97))\r\n        }\r\n\r\n        // https://github.com/ethereum/go-ethereum/issues/2053\r\n        if (v < 27) {\r\n          v += 27;\r\n        }\r\n        require ((v == 27) || (v == 28));\r\n\r\n        address agentSigner = ecrecover(h, v, r, s);\r\n        require (agentSigner != 0);\r\n        require (agents[agentSigner] != 0);\r\n        bytes32 check_h = keccak256(abi.encodePacked(_discount, msg.sender));\r\n        require (check_h == h);\r\n\r\n        uint remVal = ((20 - _discount)*msg.value)/100;\r\n        totalCollected += msg.value - remVal;\r\n        uint discountedPrice = ((100 - _discount)*tokenPrice)/100;\r\n        uint tokens = (msg.value * 10**uint256(tokenContract.decimals())) / discountedPrice;\r\n\r\n        require (tokenContract.transferFrom(spenderAddress, msg.sender, tokens));\r\n        //Send the ether to the vault\r\n        vaultAddress.transfer(msg.value - remVal);\r\n        agents[agentSigner].transfer(remVal);\r\n\r\n        return;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Don't accept plain ETH transfers\r\n    // ------------------------------------------------------------------------\r\n    function () public payable {\r\n        revert();\r\n    }\r\n\r\n    /// @notice This method can be used by the owner to extract mistakenly\r\n    ///  sent tokens to this contract.\r\n    /// @param _token The address of the token contract that you want to recover\r\n    ///  set to 0 in case you want to extract ether.\r\n    function claimTokens(address _token) public onlyOwner {\r\n        if (_token == 0x0) {\r\n            owner.transfer(address(this).balance);\r\n            return;\r\n        }\r\n\r\n        MinimalTokenInterface token = MinimalTokenInterface(_token);\r\n        uint balance = token.balanceOf(this);\r\n        token.transfer(owner, balance);\r\n        emit ClaimedTokens(_token, owner, balance);\r\n    }\r\n\r\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokenPriceProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenPriceProvider\",\"type\":\"address\"}],\"name\":\"updateTokenPriceProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spenderAddress\",\"type\":\"address\"}],\"name\":\"setSpenderAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_discount\",\"type\":\"uint256\"},{\"name\":\"_promocode\",\"type\":\"bytes\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"name\":\"setVaultAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spenderAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundingEnabled\",\"type\":\"bool\"}],\"name\":\"setFundingEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agentSigner\",\"type\":\"address\"},{\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"setAgentAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_spenderAddress\",\"type\":\"address\"},{\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"name\":\"_fundingEnabled\",\"type\":\"bool\"},{\"name\":\"_tokenPriceProvider\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SNcoin_AgentsSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008c211128f8d232935afd80543e442f894a4355b7000000000000000000000000274bd5264970e1a92a763e2a761e63058b9e4f4e000000000000000000000000120a517ba4a77499713413403e97c6867f0af5ce0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000390146eaf11213438694f536151c5a60e050f8be","Library":"","SwarmSource":"bzzr://3ad1bd512207e52d86536218859b743e44a6a0e03a13a89ed9503495ff129aa2"}]}