{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\r\ncontract PluginInterface\r\n{\r\n    /// @dev simply a boolean to indicate this is the contract we expect to be\r\n    function isPluginInterface() public pure returns (bool);\r\n\r\n    function onRemove() public;\r\n\r\n    /// @dev Begins new feature.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    /// @param _seller - Old owner, if not the message sender\r\n    function run(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _seller\r\n    ) \r\n    public\r\n    payable;\r\n\r\n    /// @dev Begins new feature, approved and signed by COO.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    function runSigned(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _owner\r\n    )\r\n    external\r\n    payable;\r\n\r\n    function withdraw() public;\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\r\n/// @author https://BlockChainArchitect.io\r\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\r\ncontract ConfigInterface\r\n{\r\n    function isConfig() public pure returns (bool);\r\n\r\n    function getCooldownIndexFromGeneration(uint16 _generation) public view returns (uint16);\r\n    \r\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) public view returns (uint40);\r\n\r\n    function getCooldownIndexCount() public view returns (uint256);\r\n    \r\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) public pure returns (uint16);\r\n\r\n    function getTutorialBabyGen(uint16 _dadGen) public pure returns (uint16);\r\n\r\n    function getBreedingFee(uint40 _momId, uint40 _dadId) public view returns (uint256);\r\n}\r\n\r\n\r\ncontract CutieCoreInterface\r\n{\r\n    function isCutieCore() pure public returns (bool);\r\n\r\n    ConfigInterface public config;\r\n\r\n    function transferFrom(address _from, address _to, uint256 _cutieId) external;\r\n    function transfer(address _to, uint256 _cutieId) external;\r\n\r\n    function ownerOf(uint256 _cutieId)\r\n        external\r\n        view\r\n        returns (address owner);\r\n\r\n    function getCutie(uint40 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 genes,\r\n        uint40 birthTime,\r\n        uint40 cooldownEndTime,\r\n        uint40 momId,\r\n        uint40 dadId,\r\n        uint16 cooldownIndex,\r\n        uint16 generation\r\n    );\r\n\r\n    function getGenes(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint256 genes\r\n    );\r\n\r\n\r\n    function getCooldownEndTime(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint40 cooldownEndTime\r\n    );\r\n\r\n    function getCooldownIndex(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 cooldownIndex\r\n    );\r\n\r\n\r\n    function getGeneration(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 generation\r\n    );\r\n\r\n    function getOptional(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint64 optional\r\n    );\r\n\r\n\r\n    function changeGenes(\r\n        uint40 _cutieId,\r\n        uint256 _genes)\r\n        public;\r\n\r\n    function changeCooldownEndTime(\r\n        uint40 _cutieId,\r\n        uint40 _cooldownEndTime)\r\n        public;\r\n\r\n    function changeCooldownIndex(\r\n        uint40 _cutieId,\r\n        uint16 _cooldownIndex)\r\n        public;\r\n\r\n    function changeOptional(\r\n        uint40 _cutieId,\r\n        uint64 _optional)\r\n        public;\r\n\r\n    function changeGeneration(\r\n        uint40 _cutieId,\r\n        uint16 _generation)\r\n        public;\r\n\r\n    function createSaleAuction(\r\n        uint40 _cutieId,\r\n        uint128 _startPrice,\r\n        uint128 _endPrice,\r\n        uint40 _duration\r\n    )\r\n    public;\r\n\r\n    function getApproved(uint256 _tokenId) external returns (address);\r\n}\r\n\r\n\r\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\r\ncontract CutiePluginBase is PluginInterface, Pausable\r\n{\r\n    function isPluginInterface() public pure returns (bool)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    // Reference to contract tracking NFT ownership\r\n    CutieCoreInterface public coreContract;\r\n\r\n    // Cut owner takes on each auction, measured in basis points (1/100 of a percent).\r\n    // Values 0-10,000 map to 0%-100%\r\n    uint16 public ownerFee;\r\n\r\n    // @dev Throws if called by any account other than the owner.\r\n    modifier onlyCore() {\r\n        require(msg.sender == address(coreContract));\r\n        _;\r\n    }\r\n\r\n    /// @dev Constructor creates a reference to the NFT ownership contract\r\n    ///  and verifies the owner cut is in the valid range.\r\n    /// @param _coreAddress - address of a deployed contract implementing\r\n    ///  the Nonfungible Interface.\r\n    /// @param _fee - percent cut the owner takes on each auction, must be\r\n    ///  between 0-10,000.\r\n    function setup(address _coreAddress, uint16 _fee) public {\r\n        require(_fee <= 10000);\r\n        require(msg.sender == owner);\r\n        ownerFee = _fee;\r\n        \r\n        CutieCoreInterface candidateContract = CutieCoreInterface(_coreAddress);\r\n        require(candidateContract.isCutieCore());\r\n        coreContract = candidateContract;\r\n    }\r\n\r\n    // @dev Set the owner's fee.\r\n    //  @param fee should be between 0-10,000.\r\n    function setFee(uint16 _fee) public\r\n    {\r\n        require(_fee <= 10000);\r\n        require(msg.sender == owner);\r\n\r\n        ownerFee = _fee;\r\n    }\r\n\r\n    /// @dev Returns true if the claimant owns the token.\r\n    /// @param _claimant - Address claiming to own the token.\r\n    /// @param _cutieId - ID of token whose ownership to verify.\r\n    function _isOwner(address _claimant, uint40 _cutieId) internal view returns (bool) {\r\n        return (coreContract.ownerOf(_cutieId) == _claimant);\r\n    }\r\n\r\n    /// @dev Escrows the NFT, assigning ownership to this contract.\r\n    /// Throws if the escrow fails.\r\n    /// @param _owner - Current owner address of token to escrow.\r\n    /// @param _cutieId - ID of token whose approval to verify.\r\n    function _escrow(address _owner, uint40 _cutieId) internal {\r\n        // it will throw if transfer fails\r\n        coreContract.transferFrom(_owner, this, _cutieId);\r\n    }\r\n\r\n    /// @dev Transfers an NFT owned by this contract to another address.\r\n    /// Returns true if the transfer succeeds.\r\n    /// @param _receiver - Address to transfer NFT to.\r\n    /// @param _cutieId - ID of token to transfer.\r\n    function _transfer(address _receiver, uint40 _cutieId) internal {\r\n        // it will throw if transfer fails\r\n        coreContract.transfer(_receiver, _cutieId);\r\n    }\r\n\r\n    /// @dev Computes owner's cut of a sale.\r\n    /// @param _price - Sale price of NFT.\r\n    function _computeFee(uint128 _price) internal view returns (uint128) {\r\n        // NOTE: We don't use SafeMath (or similar) in this function because\r\n        //  all of our entry functions carefully cap the maximum values for\r\n        //  currency (at 128-bits), and ownerFee <= 10000 (see the require()\r\n        //  statement in the ClockAuction constructor). The result of this\r\n        //  function is always guaranteed to be <= _price.\r\n        return _price * ownerFee / 10000;\r\n    }\r\n\r\n    function withdraw() public\r\n    {\r\n        require(\r\n            msg.sender == owner ||\r\n            msg.sender == address(coreContract)\r\n        );\r\n        if (address(this).balance > 0)\r\n        {\r\n            address(coreContract).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function onRemove() public onlyCore\r\n    {\r\n        withdraw();\r\n    }\r\n\r\n    function run(\r\n        uint40,\r\n        uint256,\r\n        address\r\n    ) \r\n        public\r\n        payable\r\n        onlyCore\r\n    {\r\n        revert();\r\n    }\r\n}\r\n\r\n\r\n/// @dev Receives payments for payd features from players for Blockchain Cuties\r\n/// @author https://BlockChainArchitect.io\r\ncontract BuyEnergy is CutiePluginBase\r\n{\r\n    function run(\r\n        uint40,\r\n        uint256,\r\n        address\r\n    )\r\n        public\r\n        payable\r\n        onlyCore\r\n    {\r\n        revert();\r\n    }\r\n\r\n    function runSigned(uint40, uint256, address)\r\n        external\r\n        payable\r\n        onlyCore\r\n    {\r\n        // just accept payments\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"onRemove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPluginInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"runSigned\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"run\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_coreAddress\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BuyEnergy","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://559bb4a9c430b3864b366ba9d594d3b7b9b3abd959e6caae51e428beb57c35ad"}]}