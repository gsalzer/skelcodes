{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\ncontract EternalStorage {\r\n\r\n    mapping(bytes32 => uint256) internal uintStorage;\r\n    mapping(bytes32 => string) internal stringStorage;\r\n    mapping(bytes32 => address) internal addressStorage;\r\n    mapping(bytes32 => bytes) internal bytesStorage;\r\n    mapping(bytes32 => bool) internal boolStorage;\r\n    mapping(bytes32 => int256) internal intStorage;\r\n\r\n}\r\n\r\ncontract UpgradeabilityOwnerStorage {\r\n\r\n    address private _upgradeabilityOwner;\r\n\r\n    function upgradeabilityOwner() public view returns (address) {\r\n        return _upgradeabilityOwner;\r\n    }\r\n\r\n    function setUpgradeabilityOwner(address newUpgradeabilityOwner) internal {\r\n        _upgradeabilityOwner = newUpgradeabilityOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract Proxy {\r\n\r\n    function () public payable {\r\n        address _impl = implementation();\r\n        require(_impl != address(0));\r\n        bytes memory data = msg.data;\r\n\r\n        assembly {\r\n            let result := delegatecall(gas, _impl, add(data, 0x20), mload(data), 0, 0)\r\n            let size := returndatasize\r\n\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n\r\n\r\n    function implementation() public view returns (address);\r\n}\r\n\r\n\r\n\r\ncontract UpgradeabilityStorage {\r\n\r\n    string internal _version;\r\n\r\n    address internal _implementation;\r\n\r\n    function version() public view returns (string) {\r\n        return _version;\r\n    }\r\n\r\n    function implementation() public view returns (address) {\r\n        return _implementation;\r\n    }\r\n}\r\n\r\n\r\ncontract UpgradeabilityProxy is Proxy, UpgradeabilityStorage {\r\n    \r\n    event Upgraded(string version, address indexed implementation);\r\n\r\n    function _upgradeTo(string version, address implementation) internal {\r\n        require(_implementation != implementation);\r\n        _version = version;\r\n        _implementation = implementation;\r\n        emit Upgraded(version, implementation);\r\n    }\r\n}\r\n\r\n\r\ncontract OwnedUpgradeabilityProxy is UpgradeabilityOwnerStorage, UpgradeabilityProxy {\r\n    event ProxyOwnershipTransferred(address previousOwner, address newOwner);\r\n\r\n    constructor(address _owner) public {\r\n        setUpgradeabilityOwner(_owner);\r\n    }\r\n\r\n    modifier onlyProxyOwner() {\r\n        require(msg.sender == proxyOwner());\r\n        _;\r\n    }\r\n\r\n    function proxyOwner() public view returns (address) {\r\n        return upgradeabilityOwner();\r\n    }\r\n\r\n    function transferProxyOwnership(address newOwner) public onlyProxyOwner {\r\n        require(newOwner != address(0));\r\n        emit ProxyOwnershipTransferred(proxyOwner(), newOwner);\r\n        setUpgradeabilityOwner(newOwner);\r\n    }\r\n\r\n    function upgradeTo(string version, address implementation) public onlyProxyOwner {\r\n        _upgradeTo(version, implementation);\r\n    }\r\n\r\n\r\n    function upgradeToAndCall(string version, address implementation, bytes data) payable public onlyProxyOwner {\r\n        upgradeTo(version, implementation);\r\n        require(address(this).call.value(msg.value)(data));\r\n    }\r\n}\r\n\r\n\r\ncontract EternalStorageProxyForAirdropper is OwnedUpgradeabilityProxy, EternalStorage {\r\n\r\n    constructor(address _owner) public OwnedUpgradeabilityProxy(_owner) {}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeabilityOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"implementation\",\"type\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"version\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]","ContractName":"EternalStorageProxyForAirdropper","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000f5327d631e35cb29044b2729e30b1806dd08074e","Library":"","SwarmSource":"bzzr://f112f59c351c3eb9af507a2d20adb14e5ef06c2964d0f01067d9b5293ea7313f"}]}