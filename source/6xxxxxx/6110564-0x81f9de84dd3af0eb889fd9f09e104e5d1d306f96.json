{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.16;\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address _owner) public constant returns(uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns(bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success);\r\n    function approve(address _spender, uint256 _value) public returns(bool success);\r\n    function allowance(address _owner, address _spender) public constant returns(uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract NBT is Token {\r\n\r\n    string public name;\r\n    uint256 public decimals;\r\n    string public symbol;\r\n    uint public startTime;\r\n    address public Short;\r\n    address public Long;\r\n    address public Team;\r\n    address public Reward;\r\n    address public Investment;\r\n    address public Foundation;\r\n    constructor(string _tokenName, string _tokenSymbol, address tempTeam, address tempReward, address tempInvestment, address tempFoundation) public {\r\n        name = _tokenName;\r\n        decimals = 18;\r\n        symbol = _tokenSymbol;\r\n        totalSupply = 1000000000 * 10 **uint256(decimals);\r\n        startTime = now;\r\n        Team = tempTeam;\r\n        Reward = tempReward;\r\n        Investment = tempInvestment;\r\n        Foundation = tempFoundation;\r\n\r\n        balances[Team] = totalSupply * 2 / 10;\r\n        balances[Reward] = totalSupply * 3 / 10;\r\n        balances[Investment] = totalSupply * 3 / 10;\r\n        balances[Foundation] = totalSupply * 2 / 10;\r\n        emit Transfer(0x0, Team, 200000000 * 10 **uint256(decimals));\r\n        emit Transfer(0x0, Reward, 300000000 * 10 **uint256(decimals));\r\n        emit Transfer(0x0, Investment, 300000000 * 10 **uint256(decimals));\r\n        emit Transfer(0x0, Foundation, 200000000 * 10 **uint256(decimals));\r\n    }\r\n\r\n\r\n    function setShort(address addr) public {\r\n        require(msg.sender == Investment);\r\n        Short = addr;\r\n    }\r\n\r\n\r\n    function setLong(address addr) public {\r\n        require(msg.sender == Investment);\r\n        Long = addr;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns(bool success) {\r\n        if (msg.sender == Team) {\r\n            uint timeTemp = (now - startTime) / 60 / 60 / 24 / 100;\r\n            if (timeTemp > 10) {\r\n                timeTemp = 10;\r\n            }\r\n            require(balances[msg.sender] - _value >= (totalSupply / 5 - totalSupply * timeTemp / 50));\r\n            record(_to, _value);\r\n        }\r\n\r\n        if (msg.sender == Short) {\r\n            require(balances[msg.sender] >= _value);\r\n            record(_to, _value);\r\n        }\r\n\r\n        if (msg.sender == Long) {\r\n            require(balances[msg.sender] >= _value);\r\n            longRecord(_to, _value);\r\n        }\r\n\r\n        if (number[msg.sender] != 0) {\r\n            judge(_value, msg.sender);\r\n        }\r\n\r\n        if (longNumber[msg.sender] != 0) {\r\n            longJudge(_value, msg.sender);\r\n        }\r\n\r\n        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\r\n        require(_to != 0x0);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) {\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function record(address iniadr, uint256 account) private {\r\n        uint256[] storage T = time[iniadr];\r\n        T.push(now);\r\n        time[iniadr] = T;\r\n        uint256[] storage A = init[iniadr];\r\n        A.push(account);\r\n        init[iniadr] = A;\r\n        number[iniadr] = 1;\r\n    }\r\n\r\n    function longRecord(address iniadr, uint256 account) private {\r\n        uint256[] storage T = longTime[iniadr];\r\n        T.push(now);\r\n        longTime[iniadr] = T;\r\n        uint256[] storage A = longInit[iniadr];\r\n        A.push(account);\r\n        longInit[iniadr] = A;\r\n        longNumber[iniadr] = 1;\r\n    }\r\n\r\n    function judge(uint256 _value, address addr) private {\r\n        uint256[] storage T = time[addr];\r\n        uint256[] storage A = init[addr];\r\n        number[addr] = 0;\r\n        for (uint i = 0; i < T.length; i++) {\r\n            if (now < (T[i] + 100 days)) {\r\n                number[addr] += A[i];\r\n            }\r\n        }\r\n        require(balances[addr] - _value >= number[addr]);\r\n    }\r\n\r\n    function longJudge(uint256 _value, address addr) private {\r\n        uint256[] storage T = longTime[addr];\r\n        uint256[] storage A = longInit[addr];\r\n        longNumber[addr] = 0;\r\n        for (uint i = 0; i < T.length; i++) {\r\n            if (now < (T[i] + 1000 days)) {\r\n                longNumber[addr] += A[i];\r\n            }\r\n        }\r\n        require(balances[addr] - _value >= longNumber[addr]);\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns(uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns(bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns(uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function benchTransfer(address[] addr, uint256[] num) public {\r\n        require(addr.length == num.length);\r\n        for (uint i = 0; i < num.length; i++) {\r\n\r\n            transfer(addr[i], num[i] * 10 **uint256(decimals));\r\n        }\r\n    }\r\n\r\n    mapping(address =>uint256) balances;\r\n    mapping(address =>mapping(address =>uint256)) allowed;\r\n\r\n    mapping(address =>uint256[]) time;\r\n    mapping(address =>uint256[]) init;\r\n    mapping(address =>uint256) number;\r\n    mapping(address =>uint256[]) longTime;\r\n    mapping(address =>uint256[]) longInit;\r\n    mapping(address =>uint256) longNumber;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Long\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setLong\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Team\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Short\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Foundation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Investment\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address[]\"},{\"name\":\"num\",\"type\":\"uint256[]\"}],\"name\":\"benchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Reward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setShort\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"tempTeam\",\"type\":\"address\"},{\"name\":\"tempReward\",\"type\":\"address\"},{\"name\":\"tempInvestment\",\"type\":\"address\"},{\"name\":\"tempFoundation\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NBT","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000dd0f561cbee18917c8cc42a004fa00fa7e7cc43f000000000000000000000000220ca93ea1f554b17626e255e297131b73e1ace90000000000000000000000008f697facb76a9678b366819af577e8409868f96d000000000000000000000000edb39422a08d7768006f9569a1fc61e1556bbae500000000000000000000000000000000000000000000000000000000000000174e756767657420426c6f636b636861696e20546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000034e42540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://f26124c5acc13fab5a86cf0d74c6cd11f78d8e336a1aea6d1d7686f16323803f"}]}