{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Prize {\r\n    event Successful(address winner, uint withdrawableHeight);\r\n\r\n    bytes32 private flagHash;\r\n\r\n    mapping(address => bytes32) private commits;\r\n    mapping(address => uint) private heights;\r\n\r\n    address payable private winner;\r\n    uint private withdrawableHeight;\r\n\r\n    constructor(bytes32 _flagHash) public payable {\r\n        flagHash = _flagHash;\r\n        withdrawableHeight = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n    }\r\n\r\n    function commit(bytes32 commitment) external {\r\n        commits[msg.sender] = commitment;\r\n        heights[msg.sender] = block.number + 256;\r\n    }\r\n    function reveal(bytes32 flag) external {\r\n        require(calcFlagHash(flag) == flagHash);\r\n        require(calcCommitment(flag, msg.sender) == commits[msg.sender]);\r\n        require(heights[msg.sender] < withdrawableHeight);\r\n        emit Successful(\r\n            winner = msg.sender,\r\n            withdrawableHeight = heights[msg.sender]\r\n        );\r\n    }\r\n    function withdraw() external {\r\n        require(msg.sender == winner);\r\n        require(block.number >= withdrawableHeight);\r\n        selfdestruct(winner);\r\n    }\r\n\r\n    function calcFlagHash(bytes32 flag) public pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(flag));\r\n    }\r\n    function calcCommitment(bytes32 flag, address sender) public pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(flag, sender));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"flag\",\"type\":\"bytes32\"},{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"calcCommitment\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"flag\",\"type\":\"bytes32\"}],\"name\":\"reveal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"flag\",\"type\":\"bytes32\"}],\"name\":\"calcFlagHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_flagHash\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"withdrawableHeight\",\"type\":\"uint256\"}],\"name\":\"Successful\",\"type\":\"event\"}]","ContractName":"Prize","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"4e2805a52004f1e2a4dbd223785f60829a2b50e1e45279505fddd3465bc896ec","Library":"","SwarmSource":"bzzr://cf448c45ea90ac2831a22c195f7019edf12302382ef1c95e4f581d1b50e1edf8"}]}