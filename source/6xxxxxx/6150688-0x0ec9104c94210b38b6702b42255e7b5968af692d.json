{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract IERC20Token {\r\n    function name() public view returns (string) ;\r\n    function symbol() public view returns (string); \r\n    function decimals() public view returns (uint8); \r\n    function totalSupply() public view returns (uint256); \r\n    function balanceOf(address _owner) public view returns (uint256);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\n\r\ncontract BREBuy_ERC20 {\r\n    \r\n    struct ContractParam {\r\n        uint32  totalSize ; \r\n        uint256 singlePrice;\r\n        uint8  pumpRate;\r\n        bool hasChange;\r\n    }\r\n    uint256 public constant PRICE = 1;\r\n    address owner = 0x0;\r\n    uint32  gameIndex = 0;\r\n    uint256 totalPrice= 0;\r\n    ContractParam public setConfig;\r\n    ContractParam public curConfig;\r\n    IERC20Token public token;\r\n    address[] public addressArray = new address[](0);\r\n\r\n    event addPlayerEvent(uint32,address);\r\n    event GameOverEvent(uint32,uint32,uint256,uint8,address,uint);\r\n \r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor ( uint32 _totalSize,\r\n                  uint256 _singlePrice,\r\n                  address tokenAddr\r\n    )  public payable  {\r\n        owner = msg.sender;\r\n        setConfig = ContractParam(_totalSize,_singlePrice * PRICE ,5,false);\r\n        curConfig = ContractParam(_totalSize,_singlePrice * PRICE ,5,false);\r\n        token = IERC20Token(tokenAddr);\r\n        startNewGame();\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n    \r\n\r\n     \r\n    \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public {\r\n       \r\n        IERC20Token t = IERC20Token(_token);\r\n        \r\n        require(_token == address(token) );\r\n        require(_value == curConfig.singlePrice );\r\n        require(t.transferFrom(_from, this, _value));\r\n        addPlayer(_from);\r\n    }\r\n    \r\n    function changeConfig( uint32 _totalSize,uint256 _singlePrice,uint8 _pumpRate) onlyOwner public payable {\r\n    \r\n        curConfig.hasChange = true;\r\n        if(setConfig.totalSize != _totalSize) {\r\n            setConfig.totalSize = _totalSize;\r\n        }\r\n        if(setConfig.pumpRate  != _pumpRate){\r\n            setConfig.pumpRate  = _pumpRate;\r\n        }\r\n        if(setConfig.singlePrice != _singlePrice * PRICE){\r\n            setConfig.singlePrice = _singlePrice * PRICE;\r\n        }\r\n    }\r\n    \r\n    function startNewGame() private {\r\n        \r\n        gameIndex++;\r\n        if(curConfig.hasChange) {\r\n            if(curConfig.totalSize   != setConfig.totalSize) {\r\n                curConfig.totalSize   = setConfig.totalSize;\r\n            }\r\n            if(curConfig.singlePrice != setConfig.singlePrice){\r\n               curConfig.singlePrice = setConfig.singlePrice; \r\n            }\r\n            if( curConfig.pumpRate    != setConfig.pumpRate) {\r\n                curConfig.pumpRate    = setConfig.pumpRate;\r\n            }\r\n            curConfig.hasChange = false;\r\n        }\r\n        addressArray.length=0;\r\n    }\r\n     \r\n  \r\n    function addPlayer(address player) private  {\r\n    \r\n        totalPrice = totalPrice + curConfig.singlePrice;\r\n        addressArray.push(player);\r\n       \r\n        emit addPlayerEvent(gameIndex,player);\r\n        if(addressArray.length >= curConfig.totalSize) {\r\n            gameResult();\r\n            startNewGame();\r\n        }\r\n    } \r\n    \r\n    function getGameInfo() public view returns  (uint256,uint32,uint256,uint8,address[],uint256,uint256)  {\r\n        return (gameIndex,\r\n                curConfig.totalSize,\r\n                curConfig.singlePrice,\r\n                curConfig.pumpRate,\r\n                addressArray,\r\n                totalPrice,\r\n                token.balanceOf(msg.sender));\r\n    }\r\n    \r\n    function gameResult() private {\r\n            \r\n      uint index  = getRamdon();\r\n      address lastAddress = addressArray[index];\r\n      uint256 totalBalace = token.balanceOf(this);\r\n      uint256 giveToOwn   = totalBalace * curConfig.pumpRate / 100;\r\n      uint256 giveToActor = totalBalace - giveToOwn;\r\n      \r\n      token.transfer(owner,giveToOwn);\r\n      token.transfer(lastAddress,giveToActor);\r\n \r\n      emit GameOverEvent(\r\n                    gameIndex,\r\n                    curConfig.totalSize,\r\n                    curConfig.singlePrice,\r\n                    curConfig.pumpRate,\r\n                    lastAddress,\r\n                    now);\r\n    }\r\n    \r\n    function getRamdon() private view returns (uint) {\r\n      bytes32 ramdon = keccak256(abi.encodePacked(ramdon,now,blockhash(block.number-1)));\r\n      for(uint i = 0; i < addressArray.length; i++) {\r\n         ramdon = keccak256(abi.encodePacked(ramdon,now, addressArray[i]));\r\n      }\r\n      uint index  = uint(ramdon) % addressArray.length;\r\n      return index;\r\n    }\r\n    \r\n    function () payable public {\r\n       require(msg.value == 0);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"curConfig\",\"outputs\":[{\"name\":\"totalSize\",\"type\":\"uint32\"},{\"name\":\"singlePrice\",\"type\":\"uint256\"},{\"name\":\"pumpRate\",\"type\":\"uint8\"},{\"name\":\"hasChange\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGameInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_totalSize\",\"type\":\"uint32\"},{\"name\":\"_singlePrice\",\"type\":\"uint256\"},{\"name\":\"_pumpRate\",\"type\":\"uint8\"}],\"name\":\"changeConfig\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[{\"name\":\"totalSize\",\"type\":\"uint32\"},{\"name\":\"singlePrice\",\"type\":\"uint256\"},{\"name\":\"pumpRate\",\"type\":\"uint8\"},{\"name\":\"hasChange\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totalSize\",\"type\":\"uint32\"},{\"name\":\"_singlePrice\",\"type\":\"uint256\"},{\"name\":\"tokenAddr\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"addPlayerEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"GameOverEvent\",\"type\":\"event\"}]","ContractName":"BREBuy_ERC20","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000aeb29bdd2f71b625b86b1e6ba4f6c159641e1850","Library":"","SwarmSource":"bzzr://de4bd8ab7bc9beadd329c272d2a892c3f4b19ef3be8e374e015338978ac37c96"}]}