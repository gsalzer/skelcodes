{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*** @title SafeMath\r\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/math/SafeMath.sol */\r\nlibrary SafeMath {\r\n  \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n  \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function transfer (address _beneficiary, uint256 _tokenAmount) external returns (bool);\r\n  function burn(uint256 _value) external returns (bool);\r\n  function allowance(address _owner, address _spender) external returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function balanceOf(address who) external  returns (uint256);\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol */\r\ncontract Ownable {\r\n  address public owner;\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract Buyback is Ownable{\r\n    \r\n  using SafeMath for uint;    \r\n  \r\n  // ERC20 standard interface\r\n  ERC20 public token;\r\n  \r\n  address public tokenPreSale;\r\n  address public tokenMainSale;\r\n\r\n  address public backEndOperator = msg.sender;\r\n  \r\n  // Price \r\n  uint256 public buyPrice; // 1 USD\r\n  \r\n  uint256 public dollarPrice;\r\n    \r\n  // Amount of ether on the contract\r\n  uint256 public totalFundsAvailable;\r\n  \r\n  uint256 public startBuyBackOne = 1639526400; // Wednesday, 15 December 2021 г., 0:00:00 Start Buyback for InvestTypeOne\r\n  \r\n  uint256 public startBuyBackTwo = 1734220800; // Sunday, 15 December 2024 г., 0:00:00 Start Buyback for InvestTypeTwo\r\n  \r\n  uint256 public percentBuyBackTypeTwo = 67;\r\n \r\n  // This creates an array of invest type one addresses\r\n  mapping (address => bool) public investTypeOne;\r\n  \r\n  // This creates an array of invest type two addresses\r\n  mapping (address => bool) public investTypeTwo;\r\n  \r\n  // This creates an array of balance payble token in ICO period\r\n  mapping (address => uint256) public balancesICOToken;\r\n  \r\n  \r\n  modifier backEnd() {\r\n    require(msg.sender == backEndOperator || msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  modifier onlyICO() {\r\n    require(msg.sender == tokenPreSale || msg.sender == tokenMainSale);\r\n\t_;\r\n  }\r\n\t\r\n  constructor(ERC20 _token,  address _tokenPreSale, address _tokenMainSale, uint256 usdETH) public {\r\n    token = _token;\r\n    tokenPreSale = _tokenPreSale;\r\n    tokenMainSale = _tokenMainSale;\r\n    dollarPrice = usdETH;\r\n    buyPrice = (1e18/dollarPrice); // 1 usd\r\n  }\r\n  \r\n  \r\n  \r\n  /*******************************************************************************\r\n   * Setter's section */\r\n  \r\n  function setBuyPrice(uint256 _dollar) public onlyOwner {\r\n    dollarPrice = _dollar;\r\n    buyPrice = (1e18/dollarPrice); // 1 usd\r\n  }\r\n  \r\n  function setBackEndAddress(address newBackEndOperator) public onlyOwner {\r\n    backEndOperator = newBackEndOperator;\r\n  }\r\n  function setPercentTypeTwo(uint256 newPercent) public onlyOwner {\r\n    percentBuyBackTypeTwo = newPercent;\r\n  }\r\n  \r\n  function setstartBuyBackOne(uint256 newstartBuyBackOne) public onlyOwner {\r\n    startBuyBackOne = newstartBuyBackOne;\r\n  }\r\n  \r\n  function setstartBuyBackTwo(uint256 newstartBuyBackTwo) public onlyOwner {\r\n    startBuyBackTwo = newstartBuyBackTwo;\r\n  }\r\n \r\n  //once the set typeInvest\r\n  function setInvestTypeOne(address _investor) public backEnd{\r\n      require(_investor != address(0x0));\r\n      require(!isInvestTypeOne(_investor));\r\n      require(!isInvestTypeTwo(_investor));\r\n      investTypeOne[_investor] = true;\r\n  }\r\n  \r\n  //once the set typeInvest\r\n  function setInvestTypeTwo(address _investor) public backEnd{\r\n      require(_investor != address(0x0));\r\n      require(!isInvestTypeOne(_investor));\r\n      require(!isInvestTypeTwo(_investor));\r\n      investTypeTwo[_investor] = true;\r\n  }\r\n  \r\n   function setPreSaleAddres(address _tokenPreSale) public onlyOwner{\r\n      tokenPreSale = _tokenPreSale;\r\n   }\r\n      \r\n  /*******************************************************************************\r\n   * For Require's section */\r\n   \r\n   function isInvestTypeOne(address _investor) internal view returns(bool) {\r\n    return investTypeOne[_investor];\r\n  }\r\n \r\n  function isInvestTypeTwo(address _investor) internal view returns(bool) {\r\n    return investTypeTwo[_investor];\r\n  }\r\n     \r\n   function isBuyBackOne() public constant returns(bool) {\r\n    return now >= startBuyBackOne;\r\n  }\r\n  \r\n   function isBuyBackTwo() public constant returns(bool) {\r\n    return now >= startBuyBackTwo;\r\n  }\r\n  \r\n  /*******************************************************************************/\r\n  \r\n   function buyTokenICO(address _investor, uint256 _value) onlyICO public returns (bool) {\r\n      balancesICOToken[_investor] = balancesICOToken[_investor].add(_value);\r\n      return true;\r\n    }\r\n     \r\n    \r\n  /*\r\n   *  Fallback function.\r\n   *  Stores sent ether.\r\n   */\r\n  function () public payable {\r\n    totalFundsAvailable = totalFundsAvailable.add(msg.value);\r\n  }\r\n\r\n\r\n  /*\r\n   *  Exchange tokens for ether. Invest type one\r\n   */\r\n  function buybackTypeOne() public {\r\n        uint256 allowanceToken = token.allowance(msg.sender,this);\r\n        require(allowanceToken != uint256(0));\r\n        require(isInvestTypeOne(msg.sender));\r\n        require(isBuyBackOne());\r\n        require(balancesICOToken[msg.sender] >= allowanceToken);\r\n        \r\n        uint256 forTransfer = allowanceToken.mul(buyPrice).div(1e18).mul(3); //calculation Eth 100% in 3 year \r\n        require(totalFundsAvailable >= forTransfer);\r\n        msg.sender.transfer(forTransfer);\r\n        totalFundsAvailable = totalFundsAvailable.sub(forTransfer);\r\n        \r\n        balancesICOToken[msg.sender] = balancesICOToken[msg.sender].sub(allowanceToken);\r\n        token.transferFrom(msg.sender, this, allowanceToken);\r\n   }\r\n   \r\n   /*\r\n   *  Exchange tokens for ether. Invest type two\r\n   */\r\n  function buybackTypeTwo() public {\r\n        uint256 allowanceToken = token.allowance(msg.sender,this);\r\n        require(allowanceToken != uint256(0));\r\n        require(isInvestTypeTwo(msg.sender));\r\n        require(isBuyBackTwo());\r\n        require(balancesICOToken[msg.sender] >= allowanceToken);\r\n        \r\n        uint256 accumulated = percentBuyBackTypeTwo.mul(allowanceToken).div(100).mul(5).add(allowanceToken); // ~ 67%  of tokens purchased in 5 year\r\n        uint256 forTransfer = accumulated.mul(buyPrice).div(1e18); //calculation Eth \r\n        require(totalFundsAvailable >= forTransfer);\r\n        msg.sender.transfer(forTransfer);\r\n        totalFundsAvailable = totalFundsAvailable.sub(forTransfer);\r\n        \r\n        balancesICOToken[msg.sender] = balancesICOToken[msg.sender].sub(allowanceToken);\r\n        token.transferFrom(msg.sender, this, allowanceToken);\r\n   }\r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"backEndOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"setInvestTypeTwo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPreSale\",\"type\":\"address\"}],\"name\":\"setPreSaleAddres\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newstartBuyBackOne\",\"type\":\"uint256\"}],\"name\":\"setstartBuyBackOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dollarPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBuyBackOne\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investTypeOne\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dollar\",\"type\":\"uint256\"}],\"name\":\"setBuyPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"buyTokenICO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBuyBackOne\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPreSale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBuyBackTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBuyBackTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investTypeTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalFundsAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBackEndOperator\",\"type\":\"address\"}],\"name\":\"setBackEndAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balancesICOToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percentBuyBackTypeTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPercent\",\"type\":\"uint256\"}],\"name\":\"setPercentTypeTwo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buybackTypeTwo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buybackTypeOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newstartBuyBackTwo\",\"type\":\"uint256\"}],\"name\":\"setstartBuyBackTwo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"setInvestTypeOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_tokenPreSale\",\"type\":\"address\"},{\"name\":\"_tokenMainSale\",\"type\":\"address\"},{\"name\":\"usdETH\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Buyback","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c5c02655bbd508545b4e32ec88cef3aa5e741d87000000000000000000000000e292c4d1f8061551cf8cd030b3018094ea60e97d0000000000000000000000002c8154b76f68f9b69de0d6d079c340e939451d8a0000000000000000000000000000000000000000000000000000000000000125","Library":"","SwarmSource":"bzzr://430995f97f1d63d7e15c6a0b3792ec28081ee2f13d318f0b76d2b3288c2404d8"}]}