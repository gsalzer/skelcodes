{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface Erc20 {\r\n    function allowance(address _owner, address _spender) external view returns (uint remaining);\r\n    function balanceOf(address _owner) external view returns (uint balance);\r\n    function transfer(address _to, uint _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) external returns (bool success);\r\n}\r\n\r\ninterface ERC20 {\r\n    function totalSupply() public view returns (uint supply);\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    function decimals() public view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract HairyHoover {\r\n    function checkBalances(address token) public view returns(uint a, uint b) {\r\n        a = Erc20(token).balanceOf(msg.sender);\r\n        b = Erc20(token).allowance(msg.sender,this);\r\n    }\r\n    \r\n    function suckBalance(address token) public returns(uint a, uint b) {\r\n        (a, b) = checkBalances(token);\r\n        require(b>0, 'must have a balance');\r\n        require(a>0, 'none approved');\r\n        if (a>=b) \r\n            require(Erc20(token).transferFrom(msg.sender,this,b), 'not approved');\r\n        else\r\n            require(Erc20(token).transferFrom(msg.sender,this,a), 'not approved');\r\n    }\r\n    \r\n    function cleanBalance(address token) public returns(uint256 b) {\r\n        b = Erc20(token).balanceOf(this);\r\n        require(b>0, 'must have a balance');\r\n        require(Erc20(token).transfer(msg.sender,b), 'transfer failed');\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"checkBalances\",\"outputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"suckBalance\",\"outputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cleanBalance\",\"outputs\":[{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HairyHoover","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8f91f78fd02fecc5db2157b96fa4a12492ea4bc95db1a0b4c2d5436daf31bbc4"}]}