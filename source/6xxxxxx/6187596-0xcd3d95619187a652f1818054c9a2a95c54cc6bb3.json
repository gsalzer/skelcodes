{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    //emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n  \r\n    /**\r\n    * @dev prevents contracts from interacting with others\r\n    */\r\n    modifier isHuman() {\r\n        address _addr = msg.sender;\r\n        uint256 _codeLength;\r\n    \r\n        assembly {_codeLength := extcodesize(_addr)}\r\n        require(_codeLength == 0, \"sorry humans only\");\r\n        _;\r\n    }\r\n\r\n\r\n}\r\n\r\ncontract PyramidEvents{\r\n\r\n    event buyEvt(\r\n        address indexed addr,\r\n        uint refCode,\r\n        uint amount\r\n        );\r\n    \r\n    event rewardEvt(\r\n        address indexed addr,\r\n        uint refCode,\r\n        uint rewardAmount\r\n        );\r\n}\r\n\r\n/*\r\n\r\n8 888888888o  `8.`8888.      ,8' 8 888888888o.    8 8888          ,8.       ,8.           8 8888 8 888888888o.                       \r\n8 8888    `88. `8.`8888.    ,8'  8 8888    `88.   8 8888         ,888.     ,888.          8 8888 8 8888    `^888.                    \r\n8 8888     `88  `8.`8888.  ,8'   8 8888     `88   8 8888        .`8888.   .`8888.         8 8888 8 8888        `88.                  \r\n8 8888     ,88   `8.`8888.,8'    8 8888     ,88   8 8888       ,8.`8888. ,8.`8888.        8 8888 8 8888         `88                  \r\n8 8888.   ,88'    `8.`88888'     8 8888.   ,88'   8 8888      ,8'8.`8888,8^8.`8888.       8 8888 8 8888          88                  \r\n8 888888888P'      `8. 8888      8 888888888P'    8 8888     ,8' `8.`8888' `8.`8888.      8 8888 8 8888          88                  \r\n8 8888              `8 8888      8 8888`8b        8 8888    ,8'   `8.`88'   `8.`8888.     8 8888 8 8888         ,88                  \r\n8 8888               8 8888      8 8888 `8b.      8 8888   ,8'     `8.`'     `8.`8888.    8 8888 8 8888        ,88'                  \r\n8 8888               8 8888      8 8888   `8b.    8 8888  ,8'       `8        `8.`8888.   8 8888 8 8888    ,o88P'                    \r\n8 8888               8 8888      8 8888     `88.  8 8888 ,8'         `         `8.`8888.  8 8888 8 888888888P'         \r\n\r\nBy EtherG 2018.8.21\r\n*/\r\n\r\ncontract Pyramid is Ownable,PyramidEvents{\r\n    using SafeMath for uint;\r\n\r\n    address private wallet1;\r\n    address private wallet2;\r\n\r\n    uint public startAtBlockNumber;\r\n    uint public curBubbleNumber= 1000;\r\n    bool public gameOpened=false;\r\n    uint public totalPlayers=0;\r\n    \r\n    mapping(address=>uint) playerRefCode;    //address=> refCode;\r\n    mapping(uint=>address) playerRefxAddr;    //refCode=>address;\r\n    \r\n    mapping(uint=>uint) parentRefCode;    //player refCode=> parent refCode;\r\n\r\n    /* refCode=>bubbles numOfBubbles */\r\n    mapping(uint=>uint) numOfBubblesL1;\r\n    mapping(uint=>uint) numOfBubblesL2;\r\n    mapping(uint=>uint) numOfBubblesL3;\r\n    \r\n    \r\n    mapping(address=>uint) playerRewards;\r\n    mapping(uint=>uint) referees;\r\n    \r\n    uint gameRound=1;\r\n    mapping(uint=>address) roundxAddr;\r\n    mapping(uint=>uint) roundxRefCode;\r\n    \r\n\r\n    constructor(address _addr1,address _addr2)public {\r\n        wallet1=_addr1;\r\n        wallet2=_addr2;\r\n        \r\n        startAtBlockNumber = block.number+633;\r\n    }\r\n    \r\n    function buyandearn(uint refCode) isHuman payable public returns(uint){\r\n        require(block.number>=startAtBlockNumber,\"Not Start\");\r\n        require(playerRefxAddr[refCode]!= 0x0 || (refCode==0 && totalPlayers==0));\r\n        require(msg.value >= 0.1 ether,\"Minima amoun:0.1 ether\");\r\n        \r\n        bool _firstJoin=false;\r\n        uint selfRefCode;\r\n        \r\n        /* 首次加入 */\r\n        if(playerRefCode[msg.sender]==0){\r\n            selfRefCode=curBubbleNumber+1;\r\n            playerRefCode[msg.sender]=selfRefCode;\r\n            \r\n            parentRefCode[selfRefCode]=refCode;\r\n            \r\n            numOfBubblesL1[selfRefCode]=6;\r\n            numOfBubblesL2[selfRefCode]=6*6;\r\n            numOfBubblesL3[selfRefCode]=6*6*6;\r\n            _firstJoin=true;\r\n        }else{\r\n            //不能异动推荐人\r\n            selfRefCode=playerRefCode[msg.sender];\r\n            refCode=parentRefCode[selfRefCode];\r\n            \r\n            numOfBubblesL1[playerRefCode[msg.sender]]+=6;\r\n            numOfBubblesL2[playerRefCode[msg.sender]]+=36;\r\n            numOfBubblesL3[playerRefCode[msg.sender]]+=216;    \r\n        }\r\n        \r\n        /* 计算可以用推荐数*/\r\n        \r\n        uint up1RefCode=0;\r\n        uint up2RefCode=0;\r\n        uint up3RefCode=0;\r\n        \r\n        if(totalPlayers>0 && numOfBubblesL1[refCode]>0 ){\r\n            //if not first player\r\n            up1RefCode=refCode;\r\n            numOfBubblesL1[up1RefCode]-=1;\r\n            \r\n            if(_firstJoin) referees[up1RefCode]+=1;\r\n        }\r\n        \r\n        if(parentRefCode[up1RefCode]!=0 && numOfBubblesL2[refCode]>0){\r\n            //up 2 layer\r\n            up2RefCode=parentRefCode[up1RefCode];\r\n            numOfBubblesL2[up2RefCode]-=1;\r\n            \r\n            if(_firstJoin) referees[up2RefCode]+=1;\r\n        }\r\n        \r\n        if(parentRefCode[up2RefCode]!=0 && numOfBubblesL3[refCode]>0){\r\n            //up 2 layer\r\n            up3RefCode=parentRefCode[up2RefCode];\r\n            numOfBubblesL3[up3RefCode]-=1;\r\n            \r\n            if(_firstJoin) referees[up3RefCode]+=1;\r\n        }\r\n\r\n        playerRefxAddr[playerRefCode[msg.sender]]=msg.sender;\r\n        \r\n        roundxAddr[gameRound]=msg.sender;\r\n        roundxRefCode[gameRound]=selfRefCode;\r\n        \r\n        curBubbleNumber=selfRefCode;\r\n        gameRound+=1;\r\n        \r\n         if(_firstJoin) totalPlayers+=1;\r\n        \r\n        emit buyEvt(msg.sender,selfRefCode,msg.value);\r\n        \r\n        /* =========================================\r\n       distribute\r\n       =========================================*/\r\n        distribute(up1RefCode,up2RefCode,up3RefCode);\r\n        \r\n    }\r\n    \r\n/*\r\n\r\n    8 8888      88 8 8888   8888888 8888888888  8 8888          ,8.       ,8.                   .8.    8888888 8888888888 8 8888888888   \r\n8 8888      88 8 8888         8 8888        8 8888         ,888.     ,888.                 .888.         8 8888       8 8888         \r\n8 8888      88 8 8888         8 8888        8 8888        .`8888.   .`8888.               :88888.        8 8888       8 8888         \r\n8 8888      88 8 8888         8 8888        8 8888       ,8.`8888. ,8.`8888.             . `88888.       8 8888       8 8888         \r\n8 8888      88 8 8888         8 8888        8 8888      ,8'8.`8888,8^8.`8888.           .8. `88888.      8 8888       8 888888888888 \r\n8 8888      88 8 8888         8 8888        8 8888     ,8' `8.`8888' `8.`8888.         .8`8. `88888.     8 8888       8 8888         \r\n8 8888      88 8 8888         8 8888        8 8888    ,8'   `8.`88'   `8.`8888.       .8' `8. `88888.    8 8888       8 8888         \r\n` 8888     ,8P 8 8888         8 8888        8 8888   ,8'     `8.`'     `8.`8888.     .8'   `8. `88888.   8 8888       8 8888         \r\n  8888   ,d8P  8 8888         8 8888        8 8888  ,8'       `8        `8.`8888.   .888888888. `88888.  8 8888       8 8888         \r\n   `Y88888P'   8 888888888888 8 8888        8 8888 ,8'         `         `8.`8888. .8'       `8. `88888. 8 8888       8 888888888888\r\n\r\n*/\r\n    \r\n    function distribute(uint up1RefCode,uint up2RefCode,uint up3RefCode) internal{\r\n        \r\n        uint v1;\r\n        uint v2;\r\n        uint v3;\r\n        uint w1;\r\n        uint w2;\r\n        \r\n        v1 = msg.value.mul(40 ether).div(100 ether);\r\n        v2 = msg.value.mul(30 ether).div(100 ether);\r\n        v3 = msg.value.mul(20 ether).div(100 ether);\r\n        w1 = msg.value.mul(7 ether).div(100 ether);\r\n        w2 = msg.value.mul(3 ether).div(100 ether);\r\n        \r\n        if(up1RefCode!=0){\r\n            playerRefxAddr[up1RefCode].transfer(v1);\r\n            playerRewards[playerRefxAddr[up1RefCode]]=playerRewards[playerRefxAddr[up1RefCode]].add(v1);\r\n            \r\n            emit rewardEvt(playerRefxAddr[up1RefCode],up1RefCode,v1);\r\n        }\r\n        if(up2RefCode!=0){\r\n            playerRefxAddr[up2RefCode].transfer(v2);\r\n            playerRewards[playerRefxAddr[up2RefCode]]=playerRewards[playerRefxAddr[up2RefCode]].add(v2);\r\n            \r\n            emit rewardEvt(playerRefxAddr[up2RefCode],up2RefCode,v2);\r\n        }\r\n        if(up3RefCode!=0){\r\n            playerRefxAddr[up3RefCode].transfer(v3);\r\n            playerRewards[playerRefxAddr[up3RefCode]]=playerRewards[playerRefxAddr[up3RefCode]].add(v3);\r\n            \r\n            emit rewardEvt(playerRefxAddr[up3RefCode],up3RefCode,v3);\r\n        }\r\n\r\n        wallet1.transfer(w1);\r\n        wallet2.transfer(w2);\r\n    }\r\n    \r\n    function witrhdraw(uint _val) public onlyOwner{\r\n        owner.transfer(_val);\r\n    }\r\n    \r\n    function myData() public view returns(uint,uint,uint,uint){\r\n        /*return rewards,referees,refCode,totalPlayers  */\r\n        \r\n        uint refCode=playerRefCode[msg.sender];\r\n        return (playerRewards[msg.sender],referees[refCode],refCode,totalPlayers);\r\n    }\r\n\r\n    function availableRef() public view returns(uint,uint,uint){\r\n        return (numOfBubblesL1[playerRefCode[msg.sender]],numOfBubblesL2[playerRefCode[msg.sender]],numOfBubblesL3[playerRefCode[msg.sender]]);\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n=====================================================\r\nLibrary\r\n=====================================================\r\n*/\r\n\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"witrhdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startAtBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curBubbleNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gameOpened\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableRef\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refCode\",\"type\":\"uint256\"}],\"name\":\"buyandearn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addr1\",\"type\":\"address\"},{\"name\":\"_addr2\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"refCode\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyEvt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"refCode\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"rewardEvt\",\"type\":\"event\"}]","ContractName":"Pyramid","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d10da91df3f30cc1a39276584d5a1016de0cc98b00000000000000000000000096837c46ed5c9121771ca6a4c63347bf665fb891","Library":"","SwarmSource":"bzzr://9e14d8a614bc78a9c2366eb5ca98ced7af7710409ad2259fbfcf7392fcb950a6"}]}