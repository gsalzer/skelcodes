{"status":"1","message":"OK","result":[{"SourceCode":"// Dependency file: contracts/interfaces/ISettingsRegistry.sol\r\n\r\n// pragma solidity ^0.4.24;\r\n\r\ncontract ISettingsRegistry {\r\n    enum SettingsValueTypes { NONE, UINT, STRING, ADDRESS, BYTES, BOOL, INT }\r\n\r\n    function uintOf(bytes32 _propertyName) public view returns (uint256);\r\n\r\n    function stringOf(bytes32 _propertyName) public view returns (string);\r\n\r\n    function addressOf(bytes32 _propertyName) public view returns (address);\r\n\r\n    function bytesOf(bytes32 _propertyName) public view returns (bytes);\r\n\r\n    function boolOf(bytes32 _propertyName) public view returns (bool);\r\n\r\n    function intOf(bytes32 _propertyName) public view returns (int);\r\n\r\n    function setUintProperty(bytes32 _propertyName, uint _value) public;\r\n\r\n    function setStringProperty(bytes32 _propertyName, string _value) public;\r\n\r\n    function setAddressProperty(bytes32 _propertyName, address _value) public;\r\n\r\n    function setBytesProperty(bytes32 _propertyName, bytes _value) public;\r\n\r\n    function setBoolProperty(bytes32 _propertyName, bool _value) public;\r\n\r\n    function setIntProperty(bytes32 _propertyName, int _value) public;\r\n\r\n    function getValueTypeOf(bytes32 _propertyName) public view returns (uint /* SettingsValueTypes */ );\r\n\r\n    event ChangeProperty(bytes32 indexed _propertyName, uint256 _type);\r\n}\r\n\r\n// Dependency file: contracts/interfaces/IAuthority.sol\r\n\r\n// pragma solidity ^0.4.24;\r\n\r\ncontract IAuthority {\r\n    function canCall(\r\n        address src, address dst, bytes4 sig\r\n    ) public view returns (bool);\r\n}\r\n\r\n// Dependency file: contracts/DSAuth.sol\r\n\r\n// pragma solidity ^0.4.24;\r\n\r\n// import 'contracts/interfaces/IAuthority.sol';\r\n\r\ncontract DSAuthEvents {\r\n    event LogSetAuthority (address indexed authority);\r\n    event LogSetOwner     (address indexed owner);\r\n}\r\n\r\n/**\r\n * @title DSAuth\r\n * @dev The DSAuth contract is reference implement of https://github.com/dapphub/ds-auth\r\n * But in the isAuthorized method, the src from address(this) is remove for safty concern.\r\n */\r\ncontract DSAuth is DSAuthEvents {\r\n    IAuthority   public  authority;\r\n    address      public  owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit LogSetOwner(msg.sender);\r\n    }\r\n\r\n    function setOwner(address owner_)\r\n        public\r\n        auth\r\n    {\r\n        owner = owner_;\r\n        emit LogSetOwner(owner);\r\n    }\r\n\r\n    function setAuthority(IAuthority authority_)\r\n        public\r\n        auth\r\n    {\r\n        authority = authority_;\r\n        emit LogSetAuthority(authority);\r\n    }\r\n\r\n    modifier auth {\r\n        require(isAuthorized(msg.sender, msg.sig));\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\r\n        if (src == owner) {\r\n            return true;\r\n        } else if (authority == IAuthority(0)) {\r\n            return false;\r\n        } else {\r\n            return authority.canCall(src, this, sig);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Root file: contracts/SettingsRegistry.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n// import \"contracts/interfaces/ISettingsRegistry.sol\";\r\n// import \"contracts/DSAuth.sol\";\r\n\r\n/**\r\n * @title SettingsRegistry\r\n * @dev This contract holds all the settings for updating and querying.\r\n */\r\ncontract SettingsRegistry is ISettingsRegistry, DSAuth {\r\n\r\n    mapping(bytes32 => uint256) public uintProperties;\r\n    mapping(bytes32 => string) public stringProperties;\r\n    mapping(bytes32 => address) public addressProperties;\r\n    mapping(bytes32 => bytes) public bytesProperties;\r\n    mapping(bytes32 => bool) public boolProperties;\r\n    mapping(bytes32 => int256) public intProperties;\r\n\r\n    mapping(bytes32 => SettingsValueTypes) public valueTypes;\r\n\r\n    function uintOf(bytes32 _propertyName) public view returns (uint256) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.UINT, \"Property type does not match.\");\r\n        return uintProperties[_propertyName];\r\n    }\r\n\r\n    function stringOf(bytes32 _propertyName) public view returns (string) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.STRING, \"Property type does not match.\");\r\n        return stringProperties[_propertyName];\r\n    }\r\n\r\n    function addressOf(bytes32 _propertyName) public view returns (address) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.ADDRESS, \"Property type does not match.\");\r\n        return addressProperties[_propertyName];\r\n    }\r\n\r\n    function bytesOf(bytes32 _propertyName) public view returns (bytes) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.BYTES, \"Property type does not match.\");\r\n        return bytesProperties[_propertyName];\r\n    }\r\n\r\n    function boolOf(bytes32 _propertyName) public view returns (bool) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.BOOL, \"Property type does not match.\");\r\n        return boolProperties[_propertyName];\r\n    }\r\n\r\n    function intOf(bytes32 _propertyName) public view returns (int) {\r\n        require(valueTypes[_propertyName] == SettingsValueTypes.INT, \"Property type does not match.\");\r\n        return intProperties[_propertyName];\r\n    }\r\n\r\n    function setUintProperty(bytes32 _propertyName, uint _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.UINT, \"Property type does not match.\");\r\n        uintProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.UINT;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.UINT));\r\n    }\r\n\r\n    function setStringProperty(bytes32 _propertyName, string _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.STRING, \"Property type does not match.\");\r\n        stringProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.STRING;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.STRING));\r\n    }\r\n\r\n    function setAddressProperty(bytes32 _propertyName, address _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.ADDRESS, \"Property type does not match.\");\r\n\r\n        addressProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.ADDRESS;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.ADDRESS));\r\n    }\r\n\r\n    function setBytesProperty(bytes32 _propertyName, bytes _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.BYTES, \"Property type does not match.\");\r\n\r\n        bytesProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.BYTES;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.BYTES));\r\n    }\r\n\r\n    function setBoolProperty(bytes32 _propertyName, bool _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.BOOL, \"Property type does not match.\");\r\n\r\n        boolProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.BOOL;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.BOOL));\r\n    }\r\n\r\n    function setIntProperty(bytes32 _propertyName, int _value) public auth {\r\n        require(\r\n            valueTypes[_propertyName] == SettingsValueTypes.NONE || valueTypes[_propertyName] == SettingsValueTypes.INT, \"Property type does not match.\");\r\n\r\n        intProperties[_propertyName] = _value;\r\n        valueTypes[_propertyName] = SettingsValueTypes.INT;\r\n\r\n        emit ChangeProperty(_propertyName, uint256(SettingsValueTypes.INT));\r\n    }\r\n\r\n    function getValueTypeOf(bytes32 _propertyName) public view returns (uint256 /* SettingsValueTypes */ ) {\r\n        return uint256(valueTypes[_propertyName]);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUintProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"bytesOf\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"addressProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"valueTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"uintOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bytes\"}],\"name\":\"setBytesProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBoolProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"boolProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"setIntProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"intOf\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddressProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"boolOf\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"bytesProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"intProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"addressOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"stringOf\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"}],\"name\":\"getValueTypeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setStringProperty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"uintProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"stringProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_propertyName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"ChangeProperty\",\"type\":\"event\"}]","ContractName":"SettingsRegistry","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5edae7f0a815fe178a7c3ef73aa2dc9822a1fef5bc657a20e31ec64c352b0d68"}]}