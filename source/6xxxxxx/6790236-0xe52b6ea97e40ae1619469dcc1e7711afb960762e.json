{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function _validateAddress(address _addr) internal pure {\r\n        require(_addr != address(0), \"invalid address\");\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"not a contract owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _validateAddress(newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract Controllable is Ownable {\r\n    mapping(address => bool) controllers;\r\n\r\n    modifier onlyController {\r\n        require(_isController(msg.sender), \"no controller rights\");\r\n        _;\r\n    }\r\n\r\n    function _isController(address _controller) internal view returns (bool) {\r\n        return controllers[_controller];\r\n    }\r\n\r\n    function _setControllers(address[] _controllers) internal {\r\n        for (uint256 i = 0; i < _controllers.length; i++) {\r\n            _validateAddress(_controllers[i]);\r\n            controllers[_controllers[i]] = true;\r\n        }\r\n    }\r\n}\r\n\r\ncontract Upgradable is Controllable {\r\n    address[] internalDependencies;\r\n    address[] externalDependencies;\r\n\r\n    function getInternalDependencies() public view returns(address[]) {\r\n        return internalDependencies;\r\n    }\r\n\r\n    function getExternalDependencies() public view returns(address[]) {\r\n        return externalDependencies;\r\n    }\r\n\r\n    function setInternalDependencies(address[] _newDependencies) public onlyOwner {\r\n        for (uint256 i = 0; i < _newDependencies.length; i++) {\r\n            _validateAddress(_newDependencies[i]);\r\n        }\r\n        internalDependencies = _newDependencies;\r\n    }\r\n\r\n    function setExternalDependencies(address[] _newDependencies) public onlyOwner {\r\n        externalDependencies = _newDependencies;\r\n        _setControllers(_newDependencies);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//////////////CONTRACT//////////////\r\n\r\n\r\n\r\n\r\n\r\ncontract DragonParams is Upgradable {\r\n\r\n    // 0 - attack, 1 - defense, 2 - stamina, 3 - speed, 4 - intelligence\r\n    // typesFactors and geneTypesFactors are stored as value * 10\r\n    uint8[5][11] _dragonTypesFactors_;\r\n    uint8[5][10] _bodyPartsFactors_;\r\n    uint8[5][10] _geneTypesFactors_;\r\n    uint8[10] _experienceToNextLevel_;\r\n    uint16[11] _dnaPoints_;\r\n    uint8 _battlePoints_;\r\n    uint8[99] _geneUpgradeDNAPoints_; // 99 levels\r\n\r\n    // GETTERS BY INDEX\r\n\r\n    function dragonTypesFactors(uint8 _index) external view returns (uint8[5]) {\r\n        return _dragonTypesFactors_[_index];\r\n    }\r\n\r\n    function bodyPartsFactors(uint8 _index) external view returns (uint8[5]) {\r\n        return _bodyPartsFactors_[_index];\r\n    }\r\n\r\n    function geneTypesFactors(uint8 _index) external view returns (uint8[5]) {\r\n        return _geneTypesFactors_[_index];\r\n    }\r\n\r\n    function experienceToNextLevel(uint8 _index) external view returns (uint8) {\r\n        return _experienceToNextLevel_[_index];\r\n    }\r\n\r\n    function dnaPoints(uint8 _index) external view returns (uint16) {\r\n        return _dnaPoints_[_index];\r\n    }\r\n\r\n    function geneUpgradeDNAPoints(uint8 _index) external view returns (uint8) {\r\n        return _geneUpgradeDNAPoints_[_index];\r\n    }\r\n\r\n    // GETTERS\r\n\r\n    function getDragonTypesFactors() external view returns (uint8[55] result) {\r\n        uint8 _index;\r\n        for (uint8 i = 0; i < 11; i++) {\r\n            for (uint8 j = 0; j < 5; j++) {\r\n                result[_index] = _dragonTypesFactors_[i][j];\r\n                _index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _transformArray(uint8[5][10] _array) internal pure returns (uint8[50] result) {\r\n        uint8 _index;\r\n        for (uint8 i = 0; i < 10; i++) {\r\n            for (uint8 j = 0; j < 5; j++) {\r\n                result[_index] = _array[i][j];\r\n                _index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBodyPartsFactors() external view returns (uint8[50]) {\r\n        return _transformArray(_bodyPartsFactors_);\r\n    }\r\n\r\n    function getGeneTypesFactors() external view returns (uint8[50]) {\r\n        return _transformArray(_geneTypesFactors_);\r\n    }\r\n\r\n    function getExperienceToNextLevel() external view returns (uint8[10]) {\r\n        return _experienceToNextLevel_;\r\n    }\r\n\r\n    function getDNAPoints() external view returns (uint16[11]) {\r\n        return _dnaPoints_;\r\n    }\r\n\r\n    function battlePoints() external view returns (uint8) {\r\n        return _battlePoints_;\r\n    }\r\n\r\n    function getGeneUpgradeDNAPoints() external view returns (uint8[99]) {\r\n        return _geneUpgradeDNAPoints_;\r\n    }\r\n\r\n    // SETTERS\r\n\r\n    function setDragonTypesFactors(uint8[5][11] _types) external onlyOwner {\r\n        _dragonTypesFactors_ = _types;\r\n    }\r\n\r\n    function setBodyPartsFactors(uint8[5][10] _bodyParts) external onlyOwner {\r\n        _bodyPartsFactors_ = _bodyParts;\r\n    }\r\n\r\n    function setGeneTypesFactors(uint8[5][10] _geneTypes) external onlyOwner {\r\n        _geneTypesFactors_ = _geneTypes;\r\n    }\r\n\r\n    function setLevelUpPoints(\r\n        uint8[10] _experienceToNextLevel,\r\n        uint16[11] _dnaPoints,\r\n        uint8 _battlePoints\r\n    ) external onlyOwner {\r\n        _experienceToNextLevel_ = _experienceToNextLevel;\r\n        _dnaPoints_ = _dnaPoints;\r\n        _battlePoints_ = _battlePoints;\r\n    }\r\n\r\n    function setGeneUpgradeDNAPoints(uint8[99] _points) external onlyOwner {\r\n        _geneUpgradeDNAPoints_ = _points;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_points\",\"type\":\"uint8[99]\"}],\"name\":\"setGeneUpgradeDNAPoints\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"geneTypesFactors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"experienceToNextLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"dragonTypesFactors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDependencies\",\"type\":\"address[]\"}],\"name\":\"setExternalDependencies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_geneTypes\",\"type\":\"uint8[5][10]\"}],\"name\":\"setGeneTypesFactors\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDependencies\",\"type\":\"address[]\"}],\"name\":\"setInternalDependencies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDragonTypesFactors\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint8[55]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGeneTypesFactors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[50]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_experienceToNextLevel\",\"type\":\"uint8[10]\"},{\"name\":\"_dnaPoints\",\"type\":\"uint16[11]\"},{\"name\":\"_battlePoints\",\"type\":\"uint8\"}],\"name\":\"setLevelUpPoints\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExperienceToNextLevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[10]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_types\",\"type\":\"uint8[5][11]\"}],\"name\":\"setDragonTypesFactors\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDNAPoints\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16[11]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInternalDependencies\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGeneUpgradeDNAPoints\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[99]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"dnaPoints\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bodyParts\",\"type\":\"uint8[5][10]\"}],\"name\":\"setBodyPartsFactors\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExternalDependencies\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"battlePoints\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBodyPartsFactors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[50]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"bodyPartsFactors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint8\"}],\"name\":\"geneUpgradeDNAPoints\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"DragonParams","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5427c1b3fb56ec2525cb9c4121e1164b76863ea72002e27bbaba5814178a314a"}]}