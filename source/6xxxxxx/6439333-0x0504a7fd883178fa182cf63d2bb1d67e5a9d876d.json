{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n\r\ncontract ERC20 {\r\n    bytes32 public standard;\r\n    bytes32 public name;\r\n    bytes32 public symbol;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n    bool public allowTransactions;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n}\r\n\r\n\r\ncontract TokenSwap{\r\n    uint256 swapSupply = 500000000000000000000000000;\r\n    \r\n    address public CYFMAddress = 0x3f06B5D78406cD97bdf10f5C420B241D32759c80;\r\n    address public XTEAddress = 0xEBf3Aacc50ae14965240a3777eCe8DA1fC490a78;\r\n    \r\n    address tokenAdmin = 0xEd86f5216BCAFDd85E5875d35463Aca60925bF16;\r\n    \r\n\r\n    function Swap(uint256 sendAmount) returns (bool success){\r\n        require(swapSupply >= safeMul(safeDiv(sendAmount, 5), 6));\r\n        if(ERC20(CYFMAddress).transferFrom(msg.sender, tokenAdmin, sendAmount)){\r\n            ERC20(XTEAddress).transfer(msg.sender, safeMul(safeDiv(sendAmount, 5), 6));\r\n            swapSupply -= safeMul(safeDiv(sendAmount, 5), 6);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function Reclaim(uint256 sendAmount) returns (bool success){\r\n        require(msg.sender == tokenAdmin);\r\n        require(swapSupply >= sendAmount);\r\n\r\n        ERC20(XTEAddress).transfer(msg.sender, sendAmount);\r\n        swapSupply -= sendAmount;\r\n        return true;\r\n    }\r\n    \r\n    function safeMul(uint a, uint b) public pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"sendAmount\",\"type\":\"uint256\"}],\"name\":\"Reclaim\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"XTEAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sendAmount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CYFMAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TokenSwap","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dc0e20df220fb5a55fb39b4f133f2395a3abf24026f0920a113ab7cb967c98e4"}]}