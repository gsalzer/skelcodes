{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 安全的加减乘除\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns(uint);\r\n\r\n\tfunction balanceOf(address tokenOwner) public constant returns(uint balance);\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns(uint remaining);\r\n\r\n\tfunction transfer(address to, uint tokens) public returns(bool success);\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 管理员\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public {\r\n\t\trequire(msg.sender == newOwner);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 核心类\r\n// ----------------------------------------------------------------------------\r\ncontract Oasis is ERC20Interface, Owned {\r\n\tusing SafeMath\r\n\tfor uint;\r\n\r\n\tstring public symbol;\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;\r\n\tuint basekeynum;//4500\r\n\tuint basekeysub;//500\r\n\tuint basekeylast;//2000\r\n\r\n\t\r\n\tbool public actived;\r\n\r\n\t\r\n\tuint public keyprice;//钥匙的价格\r\n\tuint public keysid;//当前钥匙的最大id\r\n\tuint public onceOuttime;\r\n\t\r\n\tuint public ethnum;//用户总资产\r\n\tuint public sysethnum;//系统总eth\r\n\tuint public userethnum;//用户总eth\r\n\tuint8 public per;//用户每日静态的释放比例\r\n\tuint public allprize;\r\n\tuint public allprizeused;\r\n\t\r\n\tuint[] public mans;//用户上线人数的数组\r\n\tuint[] public pers;//用户上线分额的比例数组\r\n\tuint[] public prizeper;//用户每日静态的释放比例\r\n\tuint[] public prizelevelsuns;//用户上线人数的数组\r\n\tuint[] public prizelevelmans;//用户上线人数的比例数组\r\n\taddress[] public level1;\r\n\taddress[] public level2;\r\n\taddress[] public level3;\r\n\tuint[] public prizelevelsunsday;//用户上线人数的数组\r\n\tuint[] public prizelevelmansday;//用户上线人数的比例数组\r\n\tuint[] public prizeactivetime;\r\n\t\r\n\taddress[] public mansdata;\r\n\tuint[] public moneydata;\r\n\tuint[] public timedata;\r\n\tuint public pubper;\r\n\tuint public subper;\r\n\tuint public luckyper;\r\n\tuint public lastmoney;\r\n\tuint public lastper;\r\n\tuint public lasttime;\r\n\tuint public sellkeyper;\r\n\t\r\n\tbool public isend;\r\n\tuint public tags;\r\n\tuint public opentime;\r\n\t\r\n\tuint public runper;\r\n\r\n\tmapping(address => uint) balances;//用户的钥匙数量\r\n\t\r\n\tmapping(address => uint) systemtag;//用户的系统标志 \r\n\tmapping(address => uint) eths;//用户的资产数量\r\n\tmapping(address => uint) usereths;//用户的总投资\r\n\tmapping(address => uint) userethsused;//用户的总投资\r\n\tmapping(address => uint) runs;//用户的动态奖励\r\n\tmapping(address => uint) used;//用户已使用的资产\r\n\tmapping(address => uint) runused;//用户已使用的动态\r\n\tmapping(address => mapping(address => uint)) allowed;//授权金额\r\n\r\n\t/* 冻结账户 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\r\n\t//释放 \r\n\tmapping(address => uint[]) public mycantime; //时间\r\n\tmapping(address => uint[]) public mycanmoney; //金额\r\n\t//上线释放\r\n\tmapping(address => uint[]) public myruntime; //时间\r\n\tmapping(address => uint[]) public myrunmoney; //金额\r\n\t//上家地址\r\n\tmapping(address => address) public fromaddr;\r\n\t//一代数组\r\n\tmapping(address => address[]) public mysuns;\r\n\t//2代数组\r\n\tmapping(address => address[]) public mysecond;\r\n\t//3代数组\r\n\tmapping(address => address[]) public mythird;\r\n\t//all 3代数组days moeny\r\n\t//mapping(address => mapping(uint => uint)) public mysunsdayget;\r\n\t//all 3代数组days moeny\r\n\tmapping(address => mapping(uint => uint)) public mysunsdaynum;\r\n\t//current day prize\r\n\tmapping(address => mapping(uint => uint)) public myprizedayget;\r\n\tmapping(address => mapping(uint => uint)) public myprizedaygetdata;\r\n\t//管理员帐号\r\n\tmapping(address => bool) public admins;\r\n\t//用户钥匙id\r\n\tmapping(address => uint) public mykeysid;\r\n\tmapping(address => uint) public mykeyeths;\r\n\tmapping(address => uint) public mykeyethsused;\r\n\t//与用户钥匙id对应\r\n\tmapping(uint => address) public myidkeys;\r\n\t//all once day get all\r\n\tmapping(uint => uint) public daysgeteths;\r\n\tmapping(uint => uint) public dayseths;\r\n\t//user once day pay\r\n\tmapping(address => mapping(uint => uint)) public daysusereths;\r\n\r\n\t/* 通知 */\r\n\tevent FrozenFunds(address target, bool frozen);\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\r\n\t\tsymbol = \"OASIS\";\r\n\t\tname = \"Oasis Key\";\r\n\t\tdecimals = 18;\r\n\t\tethnum = 0;\r\n\t\t_totalSupply = 50000000 ether;\r\n\t\r\n\t\tactived = true;\r\n\t\ttags = 0;\r\n\t\tonceOuttime = 16 hours; //增量的时间 正式 \r\n        keysid = 55555;\r\n        \r\n        basekeynum = 2000 ether;\r\n        basekeysub = 500 ether;\r\n        basekeylast = 2500 ether;\r\n        allprize = 0;\r\n\t\tbalances[this] = _totalSupply;\r\n\t\tper = 15;\r\n\t\trunper = 20;\r\n\t\tmans = [2,4,6];\r\n\t\tpers = [20,15,10];\r\n\t\tprizeper = [2,2,2];\r\n\t\tprizelevelsuns = [20,30,50];\r\n\t\tprizelevelmans = [100,300,800];\r\n\t\tprizelevelsunsday = [2,4,6];\r\n\t\tprizelevelmansday = [10 ether,30 ether,50 ether];\r\n\t\tprizeactivetime = [0,0,0];\r\n\t\tpubper = 2;\r\n\t\tsubper = 120;\r\n\t\tluckyper = 5;\r\n\t\tlastmoney = 0;\r\n\t\tlastper = 2;\r\n\t\tlasttime = 8 hours;\r\n\t\tkeyprice = 0.01 ether;\r\n\t\tsellkeyper = 30;\r\n\t\tisend = false;\r\n\t\topentime = now;\r\n\t\temit Transfer(address(0), owner, _totalSupply);\r\n\r\n\t}\r\n\r\n\t/* 获取用户金额 */\r\n\tfunction balanceOf(address tokenOwner) public view returns(uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\tfunction indexview(address addr) public view returns(uint keynum,\r\n\tuint kprice, uint ethss, uint ethscan, uint level, \r\n\tuint keyid, uint runsnum, uint runscan,\r\n\t uint top1num, uint top2num, uint top3num, uint yestodaycom\r\n\t ){\r\n\t     uint d = getyestoday();\r\n\t    keynum = balances[addr];//0\r\n\t    kprice = keyprice;//1\r\n\t    ethss = eths[addr];//2\r\n\t    ethscan = getcanuse(addr);//3\r\n\t    level = getlevel(addr);//4\r\n\t    keyid = mykeysid[addr];//5\r\n\t    runsnum = runs[addr];//6\r\n\t    runscan = getcanuserun(addr);//7\r\n\t    top1num = mysuns[addr].length;//8\r\n\t    top2num = mysecond[addr].length;//9\r\n\t    top3num = mythird[addr].length;//10\r\n\t    yestodaycom = myprizedaygetdata[addr][d];//11\r\n\t    \r\n\t}\r\n\tfunction indexextend() public view returns(uint lttime, address lkuser){\r\n\t    uint len = timedata.length;\r\n\t    if(len == 0) {\r\n\t        lttime = opentime;//0\r\n\t    }else{\r\n\t        lttime = timedata[len - 1];\r\n\t    }\r\n\t    lkuser = getluckyuser();//1\r\n\t}\r\n\tfunction gettags(address addr) public view returns(uint t) {\r\n\t    t = systemtag[addr];\r\n\t}\r\n\t/*\r\n\t * 添加金额，为了统计用户的进出\r\n\t */\r\n\tfunction addmoney(address _addr, uint256 _money, uint _day) private {\r\n\t    uint256 _days = _day * (1 days);\r\n\t\tuint256 _now = now - _days;\r\n\t\tmycanmoney[_addr].push(_money);\r\n\t\tmycantime[_addr].push(_now);\r\n\r\n\t}\r\n\t/*\r\n\t * 用户金额减少时的触发\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction reducemoney(address _addr, uint256 _money) private {\r\n\t\tused[_addr] += _money;\r\n\t}\r\n\t/*\r\n\t * 添加run金额，为了统计用户的进出\r\n\t */\r\n\tfunction addrunmoney(address _addr, uint256 _money, uint _day) private {\r\n\t\tuint256 _days = _day * (1 days);\r\n\t\tuint256 _now = now - _days;\r\n\t\tmyrunmoney[_addr].push(_money);\r\n\t\tmyruntime[_addr].push(_now);\r\n\r\n\t}\r\n\t/*\r\n\t * 用户金额减少时的触发\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction reducerunmoney(address _addr, uint256 _money) private {\r\n\t\trunused[_addr] += _money;\r\n\t}\r\n\tfunction geteths(address addr) public view returns(uint) {\r\n\t    return(eths[addr]);\r\n\t}\r\n\tfunction getruns(address addr) public view returns(uint) {\r\n\t    return(runs[addr]);\r\n\t}\r\n\t/*\r\n\t * 获取用户的可用金额\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getcanuse(address tokenOwner) public view returns(uint) {\r\n\t\tuint256 _now = now;\r\n\t\tuint256 _left = 0;\r\n\t\tif(tokenOwner == owner) {\r\n\t\t\treturn(eths[owner]);\r\n\t\t}\r\n\t\tfor(uint256 i = 0; i < mycantime[tokenOwner].length; i++) {\r\n\t\t\tuint256 stime = mycantime[tokenOwner][i];\r\n\t\t\tuint256 smoney = mycanmoney[tokenOwner][i];\r\n\t\t\tuint256 lefttimes = _now - stime;\r\n\t\t\tif(lefttimes >= onceOuttime) {\r\n\t\t\t\tuint256 leftpers = lefttimes / onceOuttime;\r\n\t\t\t\tif(leftpers > 100) {\r\n\t\t\t\t\tleftpers = 100;\r\n\t\t\t\t}\r\n\t\t\t\t_left = smoney * leftpers / 100 + _left;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_left = _left - used[tokenOwner];\r\n\t\tif(_left < 0) {\r\n\t\t\treturn(0);\r\n\t\t}\r\n\t\tif(_left > eths[tokenOwner]) {\r\n\t\t\treturn(eths[tokenOwner]);\r\n\t\t}\r\n\t\treturn(_left);\r\n\t}\r\n\t/*\r\n\t * 获取用户的可用金额\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getcanuserun(address tokenOwner) public view returns(uint) {\r\n\t\tuint256 _now = now;\r\n\t\tuint256 _left = 0;\r\n\t\tif(tokenOwner == owner) {\r\n\t\t\treturn(runs[owner]);\r\n\t\t}\r\n\t\tfor(uint256 i = 0; i < myruntime[tokenOwner].length; i++) {\r\n\t\t\tuint256 stime = myruntime[tokenOwner][i];\r\n\t\t\tuint256 smoney = myrunmoney[tokenOwner][i];\r\n\t\t\tuint256 lefttimes = _now - stime;\r\n\t\t\tif(lefttimes >= onceOuttime) {\r\n\t\t\t\tuint256 leftpers = lefttimes / onceOuttime;\r\n\t\t\t\tif(leftpers > 100) {\r\n\t\t\t\t\tleftpers = 100;\r\n\t\t\t\t}\r\n\t\t\t\t_left = smoney * leftpers / 100 + _left;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_left = _left - runused[tokenOwner];\r\n\t\tif(_left < 0) {\r\n\t\t\treturn(0);\r\n\t\t}\r\n\t\tif(_left > runs[tokenOwner]) {\r\n\t\t\treturn(runs[tokenOwner]);\r\n\t\t}\r\n\t\treturn(_left);\r\n\t}\r\n\r\n\t/*\r\n\t * 用户转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction _transfer(address from, address to, uint tokens) internal{\r\n\t    \r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(actived == true);\r\n\t\t//\r\n\t\trequire(from != to);\r\n\t\t//如果用户没有上家\r\n\t\t// 防止转移到0x0， 用burn代替这个功能\r\n        require(to != 0x0);\r\n        // 检测发送者是否有足够的资金\r\n        require(balances[from] >= tokens);\r\n        // 检查是否溢出（数据类型的溢出）\r\n        require(balances[to] + tokens > balances[to]);\r\n        // 将此保存为将来的断言， 函数最后会有一个检验\r\n        uint previousBalances = balances[from] + balances[to];\r\n        // 减少发送者资产\r\n        balances[from] -= tokens;\r\n        // 增加接收者的资产\r\n        balances[to] += tokens;\r\n        // 断言检测， 不应该为错\r\n        assert(balances[from] + balances[to] == previousBalances);\r\n        \r\n\t\temit Transfer(from, to, tokens);\r\n\t}\r\n\t/* 传递tokens */\r\n    function transfer(address _to, uint256 _value) public returns(bool){\r\n        require(actived == true);\r\n\t    require(isend == false);\r\n        _transfer(msg.sender, _to, _value);\r\n        mykeyethsused[msg.sender].add(_value);\r\n        return(true);\r\n    }\r\n    //激活钥匙\r\n    function activekey(address addr) public returns(bool) {\r\n        require(actived == true);\r\n\t    require(isend == false);\r\n        uint keyval = 1 ether;\r\n        require(balances[msg.sender] >= keyval);\r\n        \r\n        if(mykeysid[addr] < 1) {\r\n\t        keysid = keysid + 1;\r\n\t        mykeysid[addr] = keysid;\r\n\t        myidkeys[keysid] = addr;\r\n\t        transfer(owner, keyval);\r\n\t    }\r\n\t    return(true);\r\n\t    \r\n    }\r\n\t/*\r\n\t * 获取真实值\r\n\t * @param {Object} uint\r\n\t */\r\n\tfunction getnum(uint num) public view returns(uint) {\r\n\t\treturn(num * 10 ** uint(decimals));\r\n\t}\r\n\t/*\r\n\t * 获取上家地址\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getfrom(address _addr) public view returns(address) {\r\n\t\treturn(fromaddr[_addr]);\r\n\t}\r\n    function gettopid(address addr) public view returns(uint) {\r\n        address topaddr = fromaddr[addr];\r\n        if(topaddr == address(0)) {\r\n            return(0);\r\n        }\r\n        uint keyid = mykeysid[topaddr];\r\n        if(keyid > 0 && myidkeys[keyid] == topaddr) {\r\n            return(keyid);\r\n        }else{\r\n            return(0);\r\n        }\r\n    }\r\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\r\n\t    require(actived == true);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 授权转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\tbalances[from] = balances[from].sub(tokens);\r\n\t\t//reducemoney(from, tokens);\r\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\t//addmoney(to, tokens, 0);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取授权信息\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\t/*\r\n\t * 授权\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction approveAndCall(address spender, uint tokens, bytes data) public returns(bool success) {\r\n\t\t//require(admins[msg.sender] == true);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// 冻结 or 解冻账户\r\n\tfunction freezeAccount(address target, bool freeze) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t/*\r\n\t * 设置管理员\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction admAccount(address target, bool freeze) onlyOwner public {\r\n\t\tadmins[target] = freeze;\r\n\t}\r\n\t/*\r\n\t * 系统设置\r\n\t * @param {Object} uint\r\n\t \r\n\tfunction setPrices(uint keyprices) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tkeyprice = keyprices;\r\n\t}*/\r\n\t/*\r\n\t * 获取系统设置\r\n\t \r\n\tfunction getprice() public view returns(uint price) {\r\n\t\tprice = keyprice;\r\n\t}\r\n\t*/\r\n\t/*\r\n\t * 设置是否开启\r\n\t * @param {Object} bool\r\n\t */\r\n\tfunction setactive(bool t) public onlyOwner {\r\n\t\tactived = t;\r\n\t}\r\n\r\n\t\r\n\t/*\r\n\t * 向账户拨发资金\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction mintToken(address target, uint256 mintedAmount) public onlyOwner{\r\n\t\trequire(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n\t\tbalances[target] = balances[target].add(mintedAmount);\r\n\t\temit Transfer(owner, target, mintedAmount);\r\n\t}\r\n\t\r\n\t/*\r\n\t * 获取总账目\r\n\t */\r\n\tfunction getall() public view returns(uint256 money) {\r\n\t\tmoney = address(this).balance;\r\n\t}\r\n\tfunction getmykeyid(address addr) public view returns(uint ky) {\r\n\t    ky = mykeysid[addr];\r\n\t}\r\n\tfunction getyestoday() public view returns(uint d) {\r\n\t    uint today = gettoday();\r\n\t    d = today - 86400;\r\n\t}\r\n\tfunction gettormow() public view returns(uint d) {\r\n\t    uint today = gettoday();\r\n\t    d = today + 86400;\r\n\t}\r\n\tfunction gettoday() public view returns(uint d) {\r\n\t    uint n = now;\r\n\t    d = n - n%86400 - 28800;\r\n\t}\r\n\tfunction gettodayget() public view returns(uint m) {\r\n\t    uint d = gettoday();\r\n\t    m = daysgeteths[d];\r\n\t}\r\n\tfunction getyestodayget() public view returns(uint m) {\r\n\t    uint d = getyestoday();\r\n\t    m = daysgeteths[d];\r\n\t}\r\n\t\r\n\tfunction getlevel(address addr) public view returns(uint) {\r\n\t    uint num1 = mysuns[addr].length;\r\n\t    uint num2 = mysecond[addr].length;\r\n\t    uint num3 = mythird[addr].length;\r\n\t    uint nums = num1 + num2 + num3;\r\n\t    if(num1 >= prizelevelsuns[2] && nums >= prizelevelmans[2]) {\r\n\t        return(3);\r\n\t    }\r\n\t    if(num1 >= prizelevelsuns[1] && nums >= prizelevelmans[1]) {\r\n\t        return(2);\r\n\t    }\r\n\t    if(num1 >= prizelevelsuns[0] && nums >= prizelevelmans[0]) {\r\n\t        return(1);\r\n\t    }\r\n\t    return(0);\r\n\t}\r\n\t/*\r\n\tfunction setprize(address addr, uint money) private returns(bool){\r\n\t    uint level = getlevel(addr);\r\n\t    uint d = gettoday();\r\n\t    allprize.add(money);\r\n\t    if(level > 0) {\r\n\t        uint p = level - 1;\r\n\t        uint ps = money*prizeper[p]/100;\r\n\t        \r\n\t        myprizedayget[addr][d].add(ps);\r\n\t    }\r\n\t    return(true);\r\n\t}*/\r\n\tfunction gettruelevel(uint n, uint m) public view returns(uint) {\r\n\t    if(n >= prizelevelsunsday[2] && m >= prizelevelmansday[2]) {\r\n\t        return(2);\r\n\t    }\r\n\t    if(n >= prizelevelsunsday[1] && m >= prizelevelmansday[1]) {\r\n\t        return(1);\r\n\t    }\r\n\t    if(n >= prizelevelsunsday[0] && m >= prizelevelmansday[0]) {\r\n\t        return(0);\r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction getprize() public returns(bool) {\r\n\t    uint d = getyestoday();\r\n\t    address user = msg.sender;\r\n\t    uint level = getlevel(user);\r\n\t   \r\n\t    uint money = myprizedayget[user][d];\r\n\t    uint mymans = mysunsdaynum[user][d];\r\n\t    if(level > 0 && money > 0) {\r\n\t        uint p = level - 1;\r\n\t        uint activedtime = prizeactivetime[p];\r\n\t        require(activedtime > 0);\r\n\t        require(activedtime < now);\r\n\t        uint allmoney = allprize - allprizeused;\r\n\t        if(now - activedtime > 86400) {\r\n\t            p = gettruelevel(mymans, money);\r\n\t        }\r\n\t        uint ps = allmoney*prizeper[p]/100;\r\n\t        eths[user].add(ps);\r\n\t        addmoney(user, ps, 100);\r\n\t        myprizedayget[user][d].sub(money);\r\n\t        allprizeused.add(money);\r\n\t    }\r\n\t}\r\n\tfunction setactivelevel(uint level) private returns(bool) {\r\n\t    uint t = prizeactivetime[level];\r\n\t    if(t == 0) {\r\n\t        prizeactivetime[level] = now + 86400;\r\n\t    }\r\n\t    return(true);\r\n\t}\r\n\tfunction setuserlevel(address user) private returns(bool) {\r\n\t    uint level = getlevel(user);\r\n\t    bool has = false;\r\n\t    if(level == 1) {\r\n\t        \r\n\t        for(uint i = 0; i < level1.length; i++) {\r\n\t            if(level1[i] == user) {\r\n\t                has = true;\r\n\t            }\r\n\t        }\r\n\t        if(has == false) {\r\n\t            level1.push(user);\r\n\t            setactivelevel(0);\r\n\t            return(true);\r\n\t        }\r\n\t    }\r\n\t    if(level == 2) {\r\n\t        if(has == true) {\r\n\t            for(uint ii = 0; ii < level1.length; ii++) {\r\n    \t            if(level1[ii] == user) {\r\n    \t                delete level1[ii];\r\n    \t            }\r\n    \t        }\r\n    \t        level2.push(user);\r\n    \t        setactivelevel(1);\r\n    \t        return(true);\r\n\t        }else{\r\n\t           for(uint i2 = 0; i2 < level2.length; i2++) {\r\n    \t            if(level1[i2] == user) {\r\n    \t                has = true;\r\n    \t            }\r\n    \t        }\r\n    \t        if(has == false) {\r\n    \t            level2.push(user);\r\n    \t            setactivelevel(1);\r\n    \t            return(true);\r\n    \t        }\r\n\t        }\r\n\t    }\r\n\t    if(level == 3) {\r\n\t        if(has == true) {\r\n\t            for(uint iii = 0; iii < level2.length; iii++) {\r\n    \t            if(level2[iii] == user) {\r\n    \t                delete level2[iii];\r\n    \t            }\r\n    \t        }\r\n    \t        level3.push(user);\r\n    \t        setactivelevel(2);\r\n    \t        return(true);\r\n\t        }else{\r\n\t           for(uint i3 = 0; i3 < level3.length; i3++) {\r\n    \t            if(level3[i3] == user) {\r\n    \t                has = true;\r\n    \t            }\r\n    \t        }\r\n    \t        if(has == false) {\r\n    \t            level3.push(user);\r\n    \t            setactivelevel(2);\r\n    \t            return(true);\r\n    \t        }\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction getfromsun(address addr, uint money, uint amount) private returns(bool){\r\n\t    address f1 = fromaddr[addr];\r\n\t    address f2 = fromaddr[f1];\r\n\t    address f3 = fromaddr[f2];\r\n\t    uint d = gettoday();\r\n\t    if(f1 != address(0)) {\r\n\t        if(mysuns[f1].length >= mans[0]) {\r\n\t            uint sendmoney1 = (money*per/1000)*pers[0]/100;\r\n    \t        runs[f1].add(sendmoney1);\r\n    \t        addrunmoney(f1, sendmoney1, 0);\r\n    \t        myprizedayget[f1][d].add(amount);\r\n    \t        myprizedaygetdata[f1][d].add(amount);\r\n    \t        setuserlevel(f1);\r\n    \t        \r\n\t        }\r\n\t    }\r\n\t    if(f1 != address(0) && f2 != address(0)) {\r\n\t        if(mysuns[f2].length >= mans[1]) {\r\n\t            uint sendmoney2 = (money*per/1000)*pers[1]/100;\r\n    \t        runs[f2].add(sendmoney2);\r\n    \t        addrunmoney(f2, sendmoney2, 0);\r\n    \t        myprizedayget[f2][d].add(amount);\r\n    \t        myprizedaygetdata[f2][d].add(amount);\r\n    \t        setuserlevel(f2);\r\n\t        }\r\n\t        \r\n\t        \r\n\t    }\r\n\t    if(f1 != address(0) && f2 != address(0) && f3 != address(0)) {\r\n\t        if(mysuns[f3].length >= mans[2]) {\r\n\t            uint sendmoney3 = (money*per/1000)*pers[2]/100;\r\n    \t        runs[f3].add(sendmoney3);\r\n    \t        addrunmoney(f3, sendmoney3, 0);\r\n    \t        myprizedayget[f3][d].add(amount);\r\n    \t        myprizedaygetdata[f3][d].add(amount);\r\n    \t        setuserlevel(f3);\r\n\t        }\r\n\t       \r\n\t        \r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction setpubprize(uint amount) private returns(bool) {\r\n\t    uint len = moneydata.length;\r\n\t    if(len > 1) {\r\n\t        uint all = 0;\r\n\t        uint start = 0;\r\n\t        if(len > 10) {\r\n\t            start = len - 10;\r\n\t        }\r\n\t        for(uint i = start; i < len; i++) {\r\n\t            all += moneydata[i];\r\n\t        }\r\n\t        uint sendmoney = amount*pubper/100;\r\n\t        for(uint ii = start; ii < len; ii++) {\r\n\t            all += moneydata[i];\r\n\t            address user = mansdata[ii];\r\n\t            uint money = sendmoney*moneydata[ii]/all;\r\n\t            eths[user] = eths[user].add(money);\r\n\t            addmoney(user, money, 100);\r\n\t        }\r\n\t    }\r\n\t    return(true);\r\n\t}\r\n\tfunction getluckyuser() public view returns(address addr) {\r\n\t    uint d = gettoday();\r\n\t    uint t = getyestoday();\r\n\t    uint maxmoney = moneydata[0];\r\n\t    for(uint i = 0; i < moneydata.length; i++) {\r\n\t        if(timedata[i] > t && timedata[i] < d && moneydata[i] > maxmoney) {\r\n\t            addr = mansdata[i];\r\n\t        }\r\n\t    }\r\n\t}\r\n\tfunction getluckyprize() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    require(user == getluckyuser());\r\n\t    uint d = getyestoday();\r\n\t    require(daysusereths[user][d] > 0);\r\n\t    uint money = dayseths[d]*luckyper/1000;\r\n\t    eths[user].add(money);\r\n\t    addmoney(user, money, 100);\r\n\t}\r\n\tfunction setlastprize() private returns(bool) {\r\n\t    uint l = timedata.length;\r\n\t    if(l > 0 && lastmoney > 0) {\r\n\t        uint ltime = timedata[l - 1];\r\n\t        if(now - ltime > lasttime) {\r\n\t            uint money = lastmoney*lastper/100;\r\n\t            address user = msg.sender;\r\n\t            eths[user].add(money);\r\n\t            addmoney(user, money, 100);\r\n\t            lastmoney = 0;\r\n\t        }\r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction runtoeth(uint amount) public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    uint can = getcanuserun(user);\r\n\t    uint kn = balances[user];\r\n\t    uint usekey = amount*runper/100;\r\n\t    require(usekey <= kn);\r\n\t    require(runs[user] >= can);\r\n\t    require(can >= amount);\r\n\t    \r\n\t    runs[user].sub(amount);\r\n\t    reducerunmoney(user, amount);\r\n\t    eths[user].add(amount);\r\n\t    addmoney(user, amount, 100);\r\n\t    transfer(owner, usekey);\r\n\t}\r\n\t/*\r\n\t * 购买\r\n\t */\r\n\tfunction buy(uint keyid) public payable returns(uint) {\r\n\t\trequire(actived == true);\r\n\t    require(isend == false);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(msg.value > 0);\r\n\r\n\t\tuint amount = msg.value;\r\n\t\trequire(amount >= 1 ether);\r\n\t\tuint money = amount*3;\r\n\t\tuint d = gettoday();\r\n\t\tuint t = getyestoday();\r\n\t\tbool ifadd = false;\r\n\t\t//如果用户没有上家\r\n\t\tif(fromaddr[user] == address(0)) {\r\n\t\t    if(keyid > 0) {\r\n\t\t        address topaddr = myidkeys[keyid];\r\n\t\t        if(topaddr != address(0)) {\r\n\t\t            address top2 = fromaddr[topaddr];\r\n    \t\t        address top3 = fromaddr[top2];\r\n    \t\t        //set sun addr\r\n    \t\t        fromaddr[user] = topaddr;\r\n    \t\t        //record suns log\r\n    \t\t        mysuns[topaddr].push(user);\r\n    \t\t        //mysunsdayget[topaddr][d].add(money);\r\n    \t\t        mysunsdaynum[topaddr][d]++;\r\n    \t\t        if(top2 != address(0)){\r\n    \t\t            mysecond[top2].push(user);\r\n    \t\t            //mysunsdayget[top2][d].add(money);\r\n    \t\t            mysunsdaynum[top2][d]++;\r\n    \t\t        }\r\n    \t\t        if(top3 != address(0)){\r\n    \t\t            mythird[top3].push(user);\r\n    \t\t            //mysunsdayget[top3][d].add(money);\r\n    \t\t            mysunsdaynum[top3][d]++;\r\n    \t\t        }\r\n    \t\t        ifadd = true;\r\n\t\t        }\r\n\t\t        \r\n\t\t        //money = money + amount;\r\n\t\t    }\r\n\t\t}else{\r\n\t\t    ifadd = true;\r\n\t\t    //money = money + amount;\r\n\t\t}\r\n\t\tif(ifadd == true) {\r\n\t\t    money = amount*4;\r\n\t\t}\r\n\t\tuint yestodaymoney = daysgeteths[t]*subper/100;\r\n\t\tif(daysgeteths[d] > yestodaymoney) {\r\n\t\t    if(ifadd == true) {\r\n    \t\t    money = amount*3;\r\n    \t\t}else{\r\n    \t\t    money = amount*2;\r\n    \t\t}\r\n\t\t}\r\n\t\tethnum.add(money);\r\n\t\tsysethnum.add(amount);\r\n\t\tuserethnum.add(amount);\r\n\t\t\r\n\t\tsetlastprize();\r\n\t\tlastmoney.add(amount);\r\n\t\t\r\n\t\tusereths[user].add(amount);\r\n\t\teths[msg.sender] = eths[msg.sender].add(money);\r\n        if(fromaddr[user] != address(0)) {\r\n            getfromsun(user, money, amount);\r\n        }\r\n\t\taddmoney(user, money, 0);\r\n        //setlastprize();\r\n\t    daysgeteths[d].add(money);\r\n\t    dayseths[d].add(amount);\r\n\t    \r\n\t\tdaysusereths[user][d].add(money);\r\n\t\t//public prize\r\n\t\tsetpubprize(amount);\r\n\t\tmansdata.push(user);\r\n\t\tmoneydata.push(amount);\r\n\t\ttimedata.push(now);\r\n\t\treturn(amount);\r\n\t}\r\n\tfunction keybuy(uint amount) public returns(bool) {\r\n\t    require(actived == true);\r\n\t    require(isend == false);\r\n\t    //address user = msg.sender;\r\n\t    //require(amount > balances[user]);\r\n\t    _transfer(msg.sender, owner, amount);\r\n\t    uint money = amount*keyprice;\r\n\t    moneybuy(money);\r\n\t    return(true);\r\n\t}\r\n\tfunction ethbuy(uint amount) public returns(bool) {\r\n\t    require(actived == true);\r\n\t    require(isend == false);\r\n\t    address user = msg.sender;\r\n\t    uint canmoney = getcanuse(user);\r\n\t    require(canmoney >= amount);\r\n\t    eths[user].sub(amount);\r\n\t    reducemoney(user, amount);\r\n\t    moneybuy(amount);\r\n\t    return(true);\r\n\t}\r\n\tfunction moneybuy(uint amount) private returns(bool) {\r\n\t    require(actived == true);\r\n\t    require(isend == false);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\tuint money = amount*4;\r\n\t\tuint d = gettoday();\r\n\t\tuint t = getyestoday();\r\n\t\tif(fromaddr[user] == address(0)) {\r\n\t\t    money = amount*3;\r\n\t\t}\r\n\t\tuint yestodaymoney = daysgeteths[t]*subper/100;\r\n\t\tif(daysgeteths[d] > yestodaymoney) {\r\n\t\t    if(fromaddr[user] == address(0)) {\r\n    \t\t    money = amount*2;\r\n    \t\t}else{\r\n    \t\t    money = amount*3;\r\n    \t\t}\r\n\t\t}\r\n\t\tethnum.add(money);\r\n\t\teths[user] = eths[user].add(money);\r\n\t\taddmoney(user, money, 0);\r\n\t\t\r\n\t}\r\n\t/*\r\n\t * 系统充值\r\n\t */\r\n\tfunction charge() public payable returns(bool) {\r\n\t\t//require(actived == true);\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction() payable public {\r\n\t\tbuy(0);\r\n\t}\r\n\t/*\r\n\t * 系统提现\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction withdraw(address _to, uint money) public onlyOwner {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[_to]);\r\n\t\trequire(money <= address(this).balance);\r\n\t\tsysethnum.sub(money);\r\n\t\t_to.transfer(money);\r\n\t}\r\n\tfunction setend(uint money) private returns(bool) {\r\n\t    uint syshas = address(this).balance;\r\n\t    uint chkhas = sysethnum/2;\r\n\t    //require(syshas >= chkhas);\r\n\t    if(sysethnum - money < chkhas || syshas < chkhas){\r\n\t        isend = true;\r\n\t        opentime = now + 86400;\r\n\t        return(true);\r\n\t    }else{\r\n\t        return(false);\r\n\t    }\r\n\t}\r\n\t/*\r\n\t * 出售\r\n\t * @param {Object} uint256\r\n\t */\r\n\tfunction sell(uint256 amount) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(isend == false);\r\n\t\trequire(amount > 0);\r\n\t\trequire(setend(amount) == false);\r\n\t\tuint256 canuse = getcanuse(user);\r\n\t\trequire(canuse >= amount);\r\n\t\trequire(eths[user] >= amount);\r\n\t\trequire(address(this).balance > amount);\r\n\t\tmsg.sender.transfer(amount);\r\n\t\tuserethsused[user].add(amount);\r\n\t\treducemoney(user, amount);\r\n\t\teths[user] = eths[user].sub(amount);\r\n        userethsused[user].add(amount);\r\n\t\t//emit Transfer(owner, msg.sender, moneys);\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction sellkey(uint256 amount) public returns(bool) {\r\n\t    require(actived == true);\r\n\t    require(isend == false);\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\t\r\n\t\trequire(balances[user] >= amount);\r\n\t\tuint money = keyprice*amount*(100 - sellkeyper)/100;\r\n\t\trequire(setend(money) == false);\r\n\t\trequire(address(this).balance > money);\r\n\t\tuserethsused[user].add(money);\r\n\t\tuser.transfer(money);\r\n\t}\r\n\t/*\r\n\t * 获取总发行\r\n\t */\r\n\tfunction totalSupply() public view returns(uint) {\r\n\t\treturn _totalSupply.sub(balances[this]);\r\n\t}\r\n\t\r\n\tfunction canbuynum() public view returns(uint num) {\r\n\t    num = basekeynum.add(basekeylast).sub(totalSupply());\r\n\t    if(num == 0) {\r\n\t        num = 1 ether;\r\n\t    }\r\n\t}\r\n\tfunction buyprices() public view returns(uint price) {\r\n\t    price = keyprice;\r\n\t}\r\n\tfunction buynums(uint money) public view returns(uint num) {\r\n\t    num = money.div(keyprice);\r\n\t}\r\n\tfunction buykey(uint buynum) public payable returns(bool success){\r\n\t    require(actived == true);\r\n\t    require(isend == false);\r\n\t    uint money = msg.value;\r\n\t    address user = msg.sender;\r\n\t    require(user.balance > keyprice);\r\n\t    require(money >= keyprice);\r\n\t    //require(money <= keyprice.mul(2000));\r\n\t    require(user.balance >= money);\r\n\t    require(eths[user] > 0);\r\n\t    require(buynum >= 1 ether);\r\n\t    uint buymoney = keyprice.mul(buynum.div(1 ether));\r\n\t    require(buymoney == money);\r\n\t    uint canbuynums = canbuynum();\r\n\t    require(buynum <= canbuynums);\r\n\t    uint total = totalSupply().add(buynum);\r\n\t    \r\n\t    if(total > basekeynum + basekeylast){\r\n\t       basekeynum = basekeynum + basekeylast;\r\n\t       basekeylast = basekeylast + basekeysub;\r\n\t       keyprice = ((basekeylast/basekeysub) - 4)/100;\r\n\t    }\r\n\t    mykeyeths[user].add(money);\r\n\t    sysethnum.add(money);\r\n\t\t//userethnum.add(money);\r\n\t    _transfer(this, user, buynum);\r\n\t    return(true);\r\n\t    \r\n\t}\r\n\tfunction activeuser() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    eths[user] = 0;\r\n\t    systemtag[user] = tags;\r\n\t    return(true);\r\n\t}\r\n\tfunction ended() public returns(bool) {\r\n\t    require(isend == true);\r\n\t    require(now > opentime);\r\n\t    \r\n\t    address user = msg.sender;\r\n\t    require(usereths[user]/2 > userethsused[user]);\r\n\t    uint money = usereths[user]/2 - userethsused[user];\r\n\t    require(address(this).balance > money);\r\n\t\tuserethsused[user].add(money);\r\n\t\teths[user] = 0;\r\n\t\t\r\n\t\tuser.transfer(money);\r\n\t\tif(now - opentime > 86400) {\r\n\t        isend = false;\r\n\t        tags++;\r\n\t        //this todo restart\r\n\t        \r\n\t    }\r\n\t    \r\n\t}\r\n\t\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"level2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getluckyuser\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keyprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelmans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"runtoeth\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ended\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexextend\",\"outputs\":[{\"name\":\"lttime\",\"type\":\"uint256\"},{\"name\":\"lkuser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getruns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lasttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyprices\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"indexview\",\"outputs\":[{\"name\":\"keynum\",\"type\":\"uint256\"},{\"name\":\"kprice\",\"type\":\"uint256\"},{\"name\":\"ethss\",\"type\":\"uint256\"},{\"name\":\"ethscan\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint256\"},{\"name\":\"keyid\",\"type\":\"uint256\"},{\"name\":\"runsnum\",\"type\":\"uint256\"},{\"name\":\"runscan\",\"type\":\"uint256\"},{\"name\":\"top1num\",\"type\":\"uint256\"},{\"name\":\"top2num\",\"type\":\"uint256\"},{\"name\":\"top3num\",\"type\":\"uint256\"},{\"name\":\"yestodaycom\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeyethsused\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myruntime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timedata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myrunmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getcanuse\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeyeths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getprize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"},{\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"gettruelevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myprizedayget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myprizedaygetdata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isend\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelsuns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myidkeys\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"luckyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysuns\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allprizeused\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ethbuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getluckyprize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daysusereths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pubper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getmykeyid\",\"outputs\":[{\"name\":\"ky\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycantime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getyestodayget\",\"outputs\":[{\"name\":\"m\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dayseths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activeuser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moneydata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canbuynum\",\"outputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettormow\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellkeyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelsunsday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"per\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getcanuserun\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellkey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelmansday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getall\",\"outputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buynum\",\"type\":\"uint256\"}],\"name\":\"buykey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"gettopid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeysid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"runper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"gettags\",\"outputs\":[{\"name\":\"t\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettodayget\",\"outputs\":[{\"name\":\"m\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysunsdaynum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"keybuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"buynums\",\"outputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"opentime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keysid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mythird\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getlevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allprize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"admAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getyestoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"keyid\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"getnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tags\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mansdata\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"activekey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"level1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycanmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"t\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceOuttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"level3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeactivetime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"geteths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysecond\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daysgeteths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Oasis","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://969f6431b84377a313dd2fe4274cf15cbadf16b82831e6a1a8f825f7f051bf5c"}]}