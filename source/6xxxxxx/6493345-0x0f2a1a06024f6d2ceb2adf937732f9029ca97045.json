{"status":"1","message":"OK","result":[{"SourceCode":"//StrongCapital v1.2.2\r\n\r\n\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\ncontract Capital {\r\n  uint constant public CASH_BACK_PERCENT = 3;\r\n  uint constant public PROJECT_FEE_PERCENT = 20;\r\n  uint constant public PER_BLOCK = 48;\r\n  uint constant public MINIMUM_INVEST = 10000000000000000 wei;\r\n  uint public wave;\r\n  \r\n  address public owner;\r\n  address public admin;\r\n  address[] public addresses;\r\n\r\n  bool public pause;\r\n\r\n  mapping(address => Investor) public investors;\r\n  TheStrongest public boss;\r\n  \r\n  modifier onlyOwner {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n  struct Investor {\r\n    uint ID;\r\n    uint deposit;\r\n    uint depositCount;\r\n    uint blockNumber;\r\n    address referrer;\r\n  }\r\n\r\n  struct TheStrongest {\r\n    address addr;\r\n    uint deposit;\r\n  }\r\n\r\n  constructor () public {\r\n    owner = msg.sender;\r\n    admin = msg.sender;\r\n    addresses.length = 1;\r\n    wave = 1;\r\n  }\r\n\r\n  function() payable public {\r\n    if(owner == msg.sender){\r\n      return;\r\n    }\r\n\r\n    require(pause == false);\r\n    require(msg.value == 0 || msg.value >= MINIMUM_INVEST);\r\n\r\n    Investor storage user = investors[msg.sender];\r\n    \r\n    if(user.ID == 0){\r\n      msg.sender.transfer(0 wei);\r\n      user.ID = addresses.push(msg.sender);\r\n\r\n      address referrer = bytesToAddress(msg.data);\r\n      if (investors[referrer].deposit > 0 && referrer != msg.sender) {\r\n        user.referrer = referrer;\r\n      }\r\n    }\r\n\r\n    if(user.deposit != 0) {\r\n      uint amount = getInvestorDividendsAmount(msg.sender);\r\n      if(address(this).balance < amount){\r\n        pause = true;\r\n        return;\r\n      }\r\n\r\n      msg.sender.transfer(amount);\r\n    }\r\n\r\n    admin.transfer(msg.value * PROJECT_FEE_PERCENT / 100);\r\n\r\n    user.deposit += msg.value;\r\n    user.depositCount += 1;\r\n    user.blockNumber = block.number;\r\n\r\n    uint bonusAmount = msg.value * CASH_BACK_PERCENT / 100;\r\n\r\n    if (user.referrer != 0x0) {\r\n      user.referrer.transfer(bonusAmount);\r\n      if (user.depositCount == 1) {\r\n        msg.sender.transfer(bonusAmount);\r\n      }\r\n    } else if (boss.addr > 0x0) {\r\n      if(msg.sender != boss.addr){\r\n        if(user.deposit < boss.deposit){\r\n          boss.addr.transfer(bonusAmount);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(user.deposit > boss.deposit) {\r\n      boss = TheStrongest(msg.sender, user.deposit);\r\n    }\r\n  }\r\n\r\n  function getInvestorCount() public view returns (uint) {\r\n    return addresses.length - 1;\r\n  }\r\n\r\n  function getInvestorDividendsAmount(address addr) public view returns (uint) {\r\n    uint amount = ((investors[addr].deposit * ((block.number - investors[addr].blockNumber) * PER_BLOCK)) / 10000000);\r\n    return amount;\r\n  }\r\n\r\n  function Restart() private {\r\n    address addr;\r\n\r\n    for (uint256 i = addresses.length - 1; i > 0; i--) {\r\n      addr = addresses[i];\r\n      addresses.length -= 1;\r\n      delete investors[addr];\r\n    }\r\n\r\n    pause = false;\r\n    wave += 1;\r\n\r\n    delete boss;\r\n  }\r\n\r\n  function payout() public {\r\n    if (pause) {\r\n      Restart();\r\n      return;\r\n    }\r\n\r\n    uint amount;\r\n\r\n    for(uint256 i = addresses.length - 1; i >= 1; i--){\r\n      address addr = addresses[i];\r\n\r\n      amount = getInvestorDividendsAmount(addr);\r\n      investors[addr].blockNumber = block.number;\r\n\r\n      if (address(this).balance < amount) {\r\n        pause = true;\r\n        return;\r\n      }\r\n\r\n      addr.transfer(amount);\r\n    }\r\n  }\r\n  \r\n  function transferOwnership(address addr) onlyOwner public {\r\n    owner = addr;\r\n  }\r\n\r\n  function bytesToAddress(bytes bys) private pure returns (address addr) {\r\n    assembly {\r\n      addr := mload(add(bys, 20))\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_INVEST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"ID\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"depositCount\",\"type\":\"uint256\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"referrer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wave\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CASH_BACK_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getInvestorDividendsAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROJECT_FEE_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PER_BLOCK\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Capital","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4b7b8ce97857a23838388c92a1b2cdfd96cc7c342f84c097ac2b157f8e6045fb"}]}