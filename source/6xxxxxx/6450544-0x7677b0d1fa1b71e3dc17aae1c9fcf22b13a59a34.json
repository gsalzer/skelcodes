{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n *\r\n * Easy Investment Lottery Contract\r\n *  - EARN 5% PER DAY IN YOUR ACCOUNT BALANCE\r\n *  - DOUBLE YOUR PROFIT WITH LOTTERY AT 50%\r\n *  - YOUR WINNING IS SENT DIRECTLY TO YOU (then tip the house to celebrate)\r\n *\r\n * How to use:\r\n *  1. Send ether to start your easy investment at 5% per day\r\n *\r\n *  2. Send 0 ether to double your profit with lottery at 50%\r\n *                            OR\r\n *     Send more ether to reinvest and play the lottery at the same time\r\n *\r\n * RECOMMENDED GAS LIMIT: 70000\r\n * RECOMMENDED GAS PRICE: 6 gwei\r\n *\r\n * Contract reviewed and approved by the house!!!\r\n *\r\n */\r\ncontract WhoWins {\r\n    // records your account balance\r\n    mapping (address => uint256) public balance;\r\n    // records block number of your last transaction\r\n    mapping (address => uint256) public atBlock;\r\n\r\n    // records casino's address\r\n    address public house;\r\n    constructor() public {\r\n        house = msg.sender;\r\n    }\r\n\r\n    // this function is called when you send a transaction to this contract\r\n    function () external payable {\r\n        // if sender (aka YOU) is invested more than 0 ether\r\n        if (balance[msg.sender] != 0) {\r\n            // calculate profit as such:\r\n            // profit = balance * 5% * (blocks since last transaction) / average Ethereum blocks per day\r\n            uint256 profit = balance[msg.sender] * 5 / 100 * (block.number - atBlock[msg.sender]) / 5900;\r\n\r\n            // Random\r\n            uint8 toss = uint8(keccak256(abi.encodePacked(blockhash(block.timestamp), block.difficulty, block.coinbase))) % 2;\r\n            if (toss == 0) {\r\n                // double your profit, you won!!!\r\n                uint256 winning = profit * 2;\r\n\r\n                // send winning directly to YOU\r\n                msg.sender.transfer(profit * 2);\r\n\r\n                // send a tip of 5% to the house\r\n                house.transfer(winning * 5 / 100);\r\n            }\r\n        }\r\n\r\n        // record balance and block number of your transaction\r\n        balance[msg.sender] += msg.value;\r\n        atBlock[msg.sender] = block.number;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"house\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"WhoWins","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://095d692bd3f2531833ccbb6eb27c4d07b14bd1784e6aae377adbd646f91700c2"}]}