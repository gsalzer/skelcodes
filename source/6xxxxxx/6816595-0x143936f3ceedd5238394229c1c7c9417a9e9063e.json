{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract MultiSign {\r\n    mapping (address => bool) public signerSet;\r\n\r\n    function MultiSign(\r\n        address[] _signers\r\n        )\r\n        public\r\n    {\r\n        for (uint i = 0; i < _signers.length; i++) {\r\n            require(_signers[i] != address(0));\r\n            signerSet[_signers[i]] = true;\r\n        }\r\n    }\r\n\r\n    // 取签名公钥\r\n    function verify_addr(bytes32 _message, uint8 _v, bytes32 _r, bytes32 _s) public constant returns (address addr) {\r\n       address signer = ecrecover(_message, _v, _r, _s);\r\n       addr = signer;\r\n       return signer;\r\n       }\r\n\r\n    function verify_one(bytes32 _message, uint8 _v, bytes32 _r, bytes32 _s) public constant returns (bool success) {\r\n       address signer = ecrecover(_message, _v, _r, _s);\r\n       success = signerSet[signer];\r\n       return success;\r\n       }\r\n\r\n    function verify_two(bytes32 _message, uint8 _v1, bytes32 _r1, bytes32 _s1, uint8 _v2, bytes32 _r2, bytes32 _s2) public constant returns (bool success) {\r\n       address signer1 = ecrecover(_message, _v1, _r1, _s1);\r\n       address signer2 = ecrecover(_message, _v2, _r2, _s2);\r\n       success = signerSet[signer1] && signerSet[signer2];\r\n       return success;\r\n       }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_message\",\"type\":\"bytes32\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"verify_addr\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"signerSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_message\",\"type\":\"bytes32\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"verify_one\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_message\",\"type\":\"bytes32\"},{\"name\":\"_v1\",\"type\":\"uint8\"},{\"name\":\"_r1\",\"type\":\"bytes32\"},{\"name\":\"_s1\",\"type\":\"bytes32\"},{\"name\":\"_v2\",\"type\":\"uint8\"},{\"name\":\"_r2\",\"type\":\"bytes32\"},{\"name\":\"_s2\",\"type\":\"bytes32\"}],\"name\":\"verify_two\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_signers\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"MultiSign","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://1225d4b202eaed98396c4e33e62678175be5a1c594b22265080b2d7e4ca8512c"}]}