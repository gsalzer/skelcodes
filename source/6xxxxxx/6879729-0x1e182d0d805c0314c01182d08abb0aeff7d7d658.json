{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20 {\r\n\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n}\r\n\r\ncontract DepositRegistry {\r\n\r\n    function getTokenContract() public view returns(address);\r\n    function getDepositAdmin() public view returns(address);\r\n    function getColdWallet() public view returns(address);\r\n\r\n    function changeColdWallet(address _newWallet) public;\r\n\r\n    event ColdWalletChanged(address previousWallet, address newWallet);\r\n    event TokenChanged(address previousToken, address newToken);\r\n\r\n}\r\n\r\ncontract DepositWallet {\r\n\r\n    function sweepTokens() public;\r\n    \r\n    event DepositProcessed(address indexed coldWallet, uint amount);\r\n\r\n}\r\n\r\ncontract DepositWalletImpl is DepositWallet {\r\n\r\n    DepositRegistry public depositRegistry;\r\n\r\n    constructor(DepositRegistry _depositRegistry) public {\r\n        depositRegistry = _depositRegistry;\r\n    }\r\n\r\n    function sweepTokens() public {\r\n        address tokenContractAddress = depositRegistry.getTokenContract();\r\n        ERC20 tokenContract = ERC20(tokenContractAddress);\r\n\r\n        tokenContract.balanceOf(address(this));\r\n        uint currentBalance = tokenContract.balanceOf(address(this));\r\n\r\n        if (currentBalance > 0) {\r\n            address coldWallet = depositRegistry.getColdWallet();\r\n            require(tokenContract.transfer(coldWallet, currentBalance), \"Failed to transfer tokens\");\r\n            emit DepositProcessed(coldWallet, currentBalance);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"sweepTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_depositRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"coldWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositProcessed\",\"type\":\"event\"}]","ContractName":"DepositWalletImpl","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000caa672dda3234a41ec5ea0adf2193da245383d4c","Library":"","SwarmSource":"bzzr://649ee3d48438e46068e1f958cb355732dc884353183dcb9d0efdcdf7ee972042"}]}