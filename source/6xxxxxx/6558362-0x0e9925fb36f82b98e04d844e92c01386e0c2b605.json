{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract Ownable\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tProperties\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    address public owner;\r\n\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tEvents\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    event OwnershipTransferred\r\n    (\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tConstructor\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    constructor() public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tModifiers\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function renounceOwnership() public onlyOwner\r\n    {\r\n        emit OwnershipRenounced(owner);\r\n        owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner\r\n    {\r\n        _transferOwnership(_newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address _newOwner) internal\r\n    {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\nlibrary SafeMath\r\n{\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c)\r\n    {\r\n        if(a == 0)\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c)\r\n    {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ERC20Basic\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tEvents\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\ncontract ERC20 is ERC20Basic\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tEvents\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    event Approval\r\n    (\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\ncontract TokenDestructible is Ownable\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tConstructor\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    constructor() public payable { }\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function destroy(address[] tokens) onlyOwner public\r\n    {\r\n        for (uint256 i = 0; i < tokens.length; i++)\r\n        {\r\n            ERC20Basic token = ERC20Basic(tokens[i]);\r\n            uint256 balance = token.balanceOf(this);\r\n            token.transfer(owner, balance);\r\n        }\r\n\r\n        selfdestruct(owner);\r\n    }\r\n}\r\n\r\ncontract BasicToken is ERC20Basic\r\n{\r\n    using SafeMath for uint256;\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tProperties\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    uint256 totalSupply_;\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function totalSupply() public view returns (uint256)\r\n    {\r\n        return totalSupply_;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tProperties\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function transferFrom(address _from,address _to,uint256 _value) public returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender,uint256 _value) public returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner,address _spender) public view returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(address _spender,uint _addedValue) public returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(address _spender,uint _subtractedValue) public returns (bool)\r\n    {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if(_subtractedValue > oldValue)\r\n        {\r\n            allowed[msg.sender][_spender] = 0;\r\n        }\r\n        else\r\n        {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract BurnableToken is BasicToken\r\n{\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tEvents\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function burn(uint256 _value) public\r\n    {\r\n        _burn(msg.sender, _value);\r\n    }\r\n\r\n    function _burn(address _who, uint256 _value) internal\r\n    {\r\n        require(_value <= balances[_who]);\r\n        balances[_who] = balances[_who].sub(_value);\r\n        totalSupply_ = totalSupply_.sub(_value);\r\n        emit Burn(_who, _value);\r\n        emit Transfer(_who, address(0), _value);\r\n    }\r\n}\r\n\r\ncontract StandardBurnableToken is BurnableToken, StandardToken\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tPublic Methods\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    function burnFrom(address _from, uint256 _value) public\r\n    {\r\n        require(_value <= allowed[_from][msg.sender]);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        _burn(_from, _value);\r\n    }\r\n\r\n}\r\n\r\ncontract TrinoToken is StandardBurnableToken,TokenDestructible\r\n{\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tProperties\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    string public name = \"TRINO\";\r\n    string public symbol = \"TIO\";\r\n\r\n    uint public decimals = 18;\r\n    uint256 public INITIAL_SUPPLY = 3750000000 * (10 ** decimals); // 3 750 000 000\r\n\r\n    //--------------------------------------------------------------------------\r\n    //\r\n    //\tConstructor\r\n    //\r\n    //--------------------------------------------------------------------------\r\n\r\n    constructor() public\r\n    {\r\n        owner = msg.sender;\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n        balances[owner] = INITIAL_SUPPLY;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"TrinoToken","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f609f0a9632ba3774da978105098eb6e0f3fbae44885576f493394c5d1d3a341"}]}