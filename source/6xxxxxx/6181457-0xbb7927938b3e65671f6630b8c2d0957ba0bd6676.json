{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18 ;\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  \r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  \r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  \r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n   \r\n   \r\n   \r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   \r\n   \r\n   \r\n    return a / b;\r\n  }\r\n\r\n  \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ContractiumInterface {\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function contractSpend(address _from, uint256 _value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n\r\n    function owner() public view returns (address);\r\n\r\n    function bonusRateOneEth() public view returns (uint256);\r\n    function currentTotalTokenOffering() public view returns (uint256);\r\n    function currentTokenOfferingRaised() public view returns (uint256);\r\n\r\n    function isOfferingStarted() public view returns (bool);\r\n    function offeringEnabled() public view returns (bool);\r\n    function startTime() public view returns (uint256);\r\n    function endTime() public view returns (uint256);\r\n}\r\n\r\n\r\ncontract ContractiumKrypStrong is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    ContractiumInterface ctuContract;\r\n    address public constant KRYPSTRONG = 0x9808bA6d86119ed7a801Cde0bdFE7FF4dC5b5298;\r\n    address public constant CONTRACTIUM = 0x943ACa8ed65FBf188A7D369Cfc2BeE0aE435ee1B;\r\n    address public ownerCtuContract;\r\n    address public owner;\r\n\r\n    uint8 public constant decimals = 18;\r\n    uint256 public unitsOneEthCanBuy = 15000;\r\n\r\n   \r\n    uint256 public currentTokenOfferingRaised;\r\n\r\n    function() public payable {\r\n\r\n        require(msg.sender != owner);\r\n\r\n       \r\n        uint256 bonusRateOneEth = ctuContract.bonusRateOneEth();\r\n\r\n       \r\n        uint256 amount = msg.value.mul(unitsOneEthCanBuy);\r\n\r\n       \r\n        uint256 amountBonus = msg.value.mul(bonusRateOneEth);\r\n        \r\n       \r\n        amount = amount.add(amountBonus);\r\n\r\n       \r\n        uint256 remain = ctuContract.balanceOf(ownerCtuContract);\r\n        require(remain >= amount);\r\n        preValidatePurchase(amount);\r\n\r\n       \r\n        address _from = ownerCtuContract;\r\n        address _to = msg.sender;\r\n        require(ctuContract.transferFrom(_from, _to, amount));\r\n        \r\n       \r\n        currentTokenOfferingRaised = currentTokenOfferingRaised.add(amount);  \r\n\r\n       \r\n        uint256 oneHundredth = msg.value.div(100);\r\n        uint256 sevenHundredths = oneHundredth.mul(7);\r\n        uint256 ninetyThreeHundredths = msg.value.sub(sevenHundredths);\r\n\r\n        KRYPSTRONG.transfer(sevenHundredths);\r\n        ownerCtuContract.transfer(ninetyThreeHundredths);  \r\n    }\r\n\r\n    constructor() public {\r\n        ctuContract = ContractiumInterface(CONTRACTIUM);\r\n        ownerCtuContract = ctuContract.owner();\r\n        owner = msg.sender;\r\n    }\r\n\r\n    \r\n    function preValidatePurchase(uint256 _amount) internal {\r\n        bool isOfferingStarted = ctuContract.isOfferingStarted();\r\n        bool offeringEnabled = ctuContract.offeringEnabled();\r\n        uint256 startTime = ctuContract.startTime();\r\n        uint256 endTime = ctuContract.endTime();\r\n        uint256 currentTotalTokenOffering = ctuContract.currentTotalTokenOffering();\r\n        uint256 currentTokenOfferingRaisedContractium = ctuContract.currentTokenOfferingRaised();\r\n\r\n        require(_amount > 0);\r\n        require(isOfferingStarted);\r\n        require(offeringEnabled);\r\n        require(currentTokenOfferingRaised.add(currentTokenOfferingRaisedContractium.add(_amount)) <= currentTotalTokenOffering);\r\n        require(block.timestamp >= startTime && block.timestamp <= endTime);\r\n    }\r\n    \r\n    \r\n    function setCtuContract(address _ctuAddress) public onlyOwner {\r\n        require(_ctuAddress != address(0x0));\r\n        ctuContract = ContractiumInterface(_ctuAddress);\r\n        ownerCtuContract = ctuContract.owner();\r\n    }\r\n\r\n    \r\n    function resetCurrentTokenOfferingRaised() public onlyOwner {\r\n        currentTokenOfferingRaised = 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetCurrentTokenOfferingRaised\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitsOneEthCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KRYPSTRONG\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACTIUM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ctuAddress\",\"type\":\"address\"}],\"name\":\"setCtuContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTokenOfferingRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerCtuContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"ContractiumKrypStrong","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1256f387d3fb6fe708c9c65d98ec4e63e1866df94e0cb5d528c6425021e26a9f"}]}