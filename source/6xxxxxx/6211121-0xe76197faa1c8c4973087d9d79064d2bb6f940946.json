{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract vault3 {\r\n    address public account1;\r\n    address public account2;\r\n    address public account3;\r\n\r\n    // There's only one God account1\r\n    // with the only extra privilege to change account2 or account3\r\n    modifier onlyGod() {\r\n        require(msg.sender == account1, \"You are not God\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwners () {\r\n        require((msg.sender == account1) || (msg.sender == account2) || (msg.sender == account2), \"You are not 1 of the owners\");\r\n        _;\r\n    }\r\n\r\n    // accounts must be distict\r\n    constructor (address _acct1, address _acct2, address _acct3) public {\r\n        // addresses must be unique\r\n        require((_acct1 != _acct2) && (_acct1 != _acct3) && (_acct2 != _acct3), \"Accounts must be distinct\");\r\n        account1 = _acct1;\r\n        account2 = _acct2;\r\n        account3 = _acct3;\r\n    }\r\n\r\n    // whatever sent msg.value is the deposit \r\n    function deposit() public payable {\r\n\r\n    }\r\n\r\n    // withdraw first then change the account\r\n    function changeAcct2(address _newAcct) onlyGod public {\r\n        require((_newAcct != account1) && (_newAcct != account3), \"Accounts must be distinct\");\r\n        withdraw();\r\n        account2 = _newAcct;\r\n    }\r\n\r\n    function changeAcct3(address _newAcct) onlyGod public {\r\n        require((_newAcct != account1) && (_newAcct != account2), \"Accounts must be distinct\");\r\n        withdraw();\r\n        account3 = _newAcct;\r\n    }\r\n\r\n    function withdraw() public onlyOwners {\r\n        uint256 contractBalance = address(this).balance;\r\n        uint256 share = contractBalance / 3;\r\n\r\n        account1.transfer(share);\r\n        account2.transfer(share);\r\n        account3.transfer(share);\r\n    }\r\n\r\n    // any of the owners can kill the contract\r\n    // liquidation of the company | disputes\r\n    function withdrawAndKill() onlyOwners public {\r\n        withdraw();\r\n        selfdestruct(0);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"account3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAcct\",\"type\":\"address\"}],\"name\":\"changeAcct2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAndKill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"account2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAcct\",\"type\":\"address\"}],\"name\":\"changeAcct3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"account1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_acct1\",\"type\":\"address\"},{\"name\":\"_acct2\",\"type\":\"address\"},{\"name\":\"_acct3\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"vault3","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000045405daa47eff12bc225ddcac932ce5ef965b39b00000000000000000000000011fcc9f23fbab2ca8041309d8ad8d98781fc4ba8000000000000000000000000b027928ce009328ff0b5644e9dd9a62229612897","Library":"","SwarmSource":"bzzr://c22b45904dc989404df689cad91ebbbbb70fc3ba37a2a5bdc60c89f729fab690"}]}