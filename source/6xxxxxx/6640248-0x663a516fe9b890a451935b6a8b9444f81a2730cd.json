{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\ncontract Sender {\r\n    address cleaner;\r\n    constructor(address _cleaner) public {\r\n        cleaner = _cleaner;\r\n    }\r\n    function() public payable {\r\n        forward(cleaner);\r\n    }\r\n    function forward(address to) public payable returns(bool) {\r\n        require(msg.value > 0);\r\n        to.transfer(msg.value);\r\n        return true;\r\n    }\r\n    function split(address[] to) public payable returns(bool) {\r\n        require(msg.value >= to.length && to.length <= 254);\r\n        uint left = msg.value;\r\n        uint a = left % to.length;\r\n        uint i = 0;\r\n        if (a > 0) {\r\n            msg.sender.transfer(a);\r\n            left -= a;\r\n        }\r\n        uint part = left / to.length;\r\n        while (i < to.length) {\r\n            if (to[i] != address(0) && address(this) != to[i]) {\r\n                to[i].transfer(part);\r\n                left -= part;\r\n            }\r\n            i++;\r\n        }\r\n        require(left == 0);\r\n        return true;\r\n    }\r\n    function bulk(address[] to, uint[] amount) public payable returns(bool) {\r\n        require(to.length == amount.length && msg.value >= amount[0] && to.length <= 254);\r\n        uint left = msg.value;\r\n        uint i = 0;\r\n        while (i < to.length) {\r\n            if (to[i] != address(0) && address(this) != to[i] && amount[i] > 0) {\r\n                if (amount[i] <= left) {\r\n                    to[i].transfer(amount[i]);\r\n                    left -= amount[i];\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        if (left > 0) {\r\n            msg.sender.transfer(left);\r\n            left = 0;\r\n        }\r\n        require(left == 0);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"forward\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address[]\"}],\"name\":\"split\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"bulk\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_cleaner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Sender","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d9e1987e11fac4938d8651a6441e28c91cc839fe","Library":"","SwarmSource":"bzzr://f84203b72969137b49e2ef9505ae580587a3c91df43b7d4bd7679445eaa739d3"}]}