{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n* ETHEREUM ACCUMULATIVE SMARTCONTRACT\r\n* Web              - https://EasyCash.co\r\n* EN  Telegram_chat: https://t.me/EasyCash_en\t\t\r\n* \r\n*  - GAIN 4-5% OF YOUR DEPOSIT  PER 24 HOURS (every 5900 blocks)\r\n*  - 4% IF YOUR TOTAL DEPOSIT 0.01-1 ETH\r\n*  - 4.25% IF YOUR TOTAL DEPOSIT 1-10 ETH\r\n*  - 4.5% IF YOUR TOTAL DEPOSIT 10-20 ETH\r\n*  - 4.75% IF YOUR TOTAL DEPOSIT 20-40 ETH\r\n*  - 5% IF YOUR TOTAL DEPOSIT 40+ ETH\r\n*  - Life-long payments\r\n*  - The revolutionary reliability\r\n*  - Minimal contribution is 0.01 eth\r\n*  - Currency and payment - ETH\r\n*  - !!!It is not allowed to transfer from exchanges, only from your personal ETH wallet!!!\r\n*  - Contribution allocation schemes:\r\n*    -- 88% payments\r\n*    -- 11% Marketing + Operating Expenses\r\n*\r\n*   ---About the Project\r\n*  Blockchain-enabled smart contracts have opened a new era of trustless relationships without \r\n*  intermediaries. This technology opens incredible financial possibilities. Our automated investment \r\n*  distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be \r\n*  freely accessed online. In order to insure our investors' complete security, full control over the \r\n*  project has been transferred from the organizers to the smart contract: nobody can influence the \r\n*  system's permanent autonomous functioning.\r\n* \r\n* ---How to use:\r\n*  1. Send from ETH wallet to the smart contract address \"0x87F94f2C11C8F6B24E6D54B7B7a3356ab1aD0968\"\r\n*     any amount above 0.01 ETH.\r\n*  2. Verify your transaction in the history of your application or etherscan.io, specifying the address \r\n*     of your wallet.\r\n*  3a. Claim your profit by sending 0 ether transaction \r\n*  OR\r\n*  3b. For reinvest, you need first to remove the accumulated percentage of charges (by sending 0 ether \r\n*      transaction), and only after that, deposit the amount that you want to reinvest.\r\n*  \r\n* RECOMMENDED GAS LIMIT: 200000\r\n* RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n* You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n*\r\n* \r\n* Contracts reviewed and approved by pros!\r\n*/\r\npragma solidity ^0.4.24;\r\n\r\ncontract EasyCash {\r\n    mapping (address => uint256) invested;\r\n    mapping (address => uint256) atBlock;\r\n    uint256 minValue; \r\n    address owner1;    // 10%\r\n    address owner2;    // 1%\r\n    event Withdraw (address indexed _to, uint256 _amount);\r\n    event Invested (address indexed _to, uint256 _amount);\r\n    \r\n    constructor () public {\r\n        owner1 = 0x6fDb012E4a57623eA74Cc1a6E5095Cda63f2C767;    // 10%\r\n        owner2 = 0xf62f85457f97CE475AAa5523C5739Aa8d4ba64C1;    // 1%\r\n        minValue = 0.01 ether; //min amount for transaction\r\n    }\r\n    \r\n    /**\r\n     * This function calculated percent\r\n     * less than 1 Ether    - 4.0  %\r\n     * 1-10 Ether           - 4.25 %\r\n     * 10-20 Ether          - 4.5  %\r\n     * 20-40 Ether          - 4.75 %\r\n     * more than 40 Ether   - 5.0  %\r\n     */\r\n        function getPercent(address _investor) internal view returns (uint256) {\r\n        uint256 percent = 400;\r\n        if(invested[_investor] >= 1 ether && invested[_investor] < 10 ether) {\r\n            percent = 425;\r\n        }\r\n\r\n        if(invested[_investor] >= 10 ether && invested[_investor] < 20 ether) {\r\n            percent = 450;\r\n        }\r\n\r\n        if(invested[_investor] >= 20 ether && invested[_investor] < 40 ether) {\r\n            percent = 475;\r\n        }\r\n\r\n        if(invested[_investor] >= 40 ether) {\r\n            percent = 500;\r\n        }\r\n        \r\n        return percent;\r\n    }\r\n    \r\n    /**\r\n     * Main function\r\n     */\r\n    function () external payable {\r\n        require (msg.value == 0 || msg.value >= minValue,\"Min Amount for investing is 0.01 Ether.\");\r\n        \r\n        uint256 invest = msg.value;\r\n        address sender = msg.sender;\r\n        //fee owners\r\n        owner1.transfer(invest / 10);\r\n        owner2.transfer(invest / 100);\r\n            \r\n        if (invested[sender] != 0) {\r\n            uint256 amount = invested[sender] * getPercent(sender) / 10000 * (block.number - atBlock[sender]) / 5900;\r\n\r\n            //fee sender\r\n            sender.transfer(amount);\r\n            emit Withdraw (sender, amount);\r\n        }\r\n\r\n        atBlock[sender] = block.number;\r\n        invested[sender] += invest;\r\n        if (invest > 0){\r\n            emit Invested(sender, invest);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * This function show deposit\r\n     */\r\n    function showDeposit (address _deposit) public view returns(uint256) {\r\n        return invested[_deposit];\r\n    }\r\n\r\n    /**\r\n     * This function show block of last change\r\n     */\r\n    function showLastChange (address _deposit) public view returns(uint256) {\r\n        return atBlock[_deposit];\r\n    }\r\n\r\n    /**\r\n     * This function show unpayed percent of deposit\r\n     */\r\n    function showUnpayedPercent (address _deposit) public view returns(uint256) {\r\n        uint256 amount = invested[_deposit] * getPercent(_deposit) / 10000 * (block.number - atBlock[_deposit]) / 5900;\r\n        return amount;\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_deposit\",\"type\":\"address\"}],\"name\":\"showLastChange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deposit\",\"type\":\"address\"}],\"name\":\"showUnpayedPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_deposit\",\"type\":\"address\"}],\"name\":\"showDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Invested\",\"type\":\"event\"}]","ContractName":"EasyCash","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6bb4dcad9d113d9b6248615335073f3a60b4f40ed1142068e356de351a021a21"}]}