{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;  \r\ncontract Token{  \r\n    uint256 public totalSupply;  \r\n  \r\n    function balanceOf(address _owner) public constant returns (uint256 balance);  \r\n    function transfer(address _to, uint256 _value) public returns (bool success);  \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns     \r\n    (bool success);  \r\n  \r\n    function approve(address _spender, uint256 _value) public returns (bool success);  \r\n  \r\n    function allowance(address _owner, address _spender) public constant returns   \r\n    (uint256 remaining);  \r\n  \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);  \r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);  \r\n}  \r\n  \r\ncontract LhsToken is Token {  \r\n  \r\n    string public name;                   //名称，例如\"My test token\"  \r\n    uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.  \r\n    string public symbol;               //token简称,like MTT  \r\n    \r\n    mapping (address => uint256) balances;  \r\n    mapping (address => mapping (address => uint256)) allowed;  \r\n    \r\n    function LhsToken(uint256 _initialAmount, string _tokenName, uint8 _decimalUnits, string _tokenSymbol) public {  \r\n        totalSupply = _initialAmount * 10 ** uint256(_decimalUnits);         // 设置初始总量  \r\n        balances[msg.sender] = totalSupply; // 初始token数量给予消息发送者，因为是构造函数，所以这里也是合约的创建者  \r\n  \r\n        name = _tokenName;                     \r\n        decimals = _decimalUnits;            \r\n        symbol = _tokenSymbol;  \r\n    }  \r\n\r\n\r\n\r\n    // token的发送函数\r\n    function _transferFunc(address _from, address _to, uint _value) internal {\r\n\r\n        require(_to != 0x0);    // 不是零地址\r\n        require(balances[_from] >= _value);        // 有足够的余额来发送\r\n        require(balances[_to] + _value > balances[_to]);  // 这里也有意思, 不能发送负数的值(hhhh)\r\n\r\n        uint previousBalances = balances[_from] + balances[_to];  // 这个是为了校验, 避免过程出错, 总量不变对吧?\r\n        balances[_from] -= _value; //发钱 不多说\r\n        balances[_to] += _value;\r\n        Transfer(_from, _to, _value);   // 这里触发了转账的事件 , 见上event\r\n        assert(balances[_from] + balances[_to] == previousBalances);  // 判断总额是否一致, 避免过程出错\r\n    }\r\n  \r\n    function transfer(address _to, uint256 _value) public  returns (bool success) {\r\n        _transferFunc(msg.sender, _to, _value); // 这里已经储存了 合约创建者的信息, 这个函数是只能被合约创建者使用\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowed[_from][msg.sender]);     // 这句很重要, 地址对应的合约地址(也就是token余额)\r\n        allowed[_from][msg.sender] -= _value;\r\n        _transferFunc(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {  \r\n        return balances[_owner];  \r\n    }  \r\n  \r\n    function approve(address _spender, uint256 _value) public returns (bool success)     \r\n    {   \r\n        allowed[msg.sender][_spender] = _value;  \r\n        Approval(msg.sender, _spender, _value);  \r\n        return true;  \r\n    }  \r\n  \r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {  \r\n        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数  \r\n    }  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LhsToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000006333064617973000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035448440000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://0a85458dcde70cff5f4b6f9e82b962ffdfdc47a57dda47894ef9f0ff6c8e7fdb"}]}