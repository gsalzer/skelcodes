{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// https://github.com/ethereum/EIPs/issues/20\r\ninterface ERC20 {\r\n    function totalSupply() external view returns (uint supply);\r\n    function balanceOf(address _owner) external view returns (uint balance);\r\n    function transfer(address _to, uint _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) external returns (bool success);\r\n    function approve(address _spender, uint _value) external returns (bool success);\r\n    function allowance(address _owner, address _spender) external view returns (uint remaining);\r\n    function decimals() external view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ninterface KyberProxy {\r\n    function getExpectedRate(ERC20 src, ERC20 dest, uint srcQty)\r\n        external view\r\n        returns(uint expectedRate, uint slippageRate);\r\n}\r\n\r\ncontract PTToDaiConversionRate {\r\n    function recordImbalance(\r\n        ERC20 token,\r\n        int buyAmount,\r\n        uint rateUpdateBlock,\r\n        uint currentBlock\r\n    )\r\n        public {\r\n            // do nothing\r\n        }\r\n\r\n    function getRate(ERC20 token, uint currentBlockNumber, bool buy, uint qty) public view returns(uint) {\r\n        if(token != 0x094c875704c14783049DDF8136E298B3a099c446) return 0;\r\n        if(buy) return 0;\r\n        \r\n\r\n        uint slippageRate;\r\n        uint expectedRate;\r\n        (expectedRate,slippageRate) = KyberProxy(0x818E6FECD516Ecc3849DAf6845e3EC868087B755).\r\n                getExpectedRate(ERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE),\r\n                                ERC20(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359),\r\n                                (10**17 * qty) / 10**18);\r\n        return 1005 * (10**18 * 10**18/ expectedRate) / 1000;\r\n    }    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"currentBlockNumber\",\"type\":\"uint256\"},{\"name\":\"buy\",\"type\":\"bool\"},{\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"buyAmount\",\"type\":\"int256\"},{\"name\":\"rateUpdateBlock\",\"type\":\"uint256\"},{\"name\":\"currentBlock\",\"type\":\"uint256\"}],\"name\":\"recordImbalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PTToDaiConversionRate","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://03d234208f00feaa0071a1ed9f7965b83a140601ad46a3ea5eba650109e6dacc"}]}