{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\ncontract owned{\r\n\r\n    address public owner;\r\n\r\n    constructor ()public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function changeOwner(address newOwner) public onlyOwner{\r\n        owner = newOwner;\r\n    }\r\n\r\n    modifier onlyOwner{\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Erc20Token {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract NausiCoin is Erc20Token, owned {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n\r\n    uint _totalSupply;\r\n    mapping(address => uint) _balanceOf;\r\n    mapping(address => mapping(address => uint)) _allowance;\r\n\r\n    event Burn(address indexed from, uint amount);\r\n    event Mint(address indexed from, uint amount);\r\n    \r\n    constructor(string tokenName, string tokenSymbol, uint tokenDecimals, uint tokenTotalSupply) public {\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = tokenDecimals;\r\n\r\n        _totalSupply = tokenTotalSupply * 10**uint(decimals);\r\n        _balanceOf[msg.sender] = _totalSupply;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint){\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint balance){\r\n        return _balanceOf[tokenOwner];\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining){\r\n        return _allowance[tokenOwner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint value) public returns (bool success){\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public returns (bool success){\r\n        require(_allowance[from][msg.sender] >= value);\r\n        \r\n        _allowance[from][msg.sender] -= value;\r\n        _transfer(from, to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint value) public returns (bool succes) {\r\n        _allowance[msg.sender][spender] = value;\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address spender, uint value, bytes extraData) public returns (bool success){\r\n        tokenRecipient _spender = tokenRecipient(spender);\r\n        if(approve(spender, value)){\r\n            _spender.receiveApproval(msg.sender, value, this, extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function burnFrom(address from, uint amount) public onlyOwner returns(bool success) {\r\n        require(_balanceOf[from] >= amount);\r\n        require(_balanceOf[from] - amount <= _balanceOf[from]);\r\n\r\n        if(owner != from){\r\n            require(_allowance[msg.sender][from] >= amount);\r\n        }\r\n\r\n        _balanceOf[from] -= amount;\r\n        _allowance[msg.sender][from] -= amount;\r\n        _totalSupply -= amount;\r\n\r\n        emit Burn(from, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function mintTo(address to, uint amount) public onlyOwner returns(bool success){\r\n        require(_balanceOf[to] + amount >= _balanceOf[to]);\r\n        require(_totalSupply + amount >= _totalSupply);\r\n\r\n        _balanceOf[to] += amount;\r\n        _totalSupply += amount;\r\n\r\n        emit Mint(to, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function() public payable {\r\n        require(false);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) internal{\r\n        require(to != 0x0);\r\n        require(_balanceOf[from] >= value);\r\n        require(_balanceOf[to] + value >= _balanceOf[to]);\r\n\r\n        uint previousBalance = _balanceOf[from] + _balanceOf[to];\r\n\r\n        _balanceOf[from] -= value;\r\n        _balanceOf[to] += value;\r\n\r\n        emit Transfer(from, to, value);\r\n\r\n        assert(_balanceOf[from] + _balanceOf[to] == previousBalance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"succes\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"name\":\"tokenTotalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NausiCoin","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e800000000000000000000000000000000000000000000000000000000000000094e61757369436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054e41555349000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://17e60c6b73a5d6aed03752f937d0e27b295701be2122e614fd437f8134aa7008"}]}