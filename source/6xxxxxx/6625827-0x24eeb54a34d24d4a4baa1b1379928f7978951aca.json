{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'GPYX' token contract\r\n//\r\n// Deployed to : 0x6610F23DfC2a3DD959460c8EC04260629F55D28D\r\n// Symbol      : GPYX\r\n// Name        : PyrexCoin Platform service token\r\n// Total supply: 10000000\r\n// Decimals    : 18\r\n//\r\n// Enjoy.\r\n//\r\n// (c) by ILIK. \r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\ninterface tokenRecipient {function receiveApproval (address _from, uint256 _value, address _token, bytes _extradata) external;}\r\ncontract owned {\r\n    address public owner;\r\n    \r\n    constructor()public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n        \r\n    }\r\n    function transferOwnership (address newOwner)public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n    \r\n}\r\ncontract GPYX is owned{\r\n string public Name;\r\n string public Symbol;\r\n uint8 public decimals = 18;  \r\n uint256 public totalSupply;\r\n mapping (address => uint256) public balanceOf;\r\n mapping(address => mapping(address=> uint256)) public allowance;\r\n mapping(address => bool) public frozenAccount;\r\n \r\n \r\n event Transfer ( address indexed from, address indexed to, uint256 value);\r\n event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n event Burn(address indexed from, uint256 value);\r\n event FrozenFunds(address target, bool frozen);\r\n \r\n    constructor (\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n        ) public {\r\n            totalSupply = initialSupply*10**uint256(decimals);\r\n            balanceOf[msg.sender] = totalSupply;\r\n            Name = tokenName;\r\n            Symbol = tokenSymbol;\r\n            \r\n        }\r\n        function _transfer(address _from, address _to, uint _value) internal{\r\n            require(_to != 0x0);\r\n            require(balanceOf[_from] >=_value);\r\n            require(balanceOf[_to] +_value >= balanceOf[_to]);\r\n            require(!frozenAccount[msg.sender]);\r\n            \r\n            uint previousBalances = balanceOf[_from ] + balanceOf[_to];\r\n            \r\n            balanceOf[_from] -= _value;\r\n            balanceOf[_to] += _value;\r\n            emit Transfer (_from, _to, _value);\r\n            assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n            \r\n        }\r\n        function transfer(address _to, uint256 _value) public returns (bool success) {\r\n            _transfer(msg.sender, _to, _value);\r\n            return true;\r\n            \r\n        }\r\n        \r\n        function trasferFrom (address _from, address _to, uint256 _value) public returns(bool success)\r\n        {\r\n            \r\n            require(_value <=allowance[_from][msg.sender]);\r\n            allowance[_from][msg.sender] -=_value;\r\n            _transfer(_from,_to, _value);\r\n            return true;\r\n            \r\n        }\r\n        function approve (address _spender, uint256 _value) onlyOwner public\r\n        returns (bool success){\r\n            allowance[msg.sender][_spender] = _value;\r\n            emit Approval(msg.sender, _spender, _value);\r\n            return true;\r\n            \r\n        }\r\n        \r\n        function approveAndCall(address _spender, uint256 _value, bytes _extradata) public returns (bool success){\r\n            tokenRecipient spender = tokenRecipient(_spender);\r\n            \r\n            if(approve(_spender,_value)){\r\n                spender.receiveApproval(msg.sender, _value, this, _extradata);\r\n                return true;\r\n            }\r\n            \r\n        }\r\n        function burn (uint256 _value) onlyOwner public returns (bool success){\r\n            require(balanceOf[msg.sender] >= _value);\r\n            balanceOf[msg.sender] -= _value;\r\n            totalSupply -= _value;\r\n            emit Burn(msg.sender, _value);\r\n            return true;\r\n        }\r\n        function burnFrom(address _from, uint256 _value) onlyOwner public returns (bool success){\r\n            \r\n            require(balanceOf[_from] >= _value);\r\n\t\t\t\r\n\trequire(_value <= allowance[_from][msg.sender]);\r\n            \r\n            balanceOf[_from] -= _value;\r\n            totalSupply -= _value;\r\n            emit Burn(msg.sender, _value);\r\n            \r\n            return true;\r\n        }\r\n        \r\n        function freezeAccount (address target, bool freeze)public onlyOwner {\r\n            frozenAccount[target] = freeze;\r\n            emit FrozenFunds (target, freeze);\r\n            \r\n            \r\n        }\r\n        \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"trasferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extradata\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]","ContractName":"GPYX","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000f476f6c64656e5079726578436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044750595800000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://1b097fc8b35a246bc0e3f5d992814da9f756a53fee37e75519f64e0d345cfd12"}]}