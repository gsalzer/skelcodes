{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Athleticoin {\r\n\r\n    string public name = \"Athleticoin\";      //  token name\r\n    string public symbol = \"ATHA\";           //  token symbol\r\n    //string public version = \"newversion1.0\";\r\n    uint256 public decimals = 18;            //  token digit\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    uint256 public totalSupply = 0;\r\n    bool public stopped = false;\r\n\r\n    uint256 public sellPrice = 1530000000000;\r\n    uint256 public buyPrice = 1530000000000;\r\n    //000000000000000000\r\n    uint256 constant valueFounder = 500000000000000000000000000;\r\n\r\n    address owner = 0xA9F6e166D73D4b2CAeB89ca84101De2c763F8E86;\r\n    address redeem_address = 0xA1b36225858809dd41c3BE9f601638F3e673Ef48;\r\n    address owner2 = 0xC58ceD5BA5B1daa81BA2eD7062F5bBC9cE76dA8d;\r\n    address owner3 = 0x06c7d7981D360D953213C6C99B01957441068C82;\r\n    address redeemer = 0x91D0F9B1E17a05377C7707c6213FcEB7537eeDEB;\r\n    modifier isOwner {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier isRedeemer {\r\n        assert(redeemer == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier isRunning {\r\n        assert (!stopped);\r\n        _;\r\n    }\r\n\r\n    modifier validAddress {\r\n        assert(0x0 != msg.sender);\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        totalSupply = 2000000000000000000000000000;\r\n        balanceOf[owner] = valueFounder;\r\n        emit Transfer(0x0, owner, valueFounder);\r\n\r\n        balanceOf[owner2] = valueFounder;\r\n        emit Transfer(0x0, owner2, valueFounder);\r\n\r\n        balanceOf[owner3] = valueFounder;\r\n        emit Transfer(0x0, owner3, valueFounder);\r\n    }\r\n\r\n    function giveBlockReward() public {\r\n        balanceOf[block.coinbase] += 15000;\r\n    }\r\n\r\n    function mintToken(address target, uint256 mintedAmount) isOwner public {\r\n      balanceOf[target] += mintedAmount;\r\n      totalSupply += mintedAmount;\r\n      emit Transfer(0, this, mintedAmount);\r\n      emit Transfer(this, target, mintedAmount);\r\n    }\r\n\r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) isOwner public {\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n    }\r\n    \r\n    function changeRedeemer(address _redeemer) isOwner public {\r\n        redeemer = _redeemer;    \r\n    }\r\n    \r\n    function redeem(address target, uint256 token_amount) public payable returns (uint256 amount){\r\n        token_amount = token_amount * 1000000000000000000;\r\n        uint256 fee_amount = token_amount * 2 / 102;\r\n        uint256 redeem_amount = token_amount - fee_amount;\r\n        uint256 sender_amount = balanceOf[msg.sender];\r\n        uint256 fee_value = fee_amount * buyPrice / 1000000000000000000;\r\n        if (sender_amount >= redeem_amount){\r\n            require(msg.value >= fee_value);\r\n            balanceOf[target] += redeem_amount;                  // adds the amount to buyer's balance\r\n            balanceOf[msg.sender] -= redeem_amount;\r\n            emit Transfer(msg.sender, target, redeem_amount);               // execute an event reflecting the change\r\n            redeem_address.transfer(msg.value);\r\n        } else {\r\n            uint256 lack_amount = token_amount - sender_amount;\r\n            uint256 eth_value = lack_amount * buyPrice / 1000000000000000000;\r\n            lack_amount = redeem_amount - sender_amount;\r\n            require(msg.value >= eth_value);\r\n            require(balanceOf[owner] >= lack_amount);    // checks if it has enough to sell\r\n\r\n            balanceOf[target] += redeem_amount;                  // adds the amount to buyer's balance\r\n            balanceOf[owner] -= lack_amount;                        // subtracts amount from seller's balance\r\n            balanceOf[msg.sender] = 0;\r\n\r\n            eth_value = msg.value - fee_value;\r\n            owner.transfer(eth_value);\r\n            redeem_address.transfer(fee_value);\r\n            emit Transfer(msg.sender, target, sender_amount);               // execute an event reflecting the change\r\n            emit Transfer(owner, target, lack_amount);               // execute an event reflecting the change\r\n        }\r\n        return token_amount;                                    // ends function and returns\r\n    }\r\n\r\n    function redeem_deposit(uint256 token_amount) public payable returns(uint256 amount){\r\n        token_amount = token_amount * 1000000000000000000;\r\n        uint256 fee_amount = token_amount * 2 / 102;\r\n        uint256 redeem_amount = token_amount - fee_amount;\r\n        uint256 sender_amount = balanceOf[msg.sender];\r\n        uint256 fee_value = fee_amount * buyPrice / 1000000000000000000;\r\n        uint256 rest_value = msg.value - fee_value;\r\n        if (sender_amount >= redeem_amount){\r\n            require(msg.value >= fee_value);\r\n            balanceOf[redeemer] += redeem_amount;                  // adds the amount to buyer's balance\r\n            balanceOf[msg.sender] -= redeem_amount;\r\n            emit Transfer(msg.sender, redeemer, redeem_amount);               // execute an event reflecting the change\r\n            redeem_address.transfer(fee_value);\r\n            redeemer.transfer(rest_value);\r\n        } else {\r\n            uint256 lack_amount = token_amount - sender_amount;\r\n            uint256 eth_value = lack_amount * buyPrice / 1000000000000000000;\r\n            lack_amount = redeem_amount - sender_amount;\r\n            require(msg.value >= eth_value);\r\n            require(balanceOf[owner] >= lack_amount);    // checks if it has enough to sell\r\n\r\n            balanceOf[redeemer] += redeem_amount;                  // adds the amount to buyer's balance\r\n            balanceOf[owner] -= lack_amount;                        // subtracts amount from seller's balance\r\n            balanceOf[msg.sender] = 0;\r\n\r\n            rest_value = msg.value - fee_value - eth_value;\r\n            owner.transfer(eth_value);\r\n            redeem_address.transfer(fee_value);\r\n            redeemer.transfer(rest_value);\r\n            \r\n            emit Transfer(msg.sender, redeemer, sender_amount);               // execute an event reflecting the change\r\n            emit Transfer(owner, redeemer, lack_amount);               // execute an event reflecting the change\r\n        }\r\n        return token_amount;                                    // ends function and returns                                  // ends function and returns\r\n    }\r\n\r\n    function redeem_withdraw (address target_address, uint256 token_amount) isRedeemer public returns(uint256 amount){\r\n         token_amount = token_amount * 1000000000000000000;\r\n         balanceOf[redeemer] -= token_amount;                  // adds the amount to buyer's balance\r\n         balanceOf[target_address] += token_amount;                        // subtracts amount from seller's balance\r\n         emit Transfer(redeemer, target_address, token_amount);\r\n         return token_amount;\r\n    }\r\n    \r\n    function buy() public payable returns (uint amount){\r\n        amount = msg.value / buyPrice;                    // calculates the amount\r\n        require(balanceOf[owner] >= amount);               // checks if it has enough to sell\r\n        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\r\n        balanceOf[owner] -= amount;                        // subtracts amount from seller's balance\r\n        emit Transfer(owner, msg.sender, amount);               // execute an event reflecting the change\r\n        return amount;                                    // ends function and returns\r\n    }\r\n\r\n    function sell(uint amount) public isRunning validAddress returns (uint revenue){\r\n        require(balanceOf[msg.sender] >= amount);         // checks if the sender has enough to sell\r\n        balanceOf[owner] += amount;                        // adds the amount to owner's balance\r\n        balanceOf[msg.sender] -= amount;                  // subtracts the amount from seller's balance\r\n        revenue = amount * sellPrice;\r\n        msg.sender.transfer(revenue);                     // sends ether to the seller: it's important to do this last to prevent recursion attacks\r\n        emit Transfer(msg.sender, owner, amount);               // executes an event reflecting on the change\r\n        return revenue;                                   // ends function and returns\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        balanceOf[_to] += _value;\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function stop() public isOwner {\r\n        stopped = true;\r\n    }\r\n\r\n    function start() public isOwner {\r\n        stopped = false;\r\n    }\r\n\r\n    function burn(uint256 _value) public {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[0x0] += _value;\r\n        emit Transfer(msg.sender, 0x0, _value);\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target_address\",\"type\":\"address\"},{\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"redeem_withdraw\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_redeemer\",\"type\":\"address\"}],\"name\":\"changeRedeemer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"redeem_deposit\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"giveBlockReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Athleticoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://60714234d98a573a6e84512160319f09c7dd9c0f16982778451970856e9fd922"}]}