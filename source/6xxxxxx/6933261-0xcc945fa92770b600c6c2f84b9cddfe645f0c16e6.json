{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\ncontract ERC20 {\r\n    function balanceOf(address who) public view returns(uint);\r\n    function transfer(address to, uint value) public returns(bool);\r\n}\r\ncontract Checked {\r\n    function isContract(address addr) internal view returns(bool) {\r\n        uint256 size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}\r\ncontract Address is Checked {\r\n    Info public ContractDetails;\r\n    struct Info {\r\n        address Contract;\r\n        address Owner;\r\n        address Creator;\r\n        uint Block;\r\n        uint Timestamp;\r\n        bytes32 Hash;\r\n    }\r\n    constructor(address _owner) public {\r\n        ContractDetails.Contract = address(this);\r\n        ContractDetails.Owner = _owner;\r\n        ContractDetails.Creator = msg.sender;\r\n        ContractDetails.Block = block.number;\r\n        ContractDetails.Timestamp = now;\r\n        ContractDetails.Hash = keccak256(abi.encodePacked(address(this), _owner, msg.sender, block.number, now));\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == ContractDetails.Owner);\r\n        _;\r\n    }\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0) && address(this) != newOwner);\r\n        ContractDetails.Owner = newOwner;\r\n    }\r\n    function () external payable {}\r\n    function receive() public payable {\r\n        if (msg.value < 1) revert();\r\n    }\r\n    function transfer(address token, address payable to, uint amount) public onlyOwner {\r\n        require(to != token && to != address(0) && address(this) != to);\r\n        require(amount > 0);\r\n        if (address(0) == token) {\r\n            require(amount <= address(this).balance);\r\n            to.transfer(amount);\r\n        } else {\r\n            require(isContract(token) && ERC20(token).balanceOf(address(this)) >= amount);\r\n            if (!ERC20(token).transfer(to, amount)) revert();\r\n        }\r\n    }\r\n    function call(address contractAddr, uint amount, uint gaslimit, bytes memory data) public onlyOwner {\r\n        require(isContract(contractAddr) && amount <= address(this).balance);\r\n        if (gaslimit < 35000) gaslimit = 35000;\r\n        bool success;\r\n        if (amount > 0) {\r\n            (success,) = address(uint160(contractAddr)).call.gas(gaslimit).value(amount)(data);\r\n        } else {\r\n            (success,) = contractAddr.call.gas(gaslimit).value(amount)(data);\r\n        }\r\n        if (!success) revert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"contractAddr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"gaslimit\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receive\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractDetails\",\"outputs\":[{\"name\":\"Contract\",\"type\":\"address\"},{\"name\":\"Owner\",\"type\":\"address\"},{\"name\":\"Creator\",\"type\":\"address\"},{\"name\":\"Block\",\"type\":\"uint256\"},{\"name\":\"Timestamp\",\"type\":\"uint256\"},{\"name\":\"Hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Address","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d9e1987e11fac4938d8651a6441e28c91cc839fe","Library":"","SwarmSource":"bzzr://cd93b6f0fa14bd3fc21dda3f8ce61369837ec836126b33e5f60739c1206445e1"}]}