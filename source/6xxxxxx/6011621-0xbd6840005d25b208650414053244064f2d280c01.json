{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * Contract that will forward any incoming Ether to its creator\r\n */\r\ncontract Forwarder {\r\n  // Address to which any funds sent to this contract will be forwarded\r\n  address public destinationAddress;\r\n\r\n  /**\r\n   * Create the contract, and set the destination address to that of the creator\r\n   */\r\n  function Forwarder() public {\r\n    destinationAddress = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * Default function; Gets called when Ether is deposited, and forwards it to the destination address\r\n   */\r\n  function() payable public {\r\n        destinationAddress.transfer(msg.value);\r\n  }\r\n\r\n  /**\r\n   * It is possible that funds were sent to this address before the contract was deployed.\r\n   * We can flush those funds to the destination address.\r\n   */\r\n  function flush() public {\r\n    destinationAddress.transfer(this.balance);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destinationAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Forwarder","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6e1085ca97433ea0133da28ac784336b04f394bd7a1f9d1b1aca1a0e5851577a"}]}