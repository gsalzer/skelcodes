{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/*===========================================================================================*\r\n*************************************** https://p4d.io ***************************************\r\n*============================================================================================*\r\n*                                                             \r\n*     ,-.----.           ,--,              \r\n*     \\    /  \\        ,--.'|    ,---,     \r\n*     |   :    \\    ,--,  | :  .'  .' `\\          ____                            __      \r\n*     |   |  .\\ :,---.'|  : ',---.'     \\        / __ \\________  ________  ____  / /______\r\n*     .   :  |: |;   : |  | ;|   |  .`\\  |      / /_/ / ___/ _ \\/ ___/ _ \\/ __ \\/ __/ ___/\r\n*     |   |   \\ :|   | : _' |:   : |  '  |     / ____/ /  /  __(__  )  __/ / / / /_(__  ) \r\n*     |   : .   /:   : |.'  ||   ' '  ;  :    /_/   /_/___\\\\\\_/____/\\_\\\\/_\\_/_/\\__/____/  \r\n*     ;   | |`-' |   ' '  ; :'   | ;  .  |            /_  __/___      \\ \\/ /___  __  __   \r\n*     |   | ;    \\   \\  .'. ||   | :  |  '             / / / __ \\      \\  / __ \\/ / / /   \r\n*     :   ' |     `---`:  | ''   : | /  ;             / / / /_/ /      / / /_/ / /_/ /    \r\n*     :   : :          '  ; ||   | '` ,/             /_/  \\____/      /_/\\____/\\__,_/     \r\n*     |   | :          |  : ;;   :  .'     \r\n*     `---'.|          '  ,/ |   ,.'       \r\n*       `---`          '--'  '---'         \r\n*                 _______                             _                      \r\n*                (_______)                   _       | |                 _   \r\n*                 _        ____ _   _ ____ _| |_ ___ | |__  _   _ ____ _| |_ \r\n*                | |      / ___) | | |  _ (_   _) _ \\|  _ \\| | | |  _ (_   _)\r\n*                | |_____| |   | |_| | |_| || || |_| | | | | |_| | | | || |_ \r\n*                 \\______)_|    \\__  |  __/  \\__)___/|_| |_|____/|_| |_| \\__)\r\n*                              (____/|_|                                     \r\n*                                            _.--.\r\n*                                        _.-'_:-'||\r\n*                                    _.-'_.-::::'||\r\n*                               _.-:'_.-::::::'  ||\r\n*                             .'`-.-:::::::'     ||\r\n*                            /.'`;|:::::::'      ||_\r\n*                           ||   ||::::::'     _.;._'-._\r\n*                           ||   ||:::::'  _.-!oo @.!-._'-.\r\n*                           \\'.  ||:::::.-!()oo @!()@.-'_.|\r\n*                            '.'-;|:.-'.&$@.& ()$%-'o.'\\U||\r\n*                              `>'-.!@%()@'@_%-'_.-o _.|'||\r\n*                               ||-._'-.@.-'_.-' _.-o  |'||\r\n*                               ||=[ '-._.-\\U/.-'    o |'||\r\n*                               || '-.]=|| |'|      o  |'||\r\n*                               ||      || |'|        _| ';\r\n*                               ||      || |'|    _.-'_.-'\r\n*                               |'-._   || |'|_.-'_.-'\r\n*                                '-._'-.|| |' `_.-'\r\n*                                    '-.||_/.-'\r\n*                        _       __ _     _     _ _          ___       \r\n*                       /_\\     /__(_) __| | __| | | ___    / __\\_   _ \r\n*                      //_\\\\   / \\// |/ _` |/ _` | |/ _ \\  /__\\// | | |\r\n*                     /  _  \\ / _  \\ | (_| | (_| | |  __/ / \\/  \\ |_| |\r\n*                     \\_/ \\_/ \\/ \\_/_|\\__,_|\\__,_|_|\\___| \\_____/\\__, |\r\n*                                   ╔═╗╔═╗╦      ╔╦╗╔═╗╦  ╦      |___/ \r\n*                                   ╚═╗║ ║║       ║║║╣ ╚╗╔╝\r\n*                                   ╚═╝╚═╝╩═╝────═╩╝╚═╝ ╚╝ \r\n*                                      0x736f6c5f646576\r\n*                                      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\r\n*                                                \r\n*/\r\n\r\n/*=============================================================================*\r\n************************************ What? *************************************\r\n*==============================================================================*\r\n\r\nRight now you are wondering what is this token,\r\nand why you can't transfer it, so it must be broken!\r\n\r\nTo remove this token, one must be wise,\r\nand solve all the riddles to unlock the prize!\r\n\r\nFrom simple to complex as they progress,\r\nleading you to a solution that you cannot just guess!\r\n\r\nOnce solved you will notice the token goes away,\r\nas well as receiving some ether for your delay!\r\n\r\nIf you liked this riddle, then the future is bright,\r\nso get some more P4D while the timing is right!\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #1 ************************************\r\n*==============================================================================*\r\n\r\nWhenever you're stuck, just ask yourself; what's the meaning of life?\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #2 ************************************\r\n*==============================================================================*\r\n\r\n1pdt7g3cg7z5mh8rzj3wuBd31CtF7Bd6zy71721gChEhbo8e4Cs1i1gAhev76rEb2i3js1nAmglsp0Bb\r\ny4aad7tuyks8qDnkpcdA906biicn31chEpxvl4Amnp6gqDl6vr3jn4lz4eiC9tB69j797b3jhragxw9q\r\nF6bqx81f29fkEwvhmD1svFpd2Az5z2vuzicBA3qqChDxiqoceoxD0n179z1ie7x19r94zo18e1ADeels\r\nF8tDC22Bqkqiq0rdae5dz3rlfclBcjuu9ksBy9yx6pyqpyd7gCtB731wEcsk90sfbziB0Arz3bey75np\r\nmod7\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #3 ************************************\r\n*==============================================================================*\r\n\r\n10101011000101011001111000101100011111011000001100111000000001010000001111110111\r\n00011100101001101111111100001111101100000011011000011001100110010010011001111101\r\n0000001100110101000110000111011110110100001100000000110001110110\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #4 ************************************\r\n*==============================================================================*\r\n\r\n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\r\ntVRF51A8tQh6saGW4TcTw8ow1NmisIwEmS\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #5 ************************************\r\n*==============================================================================*\r\n\r\nSmEwIS05nqwVgR8OCws+o2dWSGxCe5/f+7kA28iytFDXnhdPqGVyex/+hRyiE7XYR80SJgUemXWyAYdD\r\n8FjvErauf8Qh6ru/QYQBhWoNLHW6R2rF955M5fW+jdjgxlRToGJ9zR8qPL9M6VGt4mFhReHRnIZBKs9o\r\nOeUwyF+IzVfYkt7dL59vTBCKRlyBS2XJCP7wWX6DJ0/dntnPG0PkUAy3MA9TDxz/yPaAIyted6h82QID\r\ndzXUaCmFg3919gujGt3bAE5nXTidSVpc5wcsuX1XEN32lwKkS/xlCpcIdnEgtrXDH1B3x4083992ebb0\r\nd615d8357b18267dac841981097c14083992ebb0d615d8357b1822tCnE\r\n\r\n*/\r\n\r\n/*=============================================================================*\r\n*********************************** Clue #6 ************************************\r\n*==============================================================================*\r\n\r\nEnCt2f7b689397445493a1945b3c064246eb23420eecaf7b689397445493a1945b3c0NibxGOxzdgH\r\nyBkP8Clwnxzz8iI90NAeKnQeqDTwl9Vn00VsPD+j2evfnms7GBKe4d/yqKqmaXjzRuMutBqcQ7qjOTne\r\nPWGD4hFRMFyDtHvhg+/N4nk5NqqzgI5HyvRGfGyh4r84+3SVNZt2zuq+ufM9mBaWECgHieQhax9NR6zD\r\nVeVirdQhcqjjgLdsqwRunxviwSr5h0ikvhdV3A07/cjAFW2XEg4ncisLg9Vj+kfqfGI4k/RG+j4vhbMF\r\nzBrUPYUiJp0t0YDFpX1cM0VYYAra87z5g1/SXui3X9WcRhIW6pACoydxStL7XSzaRZ/Vw4W6ssx8Ph9N\r\nHoNajrUr4i6JOGTTzqnC08d3iBd1/0uvGOce2Urnun9BDnkv6JevmzlpOS9jUUaip8layBaUQmfx9DUC\r\n43RoLLRLcJ6P1TvTeU6m2xH0otMlv4FbOgREUdLUVi/PmH8JiMHWyq1Jkqti5Gdnu93XDSywi/8NmmqJ\r\nF+APjRcponDF/BsenRIy69oV9AUE4t9n+6cF2cNYmZd/NXlCRdRUrth4qULa7fc3jkMA7N4w1buYS16n\r\n+eZNUrH/vTgv9IJ4dg5VbE8kUCi51JN5Y8c+1lrh4DMRHFzn/PT6d2/Mh6HA8XiSauOqR2tny9uYSUvV\r\n6MKNzJORtyPTWXhgVyOBjzGJInDIi1IGDGMmQAFasoaG5zq1xPIHOxPGmQsFbcX1Ye6JJ4rP6eKPjglp\r\nxR/JT5rEJkGolhrb69v1v5OUytO8F2dSngEZF5yhLBYb9g7PuR915jwLDIsZAHGmvLaNCadtkw6/1yrf\r\n8gTTGAIx8NQ02MiD+hQGIWVTJ44UsVI5CUJZ9ddOFWtc0v2b6xESUgBFlnUHc4YXaCrVFGk/mKamS8PS\r\n7Lvp7ncIYSGjieQvFYpXNpeVw92eD/OkP6o6WO483adcGzxbP3Fscy0T3+BMx12sHYpYcF/E2GVnUOtY\r\ncT5rwMQ==IwEmS\r\n\r\n*/\r\n\r\n/* Hashing contract used to generate all keccak based solutions;\r\n\r\npragma solidity 0.4.25;\r\n\r\ncontract Hasher {\r\n    function hash_uint256(uint256 n) public pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(n));\r\n    }\r\n    function hash_string(string s) public pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(s));\r\n    }\r\n}\r\n\r\n*/\r\n\r\ncontract ERC20_Basic {\r\n\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address) public view returns (uint256);\r\n    function transfer(address, uint256) public returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n}\r\n\r\ncontract Cryptohunt is ERC20_Basic {\r\n\r\n\tbool public _hasBeenSolved = false;\r\n\tuint256 public _launchedTime;\r\n\tuint256 public _solvedTime;\r\n\r\n\tstring public constant name = \"Cryptohunt\";\r\n\tstring public constant symbol = \"P4D Riddle\";\r\n\tuint8 public constant decimals = 18;\r\n\r\n\taddress constant private src = 0x058a144951e062FC14f310057D2Fd9ef0Cf5095b;\r\n\tuint256 constant private amt = 1e18;\r\n\r\n\tevent Log(string msg);\r\n\r\n\tconstructor() public {\r\n\t\temit Transfer(address(this), src, amt);\r\n\t\t_launchedTime = now;\r\n\t}\r\n\r\n\tfunction attemptToSolve(string answer) public {\r\n\t\tbytes32 hash = keccak256(abi.encodePacked(answer));\r\n\t\tif (hash == 0x6fd689cdf2f367aa9bd63f9306de49f00479b474f606daed7c015f3d85ff4e40) {\r\n\t\t\tif (!_hasBeenSolved) {\r\n\t\t\t\temit Transfer(src, address(0x0), amt);\r\n\t\t\t\temit Log(\"Well done! You've deserved this!\");\r\n\t\t\t\temit Log(answer);\r\n\t\t\t\t_hasBeenSolved = true;\r\n\t\t\t\t_solvedTime = now;\r\n\t\t\t}\r\n\t\t\tmsg.sender.transfer(address(this).balance);\r\n\t\t} else {\r\n\t\t\temit Log(\"Sorry, but that's not the correct answer!\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction() public payable {\r\n\t\t// allow donations\r\n\t}\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn (_hasBeenSolved ? 0 : amt);\r\n\t}\r\n\r\n\tfunction balanceOf(address owner) public view returns (uint256) {\r\n\t\treturn (_hasBeenSolved || owner != src ? 0 : amt);\r\n\t}\r\n\r\n\tfunction transfer(address, uint256) public returns (bool) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// ...and that's all you really need for a 'broken' token\r\n}\r\n\r\n/*===========================================================================================*\r\n*************************************** https://p4d.io ***************************************\r\n*===========================================================================================*/","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_launchedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_hasBeenSolved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_solvedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"answer\",\"type\":\"string\"}],\"name\":\"attemptToSolve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Cryptohunt","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e893abd2c02a8129ff0f8c15a909fd2d6b8351a76eb45b46bf4236ceebcc5dff"}]}