{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title SafeMath\r\n */\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n */\r\ncontract ERC20 {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address _owner) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  function allowance(address _owner, address _spender) public view returns (uint256);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/**\r\n * @title Owned\r\n */\r\ncontract Owned {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20 token\r\n */\r\ncontract ERC20Token is ERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n  uint256 public totalToken;\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(balances[msg.sender] >= _value);\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(balances[_from] >= _value);\r\n    require(allowed[_from][msg.sender] >= _value);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalToken;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\n/**\r\n * @title PandaGold Token\r\n */\r\ncontract PandaGoldToken is ERC20Token, Owned {\r\n\r\n  string  public constant name     = \"PandaGold Token\";\r\n  string  public constant symbol   = \"PANDA\";\r\n  uint256 public constant decimals = 18;\r\n\r\n  uint256 public constant initialToken     = 2000000000 * (10 ** decimals);\r\n\r\n  uint256 public constant publicToken      = initialToken * 55 / 100; // 55%\r\n  uint256 public constant founderToken     = initialToken * 10 / 100; // 10%\r\n  uint256 public constant developmentToken = initialToken * 10 / 100; // 10%\r\n  uint256 public constant bountyToken      = initialToken *  5 / 100; //  5%\r\n  uint256 public constant privateSaleToken = initialToken * 10 / 100; // 10%\r\n  uint256 public constant preSaleToken     = initialToken * 10 / 100; // 10%\r\n\r\n  address public constant founderAddress     = 0x003d9d0ebfbDa7AEc39EEAEcc4D47Dd18eA3c495;\r\n  address public constant developmentAddress = 0x00aCede2bdf8aecCedb0B669DbA662edC93D6178;\r\n  address public constant bountyAddress      = 0x00D42B2864C6E383b1FD9E56540c43d3815D486e;\r\n  address public constant privateSaleAddress = 0x00507Bf4d07A693fB7C4F9d846d58951042260aa;\r\n  address public constant preSaleAddress     = 0x00241bD9aa09b440DE23835BB2EE0a45926Bb61A;\r\n  address public constant rescueAddress      = 0x005F25Bc2386BfE9E5612f2C437c5e5E45720874;\r\n\r\n  uint256 public constant founderLockEndTime     = 1577836800; // 2020-01-01 00:00:00 GMT\r\n  uint256 public constant developmentLockEndTime = 1559347200; // 2019-06-01 00:00:00 GMT\r\n  uint256 public constant bountyLockEndTime      = 1543363200; // 2018-11-28 00:00:00 GMT\r\n  uint256 public constant privateSaleLockEndTime = 1546300800; // 2019-01-01 00:00:00 GMT\r\n  uint256 public constant preSaleLockEndTime     = 1543363200; // 2018-11-28 00:00:00 GMT\r\n\r\n  uint256 public constant maxDestroyThreshold = initialToken / 2;\r\n  uint256 public constant maxBurnThreshold    = maxDestroyThreshold / 50;\r\n  \r\n  mapping(address => bool) lockAddresses;\r\n\r\n  uint256 public destroyedToken;\r\n\r\n  event Burn(address indexed _burner, uint256 _value);\r\n\r\n  constructor() public {\r\n    totalToken     = initialToken;\r\n\r\n    balances[msg.sender]         = publicToken;\r\n    balances[founderAddress]     = founderToken;\r\n    balances[developmentAddress] = developmentToken;\r\n    balances[bountyAddress]      = bountyToken;\r\n    balances[privateSaleAddress] = privateSaleToken;\r\n    balances[preSaleAddress]     = preSaleToken;\r\n\r\n    emit Transfer(0x0, msg.sender, publicToken);\r\n    emit Transfer(0x0, founderAddress, founderToken);\r\n    emit Transfer(0x0, developmentAddress, developmentToken);\r\n    emit Transfer(0x0, bountyAddress, bountyToken);\r\n    emit Transfer(0x0, privateSaleAddress, privateSaleToken);\r\n    emit Transfer(0x0, preSaleAddress, preSaleToken);\r\n\r\n    lockAddresses[founderAddress]     = true;\r\n    lockAddresses[developmentAddress] = true;\r\n    lockAddresses[bountyAddress]      = true;\r\n    lockAddresses[privateSaleAddress] = true;\r\n    lockAddresses[preSaleAddress]     = true;\r\n\r\n    destroyedToken = 0;\r\n  }\r\n\r\n  modifier transferable(address _addr) {\r\n    require(!lockAddresses[_addr]);\r\n    _;\r\n  }\r\n\r\n  function unlock() public onlyOwner {\r\n    if (lockAddresses[founderAddress] && now >= founderLockEndTime)\r\n      lockAddresses[founderAddress] = false;\r\n    if (lockAddresses[developmentAddress] && now >= developmentLockEndTime)\r\n      lockAddresses[developmentAddress] = false;\r\n    if (lockAddresses[bountyAddress] && now >= bountyLockEndTime)\r\n      lockAddresses[bountyAddress] = false;\r\n    if (lockAddresses[privateSaleAddress] && now >= privateSaleLockEndTime)\r\n      lockAddresses[privateSaleAddress] = false;\r\n    if (lockAddresses[preSaleAddress] && now >= preSaleLockEndTime)\r\n      lockAddresses[preSaleAddress] = false;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public transferable(msg.sender) returns (bool) {\r\n    return super.transfer(_to, _value);\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public transferable(msg.sender) returns (bool) {\r\n    return super.approve(_spender, _value);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public transferable(_from) returns (bool) {\r\n    return super.transferFrom(_from, _to, _value);\r\n  }\r\n\r\n  function burn(uint256 _value) public onlyOwner returns (bool) {\r\n    require(balances[msg.sender] >= _value);\r\n    require(maxBurnThreshold >= _value);\r\n    require(maxDestroyThreshold >= destroyedToken.add(_value));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    totalToken = totalToken.sub(_value);\r\n    destroyedToken = destroyedToken.add(_value);\r\n    emit Transfer(msg.sender, 0x0, _value);\r\n    emit Burn(msg.sender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferAnyERC20Token(address _tokenAddress, uint256 _value) public onlyOwner returns (bool) {\r\n    return ERC20(_tokenAddress).transfer(rescueAddress, _value);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyLockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destroyedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rescueAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developmentAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDestroyThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleLockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developmentLockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developmentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBurnThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleLockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"PandaGoldToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://da6d8f9775ffc3294175cce9b8e49030bdea5cdd22eeed58d538d738c09043d4"}]}