{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\ncontract ERC20BasicInterface {\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\n/**\r\n * @title ERC20Lock\r\n *\r\n * This contract keeps particular token till the unlock date and sends it to predefined destination.\r\n */\r\ncontract DLSDLockFounders6 {\r\n    ERC20BasicInterface constant TOKEN = ERC20BasicInterface(0x8458d484572cEB89ce70EEBBe17Dc84707b241eD);\r\n    address constant OWNER = 0x603F65F7Fc4f650c2F025800F882CFb62BF23580;\r\n    address constant DESTINATION = 0x03b19e7DF364000E089BAaf90A71c0140122a9Be;\r\n    uint constant UNLOCK_DATE = 1556323199; // Friday, April 26, 2019 11:59:59 PM\r\n\r\n    function unlock() public returns(bool) {\r\n        require(now > UNLOCK_DATE, 'Tokens are still locked');\r\n        return TOKEN.transfer(DESTINATION, TOKEN.balanceOf(address(this)));\r\n    }\r\n\r\n    function recoverTokens(ERC20BasicInterface _token, address _to, uint _value) public returns(bool) {\r\n        require(msg.sender == OWNER, 'Access denied');\r\n        // This token meant to be recovered by calling unlock().\r\n        require(address(_token) != address(TOKEN), 'Can not recover this token');\r\n        return _token.transfer(_to, _value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DLSDLockFounders6","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ebebec9bf2e887091e259c2d78bb0185eb1543c37ffaa539c99d12efb4105071"}]}