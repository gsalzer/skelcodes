{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ninterface HourglassInterface  {\r\n    function() payable external;\r\n    function buy(address _playerAddress) payable external returns(uint256);\r\n    function sell(uint256 _amountOfTokens) external;\r\n    function reinvest() external;\r\n    function withdraw() external;\r\n    function exit() external;\r\n    function dividendsOf(address _playerAddress) external view returns(uint256);\r\n    function balanceOf(address _playerAddress) external view returns(uint256);\r\n    function transfer(address _toAddress, uint256 _amountOfTokens) external returns(bool);\r\n    function stakingRequirement() external view returns(uint256);\r\n}\r\ncontract DivGarden is Owned {\r\nHourglassInterface constant P3Dcontract_ = HourglassInterface(0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe);\r\n\r\nfunction buyp3d(uint256 amt) internal{\r\nP3Dcontract_.buy.value(amt)(this);\r\n}\r\nfunction claimdivs() internal{\r\nP3Dcontract_.withdraw();\r\n}\r\n// amount of divs available\r\nuint256 private ethtosend;\r\nmapping(address => uint256) public ticketsavailable;  \r\nuint256 public ticket1price =  1 finney;\r\nuint256 public tickets10price =  5 finney;\r\nuint256 public tickets100price =  25 finney;\r\nuint256 public tickets1kprice =  125 finney;\r\nuint256 public tickets10kprice =  625 finney;\r\nuint256 public tickets100kprice =  3125 finney;\r\naddress public contrp3d = 0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe;\r\nuint256 private div ;\r\nevent onTicketPurchase(\r\n        address customerAddress,\r\n        uint256 amount\r\n    );\r\nevent onHarvest(\r\n        address customerAddress,\r\n        uint256 amount\r\n    );\r\nfunction harvestabledivs()\r\n        view\r\n        public\r\n        returns(uint256)\r\n    {\r\n        return ( P3Dcontract_.dividendsOf(address(this)))  ;\r\n    }\r\nfunction amountofp3d() external view returns(uint256){\r\n    return ( P3Dcontract_.balanceOf(address(this)))  ;\r\n}\r\n\r\nfunction buy1ticket () public payable{\r\n    require(msg.value >= ticket1price);\r\n    ticketsavailable[msg.sender] += 1;\r\n    emit onTicketPurchase(msg.sender,1);\r\n}\r\nfunction buy10tickets () public payable{\r\n    require(msg.value >= tickets10price);\r\n    ticketsavailable[msg.sender] += 10;\r\n    emit onTicketPurchase(msg.sender,10);\r\n}\r\nfunction buy100tickets () public payable{\r\n    require(msg.value >= tickets100price);\r\n    ticketsavailable[msg.sender] += 100;\r\n    emit onTicketPurchase(msg.sender,100);\r\n}\r\nfunction buy1ktickets () public payable{\r\n    require(msg.value >= tickets1kprice);\r\n    ticketsavailable[msg.sender] += 1000;\r\n    emit onTicketPurchase(msg.sender,1000);\r\n}\r\nfunction buy10ktickets () public payable{\r\n    require(msg.value >= tickets10kprice);\r\n    ticketsavailable[msg.sender] += 10000;\r\n    emit onTicketPurchase(msg.sender,10000);\r\n}\r\nfunction buy100ktickets () public payable{\r\n    require(msg.value >= tickets100kprice);\r\n    ticketsavailable[msg.sender] += 100000;\r\n    emit onTicketPurchase(msg.sender,100000);\r\n}\r\n\r\nfunction onlyHarvest(uint256 amt) public payable{\r\n    div = harvestabledivs();\r\n    require(amt > 0);\r\n    require(msg.value > 0);\r\n    require(msg.value * 2 >= amt);\r\n    require(div > amt);\r\n    require(ticketsavailable[msg.sender] >= 2);\r\n    ethtosend = amt;\r\n    claimdivs();\r\n    ticketsavailable[msg.sender] -= 2;\r\n    msg.sender.transfer(ethtosend);\r\n    emit onHarvest(msg.sender,ethtosend);\r\n}\r\nfunction ExpandandHarvest(uint256 amt) public payable{\r\n    div = harvestabledivs();\r\n    require(amt > 0);\r\n    require(msg.value > 0);\r\n    require(msg.value * 2 >= amt);\r\n    require(div > amt);\r\n    require(ticketsavailable[msg.sender] >= 1);\r\n    //1% to owner\r\n    ethtosend = this.balance /100;\r\n    owner.transfer(ethtosend);\r\n    //99% buy p3d\r\n    buyp3d(this.balance);\r\n    ethtosend = amt;\r\n    claimdivs();\r\n    ticketsavailable[msg.sender] -= 1;\r\n    msg.sender.transfer(ethtosend);\r\n    emit onHarvest(msg.sender,ethtosend);\r\n}\r\nfunction Expand() public {\r\n    require(ticketsavailable[msg.sender] >= 1);\r\n    //1% to owner\r\n    ethtosend = this.balance /100;\r\n    owner.transfer(ethtosend);\r\n    //99% buy p3d\r\n    buyp3d(this.balance);\r\n    ticketsavailable[msg.sender] -= 1;\r\n}\r\n\r\nfunction () external payable{}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tickets10kprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contrp3d\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy1ktickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy1ticket\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets100kprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy100ktickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"onlyHarvest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets100price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy10tickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketsavailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"harvestabledivs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets10price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountofp3d\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Expand\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"ExpandandHarvest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy100tickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets1kprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy10ktickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticket1price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onTicketPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onHarvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"DivGarden","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ab4eb9372285c5ab3cd7ea771664b7a81bf382b7bb67120b3123dd7379d0fb8b"}]}