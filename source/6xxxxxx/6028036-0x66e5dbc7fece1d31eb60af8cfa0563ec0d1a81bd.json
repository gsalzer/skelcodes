{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal pure returns (uint256) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal pure returns (uint256) {\r\n    uint c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal pure returns (uint256) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  //transfer owner to another address\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    if (_newOwner != address(0)) {\r\n      owner = _newOwner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract ERC20Token is SafeMath {\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public totalSupply;\r\n  uint8 public decimals;\r\n\r\n  mapping (address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n  modifier onlyPayloadSize(uint size) {   \r\n    require(msg.data.length == size + 4);\r\n    _;\r\n  }\r\n\r\n  /**\r\n    @dev send coins\r\n    throws on any error rather then return a false flag to minimize user errors\r\n\r\n    @param _to      target address\r\n    @param _value   transfer amount\r\n\r\n    @return true if the transfer was successful, false if it wasn't\r\n  */\r\n  function transfer(address _to, uint256 _value)\r\n      public\r\n      onlyPayloadSize(2 * 32)\r\n      returns (bool success)\r\n  {\r\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n    @dev an account/contract attempts to get the coins\r\n    throws on any error rather then return a false flag to minimize user errors\r\n\r\n    @param _from    source address\r\n    @param _to      target address\r\n    @param _value   transfer amount\r\n\r\n    @return true if the transfer was successful, false if it wasn't\r\n  */\r\n  function transferFrom(address _from, address _to, uint256 _value)\r\n    public\r\n    onlyPayloadSize(3 * 32)\r\n    returns (bool success)\r\n  {\r\n    allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\r\n    balances[_from] = safeSub(balances[_from], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n  \r\n  function approve(address _spender, uint256 _value)\r\n    public\r\n    onlyPayloadSize(2 * 32)\r\n    returns (bool success)\r\n  {\r\n    // if the allowance isn't 0, it can only be updated to 0 to prevent an allowance change immediately after withdrawal\r\n    require(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public constant returns (uint) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function balanceOf(address _holder) public constant returns (uint) {\r\n    return balances[_holder];\r\n  }\r\n}\r\n\r\ncontract BitEyeToken is ERC20Token, Ownable {\r\n\r\n  bool public distributed = false;\r\n\r\n  function BitEyeToken() public {\r\n    name = \"BitEye Token\";\r\n    symbol = \"BEY\";\r\n    decimals = 18;\r\n    totalSupply = 1000000000 * 1e18;\r\n  }\r\n\r\n  function distribute(address _bitEyeExAddr, address _operationAddr, address _airdropAddr) public onlyOwner {\r\n    require(!distributed);\r\n    distributed = true;\r\n\r\n    balances[_bitEyeExAddr] = 900000000 * 1e18;\r\n    Transfer(address(0), _bitEyeExAddr, 900000000 * 1e18);\r\n\r\n    balances[_operationAddr] = 50000000 * 1e18;\r\n    Transfer(address(0), _operationAddr, 50000000 * 1e18);\r\n\r\n    balances[_airdropAddr] = 50000000 * 1e18;\r\n    Transfer(address(0), _airdropAddr, 50000000 * 1e18);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_bitEyeExAddr\",\"type\":\"address\"},{\"name\":\"_operationAddr\",\"type\":\"address\"},{\"name\":\"_airdropAddr\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BitEyeToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c5cfa5f8f3b518faba5437e4a557f7b301ffeab01e0f7cdf9cbafeb9182bdc51"}]}