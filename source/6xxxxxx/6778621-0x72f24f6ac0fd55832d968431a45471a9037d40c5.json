{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface Snip3DInterface  {\r\n    function() payable external;\r\n   function offerAsSacrifice(address MN)\r\n        external\r\n        payable\r\n        ;\r\n         function withdraw()\r\n        external\r\n        ;\r\n        function myEarnings()\r\n        external\r\n        view\r\n       \r\n        returns(uint256);\r\n        //function tryFinalizeStage()external;\r\n    function sendInSoldier(address masternode) external payable;\r\n    function fetchdivs(address toupdate) external;\r\n    function shootSemiRandom() external;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n    \r\n}\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n// Snip3dbridge contract\r\ncontract Sac3D is  Owned {\r\n    using SafeMath for uint;\r\n    Snip3DInterface constant Snip3Dcontract_ = Snip3DInterface(0x4fac33dAbFd83d160717dFee4175d9cAaA249CA5);\r\n    function harvestableBalance()\r\n        view\r\n        public\r\n        returns(uint256)\r\n    {\r\n        return ( address(this).balance)  ;\r\n    }\r\n    function unfetchedVault()\r\n        view\r\n        public\r\n        returns(uint256)\r\n    {\r\n        return ( Snip3Dcontract_.myEarnings())  ;\r\n    }\r\n    function sacUp () onlyOwner public payable {\r\n       \r\n        Snip3Dcontract_.offerAsSacrifice.value(0.1 ether)(msg.sender);\r\n    }/*\r\n    function validate () onlyOwner public {\r\n       \r\n        Snip3Dcontract_.tryFinalizeStage();\r\n    }*/\r\n    function fetchvault () onlyOwner public {\r\n      \r\n        Snip3Dcontract_.withdraw();\r\n    }\r\n    function fetchBalance () onlyOwner public {\r\n      \r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"fetchBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"harvestableBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sacUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fetchvault\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unfetchedVault\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Sac3D","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://17316e50a8a8196141d5b3d08a466362e705ddd253fa13d0ad7a995c0e2ce9ae"}]}