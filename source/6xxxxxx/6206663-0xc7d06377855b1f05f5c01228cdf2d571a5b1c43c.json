{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nCapital Technologies & Research - Bounty Distribution Smart Contract\r\nhttps://www.mycapitalco.in\r\n*/\r\n\r\npragma solidity 0.4.24;\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender)\r\n    public view returns (uint256);\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    public returns (bool);\r\n\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract CapitalBountyDelivery is Ownable {\r\nusing SafeMath for uint256;\r\n    ERC20 public token_call;\r\n    ERC20 public token_callg;\r\n\tmapping (address => bool) public distributedFirst;\r\n\tmapping (address => bool) public distributedSecond;\r\n\tuint public sentFirst;\r\n\tuint public sentSecond;\r\n    event DistributeFirst(address indexed userWallet, uint token_call, uint token_callg);\r\n\tevent DistributeSecond(address indexed userWallet, uint token_call, uint token_callg);\r\n\tevent AdminWithdrawn(address indexed adminWallet, uint token_call, uint token_callg);\r\n    constructor (ERC20 _token_call, ERC20 _token_callg) public {\r\n        require(_token_call != address(0));\r\n        require(_token_callg != address(0));\r\n        token_call = _token_call;\r\n        token_callg = _token_callg;\r\n    }\r\n    function () public payable {\r\n    }\r\n    function sendFirst(address userWallet, uint call) public onlyOwner {\r\n\t\trequire(now >= 1531958400);\r\n\t\trequire(userWallet != address(0));\r\n\t\trequire(!distributedFirst[userWallet]);\r\n        uint _call = call * 10 ** 18;\r\n\t\tuint _callg = _call.mul(200);\r\n\t\tdistributedFirst[userWallet] = true;\r\n        require(token_call.transfer(userWallet, _call));\r\n        require(token_callg.transfer(userWallet, _callg));\r\n\t\tsentFirst = sentFirst.add(_call);\r\n        emit DistributeFirst(userWallet, _call, _callg);\r\n    }\r\n\tfunction sendSecond(address userWallet, uint call) public onlyOwner {\r\n\t\trequire(now >= 1538179200);\r\n\t\trequire(userWallet != address(0));\r\n\t\trequire(!distributedSecond[userWallet]);\r\n        uint _call = call * 10 ** 18;\r\n\t\tuint _callg = _call.mul(200);\r\n\t\tdistributedSecond[userWallet] = true;\r\n        require(token_call.transfer(userWallet, _call));\r\n        require(token_callg.transfer(userWallet, _callg));\r\n\t\tsentSecond = sentSecond.add(_call);\r\n        emit DistributeSecond(userWallet, _call, _callg);\r\n    }\r\n\tfunction sendFirstBatch(address[] _userWallet, uint[] call) public onlyOwner {\r\n\t\trequire(now >= 1531958400);\r\n\t\tfor(uint256 i = 0; i < _userWallet.length; i++) {\r\n\t\t\tif (!distributedFirst[_userWallet[i]]) {\r\n\t\t\t\tuint _call = call[i] * 10 ** 18;\r\n\t\t\t\tuint _callg = _call.mul(200);\r\n\t\t\t\tdistributedFirst[_userWallet[i]] = true;\r\n\t\t\t\trequire(token_call.transfer(_userWallet[i], _call));\r\n\t\t\t\trequire(token_callg.transfer(_userWallet[i], _callg));\r\n\t\t\t\tsentFirst = sentFirst.add(_call);\r\n\t\t\t\temit DistributeFirst(_userWallet[i], _call, _callg);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\tfunction sendSecondBatch(address[] _userWallet, uint[] call) public onlyOwner {\r\n\t\trequire(now >= 1538179200); \r\n\t\tfor(uint256 i = 0; i < _userWallet.length; i++) {\r\n\t\t\tif (!distributedSecond[_userWallet[i]]) {\r\n\t\t\t\tuint _call = call[i] * 10 ** 18;\r\n\t\t\t\tuint _callg = _call.mul(200);\r\n\t\t\t\tdistributedSecond[_userWallet[i]] = true;\r\n\t\t\t\trequire(token_call.transfer(_userWallet[i], _call));\r\n\t\t\t\trequire(token_callg.transfer(_userWallet[i], _callg));\r\n\t\t\t\tsentSecond = sentSecond.add(_call);\r\n\t\t\t\temit DistributeSecond(_userWallet[i], _call, _callg);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\tfunction withdrawTokens(address adminWallet) public onlyOwner {\r\n        require(adminWallet != address(0));\r\n        uint call_balance = token_call.balanceOf(this);\r\n        uint callg_balance = token_callg.balanceOf(this);\r\n        token_call.transfer(adminWallet, call_balance);\r\n        token_callg.transfer(adminWallet, callg_balance);\r\n        emit AdminWithdrawn(adminWallet, call_balance, callg_balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sentFirst\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userWallet\",\"type\":\"address\"},{\"name\":\"call\",\"type\":\"uint256\"}],\"name\":\"sendFirst\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userWallet\",\"type\":\"address[]\"},{\"name\":\"call\",\"type\":\"uint256[]\"}],\"name\":\"sendFirstBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userWallet\",\"type\":\"address[]\"},{\"name\":\"call\",\"type\":\"uint256[]\"}],\"name\":\"sendSecondBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributedFirst\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sentSecond\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adminWallet\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_call\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_callg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributedSecond\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userWallet\",\"type\":\"address\"},{\"name\":\"call\",\"type\":\"uint256\"}],\"name\":\"sendSecond\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token_call\",\"type\":\"address\"},{\"name\":\"_token_callg\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token_call\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token_callg\",\"type\":\"uint256\"}],\"name\":\"DistributeFirst\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token_call\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token_callg\",\"type\":\"uint256\"}],\"name\":\"DistributeSecond\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"adminWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token_call\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token_callg\",\"type\":\"uint256\"}],\"name\":\"AdminWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CapitalBountyDelivery","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002c02c801a3324b371ad285c64af372ff1e23f4600000000000000000000000006c28f85eb1dbc7651ce02f7af1f29890ad084b94","Library":"","SwarmSource":"bzzr://be9f5cb80b4bd3899cc18f6a56b37189e23ff88634dfab422390c1019fb4e450"}]}