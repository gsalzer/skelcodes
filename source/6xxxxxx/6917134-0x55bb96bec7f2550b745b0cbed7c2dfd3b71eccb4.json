{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract MassSenderForFork {\r\n    mapping(address => mapping (uint32 => bool)) processedTransactions;\r\n    ERC20 private fork = ERC20(0x5bB1632fA0023e1AA76a1AE92B4635C8DBa49Fa2);\r\n\r\n    function bulkTransferFrom(\r\n        uint32[] payment_ids,\r\n        address[] receivers,\r\n        uint256[] transfers\r\n    ) external {\r\n        require(payment_ids.length == receivers.length);\r\n        require(payment_ids.length == transfers.length);\r\n\r\n        for (uint i = 0; i < receivers.length; i++) {\r\n            if (!processedTransactions[msg.sender][payment_ids[i]]) {\r\n                require(fork.transferFrom(msg.sender, receivers[i], transfers[i]));\r\n\r\n                processedTransactions[msg.sender][payment_ids[i]] = true;\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"payment_ids\",\"type\":\"uint32[]\"},{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"transfers\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MassSenderForFork","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8307e6fd2df59551d96d3afb5a303bbad04176c0cc30d5ca516d8442499274de"}]}