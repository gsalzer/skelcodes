{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// SafeMath library\r\nlibrary SafeMath {\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\tuint256 c = _a + _b;\r\n\t\tassert(c >= _a);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\tassert(_a >= _b);\r\n\t\treturn _a - _b;\r\n\t}\r\n\r\n\tfunction mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    if (_a == 0) {\r\n     return 0;\r\n    }\r\n\t\tuint256 c = _a * _b;\r\n\t\tassert(c / _a == _b);\r\n\t\treturn c;\r\n\t}\r\n\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\treturn _a / _b;\r\n\t}\r\n}\r\n\r\n// Contract must have an owner\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner, \"onlyOwner wrong\");\r\n    _;\r\n  }\r\n\r\n  function setOwner(address _owner) onlyOwner public {\r\n    owner = _owner;\r\n  }\r\n}\r\n\r\ninterface ERC20Token {\r\n  function transfer(address _to, uint256 _value) external returns (bool);\r\n  function balanceOf(address _addr) external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n}\r\n\r\n// the WTA Gamebook that records games, players and admins\r\ncontract WTAGameBook is Ownable{\r\n  using SafeMath for uint256;\r\n\r\n  string public name = \"WTAGameBook V0.5\";\r\n  string public version = \"0.5\";\r\n\r\n  // admins info\r\n  address[] public admins;\r\n  mapping (address => uint256) public adminId;\r\n\r\n  // games info\r\n  address[] public games;\r\n  mapping (address => uint256) public gameId;\r\n\r\n  //players info\r\n  struct PlayerInfo {\r\n    uint256 pid;\r\n    address paddr;\r\n    uint256 referrer;\r\n  }\r\n\r\n  uint256 public playerNum = 0;\r\n  mapping (uint256 => PlayerInfo) public player;\r\n  mapping (address => uint256) public playerId;\r\n\r\n  event AdminAdded(address indexed _addr, uint256 _id, address indexed _adder);\r\n  event AdminRemoved(address indexed _addr, uint256 _id, address indexed _remover);\r\n  event GameAdded(address indexed _addr, uint256 _id, address indexed _adder);\r\n  event GameRemoved(address indexed _addr, uint256 _id, address indexed _remover);\r\n  event PlayerAdded(uint256 _pid, address indexed _paddr, uint256 _ref, address indexed _adder);\r\n\r\n  event WrongTokenEmptied(address indexed _token, address indexed _addr, uint256 _amount);\r\n  event WrongEtherEmptied(address indexed _addr, uint256 _amount);\r\n\r\n  // check the address is human or contract\r\n  function isHuman(address _addr) public view returns (bool) {\r\n    uint256 _codeLength;\r\n    assembly {_codeLength := extcodesize(_addr)}\r\n    return (_codeLength == 0);\r\n  }\r\n\r\n  // address not zero\r\n  modifier validAddress(address _addr) {\r\n\t\trequire(_addr != 0x0, \"validAddress wrong\");\r\n\t\t_;\r\n\t}\r\n\r\n  modifier onlyAdmin() {\r\n    require(adminId[msg.sender] != 0, \"onlyAdmin wrong\");\r\n    _;\r\n  }\r\n\r\n  modifier onlyAdminOrGame() {\r\n    require((adminId[msg.sender] != 0) || (gameId[msg.sender] != 0), \"onlyAdminOrGame wrong\");\r\n    _;\r\n  }\r\n\r\n  // create new GameBook contract, no need arguments\r\n  constructor() public {\r\n    // initialization\r\n    // empty admin with id 0\r\n    adminId[address(0x0)] = 0;\r\n    admins.length++;\r\n    admins[0] = address(0x0);\r\n\r\n    // empty game with id 0\r\n    gameId[address(0x0)] = 0;\r\n    games.length++;\r\n    games[0] = address(0x0);\r\n\r\n    // first admin is owner\r\n    addAdmin(owner);\r\n  }\r\n\r\n  // owner may add or remove admins\r\n  function addAdmin(address _admin) onlyOwner validAddress(_admin) public {\r\n    require(isHuman(_admin), \"addAdmin human only\");\r\n\r\n    uint256 id = adminId[_admin];\r\n    if (id == 0) {\r\n      adminId[_admin] = admins.length;\r\n      id = admins.length++;\r\n    }\r\n    admins[id] = _admin;\r\n    emit AdminAdded(_admin, id, msg.sender);\r\n  }\r\n\r\n  function removeAdmin(address _admin) onlyOwner validAddress(_admin) public {\r\n    require(adminId[_admin] != 0, \"removeAdmin wrong\");\r\n\r\n    uint256 aid = adminId[_admin];\r\n    adminId[_admin] = 0;\r\n    for (uint256 i = aid; i<admins.length-1; i++){\r\n        admins[i] = admins[i+1];\r\n        adminId[admins[i]] = i;\r\n    }\r\n    delete admins[admins.length-1];\r\n    admins.length--;\r\n    emit AdminRemoved(_admin, aid, msg.sender);\r\n  }\r\n\r\n  // admins may add or remove games\r\n  function addGame(address _game) onlyAdmin validAddress(_game) public {\r\n    require(!isHuman(_game), \"addGame inhuman only\");\r\n\r\n    uint256 id = gameId[_game];\r\n    if (id == 0) {\r\n      gameId[_game] = games.length;\r\n      id = games.length++;\r\n    }\r\n    games[id] = _game;\r\n    emit GameAdded(_game, id, msg.sender);\r\n  }\r\n\r\n  function removeGame(address _game) onlyAdmin validAddress(_game) public {\r\n    require(gameId[_game] != 0, \"removeGame wrong\");\r\n\r\n    uint256 gid = gameId[_game];\r\n    gameId[_game] = 0;\r\n    for (uint256 i = gid; i<games.length-1; i++){\r\n        games[i] = games[i+1];\r\n        gameId[games[i]] = i;\r\n    }\r\n    delete games[games.length-1];\r\n    games.length--;\r\n    emit GameRemoved(_game, gid, msg.sender);\r\n  }\r\n\r\n  // admins and games may add players, and players cannot be removed\r\n  function addPlayer(address _addr, uint256 _ref) onlyAdminOrGame validAddress(_addr) public returns (uint256) {\r\n    require(isHuman(_addr), \"addPlayer human only\");\r\n    require((_ref < playerNum.add(1)) && (playerId[_addr] == 0), \"addPlayer parameter wrong\");\r\n    playerId[_addr] = playerNum.add(1);\r\n    player[playerNum.add(1)] = PlayerInfo({pid: playerNum.add(1), paddr: _addr, referrer: _ref});\r\n    playerNum++;\r\n    emit PlayerAdded(playerNum, _addr, _ref, msg.sender);\r\n    return playerNum;\r\n  }\r\n\r\n  // interface methods\r\n  function getPlayerIdByAddress(address _addr) validAddress(_addr) public view returns (uint256) {\r\n    return playerId[_addr];\r\n  }\r\n\r\n  function getPlayerAddressById(uint256 _id) public view returns (address) {\r\n    require(_id <= playerNum && _id > 0, \"getPlayerAddressById wrong\");\r\n    return player[_id].paddr;\r\n  }\r\n\r\n  function getPlayerRefById(uint256 _id) public view returns (uint256) {\r\n    require(_id <= playerNum && _id > 0, \"getPlayerRefById wrong\");\r\n    return player[_id].referrer;\r\n  }\r\n\r\n  function getGameIdByAddress(address _addr) validAddress(_addr) public view returns (uint256) {\r\n    return gameId[_addr];\r\n  }\r\n\r\n  function getGameAddressById(uint256 _id) public view returns (address) {\r\n    require(_id < games.length && _id > 0, \"getGameAddressById wrong\");\r\n    return games[_id];\r\n  }\r\n\r\n  function isAdmin(address _addr) validAddress(_addr) public view returns (bool) {\r\n    return (adminId[_addr] > 0);\r\n  }\r\n\r\n  // Safety measures\r\n  function () public payable {\r\n    revert();\r\n  }\r\n\r\n  function emptyWrongToken(address _addr) onlyAdmin public {\r\n    ERC20Token wrongToken = ERC20Token(_addr);\r\n    uint256 amount = wrongToken.balanceOf(address(this));\r\n    require(amount > 0, \"emptyToken need more balance\");\r\n    require(wrongToken.transfer(msg.sender, amount), \"empty Token transfer wrong\");\r\n\r\n    emit WrongTokenEmptied(_addr, msg.sender, amount);\r\n  }\r\n\r\n  // shouldn't happen, just in case\r\n  function emptyWrongEther() onlyAdmin public {\r\n    uint256 amount = address(this).balance;\r\n    require(amount > 0, \"emptyEther need more balance\");\r\n    msg.sender.transfer(amount);\r\n\r\n    emit WrongEtherEmptied(msg.sender, amount);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"playerNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getPlayerRefById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gameId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"addPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getPlayerAddressById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"player\",\"outputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"paddr\",\"type\":\"address\"},{\"name\":\"referrer\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getPlayerIdByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"removeGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getGameIdByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getGameAddressById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"emptyWrongToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"addGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emptyWrongEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isHuman\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_adder\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_remover\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_adder\",\"type\":\"address\"}],\"name\":\"GameAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_remover\",\"type\":\"address\"}],\"name\":\"GameRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_pid\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_paddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ref\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_adder\",\"type\":\"address\"}],\"name\":\"PlayerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WrongTokenEmptied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WrongEtherEmptied\",\"type\":\"event\"}]","ContractName":"WTAGameBook","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://29cef7de40edadd10e4c6caa29a59994c315462dcaff8dbcd82e3f9781b00704"}]}