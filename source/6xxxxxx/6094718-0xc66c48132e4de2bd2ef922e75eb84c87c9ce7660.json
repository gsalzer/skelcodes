{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\ncontract owned {\r\n    constructor() public { owner = msg.sender; }\r\n\r\n    address owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n}\r\n\r\n\r\ncontract Tank is owned {\r\n\r\n    function () payable public {}\r\n\r\n    function withdrawEther(address toAddress, uint256 amount) public onlyOwner {\r\n        toAddress.transfer(amount);\r\n    }\r\n\r\n    function withdrawToken(address token, address toAddress, uint256 amount) public onlyOwner {\r\n        ERC20(token).transfer(toAddress, amount);\r\n    }\r\n\r\n    function withdrawInBatch(address[] tokenList, address[] toAddressList, uint256[] amountList) public onlyOwner {\r\n        require(tokenList.length == toAddressList.length);\r\n        require(toAddressList.length == amountList.length);\r\n\r\n        for (uint i = 0; i < toAddressList.length; i++) {\r\n            if (tokenList[i] == 0) {\r\n                this.withdrawEther(toAddressList[i], amountList[i]);\r\n            } else {\r\n                this.withdrawToken(tokenList[i], toAddressList[i], amountList[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function withdrawEtherInBatch(address[] toAddressList, uint256[] amountList) public onlyOwner {\r\n        require(toAddressList.length == amountList.length);\r\n\r\n        for (uint i = 0; i < toAddressList.length; i++) {\r\n            this.withdrawEther(toAddressList[i], amountList[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddressList\",\"type\":\"address[]\"},{\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"withdrawEtherInBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenList\",\"type\":\"address[]\"},{\"name\":\"toAddressList\",\"type\":\"address[]\"},{\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"withdrawInBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Tank","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2597c8240907b0ab9e06546e8a927e0abaf0608de4e772ca9f0d2fdce5c20d2a"}]}