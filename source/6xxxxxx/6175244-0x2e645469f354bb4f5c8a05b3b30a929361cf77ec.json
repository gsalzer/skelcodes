{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract GravatarRegistry {\r\n  event NewGravatar(uint id, address owner, string displayName, string imageUrl);\r\n  event UpdatedGravatar(uint id, address owner, string displayName, string imageUrl);\r\n\r\n  struct Gravatar {\r\n    address owner;\r\n    string displayName;\r\n    string imageUrl;\r\n  }\r\n\r\n  Gravatar[] public gravatars;\r\n\r\n  mapping (uint => address) public gravatarToOwner;\r\n  mapping (address => uint) public ownerToGravatar;\r\n\r\n  function createGravatar(string _displayName, string _imageUrl) public {\r\n    require(ownerToGravatar[msg.sender] == 0);\r\n    uint id = gravatars.push(Gravatar(msg.sender, _displayName, _imageUrl)) - 1;\r\n\r\n    gravatarToOwner[id] = msg.sender;\r\n    ownerToGravatar[msg.sender] = id;\r\n\r\n    emit NewGravatar(id, msg.sender, _displayName, _imageUrl);\r\n  }\r\n\r\n  function getGravatar(address owner) public view returns (string, string) {\r\n    uint id = ownerToGravatar[owner];\r\n    return (gravatars[id].displayName, gravatars[id].imageUrl);\r\n  }\r\n\r\n  function updateGravatarName(string _displayName) public {\r\n    require(ownerToGravatar[msg.sender] != 0);\r\n    require(msg.sender == gravatars[ownerToGravatar[msg.sender]].owner);\r\n\r\n    uint id = ownerToGravatar[msg.sender];\r\n\r\n    gravatars[id].displayName = _displayName;\r\n    emit UpdatedGravatar(id, msg.sender, _displayName, gravatars[id].imageUrl);\r\n  }\r\n\r\n  function updateGravatarImage(string _imageUrl) public {\r\n    require(ownerToGravatar[msg.sender] != 0);\r\n    require(msg.sender == gravatars[ownerToGravatar[msg.sender]].owner);\r\n\r\n    uint id = ownerToGravatar[msg.sender];\r\n\r\n    gravatars[id].imageUrl =  _imageUrl;\r\n    emit UpdatedGravatar(id, msg.sender, gravatars[id].displayName, _imageUrl);\r\n  }\r\n\r\n  // the gravatar at position 0 of gravatars[]\r\n  // is fake\r\n  // it's a mythical gravatar\r\n  // that doesn't really exist\r\n  // dani will invoke this function once when this contract is deployed\r\n  // but then no more\r\n  function setMythicalGravatar() public {\r\n    require(msg.sender == 0x8d3e809Fbd258083a5Ba004a527159Da535c8abA);\r\n    gravatars.push(Gravatar(0x0, \" \", \" \"));\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_imageUrl\",\"type\":\"string\"}],\"name\":\"updateGravatarImage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setMythicalGravatar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getGravatar\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gravatarToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToGravatar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_displayName\",\"type\":\"string\"}],\"name\":\"updateGravatarName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_displayName\",\"type\":\"string\"},{\"name\":\"_imageUrl\",\"type\":\"string\"}],\"name\":\"createGravatar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gravatars\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"displayName\",\"type\":\"string\"},{\"name\":\"imageUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"displayName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"imageUrl\",\"type\":\"string\"}],\"name\":\"NewGravatar\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"displayName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"imageUrl\",\"type\":\"string\"}],\"name\":\"UpdatedGravatar\",\"type\":\"event\"}]","ContractName":"GravatarRegistry","CompilerVersion":"v0.4.24-nightly.2018.4.19+commit.27d79906","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2cbc73df056dd8a39602676403b941d328a97101c460674c6ad76c6a9e87dc69"}]}