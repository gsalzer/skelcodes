{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Articolo\r\n{\r\n    bytes   public codice_articolo;\r\n    bytes10 public data_produzione;\r\n    bytes10 public data_scadenza;\r\n    bytes   public id_stabilimento;\r\n\r\n    constructor(bytes   _codice_articolo,\r\n                bytes10 _data_produzione,\r\n                bytes10 _data_scadenza,\r\n                bytes   _id_stabilimento) public\r\n    {\r\n        require(_codice_articolo.length > 0, \"Codice Art. vuoto\");\r\n        require(_data_produzione.length > 0, \"Data produzione vuota\");\r\n        require(_data_scadenza.length   > 0, \"Data scadenza vuota\");\r\n        require(_id_stabilimento.length > 0, \"ID stabilimento vuoto\");\r\n\r\n        codice_articolo = _codice_articolo;\r\n        data_produzione = _data_produzione;\r\n        data_scadenza   = _data_scadenza;\r\n        id_stabilimento = _id_stabilimento;\r\n    }\r\n}\r\n\r\ncontract Lotto\r\n{\r\n    bytes   public id_owner_informazione;\r\n    bytes   public codice_tracciabilita;\r\n    bytes   public id_allevatore;\r\n    bytes10 public data_nascita_pulcino;\r\n    bytes10 public data_trasferimento_allevamento;\r\n\r\n    mapping(bytes => mapping(bytes10 => address)) private articoli;\r\n\r\n    address private owner;\r\n\r\n    modifier onlymanager()\r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor(bytes _codice_tracciabilita,\r\n                bytes _id_allevatore,\r\n                bytes10 _data_nascita_pulcino,\r\n                bytes10 _data_trasferimento_allevamento,\r\n                bytes _id_owner_informazione) public\r\n    {\r\n        require(_codice_tracciabilita.length > 0, \"cod. tra. non valido\");\r\n        require(_id_allevatore.length > 0, \"id all. non valido\");\r\n        require(_data_nascita_pulcino.length > 0, \"data nas. pul. non valida\");\r\n        require(_data_trasferimento_allevamento.length > 0, \"data trasf. non valida\");\r\n        require(_id_owner_informazione.length > 0, \"ID owner informazione non valido\");\r\n\r\n        // This will only be managed by the \"father\" contract (\"CarrefourFactory\"):\r\n        owner = msg.sender;\r\n\r\n        codice_tracciabilita = _codice_tracciabilita;\r\n        id_allevatore = _id_allevatore;\r\n        data_nascita_pulcino = _data_nascita_pulcino;\r\n        data_trasferimento_allevamento = _data_trasferimento_allevamento;\r\n        id_owner_informazione = _id_owner_informazione;\r\n    }\r\n\r\n\r\n    function addArticolo(bytes   _codice_articolo,\r\n                         bytes10 _data_produzione,\r\n                         bytes10 _data_scadenza,\r\n                         bytes   _id_stabilimento) public onlymanager\r\n    {\r\n        require(_codice_articolo.length > 0, \"Codice Art. vuoto\");\r\n        require(_data_produzione.length > 0, \"Data produzione vuota\");\r\n        require(_data_scadenza.length   > 0, \"Data scadenza vuota\");\r\n        require(_id_stabilimento.length > 0, \"ID stabilimento vuoto\");\r\n\r\n        address articolo = new Articolo(_codice_articolo, _data_produzione, _data_scadenza, _id_stabilimento);\r\n\r\n        articoli[_codice_articolo][_data_scadenza] = articolo;\r\n    }\r\n\r\n    function get_articolo(bytes codice_articolo, bytes10 data_scadenza) public view returns(bytes10, bytes)\r\n    {\r\n        address articolo_addr = articoli[codice_articolo][data_scadenza];\r\n\r\n        Articolo articolo = Articolo(articolo_addr);\r\n\r\n        return (\r\n            articolo.data_produzione(),\r\n            articolo.id_stabilimento()\r\n        );\r\n    }\r\n}\r\n\r\ncontract CarrefourFactory\r\n{\r\n    address private owner;\r\n\r\n    mapping(bytes => address) private lotti;\r\n\r\n    event lottoAdded(bytes codice_tracciabilita);\r\n    event articoloAdded(bytes lotto, bytes codice_articolo, bytes10 data_scadenza);\r\n\r\n    constructor() public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlymanager()\r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function createLotto(bytes codice_tracciabilita,\r\n                         bytes id_allevatore,\r\n                         bytes10 data_nascita_pulcino,\r\n                         bytes10 data_trasferimento_allevamento,\r\n                         bytes id_owner_informazione) public onlymanager\r\n    {\r\n        require(codice_tracciabilita.length > 0, \"Codice tracciabilità non valido\");\r\n        require(id_allevatore.length > 0, \"Codice allevatore non valido\");\r\n        require(data_nascita_pulcino.length > 0, \"Data di nascita non valida\");\r\n        require(data_trasferimento_allevamento.length > 0, \"Data trasferimento allevamento non valida\");\r\n\r\n        address lotto = new Lotto(codice_tracciabilita, id_allevatore, data_nascita_pulcino, data_trasferimento_allevamento, id_owner_informazione);\r\n\r\n        lotti[codice_tracciabilita] = lotto;\r\n\r\n        emit lottoAdded(codice_tracciabilita);\r\n    }\r\n\r\n    function get_dati_lotto(bytes codice_tracciabilita) public view\r\n             returns(bytes, bytes10, bytes10, bytes)\r\n    {\r\n        address lotto_addr = lotti[codice_tracciabilita];\r\n\r\n        require(lotto_addr != 0x0, \"Lotto non trovato\");\r\n\r\n        Lotto lotto = Lotto(lotto_addr);\r\n\r\n        return (\r\n            lotto.id_allevatore(),\r\n            lotto.data_nascita_pulcino(),\r\n            lotto.data_trasferimento_allevamento(),\r\n            lotto.id_owner_informazione()\r\n        );\r\n    }\r\n\r\n    function createArticolo(bytes   _lotto, // Here a synonym of \"codice_tracciabilita\"\r\n                            bytes   _codice_articolo,\r\n                            bytes10 _data_produzione,\r\n                            bytes10 _data_scadenza,\r\n                            bytes   _id_stabilimento) public onlymanager\r\n    {\r\n        require(_lotto.length > 0, \"Codice tracciabilità vuoto\");\r\n        require(_codice_articolo.length > 0, \"Codice Art. vuoto\");\r\n        require(_data_produzione.length > 0, \"Data produzione vuota\");\r\n        require(_data_scadenza.length > 0, \"Data scadenza vuota\");\r\n        require(_id_stabilimento.length > 0, \"ID stabilimento vuoto\");\r\n\r\n        address lotto_addr = lotti[_lotto];\r\n\r\n        require(lotto_addr != 0x0, \"Lotto non trovato\");\r\n\r\n        Lotto lotto = Lotto(lotto_addr);\r\n\r\n        lotto.addArticolo(_codice_articolo, _data_produzione, _data_scadenza, _id_stabilimento);\r\n\r\n        emit articoloAdded(_lotto, _codice_articolo, _data_scadenza);\r\n    }\r\n\r\n    function get_dati_articolo(bytes codice_tracciabilita, bytes codice_articolo, bytes10 data_scadenza) public view\r\n             returns(bytes10, bytes, bytes, bytes10, bytes10)\r\n    {\r\n        address lotto_addr = lotti[codice_tracciabilita];\r\n\r\n        require(lotto_addr != 0x0, \"Lotto non trovato\");\r\n\r\n        Lotto lotto = Lotto(lotto_addr);\r\n\r\n        (bytes10 produzione, bytes memory stabilimento) = lotto.get_articolo(codice_articolo, data_scadenza);\r\n\r\n        bytes memory allevatore = lotto.id_allevatore();\r\n        bytes10 nascita = lotto.data_nascita_pulcino();\r\n        bytes10 trasferimento = lotto.data_trasferimento_allevamento();\r\n\r\n        return (\r\n            produzione,\r\n            stabilimento,\r\n            allevatore,\r\n            nascita,\r\n            trasferimento\r\n        );\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_lotto\",\"type\":\"bytes\"},{\"name\":\"_codice_articolo\",\"type\":\"bytes\"},{\"name\":\"_data_produzione\",\"type\":\"bytes10\"},{\"name\":\"_data_scadenza\",\"type\":\"bytes10\"},{\"name\":\"_id_stabilimento\",\"type\":\"bytes\"}],\"name\":\"createArticolo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"codice_tracciabilita\",\"type\":\"bytes\"},{\"name\":\"id_allevatore\",\"type\":\"bytes\"},{\"name\":\"data_nascita_pulcino\",\"type\":\"bytes10\"},{\"name\":\"data_trasferimento_allevamento\",\"type\":\"bytes10\"},{\"name\":\"id_owner_informazione\",\"type\":\"bytes\"}],\"name\":\"createLotto\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"codice_tracciabilita\",\"type\":\"bytes\"},{\"name\":\"codice_articolo\",\"type\":\"bytes\"},{\"name\":\"data_scadenza\",\"type\":\"bytes10\"}],\"name\":\"get_dati_articolo\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes10\"},{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"bytes10\"},{\"name\":\"\",\"type\":\"bytes10\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"codice_tracciabilita\",\"type\":\"bytes\"}],\"name\":\"get_dati_lotto\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"bytes10\"},{\"name\":\"\",\"type\":\"bytes10\"},{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"codice_tracciabilita\",\"type\":\"bytes\"}],\"name\":\"lottoAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"lotto\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"codice_articolo\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"data_scadenza\",\"type\":\"bytes10\"}],\"name\":\"articoloAdded\",\"type\":\"event\"}]","ContractName":"CarrefourFactory","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://56252070fd85c32eea7aacd5715fa8bb6f9021e6f49e91fbb523aff915203975"}]}