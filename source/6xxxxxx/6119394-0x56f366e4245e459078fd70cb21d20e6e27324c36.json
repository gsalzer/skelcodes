{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/*\r\n * A smart contract to return funds to the creator after a hold period\r\n * \r\n * Copyright 2018 Geoff Lamperd\r\n */\r\ncontract PayItBack {\r\n\r\n    uint constant HOLD_TIME = 31 days;\r\n\r\n    address public creator;\r\n    uint public contributionTime = 0;\r\n    uint public totalContributions = 0;\r\n    bool public isDisabled = false;\r\n\r\n\tevent Contribution(uint _amount, address _from);\r\n\tevent OwnershipConfirmed();\r\n\tevent PaidOut(uint _amount);\r\n\tevent Warning(string _message);\r\n\tevent Disabled();\r\n\r\n    modifier ownerOnly() {\r\n        require(msg.sender == creator, \r\n                \"Sorry, you're not the owner of this contract\");\r\n\r\n        _;\r\n    }\r\n\r\n    modifier nilBalance() {\r\n        require(address(this).balance <= 0, \r\n                \"Balance is not 0\");\r\n\r\n        _;\r\n    }\r\n    \r\n    modifier afterHoldExpiry() {\r\n        require(contributionTime > 0, \r\n                \"No contributions have been received\");\r\n        require(now > (contributionTime + HOLD_TIME), \r\n                \"Payments are on hold\");\r\n\r\n        _;\r\n    }\r\n    \r\n    modifier enabled() {\r\n        require(!isDisabled, \r\n                \"This contract has been disabled\");\r\n\r\n        _;\r\n    }\r\n\r\n    modifier wontOverflow() {\r\n        require(totalContributions + msg.value > totalContributions);\r\n\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n    }\r\n\r\n    // Fallback function. If ETH has been transferred, call contribute()\r\n    function () public payable {\r\n        contribute();\r\n    }\r\n\r\n    function contribute() public payable enabled wontOverflow {\r\n        // Hold time starts with first contribution\r\n        // Don't allow subsequent contributions to reset the expiry\r\n        if (contributionTime == 0 && msg.value > 0) {\r\n            contributionTime = now;\r\n        }\r\n\r\n        totalContributions += msg.value;\r\n\r\n        emit Contribution(msg.value, msg.sender);\r\n    }\r\n\r\n    // Pay the contract balance to the contract creator\r\n    function payUp() public ownerOnly afterHoldExpiry {\r\n        uint payment = address(this).balance;\r\n        totalContributions -= payment;\r\n        if (totalContributions != 0) {\r\n            // something has gone wrong\r\n            emit Warning(\"Balance is unexpectedly non-zero after payment\");\r\n        }\r\n        contributionTime = 0; // Reset expiry\r\n        emit PaidOut(payment);\r\n        creator.transfer(payment);\r\n    }\r\n\r\n    function verifyOwnership() public ownerOnly returns(bool) {\r\n        emit OwnershipConfirmed();\r\n\r\n        return true;\r\n    }\r\n\r\n    // Owner can permanently disabled the contract. This will prevent\r\n    // further contributions\r\n    function disable() public ownerOnly nilBalance enabled {\r\n        isDisabled = true;\r\n        \r\n        emit Disabled();\r\n    }\r\n    \r\n    function expiryTime() public view returns(uint) {\r\n        return contributionTime + HOLD_TIME;\r\n    }\r\n    \r\n    function daysMinutesTilExpiryTime() public view returns(uint, uint) {\r\n        uint secsLeft = (contributionTime + HOLD_TIME - now);\r\n        uint daysLeft = secsLeft / 1 days;\r\n        uint minsLeft = (secsLeft % 1 days) / 1 minutes;\r\n        return (daysLeft, minsLeft);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDisabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"verifyOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expiryTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributionTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daysMinutesTilExpiryTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PaidOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"Warning\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Disabled\",\"type\":\"event\"}]","ContractName":"PayItBack","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://712868b7201413cbc9d2d0f9e2a31220524fe8339414bef0ab29db7511d59d2c"}]}