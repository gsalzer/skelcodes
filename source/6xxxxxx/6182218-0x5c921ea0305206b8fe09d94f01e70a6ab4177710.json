{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n/*\r\n\r\n    GOeureka SimpleAudit Smart Contract\r\n\r\n    This contract stores a client and supplier reference between customers and\r\n    hotels on the blockchain for audit log purposes\r\n\r\n    bytes32 goeureka_audit_ref\r\n    - a blockchain reference ID generated by goeureka\r\n\r\n    string reference\r\n    - a hash of two reference code from supplier and goeureka\r\n\r\n*/\r\ncontract SimpleAudit {\r\n\r\n    event AuditLog(bytes32 goeureka_audit_ref, string reference); // event\r\n\r\n    struct Audit {\r\n        string reference;        // a hash of two reference code from supplier and goeureka\r\n        bool exist;              // checks if the reference exists\r\n    }\r\n\r\n    address creator;\r\n    mapping(bytes32 => Audit) public records;\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(\r\n            msg.sender == creator, \"Only owner can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier noEdit(bytes32 goeureka_audit_ref) {\r\n\r\n        require(\r\n            records[goeureka_audit_ref].exist == false,\r\n            \"Already set, audit log cannot be modified\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function set(bytes32 goeureka_audit_ref, string reference)\r\n        onlyOwner\r\n        noEdit(goeureka_audit_ref)\r\n        public {\r\n            records[goeureka_audit_ref].reference = reference;\r\n            records[goeureka_audit_ref].exist = true;\r\n            emit AuditLog(goeureka_audit_ref, reference);\r\n    }\r\n\r\n    function get(bytes32 goeureka_audit_ref) public constant returns (string) {\r\n        return records[goeureka_audit_ref].reference;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"records\",\"outputs\":[{\"name\":\"reference\",\"type\":\"string\"},{\"name\":\"exist\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"goeureka_audit_ref\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"goeureka_audit_ref\",\"type\":\"bytes32\"},{\"name\":\"reference\",\"type\":\"string\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"goeureka_audit_ref\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"reference\",\"type\":\"string\"}],\"name\":\"AuditLog\",\"type\":\"event\"}]","ContractName":"SimpleAudit","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dead1fb30603a1e023754c8fda633d2eee3e4aa57f85ca5cf93f9977cea887cf"}]}