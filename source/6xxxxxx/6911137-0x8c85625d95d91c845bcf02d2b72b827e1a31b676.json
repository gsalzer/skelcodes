{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Ownable{}\r\ncontract CREDITS is Ownable {\r\n    mapping (address => uint256) internal balanceOf;\r\n    function transfer (address _to, uint256 _value) public returns (bool);\r\n   // function balanceOf (address _owner) public view returns (uint256 balance);\r\n}\r\n\r\ncontract SwapContractDateumtoPDATA {\r\n    //storage\r\n    address public owner;\r\n    CREDITS public company_token;\r\n\r\n    address public PartnerAccount;\r\n    uint public originalBalance;\r\n    uint public currentBalance;\r\n    uint public alreadyTransfered;\r\n    uint public startDateOfPayments;\r\n    uint public endDateOfPayments;\r\n    uint public periodOfOnePayments;\r\n    uint public limitPerPeriod;\r\n    uint public daysOfPayments;\r\n\r\n    //modifiers\r\n    modifier onlyOwner\r\n    {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n  \r\n  \r\n    //Events\r\n    event Transfer(address indexed to, uint indexed value);\r\n    event OwnerChanged(address indexed owner);\r\n\r\n\r\n    //constructor\r\n    constructor (CREDITS _company_token) public {\r\n        owner = msg.sender;\r\n        PartnerAccount = 0x9fb9Ec557A13779C69cfA3A6CA297299Cb55E992;\r\n        company_token = _company_token;\r\n        //originalBalance = 10000000   * 10**8; // 10 000 000   XDT\r\n        //currentBalance = originalBalance;\r\n        //alreadyTransfered = 0;\r\n        //startDateOfPayments = 1561939200; //From 01 Jun 2019, 00:00:00\r\n        //endDateOfPayments = 1577836800; //To 01 Jan 2020, 00:00:00\r\n        //periodOfOnePayments = 24 * 60 * 60; // 1 day in seconds\r\n        //daysOfPayments = (endDateOfPayments - startDateOfPayments) / periodOfOnePayments; // 184 days\r\n        //limitPerPeriod = originalBalance / daysOfPayments;\r\n    }\r\n\r\n\r\n    /// @dev Fallback function: don't accept ETH\r\n    function()\r\n        public\r\n        payable\r\n    {\r\n        revert();\r\n    }\r\n\r\n\r\n\r\n\r\n    function setOwner(address _owner) \r\n        public \r\n        onlyOwner \r\n    {\r\n        require(_owner != 0);\r\n     \r\n        owner = _owner;\r\n        emit OwnerChanged(owner);\r\n    }\r\n  \r\n    function sendCurrentPayment() public {\r\n        if (now > startDateOfPayments) {\r\n            //uint currentPeriod = (now - startDateOfPayments) / periodOfOnePayments;\r\n            //uint currentLimit = currentPeriod * limitPerPeriod;\r\n            //uint unsealedAmount = currentLimit - alreadyTransfered;\r\n            company_token.transfer(PartnerAccount, 1);\r\n            \r\n\t    }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendCurrentPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodOfOnePayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateOfPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"alreadyTransfered\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daysOfPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PartnerAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"originalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitPerPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateOfPayments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_company_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"SwapContractDateumtoPDATA","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000046b9ad944d1059450da1163511069c718f699d31","Library":"","SwarmSource":"bzzr://b2f5f027b272636f635b5af750e06c2455085febacb4473336e6016531024897"}]}