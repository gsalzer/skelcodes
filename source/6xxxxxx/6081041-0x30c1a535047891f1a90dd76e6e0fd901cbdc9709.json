{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract ERC20Basic {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\nlibrary SafeERC20 {\r\n    function safeTransfer(ERC20 token, address to, uint256 value) internal {\r\n        assert(token.transfer(to, value));\r\n    }\r\n    function safeTransferFrom(ERC20 token, address from, address to, uint256 value) internal{\r\n        assert(token.transferFrom(from, to, value));\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract TOSMidHoldingContract is owned{\r\n    using SafeERC20 for ERC20;\r\n    using SafeMath for uint;\r\n    string public constant name = \"TOSMidHoldingContract\";\r\n    uint[6] public releasePercentages = [\r\n        15,  //15%\r\n        35,   //20%\r\n        50,   //15%\r\n        65,   //15%\r\n        80,   //15%\r\n        100   //20%\r\n    ];\r\n\r\n    uint256 public constant HOLDING_START               = 1533916800;  //2018/8/11 0:0:0\r\n    uint256 public constant RELEASE_START               = 1541260800; //2018/11/4 0:0:0\r\n    uint256 public constant RELEASE_INTERVAL            = 30 days; // 30 days\r\n    uint256 public RELEASE_END                          = RELEASE_START.add(RELEASE_INTERVAL.mul(5));\r\n    ERC20 public tosToken = ERC20(0xFb5a551374B656C6e39787B1D3A03fEAb7f3a98E);\r\n    \r\n    mapping (address => uint256) public lockBalanceOf;/// Locked account details\r\n    mapping (address => uint256) public amountsRecords;\r\n    mapping (address => uint256) public released;\r\n\r\n    uint256 public totalLockAmount = 0; \r\n    function TOSMidHoldingContract() public {}\r\n    function lock(uint256 lockAmount) public {\r\n\r\n        require(lockAmount >= 100000 * 10 ** 18); /// > 100,000\r\n        require(now <= HOLDING_START); \r\n\r\n        uint256 reward = lockAmount.mul(20).div(100);\r\n\r\n        require(reward <= (tosToken.balanceOf(this).sub(totalLockAmount)));\r\n        tosToken.safeTransferFrom(msg.sender, this, lockAmount);\r\n\r\n        lockBalanceOf[msg.sender] = lockBalanceOf[msg.sender].add(lockAmount).add(reward);\r\n        amountsRecords[msg.sender] = lockBalanceOf[msg.sender];\r\n        totalLockAmount = totalLockAmount.add(lockAmount).add(reward);\r\n    }\r\n\r\n    function release() public {\r\n        uint256 num = now.sub(RELEASE_START).div(RELEASE_INTERVAL);\r\n\r\n        uint256 releaseAmount = 0;\r\n        if (num >= releasePercentages.length.sub(1)) {\r\n            releaseAmount = lockBalanceOf[msg.sender];\r\n            released[msg.sender] = 100;\r\n        }\r\n        else {\r\n            releaseAmount = amountsRecords[msg.sender].mul(releasePercentages[num].sub(released[msg.sender])).div(100);\r\n            released[msg.sender] = releasePercentages[num];\r\n        }\r\n\r\n        require(releaseAmount > 0);\r\n        tosToken.safeTransfer(msg.sender, releaseAmount);\r\n        lockBalanceOf[msg.sender] = lockBalanceOf[msg.sender].sub(releaseAmount);\r\n        totalLockAmount = totalLockAmount.sub(releaseAmount);\r\n    }\r\n\r\n    function remainingReward() public onlyOwner {\r\n        require(now > HOLDING_START); \r\n        require(tosToken.balanceOf(this) > totalLockAmount);\r\n        tosToken.safeTransfer(owner, tosToken.balanceOf(this).sub(totalLockAmount));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountsRecords\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RELEASE_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HOLDING_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tosToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RELEASE_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RELEASE_INTERVAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockAmount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"remainingReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"releasePercentages\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TOSMidHoldingContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5795c23764cae6711db43004ad9c2c71796b6c7603ac071f7bb1a7e455dae1e2"}]}