{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract MultiEthSender {\r\n    \r\n    event Send(uint256 _amount, address indexed _receiver);\r\n    \r\n    constructor() payable public {\r\n        \r\n    }\r\n    \r\n    function multiSendEth(uint256 amount, address[] list) public payable returns (bool) {\r\n        uint balanceBeforeTransfer = address(this).balance;\r\n        \r\n        for(uint i=0;i<list.length;i++){\r\n            list[i].transfer(amount);\r\n            emit Send(amount, list[i]);\r\n        }\r\n        assert(address(this).balance == balanceBeforeTransfer - amount*list.length);\r\n        return true;\r\n    }\r\n    \r\n    function getBalance() constant public returns(uint){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function() public payable{\r\n        \r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"list\",\"type\":\"address[]\"}],\"name\":\"multiSendEth\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"Send\",\"type\":\"event\"}]","ContractName":"MultiEthSender","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7082352b24fb49b4b662fc6a3dd1efa3cc26e606de59e18ef7aabc5ce3772185"}]}