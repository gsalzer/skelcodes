{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// File: node_modules/zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * See https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n// File: contracts/MyanmarDonations.sol\r\n\r\n// ----------------------------------------------------------------------------\r\n// MyanmarDonations - Donations Contract to help people due to Myanmar flood\r\n//\r\n// Copyright (c) 2018 InfoCorp Technologies Pte Ltd.\r\n// http://www.sentinel-chain.org/\r\n//\r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\ncontract MyanmarDonations{\r\n\r\n    // SENC Token Address\r\n    address public SENC_CONTRACT_ADDRESS = 0xA13f0743951B4f6E3e3AA039f682E17279f52bc3;\r\n    // Donation Wallet Address\r\n    address public donationWallet;\r\n    // Foundation Wallet Address\r\n    address public foundationWallet;\r\n    // Start time for donation campaign\r\n    uint256 public startDate;\r\n    // End time for donation campaign\r\n    uint256 public endDate;\r\n    // SENC-ETH pegged rate based on EOD rate of the 8nd August from coingecko in Wei\r\n    uint256 public sencEthRate;\r\n\r\n    // Ether hard cap\r\n    uint256 public ETHER_HARD_CAP;\r\n    // InfoCorp committed ETH donation amount\r\n    uint256 public INFOCORP_DONATION;\r\n    // Total Ether hard cap to receive\r\n    uint256 public TOTAL_ETHER_HARD_CAP;\r\n    // Total of SENC collected at the end of the donation\r\n    uint256 public totalSencCollected;\r\n    // Marks the end of the donation.\r\n    bool public finalized = false;\r\n\r\n    uint256 public sencHardCap;\r\n\r\n    modifier onlyDonationAddress() {\r\n        require(msg.sender == donationWallet);\r\n        _;\r\n    }\r\n\r\n    constructor(                           \r\n                address _donationWallet, //0xB4ea16258020993520F59cC786c80175C1b807D7\r\n                address _foundationWallet, //0x2c76E65d3b3E38602CAa2fAB56e0640D0182D8F8\r\n                uint256 _startDate, //1534125600 [2018-08-13 10:00:00 (GMT +8)]\r\n                uint256 _endDate, //1534327200 [2018-08-15 18:00:00 (GMT +8)]\r\n                uint256 _sencEthRate, // 40187198103877\r\n                uint256 _etherHardCap,\r\n                uint256 _infocorpDonation\r\n                ) public {\r\n        donationWallet = _donationWallet;\r\n        foundationWallet = _foundationWallet;\r\n        startDate = _startDate;\r\n        endDate = _endDate;\r\n        sencEthRate = _sencEthRate;\r\n        ETHER_HARD_CAP = _etherHardCap;\r\n        sencHardCap = ETHER_HARD_CAP * 10 ** 18 / sencEthRate;\r\n        INFOCORP_DONATION = _infocorpDonation;\r\n\r\n        TOTAL_ETHER_HARD_CAP = ETHER_HARD_CAP + INFOCORP_DONATION;\r\n    }\r\n\r\n    /// @notice Receive initial funds.\r\n    function() public payable {\r\n        require(msg.value == TOTAL_ETHER_HARD_CAP);\r\n        require(\r\n            address(this).balance <= TOTAL_ETHER_HARD_CAP,\r\n            \"Contract balance hardcap reachead\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice The `finalize()` should only be called after donation\r\n     * hard cap reached or the campaign reached the final day.\r\n     */\r\n    function finalize() public onlyDonationAddress returns (bool) {\r\n        require(getSencBalance() >= sencHardCap || now >= endDate, \"SENC hard cap rached OR End date reached\");\r\n        require(!finalized, \"Donation not already finalized\");\r\n        // The Ether balance collected in Wei\r\n        totalSencCollected = getSencBalance();\r\n        if (totalSencCollected >= sencHardCap) {\r\n            // Transfer of donations to the donations address\r\n            donationWallet.transfer(address(this).balance);\r\n        } else {\r\n            uint256 totalDonatedEthers = convertToEther(totalSencCollected) + INFOCORP_DONATION;\r\n            // Transfer of donations to the donations address\r\n            donationWallet.transfer(totalDonatedEthers);\r\n            // Transfer ETH remaining to foundation\r\n            claimTokens(address(0), foundationWallet);\r\n        }\r\n        // Transfer SENC to foundation\r\n        claimTokens(SENC_CONTRACT_ADDRESS, foundationWallet);\r\n        finalized = true;\r\n        return finalized;\r\n    }\r\n\r\n    /**\r\n     * @notice The `claimTokens()` should only be called after donation\r\n     * ends or if a security issue is found.\r\n     * @param _to the recipient that receives the tokens.\r\n     */\r\n    function claimTokens(address _token, address _to) public onlyDonationAddress {\r\n        require(_to != address(0), \"Wallet format error\");\r\n        if (_token == address(0)) {\r\n            _to.transfer(address(this).balance);\r\n            return;\r\n        }\r\n\r\n        ERC20Basic token = ERC20Basic(_token);\r\n        uint256 balance = token.balanceOf(this);\r\n        require(token.transfer(_to, balance), \"Token transfer unsuccessful\");\r\n    }\r\n\r\n    /// @notice The `sencToken()` is the getter for the SENC Token.\r\n    function sencToken() public view returns (ERC20Basic) {\r\n        return ERC20Basic(SENC_CONTRACT_ADDRESS);\r\n    }\r\n\r\n    /// @notice The `getSencBalance()` retrieve the SENC balance of the contract in Wei.\r\n    function getSencBalance() public view returns (uint256) {\r\n        return sencToken().balanceOf(address(this));\r\n    }\r\n\r\n    /// @notice The `getTotalDonations()` retrieve the Ether balance collected so far in Wei.\r\n    function getTotalDonations() public view returns (uint256) {\r\n        return convertToEther(finalized ? totalSencCollected : getSencBalance());\r\n    }\r\n    \r\n    /// @notice The `setEndDate()` changes unit timestamp on wich de donations ends.\r\n    function setEndDate(uint256 _endDate) external onlyDonationAddress returns (bool){\r\n        endDate = _endDate;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice The `convertToEther()` converts value of SENC Tokens to Ether based on pegged rate.\r\n     * @param _value the amount of SENC to be converted.\r\n     */\r\n    function convertToEther(uint256 _value) public view returns (uint256) {\r\n        return _value * sencEthRate / 10 ** 18;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sencEthRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSencCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENC_CONTRACT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_ETHER_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sencHardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalDonations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSencBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INFOCORP_DONATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sencToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHER_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"donationWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"convertToEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_donationWallet\",\"type\":\"address\"},{\"name\":\"_foundationWallet\",\"type\":\"address\"},{\"name\":\"_startDate\",\"type\":\"uint256\"},{\"name\":\"_endDate\",\"type\":\"uint256\"},{\"name\":\"_sencEthRate\",\"type\":\"uint256\"},{\"name\":\"_etherHardCap\",\"type\":\"uint256\"},{\"name\":\"_infocorpDonation\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"MyanmarDonations","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000004d783ef7e9ea375ba8e5be85d1ae38e26d8b6f90000000000000000000000002c76e65d3b3e38602caa2fab56e0640d0182d8f8000000000000000000000000000000000000000000000000000000005b70e620000000000000000000000000000000000000000000000000000000005b73f9a00000000000000000000000000000000000000000000000000000248ccfaae145000000000000000000000000000000000000000000000001a055690d9db80000000000000000000000000000000000000000000000000001a055690d9db80000","Library":"","SwarmSource":"bzzr://e106af238e12a3ce0b3b39904bc9951325ee7d250067a8ca561c9ad675f4543c"}]}