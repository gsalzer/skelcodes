{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(owner);\r\n        owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param _newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        _transferOwnership(_newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param _newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address _newOwner) internal {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Currency exchange rate contract\r\n */\r\ncontract CurrencyExchangeRate is Ownable {\r\n\r\n    struct Currency {\r\n        uint256 exRateToEther; // Exchange rate: currency to Ether\r\n        uint8 exRateDecimals;  // Exchange rate decimals\r\n    }\r\n\r\n    Currency[] public currencies;\r\n\r\n    event CurrencyExchangeRateAdded(\r\n        address indexed setter, uint256 index, uint256 rate, uint256 decimals\r\n    );\r\n\r\n    event CurrencyExchangeRateSet(\r\n        address indexed setter, uint256 index, uint256 rate, uint256 decimals\r\n    );\r\n\r\n    constructor() public {\r\n        // Add Ether to index 0\r\n        currencies.push(\r\n            Currency ({\r\n                exRateToEther: 1,\r\n                exRateDecimals: 0\r\n            })\r\n        );\r\n        // Add USD to index 1\r\n        currencies.push(\r\n            Currency ({\r\n                exRateToEther: 30000,\r\n                exRateDecimals: 2\r\n            })\r\n        );\r\n    }\r\n\r\n    function addCurrencyExchangeRate(\r\n        uint256 _exRateToEther, \r\n        uint8 _exRateDecimals\r\n    ) external onlyOwner {\r\n        emit CurrencyExchangeRateAdded(\r\n            msg.sender, currencies.length, _exRateToEther, _exRateDecimals);\r\n        currencies.push(\r\n            Currency ({\r\n                exRateToEther: _exRateToEther,\r\n                exRateDecimals: _exRateDecimals\r\n            })\r\n        );\r\n    }\r\n\r\n    function setCurrencyExchangeRate(\r\n        uint256 _currencyIndex,\r\n        uint256 _exRateToEther, \r\n        uint8 _exRateDecimals\r\n    ) external onlyOwner {\r\n        emit CurrencyExchangeRateSet(\r\n            msg.sender, _currencyIndex, _exRateToEther, _exRateDecimals);\r\n        currencies[_currencyIndex].exRateToEther = _exRateToEther;\r\n        currencies[_currencyIndex].exRateDecimals = _exRateDecimals;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_currencyIndex\",\"type\":\"uint256\"},{\"name\":\"_exRateToEther\",\"type\":\"uint256\"},{\"name\":\"_exRateDecimals\",\"type\":\"uint8\"}],\"name\":\"setCurrencyExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exRateToEther\",\"type\":\"uint256\"},{\"name\":\"_exRateDecimals\",\"type\":\"uint8\"}],\"name\":\"addCurrencyExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currencies\",\"outputs\":[{\"name\":\"exRateToEther\",\"type\":\"uint256\"},{\"name\":\"exRateDecimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"CurrencyExchangeRateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"CurrencyExchangeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CurrencyExchangeRate","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c05cfad84afec7c6d5fc2d36ce53a44dfbce0d37672e9c519c22a913cd2df22a"}]}