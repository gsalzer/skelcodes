{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/*\r\n\r\n  BASIC ERC20 Sale Contract\r\n\r\n  Create this Sale contract first!\r\n\r\n     Sale(address ethwallet)   // this will send the received ETH funds to this address\r\n\r\n\r\n  @author Hunter Long\r\n  @repo https://github.com/hunterlong/ethereum-ico-contract\r\n\r\n\r\n*/\r\n\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n    function balanceOf(address who) public view returns (uint);\r\n    function allowance(address owner, address spender) public view returns (uint);\r\n    function transfer(address to, uint value) public returns (bool ok);\r\n    function transferFrom(address from, address to, uint value) public returns (bool ok);\r\n    function approve(address spender, uint value) public returns (bool ok);\r\n    function mintToken(address to, uint256 value) public returns (uint256);\r\n    function mintTokenFree(address to, uint256 value) public returns (uint256);\r\n    function changeTransfer(bool allowed) public;\r\n}\r\n\r\n\r\ncontract Sale {\r\n\r\n    uint256 public totalMinted;\r\n    uint public exchangeRate;\r\n    bool public isFunding;\r\n    ERC20 public Token;\r\n    address public ETHWallet;\r\n\r\n    bool private configSet;\r\n    bool private walletSet;\r\n    address public creator;\r\n\r\n    mapping (address => uint256) public heldTokens;\r\n    mapping (address => uint) public heldTimeline;\r\n\r\n    event Contribution(address from, uint256 amount);\r\n    event ReleaseTokens(address from, uint256 amount);\r\n\r\n    constructor(address _wallet) public{\r\n        ETHWallet = _wallet;\r\n        isFunding = true;\r\n        creator = msg.sender;\r\n        exchangeRate = 27334; //204.370778509 / 0.00972 => 21026 + 30%\r\n    }\r\n\r\n    // setup function to be ran only 1 time\r\n    // setup token address\r\n    // setup end Block number\r\n    function setup(address token_address) public{\r\n        require(!configSet, \"already setup\");\r\n        Token = ERC20(token_address);\r\n        configSet = true;\r\n    }\r\n\r\n    function setupETHWallet(address _wallet) public{\r\n        require(msg.sender==creator, \"Creator reuired\");\r\n        require(!walletSet, \"wallet already setup\");\r\n        ETHWallet = _wallet;\r\n        walletSet = true;\r\n    }\r\n\r\n    function closeSale() external {\r\n        require(msg.sender==creator, \"Creator reuired\");\r\n        isFunding = false;\r\n    }\r\n\r\n    function() payable public {\r\n        require(msg.value>0, \"value need to be more than 0\");\r\n        require(isFunding, \"isFunding required\");\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = totalMinted + amount;\r\n        totalMinted += total;\r\n        ETHWallet.transfer(msg.value);\r\n        Token.mintToken(msg.sender, amount);\r\n        emit Contribution(msg.sender, amount);\r\n    }\r\n\r\n    // CONTRIBUTE FUNCTION\r\n    // converts ETH to TOKEN and sends new TOKEN to the sender\r\n    function contribute(address sender, uint256 value) external {\r\n        require(msg.sender==creator, \"creator required\");\r\n        require(isFunding, \"isFunding required\");\r\n        Token.mintTokenFree(sender, value);\r\n        emit Contribution(sender, value);\r\n    }\r\n\r\n    // update the ETH/COIN rate\r\n    function updateRate(uint256 rate) external {\r\n        require(msg.sender==creator, \"creator required\");\r\n        require(isFunding, \"isFunding required\");\r\n        exchangeRate = rate;\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator) external {\r\n        require(msg.sender==creator, \"creator required\");\r\n        creator = _creator;\r\n    }\r\n\r\n    // change transfer status for ERC20 token\r\n    function changeTransferStats(bool _allowed) external {\r\n        require(msg.sender==creator, \"creator required\");\r\n        Token.changeTransfer(_allowed);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTimeline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setupETHWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"changeTransferStats\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleaseTokens\",\"type\":\"event\"}]","ContractName":"Sale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000bd60407e6a41a5da58c01b9bcc22f74bd362ea6","Library":"","SwarmSource":"bzzr://8f67003c9c3d08ccb00055eca7266826f7bd9fca6d0beeb338c032ef328bc9d0"}]}