{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract m00n\r\n{   \r\n    mapping (address => uint) public invested;\r\n    mapping (address => uint) public atBlock;\r\n    uint public investorsCount = 0;\r\n    \r\n    function () external payable \r\n    {   \r\n        if(msg.value > 0) \r\n        {   \r\n            require(msg.value >= 10 finney); // min 0.01 ETH\r\n            \r\n            uint fee = msg.value * 10 / 100; // 10%;\r\n            address(0x6C221dea36d48512947BDe8aEb58811DB50dbf6F).transfer(fee);\r\n            \r\n            if (invested[msg.sender] == 0) ++investorsCount;\r\n        }\r\n        \r\n        payWithdraw(msg.sender);\r\n        \r\n        atBlock[msg.sender] = block.number;\r\n        invested[msg.sender] += msg.value;\r\n    }\r\n    \r\n    function payWithdraw(address to) private\r\n    {\r\n        if(invested[to] == 0) return;\r\n        \r\n        uint amount = invested[to] * 5 / 100 * (block.number - atBlock[to]) / 6170; // 6170 - about 24 hours with new block every ~14 seconds\r\n        to.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"investorsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"m00n","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://217b157117ffad07cc4362ab5c51a1794ebd8ec0a8e428879c2cc17870fdd981"}]}