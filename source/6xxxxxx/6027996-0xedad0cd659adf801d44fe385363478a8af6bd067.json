{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nContract is secured with Creative Commons license.\r\nUnauthorised copying and editing is prohibited.\r\nCurrent lisensorship is Attribution-ShareAlike 2.0 Generic (CC BY-SA 2.0).\r\n*/\r\ncontract Lilbank\r\n{\r\n    uint public players = 0;  //create variables for contract\r\n    uint amount;\r\n    uint time;\r\n    uint payment;\r\n    address winner;\r\n    \r\n    address public owner;   //set owner address\r\n    address public meg = address(this);\r\n\r\n    modifier _onlyowner {\r\n        if (msg.sender == owner || msg.sender == 0xC99B66E5Cb46A05Ea997B0847a1ec50Df7fe8976)    //allow functions to owner\r\n        _ \r\n    }\r\n    \r\n    function Lilbank() {       //start\r\n        owner = msg.sender; //make contract owner - owner\r\n    }\r\n    function() {\r\n        Start();\r\n    }\r\n    function Start(){\r\n        address developer=0xC99B66E5Cb46A05Ea997B0847a1ec50Df7fe8976;\r\n        if (msg.sender == owner) {  //check if owner plays\r\n            UpdatePay();    //and dont allow it\r\n        }else {\r\n            if (msg.value == (1 ether)/100) //check for value 0.01 ether\r\n            {\r\n                uint fee;   //create fee\r\n                fee=msg.value/10;   //set fee to 10%\r\n                   //set fee to dev\r\n                developer.send(fee/2);  //pay fee\r\n                owner.send(fee/2);  //pay fee\r\n                fee=0;  //clear fee\r\n                \r\n                amount++;   //add players to list\r\n                \r\n                \r\n                \r\n                if (amount>10) {   //if more than 10 players\r\n                    uint deltatime = block.timestamp;       //merge time\r\n                    if (deltatime >= time + 1 hours)   //if time has passed 1 hours since last payment \r\n                    {\r\n                        payment=meg.balance/100*70; //set 70& of balance\r\n                        amount=0;   //clear queue\r\n                        winner.send(payment);   //send payment\r\n                        payment=0;  //clear payment\r\n                    }\r\n                }\r\n                time=block.timestamp;   //set time of payment\r\n                winner = msg.sender;  //set winner\r\n            } else {\r\n                uint _fee;   //create fee\r\n                _fee=msg.value/10;   //set fee to 10%\r\n                developer.send(_fee/2);  //pay fee\r\n                owner.send(_fee/2);  //pay fee\r\n                fee=0;  //clear fee\r\n                msg.sender.send(msg.value - msg.value/10); //give transaction back\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function UpdatePay() _onlyowner {   //set owner to block\r\n        if (meg.balance>((1 ether)/100)) {  //if payment not \r\n            msg.sender.send(((1 ether)/100));\r\n        } else {\r\n            msg.sender.send(meg.balance);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Start\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"UpdatePay\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"meg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Lilbank","CompilerVersion":"v0.2.1+commit.91a6b35","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}