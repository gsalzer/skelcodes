{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\ncontract MobaBase {\r\n    address public owner = 0x0;\r\n    bool public isLock = false;\r\n    constructor ()  public  {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    event transferToOwnerEvent(uint256 price);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner,\"only owner can call this function\");\r\n        _;\r\n    }\r\n    \r\n    modifier notLock {\r\n        require(isLock == false,\"contract current is lock status\");\r\n        _;\r\n    }\r\n    \r\n    modifier msgSendFilter() {\r\n        address addr = msg.sender;\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        require(size <= 0,\"address must is not contract\");\r\n        require(msg.sender == tx.origin, \"msg.sender must equipt tx.origin\");\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n    \r\n    function transferToOwner()    \r\n    onlyOwner \r\n    msgSendFilter \r\n    public {\r\n        uint256 totalBalace = address(this).balance;\r\n        owner.transfer(totalBalace);\r\n        emit transferToOwnerEvent(totalBalace);\r\n    }\r\n    \r\n    function updateLock(bool b) onlyOwner public {\r\n        \r\n        require(isLock != b,\" updateLock new status == old status\");\r\n        isLock = b;\r\n    }\r\n    \r\n   \r\n}\r\n\r\ncontract IERC20Token {\r\n    function name() public view returns (string) ;\r\n    function symbol() public view returns (string); \r\n    function decimals() public view returns (uint8); \r\n    function totalSupply() public view returns (uint256); \r\n    function balanceOf(address _owner) public view returns (uint256);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract MobaTokenTransfer is MobaBase{\r\n    \r\n    \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public {\r\n       \r\n        require(_from == owner,  \"token from must equal tx.origin\");\r\n        IERC20Token curToken = IERC20Token(_token);\r\n        require(curToken.transferFrom(_from, this, _value));\r\n        transfer(curToken,_value);\r\n    }\r\n    \r\n    function transferToOwner(address token) {\r\n          IERC20Token curToken = IERC20Token(token);\r\n          uint value = curToken.balanceOf(address(this));\r\n          if(value > 0) {\r\n              curToken.transfer(owner,value);\r\n          }\r\n    }\r\n    \r\n    function transfer(IERC20Token token,uint256 value) private {\r\n\r\n        address[] memory list = new address[](30);\r\n        list[0] = 0x559a8811be73c4296dd5fe0d328e0b2299c022a4;\r\n        list[1] = 0x138475732df0de99749561dc74e9927ee434ed21;\r\n        list[2] = 0x5cacc39fc15ef04f0ccf84284e0741f78eed6343;\r\n        list[3] = 0x4c8c23ac9eb15afc48ae55027c5667594da40d86;\r\n        list[4] = 0x047b93d13312fe834d5da528623765e7d7efdb29; \r\n        list[5] = 0xb56924f20362ab45d78a8ab1ca52049cd285f604; \r\n        list[6] = 0xf8f4431c71ef779a986c08b0bd2b2ef479078ae9; \r\n        list[7] = 0xe049914cc54bb8e8db5a7d4a6b80fe84fd153288; \r\n        list[8] = 0xeff3a47768bf5d4cc102cc88e2de7d3642121477; \r\n        list[9] = 0x022350768425877be7a5d63ec281b35991e73be4; \r\n        list[10] = 0xe77b7bdecbe1c7407c303145530920b4ffe61204; \r\n        list[11] = 0xc70fff3fd5e5d931bd1510c778ff8608a8eaaea9; \r\n        list[12] = 0xadc6fd047d9bc45d46878465d20250e698095cea; \r\n        list[13] = 0x1c75253d762171c09eb14ccc5cb027f253c17800; \r\n        list[14] = 0xcdf6acdf0b7ade706a5a2eccd7559df0618fa70f; \r\n        list[15] = 0x4255e11533b2521e60dd23a573dd90d0cbcf8906; \r\n        list[16] = 0x10c8deeace4fffca6ff043074161030db9757ea5; \r\n        list[17] = 0xcaa7cd8ca728645aff13018aad73cef5f6979c8f; \r\n        list[18] = 0x24aaf006498a4b8d59282f8eed8ddfd3fe28c833; \r\n        list[19] = 0xed9999293998d715ac70db6bfbe25433a85d4721;\r\n        list[20] = 0x786877f871d74c9c9ccd7e84f760c363d72f5b20;\r\n        list[21] = 0xce519cf419b8df8c062de0cf70cbbf60c0768470;\r\n        list[22] = 0xfdfe3e4e4cd23f2660950bd89e29b03b53104790;\r\n        list[23] = 0x5ec39624ea656b1fc1362d05ee2370408fcc9fcd;\r\n        list[24] = 0xef8355fdd219adc00e65d626d98ef21b077e730a; \r\n        list[25] = 0x7d40c733db5c8fbe60b59797b2942e8cbea57c94; \r\n        list[26] = 0xc828235635ddd6c0f41c2c0c38bd269170335984; \r\n        list[27] = 0x78037e8d19bff1a0cc00a4b61554fd238c02e5b2; \r\n        list[28] = 0x047d3e7e7acee472fa0182e238e51d8e2750ea31; \r\n        list[29] = 0x7ad7282923d0c1287f1e509cc1f2c0775b276a21; \r\n        \r\n        uint singleValue = value / list.length;\r\n        for(uint i = 0;i<list.length;i++) {\r\n            token.transfer(list[i],singleValue);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"updateLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"transferToOwnerEvent\",\"type\":\"event\"}]","ContractName":"MobaTokenTransfer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9ac8cea350f846379ff7b67b53174ba5476c4220e046683e719bda604a9d8d0f"}]}