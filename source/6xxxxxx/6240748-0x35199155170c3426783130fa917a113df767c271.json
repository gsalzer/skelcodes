{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract ONG_Base{\r\n    struct Project{\r\n        address Owner;\r\n        uint256 Id;\r\n        uint256 Tokens;\r\n        bool Enable;\r\n    \t}\r\n\tstruct Member{\r\n        address Owner;\r\n        uint256 Tokens;\r\n        bool Enable;\r\n\t}\r\n\taddress public Oracle;\r\n    address public Owner;\r\n\taddress[] membersAddresses;\r\n    uint256 constant OwnerProject = 1;\r\n    uint256 public Period =1;\r\n\tmapping (uint256=>Project) Projects;\r\n\tmapping (address=> Member) Members;\r\n\t\r\n\t\r\n\tmodifier IsOracle(){\r\n        require(msg.sender == Oracle );\r\n        _;\r\n\t}\r\n    modifier IsOwner(){\r\n        require(msg.sender == Owner);\r\n        _;\r\n    }\r\n}\r\ncontract ONG_ProjectFunctions is ONG_Base{\r\n    function Project_RemoveToken (uint256 _ProjectID, uint256 _tokens) public {\r\n        require(Projects[_ProjectID].Owner == msg.sender);\r\n        require(Projects[_ProjectID].Enable);\r\n        require(Projects[_ProjectID].Tokens >= _tokens);\r\n        Projects[_ProjectID].Tokens = Projects[_ProjectID].Tokens  - _tokens;\r\n    }\r\n    function Project_Info(uint256 _ProjectID) public view returns(address _Owner,uint256 _Id,uint256 _Tokens,bool _Enable    )  {\r\n         _Owner= Projects[_ProjectID].Owner;\r\n         _Id= Projects[_ProjectID].Id;\r\n         _Tokens= Projects[_ProjectID].Tokens;\r\n         _Enable= Projects[_ProjectID].Enable;\r\n    }\r\n    function Project_ChangeOwner(uint256 _ProjectID, address _newOwner) public{\r\n        require(Projects[_ProjectID].Owner == msg.sender);\r\n        Projects[_ProjectID].Owner = _newOwner;\r\n    }\r\n    function Project_Enable(uint256 _ProjectID) public  returns(bool) {\r\n        require(Projects[_ProjectID].Owner == msg.sender);\r\n        Projects[_ProjectID].Enable = !Projects[_ProjectID].Enable;\r\n        return (Projects[_ProjectID].Enable);\r\n    }\r\n}\r\ncontract ONG_MembersFunctions is ONG_Base{\r\n    function Member_AssingTokensToProject(uint256 _tokens, uint256 _ProjectID) public{\r\n        require(Period ==2, \"no es el periodo correcto\");\r\n        require(Members[msg.sender].Tokens>=_tokens, \"no tiene suficientes tokens\");\r\n        require(Members[msg.sender].Enable, \"no es un sender valido\");\r\n        require(Projects[_ProjectID].Enable, \"no es un projecto valido\");\r\n        require(_ProjectID!=OwnerProject);\r\n        \r\n        Members[msg.sender].Tokens = Members[msg.sender].Tokens - _tokens;\r\n        Projects[_ProjectID].Tokens = Projects[_ProjectID].Tokens + _tokens;\r\n    }\r\n    function Members_info(address _member) public view returns(address _Owner,uint256 _Tokens,bool _Enable){\r\n        _Owner = Members[_member].Owner;\r\n        _Tokens = Members[_member].Tokens;\r\n        _Enable = Members[_member].Enable;\r\n}\r\n}\r\ncontract ONG_OwnerFunction is ONG_Base{\r\n    function AddMember(address _member, uint256 _tokens) IsOwner public{\r\n        require(Members[_member].Owner != msg.sender, \"ese address ya existe\");\r\n        Members[_member].Enable = true;\r\n        Members[_member].Owner = _member;\r\n        Members[_member].Tokens = _tokens;\r\n        membersAddresses.push(_member);\r\n    }\r\n    function AddTokensToMember(address _member, uint256 _tokens) IsOwner public{\r\n        require(Period ==1, \"no es el Periodo adecuado\");\r\n        require(Members[_member].Enable);\r\n        Members[_member].Tokens =Members[_member].Tokens + _tokens;\r\n    }\r\n    function EnableMember(address _member)  IsOwner public returns(bool){\r\n        Members[_member].Enable = !Members[_member].Enable;\r\n        return(Members[_member].Enable);\r\n    }\r\n    function AddProject(uint256 _id, address _ProjectOwner) IsOwner public{\r\n        require(Projects[_id].Id != _id);\r\n        Projects[_id].Id = _id;\r\n        Projects[_id].Owner = _ProjectOwner;\r\n        Projects[_id].Enable = true;\r\n    }\r\n    function ReassingTokens(uint256 _IdProject, uint256 _tokens) IsOwner public{\r\n        require(Period ==3, \"no es el periodo adecuado\");\r\n        require(Projects[OwnerProject].Tokens>= _tokens);\r\n        Projects[OwnerProject].Tokens = Projects[OwnerProject].Tokens - _tokens;\r\n        Projects[_IdProject].Tokens = Projects[_IdProject].Tokens + _tokens;\r\n    }\r\n}\r\ncontract ONG_OracleFunctions is ONG_Base{\r\n    function ChangePeriod() IsOracle public returns (uint256){\r\n        Period ++;\r\n        if (Period == 3 ){\r\n            for (uint256 i; i< membersAddresses.length;i++ ){\r\n                if(Members[membersAddresses[i]].Tokens>0){\r\n                    Projects[OwnerProject].Tokens = Projects[OwnerProject].Tokens + Members[membersAddresses[i]].Tokens;\r\n                    Members[membersAddresses[i]].Tokens= 0; \r\n                }\r\n            }\r\n        }\r\n        if( Period ==4){\r\n            Period = 1;\r\n        }\r\n        return Period;\r\n    }\r\n}\r\ncontract ONG is ONG_OracleFunctions, ONG_OwnerFunction, ONG_MembersFunctions, ONG_ProjectFunctions  {\r\n  constructor (address _Oracle) public{\r\n      Owner= msg.sender;\r\n      Oracle = _Oracle;\r\n      Projects[OwnerProject].Owner = Owner;\r\n      Projects[OwnerProject].Enable = true;\r\n      Projects[OwnerProject].Id = OwnerProject;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"ChangePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"AddTokensToMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"EnableMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ProjectID\",\"type\":\"uint256\"}],\"name\":\"Project_Enable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_ProjectID\",\"type\":\"uint256\"}],\"name\":\"Member_AssingTokensToProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ProjectID\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Project_RemoveToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"AddMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_IdProject\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"ReassingTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ProjectID\",\"type\":\"uint256\"}],\"name\":\"Project_Info\",\"outputs\":[{\"name\":\"_Owner\",\"type\":\"address\"},{\"name\":\"_Id\",\"type\":\"uint256\"},{\"name\":\"_Tokens\",\"type\":\"uint256\"},{\"name\":\"_Enable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"Members_info\",\"outputs\":[{\"name\":\"_Owner\",\"type\":\"address\"},{\"name\":\"_Tokens\",\"type\":\"uint256\"},{\"name\":\"_Enable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Oracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ProjectID\",\"type\":\"uint256\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"Project_ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_ProjectOwner\",\"type\":\"address\"}],\"name\":\"AddProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_Oracle\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"ONG","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000055160ed4e0c6f816a6e0c616fda149b331364873","Library":"","SwarmSource":"bzzr://3b81b599e6040317b56a09ba9d8332b6e7fd91c2188aa6846ead5c4a4bdea10b"}]}