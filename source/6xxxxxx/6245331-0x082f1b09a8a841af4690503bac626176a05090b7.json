{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n// File: contracts/Ownerable.sol\r\n\r\ncontract Ownerable {\r\n    /// @notice The address of the owner is the only address that can call\r\n    ///  a function with this modifier\r\n    modifier onlyOwner { require(msg.sender == owner); _; }\r\n\r\n    address public owner;\r\n\r\n    constructor() public { owner = msg.sender;}\r\n\r\n    /// @notice Changes the owner of the contract\r\n    /// @param _newOwner The new owner of the contract\r\n    function setOwner(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n// File: contracts/TokenController.sol\r\n\r\ncontract TokenController {\r\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\r\n    /// @param _owner The address that sent the ether to create tokens\r\n    /// @return True if the ether is accepted, false if it throws\r\n    function proxyPayment(address _owner) public payable returns(bool);\r\n\r\n    /// @notice Notifies the controller about a token transfer allowing the\r\n    ///  controller to react if desired\r\n    /// @param _from The origin of the transfer\r\n    /// @param _to The destination of the transfer\r\n    /// @param _amount The amount of the transfer\r\n    /// @return False if the controller does not authorize the transfer\r\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\r\n\r\n    /// @notice Notifies the controller about an approval allowing the\r\n    ///  controller to react if desired\r\n    /// @param _owner The address that calls `approve()`\r\n    /// @param _spender The spender in the `approve()` call\r\n    /// @param _amount The amount in the `approve()` call\r\n    /// @return False if the controller does not authorize the approval\r\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool);\r\n}\r\n\r\n// File: contracts/ATXICOToken.sol\r\n\r\ncontract ATXICOToken {\r\n    function atxBuy(address _from, uint256 _amount) public returns(bool);\r\n}\r\n\r\n// File: contracts/ATX.sol\r\n\r\ncontract ATX {\r\n    function blacklistAccount(address tokenOwner) public returns (bool);\r\n    function unBlacklistAccount(address tokenOwner) public returns (bool);\r\n    function enableTransfers(bool _transfersEnabled) public;\r\n    function changeController(address _newController) public;\r\n}\r\n\r\n// File: contracts/ATXController.sol\r\n\r\ncontract ATXController is TokenController, Ownerable {\r\n\r\n    address public atxContract;\r\n    mapping (address => bool) public icoTokens;\r\n\r\n    event Debug(address indexed _from, address indexed _to, uint256 indexed _amount, uint ord);\r\n\r\n    constructor (address _atxContract) public {\r\n        atxContract = _atxContract;\r\n    }\r\n\r\n    function addICOToken(address _icoToken) public onlyOwner {\r\n        icoTokens[_icoToken] = true;\r\n    }\r\n    function delICOToken(address _icoToken) public onlyOwner {\r\n        icoTokens[_icoToken] = false;\r\n    }\r\n\r\n    function proxyPayment(address _owner) public payable returns(bool) {\r\n        return false;\r\n    }\r\n\r\n    function onTransfer(address _from, address _to, uint256 _amount) public returns(bool) {\r\n        require(atxContract == msg.sender);\r\n        require(_to != 0x0);\r\n\r\n        // default\r\n        bool result = true;\r\n\r\n        if(icoTokens[_to] == true) {\r\n            result = ATXICOToken(_to).atxBuy(_from, _amount);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool) {\r\n        return true;\r\n    }\r\n\r\n    //\r\n    // for controlling ATX\r\n    function blacklist(address tokenOwner) public onlyOwner returns (bool) {\r\n        return ATX(atxContract).blacklistAccount(tokenOwner);\r\n    }\r\n\r\n    function unBlacklist(address tokenOwner) public onlyOwner returns (bool) {\r\n        return ATX(atxContract).unBlacklistAccount(tokenOwner);\r\n    }\r\n\r\n    function enableTransfers(bool _transfersEnabled) public onlyOwner {\r\n        ATX(atxContract).enableTransfers(_transfersEnabled);\r\n    }\r\n\r\n    function changeController(address _newController) public onlyOwner {\r\n        ATX(atxContract).changeController(_newController);\r\n    }\r\n\r\n    function changeATXTokenAddr(address _newTokenAddr) public onlyOwner {\r\n        atxContract = _newTokenAddr;\r\n    }\r\n\r\n    function ownerMethod() public onlyOwner returns(bool) {\r\n      return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenAddr\",\"type\":\"address\"}],\"name\":\"changeATXTokenAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoToken\",\"type\":\"address\"}],\"name\":\"delICOToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoToken\",\"type\":\"address\"}],\"name\":\"addICOToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atxContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerMethod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_atxContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ord\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"}]","ContractName":"ATXController","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000001a0f2ab46ec630f9fd638029027b552afa64b94c","Library":"","SwarmSource":"bzzr://8a170b17e973f6aa25c991b4eee7ca0ce8d0c7f487e7930aae294db783685ad3"}]}