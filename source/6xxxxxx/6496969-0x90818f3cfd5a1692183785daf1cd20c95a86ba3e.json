{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\npragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\r\n    // ERC Token Standard #223 Interface\r\n    // https://github.com/ethereum/EIPs/issues/223\r\n\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n\r\n    function transfer(address _to, uint _value, bytes _data) external returns (bool success);\r\n\r\n    // approveAndCall\r\n    function approveAndCall(address spender, uint tokens, bytes data) external returns (bool success);\r\n\r\n    // ERC Token Standard #20 Interface\r\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n\r\n\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n    // bulk operations\r\n    function transferBulk(address[] to, uint[] tokens) public;\r\n    function approveBulk(address[] spender, uint[] tokens) public;\r\n}\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\r\ncontract PluginInterface\r\n{\r\n    /// @dev simply a boolean to indicate this is the contract we expect to be\r\n    function isPluginInterface() public pure returns (bool);\r\n\r\n    function onRemove() public;\r\n\r\n    /// @dev Begins new feature.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    /// @param _seller - Old owner, if not the message sender\r\n    function run(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _seller\r\n    ) \r\n    public\r\n    payable;\r\n\r\n    /// @dev Begins new feature, approved and signed by COO.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    function runSigned(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _owner\r\n    )\r\n    external\r\n    payable;\r\n\r\n    function withdraw() public;\r\n}\r\n\r\n\r\ncontract CuteCoinInterface is ERC20Interface\r\n{\r\n    function mint(address target, uint256 mintedAmount) public;\r\n    function mintBulk(address[] target, uint256[] mintedAmount) external;\r\n    function burn(uint256 amount) external;\r\n}\r\n\r\n\r\n/// @dev Receives payments for payd features from players for Blockchain Cuties\r\n/// @author https://BlockChainArchitect.io\r\ncontract CuteCoinShop is Pausable\r\n{\r\n    CuteCoinInterface token;\r\n\r\n    event CuteCoinShopBuy(address sender, uint value, bytes extraData);\r\n\r\n    function setToken(CuteCoinInterface _token)\r\n        external\r\n        onlyOwner\r\n    {\r\n        token = _token;\r\n    }\r\n\r\n    function receiveApproval(address _sender, uint256 _value, address _tokenContract, bytes _extraData)\r\n        external\r\n        whenNotPaused\r\n    {\r\n        require(_tokenContract == address(token));\r\n        require(token.transferFrom(_sender, address(this), _value));\r\n        token.burn(_value);\r\n\r\n        emit CuteCoinShopBuy(_sender, _value, _extraData);\r\n    }\r\n\r\n    // @dev Transfers to _withdrawToAddress all tokens controlled by\r\n    // contract _tokenContract.\r\n    function withdrawTokenFromBalance(ERC20Interface _tokenContract, address _withdrawToAddress)\r\n        external\r\n        onlyOwner\r\n    {\r\n        uint256 balance = _tokenContract.balanceOf(address(this));\r\n        _tokenContract.transfer(_withdrawToAddress, balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_withdrawToAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokenFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"CuteCoinShopBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CuteCoinShop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ac393630ff289255f1b9cc72d40d9e1afad1f3a998510f2de952a688a59aad43"}]}