{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// File: contracts/MoonRaffleContractInterface.sol\r\n\r\ncontract MoonRaffleContractInterface {\r\n\r\n    function sendContractSeed() public payable;\r\n\r\n    function sendContractDeposit() public payable;\r\n\r\n    function hasEntry() public view returns (bool);\r\n\r\n    function isValidReferrer(address) public view returns (bool);\r\n\r\n    function play(address) external payable;\r\n\r\n    function claimPrize() external;\r\n\r\n    function claimReferralBonus() external;\r\n\r\n    function claimRefund() external;\r\n\r\n    function calculateNonce() external;\r\n\r\n    function calculateFinalRandomNumber(string, uint)  internal;\r\n\r\n    function calculateWinners() internal;\r\n\r\n    function calculatePrizes() internal;\r\n\r\n    function finishMoonRaffle(string, string, string, string) external;\r\n\r\n    function claimFeeAndDeposit() external;\r\n\r\n    function claimRollover() external;\r\n\r\n    function recoverUnclaimedBalance() external;\r\n\r\n    function retractContract() external;\r\n\r\n    function burnDeposit() internal;\r\n\r\n    function getRandomNumber() external view returns (bytes32);\r\n\r\n    function getTime() external view returns (uint256);\r\n\r\n    function getSeedAmount() external view returns (uint256);\r\n\r\n    function getDepositAmount() external view returns (uint256);\r\n\r\n    function getCurrentPrizeAmounts() external view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256);\r\n\r\n    function getWinners() external view returns (address, address, address);\r\n\r\n    function getFirstPrizeAddress() external view returns (address);\r\n\r\n    function getSecondPrizeAddress() external view returns (address);\r\n\r\n    function getThirdPrizeAddress() external view returns (address);\r\n\r\n    function getMyStatus() external view returns (uint256, bool, uint256, uint256);\r\n\r\n    function getCurrentPhase() external view returns (uint256, string);\r\n\r\n    function getAddresses() external view returns (address, address);\r\n\r\n    function getMoonRaffleEntryParameters() external view returns (uint256, uint256);\r\n\r\n    function getMoonRaffleTimes() external view returns (uint256, uint256, uint256, uint256, uint256, uint256);\r\n\r\n    function getMoonRaffleStatus() external view returns (uint256, uint256, uint256);\r\n\r\n    function getCurrentDefaultReferrer() external view returns (address);\r\n\r\n    function getStarReferrerDetails() external view returns (address, uint256);\r\n\r\n    function getBinaryNonce() external view returns (bool[256]);\r\n\r\n    function getMoonRaffleParamenters() external view returns (\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256,\r\n      uint256\r\n      );\r\n\r\n    function hasPlayerClaimedPrize() external view returns (bool);\r\n\r\n    function hasPlayerClaimedReferralBonus() external view returns (bool);\r\n\r\n    function getContractBalance() external view returns (uint256);\r\n\r\n    function isRetractable() external view returns (bool);\r\n\r\n}\r\n\r\n// File: contracts/MoonRaffleContractFactoryInterface.sol\r\n\r\ncontract MoonRaffleContractFactoryInterface {\r\n\r\n    function createMoonRaffleContract(\r\n        address _addressOne,\r\n        bytes32 _initialSecretHash1,\r\n        bytes32 _initialSecretHash2,\r\n        bytes32 _initialSecretHash3,\r\n        bytes32 _initialSecretHash4,\r\n        uint256[14] _moonRaffleParameters\r\n        )\r\n        public\r\n        payable\r\n        returns (address);\r\n\r\n}\r\n\r\n// File: contracts/MoonRaffleMain.sol\r\n\r\ncontract MoonRaffleMain {\r\n\r\n    address addressOne;\r\n    address moonRaffleFactoryAddress;\r\n\r\n    uint256 moonRaffleCounter = 0;    //Keeps track of how many raffles have been completed\r\n    string publicMessage = \"when moon? buy your ticket now!\";\r\n\r\n    // ECONOMIC SETTINGS\r\n    uint256 pricePerTicket = 1 finney;\r\n    uint256 maxTicketsPerTransaction = 300;\r\n    uint256 prizePoolPercentage = 75;\r\n    uint256 firstPrizePercentage = 55;\r\n    uint256 secondPrizePercentage = 15;\r\n    uint256 thirdPrizePercentage = 5;\r\n    uint256 contractFeePercentage = 5;\r\n    uint256 rolloverPercentage = 10;\r\n    uint256 referralPercentage = 10;\r\n    uint256 referralHurdle = 10;\r\n    uint256 referralFloorTimePercentage = 75;\r\n\r\n    // TIME SETTINGS\r\n    uint256 moonRaffleLiveSecs = 518400; // 6 DAYS default\r\n    uint256 winnerCalcSecs = 345600; // 4 DAYS default\r\n    uint256 claimSecs = 15552000; // 180 DAYS default\r\n\r\n    uint256 latestMoonRaffleCompleteTime = 0;\r\n    bool latestMoonRaffleSeeded = true;\r\n\r\n    // CURRENT LIVE ITERATION ADDRESS\r\n    address[] oldMoonRaffleAddresses;\r\n    address currentMoonRaffleAddress = 0;\r\n\r\n    mapping(address => address[]) winners;\r\n\r\n    // EVENTS\r\n    event logNewMoonRaffleFactorySet(address _moonRaffleFactory);\r\n    event logDonation(address _sender, uint256 _amount);\r\n    event logNewMoonRaffle(address _newMoonRaffle);\r\n    event logUpdatedPricePerTicket(uint256 _newPricePerTicket);\r\n    event logUpdatedMaxTicketsPerTransaction(uint256 _newMaxTicketsPerTransaction);\r\n    event logUpdatedPayoutEconomics(uint256 _newPrizePoolPercentage, uint256 _newFirstPrizePercentage, uint256 _newSecondPrizePercentage, uint256 _newThirdPrizePercentage, uint256 _newContractFeePercentage, uint256 _newRolloverPercentage, uint256 _newReferralPercentage, uint256 _newReferralHurdle);\r\n    event logUpdatedTimeParams(uint256 _newMoonRaffleLiveSecs, uint256 _newWinnerCalcSecs, uint256 _newClaimSecs, uint256 _referralFloorTimePercentage);\r\n    event logChangedAddressOne(address _newAddressOne);\r\n    event logAddedToCurrentMoonRaffle(uint256 _addedAmount);\r\n    event logChangedPublicMessage(string _newPublicMessage);\r\n\r\n    modifier onlyAddressOne() {\r\n        require(msg.sender == addressOne);\r\n        _;\r\n    }\r\n\r\n    modifier isNoLottoLive() {\r\n        require(now > latestMoonRaffleCompleteTime);\r\n        _;\r\n    }\r\n\r\n    // FALLBACK\r\n    function() public payable {\r\n        emit logDonation(msg.sender, msg.value);\r\n    }\r\n\r\n    constructor() public payable {\r\n        addressOne = msg.sender;\r\n    }\r\n\r\n    function newMoonRaffle(\r\n        bytes32 _initialSecretHash1,\r\n        bytes32 _initialSecretHash2,\r\n        bytes32 _initialSecretHash3,\r\n        bytes32 _initialSecretHash4\r\n    )\r\n    onlyAddressOne\r\n    isNoLottoLive\r\n    external\r\n    {\r\n        require(latestMoonRaffleCompleteTime == 0);\r\n\r\n       currentMoonRaffleAddress = MoonRaffleContractFactoryInterface(moonRaffleFactoryAddress).createMoonRaffleContract(\r\n            addressOne,\r\n            _initialSecretHash1,\r\n            _initialSecretHash2,\r\n            _initialSecretHash3,\r\n            _initialSecretHash4,\r\n            [\r\n                pricePerTicket,\r\n                maxTicketsPerTransaction,\r\n                prizePoolPercentage,\r\n                firstPrizePercentage,\r\n                secondPrizePercentage,\r\n                thirdPrizePercentage,\r\n                contractFeePercentage,\r\n                rolloverPercentage,\r\n                referralPercentage,\r\n                referralHurdle,\r\n                referralFloorTimePercentage,\r\n                moonRaffleLiveSecs,\r\n                winnerCalcSecs,\r\n                claimSecs\r\n            ]\r\n        );\r\n\r\n        latestMoonRaffleCompleteTime = now + moonRaffleLiveSecs;\r\n        latestMoonRaffleSeeded = false;\r\n        moonRaffleCounter += 1;\r\n        emit logNewMoonRaffle(currentMoonRaffleAddress);\r\n    }\r\n\r\n    function seedMoonRaffle(uint256 _seedAmount) onlyAddressOne external {\r\n        require(latestMoonRaffleCompleteTime != 0);\r\n        require(latestMoonRaffleSeeded == false);\r\n        require(_seedAmount <= address(this).balance);\r\n        latestMoonRaffleSeeded = true;\r\n        MoonRaffleContractInterface(currentMoonRaffleAddress).sendContractSeed.value(_seedAmount)();\r\n    }\r\n\r\n    function retractMoonRaffle() onlyAddressOne external {\r\n        require(latestMoonRaffleCompleteTime != 0);\r\n        require(MoonRaffleContractInterface(currentMoonRaffleAddress).isRetractable() == true);\r\n        if (address(currentMoonRaffleAddress).balance > 0) { MoonRaffleContractInterface(currentMoonRaffleAddress).retractContract();}\r\n        latestMoonRaffleCompleteTime = 0;\r\n        moonRaffleCounter -= 1;\r\n        latestMoonRaffleSeeded = true;\r\n        if (oldMoonRaffleAddresses.length > 0) {\r\n            currentMoonRaffleAddress = oldMoonRaffleAddresses[(oldMoonRaffleAddresses.length - 1)];\r\n        } else {\r\n            currentMoonRaffleAddress = 0;\r\n        }\r\n    }\r\n\r\n    function logFinishedInstance() onlyAddressOne public {\r\n        assert(now >= latestMoonRaffleCompleteTime);\r\n        assert(latestMoonRaffleCompleteTime > 0);\r\n        latestMoonRaffleCompleteTime = 0;\r\n        oldMoonRaffleAddresses.push(currentMoonRaffleAddress);\r\n        MoonRaffleContractInterface tempMoonRaffle = MoonRaffleContractInterface(currentMoonRaffleAddress);\r\n        winners[tempMoonRaffle.getFirstPrizeAddress()].push(currentMoonRaffleAddress);\r\n        winners[tempMoonRaffle.getSecondPrizeAddress()].push(currentMoonRaffleAddress);\r\n        winners[tempMoonRaffle.getThirdPrizeAddress()].push(currentMoonRaffleAddress);\r\n    }\r\n\r\n    function updatePricePerTicket(uint256 _newPricePerTicket) onlyAddressOne public {\r\n        require(_newPricePerTicket >= 1 finney);\r\n        require(_newPricePerTicket <= 1 ether);\r\n        pricePerTicket = _newPricePerTicket;\r\n        emit logUpdatedPricePerTicket(_newPricePerTicket);\r\n    }\r\n\r\n    function updateMaxTicketsPerTransaction(uint256 _newMaxTickets) onlyAddressOne public {\r\n        require(_newMaxTickets >= 10);\r\n        maxTicketsPerTransaction = _newMaxTickets;\r\n        emit logUpdatedMaxTicketsPerTransaction(_newMaxTickets);\r\n    }\r\n\r\n\r\n    function updatePayoutEconomics(\r\n        uint256 _newPrizePoolPercentage,\r\n        uint256 _newFirstPrizePercentage,\r\n        uint256 _newSecondPrizePercentage,\r\n        uint256 _newThirdPrizePercentage,\r\n        uint256 _newContractFeePercentage,\r\n        uint256 _newRolloverPercentage,\r\n        uint256 _newReferralPercentage,\r\n        uint256 _newReferralHurdle\r\n    )\r\n    onlyAddressOne\r\n    public\r\n    {\r\n        require(_newPrizePoolPercentage + _newContractFeePercentage + _newRolloverPercentage + _newReferralPercentage == 100);\r\n        require(_newPrizePoolPercentage == _newFirstPrizePercentage + _newSecondPrizePercentage + _newThirdPrizePercentage);\r\n        require(_newContractFeePercentage <= 10);\r\n        require(_newRolloverPercentage <= 20);\r\n        require(_newReferralPercentage <= 20);\r\n        require(_newReferralHurdle <= maxTicketsPerTransaction);\r\n\r\n        prizePoolPercentage = _newPrizePoolPercentage;\r\n        firstPrizePercentage = _newFirstPrizePercentage;\r\n        secondPrizePercentage = _newSecondPrizePercentage;\r\n        thirdPrizePercentage = _newThirdPrizePercentage;\r\n        contractFeePercentage = _newContractFeePercentage;\r\n        rolloverPercentage = _newRolloverPercentage;\r\n        referralPercentage = _newReferralPercentage;\r\n        referralHurdle = _newReferralHurdle;\r\n\r\n        emit logUpdatedPayoutEconomics(_newPrizePoolPercentage, _newFirstPrizePercentage, _newSecondPrizePercentage, _newThirdPrizePercentage, _newContractFeePercentage, _newRolloverPercentage, _newReferralPercentage, _newReferralHurdle);\r\n    }\r\n\r\n    function updateTimeParams(\r\n        uint256 _moonRaffleLiveSecs,\r\n        uint256 _winnerCalcSecs,\r\n        uint256 _claimSecs,\r\n        uint256 _referralFloorTimePercentage\r\n    )\r\n    onlyAddressOne\r\n    public\r\n    {\r\n        require(_moonRaffleLiveSecs >= 86400);\r\n        // Min 1 day\r\n        require(_moonRaffleLiveSecs <= 15552000);\r\n        // Max 180 days\r\n        require(_winnerCalcSecs >= 43200);\r\n        // Min 12 hour\r\n        require(_winnerCalcSecs <= 345600);\r\n        // Max 96 hours\r\n        require(_claimSecs >= 2592000);\r\n        // Min 30 days\r\n        require(_claimSecs <= 31536000);\r\n        // Max 365 days\r\n        require(_referralFloorTimePercentage >= 25);\r\n        // Min 25%\r\n        require(_referralFloorTimePercentage <= 90);\r\n        // Max 90%\r\n        moonRaffleLiveSecs = _moonRaffleLiveSecs;\r\n        winnerCalcSecs = _winnerCalcSecs;\r\n        claimSecs = _claimSecs;\r\n        referralFloorTimePercentage = _referralFloorTimePercentage;\r\n\r\n        emit logUpdatedTimeParams(_moonRaffleLiveSecs, _winnerCalcSecs, _claimSecs, _referralFloorTimePercentage);\r\n    }\r\n\r\n    function updatePublicMessage(string _newPublicMessage) onlyAddressOne public {\r\n        publicMessage = _newPublicMessage;\r\n        emit logChangedPublicMessage(_newPublicMessage);\r\n    }\r\n\r\n    // CHANGE ADMIN ADDRESSES\r\n    function updateAddressOne(address _newAddressOne) onlyAddressOne public {\r\n        addressOne = _newAddressOne;\r\n        emit logChangedAddressOne(_newAddressOne);\r\n    }\r\n\r\n    function addToCurrentMoonRaffle(uint256 _amountAdded) onlyAddressOne external {\r\n        require(now < latestMoonRaffleCompleteTime);\r\n        require(address(this).balance >= _amountAdded);\r\n        emit logAddedToCurrentMoonRaffle(_amountAdded);\r\n        currentMoonRaffleAddress.transfer(_amountAdded);\r\n    }\r\n\r\n    function updateMoonRaffleFactoryAddress(address _newMoonRaffleFactoryAddress) onlyAddressOne external {\r\n        moonRaffleFactoryAddress = _newMoonRaffleFactoryAddress;\r\n        emit logNewMoonRaffleFactorySet(_newMoonRaffleFactoryAddress);\r\n    }\r\n\r\n    function donate() external payable {\r\n        require(msg.value > 0);\r\n        emit logDonation(msg.sender, msg.value);\r\n    }\r\n\r\n    function getNextMoonRaffleParameters() external view returns (\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256,\r\n        uint256\r\n    ) {\r\n        return (\r\n            pricePerTicket,\r\n            maxTicketsPerTransaction,\r\n            prizePoolPercentage,\r\n            firstPrizePercentage,\r\n            secondPrizePercentage,\r\n            thirdPrizePercentage,\r\n            contractFeePercentage,\r\n            rolloverPercentage,\r\n            referralPercentage,\r\n            referralHurdle,\r\n            referralFloorTimePercentage,\r\n            moonRaffleLiveSecs,\r\n            winnerCalcSecs,\r\n            claimSecs\r\n        );\r\n    }\r\n\r\n    function getCurrentMoonRaffleAddress() external view returns (address) {\r\n        return currentMoonRaffleAddress;\r\n    }\r\n\r\n    function getMoonRaffleCounter() external view returns (uint256) {\r\n        return moonRaffleCounter;\r\n    }\r\n\r\n    function getLastMoonRaffleAddress() external view returns (address) {\r\n        return oldMoonRaffleAddresses[(oldMoonRaffleAddresses.length - 1)];\r\n    }\r\n\r\n    function getAllPreviousMoonRaffleAddresses() external view returns (address[]) {\r\n        return oldMoonRaffleAddresses;\r\n    }\r\n\r\n    function getMainAddresses() external view returns (address, address) {\r\n        return (addressOne, moonRaffleFactoryAddress);\r\n    }\r\n\r\n    function getLatestMoonRaffleCompleteTime() external view returns (uint256) {\r\n        return latestMoonRaffleCompleteTime;\r\n    }\r\n\r\n    function getPublicMessage() external view returns (string) {\r\n        return publicMessage;\r\n    }\r\n\r\n    function checkAddressForWins() external view returns (address[]) {\r\n        return winners[msg.sender];\r\n    }\r\n\r\n    function getContractBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getMainStatus() external view returns (string) {\r\n        if (latestMoonRaffleCompleteTime == 0) {return \"ready for new moonraffle\";}\r\n        if (now < latestMoonRaffleCompleteTime) {return \"current moonraffle still in progress\";}\r\n        return \"current moonraffle past complete time. check if it is complete and loggable\";\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"retractMoonRaffle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestMoonRaffleCompleteTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"logFinishedInstance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_moonRaffleLiveSecs\",\"type\":\"uint256\"},{\"name\":\"_winnerCalcSecs\",\"type\":\"uint256\"},{\"name\":\"_claimSecs\",\"type\":\"uint256\"},{\"name\":\"_referralFloorTimePercentage\",\"type\":\"uint256\"}],\"name\":\"updateTimeParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextMoonRaffleParameters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMainAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMoonRaffleFactoryAddress\",\"type\":\"address\"}],\"name\":\"updateMoonRaffleFactoryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMaxTickets\",\"type\":\"uint256\"}],\"name\":\"updateMaxTicketsPerTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPricePerTicket\",\"type\":\"uint256\"}],\"name\":\"updatePricePerTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_seedAmount\",\"type\":\"uint256\"}],\"name\":\"seedMoonRaffle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkAddressForWins\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMainStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPublicMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrizePoolPercentage\",\"type\":\"uint256\"},{\"name\":\"_newFirstPrizePercentage\",\"type\":\"uint256\"},{\"name\":\"_newSecondPrizePercentage\",\"type\":\"uint256\"},{\"name\":\"_newThirdPrizePercentage\",\"type\":\"uint256\"},{\"name\":\"_newContractFeePercentage\",\"type\":\"uint256\"},{\"name\":\"_newRolloverPercentage\",\"type\":\"uint256\"},{\"name\":\"_newReferralPercentage\",\"type\":\"uint256\"},{\"name\":\"_newReferralHurdle\",\"type\":\"uint256\"}],\"name\":\"updatePayoutEconomics\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllPreviousMoonRaffleAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddressOne\",\"type\":\"address\"}],\"name\":\"updateAddressOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPublicMessage\",\"type\":\"string\"}],\"name\":\"updatePublicMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_initialSecretHash1\",\"type\":\"bytes32\"},{\"name\":\"_initialSecretHash2\",\"type\":\"bytes32\"},{\"name\":\"_initialSecretHash3\",\"type\":\"bytes32\"},{\"name\":\"_initialSecretHash4\",\"type\":\"bytes32\"}],\"name\":\"newMoonRaffle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMoonRaffleCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentMoonRaffleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountAdded\",\"type\":\"uint256\"}],\"name\":\"addToCurrentMoonRaffle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastMoonRaffleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_moonRaffleFactory\",\"type\":\"address\"}],\"name\":\"logNewMoonRaffleFactorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"logDonation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newMoonRaffle\",\"type\":\"address\"}],\"name\":\"logNewMoonRaffle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newPricePerTicket\",\"type\":\"uint256\"}],\"name\":\"logUpdatedPricePerTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newMaxTicketsPerTransaction\",\"type\":\"uint256\"}],\"name\":\"logUpdatedMaxTicketsPerTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newPrizePoolPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newFirstPrizePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newSecondPrizePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newThirdPrizePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newContractFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newRolloverPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newReferralPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newReferralHurdle\",\"type\":\"uint256\"}],\"name\":\"logUpdatedPayoutEconomics\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newMoonRaffleLiveSecs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newWinnerCalcSecs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newClaimSecs\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_referralFloorTimePercentage\",\"type\":\"uint256\"}],\"name\":\"logUpdatedTimeParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newAddressOne\",\"type\":\"address\"}],\"name\":\"logChangedAddressOne\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addedAmount\",\"type\":\"uint256\"}],\"name\":\"logAddedToCurrentMoonRaffle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newPublicMessage\",\"type\":\"string\"}],\"name\":\"logChangedPublicMessage\",\"type\":\"event\"}]","ContractName":"MoonRaffleMain","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://78cfc37b8bc00fb5a2b49fdef635612bcbd4ef208cc5d3b892a8e708cfb934bc"}]}