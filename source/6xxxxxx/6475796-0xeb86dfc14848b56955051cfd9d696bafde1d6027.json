{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\n\r\ncontract Base\r\n{\r\n    uint8 constant HEROLEVEL_MIN = 1;\r\n    uint8 constant HEROLEVEL_MAX = 5;\r\n\r\n    uint8 constant LIMITCHIP_MINLEVEL = 3;\r\n    uint constant PARTWEIGHT_NORMAL = 100;\r\n    uint constant PARTWEIGHT_LIMIT = 40;\r\n\r\n    address creator;\r\n\r\n    constructor() public\r\n    {\r\n        creator = msg.sender;\r\n    }\r\n\r\n    modifier CreatorAble()\r\n    {\r\n        require(msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    function IsLimitPart(uint8 level, uint part) internal pure returns(bool)\r\n    {\r\n        if (level < LIMITCHIP_MINLEVEL) return false;\r\n        if (part < GetPartNum(level)) return false;\r\n        return true;\r\n    }\r\n\r\n    function GetPartWeight(uint8 level, uint part) internal pure returns(uint)\r\n    {\r\n        if (IsLimitPart(level, part)) return PARTWEIGHT_LIMIT;\r\n        return PARTWEIGHT_NORMAL;\r\n    }\r\n    \r\n    function GetPartNum(uint8 level) internal pure returns(uint)\r\n    {\r\n        if (level <= 2) return 3;\r\n        else if (level <= 4) return 4;\r\n        return 5;\r\n    }\r\n\r\n    function GetPartLimit(uint8 level, uint part) internal pure returns(uint8)\r\n    {\r\n        if (!IsLimitPart(level, part)) return 0;\r\n        if (level == 5) return 1;\r\n        if (level == 4) return 8;\r\n        return 15;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\ncontract BasicAuth is Base\r\n{\r\n\r\n    mapping(address => bool) auth_list;\r\n\r\n    modifier OwnerAble(address acc)\r\n    {\r\n        require(acc == tx.origin);\r\n        _;\r\n    }\r\n\r\n    modifier AuthAble()\r\n    {\r\n        require(auth_list[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    modifier ValidHandleAuth()\r\n    {\r\n        require(tx.origin==creator || msg.sender==creator);\r\n        _;\r\n    }\r\n   \r\n    function SetAuth(address target) external ValidHandleAuth\r\n    {\r\n        auth_list[target] = true;\r\n    }\r\n\r\n    function ClearAuth(address target) external ValidHandleAuth\r\n    {\r\n        delete auth_list[target];\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\ncontract StoreGift is BasicAuth\r\n{\r\n    struct Gift\r\n    {\r\n        string m_Key;\r\n        uint m_Expire;\r\n        uint32[] m_ItemIdxList;\r\n        uint[] m_ItemNumlist;\r\n    }\r\n\r\n    mapping(address => mapping(string => bool)) g_Exchange;\r\n    mapping(string => Gift) g_Gifts;\r\n\r\n    function HasGift(string key) public view returns(bool)\r\n    {\r\n        Gift storage obj = g_Gifts[key];\r\n        if (bytes(obj.m_Key).length == 0) return false;\r\n        if (obj.m_Expire!=0 && obj.m_Expire<now) return false;\r\n        return true;\r\n    }\r\n\r\n    function AddGift(string key, uint expire, uint32[] idxList, uint[] numList) external CreatorAble\r\n    {\r\n        require(!HasGift(key));\r\n        require(now<expire || expire==0);\r\n        g_Gifts[key] = Gift({\r\n            m_Key           : key,\r\n            m_Expire        : expire,\r\n            m_ItemIdxList   : idxList,\r\n            m_ItemNumlist   : numList\r\n        });\r\n    }\r\n\r\n    function DelGift(string key) external CreatorAble\r\n    {\r\n        delete g_Gifts[key];\r\n    }\r\n\r\n    function GetGiftInfo(string key) external view returns(uint, uint32[], uint[])\r\n    {\r\n        Gift storage obj = g_Gifts[key];\r\n        return (obj.m_Expire, obj.m_ItemIdxList, obj.m_ItemNumlist);\r\n    }\r\n\r\n    function Exchange(address acc, string key) external OwnerAble(acc) AuthAble\r\n    {\r\n        g_Exchange[acc][key] = true;\r\n    }\r\n\r\n    function IsExchanged(address acc, string key) external view returns(bool)\r\n    {\r\n        return g_Exchange[acc][key];\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"expire\",\"type\":\"uint256\"},{\"name\":\"idxList\",\"type\":\"uint32[]\"},{\"name\":\"numList\",\"type\":\"uint256[]\"}],\"name\":\"AddGift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"DelGift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"HasGift\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"GetGiftInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint32[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"acc\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"IsExchanged\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"acc\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"Exchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"SetAuth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ClearAuth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"StoreGift","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://776d5aca5dea03feaffd3cc6ca4b73d34a2cbc2f61416e437b02075f30abb3cb"}]}