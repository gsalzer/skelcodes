{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 安全的加减乘除\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns(uint);\r\n\r\n\tfunction balanceOf(address tokenOwner) public constant returns(uint balance);\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns(uint remaining);\r\n\r\n\tfunction transfer(address to, uint tokens) public returns(bool success);\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 管理员\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public {\r\n\t\trequire(msg.sender == newOwner);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 核心类\r\n// ----------------------------------------------------------------------------\r\ncontract BTYCToken is ERC20Interface, Owned {\r\n\tusing SafeMath\r\n\tfor uint;\r\n\r\n\tstring public symbol;\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;\r\n\r\n\tuint public sellPrice; //出售价格 1枚代币换多少以太 /1000\r\n\tuint public buyPrice; //购买价格 多少以太可购买1枚代币 /1000\r\n\tuint public sysPrice; //挖矿的衡量值\r\n\tuint public sysPer; //挖矿的增量百分比 /100\r\n\tuint public givecandyto; //奖励新人 \r\n\tuint public givecandyfrom; //奖励推荐人\r\n\tuint public candyper; //转账多少给奖励\r\n\tbool public actived;\r\n\r\n\tuint public sendPer; //转账分佣百分比\r\n\tuint public sendPer2; //转账分佣百分比\r\n\tuint public sendPer3; //转账分佣百分比\r\n\tuint public sendfrozen; //转账冻结百分比 \r\n\r\n\tuint public onceOuttime; //增量的时间 测试  \r\n\tuint public onceAddTime; //挖矿的时间 测试\r\n\r\n\tmapping(address => uint) balances;\r\n\tmapping(address => uint) used;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\t/* 冻结账户 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\r\n\t//释放 \r\n\tmapping(address => uint[]) public mycantime; //时间\r\n\tmapping(address => uint[]) public mycanmoney; //金额\r\n\t//上家地址\r\n\tmapping(address => address) public fromaddr;\r\n\t//管理员帐号\r\n\tmapping(address => bool) public admins;\r\n\t// 记录各个账户的增量时间\r\n\tmapping(address => uint) public cronaddOf;\r\n\r\n\t/* 通知 */\r\n\tevent FrozenFunds(address target, bool frozen);\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\r\n\t\tsymbol = \"BTYC\";\r\n\t\tname = \"BTYC Coin\";\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 86400000 ether;\r\n\r\n\t\tsellPrice = 0.000526 ether; //出售价格 1btyc can buy how much eth\r\n\t\tbuyPrice = 1128 ether; //购买价格 1eth can buy how much btyc\r\n\t\tsysPrice = 766 ether; //挖矿的衡量值\r\n\t\tsysPer = 225; //挖矿的增量百分比 /100\r\n\t\tcandyper = 1 ether;\r\n\t\tgivecandyfrom = 10 ether;\r\n\t\tgivecandyto = 40 ether;\r\n\t\tsendPer = 3;\r\n\t\tsendPer2 = 2;\r\n\t\tsendPer3 = 1;\r\n\t\tsendfrozen = 80;\r\n\t\tactived = true;\r\n\t\tonceOuttime = 1 days; //增量的时间 正式 \r\n\t\tonceAddTime = 10 days; //挖矿的时间 正式\r\n\r\n\t\t//onceOuttime = 30 seconds; //增量的时间 测试  \r\n\t\t//onceAddTime = 60 seconds; //挖矿的时间 测试\r\n\t\tbalances[owner] = _totalSupply;\r\n\t\temit Transfer(address(0), owner, _totalSupply);\r\n\r\n\t}\r\n\r\n\t/* 获取用户金额 */\r\n\tfunction balanceOf(address tokenOwner) public view returns(uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\t/*\r\n\t * 添加金额，为了统计用户的进出\r\n\t */\r\n\tfunction addmoney(address _addr, uint256 _money, uint _day) private {\r\n\t\tuint256 _days = _day * (1 days);\r\n\t\tuint256 _now = now - _days;\r\n\t\tmycanmoney[_addr].push(_money);\r\n\t\tmycantime[_addr].push(_now);\r\n\r\n\t\tif(balances[_addr] >= sysPrice && cronaddOf[_addr] < 1) {\r\n\t\t\tcronaddOf[_addr] = now + onceAddTime;\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t * 用户金额减少时的触发\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction reducemoney(address _addr, uint256 _money) private {\r\n\t\tused[_addr] += _money;\r\n\t\tif(balances[_addr] < sysPrice) {\r\n\t\t\tcronaddOf[_addr] = 0;\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t * 获取用户的挖矿时间\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getaddtime(address _addr) public view returns(uint) {\r\n\t\tif(cronaddOf[_addr] < 1) {\r\n\t\t\treturn(now + onceAddTime);\r\n\t\t}\r\n\t\treturn(cronaddOf[_addr]);\r\n\t}\r\n\t/*\r\n\t * 获取用户的可用金额\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getcanuse(address tokenOwner) public view returns(uint balance) {\r\n\t\tuint256 _now = now;\r\n\t\tuint256 _left = 0;\r\n\t\tif(tokenOwner == owner) {\r\n\t\t\treturn(balances[owner]);\r\n\t\t}\r\n\t\tfor(uint256 i = 0; i < mycantime[tokenOwner].length; i++) {\r\n\t\t\tuint256 stime = mycantime[tokenOwner][i];\r\n\t\t\tuint256 smoney = mycanmoney[tokenOwner][i];\r\n\t\t\tuint256 lefttimes = _now - stime;\r\n\t\t\tif(lefttimes >= onceOuttime) {\r\n\t\t\t\tuint256 leftpers = lefttimes / onceOuttime;\r\n\t\t\t\tif(leftpers > 100) {\r\n\t\t\t\t\tleftpers = 100;\r\n\t\t\t\t}\r\n\t\t\t\t_left = smoney * leftpers / 100 + _left;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_left = _left - used[tokenOwner];\r\n\t\tif(_left < 0) {\r\n\t\t\treturn(0);\r\n\t\t}\r\n\t\tif(_left > balances[tokenOwner]) {\r\n\t\t\treturn(balances[tokenOwner]);\r\n\t\t}\r\n\t\treturn(_left);\r\n\t}\r\n\r\n\t/*\r\n\t * 用户转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transfer(address to, uint tokens) public returns(bool success) {\r\n\t\trequire(!frozenAccount[msg.sender]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(actived == true);\r\n\t\tuint256 canuse = getcanuse(msg.sender);\r\n\t\trequire(canuse >= tokens);\r\n\t\t//\r\n\t\trequire(msg.sender != to);\r\n\t\t//如果用户没有上家\r\n\t\tif(fromaddr[to] == address(0)) {\r\n\t\t\t//指定上家地址\r\n\t\t\tfromaddr[to] = msg.sender;\r\n\t\t\t//如果转账金额大于糖果的标准值\r\n\t\t\tif(tokens >= candyper) {\r\n\t\t\t\tif(givecandyfrom > 0) {\r\n\t\t\t\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens).add(givecandyfrom);\r\n\t\t\t\t\t//balances[owner] = balances[owner].sub(givecandyfrom); //控制总额度,不空投 \r\n\t\t\t\t\treducemoney(msg.sender, tokens);\r\n\t\t\t\t\taddmoney(msg.sender, givecandyfrom, 0);\r\n\t\t\t\t}\r\n\t\t\t\tif(givecandyto > 0) {\r\n\t\t\t\t\ttokens += givecandyto;\r\n\t\t\t\t\t//balances[owner] = balances[owner].sub(givecandyto); //控制总额度,不空投\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\r\n\t\t\t\treducemoney(msg.sender, tokens);\r\n\t\t\t}\r\n\t\t\tbalances[to] = balances[to].add(tokens);\r\n\t\t\taddmoney(to, tokens, 0);\r\n\t\t\t//tokens = candyuser(msg.sender, to, tokens);\r\n\t\t} else {\r\n            //先减掉转账的\r\n\t\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\r\n\t\t\treducemoney(msg.sender, tokens);\r\n\t\t\t\r\n\t\t\tif(sendPer > 0 && sendPer <= 100) {\r\n\t\t\t\t//上家分润\r\n\t\t\t\tuint addfroms = tokens * sendPer / 100;\r\n\t\t\t\taddress topuser1 = fromaddr[to];\r\n\t\t\t\tbalances[topuser1] = balances[topuser1].add(addfroms);\r\n\t\t\t\taddmoney(topuser1, addfroms, 0);\r\n\t\t\t\t//balances[owner] = balances[owner].sub(addfroms); //控制总额度,空投\r\n\r\n\t\t\t\t//如果存在第二层\r\n\t\t\t\tif(sendPer2 > 0 && sendPer2 <= 100 && fromaddr[topuser1] != address(0)) {\r\n\t\t\t\t\tuint addfroms2 = tokens * sendPer2 / 100;\r\n\t\t\t\t\taddress topuser2 = fromaddr[topuser1];\r\n\t\t\t\t\tbalances[topuser2] = balances[topuser2].add(addfroms2);\r\n\t\t\t\t\taddmoney(topuser2, addfroms2, 0);\r\n\t\t\t\t\t//balances[owner] = balances[owner].sub(addfroms2); //控制总额度,空投\r\n\t\t\t\t\t//如果存在第三层\r\n\t\t\t\t\tif(sendPer3 > 0 && sendPer3 <= 100 && fromaddr[topuser2] != address(0)) {\r\n\t\t\t\t\t\tuint addfroms3 = tokens * sendPer3 / 100;\r\n\t\t\t\t\t\taddress topuser3 = fromaddr[topuser2];\r\n\t\t\t\t\t\tbalances[topuser3] = balances[topuser3].add(addfroms3);\r\n\t\t\t\t\t\taddmoney(topuser3, addfroms3, 0);\r\n\t\t\t\t\t\t//balances[owner] = balances[owner].sub(addfroms3); //控制总额度,空投\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//emit Transfer(owner, msg.sender, addfroms);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbalances[to] = balances[to].add(tokens);\r\n\t\t\tif(sendfrozen > 0 && sendfrozen <= 100) {\r\n\t\t\t\taddmoney(to, tokens, 100 - sendfrozen);\r\n\t\t\t} else {\r\n\t\t\t\taddmoney(to, tokens, 0);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\temit Transfer(msg.sender, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 获取真实值\r\n\t * @param {Object} uint\r\n\t */\r\n\tfunction getnum(uint num) public view returns(uint) {\r\n\t\treturn(num * 10 ** uint(decimals));\r\n\t}\r\n\t/*\r\n\t * 获取上家地址\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getfrom(address _addr) public view returns(address) {\r\n\t\treturn(fromaddr[_addr]);\r\n\t}\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 授权转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\tbalances[from] = balances[from].sub(tokens);\r\n\t\treducemoney(from, tokens);\r\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\taddmoney(to, tokens, 0);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取授权信息\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\t/*\r\n\t * 授权\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction approveAndCall(address spender, uint tokens, bytes data) public returns(bool success) {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// 冻结 or 解冻账户\r\n\tfunction freezeAccount(address target, bool freeze) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t/*\r\n\t * 设置管理员\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction admAccount(address target, bool freeze) onlyOwner public {\r\n\t\tadmins[target] = freeze;\r\n\t}\r\n\t/*\r\n\t * 系统设置\r\n\t * @param {Object} uint\r\n\t */\r\n\tfunction setPrices(uint newonceaddtime, uint newonceouttime, uint newBuyPrice, uint newSellPrice, uint systyPrice, uint sysPermit, uint sysgivefrom, uint sysgiveto, uint sysgiveper, uint syssendfrozen, uint syssendper1, uint syssendper2, uint syssendper3) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tonceAddTime = newonceaddtime;\r\n\t\tonceOuttime = newonceouttime;\r\n\t\tbuyPrice = newBuyPrice;\r\n\t\tsellPrice = newSellPrice;\r\n\t\tsysPrice = systyPrice;\r\n\t\tsysPer = sysPermit;\r\n\t\tgivecandyfrom = sysgivefrom;\r\n\t\tgivecandyto = sysgiveto;\r\n\t\tcandyper = sysgiveper;\r\n\t\tsendfrozen = syssendfrozen;\r\n\t\tsendPer = syssendper1;\r\n\t\tsendPer2 = syssendper2;\r\n\t\tsendPer3 = syssendper3;\r\n\t}\r\n\t/*\r\n\t * 获取系统设置\r\n\t */\r\n\tfunction getprice() public view returns(uint addtime, uint outtime, uint bprice, uint spice, uint sprice, uint sper, uint givefrom, uint giveto, uint giveper, uint sdfrozen, uint sdper1, uint sdper2, uint sdper3) {\r\n\t\taddtime = onceAddTime;\r\n\t\touttime = onceOuttime;\r\n\t\tbprice = buyPrice;\r\n\t\tspice = sellPrice;\r\n\t\tsprice = sysPrice;\r\n\t\tsper = sysPer;\r\n\t\tgivefrom = givecandyfrom;\r\n\t\tgiveto = givecandyto;\r\n\t\tgiveper = candyper;\r\n\t\tsdfrozen = sendfrozen;\r\n\t\tsdper1 = sendPer;\r\n\t\tsdper2 = sendPer2;\r\n\t\tsdper3 = sendPer3;\r\n\t}\r\n\t/*\r\n\t * 设置是否开启\r\n\t * @param {Object} bool\r\n\t */\r\n\tfunction setactive(bool tags) public onlyOwner {\r\n\t\tactived = tags;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取总发行\r\n\t */\r\n\tfunction totalSupply() public view returns(uint) {\r\n\t\treturn _totalSupply.sub(balances[address(0)]);\r\n\t}\r\n\t/*\r\n\t * 向指定账户拨发资金\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction mintToken(address target, uint256 mintedAmount) public {\r\n\t\trequire(!frozenAccount[target]);\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\trequire(actived == true);\r\n\r\n\t\tbalances[target] = balances[target].add(mintedAmount);\r\n\t\taddmoney(target, mintedAmount, 0);\r\n\t\t//emit Transfer(0, this, mintedAmount);\r\n\t\temit Transfer(owner, target, mintedAmount);\r\n\r\n\t}\r\n\t/*\r\n\t * 用户每隔10天挖矿一次\r\n\t */\r\n\tfunction mint() public {\r\n\t\trequire(!frozenAccount[msg.sender]);\r\n\t\trequire(actived == true);\r\n\t\trequire(cronaddOf[msg.sender] > 0);\r\n\t\trequire(now > cronaddOf[msg.sender]);\r\n\t\trequire(balances[msg.sender] >= sysPrice);\r\n\t\tuint256 mintAmount = balances[msg.sender] * sysPer / 10000;\r\n\t\tbalances[msg.sender] = balances[msg.sender].add(mintAmount);\r\n\t\t//balances[owner] = balances[owner].sub(mintAmount);\r\n\t\tcronaddOf[msg.sender] = now + onceAddTime;\r\n\t\temit Transfer(owner, msg.sender, mintAmount);\r\n\r\n\t}\r\n\t/*\r\n\t * 获取总账目\r\n\t */\r\n\tfunction getall() public view returns(uint256 money) {\r\n\t\tmoney = address(this).balance;\r\n\t}\r\n\t/*\r\n\t * 购买\r\n\t */\r\n\tfunction buy() public payable returns(uint256 amount) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[msg.sender]);\r\n\t\trequire(msg.value > 0);\r\n\r\n\t\tuint256 money = msg.value / (10 ** uint(decimals));\r\n\t\tamount = money * buyPrice;\r\n\t\trequire(balances[owner] > amount);\r\n\t\tbalances[msg.sender] = balances[msg.sender].add(amount);\r\n\t\t//balances[owner] = balances[owner].sub(amount);\r\n\r\n\t\taddmoney(msg.sender, amount, 0);\r\n\r\n\t\t//address(this).transfer(msg.value);\r\n\t\temit Transfer(owner, msg.sender, amount);\r\n\t\treturn(amount);\r\n\t}\r\n\t/*\r\n\t * 系统充值\r\n\t */\r\n\tfunction charge() public payable returns(bool) {\r\n\t\t//require(actived == true);\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction() payable public {\r\n\t\tbuy();\r\n\t}\r\n\t/*\r\n\t * 系统提现\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction withdraw(address _to) public onlyOwner {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[_to]);\r\n\t\t_to.transfer(address(this).balance);\r\n\t}\r\n\t/*\r\n\t * 出售\r\n\t * @param {Object} uint256\r\n\t */\r\n\tfunction sell(uint256 amount) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[msg.sender]);\r\n\t\trequire(amount > 0);\r\n\t\tuint256 canuse = getcanuse(msg.sender);\r\n\t\trequire(canuse >= amount);\r\n\t\trequire(balances[msg.sender] > amount);\r\n\t\tuint moneys = (amount * sellPrice) / 10 ** uint(decimals);\r\n\t\trequire(address(this).balance > moneys);\r\n\t\tmsg.sender.transfer(moneys);\r\n\t\treducemoney(msg.sender, amount);\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(amount);\r\n\t\t//balances[owner] = balances[owner].add(amount);\r\n\r\n\t\temit Transfer(owner, msg.sender, moneys);\r\n\t\treturn(true);\r\n\t}\r\n\t/*\r\n\t * 批量发币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction addBalances(address[] recipients, uint256[] moenys) public{\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].add(moenys[i]);\r\n\t\t\taddmoney(recipients[i], moenys[i], 0);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t}\r\n\t\tbalances[owner] = balances[owner].sub(sum);\r\n\t}\r\n\t/*\r\n\t * 批量减币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction subBalances(address[] recipients, uint256[] moenys) public{\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].sub(moenys[i]);\r\n\t\t\treducemoney(recipients[i], moenys[i]);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t}\r\n\t\tbalances[owner] = balances[owner].add(sum);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"givecandyfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getprice\",\"outputs\":[{\"name\":\"addtime\",\"type\":\"uint256\"},{\"name\":\"outtime\",\"type\":\"uint256\"},{\"name\":\"bprice\",\"type\":\"uint256\"},{\"name\":\"spice\",\"type\":\"uint256\"},{\"name\":\"sprice\",\"type\":\"uint256\"},{\"name\":\"sper\",\"type\":\"uint256\"},{\"name\":\"givefrom\",\"type\":\"uint256\"},{\"name\":\"giveto\",\"type\":\"uint256\"},{\"name\":\"giveper\",\"type\":\"uint256\"},{\"name\":\"sdfrozen\",\"type\":\"uint256\"},{\"name\":\"sdper1\",\"type\":\"uint256\"},{\"name\":\"sdper2\",\"type\":\"uint256\"},{\"name\":\"sdper3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceAddTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sendfrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sendPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getaddtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getcanuse\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sendPer2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"subBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newonceouttime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"systyPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"sysgivefrom\",\"type\":\"uint256\"},{\"name\":\"sysgiveto\",\"type\":\"uint256\"},{\"name\":\"sysgiveper\",\"type\":\"uint256\"},{\"name\":\"syssendfrozen\",\"type\":\"uint256\"},{\"name\":\"syssendper1\",\"type\":\"uint256\"},{\"name\":\"syssendper2\",\"type\":\"uint256\"},{\"name\":\"syssendper3\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycantime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getall\",\"outputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"givecandyto\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"cronaddOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"admAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"getnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"addBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sendPer3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycanmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tags\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceOuttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BTYCToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://15858595f06c089130d467710ab650d60d9d61b8f6dbd2139483db0a8516469c"}]}