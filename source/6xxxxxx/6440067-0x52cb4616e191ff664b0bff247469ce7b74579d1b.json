{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface IOracle {\r\n\r\n    /**\r\n    * @notice Returns address of oracle currency (0x0 for ETH)\r\n    */\r\n    function getCurrencyAddress() external view returns(address);\r\n\r\n    /**\r\n    * @notice Returns symbol of oracle currency (0x0 for ETH)\r\n    */\r\n    function getCurrencySymbol() external view returns(bytes32);\r\n\r\n    /**\r\n    * @notice Returns denomination of price\r\n    */\r\n    function getCurrencyDenominated() external view returns(bytes32);\r\n\r\n    /**\r\n    * @notice Returns price - should throw if not valid\r\n    */\r\n    function getPrice() external view returns(uint256);\r\n\r\n}\r\n\r\n/**\r\n * @title Interface to MakerDAO Medianizer contract\r\n */\r\n\r\ninterface IMedianizer {\r\n\r\n    function peek() constant external returns (bytes32, bool);\r\n\r\n    function read() constant external returns (bytes32);\r\n\r\n    function set(address wat) external;\r\n\r\n    function set(bytes12 pos, address wat) external;\r\n\r\n    function setMin(uint96 min_) external;\r\n\r\n    function setNext(bytes12 next_) external;\r\n\r\n    function unset(bytes12 pos) external;\r\n\r\n    function unset(address wat) external;\r\n\r\n    function poke() external;\r\n\r\n    function poke(bytes32) external;\r\n\r\n    function compute() constant external returns (bytes32, bool);\r\n\r\n    function void() external;\r\n\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract MakerDAOOracle is IOracle, Ownable {\r\n\r\n    address public medianizer;\r\n    address public currencyAddress;\r\n    bytes32 public currencySymbol;\r\n\r\n    bool public manualOverride;\r\n    uint256 public manualPrice;\r\n\r\n    event ChangeMedianizer(address _newMedianizer, address _oldMedianizer, uint256 _now);\r\n    event SetManualPrice(uint256 _oldPrice, uint256 _newPrice, uint256 _time);\r\n    event SetManualOverride(bool _override, uint256 _time);\r\n\r\n    /**\r\n      * @notice Creates a new Maker based oracle\r\n      * @param _medianizer Address of Maker medianizer\r\n      * @param _currencyAddress Address of currency (0x0 for ETH)\r\n      * @param _currencySymbol Symbol of currency\r\n      */\r\n    constructor (address _medianizer, address _currencyAddress, bytes32 _currencySymbol) public {\r\n        medianizer = _medianizer;\r\n        currencyAddress = _currencyAddress;\r\n        currencySymbol = _currencySymbol;\r\n    }\r\n\r\n    /**\r\n      * @notice Updates medianizer address\r\n      * @param _medianizer Address of Maker medianizer\r\n      */\r\n    function changeMedianier(address _medianizer) public onlyOwner {\r\n        require(_medianizer != address(0), \"0x not allowed\");\r\n        emit ChangeMedianizer(_medianizer, medianizer, now);\r\n        medianizer = _medianizer;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns address of oracle currency (0x0 for ETH)\r\n    */\r\n    function getCurrencyAddress() external view returns(address) {\r\n        return currencyAddress;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns symbol of oracle currency (0x0 for ETH)\r\n    */\r\n    function getCurrencySymbol() external view returns(bytes32) {\r\n        return currencySymbol;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns denomination of price\r\n    */\r\n    function getCurrencyDenominated() external view returns(bytes32) {\r\n        // All MakerDAO oracles are denominated in USD\r\n        return bytes32(\"USD\");\r\n    }\r\n\r\n    /**\r\n    * @notice Returns price - should throw if not valid\r\n    */\r\n    function getPrice() external view returns(uint256) {\r\n        if (manualOverride) {\r\n            return manualPrice;\r\n        }\r\n        (bytes32 price, bool valid) = IMedianizer(medianizer).peek();\r\n        require(valid, \"MakerDAO Oracle returning invalid value\");\r\n        return uint256(price);\r\n    }\r\n\r\n    /**\r\n      * @notice Set a manual price. NA - this will only be used if manualOverride == true\r\n      * @param _price Price to set\r\n      */\r\n    function setManualPrice(uint256 _price) public onlyOwner {\r\n        emit SetManualPrice(manualPrice, _price, now);\r\n        manualPrice = _price;\r\n    }\r\n\r\n    /**\r\n      * @notice Determine whether manual price is used or not\r\n      * @param _override Whether to use the manual override price or not\r\n      */\r\n    function setManualOverride(bool _override) public onlyOwner {\r\n        manualOverride = _override;\r\n        emit SetManualOverride(_override, now);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"medianizer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currencyAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_override\",\"type\":\"bool\"}],\"name\":\"setManualOverride\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrencySymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currencySymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manualPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manualOverride\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrencyAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrencyDenominated\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setManualPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_medianizer\",\"type\":\"address\"}],\"name\":\"changeMedianier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_medianizer\",\"type\":\"address\"},{\"name\":\"_currencyAddress\",\"type\":\"address\"},{\"name\":\"_currencySymbol\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newMedianizer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_oldMedianizer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_now\",\"type\":\"uint256\"}],\"name\":\"ChangeMedianizer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"SetManualPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_override\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"SetManualOverride\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MakerDAOOracle","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006adadda09ea70f82cf6bbc4c890fd040f6fb3d4b0000000000000000000000009992ec3cf6a55b00978cddf2b27bc6882d88d1ec504f4c5900000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://6e350f4f10eb5fb65f85abb41168c66c3ed5dea6ab6ecf8d70f6b7e19bd0f611"}]}