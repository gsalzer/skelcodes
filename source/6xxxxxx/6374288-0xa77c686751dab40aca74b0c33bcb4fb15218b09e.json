{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20Basic \r\n{\r\n    uint256 public unitsOneEthCanBuy = 9500;\r\n    address public fundsWallet = msg.sender;\r\n    mapping(address => uint256) public balances;\r\n    uint256 public totalSupply = balances[msg.sender] = 100000000;\r\n    uint256 initialSupply = 100000000;\r\n    function balanceOf(address who) constant public returns (uint256);\r\n    function transfer(address  to, uint256 value) public returns (bool);\r\n    function customtransfer(address _to, uint _value) public returns (bool);\r\n    function allowtransferaddress(address _to) public returns (bool);\r\n    event    Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract Ownable \r\n{\r\n  address public owner;\r\n  address public customallow;\r\n   \r\n  function Ownable() public \r\n  {\r\n    owner = msg.sender;\r\n  }\r\n\r\n   \r\n  modifier onlyOwner() \r\n  {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n    modifier onlyOwner1() \r\n    {\r\n        require(msg.sender == customallow);\r\n        _;\r\n    }\r\n\r\n  \r\n  function transferOwnership(address newOwner) public onlyOwner \r\n  {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n  \r\n}\r\n\r\ninterface tokenRecipient \r\n{ \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; \r\n}\r\n\r\ncontract Pausable is Ownable \r\n{\r\n  event Pause();\r\n  event Unpause();\r\n  bool public paused = false;\r\n\r\n  modifier whenNotPaused() \r\n  {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused \r\n  {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() onlyOwner whenNotPaused public returns (bool) \r\n  {\r\n    paused = true;\r\n    Pause();\r\n    return true;\r\n  }\r\n\r\n \r\n  function unpause() onlyOwner whenPaused public returns (bool) \r\n  {\r\n    paused = false;\r\n    Unpause();\r\n    return true;\r\n  }\r\n  \r\n}\r\n\r\ncontract ERC20 is ERC20Basic \r\n{\r\n  function allowance(address owner, address spender) constant public returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath \r\n{\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) \r\n  {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) \r\n  {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) \r\n  {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) \r\n  {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BasicToken is ERC20Basic \r\n{\r\n  using SafeMath for uint256;\r\n\r\n     function _transfer(address _from, address _to, uint _value) internal \r\n     {\r\n        require(_to != 0x0);\r\n        \r\n        require(balances[_from] >= _value);\r\n        \r\n        require(balances[_to] + _value > balances[_to]);\r\n        \r\n        uint previousBalances = balances[_from] + balances[_to];\r\n        \r\n        balances[_from] -= _value;\r\n        \r\n        balances[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n        \r\n        assert(balances[_from] + balances[_to] == previousBalances);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool) \r\n    {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n  \r\n    function customtransfer(address _to, uint256 _value) returns (bool) \r\n    {\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n  \r\n  \r\n  function balanceOf(address _owner) constant returns (uint256 balance) \r\n  {\r\n    return balances[_owner];\r\n  }\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken \r\n{\r\n\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n   \r\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool) \r\n  {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n\r\n  function approve(address _spender, uint256 _value) returns (bool) \r\n  {\r\n\r\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n  \r\n     \r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) \r\n    {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) \r\n        {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n        \r\n\r\n\r\n   \r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining)\r\n  {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\ncontract PausableToken is StandardToken, Pausable \r\n{\r\n\r\n  function transfer(address _to, uint _value) whenNotPaused returns (bool) \r\n  {\r\n    return super.transfer(_to, _value);\r\n  }\r\n  \r\n    function allowtransferaddress(address _to) onlyOwner returns (bool) \r\n    {\r\n        customallow = _to;\r\n    }\r\n    \r\n    function customtransfer(address _to, uint _value) whenPaused onlyOwner1 returns (bool) \r\n    {\r\n        if(msg.sender == customallow)\r\n        { return super.customtransfer(_to, _value); }\r\n        else \r\n        { return false; }\r\n    }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) whenNotPaused returns (bool) \r\n  {\r\n    return super.transferFrom(_from, _to, _value);\r\n  }\r\n}\r\n\r\ncontract BurnableToken is StandardToken \r\n{\r\n\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n\r\n    function burn(uint256 _value) public \r\n    {\r\n        require(_value > 0);\r\n\r\n        address burner = msg.sender;\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        Burn(msg.sender, _value);\r\n    }\r\n}\r\n\r\ncontract MintableToken is StandardToken, Ownable \r\n{\r\n  event Mint(address indexed to, uint256 amount);\r\n  event MintFinished();\r\n  bool public mintingFinished = false;\r\n\r\n  modifier canMint() \r\n  {\r\n    require(!mintingFinished);\r\n    _;\r\n  }\r\n\r\n   \r\n  function mint(address _to, uint256 _amount) onlyOwner canMint returns (bool) \r\n  {\r\n    totalSupply = totalSupply.add(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    Mint(_to, _amount);\r\n    return true;\r\n  }\r\n\r\n  \r\n  function finishMinting() onlyOwner returns (bool) \r\n  {\r\n    mintingFinished = true;\r\n    MintFinished();\r\n    return true;\r\n  }\r\n}\r\n\r\ncontract NewTokenBitCoinAir is BurnableToken, PausableToken, MintableToken \r\n{\r\n\r\n\r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;\r\n    mapping (address => bool) public frozenAccount;\r\n    string  public constant symbol = \"BABT\";\r\n    string public constant name = \"Bitcoin Air Bounty Token\";\r\n    uint8 public constant decimals = 0;\r\n    event FrozenFunds(address target, bool frozen);\r\n\r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public \r\n    {\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n    }\r\n\r\n    function freezeAccount(address target, bool freeze) onlyOwner public \r\n    {\r\n        frozenAccount[target] = freeze;\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _value) internal \r\n    {\r\n        require (_to != 0x0);\r\n        require (balances[_from] >= _value);\r\n        require (balances[_to] + _value > balances[_to]);\r\n        require(!frozenAccount[_from]);\r\n        require(!frozenAccount[_to]);\r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n    }\r\n    \r\n    function buy() payable public \r\n    {\r\n        uint amount = msg.value / buyPrice;\r\n        _transfer(this, msg.sender, amount);\r\n    }\r\n    \r\n    function sell(uint256 amount) public \r\n    {\r\n        require(this.balance >= amount * sellPrice);\r\n        _transfer(msg.sender, this, amount);\r\n        msg.sender.transfer(amount * sellPrice);\r\n    }\r\n    \r\n    function burn(uint256 _value) whenNotPaused public \r\n    {\r\n        super.burn(_value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"customallow\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowtransferaddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitsOneEthCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"customtransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"NewTokenBitCoinAir","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b90a9e48ffb21a2a0355fda1bc2e097e4dff49cd2f955b8a1f503b3dd9d00f7e"}]}