{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/* ONUP TOKEN AFFILIATE PROJECT THE FIRST EDITION\r\n   CREATED 2018-10-31 BY DAO DRIVER ETHEREUM\r\n   ALL PROJECT DETAILS AT https://onup.online */\r\n\r\nlibrary SafeMath{\r\n    function mul(uint256 a, uint256 b)internal pure returns(uint256){if(a==0){return 0;}uint256 c=a*b;assert(c/a==b);return c;}\r\n    function div(uint256 a, uint256 b)internal pure returns(uint256){uint256 c=a/b;return c;}\r\n    function sub(uint256 a, uint256 b)internal pure returns(uint256){assert(b<=a);return a-b;}\r\n    function add(uint256 a, uint256 b)internal pure returns(uint256){uint256 c=a+b;assert(c>=a);return c;}}\r\ncontract ERC20{uint256 internal Bank=0;string public constant name=\"OnUp TOKEN\";string public constant symbol=\"OnUp\";\r\n    uint8  public constant decimals=6; uint256 public price=700000000; uint256 public totalSupply;\r\n    event Approval(address indexed owner,address indexed spender,uint value);\r\n    event Transfer(address indexed from,address indexed to,uint value);\r\n    mapping(address=>mapping(address=>uint256))public allowance; mapping(address=>uint256)public balanceOf;\r\n    function balanceOf(address who)public constant returns(uint){return balanceOf[who];}\r\n    function approve(address _spender,uint _value)public{allowance[msg.sender][_spender]=_value; emit Approval(msg.sender,_spender,_value);}\r\n    function allowance(address _owner,address _spender) public constant returns (uint remaining){return allowance[_owner][_spender];}}\r\ncontract ALFA is ERC20{using SafeMath for uint256;\r\n    modifier onlyPayloadSize(uint size){require(msg.data.length >= size + 4); _;}\r\n    address  ref1=0x0000000000000000000000000000000000000000;\r\n    address  ref2=0x0000000000000000000000000000000000000000;\r\n    address  ref3=0x0000000000000000000000000000000000000000;\r\n    address  ref4=0x0000000000000000000000000000000000000000;\r\n    address  ref5=0x0000000000000000000000000000000000000000;\r\n    address public owner;\r\n    address internal constant insdr=0xaB85Cb1087ce716E11dC37c69EaaBc09d674575d;// FEEDER \r\n    address internal constant advrt=0x28fF20D2d413A346F123198385CCf16E15295351;// ADVERTISE\r\n    address internal constant spcnv=0x516e0deBB3dB8C2c087786CcF7653fa0991784b3;// AIRDROPS\r\n    mapping (address => address) public referrerOf;\r\n    mapping (address => uint256) public prevOf;\r\n    mapping (address => uint256) public summOf;\r\n    constructor()public payable{owner=msg.sender;prevOf[advrt]=6;prevOf[owner]=6;}\r\n    function()payable public{\r\n        require(isContract(msg.sender)==false);\r\n        require(msg.value >= 10000000000000000);\r\n        require(msg.value <= 30000000000000000000);\r\n        if( msg.sender!=insdr ){\r\n            ref1=0x0000000000000000000000000000000000000000; \r\n            ref2=0x0000000000000000000000000000000000000000;\r\n            ref3=0x0000000000000000000000000000000000000000;\r\n            ref4=0x0000000000000000000000000000000000000000;\r\n            ref5=0x0000000000000000000000000000000000000000;\r\n            if(msg.sender!= advrt && msg.sender!=owner){CheckPrivilege();}else{mintTokens();}\r\n        }else{Bank+=(msg.value.div(100)).mul(90);price=Bank.div(totalSupply);}}\r\n    function CheckPrivilege()internal{\r\n        if(msg.value>=25000000000000000000 && prevOf[msg.sender]<6){prevOf[msg.sender]=6;}\r\n        if(msg.value>=20000000000000000000 && prevOf[msg.sender]<5){prevOf[msg.sender]=5;}\r\n        if(msg.value>=15000000000000000000 && prevOf[msg.sender]<4){prevOf[msg.sender]=4;}\r\n        if(msg.value>=10000000000000000000 && prevOf[msg.sender]<3){prevOf[msg.sender]=3;}\r\n        if(msg.value>= 5000000000000000000 && prevOf[msg.sender]<2){prevOf[msg.sender]=2;} \r\n        if(msg.value>=  100000000000000000 && prevOf[msg.sender]<1){prevOf[msg.sender]=1;}\r\n        if(summOf[msg.sender]>=250000000000000000000 && prevOf[msg.sender]<6){prevOf[msg.sender]=6;}\r\n\t\tif(summOf[msg.sender]>=200000000000000000000 && prevOf[msg.sender]<5){prevOf[msg.sender]=5;}\r\n\t\tif(summOf[msg.sender]>=150000000000000000000 && prevOf[msg.sender]<4){prevOf[msg.sender]=4;}\r\n\t\tif(summOf[msg.sender]>=100000000000000000000 && prevOf[msg.sender]<3){prevOf[msg.sender]=3;}\r\n\t\tif(summOf[msg.sender]>= 50000000000000000000 && prevOf[msg.sender]<2){prevOf[msg.sender]=2;}\r\n\t\tref1=referrerOf[msg.sender];if(ref1==0x0000000000000000000000000000000000000000){\r\n\t\tref1=bytesToAddress(msg.data);require(isContract(ref1)==false);require(balanceOf[ref1]>0);require(ref1!=spcnv);\r\n\t\trequire(ref1!=insdr);referrerOf[msg.sender]=ref1;}mintTokens();}\r\n    function mintTokens()internal{\r\n        uint256 tokens=msg.value.div((price*100).div(70));\r\n        require(tokens>0);require(balanceOf[msg.sender]+tokens>balanceOf[msg.sender]);\r\n        uint256 perc=msg.value.div(100);uint256 sif=perc.mul(10);\r\n        uint256 percair=0;uint256 bonus1=0;uint256 bonus2=0;uint256 bonus3=0;\r\n        uint256 bonus4=0;uint256 bonus5=0;uint256 minus=10;uint256 airdrop=0;\r\n        if(msg.sender!=advrt && msg.sender!=owner && msg.sender!=spcnv){\r\n        if(ref1!=0x0000000000000000000000000000000000000000){summOf[ref1]+=msg.value;\r\n        if(summOf[ref1]>=250000000000000000000 && prevOf[ref1]<6){prevOf[ref1]=6;}\r\n\t\tif(summOf[ref1]>=200000000000000000000 && prevOf[ref1]<5){prevOf[ref1]=5;}\r\n\t\tif(summOf[ref1]>=150000000000000000000 && prevOf[ref1]<4){prevOf[ref1]=4;}\r\n\t\tif(summOf[ref1]>=100000000000000000000 && prevOf[ref1]<3){prevOf[ref1]=3;}\r\n\t\tif(summOf[ref1]>= 50000000000000000000 && prevOf[ref1]<2){prevOf[ref1]=2;} \r\n        if(prevOf[ref1]>1){sif-=perc;bonus1=perc.mul(2);minus-=2;} \r\n        else if(prevOf[ref1]>0){bonus1=perc;minus-=1;}}\r\n        if(ref2!=0x0000000000000000000000000000000000000000){if(prevOf[ref2]>2){sif-=perc.mul(2);bonus2=perc.mul(2);minus-=2;}\r\n        else if(prevOf[ref2]>0){sif-=perc;bonus2=perc;minus-=1;}}\r\n        if(ref3!=0x0000000000000000000000000000000000000000){if(prevOf[ref3]>3){sif-=perc.mul(2);bonus3=perc.mul(2);minus-=2;}\r\n        else if(prevOf[ref3]>0){sif-=perc;bonus3=perc;minus-=1;}}\r\n        if(ref4!=0x0000000000000000000000000000000000000000){if(prevOf[ref4]>4){sif-=perc.mul(2);bonus4=perc.mul(2);minus-=2;}\r\n        else if(prevOf[ref4]>0){sif-=perc;bonus4=perc;minus-=1;}}\r\n        if(ref5!=0x0000000000000000000000000000000000000000){if(prevOf[ref5]>5){sif-=perc.mul(2);bonus5=perc.mul(2);minus-=2;}\r\n        else if(prevOf[ref5]>0){sif-=perc;bonus5=perc;minus-=1;}}}\r\n        if(sif>0){airdrop=sif.div((price*100).div(70));\r\n            require(airdrop>0);percair=sif.div(100);\r\n            balanceOf[spcnv]+=airdrop;\r\n            emit Transfer(this,spcnv,airdrop);}\r\n        Bank+=(perc + percair).mul(85-minus);\r\n        totalSupply+=(tokens+airdrop);\r\n        price=Bank.div(totalSupply);\r\n        balanceOf[msg.sender]+=tokens;\r\n        emit Transfer(this,msg.sender,tokens);\r\n        tokens=0;airdrop=0;\r\n        owner.transfer(perc.mul(5));\r\n        advrt.transfer(perc.mul(5));\r\n        if(bonus1>0){ref1.transfer(bonus1);}\r\n        if(bonus2>0){ref2.transfer(bonus2);}\r\n        if(bonus3>0){ref3.transfer(bonus3);}\r\n        if(bonus4>0){ref4.transfer(bonus4);}\r\n        if(bonus5>0){ref5.transfer(bonus5);}}\r\n    function transfer(address _to,uint _value)\r\n      public onlyPayloadSize(2*32)returns(bool success){\r\n        require(balanceOf[msg.sender]>=_value);\r\n        if(_to!=address(this)){\r\n            if(msg.sender==spcnv){require(_value<20000001);}\r\n            require(balanceOf[_to]+_value>=balanceOf[_to]);\r\n            balanceOf[msg.sender] -=_value;\r\n            balanceOf[_to]+=_value;\r\n            emit Transfer(msg.sender,_to,_value);\r\n        }else{require(msg.sender!=spcnv);\r\n        balanceOf[msg.sender]-=_value;uint256 change=_value.mul(price);\r\n        require(address(this).balance>=change);\r\n        if(totalSupply>_value){\r\n            uint256 plus=(address(this).balance-Bank).div(totalSupply);\r\n            Bank-=change;totalSupply-=_value;Bank+=(plus.mul(_value));\r\n            price=Bank.div(totalSupply);\r\n            emit Transfer(msg.sender,_to,_value);}\r\n        if(totalSupply==_value){\r\n            price=address(this).balance.div(totalSupply);\r\n            price=(price.mul(101)).div(100);totalSupply=0;Bank=0;\r\n            emit Transfer(msg.sender,_to,_value);\r\n            owner.transfer(address(this).balance-change);}\r\n        msg.sender.transfer(change);}return true;}\r\n    function transferFrom(address _from,address _to,uint _value)\r\n    public onlyPayloadSize(3*32)returns(bool success){\r\n        require(balanceOf[_from]>=_value);require(allowance[_from][msg.sender]>=_value);\r\n        if(_to!=address(this)){\r\n            if(msg.sender==spcnv){require(_value<20000001);}\r\n            require(balanceOf[_to]+_value>=balanceOf[_to]);\r\n            balanceOf[_from]-=_value;balanceOf[_to]+=_value;\r\n            allowance[_from][msg.sender]-=_value;\r\n            emit Transfer(_from,_to,_value);\r\n        }else{require(_from!=spcnv);\r\n        balanceOf[_from]-=_value;uint256 change=_value.mul(price);\r\n        require(address(this).balance>=change);\r\n        if(totalSupply>_value){\r\n            uint256 plus=(address(this).balance-Bank).div(totalSupply);\r\n            Bank-=change;\r\n            totalSupply-=_value;\r\n            Bank+=(plus.mul(_value));\r\n            price=Bank.div(totalSupply);\r\n            emit Transfer(_from,_to,_value);\r\n            allowance[_from][msg.sender]-=_value;}\r\n        if(totalSupply==_value){\r\n            price=address(this).balance.div(totalSupply);\r\n            price=(price.mul(101)).div(100);totalSupply=0;Bank=0;\r\n            emit Transfer(_from,_to,_value);allowance[_from][msg.sender]-=_value;\r\n            owner.transfer(address(this).balance-change);}\r\n            _from.transfer(change);}return true;}\r\n    function bytesToAddress(bytes source)internal pure returns(address addr){assembly{addr:=mload(add(source,0x14))}return addr;}\r\n    function isContract(address addr)internal view returns(bool){uint size;assembly{size:=extcodesize(addr)}return size>0;}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"summOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"prevOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"ALFA","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8fca10f1ab7b35081c1e44fd8ec3775e2d9bca7ee6bf827f0763a7a44aec5952"}]}