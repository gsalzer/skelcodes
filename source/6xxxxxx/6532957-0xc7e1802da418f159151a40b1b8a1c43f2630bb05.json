{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\n\n/// @title Endpoint Registry\n/// @notice This contract is a registry which maps an Ethereum address to its\n/// endpoint. The Raiden node registers its ethereum address in this registry.\ncontract EndpointRegistry {\n    string constant public contract_version = \"0.4.0\";\n\n    event AddressRegistered(address indexed eth_address, string endpoint);\n    mapping (address => string) private address_to_endpoint;\n\n    modifier noEmptyString(string str) {\n        require(equals(str, \"\") != true);\n        _;\n    }\n\n    /// @notice Registers the Ethereum address to the given endpoint.\n    /// @param endpoint String in the format \"127.0.0.1:38647\".\n    function registerEndpoint(string endpoint)\n        public\n        noEmptyString(endpoint)\n    {\n        string storage old_endpoint = address_to_endpoint[msg.sender];\n\n        // Compare if the new endpoint matches the old one, if it does just\n        // return\n        if (equals(old_endpoint, endpoint)) {\n            return;\n        }\n\n        // Update the storage with the new endpoint value\n        address_to_endpoint[msg.sender] = endpoint;\n        emit AddressRegistered(msg.sender, endpoint);\n    }\n\n    /// @notice Finds the endpoint if given a registered Ethereum address.\n    /// @param eth_address A 20 byte Ethereum address.\n    /// @return endpoint which the current Ethereum address is using.\n    function findEndpointByAddress(address eth_address)\n        public\n        view\n        returns (string endpoint)\n    {\n        return address_to_endpoint[eth_address];\n    }\n\n    /// @notice Checks if two strings are equal or not.\n    /// @param a First string.\n    /// @param b Second string.\n    /// @return result True if `a` and `b` are equal, false otherwise.\n    function equals(string a, string b) internal pure returns (bool result)\n    {\n        if (keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b))) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"eth_address\",\"type\":\"address\"}],\"name\":\"findEndpointByAddress\",\"outputs\":[{\"name\":\"endpoint\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"endpoint\",\"type\":\"string\"}],\"name\":\"registerEndpoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contract_version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"eth_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"endpoint\",\"type\":\"string\"}],\"name\":\"AddressRegistered\",\"type\":\"event\"}]","ContractName":"EndpointRegistry","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2e51600359afb37e313d2e4e164e3b30fa212402b886de76edeb837154e15acc"}]}