{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n}\r\n\r\ncontract SafeMath {\r\n    \r\n    uint256 constant public MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    function safeAdd(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        require(x <= MAX_UINT256 - y);\r\n        return x + y;\r\n    }\r\n\r\n    function safeSub(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        require(x >= y);\r\n        return x - y;\r\n    }\r\n\r\n    function safeMul(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (y == 0) {\r\n            return 0;\r\n        }\r\n        require(x <= (MAX_UINT256 / y));\r\n        return x * y;\r\n    }\r\n}\r\n\r\ninterface MintableTokenInterface {\r\n    function mint(address _to, uint256 _amount) external;\r\n}\r\n\r\ncontract MintingContract is Owned, SafeMath{\r\n    \r\n    address public tokenAddress;\r\n    uint256 public tokensAlreadyMinted;\r\n\r\n    enum state { crowdsaleMinting, additionalMinting, disabled}\r\n    state public mintingState; \r\n\r\n    uint256 public crowdsaleMintingCap;\r\n    uint256 public tokenTotalSupply;\r\n    \r\n    constructor() public {\r\n        tokensAlreadyMinted = 0;\r\n        crowdsaleMintingCap = 22000000 * 10 ** 18;\r\n        tokenTotalSupply = 44000000 * 10 ** 18;\r\n    }\r\n\r\n    function doCrowdsaleMinting(address _destination, uint _tokensToMint) public onlyOwner {\r\n        require(mintingState == state.crowdsaleMinting);\r\n        require(safeAdd(tokensAlreadyMinted, _tokensToMint) <= crowdsaleMintingCap);\r\n\r\n        MintableTokenInterface(tokenAddress).mint(_destination, _tokensToMint);\r\n        tokensAlreadyMinted = safeAdd(tokensAlreadyMinted, _tokensToMint);\r\n    }\r\n    function doAdditionalMinting(address _destination, uint _tokensToMint) public {\r\n        require(mintingState == state.additionalMinting);\r\n        require(safeAdd(tokensAlreadyMinted, _tokensToMint) <= tokenTotalSupply);\r\n\r\n        MintableTokenInterface(tokenAddress).mint(_destination, _tokensToMint);\r\n        tokensAlreadyMinted = safeAdd(tokensAlreadyMinted, _tokensToMint);\r\n    }\r\n    \r\n    function finishCrowdsaleMinting() onlyOwner public {\r\n        mintingState = state.additionalMinting;\r\n    }\r\n    \r\n    function disableMinting() onlyOwner public {\r\n        mintingState = state.disabled;\r\n    }\r\n\r\n    function setTokenAddress(address _tokenAddress) onlyOwner public {\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n    \r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mintingState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAlreadyMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishCrowdsaleMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_tokensToMint\",\"type\":\"uint256\"}],\"name\":\"doCrowdsaleMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleMintingCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_tokensToMint\",\"type\":\"uint256\"}],\"name\":\"doAdditionalMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]","ContractName":"MintingContract","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4a73d40450614ce4c7d6c557721a62300f9ff6b31c44baee9ecf904d58f9b394"}]}