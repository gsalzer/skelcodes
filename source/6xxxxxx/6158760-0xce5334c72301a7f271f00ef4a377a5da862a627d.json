{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n/*\r\n * @FadyAro 15 Aug 2018\r\n *\r\n * Private Personal Bet\r\n */\r\ncontract PrivateBet {\r\n\r\n    /*\r\n     * subscription event\r\n     */ \r\n    event NewBet(address indexed _address);\r\n    \r\n    /*\r\n     * subscription status\r\n     */ \r\n    uint8 private paused = 0;\r\n\r\n    /*\r\n     * subscription price\r\n     */ \r\n    uint private price;\r\n    \r\n    /*\r\n     * subscription code\r\n     */ \r\n    bytes16 private name;\r\n    \r\n    /*\r\n     * contract owner\r\n     */ \r\n    address private owner;\r\n\r\n    /*\r\n     * subscribed users\r\n     */ \r\n    address[] public users;\r\n    \r\n    /*\r\n     * bet parameters\r\n     */\r\n    constructor(bytes16 _name, uint _price) public {\r\n        owner = msg.sender;\r\n        name = _name;\r\n        price = _price;\r\n    }\r\n    \r\n    /*\r\n     * fallback subscription logic\r\n     */\r\n    function() public payable {\r\n        \r\n        /*\r\n         * only when contract is active\r\n         */\r\n        require(paused == 0, 'paused');\r\n        \r\n        /*\r\n         * smart contracts are not allowed to participate\r\n         */\r\n        require(tx.origin == msg.sender, 'not allowed');\r\n        \r\n        /*\r\n         * only when contract is active\r\n         */\r\n        require(msg.value >= price, 'low amount');\r\n\r\n        /*\r\n         * subscribe the user\r\n         */\r\n        users.push(msg.sender);\r\n        \r\n        /*\r\n         * log the event\r\n         */\r\n        emit NewBet(msg.sender);\r\n         \r\n         /*\r\n          * collect the ETH\r\n          */\r\n        owner.transfer(msg.value);\r\n    }\r\n    \r\n    /*\r\n     * bet details\r\n     */\r\n    function details() public view returns (\r\n        address _owner\r\n        , bytes16 _name \r\n        , uint _price \r\n        , uint _total\r\n        , uint _paused\r\n        ) {\r\n        return (\r\n            owner\r\n            , name\r\n            , price\r\n            , users.length\r\n            , paused\r\n        );\r\n    }\r\n    \r\n    /*\r\n     * pause the subscriptions\r\n     */\r\n    function pause() public {\r\n        \r\n        require(msg.sender == owner, 'not allowed');\r\n        \r\n        paused = 1;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes16\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_total\",\"type\":\"uint256\"},{\"name\":\"_paused\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes16\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NewBet\",\"type\":\"event\"}]","ContractName":"PrivateBet","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"425443204849474820383430302020200000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb140000","Library":"","SwarmSource":"bzzr://1f5abe5a6689ed015388fb99cb2c2b2be77e58dbd1acc0544ffd527511c69c0e"}]}