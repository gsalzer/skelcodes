{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath\r\n{\r\n\tfunction mul(uint256 a, uint256 b) internal pure\r\n\treturns (uint256)\r\n\t{\r\n\t\tuint256 c = a * b;\r\n\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure\r\n\treturns (uint256)\r\n\t{\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure\r\n\treturns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure\r\n\treturns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ninterface ERC20\r\n{\r\n\tfunction totalSupply() view external returns (uint _totalSupply);\r\n\tfunction balanceOf(address _owner) view external returns (uint balance);\r\n\tfunction transfer(address _to, uint _value) external returns (bool success);\r\n\tfunction transferFrom(address _from, address _to, uint _value) external returns (bool success);\r\n\tfunction approve(address _spender, uint _value) external returns (bool success);\r\n\tfunction allowance(address _owner, address _spender) view external returns (uint remaining);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract LynchpinToken is ERC20\r\n{\r\n\tusing SafeMath for uint256;\r\n\r\n\tstring \tpublic name        = \"Lynchpin\";\r\n\tstring \tpublic symbol      = \"LYN\";\r\n\tuint8 \tpublic decimals    = 18;\r\n\tuint \tpublic totalSupply = 5000000 * (10 ** uint(decimals));\r\n\taddress public owner       = 0xAc983022185b95eF2B2C7219143483BD0C65Ecda;\r\n\r\n\tmapping (address => uint) public balanceOf;\r\n\tmapping (address => mapping (address => uint)) public allowance;\r\n\r\n\tconstructor() public\r\n\t{\r\n\t\tbalanceOf[owner] = totalSupply;\r\n\t}\r\n\r\n\tfunction totalSupply() view external returns (uint _totalSupply)\r\n\t{\r\n\t\treturn totalSupply;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) view external returns (uint balance)\r\n\t{\r\n\t\treturn balanceOf[_owner];\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) view external returns (uint remaining)\r\n\t{\r\n\t\treturn allowance[_owner][_spender];\r\n\t}\r\n\tfunction _transfer(address _from, address _to, uint _value) internal\r\n\t{\r\n\t\trequire(_to != 0x0);\r\n\r\n\t\tuint previousBalances = balanceOf[_from].add(balanceOf[_to]);\r\n\t\tbalanceOf[_from] = balanceOf[_from].sub(_value);\r\n\t\tbalanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\tassert(balanceOf[_from].add(balanceOf[_to]) == previousBalances);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) public returns (bool success)\r\n\t{\r\n\t\t_transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success)\r\n\t{\r\n\t\tallowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n\t\t_transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) public returns (bool success)\r\n\t{\r\n\t\tallowance[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// disallow incoming ether to this contract\r\n\tfunction () public\r\n\t{\r\n\t\trevert();\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LynchpinToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://aa8b3e8b34e8d2be32c7dec1ef8f5a81cf0f2d060be6b77194182526b9e8aeed"}]}