{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\ncontract MobaBase {\r\n    address public owner = 0x0;\r\n    bool public isLock = false;\r\n    constructor ()  public  {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner,\"only owner can call this function\");\r\n        _;\r\n    }\r\n    \r\n    modifier notLock {\r\n        require(isLock == false,\"contract current is lock status\");\r\n        _;\r\n    }\r\n    \r\n    modifier msgSendFilter() {\r\n        address addr = msg.sender;\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        require(size <= 0,\"address must is not contract\");\r\n        require(msg.sender == tx.origin, \"msg.sender must equipt tx.origin\");\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n    \r\n    function updateLock(bool b) onlyOwner public {\r\n        \r\n        require(isLock != b,\" updateLock new status == old status\");\r\n        isLock = b;\r\n    }\r\n}\r\ncontract BRPerSellData is MobaBase {\r\n    \r\n    struct PerSell {\r\n      bool isOver;\r\n      uint16 id;\r\n      uint256 price;\r\n    }\r\n    \r\n    constructor ()  public  {\r\n        owner = msg.sender;\r\n        addPerSell(0,0  finney,true);\r\n        addPerSell(1,990 finney,false);\r\n        addPerSell(2,90 finney,false);\r\n        addPerSell(3,9 finney,false);\r\n    }\r\n    \r\n    PerSell[]  mPerSellList;\r\n    mapping (uint16 => uint16) public mIdToIndex;\r\n \r\n\r\n    \r\n    modifier noPerSellId(uint16 id) {\r\n        uint16 index = mIdToIndex[id];\r\n        if(index < mPerSellList.length ) {\r\n            PerSell storage curPerSell = mPerSellList[index];\r\n            require(curPerSell.id == 0,\"current PerSell.Id isnot exist\");\r\n        }\r\n        _;  \r\n    }\r\n    modifier hasPerSellId(uint16 id) {\r\n        PerSell storage curPerSell = mPerSellList[mIdToIndex[id]];\r\n        require(curPerSell.id > 0,\"current PerSell.Id isnot exist\");\r\n        _;\r\n    }\r\n    \r\n    function addPerSell(uint16 id,uint256 price,bool isOver) \r\n    onlyOwner \r\n    msgSendFilter \r\n    noPerSellId(id)\r\n    public {\r\n        mPerSellList.push( PerSell(isOver,id,price));\r\n        uint16 index   = uint16(mPerSellList.length-1);\r\n        mIdToIndex[id] = index;\r\n        require(mPerSellList[index].id == id);\r\n    }\r\n    \r\n    function updatePerSell(uint16 id,uint256 price,bool isOver) \r\n    onlyOwner \r\n    msgSendFilter \r\n    hasPerSellId(id)\r\n    public {\r\n         PerSell storage curPerSell = mPerSellList[mIdToIndex[id]];\r\n         curPerSell.price  = price;\r\n         curPerSell.isOver = isOver;\r\n    }\r\n    \r\n    function PerSellOver(uint16[] array) \r\n    onlyOwner \r\n    msgSendFilter \r\n    public {\r\n        for(uint16 i = 0 ; i < array.length;i++) {\r\n            uint16 id = array[i];\r\n            PerSell storage curPerSell = mPerSellList[mIdToIndex[id]];\r\n            if(curPerSell.isOver == false) {\r\n                curPerSell.isOver = true;\r\n            }\r\n        }\r\n    } \r\n    \r\n    function OverAllPerSell() \r\n    onlyOwner \r\n    msgSendFilter \r\n    public {\r\n        for(uint16 i = 0 ; i < mPerSellList.length;i++) {\r\n            PerSell storage curPerSell = mPerSellList[i];\r\n            if(curPerSell.isOver == false) {\r\n                curPerSell.isOver = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    function GetPerSellInfo(uint16 id) public view returns (uint16,uint256 price,bool isOver) {\r\n        \r\n        PerSell storage curPerSell = mPerSellList[mIdToIndex[id]];\r\n        return (curPerSell.id,curPerSell.price,curPerSell.isOver);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"GetPerSellInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"isOver\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint16\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"isOver\",\"type\":\"bool\"}],\"name\":\"updatePerSell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"mIdToIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"updateLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint16\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"isOver\",\"type\":\"bool\"}],\"name\":\"addPerSell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"OverAllPerSell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"array\",\"type\":\"uint16[]\"}],\"name\":\"PerSellOver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"BRPerSellData","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2f16d0d106df413d2e190622c5d252b9b136d0d9cad5671911640c12689c4f99"}]}