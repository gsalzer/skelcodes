{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract ERC20Interface \r\n{\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    mapping(address => mapping(address => uint)) allowed;\r\n}\r\n\r\ncontract lottrygame{\r\n    //base setting\r\n    uint256 public people;\r\n    uint numbers;\r\n    uint256 public tickamount = 100;\r\n    uint256 public winnergetETH1 = 0.05 ether;\r\n    uint256 public winnergetETH2 = 0.03 ether;\r\n    uint256 public winnergetETH3 = 0.02 ether;\r\n    uint public gamecount = 0;\r\n    uint public inputsbt = 100;\r\n    uint  black=1;\r\n    uint  red=2;\r\n    uint  yellow=3;\r\n    \r\n    address[] public tickplayers;\r\n    address public owner;\r\n    address tokenAddress = 0x503F9794d6A6bB0Df8FBb19a2b3e2Aeab35339Ad;//ttt\r\n    address poolwallet;\r\n    \r\n    bool public tickgamelock = true;\r\n    bool public full = true;\r\n    event tickwinner(uint,address,address,address,uint,uint,uint);\r\n    event ticksell(uint gettick,uint paytick);   \r\n    \r\n    modifier ownerOnly() {\r\n    require(msg.sender == owner);\r\n    _;\r\n}\r\n    constructor() public {\r\n        owner = msg.sender;\r\n}\r\n    //function can get ETH\r\nfunction () external payable ownerOnly{\r\n    tickgamelock=false;\r\n    owner = msg.sender;\r\n    poolwallet = msg.sender;\r\n}\r\n    //change winner can get ETH\r\nfunction changewinnerget(uint ethamount) public ownerOnly{\r\n    require(ethamount!=0);\r\n    require(msg.sender==owner);\r\n    if(ethamount==1){\r\n    winnergetETH1 = 0.05 ether;\r\n    winnergetETH2 = 0.03 ether;\r\n    winnergetETH3 = 0.02 ether;\r\n    inputsbt = 100;\r\n    }\r\n    else if(ethamount==10){\r\n    winnergetETH1 = 0.12 ether;\r\n    winnergetETH2 = 0.08 ether;\r\n    winnergetETH3 = 0.05 ether;\r\n    inputsbt = 250;\r\n    }\r\n    else if(ethamount==100){\r\n    winnergetETH1 = 1 ether;\r\n    winnergetETH2 = 0.6 ether;\r\n    winnergetETH3 = 0.4 ether;\r\n    inputsbt = 1500;\r\n    }\r\n}\r\n    //change tick amount\r\nfunction changetickamount(uint256 _tickamount) public ownerOnly{\r\n    require(msg.sender==poolwallet);\r\n    tickamount = _tickamount;\r\n}\r\n\r\n    //players joingame\r\nfunction jointickgame(uint gettick) public {\r\n    require(tickgamelock == false);\r\n    require(gettick<=tickamount&&gettick>0);\r\n    require(gettick<=10&&people<=100);\r\n    if(people<tickamount){\r\n        uint paytick=uint(inputsbt)*1e18*gettick;\r\n        uint i;\r\n        ERC20Interface(tokenAddress).transferFrom(msg.sender,address(this),paytick);\r\n        for (i=0 ;i<gettick;i++){\r\n        tickplayers.push(msg.sender);\r\n        people ++;}\r\n        emit ticksell(gettick,paytick);\r\n    }\r\n    else if (people<=tickamount){\r\n        paytick=uint(inputsbt)*1e18*gettick;\r\n        ERC20Interface(tokenAddress).transferFrom(msg.sender,address(this),paytick);\r\n        for (i=0 ;i<gettick;i++){\r\n        tickplayers.push(msg.sender);\r\n        people ++;}\r\n        emit ticksell(gettick,paytick);\r\n        require(full==false);\r\n        pictickWinner();\r\n    }\r\n}\r\n\r\n//===================random====================\\\\\r\nfunction changerandom(uint b,uint y,uint r)public ownerOnly{\r\n    require(msg.sender==owner);\r\n    black=b;\r\n    yellow=y;\r\n    red=r;\r\n}\r\nfunction tickrandom()private view returns(uint) {\r\n    return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp,tickamount+black))); \r\n}\r\nfunction tickrandom1()private view returns(uint) {\r\n    return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp,tickamount+yellow)));\r\n}\r\nfunction tickrandom2()private view returns(uint) {\r\n    return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp,tickamount+red))); \r\n}\r\n//===============================================\\\\\r\n\r\n    //get winner in players\r\nfunction pictickWinner()public ownerOnly{\r\n    require(msg.sender==poolwallet);\r\n    require(tickgamelock == false);\r\n    require(people>0);\r\n    uint tickindex = tickrandom() % (tickplayers.length);\r\n    uint tickindex1 = tickrandom1() % (tickplayers.length);\r\n    uint tickindex2 = tickrandom2() % (tickplayers.length);\r\n    address sendwiner = tickplayers[tickindex];\r\n    address sendwiner1 = tickplayers[tickindex1];\r\n    address sendwiner2 = tickplayers[tickindex2];\r\n    address(sendwiner).transfer(winnergetETH1);\r\n    address(sendwiner1).transfer(winnergetETH2);\r\n    address(sendwiner2).transfer(winnergetETH3);\r\n    tickplayers = new address[](0);\r\n    people = 0;\r\n    tickamount = 100;\r\n    gamecount++;\r\n    emit tickwinner(gamecount,sendwiner,sendwiner1,sendwiner2,tickindex,tickindex1,tickindex2);\r\n    \r\n    \r\n}\r\n    //destory game\r\nfunction killgame()public ownerOnly {\r\n    require(msg.sender==poolwallet);\r\n    selfdestruct(owner);\r\n}\r\nfunction changefull()public ownerOnly{\r\n    require(msg.sender==poolwallet);\r\n    if(full== true){\r\n        full=false;\r\n    }else if(full==false){\r\n        full=true;\r\n    }\r\n}\r\n\r\n    //setgamelock true=lock,false=unlock\r\nfunction settickgamelock() public ownerOnly{\r\n    require(msg.sender==poolwallet);\r\n       if(tickgamelock == true){\r\n        tickgamelock = false;\r\n       }\r\n       else if(tickgamelock==false){\r\n           tickgamelock =true;\r\n       }\r\n    }\r\n    //transfer contract inside tokens to owner\r\nfunction transferanyERC20token(address _tokenAddress,uint tokens)public ownerOnly{\r\n    require(msg.sender==poolwallet);\r\n    ERC20Interface(_tokenAddress).transfer(owner, tokens);\r\n}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"gamecount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settickgamelock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inputsbt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killgame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changefull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnergetETH1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pictickWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tickamount\",\"type\":\"uint256\"}],\"name\":\"changetickamount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"people\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferanyERC20token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ethamount\",\"type\":\"uint256\"}],\"name\":\"changewinnerget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnergetETH3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnergetETH2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gettick\",\"type\":\"uint256\"}],\"name\":\"jointickgame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickplayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"b\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"},{\"name\":\"r\",\"type\":\"uint256\"}],\"name\":\"changerandom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"full\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickgamelock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickamount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickwinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"gettick\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"paytick\",\"type\":\"uint256\"}],\"name\":\"ticksell\",\"type\":\"event\"}]","ContractName":"lottrygame","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6dace01abe7eae305a13558cd8e843d8fb88ccaeec032a21c92b9abfdb275652"}]}