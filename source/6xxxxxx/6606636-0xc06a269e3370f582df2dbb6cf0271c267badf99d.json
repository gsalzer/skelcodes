{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract GemLike {\r\n    function balanceOf(address) public returns (uint);\r\n    function transfer(address, uint) public returns (bool);\r\n}\r\n\r\ncontract TokenRecovery {\r\n\tfunction recoverETH() public {\r\n\t\trequire(msg.sender.send(address(this).balance), \"Error transferring ETH\");\r\n\t}\r\n\r\n\tfunction recoverERC20(address erc20) public {\r\n\t\tuint tokenAmt = GemLike(erc20).balanceOf(this);\r\n\t\trequire(GemLike(erc20).transfer(msg.sender, tokenAmt), \"Error transferring token\");\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"recoverETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TokenRecovery","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1d2e42540fef19a4949f9377cb45d7ef8046f860cfd8f5aad956b7d34cc02584"}]}