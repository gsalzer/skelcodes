{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract BasicAccessControl {\r\n    address public owner;\r\n    // address[] public moderators;\r\n    uint16 public totalModerators = 0;\r\n    mapping (address => bool) public moderators;\r\n    bool public isMaintaining = false;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyModerators() {\r\n        require(msg.sender == owner || moderators[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier isActive {\r\n        require(!isMaintaining);\r\n        _;\r\n    }\r\n\r\n    function ChangeOwner(address _newOwner) onlyOwner public {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n\r\n    function AddModerator(address _newModerator) onlyOwner public {\r\n        if (moderators[_newModerator] == false) {\r\n            moderators[_newModerator] = true;\r\n            totalModerators += 1;\r\n        }\r\n    }\r\n    \r\n    function RemoveModerator(address _oldModerator) onlyOwner public {\r\n        if (moderators[_oldModerator] == true) {\r\n            moderators[_oldModerator] = false;\r\n            totalModerators -= 1;\r\n        }\r\n    }\r\n\r\n    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\r\n        isMaintaining = _isMaintaining;\r\n    }\r\n}\r\n\r\ncontract CubegoERC20 {\r\n    function emitTransferEvent(address from, address to, uint tokens) external;\r\n}\r\n\r\ncontract CubegoCore is BasicAccessControl {\r\n    uint constant MAX_MATERIAL = 32;\r\n    \r\n    struct MaterialData {\r\n        uint price;\r\n        uint totalSupply;\r\n        CubegoERC20 erc20;\r\n    }\r\n    \r\n    MaterialData[MAX_MATERIAL] public materials;\r\n    mapping(address => uint[MAX_MATERIAL]) public myMaterials;\r\n    \r\n    function setMaterialData(uint _mId, uint _price, address _erc20Address) onlyModerators external {\r\n        MaterialData storage material = materials[_mId];\r\n        material.price = _price;\r\n        material.erc20 = CubegoERC20(_erc20Address);\r\n    }\r\n    \r\n    function mineMaterial(address _owner, uint _mId, uint _amount) onlyModerators external {\r\n        myMaterials[_owner][_mId] += _amount;\r\n        MaterialData storage material = materials[_mId];\r\n        material.totalSupply += _amount;\r\n        material.erc20.emitTransferEvent(address(0), _owner, _amount);\r\n    }\r\n    \r\n    function transferMaterial(address _sender, address _receiver, uint _mId, uint _amount) onlyModerators external {\r\n        if (myMaterials[_sender][_mId] < _amount) revert();\r\n        myMaterials[_sender][_mId] -= _amount;\r\n        myMaterials[_receiver][_mId] += _amount;\r\n        materials[_mId].erc20.emitTransferEvent(_sender, _receiver, _amount);\r\n    }\r\n\r\n    function buyMaterials(address _owner, uint _mId1, uint _amount1, uint _mId2, uint _amount2, \r\n                            uint _mId3, uint _amount3, uint _mId4, uint _amount4) onlyModerators external returns(uint) {\r\n        uint totalPrice = 0;\r\n        MaterialData storage material = materials[_mId1];\r\n        \r\n        if (_mId1 > 0) {\r\n            if (material.price == 0) revert();\r\n            myMaterials[_owner][_mId1] += _amount1;\r\n            totalPrice += material.price * _amount1;\r\n            material.totalSupply += _amount1;\r\n            material.erc20.emitTransferEvent(address(0), _owner, _amount1);\r\n        }\r\n        if (_mId2 > 0) {\r\n            material = materials[_mId2];\r\n            if (material.price == 0) revert();\r\n            myMaterials[_owner][_mId2] += _amount2;\r\n            totalPrice += material.price * _amount2;\r\n            material.totalSupply += _amount1;\r\n            material.erc20.emitTransferEvent(address(0), _owner, _amount2);\r\n        }\r\n        if (_mId3 > 0) {\r\n            material = materials[_mId3];\r\n            if (material.price == 0) revert();\r\n            myMaterials[_owner][_mId3] += _amount3;\r\n            totalPrice += material.price * _amount3;\r\n            material.totalSupply += _amount1;\r\n            material.erc20.emitTransferEvent(address(0), _owner, _amount3);\r\n        }\r\n        if (_mId4 > 0) {\r\n            material = materials[_mId3];\r\n            if (material.price == 0) revert();\r\n            myMaterials[_owner][_mId4] += _amount4;\r\n            totalPrice += material.price * _amount4;\r\n            material.totalSupply += _amount1;\r\n            material.erc20.emitTransferEvent(address(0), _owner, _amount4);\r\n        }\r\n    \r\n        return totalPrice;\r\n    }\r\n    \r\n    // dismantle cubegon\r\n    function addMaterials(address _owner, uint _mId1, uint _amount1, uint _mId2, uint _amount2, \r\n                            uint _mId3, uint _amount3, uint _mId4, uint _amount4) onlyModerators external {\r\n        \r\n        if (_mId1 > 0) {\r\n            myMaterials[_owner][_mId1] += _amount1;\r\n            materials[_mId1].erc20.emitTransferEvent(address(0), _owner, _amount1);\r\n        }\r\n        if (_mId2 > 0) {\r\n            myMaterials[_owner][_mId2] += _amount2;\r\n            materials[_mId2].erc20.emitTransferEvent(address(0), _owner, _amount2);\r\n        }\r\n        if (_mId3 > 0) {\r\n            myMaterials[_owner][_mId3] += _amount3;\r\n            materials[_mId3].erc20.emitTransferEvent(address(0), _owner, _amount3);\r\n        }\r\n        if (_mId4 > 0) {\r\n            myMaterials[_owner][_mId4] += _amount4;\r\n            materials[_mId4].erc20.emitTransferEvent(address(0), _owner, _amount4);\r\n        }\r\n    }\r\n    \r\n    function removeMaterials(address _owner, uint _mId1, uint _amount1, uint _mId2, uint _amount2, \r\n                            uint _mId3, uint _amount3, uint _mId4, uint _amount4) onlyModerators external {\r\n        if (_mId1 > 0) {\r\n            if (myMaterials[_owner][_mId1] < _amount1) revert();\r\n            myMaterials[_owner][_mId1] -= _amount1;\r\n            materials[_mId1].erc20.emitTransferEvent(_owner, address(0), _amount1);\r\n        }\r\n        if (_mId2 > 0) {\r\n            if (myMaterials[_owner][_mId2] < _amount2) revert();\r\n            myMaterials[_owner][_mId2] -= _amount2;\r\n            materials[_mId2].erc20.emitTransferEvent(_owner, address(0), _amount2);\r\n        }\r\n        if (_mId3 > 0) {\r\n            if (myMaterials[_owner][_mId3] < _amount3) revert();\r\n            myMaterials[_owner][_mId3] -= _amount3;\r\n            materials[_mId3].erc20.emitTransferEvent(_owner, address(0), _amount3);\r\n        }\r\n        if (_mId4 > 0) {\r\n            if (myMaterials[_owner][_mId4] < _amount4) revert();\r\n            myMaterials[_owner][_mId4] -= _amount4;\r\n            materials[_mId4].erc20.emitTransferEvent(_owner, address(0), _amount4);\r\n        }\r\n    }\r\n    \r\n    \r\n    // public function\r\n    function getMaterialSupply(uint _mId) constant external returns(uint) {\r\n        return materials[_mId].totalSupply;\r\n    }\r\n    \r\n    function getMaterialData(uint _mId) constant external returns(uint price, uint totalSupply, address erc20Address) {\r\n        MaterialData storage material = materials[_mId];\r\n        return (material.price, material.totalSupply, address(material.erc20));\r\n    }\r\n    \r\n    function getMyMaterials(address _owner) constant external returns(uint[MAX_MATERIAL]) {\r\n        return myMaterials[_owner];\r\n    }\r\n    \r\n    function getMyMaterialById(address _owner, uint _mId) constant external returns(uint) {\r\n        return myMaterials[_owner][_mId];\r\n    }\r\n    \r\n    function getMyMaterialsByIds(address _owner, uint _mId1, uint _mId2, uint _mId3, uint _mId4) constant external returns(\r\n        uint, uint, uint, uint) {\r\n        return (myMaterials[_owner][_mId1], myMaterials[_owner][_mId2], myMaterials[_owner][_mId3], myMaterials[_owner][_mId4]);    \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getMyMaterials\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[32]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mId\",\"type\":\"uint256\"}],\"name\":\"getMaterialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId1\",\"type\":\"uint256\"},{\"name\":\"_amount1\",\"type\":\"uint256\"},{\"name\":\"_mId2\",\"type\":\"uint256\"},{\"name\":\"_amount2\",\"type\":\"uint256\"},{\"name\":\"_mId3\",\"type\":\"uint256\"},{\"name\":\"_amount3\",\"type\":\"uint256\"},{\"name\":\"_mId4\",\"type\":\"uint256\"},{\"name\":\"_amount4\",\"type\":\"uint256\"}],\"name\":\"buyMaterials\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myMaterials\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId1\",\"type\":\"uint256\"},{\"name\":\"_amount1\",\"type\":\"uint256\"},{\"name\":\"_mId2\",\"type\":\"uint256\"},{\"name\":\"_amount2\",\"type\":\"uint256\"},{\"name\":\"_mId3\",\"type\":\"uint256\"},{\"name\":\"_amount3\",\"type\":\"uint256\"},{\"name\":\"_mId4\",\"type\":\"uint256\"},{\"name\":\"_amount4\",\"type\":\"uint256\"}],\"name\":\"addMaterials\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"UpdateMaintaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId1\",\"type\":\"uint256\"},{\"name\":\"_mId2\",\"type\":\"uint256\"},{\"name\":\"_mId3\",\"type\":\"uint256\"},{\"name\":\"_mId4\",\"type\":\"uint256\"}],\"name\":\"getMyMaterialsByIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalModerators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mineMaterial\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newModerator\",\"type\":\"address\"}],\"name\":\"AddModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"materials\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"erc20\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mId\",\"type\":\"uint256\"}],\"name\":\"getMaterialData\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"erc20Address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId\",\"type\":\"uint256\"}],\"name\":\"getMyMaterialById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_erc20Address\",\"type\":\"address\"}],\"name\":\"setMaterialData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_mId1\",\"type\":\"uint256\"},{\"name\":\"_amount1\",\"type\":\"uint256\"},{\"name\":\"_mId2\",\"type\":\"uint256\"},{\"name\":\"_amount2\",\"type\":\"uint256\"},{\"name\":\"_mId3\",\"type\":\"uint256\"},{\"name\":\"_amount3\",\"type\":\"uint256\"},{\"name\":\"_mId4\",\"type\":\"uint256\"},{\"name\":\"_amount4\",\"type\":\"uint256\"}],\"name\":\"removeMaterials\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldModerator\",\"type\":\"address\"}],\"name\":\"RemoveModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintaining\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_mId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferMaterial\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CubegoCore","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9ce06db2e05ddc422dddfc33c1de9612e19c4cec66bc47149a543c2f6ef26ceb"}]}