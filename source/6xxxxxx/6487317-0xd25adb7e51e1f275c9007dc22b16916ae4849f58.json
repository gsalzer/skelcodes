{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 解锁记录合约\r\n// ----------------------------------------------------------------------------\r\ncontract IMCUnlockRecord is Owned{\r\n\r\n    // 解锁记录添加日志\r\n    event UnlockRecordAdd(uint _date, bytes32 _hash, string _data, string _fileFormat, uint _stripLen);\r\n\r\n    // Token解锁统计记录\r\n    struct RecordInfo {\r\n        uint date;  // 记录日期（解锁ID）\r\n        bytes32 hash;  // 文件hash\r\n        string data; // 统计数据\r\n        string fileFormat; // 上链存证的文件格式\r\n        uint stripLen; // 上链存证的文件分区\r\n    }\r\n\r\n    // 执行者地址\r\n    address public executorAddress;\r\n    \r\n    // 解锁记录\r\n    mapping(uint => RecordInfo) public unlockRecord;\r\n    \r\n    constructor() public{\r\n        // 初始化合约执行者\r\n        executorAddress = msg.sender;\r\n    }\r\n    \r\n    /**\r\n     * 修改executorAddress，只有owner能够修改\r\n     * @param _addr address 地址\r\n     */\r\n    function modifyExecutorAddr(address _addr) public onlyOwner {\r\n        executorAddress = _addr;\r\n    }\r\n    \r\n     \r\n    /**\r\n     * 解锁记录添加\r\n     * @param _date uint 记录日期（解锁ID）\r\n     * @param _hash bytes32 文件hash\r\n     * @param _data string 统计数据\r\n     * @param _fileFormat string 上链存证的文件格式\r\n     * @param _stripLen uint 上链存证的文件分区\r\n     * @return success 添加成功\r\n     */\r\n    function unlockRecordAdd(uint _date, bytes32 _hash, string _data, string _fileFormat, uint _stripLen) public returns (bool) {\r\n        // 调用者需和Owner设置的执行者地址一致\r\n        require(msg.sender == executorAddress);\r\n        // 防止重复记录\r\n        require(unlockRecord[_date].date != _date);\r\n\r\n        // 记录解锁信息\r\n        unlockRecord[_date] = RecordInfo(_date, _hash, _data, _fileFormat, _stripLen);\r\n\r\n        // 解锁日志记录\r\n        emit UnlockRecordAdd(_date, _hash, _data, _fileFormat, _stripLen);\r\n        \r\n        return true;\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_date\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_data\",\"type\":\"string\"},{\"name\":\"_fileFormat\",\"type\":\"string\"},{\"name\":\"_stripLen\",\"type\":\"uint256\"}],\"name\":\"unlockRecordAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"modifyExecutorAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockRecord\",\"outputs\":[{\"name\":\"date\",\"type\":\"uint256\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"data\",\"type\":\"string\"},{\"name\":\"fileFormat\",\"type\":\"string\"},{\"name\":\"stripLen\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executorAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_fileFormat\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_stripLen\",\"type\":\"uint256\"}],\"name\":\"UnlockRecordAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"IMCUnlockRecord","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://166cf0204bc6764b65ca071289524f32cb88acd93e8de79f96ca47935885ecb2"}]}