{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/// @title uniquely identifies deployable (non-abstract) platform contract\r\n/// @notice cheap way of assigning implementations to knownInterfaces which represent system services\r\n///         unfortunatelly ERC165 does not include full public interface (ABI) and does not provide way to list implemented interfaces\r\n///         EIP820 still in the making\r\n/// @dev ids are generated as follows keccak256(\"neufund-platform:<contract name>\")\r\n///      ids roughly correspond to ABIs\r\ncontract IContractId {\r\n    /// @param id defined as above\r\n    /// @param version implementation version\r\n    function contractId() public pure returns (bytes32 id, uint256 version);\r\n}\r\n\r\n/// @title sets duration of states in ETO\r\ncontract ETODurationTerms is IContractId {\r\n\r\n    ////////////////////////\r\n    // Immutable state\r\n    ////////////////////////\r\n\r\n    // duration of Whitelist state\r\n    uint32 public WHITELIST_DURATION;\r\n\r\n    // duration of Public state\r\n    uint32 public PUBLIC_DURATION;\r\n\r\n    // time for Nominee and Company to sign Investment Agreement offchain and present proof on-chain\r\n    uint32 public SIGNING_DURATION;\r\n\r\n    // time for Claim before fee payout from ETO to NEU holders\r\n    uint32 public CLAIM_DURATION;\r\n\r\n    ////////////////////////\r\n    // Constructor\r\n    ////////////////////////\r\n\r\n    constructor(\r\n        uint32 whitelistDuration,\r\n        uint32 publicDuration,\r\n        uint32 signingDuration,\r\n        uint32 claimDuration\r\n    )\r\n        public\r\n    {\r\n        WHITELIST_DURATION = whitelistDuration;\r\n        PUBLIC_DURATION = publicDuration;\r\n        SIGNING_DURATION = signingDuration;\r\n        CLAIM_DURATION = claimDuration;\r\n    }\r\n\r\n    //\r\n    // Implements IContractId\r\n    //\r\n\r\n    function contractId() public pure returns (bytes32 id, uint256 version) {\r\n        return (0x5fb50201b453799d95f8a80291b940f1c543537b95bff2e3c78c2e36070494c0, 0);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"PUBLIC_DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WHITELIST_DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SIGNING_DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractId\",\"outputs\":[{\"name\":\"id\",\"type\":\"bytes32\"},{\"name\":\"version\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLAIM_DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"whitelistDuration\",\"type\":\"uint32\"},{\"name\":\"publicDuration\",\"type\":\"uint32\"},{\"name\":\"signingDuration\",\"type\":\"uint32\"},{\"name\":\"claimDuration\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"ETODurationTerms","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000093a800000000000000000000000000000000000000000000000000000000000093a8000000000000000000000000000000000000000000000000000000000003f480000000000000000000000000000000000000000000000000000000000000d2f00","Library":"","SwarmSource":"bzzr://113a8586523b22d574728a13086fee19a30d6287a4fe18a53d4d13c6f96da76c"}]}