{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n// copyright contact@Etheremon.com\r\n\r\ncontract SafeMath {\r\n\r\n    /* function assert(bool assertion) internal { */\r\n    /*   if (!assertion) { */\r\n    /*     throw; */\r\n    /*   } */\r\n    /* }      // assert no longer needed once solidity is on 0.4.10 */\r\n\r\n    function safeAdd(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      uint256 z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n\r\n    function safeSubtract(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      assert(x >= y);\r\n      uint256 z = x - y;\r\n      return z;\r\n    }\r\n\r\n    function safeMult(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      uint256 z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n\r\n}\r\n\r\ncontract BasicAccessControl {\r\n    address public owner;\r\n    // address[] public moderators;\r\n    uint16 public totalModerators = 0;\r\n    mapping (address => bool) public moderators;\r\n    bool public isMaintaining = false;\r\n\r\n    function BasicAccessControl() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyModerators() {\r\n        require(msg.sender == owner || moderators[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier isActive {\r\n        require(!isMaintaining);\r\n        _;\r\n    }\r\n\r\n    function ChangeOwner(address _newOwner) onlyOwner public {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n\r\n    function AddModerator(address _newModerator) onlyOwner public {\r\n        if (moderators[_newModerator] == false) {\r\n            moderators[_newModerator] = true;\r\n            totalModerators += 1;\r\n        }\r\n    }\r\n    \r\n    function RemoveModerator(address _oldModerator) onlyOwner public {\r\n        if (moderators[_oldModerator] == true) {\r\n            moderators[_oldModerator] = false;\r\n            totalModerators -= 1;\r\n        }\r\n    }\r\n\r\n    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\r\n        isMaintaining = _isMaintaining;\r\n    }\r\n}\r\n\r\ncontract EtheremonEnum {\r\n\r\n    enum ResultCode {\r\n        SUCCESS,\r\n        ERROR_CLASS_NOT_FOUND,\r\n        ERROR_LOW_BALANCE,\r\n        ERROR_SEND_FAIL,\r\n        ERROR_NOT_TRAINER,\r\n        ERROR_NOT_ENOUGH_MONEY,\r\n        ERROR_INVALID_AMOUNT,\r\n        ERROR_OBJ_NOT_FOUND,\r\n        ERROR_OBJ_INVALID_OWNERSHIP\r\n    }\r\n    \r\n    enum ArrayType {\r\n        CLASS_TYPE,\r\n        STAT_STEP,\r\n        STAT_START,\r\n        STAT_BASE,\r\n        OBJ_SKILL\r\n    }\r\n}\r\n\r\ncontract EtheremonDataBase is EtheremonEnum, BasicAccessControl, SafeMath {\r\n    \r\n    uint64 public totalMonster;\r\n    uint32 public totalClass;\r\n    \r\n    // write\r\n    function addElementToArrayType(ArrayType _type, uint64 _id, uint8 _value) onlyModerators public returns(uint);\r\n    function removeElementOfArrayType(ArrayType _type, uint64 _id, uint8 _value) onlyModerators public returns(uint);\r\n    function setMonsterClass(uint32 _classId, uint256 _price, uint256 _returnPrice, bool _catchable) onlyModerators public returns(uint32);\r\n    function addMonsterObj(uint32 _classId, address _trainer, string _name) onlyModerators public returns(uint64);\r\n    function setMonsterObj(uint64 _objId, string _name, uint32 _exp, uint32 _createIndex, uint32 _lastClaimIndex) onlyModerators public;\r\n    function increaseMonsterExp(uint64 _objId, uint32 amount) onlyModerators public;\r\n    function decreaseMonsterExp(uint64 _objId, uint32 amount) onlyModerators public;\r\n    function removeMonsterIdMapping(address _trainer, uint64 _monsterId) onlyModerators public;\r\n    function addMonsterIdMapping(address _trainer, uint64 _monsterId) onlyModerators public;\r\n    function clearMonsterReturnBalance(uint64 _monsterId) onlyModerators public returns(uint256 amount);\r\n    function collectAllReturnBalance(address _trainer) onlyModerators public returns(uint256 amount);\r\n    function transferMonster(address _from, address _to, uint64 _monsterId) onlyModerators public returns(ResultCode);\r\n    function addExtraBalance(address _trainer, uint256 _amount) onlyModerators public returns(uint256);\r\n    function deductExtraBalance(address _trainer, uint256 _amount) onlyModerators public returns(uint256);\r\n    function setExtraBalance(address _trainer, uint256 _amount) onlyModerators public;\r\n    \r\n    // read\r\n    function getSizeArrayType(ArrayType _type, uint64 _id) constant public returns(uint);\r\n    function getElementInArrayType(ArrayType _type, uint64 _id, uint _index) constant public returns(uint8);\r\n    function getMonsterClass(uint32 _classId) constant public returns(uint32 classId, uint256 price, uint256 returnPrice, uint32 total, bool catchable);\r\n    function getMonsterObj(uint64 _objId) constant public returns(uint64 objId, uint32 classId, address trainer, uint32 exp, uint32 createIndex, uint32 lastClaimIndex, uint createTime);\r\n    function getMonsterName(uint64 _objId) constant public returns(string name);\r\n    function getExtraBalance(address _trainer) constant public returns(uint256);\r\n    function getMonsterDexSize(address _trainer) constant public returns(uint);\r\n    function getMonsterObjId(address _trainer, uint index) constant public returns(uint64);\r\n    function getExpectedBalance(address _trainer) constant public returns(uint256);\r\n    function getMonsterReturn(uint64 _objId) constant public returns(uint256 current, uint256 total);\r\n}\r\n\r\ninterface EtheremonBattleInterface {\r\n    function isOnBattle(uint64 _objId) constant external returns(bool) ;\r\n}\r\n\r\ninterface EtheremonMonsterNFTInterface {\r\n   function triggerTransferEvent(address _from, address _to, uint _tokenId) external;\r\n   function getMonsterCP(uint64 _monsterId) constant external returns(uint cp);\r\n}\r\n\r\ncontract EtheremonTradeData is BasicAccessControl {\r\n    struct BorrowItem {\r\n        uint index;\r\n        address owner;\r\n        address borrower;\r\n        uint price;\r\n        bool lent;\r\n        uint releaseTime;\r\n        uint createTime;\r\n    }\r\n    \r\n    struct SellingItem {\r\n        uint index;\r\n        uint price;\r\n        uint createTime;\r\n    }\r\n\r\n    mapping(uint => SellingItem) public sellingDict; // monster id => item\r\n    uint[] public sellingList; // monster id\r\n    \r\n    mapping(uint => BorrowItem) public borrowingDict;\r\n    uint[] public borrowingList;\r\n\r\n    mapping(address => uint[]) public lendingList;\r\n    \r\n    function removeSellingItem(uint _itemId) onlyModerators external {\r\n        SellingItem storage item = sellingDict[_itemId];\r\n        if (item.index == 0)\r\n            return;\r\n        \r\n        if (item.index <= sellingList.length) {\r\n            // Move an existing element into the vacated key slot.\r\n            sellingDict[sellingList[sellingList.length-1]].index = item.index;\r\n            sellingList[item.index-1] = sellingList[sellingList.length-1];\r\n            sellingList.length -= 1;\r\n            delete sellingDict[_itemId];\r\n        }\r\n    }\r\n    \r\n    function addSellingItem(uint _itemId, uint _price, uint _createTime) onlyModerators external {\r\n        SellingItem storage item = sellingDict[_itemId];\r\n        item.price = _price;\r\n        item.createTime = _createTime;\r\n        \r\n        if (item.index == 0) {\r\n            item.index = ++sellingList.length;\r\n            sellingList[item.index - 1] = _itemId;\r\n        }\r\n    }\r\n    \r\n    function removeBorrowingItem(uint _itemId) onlyModerators external {\r\n        BorrowItem storage item = borrowingDict[_itemId];\r\n        if (item.index == 0)\r\n            return;\r\n        \r\n        if (item.index <= borrowingList.length) {\r\n            // Move an existing element into the vacated key slot.\r\n            borrowingDict[borrowingList[borrowingList.length-1]].index = item.index;\r\n            borrowingList[item.index-1] = borrowingList[borrowingList.length-1];\r\n            borrowingList.length -= 1;\r\n            delete borrowingDict[_itemId];\r\n        }\r\n    }\r\n\r\n    function addBorrowingItem(address _owner, uint _itemId, uint _price, address _borrower, bool _lent, uint _releaseTime, uint _createTime) onlyModerators external {\r\n        BorrowItem storage item = borrowingDict[_itemId];\r\n        item.owner = _owner;\r\n        item.borrower = _borrower;\r\n        item.price = _price;\r\n        item.lent = _lent;\r\n        item.releaseTime = _releaseTime;\r\n        item.createTime = _createTime;\r\n        \r\n        if (item.index == 0) {\r\n            item.index = ++borrowingList.length;\r\n            borrowingList[item.index - 1] = _itemId;\r\n        }\r\n    }\r\n    \r\n    function addItemLendingList(address _trainer, uint _objId) onlyModerators external {\r\n        lendingList[_trainer].push(_objId);\r\n    }\r\n    \r\n    function removeItemLendingList(address _trainer, uint _objId) onlyModerators external {\r\n        uint foundIndex = 0;\r\n        uint[] storage objList = lendingList[_trainer];\r\n        for (; foundIndex < objList.length; foundIndex++) {\r\n            if (objList[foundIndex] == _objId) {\r\n                break;\r\n            }\r\n        }\r\n        if (foundIndex < objList.length) {\r\n            objList[foundIndex] = objList[objList.length-1];\r\n            delete objList[objList.length-1];\r\n            objList.length--;\r\n        }\r\n    }\r\n\r\n    // read access\r\n    function isOnBorrow(uint _objId) constant external returns(bool) {\r\n        return (borrowingDict[_objId].index > 0);\r\n    }\r\n    \r\n    function isOnSell(uint _objId) constant external returns(bool) {\r\n        return (sellingDict[_objId].index > 0);\r\n    }\r\n    \r\n    function isOnLent(uint _objId) constant external returns(bool) {\r\n        return borrowingDict[_objId].lent;\r\n    }\r\n    \r\n    function getSellPrice(uint _objId) constant external returns(uint) {\r\n        return sellingDict[_objId].price;\r\n    }\r\n    \r\n    function isOnTrade(uint _objId) constant external returns(bool) {\r\n        return ((borrowingDict[_objId].index > 0) || (sellingDict[_objId].index > 0)); \r\n    }\r\n    \r\n    function getBorrowBasicInfo(uint _objId) constant external returns(address owner, bool lent) {\r\n        BorrowItem storage borrowItem = borrowingDict[_objId];\r\n        return (borrowItem.owner, borrowItem.lent);\r\n    }\r\n    \r\n    function getBorrowInfo(uint _objId) constant external returns(uint index, address owner, address borrower, uint price, bool lent, uint createTime, uint releaseTime) {\r\n        BorrowItem storage borrowItem = borrowingDict[_objId];\r\n        return (borrowItem.index, borrowItem.owner, borrowItem.borrower, borrowItem.price, borrowItem.lent, borrowItem.createTime, borrowItem.releaseTime);\r\n    }\r\n    \r\n    function getSellInfo(uint _objId) constant external returns(uint index, uint price, uint createTime) {\r\n        SellingItem storage item = sellingDict[_objId];\r\n        return (item.index, item.price, item.createTime);\r\n    }\r\n    \r\n    function getTotalSellingItem() constant external returns(uint) {\r\n        return sellingList.length;\r\n    }\r\n    \r\n    function getTotalBorrowingItem() constant external returns(uint) {\r\n        return borrowingList.length;\r\n    }\r\n    \r\n    function getTotalLendingItem(address _trainer) constant external returns(uint) {\r\n        return lendingList[_trainer].length;\r\n    }\r\n    \r\n    function getSellingInfoByIndex(uint _index) constant external returns(uint objId, uint price, uint createTime) {\r\n        objId = sellingList[_index];\r\n        SellingItem storage item = sellingDict[objId];\r\n        price = item.price;\r\n        createTime = item.createTime;\r\n    }\r\n    \r\n    function getBorrowInfoByIndex(uint _index) constant external returns(uint objId, address owner, address borrower, uint price, bool lent, uint createTime, uint releaseTime) {\r\n        objId = borrowingList[_index];\r\n        BorrowItem storage borrowItem = borrowingDict[objId];\r\n        return (objId, borrowItem.owner, borrowItem.borrower, borrowItem.price, borrowItem.lent, borrowItem.createTime, borrowItem.releaseTime);\r\n    }\r\n    \r\n    function getLendingObjId(address _trainer, uint _index) constant external returns(uint) {\r\n        return lendingList[_trainer][_index];\r\n    }\r\n    \r\n    function getLendingInfo(address _trainer, uint _index) constant external returns(uint objId, address owner, address borrower, uint price, bool lent, uint createTime, uint releaseTime) {\r\n        objId = lendingList[_trainer][_index];\r\n        BorrowItem storage borrowItem = borrowingDict[objId];\r\n        return (objId, borrowItem.owner, borrowItem.borrower, borrowItem.price, borrowItem.lent, borrowItem.createTime, borrowItem.releaseTime);\r\n    }\r\n    \r\n    function getTradingInfo(uint _objId) constant external returns(uint sellingPrice, uint lendingPrice, bool lent, uint releaseTime, address owner, address borrower) {\r\n        SellingItem storage item = sellingDict[_objId];\r\n        sellingPrice = item.price;\r\n        BorrowItem storage borrowItem = borrowingDict[_objId];\r\n        lendingPrice = borrowItem.price;\r\n        lent = borrowItem.lent;\r\n        releaseTime = borrowItem.releaseTime;\r\n        owner = borrowItem.owner;\r\n        borrower = borrower;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getTotalBorrowingItem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"removeSellingItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"getBorrowInfo\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"lent\",\"type\":\"bool\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"}],\"name\":\"getTotalLendingItem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowingDict\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"lent\",\"type\":\"bool\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellingDict\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"removeBorrowingItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"isOnLent\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getSellingInfoByIndex\",\"outputs\":[{\"name\":\"objId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"UpdateMaintaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getLendingInfo\",\"outputs\":[{\"name\":\"objId\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"lent\",\"type\":\"bool\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalModerators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"addItemLendingList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"isOnSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalSellingItem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newModerator\",\"type\":\"address\"}],\"name\":\"AddModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"removeItemLendingList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getLendingObjId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellingList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"isOnBorrow\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBorrowInfoByIndex\",\"outputs\":[{\"name\":\"objId\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"lent\",\"type\":\"bool\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_lent\",\"type\":\"bool\"},{\"name\":\"_releaseTime\",\"type\":\"uint256\"},{\"name\":\"_createTime\",\"type\":\"uint256\"}],\"name\":\"addBorrowingItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowingList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldModerator\",\"type\":\"address\"}],\"name\":\"RemoveModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"getTradingInfo\",\"outputs\":[{\"name\":\"sellingPrice\",\"type\":\"uint256\"},{\"name\":\"lendingPrice\",\"type\":\"uint256\"},{\"name\":\"lent\",\"type\":\"bool\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"borrower\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"getBorrowBasicInfo\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"lent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lendingList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"getSellInfo\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintaining\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_createTime\",\"type\":\"uint256\"}],\"name\":\"addSellingItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objId\",\"type\":\"uint256\"}],\"name\":\"isOnTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EtheremonTradeData","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bff0bcdd3f73c744023897ea0d5a4d5df8bacab4e2fc092351148939fb05af1e"}]}