{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// Professor Rui-Shan Lu Team\r\n// Rs Lu  <rslu2000@gmail.com>\r\n// Lursun <lursun914013@gmail.com>\r\n\r\ncontract ERC20{\r\n    function transfer(address _to, uint256 _value) public;\r\n    function transferFrom(address _from, address _to, uint256 _value) public;\r\n    function approve(address spender, uint tokens) public;\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"msg.sender != owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract MultiTransfer is Owned {\r\n    constructor() Owned() public {}\r\n    event MultiTransferEvent(address tokenContract, uint amount);\r\n    function send(ERC20 ercContract,address[] memory addresses, uint[] memory values, function(ERC20, address, uint) func) private {\r\n        require(addresses.length == values.length, \"addresses.length != values.length\");\r\n        // require(addresses.length <= 255, \"too many people\");\r\n        uint amount;\r\n        \r\n        for (uint64 i = 0; i < addresses.length; i++) {\r\n            amount += values[i];\r\n            func(ercContract, addresses[i],values[i]);\r\n        }\r\n        emit MultiTransferEvent(ercContract, amount);\r\n    }\r\n    function ethTransfer(ERC20 ercContract, address target, uint amount) private {\r\n        target.transfer(amount);\r\n    }\r\n    function transfer(ERC20 ercContract, address target, uint amount) private {\r\n        ercContract.transfer(target, amount);\r\n    }\r\n    function transferFrom(ERC20 ercContract, address target, uint amount) private {\r\n        ercContract.transferFrom(msg.sender, target, amount);\r\n    }\r\n    \r\n    function mutiEthTransfer(address[] addresses, uint[] values) external payable{\r\n        send(ERC20(0x0), addresses, values, ethTransfer);\r\n        if (address(this).balance > 0) {\r\n            ethTransfer(ERC20(0x0), msg.sender, address(this).balance);\r\n        }\r\n    }\r\n    \r\n    function mutiTransfer(ERC20 tokenContract, address[] addresses, uint[] values) external onlyOwner {\r\n        send(tokenContract, addresses, values, transfer);\r\n    }\r\n    \r\n    function mutiTransferFrom(ERC20 tokenContract, address[] addresses, uint[] values) external {\r\n        send(tokenContract, addresses, values, transferFrom);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"mutiTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"mutiEthTransfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"mutiTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MultiTransferEvent\",\"type\":\"event\"}]","ContractName":"MultiTransfer","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c1d5691c2ceadbc79a8a21be208319caba220402ef9afc58f052cd6353a337d1"}]}