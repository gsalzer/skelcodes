{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * The PlutoCommyLotto contract is a communist bidding/lottery system. It shares 80% of the prize with everyone who didn't win. The winner gets 20%.\r\n */\r\ncontract PlutoCommyLotto {\r\n\r\n\taddress public maintenanceFunds; //holds capital for reinvestment in case there's no activity for too long.\r\n\r\n\tuint public currentCicle = 0;\r\n\tuint public numBlocksForceEnd = 5760;//5760;\r\n\tuint public jackpotPossibilities = 5000000;//5000000;\r\n\tuint public winnerPct = 20; //20%\r\n\tuint public commyPct = 80; //80%\r\n\tuint public lastJackpotResult; //for easy auditing.\r\n\r\n\tuint private costIncrementNormal = 5; //0.5%\r\n\tuint private idealReserve = 60 finney;\r\n\tuint private minTicketCost = 1 finney / 10;\r\n\tuint private baseTicketProportion = 30;\r\n\tuint private maintenanceTickets = 50;\r\n\t\r\n\tstruct Cicle {\r\n\t\tmapping (address => uint) ticketsByHash;\r\n\t\taddress lastPlayer;\r\n\t\tuint number; \r\n\t\tuint initialBlock;\r\n\t\tuint numTickets;\r\n\t\tuint currentTicketCost;\r\n\t\tuint lastJackpotChance;\r\n\t\tuint winnerPot; \r\n\t\tuint commyPot; \r\n\t\tuint commyReward;\r\n\t\tuint lastBetBlock;\r\n\t\tbool isActive;\r\n\t}\r\n\r\n\tmapping (uint => Cicle) public cicles;\r\n\r\n\t//////////###########//////////\r\n\tmodifier onlyInitOnce() { \r\n\t\trequire(currentCicle == 0); \r\n\t\t_; \r\n\t}\r\n\tmodifier onlyLastPlayer(uint cicleNumber) { \r\n\t\trequire(msg.sender == cicles[cicleNumber].lastPlayer); \r\n\t\t_; \r\n\t}\r\n\tmodifier onlyIfNoActivity(uint cicleNumber) { \r\n\t\trequire(block.number - cicles[cicleNumber].lastBetBlock > numBlocksForceEnd);\r\n\t\t_; \r\n\t}\r\n\tmodifier onlyActiveCicle(uint cicleNumber) { \r\n\t\trequire(cicles[cicleNumber].isActive == true);\r\n\t\t_; \r\n\t}\r\n\tmodifier onlyInactiveCicle(uint cicleNumber) { \r\n\t\trequire(cicles[cicleNumber].isActive == false);\r\n\t\t_; \r\n\t}\r\n\tmodifier onlyWithTickets(uint cicleNumber) { \r\n\t\trequire(cicles[cicleNumber].ticketsByHash[msg.sender] > 0);\r\n\t\t_; \r\n\t}\r\n\tmodifier onlyValidCicle(uint cicleNumber) { \r\n\t\trequire(cicleNumber <= currentCicle);\r\n\t\t_; \r\n\t}\r\n\t//////////###########//////////\r\n\r\n\tfunction init() public payable onlyInitOnce() {\r\n\t\tmaintenanceFunds = msg.sender;\r\n\t\tcreateNewCicle();\r\n\t\t\r\n\t\tidealReserve = msg.value;\r\n\r\n\t\tuint winnerVal = msg.value * winnerPct / 100;\r\n\t\tcicles[currentCicle].winnerPot += winnerVal;\r\n\t\tcicles[currentCicle].commyPot += msg.value - winnerVal;\r\n\t\tcicles[currentCicle].currentTicketCost = ((cicles[currentCicle].winnerPot + cicles[currentCicle].commyPot) / baseTicketProportion);\r\n\t\t\r\n\t\tsetCommyReward(currentCicle);\r\n\t}\r\n\r\n\tevent NewCicle(uint indexed cicleNumber, uint firstBlock);\r\n\tfunction createNewCicle() private {\r\n\t\tcurrentCicle += 1;\r\n\t\tcicles[currentCicle] = Cicle({ number:currentCicle,\r\n\t\t\t\t\t\t\t\t\tinitialBlock:block.number,\r\n\t\t\t\t\t\t\t\t\tnumTickets:maintenanceTickets,\r\n\t\t\t\t\t\t\t\t\tlastPlayer:maintenanceFunds,\r\n\t\t\t\t\t\t\t\t\tlastJackpotChance:0,\r\n\t\t\t\t\t\t\t\t\tlastBetBlock:block.number,\r\n\t\t\t\t\t\t\t\t\twinnerPot:0,\r\n\t\t\t\t\t\t\t\t\tcommyPot:0,\r\n\t\t\t\t\t\t\t\t\tcommyReward:0,\r\n\t\t\t\t\t\t\t\t\tcurrentTicketCost:0,\r\n\t\t\t\t\t\t\t\t\tisActive:false });\r\n\r\n\t\tcicles[currentCicle].ticketsByHash[maintenanceFunds] = maintenanceTickets;\r\n\r\n\t\tif(currentCicle != 1) {\r\n\t\t\tcicles[currentCicle-1].ticketsByHash[maintenanceFunds] = 0;\r\n\t\t\tif (cicles[currentCicle-1].commyReward * maintenanceTickets > idealReserve) {\r\n\t\t\t\tcicles[currentCicle].winnerPot = idealReserve * winnerPct / 100;\r\n\t\t\t\tcicles[currentCicle].commyPot = idealReserve * commyPct / 100;\r\n\t\t\t\tmaintenanceFunds.transfer(cicles[currentCicle-1].commyReward * maintenanceTickets - idealReserve);\r\n\t\t\t} else {\r\n\t\t\t\tif(cicles[currentCicle-1].numTickets == maintenanceTickets) {\r\n\t\t\t\t\tcicles[currentCicle].winnerPot = cicles[currentCicle-1].winnerPot;\r\n\t\t\t\t\tcicles[currentCicle].commyPot = cicles[currentCicle-1].commyPot;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcicles[currentCicle].winnerPot = (cicles[currentCicle-1].commyReward * maintenanceTickets) * winnerPct / 100;\r\n\t\t\t\t\tcicles[currentCicle].commyPot = (cicles[currentCicle-1].commyReward * maintenanceTickets) * commyPct / 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetCommyReward(currentCicle);\r\n\t\t\tcicles[currentCicle].currentTicketCost = (cicles[currentCicle].winnerPot + cicles[currentCicle].commyPot) / baseTicketProportion;\r\n\t\t\tif(cicles[currentCicle].currentTicketCost < minTicketCost) {\r\n\t\t\t\tcicles[currentCicle].currentTicketCost = minTicketCost;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t\tcicles[currentCicle].isActive = true;\r\n\t\temit NewCicle(currentCicle, block.number);\r\n\t}\r\n\r\n\tfunction setCommyReward(uint cicleNumber) private {\r\n\t\tcicles[cicleNumber].commyReward = cicles[cicleNumber].commyPot / (cicles[cicleNumber].numTickets-1);\r\n\t}\r\n\r\n\tevent NewBet(uint indexed cicleNumber, address indexed player, uint instantPrize, uint jackpotChance, uint jackpotResult, bool indexed hasHitJackpot);\r\n\tfunction bet() public payable {\r\n\t\trequire (msg.value >= cicles[currentCicle].currentTicketCost);\r\n\r\n\t\tcicles[currentCicle].lastBetBlock = block.number;\r\n\t\tcicles[currentCicle].ticketsByHash[msg.sender] += 1;\r\n\r\n\t\tuint commyVal = cicles[currentCicle].currentTicketCost * commyPct / 100;\r\n\t\tcicles[currentCicle].winnerPot += msg.value - commyVal;\r\n\t\tcicles[currentCicle].commyPot += commyVal;\r\n\t\tcicles[currentCicle].numTickets += 1;\r\n\t\tcicles[currentCicle].currentTicketCost += cicles[currentCicle].currentTicketCost * costIncrementNormal / 1000;\r\n\t\tcicles[currentCicle].lastJackpotChance = block.number - cicles[currentCicle].initialBlock;\r\n\t\tcicles[currentCicle].lastPlayer = msg.sender;\r\n\t\tsetCommyReward(currentCicle);\r\n\r\n\t\tif(getJackpotResult(currentCicle) == true)\r\n\t\t{\r\n\t\t\temit NewBet(currentCicle, cicles[currentCicle].lastPlayer, cicles[currentCicle].winnerPot, cicles[currentCicle].lastJackpotChance, lastJackpotResult, true);\r\n\t\t\tendCicle(currentCicle, true);\r\n\t\t} else {\r\n\t\t\temit NewBet(currentCicle, msg.sender, 0, cicles[currentCicle].lastJackpotChance, lastJackpotResult, false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getJackpotResult(uint cicleNumber) private returns (bool isWinner) {\r\n\t\tlastJackpotResult = uint(blockhash(block.number-1)) % jackpotPossibilities;\r\n\r\n\t\tif(lastJackpotResult < cicles[cicleNumber].lastJackpotChance) {\r\n\t\t\tisWinner = true;\r\n\t\t}\r\n\t}\r\n\r\n\tevent CicleEnded(uint indexed cicleNumber, address winner, uint winnerPrize, uint commyReward, uint lastBlock, bool jackpotVictory);\r\n\tfunction endCicle(uint cicleNumber, bool jackpotVictory) private {\r\n\t\tcicles[cicleNumber].isActive = false;\r\n\t\temit CicleEnded(cicleNumber, cicles[cicleNumber].lastPlayer, cicles[cicleNumber].winnerPot, cicles[cicleNumber].commyReward, block.number, jackpotVictory);\r\n\t\tcreateNewCicle();\r\n\t}\r\n\r\n\tfunction finishByInactivity(uint cicleNumber) public onlyIfNoActivity(cicleNumber) onlyActiveCicle(cicleNumber){\r\n\t\tendCicle(cicleNumber, false);\r\n\t}\r\n\r\n\tfunction withdraw(uint cicleNumber) public onlyValidCicle(cicleNumber) onlyInactiveCicle(cicleNumber) onlyWithTickets(cicleNumber) {\r\n\t\tuint numTickets = cicles[cicleNumber].ticketsByHash[msg.sender];\t\t\t\r\n\t\tcicles[cicleNumber].ticketsByHash[msg.sender] = 0;\r\n\r\n\t\tif(msg.sender != cicles[cicleNumber].lastPlayer){\r\n\t\t\tmsg.sender.transfer(cicles[cicleNumber].commyReward * numTickets);\r\n\t\t} else {\r\n\t\t\tif(numTickets == 1){\r\n\t\t\t\tmsg.sender.transfer(cicles[cicleNumber].winnerPot);\r\n\t\t\t} else {\r\n\t\t\t\tmsg.sender.transfer(cicles[cicleNumber].winnerPot + (cicles[cicleNumber].commyReward * (numTickets - 1)));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction claimPrizeByInactivity(uint cicleNumber) public onlyValidCicle(cicleNumber) onlyActiveCicle(cicleNumber) onlyIfNoActivity(cicleNumber) onlyLastPlayer(cicleNumber) {\r\n\t\tendCicle(cicleNumber, false);\r\n\t\twithdraw(cicleNumber);\r\n\t}\r\n\r\n\t//////\r\n\t//Getters for dapp:\r\n\tfunction getCicle(uint cicleNumber) public view returns (address lastPlayer,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint number,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint initialBlock,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint numTickets,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint currentTicketCost,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint lastJackpotChance,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint winnerPot,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint commyPot,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint commyReward,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuint lastBetBlock,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbool isActive){\r\n\t\tCicle memory myCurrentCicle = cicles[cicleNumber];\r\n\r\n\t\treturn (myCurrentCicle.lastPlayer,\r\n\t\t\t\tmyCurrentCicle.number,\r\n\t\t\t\tmyCurrentCicle.initialBlock,\r\n\t\t\t\tmyCurrentCicle.numTickets,\r\n\t\t\t\tmyCurrentCicle.currentTicketCost,\r\n\t\t\t\tmyCurrentCicle.lastJackpotChance,\r\n\t\t\t\tmyCurrentCicle.winnerPot,\r\n\t\t\t\tmyCurrentCicle.commyPot,\r\n\t\t\t\tmyCurrentCicle.commyReward,\r\n\t\t\t\tmyCurrentCicle.lastBetBlock,\r\n\t\t\t\tmyCurrentCicle.isActive);\r\n\t}\r\n\r\n\tfunction getMyTickets(address myAddress, uint cicleNumber) public view returns (uint myTickets) {\r\n\t\treturn cicles[cicleNumber].ticketsByHash[myAddress];\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cicleNumber\",\"type\":\"uint256\"}],\"name\":\"getCicle\",\"outputs\":[{\"name\":\"lastPlayer\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"},{\"name\":\"initialBlock\",\"type\":\"uint256\"},{\"name\":\"numTickets\",\"type\":\"uint256\"},{\"name\":\"currentTicketCost\",\"type\":\"uint256\"},{\"name\":\"lastJackpotChance\",\"type\":\"uint256\"},{\"name\":\"winnerPot\",\"type\":\"uint256\"},{\"name\":\"commyPot\",\"type\":\"uint256\"},{\"name\":\"commyReward\",\"type\":\"uint256\"},{\"name\":\"lastBetBlock\",\"type\":\"uint256\"},{\"name\":\"isActive\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cicleNumber\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maintenanceFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"myAddress\",\"type\":\"address\"},{\"name\":\"cicleNumber\",\"type\":\"uint256\"}],\"name\":\"getMyTickets\",\"outputs\":[{\"name\":\"myTickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cicleNumber\",\"type\":\"uint256\"}],\"name\":\"finishByInactivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerPct\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numBlocksForceEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commyPct\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastJackpotResult\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpotPossibilities\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCicle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cicleNumber\",\"type\":\"uint256\"}],\"name\":\"claimPrizeByInactivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cicles\",\"outputs\":[{\"name\":\"lastPlayer\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"},{\"name\":\"initialBlock\",\"type\":\"uint256\"},{\"name\":\"numTickets\",\"type\":\"uint256\"},{\"name\":\"currentTicketCost\",\"type\":\"uint256\"},{\"name\":\"lastJackpotChance\",\"type\":\"uint256\"},{\"name\":\"winnerPot\",\"type\":\"uint256\"},{\"name\":\"commyPot\",\"type\":\"uint256\"},{\"name\":\"commyReward\",\"type\":\"uint256\"},{\"name\":\"lastBetBlock\",\"type\":\"uint256\"},{\"name\":\"isActive\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cicleNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"firstBlock\",\"type\":\"uint256\"}],\"name\":\"NewCicle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cicleNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"instantPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpotChance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpotResult\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"hasHitJackpot\",\"type\":\"bool\"}],\"name\":\"NewBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"cicleNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winnerPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"commyReward\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lastBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpotVictory\",\"type\":\"bool\"}],\"name\":\"CicleEnded\",\"type\":\"event\"}]","ContractName":"PlutoCommyLotto","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7f5b58c02d7b81964445ccda85073c77af18c51c43b4e53c6c6762eef7d6dbb8"}]}