{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract BitcoinCrack{\r\n    string public symbol = \"BTCC\";\r\n    string public name = \"BitcoinCrack\";\r\n    uint8 public constant decimals = 8;\r\n    uint256 _totalSupply = 0;\r\n\tuint256 _maxTotalSupply = 2100000000000000;\r\n\tuint256 _adminsupply = 500000000000000;//Admin Supply of 5 Million Coins\r\n\tuint256 _miningReward = 10000000000; //1 BTCC - To be halved every 4 years\r\n\tuint256 _maxMiningReward = 1000000000000; //50 BTCC - To be halved every 4 years\r\n\tuint256 _rewardHalvingTimePeriod = 126227704; //4 years\r\n\tuint256 _nextRewardHalving = now + _rewardHalvingTimePeriod;\r\n\tuint256 _rewardTimePeriod = 6000; //5 minutes\r\n\tuint256 _AdminSupplyTime = 6000; //10 minutes\r\n\tuint256 _currentTime = now; //10 minutes\r\n\tuint256 _AdminSupplyEnd = now + _AdminSupplyTime; //10 minutes\r\n\tuint256 _rewardStart = now;\r\n\tuint256 _rewardEnd = now + _rewardTimePeriod;\r\n\tuint256 _currentMined = 0;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n \r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n \r\n    function totalSupply() public constant returns (uint256) {        \r\n\t\treturn _totalSupply;\r\n    }\r\n \r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n   function AdminSupply() public returns (bool success)\r\n\t{\r\n\t\tif (now < _AdminSupplyEnd)\r\n\t\t{\r\n\t\t\tbalances[msg.sender] += _adminsupply;\r\n\t\t\t_currentMined += _adminsupply;\r\n\t\t\t_totalSupply += _adminsupply;\r\n\t\t\tTransfer(this, msg.sender, _adminsupply);\r\n\t\t\treturn true;\r\n\t\t}\t\t\t\t\r\n\t\treturn false;\r\n\t}\r\n     \r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) public returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\t\r\n\tfunction Mine() public returns (bool success)\r\n\t{\r\n\t\tif (now < _rewardEnd && _currentMined >= _maxMiningReward)\r\n\t\t\trevert();\r\n\t\telse if (now >= _rewardEnd)\r\n\t\t{\r\n\t\t\t_rewardStart = now;\r\n\t\t\t_rewardEnd = now + _rewardTimePeriod;\r\n\t\t\t_currentMined = 0;\r\n\t\t}\r\n\t\r\n\t\tif (now >= _nextRewardHalving)\r\n\t\t{\r\n\t\t\t_nextRewardHalving = now + _rewardHalvingTimePeriod;\r\n\t\t\t_miningReward = _miningReward / 2;\r\n\t\t\t_maxMiningReward = _maxMiningReward / 2;\r\n\t\t\t_currentMined = 0;\r\n\t\t\t_rewardStart = now;\r\n\t\t\t_rewardEnd = now + _rewardTimePeriod;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ((_currentMined < _maxMiningReward) && (_totalSupply < _maxTotalSupply))\r\n\t\t{\r\n\t\t\tbalances[msg.sender] += _miningReward;\r\n\t\t\t_currentMined += _miningReward;\r\n\t\t\t_totalSupply += _miningReward;\r\n\t\t\tTransfer(this, msg.sender, _miningReward);\r\n\t\t\treturn true;\r\n\t\t}\t\t\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tfunction MaxTotalSupply() public constant returns(uint256)\r\n\t{\r\n\t\treturn _maxTotalSupply;\r\n\t}\r\n\t\r\n\tfunction MiningReward() public constant returns(uint256)\r\n\t{\r\n\t\treturn _miningReward;\r\n\t}\r\n\t\r\n\tfunction MaxMiningReward() public constant returns(uint256)\r\n\t{\r\n\t\treturn _maxMiningReward;\r\n\t}\r\n\t\r\n\tfunction RewardHalvingTimePeriod() public constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardHalvingTimePeriod;\r\n\t}\r\n\t\r\n\tfunction NextRewardHalving() public constant returns(uint256)\r\n\t{\r\n\t\treturn _nextRewardHalving;\r\n\t}\r\n\t\r\n\tfunction RewardTimePeriod() public constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardTimePeriod;\r\n\t}\r\n\t\r\n\tfunction RewardStart() public constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardStart;\r\n\t}\r\n\t\r\n\tfunction RewardEnd() public constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardEnd;\r\n\t}\r\n\t\r\n\tfunction CurrentMined() public constant returns(uint256)\r\n\t{\r\n\t\treturn _currentMined;\r\n\t}\r\n\t\r\n\tfunction TimeNow() public constant returns(uint256)\r\n\t{\r\n\t\treturn now;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NextRewardHalving\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Mine\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxMiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardHalvingTimePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AdminSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardTimePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentMined\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BitcoinCrack","CompilerVersion":"v0.4.20-nightly.2017.12.20+commit.efc198d5","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c0646023b2ad3006a4d5905781f1d2e474c07364401a0a7143755f9da84539e0"}]}