{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// File: contracts/proxies/Proxy.sol\r\n\r\n/// @title Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\r\n/// @author Stefan George - <stefan@gnosis.pm>\r\ncontract Proxy {\r\n\r\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    address masterCopy;\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    constructor(address _masterCopy)\r\n        public\r\n    {\r\n        require(_masterCopy != address(0), \"Invalid master copy address provided\");\r\n        masterCopy = _masterCopy;\r\n    }\r\n\r\n    /// @dev Fallback function forwards all transactions and returns all received return data.\r\n    function ()\r\n        external\r\n        payable\r\n    {\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\r\n            calldatacopy(0, 0, calldatasize())\r\n            let success := delegatecall(gas, masterCopy, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            if eq(success, 0) { revert(0, returndatasize()) }\r\n            return(0, returndatasize())\r\n        }\r\n    }\r\n\r\n    function implementation()\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        return masterCopy;\r\n    }\r\n\r\n    function proxyType()\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return 2;\r\n    }\r\n}\r\n\r\n// File: contracts/proxies/ProxyFactory.sol\r\n\r\n/// @title Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\r\n/// @author Stefan George - <stefan@gnosis.pm>\r\ncontract ProxyFactory {\r\n\r\n    event ProxyCreation(Proxy proxy);\r\n\r\n    /// @dev Allows to create new proxy contact and execute a message call to the new proxy within one transaction.\r\n    /// @param masterCopy Address of master copy.\r\n    /// @param data Payload for message call sent to new proxy contract.\r\n    function createProxy(address masterCopy, bytes memory data)\r\n        public\r\n        returns (Proxy proxy)\r\n    {\r\n        proxy = new Proxy(masterCopy);\r\n        if (data.length > 0)\r\n            // solium-disable-next-line security/no-inline-assembly\r\n            assembly {\r\n                if eq(call(gas, proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) { revert(0, 0) }\r\n            }\r\n        emit ProxyCreation(proxy);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"masterCopy\",\"type\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createProxy\",\"outputs\":[{\"name\":\"proxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"}]","ContractName":"ProxyFactory","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2914ced693ebb19d62ea55c6a52fc1a1625511ec79b836ad79f9b31b9818e4f3"}]}