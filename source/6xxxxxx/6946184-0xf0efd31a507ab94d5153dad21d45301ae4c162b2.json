{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ordchain {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 constant public ONE_HUNDRED   = 100;\r\n    uint256 constant public INTEREST      = 2;\r\n    uint256 constant public REF_PERCENT   = 5;\r\n    uint256 constant public ADMIN_FEE     = 10;\r\n    uint256 constant public PERIOD        = 1 days;\r\n    uint256 constant public MINIMUM       = 0.01 ether;\r\n\r\n    struct User {\r\n        uint256 time;\r\n        uint256 deposit;\r\n        address referrer;\r\n    }\r\n\r\n    mapping (address => User) public users;\r\n\r\n    address public admin = 0x7C55366d23c0b2AD7AeA112079AE16Ee7b85E8DE;\r\n    uint256 public start = 1546300800;\r\n\r\n    event InvestorAdded(address indexed investor);\r\n    event NewDeposit(address indexed investor, uint256 amount);\r\n    event ReferrerAdded(address indexed investor, address indexed referrer);\r\n    event RefBonusPayed(address indexed investor, address indexed referrer, uint256 bonus);\r\n    event DividendsPayed(address indexed investor, uint256 amount);\r\n\r\n    function() external payable {\r\n        if (msg.value == 0) {\r\n            withdraw();\r\n        } else {\r\n            invest();\r\n        }\r\n    }\r\n\r\n    function invest() public payable {\r\n        require(msg.value >= MINIMUM);\r\n\r\n        admin.transfer(msg.value * ADMIN_FEE / ONE_HUNDRED);\r\n\r\n        if (users[msg.sender].deposit > 0) {\r\n            withdraw();\r\n        } else {\r\n            emit InvestorAdded(msg.sender);\r\n        }\r\n\r\n        users[msg.sender].deposit += msg.value;\r\n        users[msg.sender].time = block.timestamp;\r\n\r\n        if (users[msg.sender].referrer != address(0)) {\r\n            users[msg.sender].referrer.transfer(msg.value * REF_PERCENT / ONE_HUNDRED);\r\n            emit RefBonusPayed(msg.sender, users[msg.sender].referrer, msg.value * REF_PERCENT / ONE_HUNDRED);\r\n        } else if (msg.data.length == 20) {\r\n            addReferrer();\r\n        }\r\n\r\n        emit NewDeposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint256 payout = getDividends(msg.sender);\r\n        users[msg.sender].time = block.timestamp;\r\n        msg.sender.transfer(payout);\r\n\r\n        emit DividendsPayed(msg.sender, payout);\r\n    }\r\n\r\n    function bytesToAddress(bytes source) internal pure returns(address parsedReferrer) {\r\n        assembly {\r\n            parsedReferrer := mload(add(source,0x14))\r\n        }\r\n        return parsedReferrer;\r\n    }\r\n\r\n    function addReferrer() internal {\r\n        address refAddr = bytesToAddress(bytes(msg.data));\r\n        if (refAddr != msg.sender) {\r\n            users[msg.sender].referrer = refAddr;\r\n\r\n            refAddr.transfer(msg.value * REF_PERCENT / ONE_HUNDRED);\r\n\r\n            emit ReferrerAdded(msg.sender, refAddr);\r\n            emit RefBonusPayed(msg.sender, refAddr, msg.value * REF_PERCENT / ONE_HUNDRED);\r\n        }\r\n    }\r\n\r\n    function getDaysAfterStart() external view returns(uint256) {\r\n        if (block.timestamp >= start) {\r\n            return (block.timestamp - start) / 1 days;\r\n        }\r\n    }\r\n\r\n    function getDeposit(address userAddr) public view returns(uint256) {\r\n        return users[userAddr].deposit;\r\n    }\r\n\r\n    function getDividends(address userAddr) public view returns(uint256) {\r\n        return (users[userAddr].deposit.mul(INTEREST).div(ONE_HUNDRED)).mul(block.timestamp.sub(users[userAddr].time)).div(PERIOD);\r\n    }\r\n\r\n    function getBalance() external view returns(uint256) {\r\n        return address(this).balance;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"getDividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDaysAfterStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"referrer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ONE_HUNDRED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REF_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INTEREST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"InvestorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"ReferrerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"RefBonusPayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DividendsPayed\",\"type\":\"event\"}]","ContractName":"Ordchain","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c17a7dde916660537818a682d652fa61def3fb3bd61438d924ba9001b4c9919f"}]}