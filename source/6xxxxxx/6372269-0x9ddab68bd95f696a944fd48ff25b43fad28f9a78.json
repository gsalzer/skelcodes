{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ninterface tokenRecipient { \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; \r\n    \r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n   \r\n    constructor () public{\r\n        owner = msg.sender;\r\n    }\r\n   \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n  \r\n    function transferOwnership(address newOwner) onlyOwner public{\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract token {\r\n    \r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n  \r\n    event Transfer(address indexed from, address indexed to, uint256 value);  //转帐通知事件\r\n\r\n    constructor () public{\r\n      \r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n      //避免转帐的地址是0x0\r\n      require(_to != 0x0);\r\n      //检查发送者是否拥有足够余额\r\n      require(balanceOf[_from] >= _value);\r\n      //检查是否溢出\r\n      require(balanceOf[_to] + _value > balanceOf[_to]);\r\n      //保存数据用于后面的判断\r\n      uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n      //从发送者减掉发送额\r\n      balanceOf[_from] -= _value;\r\n      //给接收者加上相同的量\r\n      balanceOf[_to] += _value;\r\n      //通知任何监听该交易的客户端\r\n      emit Transfer(_from, _to, _value);\r\n      //判断买、卖双方的数据是否和转换前一致\r\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n  \r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value)public returns (bool success) {\r\n        //检查发送者是否拥有足够余额\r\n        require(_value <= allowance[_from][msg.sender]);   // Check allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n  \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n \r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n  \r\n    \r\n}\r\n\r\ncontract SKT is owned, token {\r\n    string public name = 'KOREA TEAM'; //代币名称\r\n    string public symbol = 'SKT'; //代币符号比如'$'\r\n    uint8 public decimals = 18;  //代币单位，展示的小数点后面多少个0,和以太币一样后面是是18个0\r\n    uint256 public totalSupply; //代币总量\r\n    uint256 initialSupply =1000000;\r\n  \r\n    //是否冻结帐户的列表\r\n    mapping (address => bool) public frozenAccount;\r\n    //定义一个事件，当有资产被冻结的时候，通知正在监听事件的客户端\r\n    event FrozenFunds(address target, bool frozen);\r\n    event Burn(address indexed from, uint256 value);  //减去用户余额事件\r\n   \r\n    constructor () token () public {\r\n        //初始化总量\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);    //以太币是10^18，后面18个0，所以默认decimals是18\r\n        //给指定帐户初始化代币总量，初始化用于奖励合约创建者\r\n        //balanceOf[msg.sender] = totalSupply;\r\n        balanceOf[this] = totalSupply;\r\n        //设置合约的管理者\r\n        //if(centralMinter != 0 ) owner = centralMinter;\r\n      \r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        //避免转帐的地址是0x0\r\n        require (_to != 0x0);\r\n        //检查发送者是否拥有足够余额\r\n        require (balanceOf[_from] > _value);\r\n        //检查是否溢出\r\n        require (balanceOf[_to] + _value > balanceOf[_to]);\r\n        //检查 冻结帐户\r\n        require(!frozenAccount[_from]);\r\n        require(!frozenAccount[_to]);\r\n        //从发送者减掉发送额\r\n        balanceOf[_from] -= _value;\r\n        //给接收者加上相同的量\r\n        balanceOf[_to] += _value;\r\n        //通知任何监听该交易的客户端\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n    \r\n    function mintToken(address target, uint256 mintedAmount) onlyOwner public {\r\n        //给指定地址增加代币，同时总量也相加\r\n        balanceOf[target] += mintedAmount;\r\n        totalSupply += mintedAmount;\r\n        emit Transfer(0, this, mintedAmount);\r\n        emit Transfer(this, target, mintedAmount);\r\n    }\r\n    \r\n    function freezeAccount(address target, bool freeze) onlyOwner public {\r\n        frozenAccount[target] = freeze;\r\n        emit FrozenFunds(target, freeze);\r\n    }\r\n    \r\n    function burn(uint256 _value) public returns (bool success) {\r\n        //检查帐户余额是否大于要减去的值\r\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\r\n        //给指定帐户减去余额\r\n        balanceOf[msg.sender] -= _value;\r\n        //代币问题做相应扣除\r\n        totalSupply -= _value;\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n  \r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        //检查帐户余额是否大于要减去的值\r\n        require(balanceOf[_from] >= _value);\r\n        //检查 其他帐户 的余额是否够使用\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        //减掉代币\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        //更新总量\r\n        totalSupply -= _value;\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n    \r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"SKT","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a5f7f06874708f1e0bb3b4564f9eecd364d29647bd1e35df1b386b7698f284d4"}]}