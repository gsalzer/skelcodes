{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) { return 0; }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a + _b;\r\n    assert(c >= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n  function safeTransfer(ERC20 _token, address _to, uint256 _value) internal {\r\n    require(_token.transfer(_to, _value));\r\n  }\r\n\r\n  function safeTransferFrom(ERC20 _token, address _from, address _to, uint256 _value) internal {\r\n    require(_token.transferFrom(_from, _to, _value));\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function transfer(address _to, uint256 _value) external returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  modifier onlyOwner() { require(msg.sender == owner); _; }\r\n\r\n  constructor() public { owner = msg.sender; }\r\n\r\n  function renounceOwnership() public onlyOwner() {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner() {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract BitSongCrowdsale is Ownable{\r\n  using SafeMath for uint256;\r\n  using SafeERC20 for ERC20;\r\n\r\n  ERC20 public token;\r\n  address public wallet;\r\n  uint256 public rate;\r\n  uint256 public weiRaised;\r\n  address public kycAdmin;\r\n  uint256 public hardCap;\r\n  uint256 public tokensAllocated;\r\n  uint256 public openingTime;\r\n  uint256 public closingTime;\r\n  uint256 public duration;\r\n\r\n  mapping(address => bool) public approvals;\r\n  mapping(address => uint256) public balances;\r\n\r\n  event TokenPurchase(address indexed purchaser, uint256 value, uint256 amount);\r\n  event KycApproved(address indexed beneficiary, address indexed admin, bool status);\r\n  event KycRefused(address indexed beneficiary, address indexed admin, bool status);\r\n\r\n  modifier onlyKycAdmin() { require(msg.sender == kycAdmin); _; }\r\n  modifier onlyWhileOpen { require(block.timestamp >= openingTime && block.timestamp <= closingTime); _; }\r\n\r\n  constructor(uint256 _rate, address _wallet, uint256 _duration, uint256 _hardCap, ERC20 _tokenAddress) public {\r\n    require(_rate > 0);\r\n    require(_wallet != address(0));\r\n    require(_tokenAddress != address(0));\r\n\r\n    rate = _rate;\r\n    wallet = _wallet;\r\n    token = _tokenAddress;\r\n    hardCap = _hardCap * 10**18;\r\n    duration = _duration * 1 days;\r\n  }\r\n\r\n  function () external payable {\r\n    buyTokens();\r\n  }\r\n\r\n  function buyTokens() public onlyWhileOpen() payable {\r\n    require(msg.value > 0);\r\n    require(approvals[msg.sender] == true);\r\n    uint256 weiAmount = msg.value;\r\n    uint256 tokenAmount = weiAmount.mul(rate);\r\n    tokensAllocated = tokensAllocated.add(tokenAmount);\r\n    assert(tokensAllocated <= hardCap);\r\n    weiRaised = weiRaised.add(weiAmount);\r\n    balances[msg.sender] = balances[msg.sender].add(tokenAmount);\r\n    emit TokenPurchase(msg.sender, weiAmount, tokenAmount);\r\n    wallet.transfer(msg.value);\r\n  }\r\n\r\n  function withdrawTokens() external {\r\n    require(hasClosed());\r\n    uint256 amount = balances[msg.sender];\r\n    require(amount > 0);\r\n    balances[msg.sender] = 0;\r\n    token.safeTransferFrom(wallet, msg.sender, amount);\r\n  }\r\n\r\n  function withdrawTokensFor(address _beneficiary) external {\r\n    require(hasClosed());\r\n    uint256 amount = balances[_beneficiary];\r\n    require(amount > 0);\r\n    balances[_beneficiary] = 0;\r\n    token.safeTransferFrom(wallet, _beneficiary, amount);\r\n  }\r\n\r\n  function hasClosed() public view returns (bool) {\r\n    return block.timestamp > closingTime;\r\n  }\r\n\r\n  function approveAddress(address _beneficiary) external onlyKycAdmin() {\r\n    approvals[_beneficiary] = true;\r\n    emit KycApproved(_beneficiary, kycAdmin, true);\r\n  }\r\n\r\n  function refuseAddress(address _beneficiary) external onlyKycAdmin() {\r\n    approvals[_beneficiary] = false;\r\n    emit KycRefused(_beneficiary, kycAdmin, false);\r\n  }\r\n\r\n  function rewardManual(address _beneficiary, uint256 _amount) external onlyOwner() {\r\n    require(_amount > 0);\r\n    require(_beneficiary != address(0));\r\n    tokensAllocated = tokensAllocated.add(_amount);\r\n    assert(tokensAllocated <= hardCap);\r\n    balances[_beneficiary] = balances[_beneficiary].add(_amount);\r\n  }\r\n\r\n  function transfer(address _beneficiary, uint256 _amount) external onlyOwner() {\r\n    require(_amount > 0);\r\n    require(_beneficiary != address(0));\r\n    token.safeTransfer(_beneficiary, _amount);\r\n  }\r\n\r\n  function setKycAdmin(address _newAdmin) external onlyOwner() {\r\n    kycAdmin = _newAdmin;\r\n  }\r\n\r\n  function startDistribution() external onlyOwner() {\r\n    require(openingTime == 0);\r\n    openingTime = block.timestamp;\r\n    closingTime = openingTime.add(duration);\r\n  }\r\n\r\n  function setRate(uint256 _newRate) external onlyOwner() {\r\n    rate = _newRate;\r\n  }\r\n\r\n  function setClosingTime(uint256 _newTime) external onlyOwner() {\r\n    closingTime = _newTime;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rewardManual\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setKycAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTime\",\"type\":\"uint256\"}],\"name\":\"setClosingTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"refuseAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawTokensFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kycAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"approveAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"KycApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"KycRefused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BitSongCrowdsale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000002c1a0000000000000000000000008519460ed53eb34be8f4fd2d496198f4d699db8d000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000005079687d35b93538cbd59fe5596380cae9054a9","Library":"","SwarmSource":"bzzr://1c501b4f05d710d0c688ae09e67b72d514c13a133ce017443914982983e751a5"}]}