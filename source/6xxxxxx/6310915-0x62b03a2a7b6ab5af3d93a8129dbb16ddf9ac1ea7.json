{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n}\r\n\r\ncontract IERC20 {\r\n      function totalSupply() public constant returns (uint256);\r\n      function balanceOf(address _owner) public constant returns (uint balance);\r\n      function transfer(address _to, uint _value) public returns (bool success);\r\n      function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n      function approve(address _spender, uint _value) public returns (bool success);\r\n      function allowance(address _owner, address _spender) public constant returns (uint remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n }\r\n \r\ncontract Brightwood is IERC20 {\r\n    \r\n       using SafeMath for uint256;\r\n       \r\n       uint public _totalSupply = 0;\r\n       \r\n       bool public executed = false;\r\n       \r\n       address public owner;\r\n       string public symbol;\r\n       string public name;\r\n       uint8 public decimals;\r\n       uint256 public RATE;\r\n       \r\n       mapping(address => uint256) balances;\r\n       mapping(address => mapping(address => uint256)) allowed;\r\n       \r\n       function () public payable {\r\n           createTokens();\r\n       }\r\n       \r\n       constructor (string _symbol, string _name, uint8 _decimals, uint256 _RATE) public {\r\n           owner = msg.sender;\r\n           symbol = _symbol;\r\n           name = _name;\r\n           decimals = _decimals;\r\n           RATE = _RATE;\r\n       }\r\n       \r\n       function createTokens() public payable {\r\n           require(msg.value > 0);\r\n           uint256 tokens = msg.value.mul(RATE);\r\n           _totalSupply = _totalSupply.add(tokens);\r\n           balances[msg.sender] = balances[msg.sender].add(tokens);\r\n           owner.transfer(msg.value);\r\n\t\t   executed = true;\r\n       }\r\n       \r\n       function totalSupply() public constant returns (uint256) {\r\n           return _totalSupply;\r\n       }\r\n       \r\n       function balanceOf (address _owner) public constant returns (uint256) {\r\n           return balances[_owner];\r\n       }\r\n       \r\n       function transfer(address _to, uint256 _value) public returns (bool) {\r\n           require(balances[msg.sender] >= _value && _value > 0);\r\n           balances[msg.sender] = balances[msg.sender].sub(_value);\r\n           balances[_to] = balances[_to].add(_value);\r\n           emit Transfer(msg.sender, _to, _value);\r\n           return true;\r\n       }\r\n       \r\n       function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n           require (allowed[_from][msg.sender] >= _value && balances[_from] >= _value && _value > 0);\r\n           balances[_from] = balances[_from].sub(_value);\r\n           balances[_to] = balances[_to].add(_value);\r\n           allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n           emit Transfer(_from, _to, _value);\r\n           return true;\r\n       }\r\n       \r\n       function approve (address _spender, uint256 _value) public returns (bool) {\r\n           allowed[msg.sender][_spender] = _value;\r\n           emit Approval(msg.sender, _spender, _value);\r\n           return true;\r\n       }\r\n       \r\n       function allowance(address _owner, address _spender) public constant returns (uint256) {\r\n           return allowed[_owner][_spender];\r\n       }\r\n       \r\n       event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n       event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_RATE\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Brightwood","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000342574e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a427269676874776f6f6400000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d83f8aaf779bc285a52ca55d8675ff525c7026b90e4cdb1f186c47116ea1cceb"}]}