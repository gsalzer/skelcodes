{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract IMigrationContract {\r\n    function migrate(address addr, uint256 nas) public returns (bool success);\r\n}\r\n\r\n/* 灵感来自于NAS  coin*/\r\ncontract SafeMath {\r\n    function safeAdd(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        uint256 z = x + y;\r\n        assert((z >= x) && (z >= y));\r\n        return z;\r\n    }\r\n\r\n    function safeSubtract(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        assert(x >= y);\r\n        uint256 z = x - y;\r\n        return z;\r\n    }\r\n\r\n    function safeMult(uint256 x, uint256 y) internal pure returns(uint256) {\r\n        uint256 z = x * y;\r\n        assert((x == 0)||(z/x == y));\r\n        return z;\r\n    }\r\n\r\n}\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            emit Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            emit Transfer(_from, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract IMCToken is StandardToken, SafeMath {\r\n\r\n    // metadata\r\n    string  public constant name = \"FOO\";\r\n    string  public constant symbol = \"FOO\";\r\n    uint256 public constant decimals = 4;\r\n    string  public version = \"1.0\";\r\n\r\n    // contracts\r\n    address public ethFundDeposit;          // ETH存放地址\r\n    address public newContractAddr;         // token更新地址\r\n\r\n    // crowdsale parameters\r\n    bool    public isFunding;                // 状态切换到true\r\n    uint256 public fundingStartBlock;\r\n    uint256 public fundingStopBlock;\r\n\r\n    uint256 public currentSupply;           // 正在售卖中的tokens数量\r\n    uint256 public tokenRaised = 0;         // 总的售卖数量token\r\n    uint256 public tokenMigrated = 0;     // 总的已经交易的 token\r\n    uint256 public tokenExchangeRate = 300;             // 代币兑换比例 N代币 兑换 1 ETH\r\n\r\n    // events\r\n    event AllocateToken(address indexed _to, uint256 _value);   // 分配的私有交易token;\r\n    event IssueToken(address indexed _to, uint256 _value);      // 公开发行售卖的token;\r\n    event IncreaseSupply(uint256 _value);\r\n    event DecreaseSupply(uint256 _value);\r\n    event Migrate(address indexed _to, uint256 _value);\r\n\r\n    // 转换\r\n    function formatDecimals(uint256 _value) internal pure returns (uint256 ) {\r\n        return _value * 10 ** decimals;\r\n    }\r\n\r\n    // constructor\r\n    constructor(\r\n        address _ethFundDeposit,\r\n        uint256 _currentSupply) public\r\n    {\r\n        ethFundDeposit = _ethFundDeposit;\r\n\r\n        isFunding = false;                           //通过控制预CrowdS ale状态\r\n        fundingStartBlock = 0;\r\n        fundingStopBlock = 0;\r\n\r\n        currentSupply = formatDecimals(_currentSupply);\r\n        totalSupply = formatDecimals(2000000000);\r\n        balances[msg.sender] = totalSupply;\r\n        require(currentSupply <= totalSupply);\r\n    }\r\n\r\n    modifier isOwner()  { require(msg.sender == ethFundDeposit); _; }\r\n\r\n    ///  设置token汇率\r\n    function setTokenExchangeRate(uint256 _tokenExchangeRate) isOwner external {\r\n        require(_tokenExchangeRate != 0);\r\n        require(_tokenExchangeRate != tokenExchangeRate);\r\n\r\n        tokenExchangeRate = _tokenExchangeRate;\r\n    }\r\n\r\n    /// @dev 超发token处理\r\n    function increaseSupply (uint256 _value) isOwner external {\r\n        uint256 value = formatDecimals(_value);\r\n        require(value + currentSupply <= totalSupply);\r\n        currentSupply = safeAdd(currentSupply, value);\r\n        emit IncreaseSupply(value);\r\n    }\r\n\r\n    /// @dev 被盗token处理\r\n    function decreaseSupply (uint256 _value) isOwner external {\r\n        uint256 value = formatDecimals(_value);\r\n        require(value + tokenRaised <= currentSupply);\r\n\r\n        currentSupply = safeSubtract(currentSupply, value);\r\n        emit DecreaseSupply(value);\r\n    }\r\n\r\n    ///  启动区块检测 异常的处理\r\n    function startFunding (uint256 _fundingStartBlock, uint256 _fundingStopBlock) isOwner external {\r\n        require(!isFunding);\r\n        require(_fundingStartBlock < _fundingStopBlock);\r\n        require(block.number < _fundingStartBlock);\r\n\r\n        fundingStartBlock = _fundingStartBlock;\r\n        fundingStopBlock = _fundingStopBlock;\r\n        isFunding = true;\r\n    }\r\n\r\n    ///  关闭区块异常处理\r\n    function stopFunding() isOwner external {\r\n        require(isFunding);\r\n        isFunding = false;\r\n    }\r\n\r\n    /// 开发了一个新的合同来接收token（或者更新token）\r\n    function setMigrateContract(address _newContractAddr) isOwner external {\r\n        require(_newContractAddr != newContractAddr);\r\n        newContractAddr = _newContractAddr;\r\n    }\r\n\r\n    /// 设置新的所有者地址\r\n    function changeOwner(address _newFundDeposit) isOwner() external {\r\n        require(_newFundDeposit != address(0x0));\r\n        ethFundDeposit = _newFundDeposit;\r\n    }\r\n\r\n    ///转移token到新的合约\r\n    function migrate() external {\r\n        require(!isFunding);\r\n        require(newContractAddr != address(0x0));\r\n\r\n        uint256 tokens = balances[msg.sender];\r\n        require(tokens != 0);\r\n\r\n        balances[msg.sender] = 0;\r\n        tokenMigrated = safeAdd(tokenMigrated, tokens);\r\n\r\n        IMigrationContract newContract = IMigrationContract(newContractAddr);\r\n        require(newContract.migrate(msg.sender, tokens));\r\n\r\n        emit Migrate(msg.sender, tokens);               // log it\r\n    }\r\n\r\n    /// 转账ETH 到团队\r\n    function transferETH() isOwner external {\r\n        require(address(this).balance != 0);\r\n        require(ethFundDeposit.send(address(this).balance));\r\n    }\r\n\r\n    ///  将token分配到预处理地址。\r\n    function allocateToken (address _addr, uint256 _eth) isOwner external {\r\n        require(_eth != 0);\r\n        require(_addr != address(0x0));\r\n\r\n        uint256 tokens = safeMult(formatDecimals(_eth), tokenExchangeRate);\r\n        require(tokens + tokenRaised <= currentSupply);\r\n\r\n        tokenRaised = safeAdd(tokenRaised, tokens);\r\n        balances[_addr] += tokens;\r\n\r\n        emit AllocateToken(_addr, tokens);  // 记录token日志\r\n    }\r\n\r\n    /// 购买token\r\n    function () public payable {\r\n        require(isFunding);\r\n        require(msg.value != 0);\r\n\r\n        require(block.number >= fundingStartBlock);\r\n        require(block.number <= fundingStopBlock);\r\n\r\n        uint256 tokens = safeMult(msg.value, tokenExchangeRate);\r\n        require(tokens + tokenRaised <= currentSupply);\r\n\r\n        tokenRaised = safeAdd(tokenRaised, tokens);\r\n        balances[msg.sender] += tokens;\r\n\r\n        emit IssueToken(msg.sender, tokens);  //记录日志\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"allocateToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newContractAddr\",\"type\":\"address\"}],\"name\":\"setMigrateContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingStopBlock\",\"type\":\"uint256\"}],\"name\":\"startFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundDeposit\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethFundDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setTokenExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStopBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethFundDeposit\",\"type\":\"address\"},{\"name\":\"_currentSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"AllocateToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"IssueToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"IncreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"DecreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"IMCToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000016dc60b242e301c40541fe89ca4065471de12ba3000000000000000000000000000000000000000000000000000000003b9aca00","Library":"","SwarmSource":"bzzr://f2d46cfccf65d0762e344e939333015853e690ad71f8f5ef626b32928e4c5e36"}]}