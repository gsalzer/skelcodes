{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n// produced by the Solididy File Flattener (c) David Appleton 2018\r\n// contact : dave@akomba.com\r\n// released under Apache 2.0 licence\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract APIRegistry is Ownable {\r\n\r\n    struct APIForSale {\r\n        uint pricePerCall;\r\n        bytes32 sellerUsername;\r\n        bytes32 apiName;\r\n        address sellerAddress;\r\n        string hostname;\r\n        string docsUrl;\r\n    }\r\n\r\n    mapping(string => uint) internal apiIds;\r\n    mapping(uint => APIForSale) public apis;\r\n\r\n    uint public numApis;\r\n    uint public version;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor, establishes ownership because contract is owned\r\n    // ------------------------------------------------------------------------\r\n    constructor() public {\r\n        numApis = 0;\r\n        version = 1;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Owner can transfer out any accidentally sent ERC20 tokens (just in case)\r\n    // ------------------------------------------------------------------------\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20(tokenAddress).transfer(owner, tokens);\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Lets a user list an API to sell\r\n    // ------------------------------------------------------------------------\r\n    function listApi(uint pricePerCall, bytes32 sellerUsername, bytes32 apiName, string hostname, string docsUrl) public {\r\n        // make sure input params are valid\r\n        require(pricePerCall != 0 && sellerUsername != \"\" && apiName != \"\" && bytes(hostname).length != 0);\r\n        \r\n        // make sure the name isn't already taken\r\n        require(apiIds[hostname] == 0);\r\n\r\n        numApis += 1;\r\n        apiIds[hostname] = numApis;\r\n\r\n        APIForSale storage api = apis[numApis];\r\n\r\n        api.pricePerCall = pricePerCall;\r\n        api.sellerUsername = sellerUsername;\r\n        api.apiName = apiName;\r\n        api.sellerAddress = msg.sender;\r\n        api.hostname = hostname;\r\n        api.docsUrl = docsUrl;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get the ID number of an API given it's hostname\r\n    // ------------------------------------------------------------------------\r\n    function getApiId(string hostname) public view returns (uint) {\r\n        return apiIds[hostname];\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get info stored for the API but without the dynamic members, because solidity can't return dynamics to other smart contracts yet\r\n    // ------------------------------------------------------------------------\r\n    function getApiByIdWithoutDynamics(\r\n        uint apiId\r\n    ) \r\n        public\r\n        view \r\n        returns (\r\n            uint pricePerCall, \r\n            bytes32 sellerUsername,\r\n            bytes32 apiName, \r\n            address sellerAddress\r\n        ) \r\n    {\r\n        APIForSale storage api = apis[apiId];\r\n\r\n        pricePerCall = api.pricePerCall;\r\n        sellerUsername = api.sellerUsername;\r\n        apiName = api.apiName;\r\n        sellerAddress = api.sellerAddress;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get info stored for an API by id\r\n    // ------------------------------------------------------------------------\r\n    function getApiById(\r\n        uint apiId\r\n    ) \r\n        public \r\n        view \r\n        returns (\r\n            uint pricePerCall, \r\n            bytes32 sellerUsername, \r\n            bytes32 apiName, \r\n            address sellerAddress, \r\n            string hostname, \r\n            string docsUrl\r\n        ) \r\n    {\r\n        APIForSale storage api = apis[apiId];\r\n\r\n        pricePerCall = api.pricePerCall;\r\n        sellerUsername = api.sellerUsername;\r\n        apiName = api.apiName;\r\n        sellerAddress = api.sellerAddress;\r\n        hostname = api.hostname;\r\n        docsUrl = api.docsUrl;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get info stored for an API by hostname\r\n    // ------------------------------------------------------------------------\r\n    function getApiByName(\r\n        string _hostname\r\n    ) \r\n        public \r\n        view \r\n        returns (\r\n            uint pricePerCall, \r\n            bytes32 sellerUsername, \r\n            bytes32 apiName, \r\n            address sellerAddress, \r\n            string hostname, \r\n            string docsUrl\r\n        ) \r\n    {\r\n        uint apiId = apiIds[_hostname];\r\n        if (apiId == 0) {\r\n            return;\r\n        }\r\n        APIForSale storage api = apis[apiId];\r\n\r\n        pricePerCall = api.pricePerCall;\r\n        sellerUsername = api.sellerUsername;\r\n        apiName = api.apiName;\r\n        sellerAddress = api.sellerAddress;\r\n        hostname = api.hostname;\r\n        docsUrl = api.docsUrl;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Edit an API listing\r\n    // ------------------------------------------------------------------------\r\n    function editApi(uint apiId, uint pricePerCall, address sellerAddress, string docsUrl) public {\r\n        require(apiId != 0 && pricePerCall != 0 && sellerAddress != address(0));\r\n\r\n        APIForSale storage api = apis[apiId];\r\n\r\n        // prevent editing an empty api (effectively listing an api)\r\n        require(\r\n            api.pricePerCall != 0 && api.sellerUsername != \"\" && api.apiName != \"\" &&  bytes(api.hostname).length != 0 && api.sellerAddress != address(0)\r\n        );\r\n\r\n        // require that sender is the original api lister, or the contract owner\r\n        // the contract owner clause lets us recover a api listing if a dev loses access to their privkey\r\n        require(msg.sender == api.sellerAddress || msg.sender == owner);\r\n\r\n        api.pricePerCall = pricePerCall;\r\n        api.sellerAddress = sellerAddress;\r\n        api.docsUrl = docsUrl;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"hostname\",\"type\":\"string\"}],\"name\":\"getApiId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"apiId\",\"type\":\"uint256\"}],\"name\":\"getApiByIdWithoutDynamics\",\"outputs\":[{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerUsername\",\"type\":\"bytes32\"},{\"name\":\"apiName\",\"type\":\"bytes32\"},{\"name\":\"sellerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerUsername\",\"type\":\"bytes32\"},{\"name\":\"apiName\",\"type\":\"bytes32\"},{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"docsUrl\",\"type\":\"string\"}],\"name\":\"listApi\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numApis\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"apiId\",\"type\":\"uint256\"},{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"docsUrl\",\"type\":\"string\"}],\"name\":\"editApi\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"apiId\",\"type\":\"uint256\"}],\"name\":\"getApiById\",\"outputs\":[{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerUsername\",\"type\":\"bytes32\"},{\"name\":\"apiName\",\"type\":\"bytes32\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"docsUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apis\",\"outputs\":[{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerUsername\",\"type\":\"bytes32\"},{\"name\":\"apiName\",\"type\":\"bytes32\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"docsUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hostname\",\"type\":\"string\"}],\"name\":\"getApiByName\",\"outputs\":[{\"name\":\"pricePerCall\",\"type\":\"uint256\"},{\"name\":\"sellerUsername\",\"type\":\"bytes32\"},{\"name\":\"apiName\",\"type\":\"bytes32\"},{\"name\":\"sellerAddress\",\"type\":\"address\"},{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"docsUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"APIRegistry","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f1164cde5caad31e31781a5a42b79bb15d2e6201e10420f39c864b30a3702f5b"}]}