{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n// Ownable contract with CFO\r\ncontract Ownable {\r\n    address public owner;\r\n    address public cfoAddress;\r\n\r\n    constructor() public{\r\n        owner = msg.sender;\r\n        cfoAddress = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyCFO() {\r\n        require(msg.sender == cfoAddress);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n    \r\n    function setCFO(address newCFO) external onlyOwner {\r\n        require(newCFO != address(0));\r\n\r\n        cfoAddress = newCFO;\r\n    }\r\n}\r\n\r\n// Pausable contract which allows children to implement an emergency stop mechanism.\r\ncontract Pausable is Ownable {\r\n    event Pause();\r\n    event Unpause();\r\n\r\n    bool public paused = false;\r\n\r\n    // Modifier to make a function callable only when the contract is not paused.\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    // Modifier to make a function callable only when the contract is paused.\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n\r\n    // called by the owner to pause, triggers stopped state\r\n    function pause() onlyOwner whenNotPaused public {\r\n        paused = true;\r\n        emit Pause();\r\n    }\r\n\r\n    // called by the owner to unpause, returns to normal state\r\n    function unpause() onlyOwner whenPaused public {\r\n        paused = false;\r\n        emit Unpause();\r\n    }\r\n}\r\n\r\n// interface for presale contract\r\ncontract ParentInterface {\r\n    function transfer(address _to, uint256 _tokenId) external;\r\n    function recommendedPrice(uint16 quality) public pure returns(uint256 price);\r\n    function getPet(uint256 _id) external view returns (uint64 birthTime, uint256 genes,uint64 breedTimeout,uint16 quality,address owner);\r\n}\r\ncontract JackpotInterface {\r\n    function addPlayer(address player) external;\r\n    function finished() public returns (bool);\r\n}\r\n\r\ncontract AccessControl is Pausable {\r\n    ParentInterface public parent;\r\n    JackpotInterface public jackpot;\r\n    \r\n    function setParentAddress(address _address) public whenPaused onlyOwner\r\n    {\r\n        parent = ParentInterface(_address);\r\n    }\r\n    \r\n    function setJackpotAddress(address _address) public whenPaused onlyOwner\r\n    {\r\n        jackpot = JackpotInterface(_address);\r\n    }\r\n}\r\n\r\n// setting a special price\r\ncontract Discount is AccessControl {\r\n    uint128[101] public discount;\r\n    \r\n    function setPrice(uint8 _tokenId, uint128 _price) external onlyOwner {\r\n        discount[_tokenId] = _price;\r\n    }\r\n}\r\n\r\ncontract StoreLimit is AccessControl {\r\n\tuint8 public saleLimit = 10;\r\n\t\r\n\tfunction setSaleLimit(uint8 _limit) external onlyOwner {\r\n\t\tsaleLimit = _limit;\r\n\t}\r\n}\r\n\r\ncontract Store is Discount, StoreLimit {\r\n\r\n    constructor(address _presaleAddr) public {\r\n        parent = ParentInterface(_presaleAddr);\r\n        paused = true;\r\n    }\r\n    \r\n\t// purchasing a parrot\r\n    function purchaseParrot(uint256 _tokenId) external payable whenNotPaused\r\n    {\r\n\t\trequire(_tokenId <= saleLimit);\r\n\t\t\r\n        uint64 birthTime; uint256 genes; uint64 breedTimeout; uint16 quality; address parrot_owner;\r\n        (birthTime,  genes, breedTimeout, quality, parrot_owner) = parent.getPet(_tokenId);\r\n        \r\n        require(parrot_owner == address(this));\r\n        \r\n        if(discount[_tokenId] == 0)\r\n            require(parent.recommendedPrice(quality) <= msg.value);\r\n        else\r\n            require(discount[_tokenId] <= msg.value);\r\n        \r\n        parent.transfer(msg.sender, _tokenId);\r\n        \r\n        if(!jackpot.finished()) {\r\n            jackpot.addPlayer(msg.sender);\r\n            address(jackpot).transfer(msg.value / 2);\r\n        }\r\n    }\r\n    \r\n    function unpause() public onlyOwner whenPaused {\r\n\t\trequire(address(jackpot) != address(0));\r\n\r\n        super.unpause();\r\n    }\r\n    \r\n    function gift(uint256 _tokenId, address to) external onlyOwner{\r\n        parent.transfer(to, _tokenId);\r\n    }\r\n\r\n    function withdrawBalance(uint256 summ) external onlyCFO {\r\n        cfoAddress.transfer(summ);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"discount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint8\"}],\"name\":\"setSaleLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseParrot\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setJackpotAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"gift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint8\"},{\"name\":\"_price\",\"type\":\"uint128\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"summ\",\"type\":\"uint256\"}],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setParentAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_presaleAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]","ContractName":"Store","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004720f2468eeb7a795945c5ffbc3b0178e32250e0","Library":"","SwarmSource":"bzzr://e8ec292005fa7b0284c71ecc5322868dededb0d832760956df0d9cb19f673f9d"}]}