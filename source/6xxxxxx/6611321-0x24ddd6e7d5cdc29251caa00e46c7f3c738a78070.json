{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n\r\n\tfunction mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\tif (_a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tuint256 c = _a * _b;\r\n\t\trequire(c / _a == _b);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\trequire(_b > 0);\r\n\t\tuint256 c = _a / _b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\trequire(_b <= _a);\r\n\t\tuint256 c = _a - _b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n\t\tuint256 c = _a + _b;\r\n\t\trequire(c >= _a);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b != 0);\r\n\t\treturn a % b;\r\n\t}\r\n}\r\n\r\ncontract InvestorsStorage {\r\n\taddress private owner;\r\n\r\n\tmapping (address => Investor) private investors;\r\n\r\n\tstruct Investor {\r\n\t\tuint deposit;\r\n\t\tuint checkpoint;\r\n\t\taddress referrer;\r\n\t}\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction updateInfo(address _address, uint _value) external onlyOwner {\r\n\t\tinvestors[_address].deposit += _value;\r\n\t\tinvestors[_address].checkpoint = block.timestamp;\r\n\t}\r\n\r\n\tfunction updateCheckpoint(address _address) external onlyOwner {\r\n\t\tinvestors[_address].checkpoint = block.timestamp;\r\n\t}\r\n\r\n\tfunction addReferrer(address _referral, address _referrer) external onlyOwner {\r\n\t\tinvestors[_referral].referrer = _referrer;\r\n\t}\r\n\r\n\tfunction getInterest(address _address) external view returns(uint) {\r\n\t\tif (investors[_address].deposit > 0) {\r\n\t\t\treturn(500 + ((block.timestamp - investors[_address].checkpoint) / 1 days));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction d(address _address) external view returns(uint) {\r\n\t\treturn investors[_address].deposit;\r\n\t}\r\n\r\n\tfunction c(address _address) external view returns(uint) {\r\n\t\treturn investors[_address].checkpoint;\r\n\t}\r\n\r\n\tfunction r(address _address) external view returns(address) {\r\n\t\treturn investors[_address].referrer;\r\n\t}\r\n}\r\n\r\ncontract NewSmartPyramid {\r\n\tusing SafeMath for uint;\r\n\r\n\taddress adv_adr;\r\n\taddress adm_adr;\r\n\tuint waveStartUp;\r\n\tuint nextPayDay;\r\n\r\n\tmapping (uint => Leader) top;\r\n\r\n\tevent LogInvestment(address indexed _addr, uint _value);\r\n\tevent LogIncome(address indexed _addr, uint _value, string indexed _type);\r\n\tevent LogReferralInvestment(address indexed _referrer, address indexed _referral, uint _value);\r\n\tevent LogGift(address _firstAddr, uint _firstDep, address _secondAddr, uint _secondDep, address _thirdAddr, uint _thirdDep);\r\n\tevent LogNewWave(uint _waveStartUp);\r\n\r\n\tInvestorsStorage private x;\r\n\r\n\tmodifier notOnPause() {\r\n\t\trequire(waveStartUp <= block.timestamp);\r\n\t\t_;\r\n\t}\r\n\r\n\tstruct Leader {\r\n\t\taddress addr;\r\n\t\tuint deposit;\r\n\t}\r\n\r\n\tfunction bytesToAddress(bytes _source) internal pure returns(address parsedReferrer) {\r\n\t\tassembly {\r\n\t\t\tparsedReferrer := mload(add(_source,0x14))\r\n\t\t}\r\n\t\treturn parsedReferrer;\r\n\t}\r\n\r\n\tfunction addReferrer(uint _value) internal {\r\n\t\taddress _referrer = bytesToAddress(bytes(msg.data));\r\n\t\tif (_referrer != msg.sender) {\r\n\t\t\tx.addReferrer(msg.sender, _referrer);\r\n\t\t\tx.r(msg.sender).transfer(_value / 20);\r\n\t\t\temit LogReferralInvestment(_referrer, msg.sender, _value);\r\n\t\t\temit LogIncome(_referrer, _value / 20, \"referral\");\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(address adv,address adm) public {\r\n\t\tadv_adr = adv;\r\n\t\tadm_adr = adm;\r\n\t\tx = new InvestorsStorage();\r\n\t\tnextPayDay = block.timestamp.sub((block.timestamp - 1538388000).mod(7 days)).add(7 days);\r\n\t}\r\n\r\n\tfunction getInfo(address _address) external view returns(uint deposit, uint amountToWithdraw) {\r\n\t\tdeposit = x.d(_address);\r\n\t\tif (block.timestamp >= x.c(_address) + 10 minutes) {\r\n\t\t\tamountToWithdraw = (x.d(_address).mul(x.getInterest(_address)).div(10000)).mul(block.timestamp.sub(x.c(_address))).div(1 days);\r\n\t\t} else {\r\n\t\t\tamountToWithdraw = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTop() external view returns(address, uint, address, uint, address, uint) {\r\n\t\treturn(top[1].addr, top[1].deposit, top[2].addr, top[2].deposit, top[3].addr, top[3].deposit);\r\n\t}\r\n\r\n\tfunction() external payable {\r\n\t\tif (msg.value == 0) {\r\n\t\t\twithdraw();\r\n\t\t} else {\r\n\t\t\tinvest();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction invest() notOnPause public payable {\r\n\r\n\t\tadm_adr.transfer(msg.value.mul(13).div(100));\r\n\t\tadv_adr.transfer(msg.value.mul(2).div(100));\r\n\r\n\t\tif (x.d(msg.sender) > 0) {\r\n\t\t\twithdraw();\r\n\t\t}\r\n\r\n\t\tx.updateInfo(msg.sender, msg.value);\r\n\r\n\t\tif (msg.value > top[3].deposit) {\r\n\t\t\ttoTheTop();\r\n\t\t}\r\n\r\n\t\tif (x.r(msg.sender) != 0x0) {\r\n\t\t\tx.r(msg.sender).transfer(msg.value / 20);\r\n\t\t\temit LogReferralInvestment(x.r(msg.sender), msg.sender, msg.value);\r\n\t\t\temit LogIncome(x.r(msg.sender), msg.value / 20, \"referral\");\r\n\t\t} else if (msg.data.length == 20) {\r\n\t\t\taddReferrer(msg.value);\r\n\t\t}\r\n\r\n\t\temit LogInvestment(msg.sender, msg.value);\r\n\t}\r\n\r\n\tfunction withdraw() notOnPause public {\r\n\r\n\t\tif (block.timestamp >= x.c(msg.sender) + 10 minutes) {\r\n\t\t\tuint _payout = (x.d(msg.sender).mul(x.getInterest(msg.sender)).div(10000)).mul(block.timestamp.sub(x.c(msg.sender))).div(1 days);\r\n\t\t\tx.updateCheckpoint(msg.sender);\r\n\t\t}\r\n\r\n\t\tif (_payout > 0) {\r\n\r\n\t\t\tif (_payout > address(this).balance) {\r\n\t\t\t\tnextWave();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmsg.sender.transfer(_payout);\r\n\t\t\temit LogIncome(msg.sender, _payout, \"withdrawn\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toTheTop() internal {\r\n\t\tif (msg.value <= top[2].deposit) {\r\n\t\t\ttop[3] = Leader(msg.sender, msg.value);\r\n\t\t} else {\r\n\t\t\tif (msg.value <= top[1].deposit) {\r\n\t\t\t\ttop[3] = top[2];\r\n\t\t\t\ttop[2] = Leader(msg.sender, msg.value);\r\n\t\t\t} else {\r\n\t\t\t\ttop[3] = top[2];\r\n\t\t\t\ttop[2] = top[1];\r\n\t\t\t\ttop[1] = Leader(msg.sender, msg.value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction payDay() external {\r\n\t\tif(msg.sender != adm_adr)\r\n\t\t\trequire(block.timestamp >= nextPayDay);\r\n\t\tnextPayDay = block.timestamp.sub((block.timestamp - 1538388000).mod(7 days)).add(7 days);\r\n\r\n\t\temit LogGift(top[1].addr, top[1].deposit, top[2].addr, top[2].deposit, top[3].addr, top[3].deposit);\r\n\r\n\t\tfor (uint i = 0; i <= 2; i++) {\r\n\t\t\tif (top[i+1].addr != 0x0) {\r\n\t\t\t\tuint money_to = 0.5 ether;\r\n\t\t\t\tif(i==0)\r\n\t\t\t\t\tmoney_to = 3 ether;\r\n\t\t\t\telse if(i==1)\r\n\t\t\t\t\tmoney_to = 1.5 ether;\r\n\r\n\t\t\t\ttop[i+1].addr.transfer(money_to);\r\n\t\t\t\ttop[i+1] = Leader(0x0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction nextWave() private {\r\n\t\tfor (uint i = 0; i <= 2; i++) {\r\n\t\t\ttop[i+1] = Leader(0x0, 0);\r\n\t\t}\r\n\t\tx = new InvestorsStorage();\r\n\t\twaveStartUp = block.timestamp + 7 days;\r\n\t\temit LogNewWave(waveStartUp);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTop\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payDay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getInfo\",\"outputs\":[{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"adv\",\"type\":\"address\"},{\"name\":\"adm\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"LogIncome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_referral\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogReferralInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_firstAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_firstDep\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_secondAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_secondDep\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_thirdAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_thirdDep\",\"type\":\"uint256\"}],\"name\":\"LogGift\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_waveStartUp\",\"type\":\"uint256\"}],\"name\":\"LogNewWave\",\"type\":\"event\"}]","ContractName":"NewSmartPyramid","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000cfdb6326162fa29576ae0919f5bb08643adcfbf40000000000000000000000003644266dde909835b6db8d4897a83194bc82b70c","Library":"","SwarmSource":"bzzr://5819a5cee36d563dca9561346de429fb17b22e64f36c7a78ce2743c42e9d517b"}]}