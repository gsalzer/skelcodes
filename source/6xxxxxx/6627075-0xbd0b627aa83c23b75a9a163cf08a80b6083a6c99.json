{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract owned {\r\n    address public godOwner;\r\n    mapping (address => bool) public owners;\r\n    \r\n    constructor() public{\r\n        godOwner = msg.sender;\r\n        owners[msg.sender] = true;\r\n    }\r\n    \r\n    modifier onlyGodOwner {\r\n        require(msg.sender == godOwner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(owners[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    function addOwner(address _newOwner) onlyGodOwner public{\r\n        owners[_newOwner] = true;\r\n    }\r\n    \r\n    function removeOwner(address _oldOwner) onlyGodOwner public{\r\n        owners[_oldOwner] = false;\r\n    }\r\n    \r\n    function transferOwnership(address newGodOwner) public onlyGodOwner {\r\n        godOwner = newGodOwner;\r\n        owners[newGodOwner] = true;\r\n        owners[godOwner] = false;\r\n    }\r\n}\r\n\r\n\r\ncontract ContractConn{\r\n    function transfer(address _to, uint _value) public;\r\n    function lock(address _to, uint256 _value) public;\r\n}\r\n\r\ncontract Airdrop is owned{\r\n    \r\n  constructor()  public payable{\r\n         \r\n  }\r\n    \r\n  function deposit() payable public{\r\n  }\r\n  \r\n  function doTransfers(address _tokenAddr, address[] _dests, uint256[] _values) onlyOwner public {\r\n    require(_dests.length >= 1 && _dests.length == _values.length,\"doTransfers 1\");\r\n    ContractConn conn = ContractConn(_tokenAddr);\r\n    uint256 i = 0;\r\n    while (i < _dests.length) {\r\n        conn.transfer(_dests[i], _values[i]);\r\n        i += 1;\r\n    }\r\n  }\r\n  \r\n  function doLocks(address _tokenAddr, address[] _dests, uint256[] _values) onlyOwner public{\r\n    require(_dests.length >= 1 && _dests.length == _values.length);\r\n    ContractConn conn = ContractConn(_tokenAddr);\r\n    uint256 i = 0;\r\n    while (i < _dests.length) {\r\n        conn.lock(_dests[i], _values[i]);\r\n        i += 1;\r\n    }\r\n  }\r\n  \r\n  function doWork(address _tokenAddr, string _method, address[] _dests, uint256[] _values) onlyOwner public{\r\n      require(_dests.length >= 1 && _dests.length == _values.length);\r\n      bytes4 methodID =  bytes4(keccak256(abi.encodePacked(_method)));\r\n      uint256 i = 0;\r\n      while(i < _dests.length){\r\n          if(!_tokenAddr.call(methodID, _dests[i], _values[i])){\r\n              revert();\r\n          }\r\n          i += 1;\r\n      }\r\n  }\r\n  \r\n  function extract(address _tokenAddr,address _to,uint256 _value) onlyOwner  public{\r\n      ContractConn conn = ContractConn(_tokenAddr);\r\n      conn.transfer(_to,_value);\r\n  }\r\n  \r\n  function extractEth(uint256 _value) onlyOwner  public{\r\n      msg.sender.transfer(_value);\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldOwner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"extract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"godOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_dests\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"doTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_method\",\"type\":\"string\"},{\"name\":\"_dests\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"doWork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"extractEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_dests\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"doLocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newGodOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"Airdrop","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2e9f222ce6a48e59fd2bf3748642c175810cc2992c7a4a06ced635285f275e4a"}]}