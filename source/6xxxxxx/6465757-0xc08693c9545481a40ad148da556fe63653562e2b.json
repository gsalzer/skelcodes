{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract WhaleKiller2 {\r\n    address WhaleAddr;\r\n    uint constant interest = 15;\r\n    uint constant whalefee = 1;\r\n    uint constant maxRoi = 135;\r\n    mapping (address => uint256) invested;\r\n    mapping (address => uint256) timeInvest;\r\n    mapping (address => uint256) rewards;\r\n\r\n    constructor() public {\r\n        WhaleAddr = msg.sender;\r\n    }\r\n    function () external payable {\r\n        address sender = msg.sender;\r\n        uint256 amount = 0;\r\n        if (invested[sender] != 0) {\r\n            amount = invested[sender] * interest / 10000 * (now - timeInvest[sender]) / 1 days * (now - timeInvest[sender]) / 1 days;\r\n            if (msg.value == 0) {\r\n                if (amount >= address(this).balance) {\r\n                    amount = (address(this).balance);\r\n                }\r\n                if ((rewards[sender] + amount) > invested[sender] * maxRoi / 100) {\r\n                    amount = invested[sender] * maxRoi / 100 - rewards[sender];\r\n                    invested[sender] = 0;\r\n                    rewards[sender] = 0;\r\n                    sender.transfer(amount);\r\n                    return;\r\n                } else {\r\n                    sender.transfer(amount);\r\n                    rewards[sender] += amount;\r\n                    amount = 0;\r\n                }\r\n            }\r\n        }\r\n        timeInvest[sender] = now;\r\n        invested[sender] += (msg.value + amount);\r\n        \r\n        if (msg.value != 0) {\r\n            WhaleAddr.transfer(msg.value * whalefee / 100);\r\n            if (invested[sender] > invested[WhaleAddr]) {\r\n                WhaleAddr = sender;\r\n            }  \r\n        }\r\n    }\r\n    function ShowDepositInfo(address _dep) public view returns(uint256 _invested, uint256 _rewards, uint256 _unpaidInterest) {\r\n        _unpaidInterest = invested[_dep] * interest / 10000 * (now - timeInvest[_dep]) / 1 days * (now - timeInvest[_dep]) / 1 days;\r\n        return (invested[_dep], rewards[_dep], _unpaidInterest);\r\n    }\r\n    function ShowWhaleAddress() public view returns(address) {\r\n        return WhaleAddr;\r\n    }\r\n    function ShowPercent(address _dep) public view returns(uint256 _percent, uint256 _timeInvest, uint256 _now) {\r\n    _percent = interest / 10000 * (now - timeInvest[_dep]) / 1 days * (now - timeInvest[_dep]) / 1 days;\r\n    return (_percent, timeInvest[_dep], now);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_dep\",\"type\":\"address\"}],\"name\":\"ShowDepositInfo\",\"outputs\":[{\"name\":\"_invested\",\"type\":\"uint256\"},{\"name\":\"_rewards\",\"type\":\"uint256\"},{\"name\":\"_unpaidInterest\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dep\",\"type\":\"address\"}],\"name\":\"ShowPercent\",\"outputs\":[{\"name\":\"_percent\",\"type\":\"uint256\"},{\"name\":\"_timeInvest\",\"type\":\"uint256\"},{\"name\":\"_now\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ShowWhaleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"WhaleKiller2","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://df13d506e8c82b698e269994dfe5acd4b008b14a92df130aa1946890b118be77"}]}