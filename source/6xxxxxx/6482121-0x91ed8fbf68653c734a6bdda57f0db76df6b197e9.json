{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity^0.4.24;\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n}\r\ncontract father {\r\n    function fallback(uint num,address sender,uint amount) public;\r\n}\r\n\r\ncontract fathercontract{\r\n    \r\n    address owner;\r\n    address public NEO = 0xc55a13e36d93371a5b036a21d913a31CD2804ba4;\r\n    \r\n    mapping(address => uint)value;\r\n    mapping(address => address) contr;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    function use(uint _value) public {\r\n        \r\n        value[msg.sender] = _value*1e18;\r\n        ERC20(NEO).transferFrom(msg.sender,this,value[msg.sender]);\r\n        \r\n        if (contr[msg.sender] == address(0)){\r\n            getsometoken(msg.sender,value[msg.sender]);\r\n        }else{\r\n            getsometokenn(msg.sender,value[msg.sender]);\r\n        }\r\n    }\r\n    function getsometokenn(address _sender,uint _value) internal{\r\n        ERC20(NEO).transfer(contr[_sender],_value);\r\n        contr[_sender].call.value(0)();\r\n    }\r\n    function getsometoken(address _sender,uint _value) internal {\r\n        contr[msg.sender] = new getfreetoken(this,_sender);\r\n        ERC20(NEO).transfer(contr[_sender],_value);\r\n        contr[_sender].call.value(0)();\r\n    }\r\n    function fallback(uint num,address sender,uint amount) public {\r\n        require(contr[sender] == msg.sender);\r\n        if (num == 10){\r\n            uint a = (amount-value[sender])/100*5;\r\n            ERC20(NEO).transfer(sender,amount-a);\r\n            ERC20(NEO).transfer(owner,a);\r\n            value[sender] = 0;\r\n        }else{\r\n            getsometokenn(sender,amount);\r\n        }\r\n    }\r\n}\r\n\r\ncontract getfreetoken {\r\n    \r\n    address sender;\r\n    address fatherr;\r\n    address NEO = 0xc55a13e36d93371a5b036a21d913a31CD2804ba4;\r\n    \r\n    uint num;\r\n    \r\n    constructor(address _father,address _sender) public {\r\n        fatherr = _father;\r\n        sender = _sender;\r\n    }\r\n    function() public {\r\n        trans();\r\n    }\r\n    function trans() internal {\r\n        \r\n        uint A = ERC20(NEO).balanceOf(this);\r\n        \r\n        ERC20(NEO).transfer(fatherr,ERC20(NEO).balanceOf(this));\r\n        num++;\r\n        father(fatherr).fallback(num,sender,A);\r\n        \r\n        if (num == 10){num = 0;}\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"NEO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"use\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"fathercontract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2d3af7f1b4c17f295174d532bbe0fc63d5b5cebf713def81cb8a395d9254e6f3"}]}