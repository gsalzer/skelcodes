{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract KAA is ERC20,Pausable{\r\n\tusing SafeMath for uint256;\r\n\r\n\t//the base info of the token\r\n\tstring public constant name=\"KAA\";\r\n\tstring public constant symbol=\"KAA\";\r\n\tstring public constant version = \"1.0\";\r\n\tuint256 public constant decimals = 18;\r\n\r\n\r\n\r\n\t//平台基金13395000000\r\n\tuint256 public constant PLATFORM_FUNDING_SUPPLY=13395000000*10**decimals;\r\n\r\n\r\n\t//创始团队13395000000\r\n\tuint256 public constant TEAM_KEEPING=13395000000*10**decimals;\r\n\r\n\t//战略伙伴8037000000\t\r\n\tuint256 public constant COOPERATE_REWARD=8037000000*10**decimals;\r\n\r\n\t//分享奖励8930000000\r\n\tuint256 public constant SHARDING_REWARD=8930000000*10**decimals;\r\n\r\n\t//挖矿奖励45543000000\r\n\tuint256 public constant MINING_REWARD=45543000000*10**decimals;\r\n\r\n\t//可普通提现额度8930000000+45543000000=54473000000\r\n\tuint256 public constant COMMON_WITHDRAW_SUPPLY=SHARDING_REWARD+MINING_REWARD;\r\n\r\n\r\n\t//总发行54473000000+13395000000+13395000000+8037000000=89300000000\r\n\tuint256 public constant MAX_SUPPLY=COMMON_WITHDRAW_SUPPLY+PLATFORM_FUNDING_SUPPLY+TEAM_KEEPING+COOPERATE_REWARD;\r\n\r\n\t//内部锁仓基准时间\r\n\tuint256 public innerlockStartTime;\r\n\t//外部锁仓基准时间\r\n\tuint256 public outterlockStartTime;\r\n\t//解锁步长（30天）\r\n\tuint256 public unlockStepLong;\r\n\r\n\t//平台已提现\r\n\tuint256 public platformFundingSupply;\r\n\t//平台每期可提现\r\n\tuint256 public platformFundingPerEpoch;\r\n\r\n\t//团队已提现\r\n\tuint256 public teamKeepingSupply;\r\n\t//团队每期可提现\r\n\tuint256 public teamKeepingPerEpoch;\r\n\r\n\t//战略伙伴已经分发额度\r\n\tuint256 public cooperateRewardSupply;\r\n\r\n\r\n\t//已经普通提现量\r\n\tuint256 public totalCommonWithdrawSupply;\r\n\r\n    //战略伙伴锁仓总额度\r\n    mapping(address=>uint256) public lockAmount;\r\n\t \r\n\t//ERC20的余额\r\n    mapping(address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\t\r\n\r\n     constructor() public{\r\n\t\ttotalSupply = 0 ;\r\n\r\n\t\tplatformFundingSupply=0;\r\n\t\tteamKeepingSupply=0;\r\n\t\tcooperateRewardSupply=0;\r\n\t\ttotalCommonWithdrawSupply=0;\r\n\r\n\t\t//分12期解锁 13395000000/12\r\n\t\tplatformFundingPerEpoch=1116250000*10**decimals;\r\n\t\tteamKeepingPerEpoch=1116250000*10**decimals;\r\n\r\n\r\n\t\t//初始时间 20210818\r\n\t\tinnerlockStartTime = 1629216000;\r\n\t\t//初始时间 20190818\r\n\t\toutterlockStartTime=1566057600;\r\n\r\n\t\tunlockStepLong=2592000;\r\n\r\n\t}\r\n\r\n\tevent CreateKAA(address indexed _to, uint256 _value);\r\n\r\n\r\n\tmodifier notReachTotalSupply(uint256 _value){\r\n\t\tassert(MAX_SUPPLY>=totalSupply.add(_value));\r\n\t\t_;\r\n\t}\r\n\r\n\t//平台最大提现额度\r\n\tmodifier notReachPlatformFundingSupply(uint256 _value){\r\n\t\tassert(PLATFORM_FUNDING_SUPPLY>=platformFundingSupply.add(_value));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier notReachTeamKeepingSupply(uint256 _value){\r\n\t\tassert(TEAM_KEEPING>=teamKeepingSupply.add(_value));\r\n\t\t_;\r\n\t}\r\n\r\n\r\n\tmodifier notReachCooperateRewardSupply(uint256 _value){\r\n\t\tassert(COOPERATE_REWARD>=cooperateRewardSupply.add(_value));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier notReachCommonWithdrawSupply(uint256 _value){\r\n\t\tassert(COMMON_WITHDRAW_SUPPLY>=totalCommonWithdrawSupply.add(_value));\r\n\t\t_;\r\n\t}\r\n\r\n\r\n\r\n\t//统一代币分发函数，内部使用\r\n\tfunction processFunding(address receiver,uint256 _value) internal\r\n\t\tnotReachTotalSupply(_value)\r\n\t{\r\n\t\ttotalSupply=totalSupply.add(_value);\r\n\t\tbalances[receiver]=balances[receiver].add(_value);\r\n\t\temit CreateKAA(receiver,_value);\r\n\t\temit Transfer(0x0, receiver, _value);\r\n\t}\r\n\r\n\r\n\r\n\t//普通分发,给分享和挖矿使用\r\n\tfunction commonWithdraw(uint256 _value) external\r\n\t\tonlyOwner\r\n\t\tnotReachCommonWithdrawSupply(_value)\r\n\r\n\t{\r\n\t\tprocessFunding(msg.sender,_value);\r\n\t\t//增加已经普通提现份额\r\n\t\ttotalCommonWithdrawSupply=totalCommonWithdrawSupply.add(_value);\r\n\t}\r\n\r\n\r\n\t//平台基金提币（不持币锁仓，12期释放）\r\n\tfunction withdrawToPlatformFunding(uint256 _value) external\r\n\t\tonlyOwner\r\n\t\tnotReachPlatformFundingSupply(_value)\r\n\t{\r\n\t\t//判断可提现额度是否足够\r\n\t\tif (!canPlatformFundingWithdraw(_value)) {\r\n\t\t\trevert();\r\n\t\t}else{\r\n\t\t\tprocessFunding(msg.sender,_value);\r\n\t\t\t//平台已提现额度\r\n\t\t\tplatformFundingSupply=platformFundingSupply.add(_value);\r\n\t\t}\r\n\r\n\t}\t\r\n\r\n\t//团队提币（不持币锁仓，12期释放）\r\n\tfunction withdrawToTeam(uint256 _value) external\r\n\t\tonlyOwner\r\n\t\tnotReachTeamKeepingSupply(_value)\t\r\n\t{\r\n\t\t//判断可提现额度是否足够\r\n\t\tif (!canTeamKeepingWithdraw(_value)) {\r\n\t\t\trevert();\r\n\t\t}else{\r\n\t\t\tprocessFunding(msg.sender,_value);\r\n\t\t\t//团队已提现额度\r\n\t\t\tteamKeepingSupply=teamKeepingSupply.add(_value);\r\n\t\t}\r\n\t}\r\n\r\n\t//提币给战略伙伴（持币锁仓，12期释放）\r\n\tfunction withdrawToCooperate(address _to,uint256 _value) external\r\n\t\tonlyOwner\r\n\t\tnotReachCooperateRewardSupply(_value)\r\n\t{\r\n\t\tprocessFunding(_to,_value);\r\n\t\tcooperateRewardSupply=cooperateRewardSupply.add(_value);\r\n\r\n\t\t//记录分发份额\r\n\t\tlockAmount[_to]=lockAmount[_to].add(_value);\r\n\t}\r\n\r\n\t//平台是否可提现\r\n\tfunction canPlatformFundingWithdraw(uint256 _value)public view returns (bool) {\r\n\t\t//如果小于基准时间，直接返回false\r\n\t\tif(queryNow()<innerlockStartTime){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//当前期数=（现时间-初始时间)/期数步长\r\n\t\tuint256 epoch=queryNow().sub(innerlockStartTime).div(unlockStepLong);\r\n\t\t//如果超出12期时间，那么就设置为12\r\n\t\tif (epoch>12) {\r\n\t\t\tepoch=12;\r\n\t\t}\r\n\r\n\t\t//计算已经释放额度 = 每期可提现额度*期数\r\n\t\tuint256 releaseAmount = platformFundingPerEpoch.mul(epoch);\r\n\t\t//计算可提现额度=已经释放额度-已经提现额度\r\n\t\tuint256 canWithdrawAmount=releaseAmount.sub(platformFundingSupply);\r\n\t\tif(canWithdrawAmount>=_value){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction canTeamKeepingWithdraw(uint256 _value)public view returns (bool) {\r\n\t\t//如果小于基准时间，直接返回false\r\n\t\tif(queryNow()<innerlockStartTime){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//当前期数=（现时间-初始时间)/期数步长\r\n\t\tuint256 epoch=queryNow().sub(innerlockStartTime).div(unlockStepLong);\r\n\t\t//如果超出12期时间，那么就设置为12\r\n\t\tif (epoch>12) {\r\n\t\t\tepoch=12;\r\n\t\t}\r\n\r\n\t\t//计算已经释放额度 = 每期可提现额度*期数\r\n\t\tuint256 releaseAmount=teamKeepingPerEpoch.mul(epoch);\r\n\t\t//计算可提现额度=已经释放额度-已经提现额度\r\n\t\tuint256 canWithdrawAmount=releaseAmount.sub(teamKeepingSupply);\r\n\t\tif(canWithdrawAmount>=_value){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction clacCooperateNeedLockAmount(uint256 totalLockAmount)public view returns (uint256) {\r\n\t\t//如果小于基准时间，直接返回最大锁仓量\r\n\t\tif(queryNow()<outterlockStartTime){\r\n\t\t\treturn totalLockAmount;\r\n\t\t}\t\t\r\n\t\t\r\n\t\t//当前期数=（现时间-初始时间)/期数步长\r\n\t\tuint256 epoch=queryNow().sub(outterlockStartTime).div(unlockStepLong);\r\n\t\t//如果超出12期时间，那么就设置为12\r\n\t\tif (epoch>12) {\r\n\t\t\tepoch=12;\r\n\t\t}\r\n\r\n\t\t//剩余期数\r\n\t\tuint256 remainingEpoch=uint256(12).sub(epoch);\r\n\r\n\t\t//计算每期可释放转账额度（总分发额度/12）\r\n\t\tuint256 cooperatePerEpoch= totalLockAmount.div(12);\r\n\r\n\t\t//计算剩余锁仓额度（每期可释放转账额度*剩余期数）\r\n\t\treturn cooperatePerEpoch.mul(remainingEpoch);\r\n\t}\r\n    function queryNow() public view returns(uint256){\r\n        return now;\r\n    }\r\n\tfunction () payable external\r\n\t{\r\n\t\trevert();\r\n\t}\r\n\r\n\r\n\r\n  //转账前，先校验减去转出份额后，是否大于等于锁仓份额\r\n  \tfunction transfer(address _to, uint256 _value) public whenNotPaused returns (bool)\r\n \t{\r\n\t\trequire(_to != address(0));\r\n\r\n\t\t//计算锁仓份额\r\n\t\tuint256 needLockBalance=0;\r\n\t\tif (lockAmount[msg.sender]>0) {\r\n\t\t\tneedLockBalance=clacCooperateNeedLockAmount(lockAmount[msg.sender]);\r\n\t\t}\r\n\r\n\r\n\t\trequire(balances[msg.sender].sub(_value)>=needLockBalance);\r\n\r\n\t\t// SafeMath.sub will throw if there is not enough balance.\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction balanceOf(address _owner) public constant returns (uint256 balance) \r\n  \t{\r\n\t\treturn balances[_owner];\r\n  \t}\r\n\r\n\r\n  //从委托人账上转出份额时，还要判断委托人的余额-转出份额是否大于等于锁仓份额\r\n  \tfunction transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) \r\n  \t{\r\n\t\trequire(_to != address(0));\r\n\r\n\t\t//计算锁仓份额\r\n\t\tuint256 needLockBalance=0;\r\n\t\tif (lockAmount[_from]>0) {\r\n\t\t\tneedLockBalance=clacCooperateNeedLockAmount(lockAmount[_from]);\r\n\t\t}\r\n\r\n\r\n\t\trequire(balances[_from].sub(_value)>=needLockBalance);\r\n\r\n\t\tuint256 _allowance = allowed[_from][msg.sender];\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction approve(address _spender, uint256 _value) public whenNotPaused returns (bool) \r\n  \t{\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) \r\n  \t{\r\n\t\treturn allowed[_owner][_spender];\r\n  \t}\r\n\t  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platformFundingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_KEEPING\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockStepLong\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawToCooperate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"innerlockStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PLATFORM_FUNDING_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"totalLockAmount\",\"type\":\"uint256\"}],\"name\":\"clacCooperateNeedLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COOPERATE_REWARD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"canTeamKeepingWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"canPlatformFundingWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooperateRewardSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"commonWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawToPlatformFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINING_REWARD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outterlockStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMMON_WITHDRAW_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SHARDING_REWARD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawToTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamKeepingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platformFundingPerEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamKeepingPerEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCommonWithdrawSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CreateKAA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"KAA","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://001f5f4d537aeb28ee64162f1cd747ecaa8eb46139d6a9fc2ecba9a2eba62480"}]}