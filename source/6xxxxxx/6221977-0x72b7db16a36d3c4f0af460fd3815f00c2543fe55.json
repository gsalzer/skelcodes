{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  uint8 public decimals;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  \r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract Exchange is Ownable {\r\n  mapping (address => bool) public supportedTokens;\r\n  event ExchangeEvent(address tokenToSell, address tokenToBuy, uint256 value);\r\n  \r\n  function setSupportedTokens(address tokenAddress, bool op) onlyOwner public {\r\n    supportedTokens[tokenAddress] = op;\r\n  }\r\n  \r\n    /**\r\n   *  exchange ERC20 tokens with 1:1.\r\n   */\r\n  function exchangeERC20(address _tokenToSell, address _tokenToBuy, uint256 _value) {\r\n    require(supportedTokens[_tokenToSell]);\r\n    require(supportedTokens[_tokenToBuy]);\r\n    require(_tokenToSell != _tokenToBuy);\r\n    \r\n    ERC20Basic tokenToSell = ERC20Basic(_tokenToSell);\r\n    ERC20Basic tokenToBuy = ERC20Basic(_tokenToBuy);\r\n\r\n    require(_value > 0 && tokenToBuy.balanceOf(this) >= _value);\r\n\r\n    if (!tokenToSell.transferFrom(msg.sender, address(this), _value)) throw;\r\n    tokenToBuy.transfer(msg.sender, _value);\r\n  \r\n    ExchangeEvent(_tokenToSell,_tokenToBuy,_value);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenToSell\",\"type\":\"address\"},{\"name\":\"_tokenToBuy\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"exchangeERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"op\",\"type\":\"bool\"}],\"name\":\"setSupportedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenToSell\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenToBuy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ExchangeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Exchange","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://77a4d2e682915c06189e17c2e8cfa244bd45fd63c811c2dfdb97a3e2a5197af5"}]}