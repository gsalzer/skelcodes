{"status":"1","message":"OK","result":[{"SourceCode":"//\r\n//                    %(/************/#&\r\n//               (**,                 ,**/#\r\n//            %/*,                        **(&\r\n//          (*,                              //%\r\n//        %*,                                  /(\r\n//       (*      ,************************/      /*%\r\n//      //         /(                  (/,        ,/%\r\n//     (*           //(               //            /%\r\n//    //             */%             //             //\r\n//    /*         (((((///(((( ((((((//(((((,         /(\r\n//    /           ,/%   //        (/    /*           //\r\n//    /             //   //(    %//   (/*            ,/\r\n//    /              //   ,/%   //   (/,             (/\r\n//    /             %(//%   / //    ///(             //\r\n//    //          %(/, ,/(   /   %//  //(           /(\r\n//    (/         (//     /#      (/,     //(        (/\r\n//     ((     %(/,        (/    (/,        //(      /,\r\n//      ((    /,           *(*#(/            /*   %/,\r\n//      /((                 /*((                 ((/\r\n//        *(%                                  #(\r\n//          ((%                              #(,\r\n//            *((%                        #((,\r\n//               (((%                   ((/\r\n//                   *(((###*#&%###((((*\r\n//\r\n//\r\n//                   ROULETTE.GORGONA.IO\r\n//\r\n// Win 120% with 80% chance!\r\n//\r\n//\r\n// HOW TO PLAY\r\n// Just send 1 ETH to the contract.\r\n// When there are 5 players, a rally will be made, 4 lucky players will receive 1.2 ETH each!\r\n//\r\n//\r\n// For more information visit https://roulette.gorgona.io/\r\n//\r\n// Telegram chat (ru): https://t.me/gorgona_io\r\n// Telegram chat (en): https://t.me/gorgona_io_en\r\n//\r\n// For support and requests telegram: @alex_gorgona_io\r\n\r\n\r\npragma solidity ^0.4.24;\r\n\r\ncontract Roulette {\r\n\r\n    event newRound(uint number);\r\n    event newPlayer(address addr, uint roundNumber);\r\n    event playerWin(address indexed addr);\r\n    event playerLose(address indexed addr, uint8 num);\r\n\r\n    uint public roundNumber = 1;\r\n    address public feeAddr;\r\n\r\n    address[] public players;\r\n\r\n    constructor() public\r\n    {\r\n        feeAddr = msg.sender;\r\n    }\r\n\r\n    function() payable public\r\n    {\r\n        require(msg.value == 1 ether, \"Enter price 1 ETH\");\r\n        // save player\r\n        players.push(msg.sender);\r\n\r\n        emit newPlayer(msg.sender, roundNumber);\r\n\r\n        // if we have all players\r\n        if (players.length == 5) {\r\n            distributeFunds();\r\n            return;\r\n        }\r\n    }\r\n\r\n    function countPlayers() public view returns (uint256)\r\n    {\r\n        return players.length;\r\n    }\r\n\r\n    // Send ETH to winners\r\n    function distributeFunds() internal\r\n    {\r\n        // determine who is lose\r\n        uint8 loser = uint8(getRandom() % players.length + 1);\r\n\r\n        for (uint i = 0; i <= players.length - 1; i++) {\r\n            // if it is loser - skip\r\n            if (loser == i + 1) {\r\n                emit playerLose(players[i], loser);\r\n                continue;\r\n            }\r\n\r\n            // pay prize\r\n            if (players[i].send(1200 finney)) {\r\n                emit playerWin(players[i]);\r\n            }\r\n        }\r\n\r\n        // gorgona fee\r\n        feeAddr.transfer(address(this).balance);\r\n\r\n        players.length = 0;\r\n        roundNumber ++;\r\n\r\n        emit newRound(roundNumber);\r\n    }\r\n\r\n    function getRandom() internal view returns (uint256)\r\n    {\r\n        uint256 num = uint256(keccak256(abi.encodePacked(blockhash(block.number - players.length), now)));\r\n\r\n        for (uint i = 0; i <= players.length - 1; i++)\r\n        {\r\n            num ^= uint256(keccak256(abi.encodePacked(blockhash(block.number - i), uint256(players[i]) ^ num)));\r\n        }\r\n\r\n        return num;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"feeAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roundNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"newRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"roundNumber\",\"type\":\"uint256\"}],\"name\":\"newPlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"playerWin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"num\",\"type\":\"uint8\"}],\"name\":\"playerLose\",\"type\":\"event\"}]","ContractName":"Roulette","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dcee88b778d62b570e02fa3a798b7cf726a5412ae4e4507bd8bde4c297c9999e"}]}