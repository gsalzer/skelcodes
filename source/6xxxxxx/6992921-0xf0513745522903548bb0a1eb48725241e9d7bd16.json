{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >0.4.99 <0.6.0;\r\n\r\ninterface token {\r\n    function balanceOf(address _owner) external returns (uint balance);\r\n    function transfer(address _to, uint256 _value) external;\r\n    function transferFrom(address _from, address _to, uint256 _value) external;\r\n}\r\n\r\ncontract RewardAirdrop {\r\n    address public owner = msg.sender;\r\n    address tokenAddress = 0x46706C5e5B7dF0Afd54a7248F1E5788275B7FaC6;\r\n    token public tokenReward = token(tokenAddress);\r\n\r\n    address usdcAddress = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n\r\n    token public stableCoinReward = token(usdcAddress);\r\n\r\n    uint public stableCoinPrice = 10 ** 16;\r\n    uint public totalRewardBalance = 0;\r\n\r\n    // keeps track of rewards given\r\n    mapping (bytes32 => bool) public airdrops;\r\n    mapping(address => uint256) public rewardBalanceOf;\r\n\r\n    modifier onlyOwner() {require(msg.sender == owner); _;}\r\n\r\n    function() payable external {}\r\n\r\n    function airdropTokens(bytes32 _channelId, address[] memory _recipients, uint tokenAmount, uint weiAmount) public onlyOwner {\r\n        for(uint i = 0; i < _recipients.length; i++)\r\n        {\r\n            bytes32 channelHash = keccak256(\r\n                abi.encodePacked(_channelId, _recipients[i])\r\n            );\r\n\r\n            address payable currentRecipient = address(uint160(_recipients[i]));\r\n            \r\n            if (!airdrops[channelHash]) {\r\n                airdrops[channelHash] = true;\r\n                rewardBalanceOf[currentRecipient] += tokenAmount;\r\n                totalRewardBalance += tokenAmount;\r\n                tokenReward.transfer(currentRecipient, tokenAmount);\r\n                currentRecipient.transfer(weiAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function sendStableReward(address _from, address _destination, uint _tokenAmount, uint _stableCoinAmount) public onlyOwner{\r\n        require(rewardBalanceOf[_from]>= _tokenAmount);\r\n        tokenReward.transferFrom(_from, address(this), _tokenAmount);\r\n        rewardBalanceOf[_from] -= _tokenAmount;\r\n        totalRewardBalance -= _tokenAmount;\r\n        stableCoinReward.transfer(_destination, _stableCoinAmount);\r\n    }\r\n\r\n    function changeDollarPrice(uint _newPrice) public onlyOwner {\r\n        stableCoinPrice = _newPrice;\r\n    }\r\n\r\n    function withdraw(uint _weiAmount)\r\n      onlyOwner\r\n      public\r\n    {\r\n        address payable wallet = address(uint160(owner));\r\n\r\n        wallet.transfer(_weiAmount);\r\n    }\r\n\r\n    function withdrawTokens(uint _tokenAmount) onlyOwner public {\r\n\r\n        tokenReward.transfer(owner, _tokenAmount);\r\n    }\r\n\r\n     function withdrawAllEther()\r\n      onlyOwner\r\n      public\r\n    {\r\n        address payable wallet = address(uint160(owner));\r\n        address contractAddress = address(this);\r\n        wallet.transfer(contractAddress.balance);\r\n    }\r\n\r\n    function withdrawAllTokens() onlyOwner public {\r\n        uint tokenBalance = tokenReward.balanceOf(address(this));\r\n\r\n        tokenReward.transfer(owner, tokenBalance);\r\n    }\r\n\r\n    function destroy() onlyOwner public {\r\n        selfdestruct(address(this));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeDollarPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAllTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_weiAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAllEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"name\":\"_stableCoinAmount\",\"type\":\"uint256\"}],\"name\":\"sendStableReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_channelId\",\"type\":\"bytes32\"},{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"airdropTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableCoinPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRewardBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableCoinReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"airdrops\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"RewardAirdrop","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8f7106096eb18d4f5887f72652980c3bdc68966230816848b641f78d0c5c395a"}]}