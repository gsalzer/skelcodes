{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Token{\r\n    // token总量，默认会为public变量生成一个getter函数接口，名称为totalSupply().\r\n    uint256 public totalSupply;\r\n\r\n    /// 获取账户_owner拥有token的数量 \r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n\r\n    //从消息发送者账户中往_to账户转数量为_value的token\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n\r\n    //从账户_from中往账户_to转数量为_value的token，与approve方法配合使用\r\n    function transferFrom(address _from, address _to, uint256 _value) returns   \r\n    (bool success);\r\n\r\n    //消息发送账户设置账户_spender能从发送账户中转出数量为_value的token\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n\r\n    //获取账户_spender可以从账户_owner中转出token的数量\r\n    function allowance(address _owner, address _spender) constant returns \r\n    (uint256 remaining);\r\n\r\n    //发生转账时必须要触发的事件 \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    //当函数approve(address _spender, uint256 _value)成功执行时必须触发的事件\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 \r\n    _value);\r\n}\r\n\r\ncontract StandardToken is Token {\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        //默认totalSupply 不会超过最大值 (2^256 - 1).\r\n        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常\r\n        //require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value\r\n        balances[_to] += _value;//往接收账户增加token数量_value\r\n        Transfer(msg.sender, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns \r\n    (bool success) {\r\n        //require(balances[_from] >= _value && allowed[_from][msg.sender] >= \r\n        // _value && balances[_to] + _value > balances[_to]);\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;//接收账户增加token数量_value\r\n        balances[_from] -= _value; //支出账户_from减去token数量_value\r\n        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value\r\n        Transfer(_from, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success)   \r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数\r\n    }\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\n// ERC20 standard token\r\ncontract MUSD is StandardToken{\r\n    \r\n    address public admin; // 管理员\r\n    string public name = \"CHINA MOROCCO MERCANTILE EXCHANGE\"; // 代币名称\r\n    string public symbol = \"MUSD\"; // 代币符号\r\n    uint8 public decimals = 18; // 代币精度\r\n    uint256 public INITIAL_SUPPLY = 10000000000000000000000000; // 总量80亿 *10^18\r\n    // 同一个账户满足任意冻结条件均被冻结\r\n    mapping (address => bool) public frozenAccount; //无限期冻结的账户\r\n    mapping (address => uint256) public frozenTimestamp; // 有限期冻结的账户\r\n\r\n    bool public exchangeFlag = true; // 代币兑换开启\r\n    // 不满足条件或募集完成多出的eth均返回给原账户\r\n    uint256 public minWei = 1;  //最低打 1 wei  1eth = 1*10^18 wei\r\n    uint256 public maxWei = 20000000000000000000000; // 最多一次打 20000 eth\r\n    uint256 public maxRaiseAmount = 20000000000000000000000; // 募集上限 20000 eth\r\n    uint256 public raisedAmount = 0; // 已募集 0 eth\r\n    uint256 public raiseRatio = 200000; // 兑换比例 1eth = 20万token\r\n    // event 通知\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // 构造函数\r\n    constructor() public {\r\n        totalSupply = INITIAL_SUPPLY;\r\n        admin = msg.sender;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n    }\r\n\r\n    // fallback 向合约地址转账 or 调用非合约函数触发\r\n    // 代币自动兑换eth\r\n    function()\r\n    public payable {\r\n        require(msg.value > 0);\r\n        if (exchangeFlag) {\r\n            if (msg.value >= minWei && msg.value <= maxWei){\r\n                if (raisedAmount < maxRaiseAmount) {\r\n                    uint256 valueNeed = msg.value;\r\n                    raisedAmount = raisedAmount + msg.value;\r\n                    if (raisedAmount > maxRaiseAmount) {\r\n                        uint256 valueLeft = raisedAmount - maxRaiseAmount;\r\n                        valueNeed = msg.value - valueLeft;\r\n                        msg.sender.transfer(valueLeft);\r\n                        raisedAmount = maxRaiseAmount;\r\n                    }\r\n                    if (raisedAmount >= maxRaiseAmount) {\r\n                        exchangeFlag = false;\r\n                    }\r\n                    // 已处理过精度 *10^18\r\n                    uint256 _value = valueNeed * raiseRatio;\r\n\r\n                    require(_value <= balances[admin]);\r\n                    balances[admin] = balances[admin] - _value;\r\n                    balances[msg.sender] = balances[msg.sender] + _value;\r\n\r\n                    emit Transfer(admin, msg.sender, _value);\r\n\r\n                }\r\n            } else {\r\n                msg.sender.transfer(msg.value);\r\n            }\r\n        } else {\r\n            msg.sender.transfer(msg.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 修改管理员\r\n    */\r\n    function changeAdmin(\r\n        address _newAdmin\r\n    )\r\n    public\r\n    returns (bool)  {\r\n        require(msg.sender == admin);\r\n        require(_newAdmin != address(0));\r\n        balances[_newAdmin] = balances[_newAdmin] + balances[admin];\r\n        balances[admin] = 0;\r\n        admin = _newAdmin;\r\n        return true;\r\n    }\r\n    /**\r\n    * 增发\r\n    */\r\n    function generateToken(\r\n        address _target,\r\n        uint256 _amount\r\n    )\r\n    public\r\n    returns (bool)  {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        balances[_target] = balances[_target] + _amount;\r\n        totalSupply = totalSupply + _amount;\r\n        INITIAL_SUPPLY = totalSupply;\r\n        return true;\r\n    }\r\n\r\n    // 从合约提现\r\n    // 只能提给管理员\r\n    function withdraw (\r\n        uint256 _amount\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        msg.sender.transfer(_amount);\r\n        return true;\r\n    }\r\n    /**\r\n    * 锁定账户\r\n    */\r\n    function freeze(\r\n        address _target,\r\n        bool _freeze\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        frozenAccount[_target] = _freeze;\r\n        return true;\r\n    }\r\n    /**\r\n    * 通过时间戳锁定账户\r\n    */\r\n    function freezeWithTimestamp(\r\n        address _target,\r\n        uint256 _timestamp\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        frozenTimestamp[_target] = _timestamp;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        * 批量锁定账户\r\n        */\r\n    function multiFreeze(\r\n        address[] _targets,\r\n        bool[] _freezes\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_targets.length == _freezes.length);\r\n        uint256 len = _targets.length;\r\n        require(len > 0);\r\n        for (uint256 i = 0; i < len; i += 1) {\r\n            address _target = _targets[i];\r\n            require(_target != address(0));\r\n            bool _freeze = _freezes[i];\r\n            frozenAccount[_target] = _freeze;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n            * 批量通过时间戳锁定账户\r\n            */\r\n    function multiFreezeWithTimestamp(\r\n        address[] _targets,\r\n        uint256[] _timestamps\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_targets.length == _timestamps.length);\r\n        uint256 len = _targets.length;\r\n        require(len > 0);\r\n        for (uint256 i = 0; i < len; i += 1) {\r\n            address _target = _targets[i];\r\n            require(_target != address(0));\r\n            uint256 _timestamp = _timestamps[i];\r\n            frozenTimestamp[_target] = _timestamp;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n    * 批量转账\r\n    */\r\n    function multiTransfer(\r\n        address[] _tos,\r\n        uint256[] _values\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(!frozenAccount[msg.sender]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_tos.length == _values.length);\r\n        uint256 len = _tos.length;\r\n        require(len > 0);\r\n        uint256 amount = 0;\r\n        for (uint256 i = 0; i < len; i += 1) {\r\n            amount = amount + _values[i];\r\n        }\r\n        require(amount <= balances[msg.sender]);\r\n        for (uint256 j = 0; j < len; j += 1) {\r\n            address _to = _tos[j];\r\n            require(_to != address(0));\r\n            balances[_to] = balances[_to] + _values[j];\r\n            balances[msg.sender] = balances[msg.sender] - _values[j];\r\n            emit Transfer(msg.sender, _to, _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n    * 从调用者转账至_to\r\n    */\r\n    function transfer(\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(!frozenAccount[msg.sender]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - _value;\r\n        balances[_to] = balances[_to] + _value;\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    /*\r\n    * 从调用者作为from代理将from账户中的token转账至to\r\n    * 调用者在from的许可额度中必须>=value\r\n    */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        require(!frozenAccount[_from]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from] - _value;\r\n        balances[_to] = balances[_to] + _value;\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender] - _value;\r\n\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    /**\r\n    * 调整转账代理方spender的代理的许可额度\r\n    */\r\n    function approve(\r\n        address _spender,\r\n        uint256 _value\r\n    ) public\r\n    returns (bool) {\r\n        // 转账的时候会校验balances，该处require无意义\r\n        // require(_value <= balances[msg.sender]);\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    /**\r\n    * 增加转账代理方spender的代理的许可额度\r\n    * 意义不大的function\r\n    */\r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        // uint256 value_ = allowed[msg.sender][_spender].add(_addedValue);\r\n        // require(value_ <= balances[msg.sender]);\r\n        // allowed[msg.sender][_spender] = value_;\r\n\r\n        // emit Approval(msg.sender, _spender, value_);\r\n        return true;\r\n    }\r\n    /**\r\n    * 减少转账代理方spender的代理的许可额度\r\n    * 意义不大的function\r\n    */\r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _subtractedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        // uint256 oldValue = allowed[msg.sender][_spender];\r\n        // if (_subtractedValue > oldValue) {\r\n        //    allowed[msg.sender][_spender] = 0;\r\n        // } else {\r\n        //    uint256 newValue = oldValue.sub(_subtractedValue);\r\n        //    require(newValue <= balances[msg.sender]);\r\n        //   allowed[msg.sender][_spender] = newValue;\r\n        //}\r\n\r\n        // emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    //********************************************************************************\r\n    //查询账户是否存在锁定时间戳\r\n    function getFrozenTimestamp(\r\n        address _target\r\n    )\r\n    public view\r\n    returns (uint256) {\r\n        require(_target != address(0));\r\n        return frozenTimestamp[_target];\r\n    }\r\n    //查询账户是否被锁定\r\n    function getFrozenAccount(\r\n        address _target\r\n    )\r\n    public view\r\n    returns (bool) {\r\n        require(_target != address(0));\r\n        return frozenAccount[_target];\r\n    }\r\n    //查询合约的余额\r\n    function getBalance()\r\n    public view\r\n    returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n    // 修改name\r\n    function setName (\r\n        string _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        name = _value;\r\n        return true;\r\n    }\r\n    // 修改symbol\r\n    function setSymbol (\r\n        string _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        symbol = _value;\r\n        return true;\r\n    }\r\n\r\n    // 修改募集flag\r\n    function setExchangeFlag (\r\n        bool _flag\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        exchangeFlag = _flag;\r\n        return true;\r\n\r\n    }\r\n    // 修改单笔募集下限\r\n    function setMinWei (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        minWei = _value;\r\n        return true;\r\n\r\n    }\r\n    // 修改单笔募集上限\r\n    function setMaxWei (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        maxWei = _value;\r\n        return true;\r\n    }\r\n    // 修改总募集上限\r\n    function setMaxRaiseAmount (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        maxRaiseAmount = _value;\r\n        return true;\r\n    }\r\n\r\n    // 修改已募集数\r\n    function setRaisedAmount (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        raisedAmount = _value;\r\n        return true;\r\n    }\r\n\r\n    // 修改募集比例\r\n    function setRaiseRatio (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        raiseRatio = _value;\r\n        return true;\r\n    }\r\n\r\n    // 销毁合约\r\n    function kill()\r\n    public {\r\n        require(msg.sender == admin);\r\n        selfdestruct(admin);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"maxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setExchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_freezes\",\"type\":\"bool[]\"}],\"name\":\"multiFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"freezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_timestamps\",\"type\":\"uint256[]\"}],\"name\":\"multiFreezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"MUSD","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://14500227afb6330ae06f893217459e3dddb20e8cbe2a2a31f9d162b3c4481179"}]}