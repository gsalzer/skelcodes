{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract BlockchainId is Ownable {\r\n\r\n    event NewCompany(bytes32 companyId, bytes32 merkleRoot);\r\n    event ChangeCompany(bytes32 companyId, bytes32 merkleRoot);\r\n    event DeleteCompany(bytes32 companyId);\r\n\r\n    mapping (bytes32 => bytes32) companyMap;\r\n\r\n    function _createCompany(bytes32 companyId, bytes32 merkleRoot) public onlyOwner() {\r\n        companyMap[companyId] = merkleRoot;\r\n        emit NewCompany(companyId, merkleRoot);\r\n    }\r\n\r\n    function _createCompanies(bytes32[] companyIds, bytes32[] merkleRoots) public onlyOwner() {\r\n        require(companyIds.length == merkleRoots.length);\r\n        for (uint i = 0; i < companyIds.length; i++) {\r\n            _createCompany(companyIds[i], merkleRoots[i]);\r\n        }\r\n    }\r\n\r\n    function getCompany(bytes32 companyId) public view returns (bytes32) {\r\n        return companyMap[companyId];\r\n    }\r\n\r\n    function _updateCompany(bytes32 companyId, bytes32 merkleRoot) public onlyOwner() {\r\n        companyMap[companyId] = merkleRoot;\r\n        emit ChangeCompany(companyId, merkleRoot);\r\n    }\r\n\r\n    function _updateCompanies(bytes32[] companyIds, bytes32[] merkleRoots) public onlyOwner() {\r\n        require(companyIds.length == merkleRoots.length);\r\n        for (uint i = 0; i < companyIds.length; i++) {\r\n            _updateCompany(companyIds[i], merkleRoots[i]);\r\n        }\r\n    }\r\n\r\n    function _deleteCompany(bytes32 companyId) public onlyOwner() {\r\n        delete companyMap[companyId];\r\n        emit DeleteCompany(companyId);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"companyId\",\"type\":\"bytes32\"}],\"name\":\"_deleteCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"companyIds\",\"type\":\"bytes32[]\"},{\"name\":\"merkleRoots\",\"type\":\"bytes32[]\"}],\"name\":\"_createCompanies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"companyId\",\"type\":\"bytes32\"},{\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"_createCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"companyId\",\"type\":\"bytes32\"}],\"name\":\"getCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"companyId\",\"type\":\"bytes32\"},{\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"_updateCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"companyIds\",\"type\":\"bytes32[]\"},{\"name\":\"merkleRoots\",\"type\":\"bytes32[]\"}],\"name\":\"_updateCompanies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"companyId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"NewCompany\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"companyId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"ChangeCompany\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"companyId\",\"type\":\"bytes32\"}],\"name\":\"DeleteCompany\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BlockchainId","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d5eb1d8219e35e7066833d4e582af1051211e6dfb65aa4e3fc1246adee8f0daf"}]}