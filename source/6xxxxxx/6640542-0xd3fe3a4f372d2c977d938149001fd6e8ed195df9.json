{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint256 a, uint256 b) public pure  returns (uint256)  {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b)public pure returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b)public pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b)public pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function _assert(bool assertion)public pure {\r\n    assert(!assertion);\r\n  }\r\n}\r\n\r\n\r\ncontract ERC20Interface {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public  decimals;\r\n  uint public totalSupply;\r\n  function transfer(address _to, uint256 _value)public returns (bool success);\r\n  function transferFrom(address _from, address _to, uint256 _value)public returns (bool success);\r\n  \r\n  function approve(address _spender, uint256 _value)public returns (bool success);\r\n  function allowance(address _owner, address _spender)public view returns (uint256 remaining);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n }\r\n \r\ncontract ERC20 is ERC20Interface,SafeMath {\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    constructor(string _name) public {\r\n       name = _name;  // \"UpChain\";\r\n       symbol = \"FMC \";\r\n       decimals = 4;\r\n       totalSupply = 900000000000;\r\n       balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\t\r\n  function transfer(address _to, uint256 _value)public returns (bool success) {\r\n      require(_to != address(0));\r\n      require(balanceOf[msg.sender] >= _value);\r\n      require(balanceOf[ _to] + _value >= balanceOf[ _to]);  \r\n\r\n      balanceOf[msg.sender] =SafeMath.safeSub(balanceOf[msg.sender],_value) ;\r\n      balanceOf[_to] =SafeMath.safeAdd(balanceOf[_to] ,_value);\r\n\r\n      emit Transfer(msg.sender, _to, _value);\r\n\r\n      return true;\r\n  }\r\n\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)public returns (bool success) {\r\n      require(_to != address(0));\r\n      require(allowed[_from][msg.sender] >= _value);\r\n      require(balanceOf[_from] >= _value);\r\n      require(balanceOf[ _to] + _value >= balanceOf[ _to]);\r\n\r\n      balanceOf[_from] =SafeMath.safeSub(balanceOf[_from],_value) ;\r\n      balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to],_value);\r\n\r\n      allowed[_from][msg.sender] =SafeMath.safeSub(allowed[_from][msg.sender], _value);\r\n\r\n      emit Transfer(msg.sender, _to, _value);\r\n      return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value)public returns (bool success) {\r\n      allowed[msg.sender][_spender] = _value;\r\n\r\n      emit Approval(msg.sender, _spender, _value);\r\n      return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender)public view returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnerShip(address newOwer) public onlyOwner {\r\n        owner = newOwer;\r\n    }\r\n\r\n}\r\n\r\ncontract AdvanceToken is ERC20, owned{\r\n\r\n    mapping (address => bool) public frozenAccount;\r\n\r\n    event FrozenFunds(address target, bool frozen);\r\n\r\n    constructor (string _name) ERC20(_name) public {\r\n\r\n    }\r\n\r\n\r\n    function freezeAccount(address target, bool freeze) public onlyOwner {\r\n        frozenAccount[target] = freeze;\r\n        emit FrozenFunds(target, freeze);\r\n    }\r\n\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        success = _transfer(msg.sender, _to, _value);\r\n  }\r\n\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(allowed[_from][msg.sender] >= _value);\r\n        success =  _transfer(_from, _to, _value);\r\n        allowed[_from][msg.sender] =SafeMath.safeSub(allowed[_from][msg.sender],_value) ;\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint256 _value) internal returns (bool) {\r\n      require(_to != address(0));\r\n      require(!frozenAccount[_from]);\r\n\r\n      require(balanceOf[_from] >= _value);\r\n      require(balanceOf[ _to] + _value >= balanceOf[ _to]);\r\n\r\n      balanceOf[_from] =SafeMath.safeSub(balanceOf[_from],_value) ;\r\n      balanceOf[_to] =SafeMath.safeAdd(balanceOf[_to],_value) ;\r\n\r\n      emit Transfer(_from, _to, _value);\r\n      return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwer\",\"type\":\"address\"}],\"name\":\"transferOwnerShip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assertion\",\"type\":\"bool\"}],\"name\":\"_assert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AdvanceToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003464d430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://26846b8624ff2f96fefbeae6d9b978f602a8180cbb6756f88cac67ff4130f1e5"}]}