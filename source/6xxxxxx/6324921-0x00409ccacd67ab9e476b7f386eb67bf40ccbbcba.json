{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\ncontract Snickers {\r\n   /**\r\n    *                          --- INFO ---\r\n    * The Snickers is simple deposit system, that pays back 5% a day profit\r\n    * as long as you are willing to take it and the contract has funds. You\r\n    * can send funds multiple times to Snickers and it will sum up and\r\n    * increase your profits for next payout. There is a onetime fee of\r\n    * 2 day profit amount to creators of this contract.\r\n    * If you send ETH > 0 and already have positive deposit then Snickers will\r\n    * also count this as payout procedure and send profit you have collected.\r\n    *\r\n    *                       --- HOW TO USE ---\r\n    * Participate   -   Send any amount of ETH that is greater than 0 to this\r\n    *                   contract and you will be registered for payouts at 5%\r\n    *                   per day of amount you sent.\r\n    * Profit payout -   Any time send 0 ETH to this contract and it will calculate\r\n    *                   current profit collected and send it to you.\r\n    *\r\n    * Version: 1.15\r\n    * Optimisation tests: PASSED\r\n    * Assignee: Mathias\r\n    */\r\n\r\n   address seed;\r\n   uint256 daily_percent;\r\n\r\n   constructor() public {\r\n       seed = msg.sender;\r\n       daily_percent = 5;\r\n   }\r\n\r\n   mapping (address => uint256) balances;\r\n   mapping (address => uint256) timestamps;\r\n\r\n   function() external payable {\r\n       // Check for mailicious transactions\r\n       require(msg.value >= 0);\r\n\r\n       // Send onetime payment to seed\r\n       seed.transfer(msg.value / (daily_percent * 2));\r\n\r\n       uint block_timestamp = now;\r\n\r\n       if (balances[msg.sender] != 0) {\r\n           \r\n           // Calculate payout amount. There are 86400 seconds in one day\r\n           uint256 pay_out = balances[msg.sender] * daily_percent / 100 * (block_timestamp - timestamps[msg.sender]) / 86400;\r\n\r\n           // If there are not enough funds in contract let's send everything we can\r\n           if (address(this).balance < pay_out) pay_out = address(this).balance;\r\n\r\n           msg.sender.transfer(pay_out);\r\n\r\n           // Log the payout event\r\n           emit Payout(msg.sender, pay_out);\r\n       }\r\n\r\n       timestamps[msg.sender] = block_timestamp;\r\n       balances[msg.sender] += msg.value;\r\n\r\n       // Log if someone adds funds\r\n       if (msg.value > 0) emit AcountTopup(msg.sender, balances[msg.sender]);\r\n   }\r\n\r\n   event Payout(address receiver, uint256 amount);\r\n   event AcountTopup(address participiant, uint256 ineterest);\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"participiant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ineterest\",\"type\":\"uint256\"}],\"name\":\"AcountTopup\",\"type\":\"event\"}]","ContractName":"Snickers","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5e9e96aec738ab322622c744d9d3391da1daaef13705c4ac0c9441dc26ecc8f0"}]}