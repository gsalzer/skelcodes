{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.25;\r\ncontract Oasis{\r\n\tstring public symbol;\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;\r\n\tuint basekeynum;//4500\r\n\tuint basekeysub;//500\r\n\tuint basekeylast;//2000\r\n    uint startprice;\r\n    uint startbasekeynum;//4500\r\n    uint startbasekeylast;//2000\r\n\taddress owner;\r\n\tbool public actived;\r\n\tuint public keyprice;//钥匙的价格\r\n\tuint public keysid;//当前钥匙的最大id\r\n\tuint public onceOuttime;\r\n\tuint8 public per;//用户每日静态的释放比例\r\n\tuint public allprize;\r\n\tuint public allprizeused;\r\n\t\r\n\tuint[] public mans;//用户上线人数的数组\r\n\tuint[] public pers;//用户上线分额的比例数组\r\n\tuint[] public prizeper;//用户每日静态的释放比例\r\n\tuint[] public prizelevelsuns;//用户上线人数的数组\r\n\tuint[] public prizelevelmans;//用户上线人数的比例数组\r\n\tuint[] public prizelevelsunsday;//用户上线人数的数组\r\n\tuint[] public prizelevelmansday;//用户上线人数的比例数组\r\n\tuint[] public prizeactivetime;\r\n\t\r\n\taddress[] public mansdata;\r\n\tuint[] public moneydata;\r\n\tuint[] public timedata;\r\n\tuint public pubper;\r\n\tuint public subper;\r\n\tuint public luckyper;\r\n\tuint public lastmoney;\r\n\tuint public lastper;\r\n\tuint public lasttime;\r\n\tuint public sellkeyper;\r\n\t\r\n\tbool public isend;\r\n\tuint public tags;\r\n\tuint public opentime;\r\n\t\r\n\tuint public runper;\r\n\tuint public sellper;\r\n\tuint public sysday;\r\n\tuint public cksysday;\r\n\r\n\tmapping(address => uint) balances;//用户的钥匙数量\r\n\tmapping(address => uint) systemtag;//用户的系统标志 \r\n\tmapping(address => uint) eths;//用户的资产数量\r\n\tmapping(address => uint) tzs;//用户的资产数量\r\n\tmapping(address => uint) usereths;//用户的总投资\r\n\tmapping(address => uint) userethsused;//用户的总投资\r\n\tmapping(address => uint) runs;//用户的动态奖励\r\n\tmapping(address => uint) used;//用户已使用的资产\r\n\tmapping(address => uint) runused;//用户已使用的动态\r\n\tmapping(address => mapping(address => uint)) allowed;//授权金额\r\n\t/* 冻结账户 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\t//释放 \r\n\tmapping(address => uint[]) public mycantime; //时间\r\n\tmapping(address => uint[]) public mycanmoney; //金额\r\n\t//上线释放\r\n\tmapping(address => uint[]) public myruntime; //时间\r\n\tmapping(address => uint[]) public myrunmoney; //金额\r\n\t//上家地址\r\n\tmapping(address => address) public fromaddr;\r\n\t//一代数组\r\n\tmapping(address => address[]) public mysuns;\r\n\t//2代数组\r\n\tmapping(address => address[]) public mysecond;\r\n\t//3代数组\r\n\tmapping(address => address[]) public mythird;\r\n\t//all 3代数组days moeny\r\n\t//mapping(address => mapping(uint => uint)) public mysunsdayget;\r\n\t//all 3代数组days moeny\r\n\tmapping(address => mapping(uint => uint)) public mysunsdaynum;\r\n\t//current day prize\r\n\tmapping(address => mapping(uint => uint)) public myprizedayget;\r\n\t//mapping(address => mapping(uint => uint)) public myprizedaygetdata;\r\n\tmapping(uint => address[]) public userlevels;\r\n\tmapping(uint => mapping(uint => uint)) public userlevelsnum;\r\n\t//管理员帐号\r\n\tmapping(address => bool) public admins;\r\n\t//用户钥匙id\r\n\tmapping(address => uint) public mykeysid;\r\n\t//与用户钥匙id对应\r\n\tmapping(uint => address) public myidkeys;\r\n\tmapping(address => uint) public mykeyeths;\r\n\tmapping(address => uint) public mykeyethsused;\r\n\t\r\n\t//all once day get all\r\n\tmapping(uint => uint) public daysgeteths;\r\n\tmapping(uint => uint) public dayseths;\r\n\t//user once day pay\r\n\tmapping(address => mapping(uint => uint)) public daysusereths;\r\n\t\r\n\tmapping(uint => uint)  public ethnum;//用户总资产\r\n\tmapping(uint => uint)  public sysethnum;//系统总eth\r\n\tmapping(uint => uint)  public userethnum;//用户总eth\r\n\tmapping(uint => uint)  public userethnumused;//用户总eth\r\n\tmapping(uint => uint)  public syskeynum;//系统总key\r\n\r\n\t/* 通知 */\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\tevent FrozenFunds(address target, bool frozen);\r\n\tmodifier onlySystemStart() {\r\n        require(actived == true);\r\n\t    //require(isend == false);\r\n\t    require(tags == systemtag[msg.sender]);\r\n\t    require(!frozenAccount[msg.sender]);\r\n        _;\r\n    }\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\t\tsymbol = \"OASIS\";\r\n\t\tname = \"Oasis\";\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 50000000 ether;\r\n\t\r\n\t\tactived = true;\r\n\t\ttags = 0;\r\n\t\tethnum[0] = 0;\r\n\t\tsysethnum[0] = 0;\r\n\t\tuserethnum[0] = 0;\r\n\t\tuserethnumused[0] = 0;\r\n\t\t//onceOuttime = 16 hours; //增量的时间 正式 \r\n\t\tonceOuttime = 20 seconds;//test\r\n        keysid = 55555;\r\n        \r\n        //basekeynum = 2000 ether;\r\n        //basekeysub = 500 ether;\r\n        //basekeylast = 2500 ether;\r\n        //startbasekeynum = 2000 ether;\r\n        //startbasekeylast = 2500 ether;\r\n        basekeynum = 20 ether;//test\r\n        basekeysub = 5 ether;//test\r\n        basekeylast = 25 ether;//test\r\n        startbasekeynum = 20 ether;//test\r\n        startbasekeylast = 25 ether;//test\r\n        allprize = 0;\r\n\t\tbalances[this] = _totalSupply;\r\n\t\tper = 15;\r\n\t\trunper = 20;\r\n\t\tmans = [2,4,6];\r\n\t\tpers = [20,15,10];\r\n\t\tprizeper = [2,2,2];\r\n\t\t//prizelevelsuns = [20,30,50];\r\n\t\t//prizelevelmans = [100,300,800];\r\n\t\t//prizelevelsunsday = [2,4,6];\r\n\t\t//prizelevelmansday = [10 ether,30 ether,50 ether];\r\n\t\t\r\n\t\tprizelevelsuns = [2,3,5];//test\r\n\t\tprizelevelmans = [3,5,8];//test\r\n\t\tprizelevelsunsday = [1,2,3];//test\r\n\t\tprizelevelmansday = [1 ether,3 ether,5 ether];//test\r\n\t\t\r\n\t\tprizeactivetime = [0,0,0];\r\n\t\tpubper = 2;\r\n\t\tsubper = 120;\r\n\t\tluckyper = 5;\r\n\t\tlastmoney = 0;\r\n\t\tlastper = 2;\r\n\t\t//lasttime = 8 hours;\r\n\t\tlasttime = 300 seconds;//test\r\n\t\t//sysday = 1 days;\r\n\t\t//cksysday = 8 hours;\r\n\t\tsysday = 1 hours; //test\r\n\t\tcksysday = 0 seconds;//test\r\n\t\t\r\n\t\tkeyprice = 0.01 ether;\r\n\t\tstartprice = 0.01 ether;\r\n\t\t//keyprice = 0.0001 ether;//test\r\n\t\tsellkeyper = 30;\r\n\t\tsellper = 10;\r\n\t\tisend = false;\r\n\t\topentime = now;\r\n\t\t//userethnum = 0;\r\n\t\t//sysethnum = 0;\r\n\t\t//balances[owner] = _totalSupply;\r\n\t\towner = msg.sender;\r\n\t\temit Transfer(address(0), this, _totalSupply);\r\n\r\n\t}\r\n\r\n\t/* 获取用户金额 */\r\n\tfunction balanceOf(address tokenOwner) public view returns(uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\t/*\r\n\tfunction getper() public view returns(uint onceOuttimes,uint perss,uint runpers,uint pubpers,uint subpers,uint luckypers,uint lastpers,uint sellkeypers,uint sellpers,uint lasttimes,uint sysdays,uint cksysdays) {\r\n\t    onceOuttimes = onceOuttime;//0\r\n\t    perss = per;//1\r\n\t    runpers = runper;//2\r\n\t    pubpers = pubper;//3\r\n\t    subpers = subper;//4\r\n\t    luckypers = luckyper;//5\r\n\t    lastpers = lastper;//6\r\n\t    sellkeypers = sellkeyper;//7\r\n\t    sellpers = sellper;//8\r\n\t    lasttimes = lasttime;//9\r\n\t    sysdays = sysday;//10\r\n\t    cksysdays = cksysday;//11\r\n\t    \r\n\t}*/\r\n\tfunction indexshow(address user) public view returns(uint totaleths,uint lttime,uint ltmoney,address ltaddr,uint myeths,uint mycans,uint dayuserget,uint dayusereth,uint keyprices,uint mykeynum,uint ltkeynum,uint mykeyid){\r\n\t    totaleths = userethnum[tags];//0\r\n\t    lttime = timedata[timedata.length - 1];//1\r\n\t    ltmoney = moneydata[moneydata.length - 1];//2\r\n\t    ltaddr = mansdata[mansdata.length - 1];//3\r\n\t    myeths = tzs[user];//4\r\n\t    mycans = getcanuse(user);//5\r\n\t    uint d = gettoday();\r\n\t    dayuserget = myprizedayget[user][d];//.6\r\n\t    dayusereth = daysusereths[user][d];//7\r\n\t    keyprices = keyprice;//8\r\n\t    mykeynum = balanceOf(user);//9\r\n\t    ltkeynum = leftnum();//10\r\n\t    mykeyid = mykeysid[user];//11\r\n\t    \r\n\t}\r\n\tfunction prizeshow(address user) public view returns(uint totalgold,uint lttime,uint levelid,uint man1,uint man2,uint man3,uint len1,uint len2,uint len3,uint nl1,uint nl2,uint nl3){\r\n\t    totalgold = allprize - allprizeused;//0\r\n\t    lttime = timedata[timedata.length - 1];//1\r\n\t    levelid = getlevel(user);//2\r\n\t    man1 = mysuns[user].length;//3\r\n\t    man2 = mysuns[user].length;//4\r\n\t    man3 = mysuns[user].length;//5\r\n\t    len1 = userlevels[1].length;//6\r\n\t    len2 = userlevels[2].length;//7\r\n\t    len3 = userlevels[3].length;//8\r\n\t    uint d = gettoday();\r\n\t    nl1 = userlevelsnum[1][d];//9\r\n\t    nl2 = userlevelsnum[2][d];//10\r\n\t    nl3 = userlevelsnum[3][d];//11\r\n\t}\r\n\t\r\n\tfunction gettags(address addr) public view returns(uint t) {\r\n\t    t = systemtag[addr];\r\n\t}\r\n\t/*\r\n\t * 添加金额，为了统计用户的进出\r\n\t */\r\n\tfunction addmoney(address _addr, uint256 _money, uint _day) private returns(bool){\r\n\t\teths[_addr] += _money;\r\n\t\tmycanmoney[_addr].push(_money);\r\n\t\tmycantime[_addr].push((now - (_day * 86400)));\r\n\r\n\t}\r\n\t/*\r\n\t * 用户金额减少时的触发\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction reducemoney(address _addr, uint256 _money) private returns(bool){\r\n\t    if(eths[_addr] >= _money && tzs[_addr] >= _money) {\r\n\t        used[_addr] += _money;\r\n    \t\teths[_addr] -= _money;\r\n    \t\ttzs[_addr] -= _money;\r\n    \t\treturn(true);\r\n\t    }else{\r\n\t        return(false);\r\n\t    }\r\n\t\t\r\n\t}\r\n\t/*\r\n\t * 添加run金额，为了统计用户的进出\r\n\t */\r\n\tfunction addrunmoney(address _addr, uint256 _money, uint _day) private {\r\n\t\tuint256 _days = _day * (1 days);\r\n\t\tuint256 _now = now - _days;\r\n\t\truns[_addr] += _money;\r\n\t\tmyrunmoney[_addr].push(_money);\r\n\t\tmyruntime[_addr].push(_now);\r\n\r\n\t}\r\n\t/*\r\n\t * 用户金额减少时的触发\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction reducerunmoney(address _addr, uint256 _money) private {\r\n\t\truns[_addr] -= _money;\r\n\t\trunused[_addr] += _money;\r\n\t}\r\n\tfunction geteths(address addr) public view returns(uint) {\r\n\t    return(eths[addr]);\r\n\t}\r\n\tfunction getruns(address addr) public view returns(uint) {\r\n\t    return(runs[addr]);\r\n\t}\r\n\t/*\r\n\t * 获取用户的可用金额\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getcanuse(address tokenOwner) public view returns(uint) {\r\n\t\tuint256 _now = now;\r\n\t\tuint256 _left = 0;\r\n\t\tfor(uint256 i = 0; i < mycantime[tokenOwner].length; i++) {\r\n\t\t\tuint256 stime = mycantime[tokenOwner][i];\r\n\t\t\tuint256 smoney = mycanmoney[tokenOwner][i];\r\n\t\t\tuint256 lefttimes = _now - stime;\r\n\t\t\tif(lefttimes >= onceOuttime) {\r\n\t\t\t\tuint256 leftpers = lefttimes / onceOuttime;\r\n\t\t\t\tif(leftpers > 100) {\r\n\t\t\t\t\tleftpers = 100;\r\n\t\t\t\t}\r\n\t\t\t\t_left = smoney * leftpers / 100 + _left;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(_left < used[tokenOwner]) {\r\n\t\t\treturn(0);\r\n\t\t}\r\n\t\tif(_left > eths[tokenOwner]) {\r\n\t\t\treturn(eths[tokenOwner]);\r\n\t\t}\r\n\t\t_left = _left - used[tokenOwner];\r\n\t\t\r\n\t\treturn(_left);\r\n\t}\r\n\t/*\r\n\t * 获取用户的可用金额\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getcanuserun(address tokenOwner) public view returns(uint) {\r\n\t\tuint256 _now = now;\r\n\t\tuint256 _left = 0;\r\n\t\tfor(uint256 i = 0; i < myruntime[tokenOwner].length; i++) {\r\n\t\t\tuint256 stime = myruntime[tokenOwner][i];\r\n\t\t\tuint256 smoney = myrunmoney[tokenOwner][i];\r\n\t\t\tuint256 lefttimes = _now - stime;\r\n\t\t\tif(lefttimes >= onceOuttime) {\r\n\t\t\t\tuint256 leftpers = lefttimes / onceOuttime;\r\n\t\t\t\tif(leftpers > 100) {\r\n\t\t\t\t\tleftpers = 100;\r\n\t\t\t\t}\r\n\t\t\t\t_left = smoney * leftpers / 100 + _left;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(_left < runused[tokenOwner]) {\r\n\t\t\treturn(0);\r\n\t\t}\r\n\t\tif(_left > runs[tokenOwner]) {\r\n\t\t\treturn(runs[tokenOwner]);\r\n\t\t}\r\n\t\t_left = _left - runused[tokenOwner];\r\n\t\t\r\n\t\t\r\n\t\treturn(_left);\r\n\t}\r\n\r\n\t/*\r\n\t * 用户转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction _transfer(address from, address to, uint tokens) private{\r\n\t    \r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(actived == true);\r\n\t\t//\r\n\t\trequire(from != to);\r\n\t\t//如果用户没有上家\r\n\t\t// 防止转移到0x0， 用burn代替这个功能\r\n        require(to != 0x0);\r\n        // 检测发送者是否有足够的资金\r\n        require(balances[from] >= tokens);\r\n        // 检查是否溢出（数据类型的溢出）\r\n        require(balances[to] + tokens > balances[to]);\r\n        // 将此保存为将来的断言， 函数最后会有一个检验\r\n        uint previousBalances = balances[from] + balances[to];\r\n        // 减少发送者资产\r\n        balances[from] -= tokens;\r\n        // 增加接收者的资产\r\n        balances[to] += tokens;\r\n        // 断言检测， 不应该为错\r\n        assert(balances[from] + balances[to] == previousBalances);\r\n        \r\n\t\temit Transfer(from, to, tokens);\r\n\t}\r\n\t/* 传递tokens */\r\n    function transfer(address _to, uint256 _value) onlySystemStart() public returns(bool){\r\n        _transfer(msg.sender, _to, _value);\r\n        mykeyethsused[msg.sender] += _value;\r\n        return(true);\r\n    }\r\n    //激活钥匙\r\n    function activekey() onlySystemStart() public returns(bool) {\r\n\t    address addr = msg.sender;\r\n        uint keyval = 1 ether;\r\n        require(balances[addr] >= keyval);\r\n        require(mykeysid[addr] < 1);\r\n        //require(fromaddr[addr] == address(0));\r\n        keysid = keysid + 1;\r\n\t    mykeysid[addr] = keysid;\r\n\t    myidkeys[keysid] = addr;\r\n\t    \r\n\t    balances[addr] -= keyval;\r\n\t    balances[owner] += keyval;\r\n\t    emit Transfer(addr, owner, keyval);\r\n\t    \r\n\t    //_transfer(addr, owner, keyval);\r\n\t    return(true);\r\n\t    \r\n    }\r\n\t\r\n\t/*\r\n\t * 获取上家地址\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getfrom(address _addr) public view returns(address) {\r\n\t\treturn(fromaddr[_addr]);\r\n\t}\r\n    function gettopid(address addr) public view returns(uint) {\r\n        address topaddr = fromaddr[addr];\r\n        if(topaddr == address(0)) {\r\n            return(0);\r\n        }\r\n        uint keyid = mykeysid[topaddr];\r\n        if(keyid > 0 && myidkeys[keyid] == topaddr) {\r\n            return(keyid);\r\n        }else{\r\n            return(0);\r\n        }\r\n    }\r\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\r\n\t    require(actived == true);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 授权转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\tbalances[from] -= tokens;\r\n\t\tallowed[from][msg.sender] -= tokens;\r\n\t\tbalances[to] += tokens;\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取授权信息\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\t\r\n\r\n\t/// 冻结 or 解冻账户\r\n\tfunction freezeAccount(address target, bool freeze) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t/*\r\n\t * 设置管理员\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction admAccount(address target, bool freeze) public {\r\n\t    require(msg.sender == owner);\r\n\t\tadmins[target] = freeze;\r\n\t}\r\n\t\r\n\t/*\r\n\t * 设置是否开启\r\n\t * @param {Object} bool\r\n\t */\r\n\tfunction setactive(bool t) public {\r\n\t    require(msg.sender == owner);\r\n\t\tactived = t;\r\n\t}\r\n\r\n\t/*\r\n\t * 向账户拨发资金\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction mintToken(address target, uint256 mintedAmount) public{\r\n\t    require(msg.sender == owner);\r\n\t\trequire(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n\t\tbalances[target] += mintedAmount;\r\n\t\tbalances[this] -= mintedAmount;\r\n\t\temit Transfer(this, target, mintedAmount);\r\n\t}\r\n\t\r\n\t\r\n\tfunction getmykeyid(address addr) public view returns(uint ky) {\r\n\t    ky = mykeysid[addr];\r\n\t}\r\n\tfunction getyestoday() public view returns(uint d) {\r\n\t    uint today = gettoday();\r\n\t    d = today - sysday;\r\n\t}\r\n\t\r\n\tfunction gettoday() public view returns(uint d) {\r\n\t    uint n = now;\r\n\t    d = n - n%sysday - cksysday;\r\n\t}\r\n\t\r\n\t\r\n\tfunction getlevel(address addr) public view returns(uint) {\r\n\t    uint num1 = mysuns[addr].length;\r\n\t    uint num2 = mysecond[addr].length;\r\n\t    uint num3 = mythird[addr].length;\r\n\t    uint nums = num1 + num2 + num3;\r\n\t    if(num1 >= prizelevelsuns[2] && nums >= prizelevelmans[2]) {\r\n\t        return(3);\r\n\t    }\r\n\t    if(num1 >= prizelevelsuns[1] && nums >= prizelevelmans[1]) {\r\n\t        return(2);\r\n\t    }\r\n\t    if(num1 >= prizelevelsuns[0] && nums >= prizelevelmans[0]) {\r\n\t        return(1);\r\n\t    }\r\n\t    return(0);\r\n\t}\r\n\t\r\n\tfunction gettruelevel(uint n, uint m) public view returns(uint) {\r\n\t    if(n >= prizelevelsunsday[2] && m >= prizelevelmansday[2]) {\r\n\t        return(2);\r\n\t    }\r\n\t    if(n >= prizelevelsunsday[1] && m >= prizelevelmansday[1]) {\r\n\t        return(1);\r\n\t    }\r\n\t    if(n >= prizelevelsunsday[0] && m >= prizelevelmansday[0]) {\r\n\t        return(0);\r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction getprize() onlySystemStart() public returns(bool) {\r\n\t    uint d = getyestoday();\r\n\t    address user = msg.sender;\r\n\t    uint level = getlevel(user);\r\n\t   \r\n\t    uint money = myprizedayget[user][d];\r\n\t    uint mymans = mysunsdaynum[user][d];\r\n\t    if(level > 0 && money > 0) {\r\n\t        uint p = level - 1;\r\n\t        uint activedtime = prizeactivetime[p];\r\n\t        require(activedtime > 0);\r\n\t        require(activedtime < now);\r\n\t        uint allmoney = allprize - allprizeused;\r\n\t        if(now - activedtime > sysday) {\r\n\t            p = gettruelevel(mymans, money);\r\n\t        }\r\n\t        uint ps = (allmoney*prizeper[p]/100)/userlevels[level].length;\r\n\t        //eths[user] = eths[user].add(ps);\r\n\t        addmoney(user, ps, 100);\r\n\t        myprizedayget[user][d] -= money;\r\n\t        allprizeused += money;\r\n\t    }\r\n\t}\r\n\tfunction setactivelevel(uint level) private returns(bool) {\r\n\t    uint t = prizeactivetime[level];\r\n\t    if(t < 1) {\r\n\t        prizeactivetime[level] = now + sysday;\r\n\t    }\r\n\t    return(true);\r\n\t}\r\n\tfunction getactiveleveltime(uint level) public view returns(uint t) {\r\n\t    t = prizeactivetime[level];\r\n\t}\r\n\tfunction setuserlevel(address user) onlySystemStart() public returns(bool) {\r\n\t    uint level = getlevel(user);\r\n\t    bool has = false;\r\n\t    uint i = 0;\r\n\t    uint d = gettoday();\r\n\t    if(level == 1) {\r\n\t        \r\n\t        for(; i < userlevels[1].length; i++) {\r\n\t            if(userlevels[1][i] == user) {\r\n\t                has = true;\r\n\t            }\r\n\t        }\r\n\t        if(has == false) {\r\n\t            userlevels[1].push(user);\r\n\t            userlevelsnum[1][d]++;\r\n\t            setactivelevel(0);\r\n\t            return(true);\r\n\t        }\r\n\t    }\r\n\t    if(level == 2) {\r\n\t        i = 0;\r\n\t        if(has == true) {\r\n\t            for(; i < userlevels[1].length; i++) {\r\n    \t            if(userlevels[1][i] == user) {\r\n    \t                delete userlevels[1][i];\r\n    \t            }\r\n    \t        }\r\n    \t        userlevels[2].push(user);\r\n    \t        userlevelsnum[2][d]++;\r\n    \t        setactivelevel(1);\r\n    \t        return(true);\r\n\t        }else{\r\n\t           for(; i < userlevels[2].length; i++) {\r\n    \t            if(userlevels[2][i] == user) {\r\n    \t                has = true;\r\n    \t            }\r\n    \t        }\r\n    \t        if(has == false) {\r\n    \t            userlevels[2].push(user);\r\n    \t            userlevelsnum[2][d]++;\r\n    \t            setactivelevel(1);\r\n    \t            return(true);\r\n    \t        }\r\n\t        }\r\n\t    }\r\n\t    if(level == 3) {\r\n\t        i = 0;\r\n\t        if(has == true) {\r\n\t            for(; i < userlevels[2].length; i++) {\r\n    \t            if(userlevels[2][i] == user) {\r\n    \t                delete userlevels[2][i];\r\n    \t            }\r\n    \t        }\r\n    \t        userlevels[3].push(user);\r\n    \t        userlevelsnum[3][d]++;\r\n    \t        setactivelevel(2);\r\n    \t        return(true);\r\n\t        }else{\r\n\t           for(; i < userlevels[3].length; i++) {\r\n    \t            if(userlevels[3][i] == user) {\r\n    \t                has = true;\r\n    \t            }\r\n    \t        }\r\n    \t        if(has == false) {\r\n    \t            userlevels[3].push(user);\r\n    \t            userlevelsnum[3][d]++;\r\n    \t            setactivelevel(2);\r\n    \t            return(true);\r\n    \t        }\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction getfromsun(address addr, uint money, uint amount) private returns(bool){\r\n\t    address f1 = fromaddr[addr];\r\n\t    address f2 = fromaddr[f1];\r\n\t    address f3 = fromaddr[f2];\r\n\t    uint d = gettoday();\r\n\t    if(f1 != address(0) && mysuns[f1].length >= mans[0]) {\r\n\t        addrunmoney(f1, ((money*per/1000)*pers[0])/100, 0);\r\n\t    \tmyprizedayget[f1][d] += amount;\r\n\t    }\r\n\t    if(f2 != address(0) && mysuns[f2].length >= mans[1]) {\r\n\t        addrunmoney(f2, ((money*per/1000)*pers[1])/100, 0);\r\n\t    \tmyprizedayget[f2][d] += amount;\r\n\t    }\r\n\t    if(f3 != address(0) && mysuns[f3].length >= mans[2]) {\r\n\t        addrunmoney(f3, ((money*per/1000)*pers[2])/100, 0);\r\n\t    \tmyprizedayget[f3][d] += amount;\r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction setpubprize(uint sendmoney) private returns(bool) {\r\n\t    uint len = moneydata.length;\r\n\t    if(len > 0) {\r\n\t        uint all = 0;\r\n\t        uint start = 0;\r\n\t        \r\n\t        if(len > 10) {\r\n\t            start = len - 10;\r\n\t        }\r\n\t        for(uint i = start; i < len; i++) {\r\n\t            all += moneydata[i];\r\n\t        }\r\n\t        //uint sendmoney = amount*pubper/100;\r\n\t        for(; start < len; start++) {\r\n\t            addmoney(mansdata[start], sendmoney*moneydata[start]/all, 100);\r\n\t        }\r\n\t    }\r\n\t    return(true);\r\n\t}\r\n\tfunction getluckyuser() public view returns(address addr) {\r\n\t    uint d = gettoday();\r\n\t    uint t = getyestoday();\r\n\t    uint maxmoney = 1 ether;\r\n\t    for(uint i = 0; i < moneydata.length; i++) {\r\n\t        if(timedata[i] > t && timedata[i] < d && moneydata[i] >= maxmoney) {\r\n\t            maxmoney = moneydata[i];\r\n\t            addr = mansdata[i];\r\n\t        }\r\n\t    }\r\n\t}\r\n\tfunction getluckyprize() onlySystemStart() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    require(user == getluckyuser());\r\n\t    uint d = getyestoday();\r\n\t    require(daysusereths[user][d] > 0);\r\n\t    addmoney(user, dayseths[d]*luckyper/1000, 100);\r\n\t}\r\n\t\r\n\tfunction runtoeth(uint amount) onlySystemStart() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    uint can = getcanuserun(user);\r\n\t    uint kn = balances[user];\r\n\t    uint usekey = amount*runper/100;\r\n\t    require(usekey <= kn);\r\n\t    require(runs[user] >= can);\r\n\t    require(can >= amount);\r\n\t    \r\n\t    //runs[user] = runs[user].sub(amount);\r\n\t    reducerunmoney(user, amount);\r\n\t    //eths[user] = eths[user].add(amount);\r\n\t    addmoney(user, amount, 100);\r\n\t    transfer(owner, usekey);\r\n\t}\r\n\t/*\r\n\t\r\n\tfunction testtop2() public view returns(uint s) {\r\n\t    uint money = 3 ether;\r\n\t    s = (money*per/1000)*pers[0]/100;\r\n\t}*/\r\n\t/*\r\n\t * 购买\r\n\t */\r\n\tfunction buy(uint keyid) onlySystemStart() public payable returns(bool) {\r\n\t\taddress user = msg.sender;\r\n\t\trequire(msg.value > 0);\r\n\r\n\t\tuint amount = msg.value;\r\n\t\trequire(amount >= 1 ether);\r\n\t\trequire(usereths[user] <= 100 ether);\r\n\t\tuint money = amount*3;\r\n\t\tuint d = gettoday();\r\n\t\tuint t = getyestoday();\r\n\t\tbool ifadd = false;\r\n\t\t//如果用户没有上家\r\n\t\tif(fromaddr[user] == address(0)) {\r\n\t\t    address topaddr = myidkeys[keyid];\r\n\t\t    if(keyid > 0 && topaddr != address(0) && topaddr != user) {\r\n\t\t        fromaddr[user] = topaddr;\r\n    \t\t    mysuns[topaddr].push(user);\r\n    \t\t    mysunsdaynum[topaddr][d]++;\r\n    \t\t    address top2 = fromaddr[topaddr];\r\n    \t\t    if(top2 != address(0)){\r\n    \t\t        mysecond[top2].push(user);\r\n    \t\t        mysunsdaynum[top2][d]++;\r\n    \t\t    }\r\n    \t\t    address top3 = fromaddr[top2];\r\n    \t\t    if(top3 != address(0)){\r\n    \t\t        mythird[top3].push(user);\r\n    \t\t        mysunsdaynum[top3][d]++;\r\n    \t\t    }\r\n    \t\t    ifadd = true;\r\n\t\t        \r\n\t\t    }\r\n\t\t}else{\r\n\t\t    ifadd = true;\r\n\t\t}\r\n\t\tif(ifadd == true) {\r\n\t\t    money = amount*4;\r\n\t\t}\r\n\t\tif(daysgeteths[t] > 0 && (daysgeteths[d] > (daysgeteths[t]*subper)/100)) {\r\n\t\t    if(ifadd == true) {\r\n    \t\t    money = amount*3;\r\n    \t\t}else{\r\n    \t\t    money = amount*2;\r\n    \t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(ifadd == true) {\r\n\t\t    getfromsun(user, money, amount);\r\n\t\t}\r\n\t\tsetpubprize(amount*pubper/100);\r\n\t\tmansdata.push(user);\r\n\t\tmoneydata.push(amount);\r\n\t\ttimedata.push(now);\r\n\t\t\r\n\t    daysgeteths[d] += money;\r\n\t    dayseths[d] += amount;\r\n\t    sysethnum[tags] += amount;\r\n\t\tuserethnum[tags] += amount;\r\n\t\tdaysusereths[user][d] += money;\r\n\t\t\r\n\t\ttzs[user] += money;\r\n\t    uint ltime = timedata[timedata.length - 1];\r\n\t    if(lastmoney > 0 && now - ltime > lasttime) {\r\n\t        money += lastmoney*lastper/100;\r\n\t        lastmoney = 0;\r\n\t    }\r\n\t\tlastmoney += amount;\r\n\t\tethnum[tags] += money;\r\n\t\tusereths[user] += amount;\r\n\t\t\r\n\t\taddmoney(user, money, 0);\r\n\t\treturn(true);\r\n\t}\r\n\tfunction keybuy(uint amount) onlySystemStart() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    require(amount > balances[user]);\r\n\t    require(amount >= 1 ether);\r\n\t    _transfer(user, owner, amount);\r\n\t    uint money = amount*(keyprice/1 ether);\r\n\t    moneybuy(user, money);\r\n\t    return(true);\r\n\t}\r\n\tfunction ethbuy(uint amount) onlySystemStart() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    uint canmoney = getcanuse(user);\r\n\t    require(canmoney >= amount);\r\n\t    require(amount >= 1 ether);\r\n\t    //eths[user] = eths[user].sub(amount);\r\n\t    require(reducemoney(user, amount) == true);\r\n\t    moneybuy(user, amount);\r\n\t    return(true);\r\n\t}\r\n\tfunction moneybuy(address user,uint amount) private returns(bool) {\r\n\t\tuint money = amount*4;\r\n\t\tuint d = gettoday();\r\n\t\tuint t = getyestoday();\r\n\t\tif(fromaddr[user] == address(0)) {\r\n\t\t    money = amount*3;\r\n\t\t}\r\n\t\tuint yestodaymoney = daysgeteths[t]*subper/100;\r\n\t\tif(daysgeteths[d] > yestodaymoney && yestodaymoney > 0) {\r\n\t\t    if(fromaddr[user] == address(0)) {\r\n    \t\t    money = amount*2;\r\n    \t\t}else{\r\n    \t\t    money = amount*3;\r\n    \t\t}\r\n\t\t}\r\n\t\tethnum[tags] += money;\r\n\t\t//eths[user] = eths[user].add(money);\r\n\t\taddmoney(user, money, 0);\r\n\t\t\r\n\t}\r\n\t/*\r\n\t * 系统充值\r\n\t */\r\n\tfunction charge() public payable returns(bool) {\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction() payable public {\r\n\t\tbuy(0);\r\n\t}\r\n\t/*\r\n\t * 系统提现\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction withdraw(address _to, uint money) public {\r\n\t    require(msg.sender == owner);\r\n\t\trequire(money <= address(this).balance);\r\n\t\trequire(sysethnum[tags] >= money);\r\n\t\tsysethnum[tags] -= money;\r\n\t\t_to.transfer(money);\r\n\t}\r\n\t\r\n\t/*\r\n\t * 出售\r\n\t * @param {Object} uint256\r\n\t */\r\n\tfunction sell(uint256 amount) onlySystemStart() public returns(bool success) {\r\n\t\taddress user = msg.sender;\r\n\t\trequire(amount > 0);\r\n\t\t\r\n\t\tuint256 canuse = getcanuse(user);\r\n\t\trequire(canuse >= amount);\r\n\t\trequire(eths[user] >= amount);\r\n\t\trequire(address(this).balance/2 > amount);\r\n\t\t\r\n\t\trequire(chkend(amount) == false);\r\n\t\t\r\n\t\tuint useper = (amount*sellper*keyprice/100)/1 ether;\r\n\t\trequire(balances[user] >= useper);\r\n\t\trequire(reducemoney(user, amount) == true);\r\n\t\tuserethsused[user] += amount;\r\n\t\tuserethnumused[tags] += amount;\r\n\t\t_transfer(user, owner, useper);\r\n\t\t\r\n\t\tuser.transfer(amount);\r\n\t\tsetend();\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction sellkey(uint256 amount) onlySystemStart() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t\trequire(balances[user] >= amount);\r\n\t\tuint money = (keyprice*amount*(100 - sellkeyper)/100)/1 ether;\r\n\t\trequire(chkend(money) == false);\r\n\t\trequire(address(this).balance/2 > money);\r\n\t\tuserethsused[user] += money;\r\n\t\tuserethnumused[tags] += money;\r\n\t\t_transfer(user, owner, amount);\r\n\t\tuser.transfer(money);\r\n\t\tsetend();\r\n\t}\r\n\t/*\r\n\t * 获取总发行\r\n\t */\r\n\tfunction totalSupply() public view returns(uint) {\r\n\t\treturn(_totalSupply - balances[this]);\r\n\t}\r\n\t\r\n\t/*\r\n\tfunction test() public view returns(uint) {\r\n\t    uint basekeylasts = basekeylast + basekeysub;\r\n\t    return(((basekeylasts/basekeysub) -4)*1 ether)/100 ;\r\n\t}*/\r\n\tfunction getbuyprice(uint buynum) public view returns(uint kp) {\r\n\t    //uint total = totalSupply().add(buynum);\r\n\t    //basekeynum = 20 ether;\r\n        //basekeysub = 5 ether;\r\n        //basekeylast = 25 ether;\r\n        uint total = syskeynum[tags] + buynum;\r\n\t    if(total > basekeynum + basekeylast){\r\n\t       //basekeynum = basekeynum + basekeylast;\r\n\t       uint basekeylasts = basekeylast + basekeysub;\r\n\t       kp = (((basekeylasts/basekeysub) - 4)*1 ether)/100;\r\n\t    }else{\r\n\t       kp = keyprice;\r\n\t    }\r\n\t    \r\n\t}\r\n\tfunction leftnum() public view returns(uint num) {\r\n\t    uint total = syskeynum[tags];\r\n\t    if(total < basekeynum + basekeylast) {\r\n\t        num = basekeynum + basekeylast - total;\r\n\t    }else{\r\n\t        num = basekeynum + basekeylast + basekeylast + basekeysub - total;\r\n\t    }\r\n\t}\r\n\tfunction buykey(uint buynum) onlySystemStart() public payable returns(bool success){\r\n\t    uint money = msg.value;\r\n\t    address user = msg.sender;\r\n\t    require(buynum >= 1 ether);\r\n\t    //setstart();\r\n\t    uint buyprice = getbuyprice(buynum);\r\n\t    require(user.balance > buyprice);\r\n\t    require(money >= buyprice);\r\n\t    //require(money <= keyprice.mul(2000));\r\n\t    require(user.balance >= money);\r\n\t    require(eths[user] > 0);\r\n\t    \r\n\t    uint buymoney = buyprice*(buynum/1 ether);\r\n\t    require(buymoney == money);\r\n\t    //uint canbuynums = canbuynum();\r\n\t    //require(buynum <= canbuynums);\r\n\t    \r\n\t    mykeyeths[user] += money;\r\n\t    sysethnum[tags] += money;\r\n\t    syskeynum[tags] += buynum;\r\n\t\tif(buyprice > keyprice) {\r\n\t\t    basekeynum = basekeynum + basekeylast;\r\n\t        basekeylast = basekeylast + basekeysub;\r\n\t        keyprice = buyprice;\r\n\t    }\r\n\t    _transfer(this, user, buynum);\r\n\t    \r\n\t    return(true);\r\n\t    \r\n\t}\r\n\t\r\n\tfunction chkend(uint money) public view returns(bool) {\r\n\t    uint syshas = address(this).balance;\r\n\t    uint chkhas = userethnum[tags]/2;\r\n\t    if(money > syshas) {\r\n\t        return(true);\r\n\t    }\r\n\t    if((userethnumused[tags] + money) > (chkhas - 1 ether)) {\r\n\t        return(true);\r\n\t    }\r\n\t    if(syshas - money < chkhas) {\r\n\t        return(true);\r\n\t    }\r\n\t    uint d = gettoday();\r\n\t    uint t = getyestoday();\r\n\t    uint todayget = dayseths[d];\r\n\t    uint yesget = dayseths[t];\r\n\t    if(yesget > 0 && todayget > yesget*subper/100){\r\n\t        return(true);\r\n\t    }\r\n\t    return false;\r\n\t\r\n\t    \r\n\t}\r\n\tfunction setend() private returns(bool) {\r\n\t    if(userethnumused[tags] > userethnum[tags]/2) {\r\n\t        //isend = true;\r\n\t        opentime = now;\r\n\t        tags++;\r\n\t        keyprice = startprice;\r\n    \t    basekeynum = startbasekeynum;\r\n    \t    basekeylast = startbasekeylast;\r\n\t        return(true);\r\n\t    }\r\n\t}\r\n\t/*\r\n\tfunction setper(uint onceOuttimes,uint8 perss,uint runpers,uint pubpers,uint subpers,uint luckypers,uint lastpers,uint sellkeypers,uint sellpers,uint lasttimes,uint sysdays,uint cksysdays) public {\r\n\t    require(msg.sender == owner);\r\n\t    onceOuttime = onceOuttimes;\r\n\t    per = perss;\r\n\t    runper = runpers;\r\n\t    pubper = pubpers;\r\n\t    subper = subpers;\r\n\t    luckyper = luckypers;\r\n\t    lastper = lastpers;\r\n\t    sellkeyper = sellkeypers;\r\n\t    sellper = sellpers;\r\n\t    lasttime = lasttimes;//9\r\n\t    sysday = sysdays;\r\n\t    cksysday = cksysdays;\r\n\t}\r\n\tfunction ended() public returns(bool) {\r\n\t    require(isend == true);\r\n\t    require(now < opentime);\r\n\t    \r\n\t    address user = msg.sender;\r\n\t    require(tags == systemtag[user]);\r\n\t    require(!frozenAccount[user]);\r\n\t    require(eths[user] > 0);\r\n\t    require(usereths[user]/2 > userethsused[user]);\r\n\t    uint money = usereths[user]/2 - userethsused[user];\r\n\t    require(address(this).balance > money);\r\n\t\tuserethsused[user] = userethsused[user].add(money);\r\n\t\teths[user] = 0;\r\n\t\t\r\n\t\tuser.transfer(money);\r\n\t\tsystemtag[user] = tags + 1;\r\n\t\t\r\n\t\trestartsys();\r\n\t\t\r\n\t    \r\n\t}\r\n\tfunction setopen() onlyOwner public returns(bool) {\r\n\t    isend = false;\r\n\t    tags++;\r\n\t    keyprice = startprice;\r\n\t    basekeynum = startbasekeynum;\r\n\t    basekeylast = startbasekeylast;\r\n\t}\r\n\tfunction setstart() public returns(bool) {\r\n\t    if(now > opentime && isend == true) {\r\n\t        isend = false;\r\n\t        tags++;\r\n\t        keyprice = startprice;\r\n\t        basekeynum = startbasekeynum;\r\n\t        basekeylast = startbasekeylast;\r\n\t        systemtag[msg.sender] = tags;\r\n\t    }\r\n\t}\r\n\tfunction reenduser() public returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    require(isend == false);\r\n\t    require(now > opentime);\r\n\t    require(!frozenAccount[user]);\r\n\t    require(actived == true);\r\n\t    require(systemtag[user] < tags);\r\n\t    if(eths[user] > 0) {\r\n\t        require(usereths[user]/2 > userethsused[user]);\r\n\t        uint amount = usereths[user]/2 - userethsused[user];\r\n\t        uint money = amount*3;\r\n\t        runs[user] = 0;\r\n    \t    runused[user] = 0;\r\n    \t    used[user] = 0;\r\n    \t    userethsused[user] = 0;\r\n    \t    delete mycantime[user];\r\n    \t    delete mycanmoney[user];\r\n    \t    delete myruntime[user];\r\n    \t    delete myrunmoney[user];\r\n    \t    \r\n\t        eths[user] = money;\r\n\t        addmoney(user, money, 0);\r\n\t        usereths[user] = amount;\r\n\t        ethnum[tags] = ethnum[tags].add(money);\r\n\t        systemtag[user] = tags;\r\n\t    }\r\n\t    //restartsys();\r\n\t    \r\n\t   \r\n\t}\r\n\tfunction restartsys() private returns(bool) {\r\n\t    address user = msg.sender;\r\n\t    //eths[user] = 0;\r\n\t    usereths[user] = 0;\r\n\t    userethsused[user] = 0;\r\n\t    runs[user] = 0;\r\n\t    runused[user] = 0;\r\n\t    used[user] = 0;\r\n\t    delete mycantime[user];\r\n\t    delete mycanmoney[user];\r\n\t    delete myruntime[user];\r\n\t    delete myrunmoney[user];\r\n\t    //delete mysunsdaynum[user];\r\n\t}*/\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getluckyuser\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keyprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelmans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"runtoeth\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"prizeshow\",\"outputs\":[{\"name\":\"totalgold\",\"type\":\"uint256\"},{\"name\":\"lttime\",\"type\":\"uint256\"},{\"name\":\"levelid\",\"type\":\"uint256\"},{\"name\":\"man1\",\"type\":\"uint256\"},{\"name\":\"man2\",\"type\":\"uint256\"},{\"name\":\"man3\",\"type\":\"uint256\"},{\"name\":\"len1\",\"type\":\"uint256\"},{\"name\":\"len2\",\"type\":\"uint256\"},{\"name\":\"len3\",\"type\":\"uint256\"},{\"name\":\"nl1\",\"type\":\"uint256\"},{\"name\":\"nl2\",\"type\":\"uint256\"},{\"name\":\"nl3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getruns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"buynum\",\"type\":\"uint256\"}],\"name\":\"getbuyprice\",\"outputs\":[{\"name\":\"kp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lasttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeyethsused\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"syskeynum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myruntime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timedata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myrunmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getcanuse\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeyeths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getprize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"},{\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"gettruelevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myprizedayget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isend\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelsuns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sysethnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myidkeys\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"luckyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"indexshow\",\"outputs\":[{\"name\":\"totaleths\",\"type\":\"uint256\"},{\"name\":\"lttime\",\"type\":\"uint256\"},{\"name\":\"ltmoney\",\"type\":\"uint256\"},{\"name\":\"ltaddr\",\"type\":\"address\"},{\"name\":\"myeths\",\"type\":\"uint256\"},{\"name\":\"mycans\",\"type\":\"uint256\"},{\"name\":\"dayuserget\",\"type\":\"uint256\"},{\"name\":\"dayusereth\",\"type\":\"uint256\"},{\"name\":\"keyprices\",\"type\":\"uint256\"},{\"name\":\"mykeynum\",\"type\":\"uint256\"},{\"name\":\"ltkeynum\",\"type\":\"uint256\"},{\"name\":\"mykeyid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysuns\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allprizeused\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cksysday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ethbuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getluckyprize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daysusereths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pubper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getmykeyid\",\"outputs\":[{\"name\":\"ky\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycantime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"chkend\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dayseths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userethnumused\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moneydata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setuserlevel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellkeyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelsunsday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"per\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userlevels\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getcanuserun\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellkey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"getactiveleveltime\",\"outputs\":[{\"name\":\"t\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizelevelmansday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buynum\",\"type\":\"uint256\"}],\"name\":\"buykey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activekey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"gettopid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mykeysid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"runper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"gettags\",\"outputs\":[{\"name\":\"t\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"leftnum\",\"outputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysunsdaynum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"keybuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"opentime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keysid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mythird\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getlevel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allprize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"admAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getyestoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"keyid\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tags\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mansdata\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mycanmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"t\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceOuttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeactivetime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userlevelsnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"geteths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mysecond\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daysgeteths\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]","ContractName":"Oasis","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ff51137bb859b491b37f7cad30f8e935b7576b76eced45cd02ad177fed52e555"}]}