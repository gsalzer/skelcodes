{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Token {\r\n    function transfer(address _to, uint256 _value) returns(bool ok);\r\n}\r\n\r\ncontract WhiteList {\r\n    function checkAddress ( address _address ) constant public returns(bool);\r\n}\r\n\r\ncontract MultiOwnable {\r\n    \r\n    mapping(address => bool) public owners;\r\n    uint256 ownersCount;\r\n    \r\n    address[] public ownerslist;\r\n    \r\n    event OwnerAdded(address admin);\r\n    event OwnerRemoved(address admin);\r\n    \r\n    modifier onlyOwner() {\r\n        require(owners[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        owners[msg.sender] = true;\r\n        ownersCount++;\r\n        ownerslist.push(msg.sender);\r\n    }\r\n    \r\n    function addOwner(address owner) public onlyOwner {\r\n        require(owner != 0x0);\r\n        owners[owner] = true;\r\n        ownerslist.push(owner);\r\n        emit OwnerAdded(owner);\r\n    }\r\n    \r\n    function removeOwner(address owner) public onlyOwner {\r\n        require(ownersCount > 1);\r\n        owners[owner] = false;\r\n        ownersCount--;\r\n        emit OwnerRemoved(owner);\r\n    }\r\n    \r\n    function isOwner(address _address) public returns(bool){\r\n        return owners[_address];\r\n    }\r\n    \r\n    \r\n}\r\n\r\ncontract FiatContract {\r\n    function ETH(uint _id) constant returns (uint256);\r\n    function USD(uint _id) constant returns (uint256);\r\n}\r\n\r\ncontract BSAFECrowdsale is MultiOwnable {\r\n    \r\n    FiatContract public fiat;\r\n\r\n    using SafeMath for uint256;\r\n\r\n    enum Status {CREATED, PRESTO, STO, FINISHED}\r\n\r\n    event PreSTOStarted();\r\n    event STOStarted();\r\n    event SaleFinished();\r\n    event SalePaused();\r\n    event SaleUnpaused();\r\n    event Purchase(address to, uint256 amount);\r\n    event Withdrawal(address to, uint256 amount);\r\n    \r\n    event NewWallet(address _wallet);\r\n    event NewToken(address _token);\r\n\t\r\n    Status public status;\r\n\r\n    uint256 public rate;\r\n    uint256 public saleSupply;\r\n    Token public token;\r\n    WhiteList public whitelist;\r\n    address public wallet;\r\n    uint256 price;\r\n\r\n    bool public isPaused = true;\r\n    \r\n    uint public presto_min;\r\n    uint public sto_min;\r\n\r\n    modifier whenPaused() {\r\n        require(isPaused);\r\n        _;\r\n    }\r\n    \r\n    modifier whenNotPaused() {\r\n        require(!isPaused);\r\n        _;\r\n    }\r\n    \r\n    function tokenFallback(address _from, uint _value, bytes _data) public {\r\n    }\r\n   \r\n\r\n    /**\r\n     * @param _token Address of token to sale\r\n     * @param _wallet Address to withdraw funds\r\n     */\r\n     // use 0x2CDe56E5c8235D6360CCbb0c57Ce248Ca9C80909 for _fiatcontract\r\n     // deploy whitelist contract first in order to properly add whitelist contract\r\n    constructor(address _token, address _wallet, address _whitelist, address _fiatcontract) public {\r\n        token = Token(_token);\r\n        whitelist = WhiteList(_whitelist);\r\n        wallet = _wallet;\r\n        fiat = FiatContract( _fiatcontract ); \r\n        status = Status.CREATED;\r\n        \r\n        presto_min = 2500000;\r\n        sto_min    =  100000;\r\n        \r\n    }\r\n    \r\n    function getPrice(uint256 _usd) constant returns(uint256) {\r\n        return _usd * fiat.USD(0);\r\n    }\r\n    \r\n    function startPreSTOSale() public onlyOwner {\r\n        require(status == Status.CREATED);\r\n        isPaused = false;\r\n        status = Status.PRESTO;\r\n        rate = 25;\r\n        emit PreSTOStarted();\r\n    }\r\n    \r\n    function startSTO() public onlyOwner {\r\n        require(status == Status.PRESTO);\r\n        status = Status.STO;\r\n        rate = 50;\r\n        emit STOStarted();\r\n    }\r\n    \r\n    /** \r\n     * Ends crowdsale \r\n     * Should be used carefully. You cannot start crowdsale twice\r\n     */\r\n    function finishSale() public onlyOwner {\r\n        status = Status.FINISHED;\r\n        isPaused = false;\r\n    }\r\n    \r\n    function pause() public onlyOwner {\r\n        isPaused = true;\r\n        emit SalePaused();\r\n    }\r\n    \r\n    function unpause() public onlyOwner {\r\n        isPaused = false;\r\n        emit SaleUnpaused();\r\n    }\r\n    \r\n    function buy(uint256 _wei) internal whenNotPaused{\r\n        require( whitelist.checkAddress(msg.sender) == true );\r\n\trequire (  status != Status.FINISHED ) ;\r\n        if(status==Status.PRESTO) require ( msg.value >=  getPrice(presto_min) );\r\n        if(status==Status.STO)    require ( msg.value >=  getPrice(sto_min)    );\r\n        uint256 tokensAmount = calcTokens(_wei);\r\n        token.transfer(msg.sender, tokensAmount.mul(10**8));\r\n        emit Purchase(msg.sender, tokensAmount);\r\n    }\r\n    \r\n    function() external payable whenNotPaused{\r\n        buy(msg.value);\r\n    }\r\n    \r\n    function calcTokens(uint256 _amount) public constant returns (uint256) {\r\n        return _amount.div( getPrice(rate) );    \r\n    }\r\n    \r\n    function setTokenContract(address _address) public onlyOwner whenPaused {\r\n        require(_address != 0x0);\r\n        token = Token(_address);\r\n        emit NewToken(_address);\r\n    }\r\n    \r\n    function setWallet(address _address) public onlyOwner whenPaused {\r\n        require(_address != 0x0);\r\n        wallet = _address;\r\n        emit NewWallet(_address);\r\n    }\r\n    \r\n    function withdraw(address _to, uint256 _amount) public onlyOwner {\r\n        require(_to != 0x0);\r\n        _to.transfer(_amount);\r\n        emit Withdrawal(_to, _amount);\r\n    }\r\n    \r\n    function withdrawBSAFE(address _to, uint256 _amount) public onlyOwner {\r\n        require(_to != 0x0);\r\n        token.transfer(_to, _amount);\r\n        emit Withdrawal(_to, _amount);\r\n    }\r\n    \r\n    function updateSTOPrice ( uint _newprice ) public onlyOwner {\r\n        sto_min = _newprice;\r\n    }\r\n    \r\n     \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presto_min\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newprice\",\"type\":\"uint256\"}],\"name\":\"updateSTOPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerslist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sto_min\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBSAFE\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fiat\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSTO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPreSTOSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calcTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_usd\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_whitelist\",\"type\":\"address\"},{\"name\":\"_fiatcontract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PreSTOStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"STOStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SalePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"NewWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"NewToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"}]","ContractName":"BSAFECrowdsale","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c1f11a9803e4ae74c293653db6a55416b7a47cc2000000000000000000000000b10a59240121e0024d6ffe97c9957f6902fd873c000000000000000000000000196a1fecf5e9e6c11108d60a5063a864e774e5730000000000000000000000008055d0504666e2b6942beb8d6014c964658ca591","Library":"","SwarmSource":"bzzr://609e3ba0e9a190638d18a08b1a17c62254845a600f9c7baa8683400b081c7753"}]}