{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool);\r\n    function approve(address _spender, uint _value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public constant returns(uint);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function safemul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safediv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function safesub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeadd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n    string internal _symbol;\r\n    string internal _name;\r\n    uint8 internal _decimals;\r\n    uint internal _totalSupply = 1000;\r\n    mapping (address => uint) internal _balanceOf;\r\n    mapping (address => mapping(address => uint)) internal _allowances;\r\n    \r\n    constructor(string symbol, string name, uint8 decimals, uint totalSupply) public {\r\n        _symbol = symbol;\r\n        _name = name;\r\n        _decimals = decimals;\r\n        _totalSupply = totalSupply;\r\n    }\r\n    \r\n    function name() public constant returns (string) {\r\n        return _name;\r\n    }\r\n    \r\n    function symbol() public constant returns (string) {\r\n        return _symbol;\r\n    }\r\n    \r\n    function decimals() public constant returns (uint8){\r\n        return _decimals;\r\n    }\r\n    \r\n    function totalSupply() public constant returns (uint){\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address _addr) public constant returns (uint);\r\n    function transfer(address _to, uint _value) public returns (bool);\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n}\r\n\r\ncontract PapaBoxToken is Token(\"PaPB\", \"Papa Box Beta\", 6, 10 ** 15 ), ERC20 {\r\n    using SafeMath for uint256;\r\n    \r\n    constructor() public {\r\n        _balanceOf[msg.sender] = _totalSupply;\r\n    }\r\n    \r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address addr) public constant returns(uint) {\r\n        return _balanceOf[addr];\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool){\r\n        if(_value > 0 &&\r\n            _value <= _balanceOf[msg.sender] &&\r\n            !isContract(_to)) {\r\n                \r\n            _balanceOf[msg.sender] = _balanceOf[msg.sender].safesub(_value);\r\n            _balanceOf[_to] = _balanceOf[_to].safeadd(_value);\r\n            \r\n            emit Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function isContract(address _addr) private constant returns(bool) {\r\n        uint codeSize;\r\n        _addr = _addr;\r\n        assembly {\r\n            codeSize := extcodesize(_addr)\r\n        }\r\n        return codeSize > 0;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) public returns(bool)  {\r\n        if(_allowances[_from][msg.sender] > 0 &&\r\n            _value > 0 &&\r\n            _allowances[_from][msg.sender] >= _value) {\r\n                \r\n                _balanceOf[_from] = _balanceOf[_from].safesub(_value);\r\n                _balanceOf[_to] = _balanceOf[_to].safeadd(_value);\r\n                return true;\r\n            }\r\n            return false;\r\n    }\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool success) {\r\n        _allowances[msg.sender][_spender] = _value; \r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"PapaBoxToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1a0dc9d4358314373d78f1564cf58d9371e448213653735fb429b7878d8a1ec1"}]}