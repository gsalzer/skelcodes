{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title SafeMath\r\n */\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n */\r\ncontract ERC20 {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address _owner) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  function allowance(address _owner, address _spender) public view returns (uint256);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/**\r\n * @title Owned\r\n */\r\ncontract Owned {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20 token\r\n */\r\ncontract ERC20Token is ERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n  uint256 public totalToken;\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(balances[msg.sender] >= _value);\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(balances[_from] >= _value);\r\n    require(allowed[_from][msg.sender] >= _value);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalToken;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\n/**\r\n * @title Racing Pigeon Coin\r\n */\r\ncontract RacingPigeonCoin is ERC20Token, Owned {\r\n\r\n  string  public constant name     = \"Racing Pigeon Coin\";\r\n  string  public constant symbol   = \"RPC\";\r\n  uint256 public constant decimals = 18;\r\n\r\n  uint256 public constant initialToken     = 500000000 * (10 ** decimals);\r\n\r\n  uint256 public constant unlockedToken = initialToken * 40 / 100; // 40%\r\n  uint256 public constant team1Token    = initialToken * 15 / 100; // 15%\r\n  uint256 public constant team2Token    = initialToken * 15 / 100; // 15%\r\n  uint256 public constant team3Token    = initialToken * 15 / 100; // 15%\r\n  uint256 public constant team4Token    = initialToken * 15 / 100; // 15%\r\n\r\n  address public constant team1Address  = 0x00602F855B9EC54D8A02aFb7d8a36d0129729242;\r\n  address public constant team2Address  = 0x00215cFb433105d55344b6f8c9c8d6557203b858;\r\n  address public constant team3Address  = 0x004a9b534313fA84Ed0295c5f255448bD68F085C;\r\n  address public constant team4Address  = 0x00B219Cb01c0ba8176CFbB0bDA16d2729d9E2823;\r\n  address public constant rescueAddress = 0x00bACAfB97DCcDb091e2b3554F6D3A2838383334;\r\n\r\n  uint256 public constant team1LockEndTime = 1558314000; // 2019-05-20 01:00:00 GMT\r\n  uint256 public constant team2LockEndTime = 1574211600; // 2019-11-20 01:00:00 GMT\r\n  uint256 public constant team3LockEndTime = 1589936400; // 2020-05-20 01:00:00 GMT\r\n  uint256 public constant team4LockEndTime = 1605834000; // 2020-11-20 01:00:00 GMT\r\n\r\n  uint256 public constant maxDestroyThreshold = initialToken / 2;\r\n  uint256 public constant maxBurnThreshold    = maxDestroyThreshold / 50;\r\n  \r\n  mapping(address => bool) lockAddresses;\r\n\r\n  uint256 public destroyedToken;\r\n\r\n  event Burn(address indexed _burner, uint256 _value);\r\n\r\n  constructor() public {\r\n    totalToken     = initialToken;\r\n\r\n    balances[msg.sender]   = unlockedToken;\r\n    balances[team1Address] = team1Token;\r\n    balances[team2Address] = team2Token;\r\n    balances[team3Address] = team3Token;\r\n    balances[team4Address] = team4Token;\r\n\r\n    emit Transfer(0x0, msg.sender, unlockedToken);\r\n    emit Transfer(0x0, team1Address, team1Token);\r\n    emit Transfer(0x0, team2Address, team2Token);\r\n    emit Transfer(0x0, team3Address, team3Token);\r\n    emit Transfer(0x0, team4Address, team4Token);\r\n\r\n    lockAddresses[team1Address] = true;\r\n    lockAddresses[team2Address] = true;\r\n    lockAddresses[team3Address] = true;\r\n    lockAddresses[team4Address] = true;\r\n\r\n    destroyedToken = 0;\r\n  }\r\n\r\n  modifier transferable(address _addr) {\r\n    require(!lockAddresses[_addr]);\r\n    _;\r\n  }\r\n\r\n  function unlock() public onlyOwner {\r\n    if (lockAddresses[team1Address] && now >= team1LockEndTime)\r\n      lockAddresses[team1Address] = false;\r\n    if (lockAddresses[team2Address] && now >= team2LockEndTime)\r\n      lockAddresses[team2Address] = false;\r\n    if (lockAddresses[team3Address] && now >= team3LockEndTime)\r\n      lockAddresses[team3Address] = false;\r\n    if (lockAddresses[team4Address] && now >= team4LockEndTime)\r\n      lockAddresses[team4Address] = false;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public transferable(msg.sender) returns (bool) {\r\n    return super.transfer(_to, _value);\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public transferable(msg.sender) returns (bool) {\r\n    return super.approve(_spender, _value);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public transferable(_from) returns (bool) {\r\n    return super.transferFrom(_from, _to, _value);\r\n  }\r\n\r\n  function burn(uint256 _value) public onlyOwner returns (bool) {\r\n    require(balances[msg.sender] >= _value);\r\n    require(maxBurnThreshold >= _value);\r\n    require(maxDestroyThreshold >= destroyedToken.add(_value));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    totalToken = totalToken.sub(_value);\r\n    destroyedToken = destroyedToken.add(_value);\r\n    emit Transfer(msg.sender, 0x0, _value);\r\n    emit Burn(msg.sender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferAnyERC20Token(address _tokenAddress, uint256 _value) public onlyOwner returns (bool) {\r\n    return ERC20(_tokenAddress).transfer(rescueAddress, _value);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destroyedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rescueAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDestroyThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team4Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team3LockEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBurnThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team2Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team1Token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RacingPigeonCoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://49e72261383b5c0e0a74854b6997e7edf15e2e3e5bb296d07e423a0f197193b1"}]}