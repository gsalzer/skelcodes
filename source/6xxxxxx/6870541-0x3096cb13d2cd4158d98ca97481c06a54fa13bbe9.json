{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract GitmanIssue {\r\n\r\n    address private mediator;\r\n    address public parent; // deposit contract\r\n    string public owner;\r\n    string public repository;\r\n    string public issue;\r\n\r\n    constructor (string ownerId, string repositoryId, string issueId, address mediatorAddress) public payable { \r\n        parent = msg.sender;\r\n        mediator = mediatorAddress;\r\n        owner = ownerId;\r\n        repository = repositoryId;\r\n        issue = issueId;\r\n    }\r\n\r\n    function resolve(address developerAddress) public {\r\n        require (msg.sender == mediator, \"sender not authorized\");\r\n        selfdestruct(developerAddress);\r\n    }\r\n\r\n    function recall() public {\r\n        require (msg.sender == mediator, \"sender not authorized\");\r\n        selfdestruct(parent);\r\n    }\r\n}\r\n\r\ncontract GitmanFactory {\r\n    \r\n    address private mediator;\r\n    uint16 public share = 5;\r\n\r\n    event IssueCreated(address contractAddress, string issue);\r\n\r\n    constructor () public {     //address ownerAddress, \r\n        mediator = msg.sender;\r\n    }\r\n\r\n    function setShare(uint8 value) public {\r\n        require(value > 0 && value <= 100, \"share must be between 1 and 100\");\r\n        require (msg.sender == mediator, \"sender not authorized\");\r\n        share = value;\r\n    }\r\n\r\n    function createIssue(string user, string repository, string issue) public payable { // returns (address)\r\n        require(msg.value > 0, \"reward must be greater than 0\");\r\n\r\n        uint fee = msg.value / share;\r\n        uint reward = msg.value - fee;\r\n        mediator.transfer(fee);\r\n        \r\n        address issueContract = (new GitmanIssue).value(reward)(user, repository, issue, mediator);\r\n        emit IssueCreated(issueContract, issue);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"repository\",\"type\":\"string\"},{\"name\":\"issue\",\"type\":\"string\"}],\"name\":\"createIssue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"share\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint8\"}],\"name\":\"setShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"issue\",\"type\":\"string\"}],\"name\":\"IssueCreated\",\"type\":\"event\"}]","ContractName":"GitmanFactory","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bddd23ff9abc02540b4bf5e43880177c0f20c99f80f4887bc92bf13213aef296"}]}