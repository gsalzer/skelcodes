{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract Penny {\r\n\r\n    //owner of contract\r\n    address public owner;\r\n    \r\n    //last bidder and winner\r\n    address public latestBidder;\r\n    address public latestWinner;\r\n    \r\n    //time left of auction\r\n    uint public endTime;\r\n    uint public addTime;\r\n    \r\n    //event for auctions bid\r\n    event Bid(address bidder, uint ending, uint adding, uint balance);\r\n\r\n    //constructor\r\n    function Penny() public {\r\n        owner           = msg.sender;\r\n        latestBidder    = msg.sender;\r\n        latestWinner    = msg.sender;\r\n        addTime         = (2 hours);\r\n        endTime         = 0;\r\n    }\r\n\r\n    //bid on auction\r\n    function bid() payable public{\r\n        \r\n        //bid must be precisely 0.005 ETH\r\n        require(msg.value == 5000000000000000);\r\n\r\n        //place first bid\r\n        if(endTime == 0){\r\n            endTime = (now + addTime);\r\n        }\r\n        \r\n        //place a bid\r\n        if(endTime != 0 && endTime > now){\r\n            addTime -= (10 seconds);\r\n            endTime = (now + addTime);\r\n            latestBidder = msg.sender;\r\n            Bid(latestBidder, endTime, addTime, this.balance);\r\n        }\r\n        \r\n        //winner found, restart auction\r\n        if(addTime == 0 || endTime <= now){\r\n            latestWinner = latestBidder;\r\n            \r\n            //restart auction\r\n            addTime = (2 hours);\r\n            endTime = (now + addTime);\r\n            latestBidder = msg.sender;\r\n            Bid(latestBidder, endTime, addTime, ((this.balance/20)*17)+5000000000000000);\r\n            \r\n            //transfer winnings\r\n            owner.transfer((this.balance/20)*1);\r\n            latestWinner.transfer(((this.balance-5000000000000000)/10)*8);\r\n        }\r\n    }\r\n    \r\n    //allow for eth to be fed to the contract\r\n    function() public payable {}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"latestWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestBidder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ending\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"adding\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Bid\",\"type\":\"event\"}]","ContractName":"Penny","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://52bc72c14ab589d93eafb73bdbba12909a08ce5fa4acc62e84c5617f2695b505"}]}