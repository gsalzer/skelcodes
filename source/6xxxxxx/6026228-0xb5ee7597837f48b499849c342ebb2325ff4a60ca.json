{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\n/// @title Version\r\ncontract Version {\r\n    string public semanticVersion;\r\n\r\n    /// @notice Constructor saves a public version of the deployed Contract.\r\n    /// @param _version Semantic version of the contract.\r\n    constructor(string _version) internal {\r\n        semanticVersion = _version;\r\n    }\r\n}\r\n\r\n\r\n/// @title Factory\r\ncontract Factory is Version {\r\n    event FactoryAddedContract(address indexed _contract);\r\n\r\n    modifier contractHasntDeployed(address _contract) {\r\n        require(contracts[_contract] == false);\r\n        _;\r\n    }\r\n\r\n    mapping(address => bool) public contracts;\r\n\r\n    constructor(string _version) internal Version(_version) {}\r\n\r\n    function hasBeenDeployed(address _contract) public constant returns (bool) {\r\n        return contracts[_contract];\r\n    }\r\n\r\n    function addContract(address _contract)\r\n        internal\r\n        contractHasntDeployed(_contract)\r\n        returns (bool)\r\n    {\r\n        contracts[_contract] = true;\r\n        emit FactoryAddedContract(_contract);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract PaymentAddress {\r\n    event PaymentMade(address indexed _payer, address indexed _collector, uint256 _value);\r\n\r\n    address public collector;\r\n\r\n    constructor(address _collector) public {\r\n        collector = _collector;\r\n    }\r\n\r\n    function () public payable {\r\n        emit PaymentMade(msg.sender, collector, msg.value);\r\n        collector.transfer(msg.value);\r\n    }\r\n}\r\n\r\n\r\ncontract PaymentAddressFactory is Factory {\r\n    // index of created contracts\r\n    mapping (address => address[]) public paymentAddresses;\r\n\r\n    constructor() public Factory(\"1.0.0\") {}\r\n\r\n    // deploy a new contract\r\n    function newPaymentAddress(address _collector)\r\n        public\r\n        returns(address newContract)\r\n    {\r\n        PaymentAddress paymentAddress = new PaymentAddress(_collector);\r\n        paymentAddresses[_collector].push(paymentAddress);\r\n        addContract(paymentAddress);\r\n        return paymentAddress;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"hasBeenDeployed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_collector\",\"type\":\"address\"}],\"name\":\"newPaymentAddress\",\"outputs\":[{\"name\":\"newContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"semanticVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paymentAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"FactoryAddedContract\",\"type\":\"event\"}]","ContractName":"PaymentAddressFactory","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c4d47236a0dee779b353c4b8a853cd3b405bc74a4cb61c47cefd25f543650a7f"}]}