{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/***\r\n * @title -MinerWinner beta_0.1\r\n * \r\n * MinerWinner is a game created based on Ethereum. \r\n * We try to create a completely fair game.\r\n * Try to streamline processes and operations.\r\n * This game has no commission.\r\n * Everyone have to participate through the equal way.\r\n * \r\n * MinerWinner User Guide:\r\n * Players can play the game by transferring fund to protocol address at \r\n *  a cost of 1 eth at a time (note: single transfer shall not be less\r\n *  than 1 eth, otherwise, the transfer will fail. If the transfer is\r\n *  greater than 1 eth, players cannot get extra benefits. If you want\r\n *  to make more benefits, you can transfer 1 eth at a time for several times.).\r\n * \r\n * Besides eth reward, players can get MinerWinner unique token reward.\r\n * \r\n * Token Reward:\r\n * Token reward is incrementally awarded to players according to the sort\r\n *  entered by the player, for instance, the tenth participant gets 10 tokens,\r\n *  and the 100th participant gets 100 token.\r\n * \r\n * The eth reward is divided into two parts.\r\n * 1.After each new player enters, the reward will be given to the previous\r\n *    player in the form of an accelerated round tour.\r\n * 2.When the countdown is over but no player enters, the players that have\r\n *    extra eth can play repeatedly. If the token of this repeated player is\r\n *    more than the latter 8 players in current queue, this play can receive 3\r\n *    eth rewards and reactivate the countdown. In this way, the incentive will\r\n *    encourage more players to promote the game process.\r\n * \r\n * Token transaction:\r\n * Token rewards can be traded to players who want to win the promotion reward.\r\n *  This is to become the token owner that has most of the token and to compete\r\n *  for the promotion reward.\r\n *\r\n * Then we will launch a series of versions.\r\n * This token is available for all versions of MinerWinner.\r\n *\r\n * WARNING:  THIS PRODUCT IS HIGHLY ADDICTIVE.  IF YOU HAVE AN ADDICTIVE NATURE.  DO NOT PLAY.\r\n */\r\n//===========================================================================================>\r\n\r\ncontract miner_winner_basic {  \r\n\r\n    address public owner;\r\n    address public reward_winaddr;\r\n    uint256 public deadline;\r\n    uint256 public time;\r\n    uint256 public price;\r\n    uint256 public reward_value;\r\n    token public token_reward;\r\n    address[] public plyr;\r\n    uint256 public next_count;\r\n}\r\n\r\ncontract miner_winner is miner_winner_basic {\r\n\r\n    constructor(address _token_reward_address) public {\r\n\r\n        owner = msg.sender;\r\n        reward_winaddr = address(0);\r\n        time = 8 * 60 minutes;\r\n        deadline = now + time;\r\n        price = 1 ether;\r\n        reward_value = 0;\r\n        token_reward = token(_token_reward_address);\r\n        plyr = new address[](0);\r\n        plyr.push(msg.sender);\r\n        next_count = 0;\r\n    }\r\n\r\n    function() public payable {\r\n\r\n        require(msg.value >= price);\r\n\r\n        plyr.push(msg.sender);\r\n\r\n        if( next_count >= plyr.length) {\r\n            next_count = 0;\r\n        }\r\n        plyr[next_count].transfer(price * 20/100);\r\n        next_count++;\r\n        \r\n        if( next_count >= plyr.length) {\r\n            next_count = 0;\r\n        }\r\n        plyr[next_count].transfer(price * 20/100);\r\n        next_count++;    \r\n\r\n        reward_value = token_reward.balanceOf(address(this));\r\n\r\n        uint256 _pvalue = plyr.length * price;\r\n\r\n        if(reward_value >= _pvalue){\r\n            token_reward.transfer(msg.sender, _pvalue);\r\n        }\r\n        \r\n        uint256 _now = now;\r\n\r\n        if( _now > deadline) {\r\n\r\n            if( reward_winaddr == address(0)) {\r\n                reward_winaddr = plyr[plyr.length - 1];\r\n            }\r\n\r\n            for(uint256 i = plyr.length - 9; i < plyr.length; i++) {\r\n\r\n                if(token_reward.balanceOf(plyr[i]) > token_reward.balanceOf(reward_winaddr)){\r\n                    reward_winaddr = plyr[i];\r\n                }\r\n            }\r\n\r\n            if(address(this).balance > 3 ether){\r\n                reward_winaddr.transfer(3 ether);\r\n            }\r\n        }\r\n\r\n        deadline = _now + time;\r\n    }\r\n}\r\n\r\ncontract token{\r\n\r\n    function transfer(address receiver, uint amount) public;\r\n    function balanceOf(address receiver) constant public returns (uint balance);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"next_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_reward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reward_winaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reward_value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token_reward_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"miner_winner","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a7092263d6510c909676cef42dfaa01e324fff8f","Library":"","SwarmSource":"bzzr://eb261afe00ab190b8688058e88280a1655a7821b630d109f20c2dfdd785ad262"}]}