{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n/*\r\nName: Genesis\r\nDev: White Matrix co,. Ltd\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Genesis {\r\n    using SafeMath for uint256;\r\n\r\n    //mutabilityType\r\n    //Genesis parameter\r\n    uint public characterNo = 3;\r\n    uint public version = 1;\r\n\r\n    struct Character {\r\n        string name;\r\n        uint hp;\r\n        uint mp;\r\n        uint str;\r\n        uint intelli;\r\n        uint san;\r\n        uint luck;\r\n        uint charm;\r\n        uint mt;\r\n        string optionalAttrs;\r\n    }\r\n\r\n    Character[] characters;\r\n\r\n    function Genesis() public {\r\n        characters.push(Character(\"Adam0\", 100, 100, 50, 50, 50, 50, 50, 0, \"\"));\r\n        characters.push(Character(\"Adam1\", 100, 100, 50, 50, 50, 50, 50, 1, \"\"));\r\n        characters.push(Character(\"Adam2\", 100, 100, 50, 50, 50, 50, 50, 2, \"\"));\r\n    }\r\n\r\n    function getCharacterNo() view returns (uint _characterNo){\r\n        return characterNo;\r\n    }\r\n\r\n    function setCharacterAttributes(uint _id, uint _hp, uint _mp, uint _str, uint _intelli, uint _san, uint _luck, uint _charm, string _optionalAttrs){\r\n        //require check\r\n        require(characters[_id].mt == 2);\r\n        //read directly from mem\r\n        Character affectedCharacter = characters[_id];\r\n\r\n        affectedCharacter.hp = _hp;\r\n        affectedCharacter.mp = _mp;\r\n        affectedCharacter.str = _str;\r\n        affectedCharacter.intelli = _intelli;\r\n        affectedCharacter.san = _san;\r\n        affectedCharacter.luck = _luck;\r\n        affectedCharacter.charm = _charm;\r\n        affectedCharacter.optionalAttrs = _optionalAttrs;\r\n\r\n        //need rewrite as a function\r\n        if (affectedCharacter.hp < 0) {\r\n            affectedCharacter.hp = 0;\r\n        } else if (affectedCharacter.hp > 100) {\r\n            affectedCharacter.hp = 100;\r\n\r\n        } else if (affectedCharacter.mp < 0) {\r\n            affectedCharacter.mp = 0;\r\n\r\n        } else if (affectedCharacter.mp > 100) {\r\n            affectedCharacter.mp = 100;\r\n\r\n        } else if (affectedCharacter.str < 0) {\r\n            affectedCharacter.str = 0;\r\n\r\n        } else if (affectedCharacter.str > 100) {\r\n            affectedCharacter.str = 100;\r\n\r\n        } else if (affectedCharacter.intelli < 0) {\r\n            affectedCharacter.intelli = 0;\r\n\r\n        } else if (affectedCharacter.intelli > 100) {\r\n            affectedCharacter.intelli = 100;\r\n\r\n        } else if (affectedCharacter.san < 0) {\r\n            affectedCharacter.san = 0;\r\n\r\n        } else if (affectedCharacter.san > 100) {\r\n            affectedCharacter.san = 100;\r\n\r\n        } else if (affectedCharacter.luck < 0) {\r\n            affectedCharacter.luck = 0;\r\n\r\n        } else if (affectedCharacter.luck > 100) {\r\n            affectedCharacter.luck = 100;\r\n\r\n        } else if (affectedCharacter.charm < 0) {\r\n            affectedCharacter.charm = 0;\r\n\r\n        } else if (affectedCharacter.charm > 100) {\r\n            affectedCharacter.charm = 100;\r\n        }\r\n\r\n        characters[_id] = affectedCharacter;\r\n    }\r\n\r\n    function affectCharacter(uint _id, uint isPositiveEffect){\r\n        require(characters[_id].mt != 0);\r\n        Character affectedCharacter = characters[_id];\r\n        if (isPositiveEffect == 0) {\r\n            affectedCharacter.hp = affectedCharacter.hp - getRand();\r\n            affectedCharacter.mp = affectedCharacter.mp - getRand();\r\n            affectedCharacter.str = affectedCharacter.str - getRand();\r\n            affectedCharacter.intelli = affectedCharacter.intelli - getRand();\r\n            affectedCharacter.san = affectedCharacter.san - getRand();\r\n            affectedCharacter.luck = affectedCharacter.luck - getRand();\r\n            affectedCharacter.charm = affectedCharacter.charm - getRand();\r\n        } else if (isPositiveEffect == 1) {\r\n            affectedCharacter.hp = affectedCharacter.hp + getRand();\r\n            affectedCharacter.mp = affectedCharacter.mp + getRand();\r\n            affectedCharacter.str = affectedCharacter.str + getRand();\r\n            affectedCharacter.intelli = affectedCharacter.intelli + getRand();\r\n            affectedCharacter.san = affectedCharacter.san + getRand();\r\n            affectedCharacter.luck = affectedCharacter.luck + getRand();\r\n            affectedCharacter.charm = affectedCharacter.charm + getRand();\r\n        }\r\n        //need rewrite as a function\r\n        if (affectedCharacter.hp < 0) {\r\n            affectedCharacter.hp = 0;\r\n        } else if (affectedCharacter.hp > 100) {\r\n            affectedCharacter.hp = 100;\r\n\r\n        } else if (affectedCharacter.mp < 0) {\r\n            affectedCharacter.mp = 0;\r\n\r\n        } else if (affectedCharacter.mp > 100) {\r\n            affectedCharacter.mp = 100;\r\n\r\n        } else if (affectedCharacter.str < 0) {\r\n            affectedCharacter.str = 0;\r\n\r\n        } else if (affectedCharacter.str > 100) {\r\n            affectedCharacter.str = 100;\r\n\r\n        } else if (affectedCharacter.intelli < 0) {\r\n            affectedCharacter.intelli = 0;\r\n\r\n        } else if (affectedCharacter.intelli > 100) {\r\n            affectedCharacter.intelli = 100;\r\n\r\n        } else if (affectedCharacter.san < 0) {\r\n            affectedCharacter.san = 0;\r\n\r\n        } else if (affectedCharacter.san > 100) {\r\n            affectedCharacter.san = 100;\r\n\r\n        } else if (affectedCharacter.luck < 0) {\r\n            affectedCharacter.luck = 0;\r\n\r\n        } else if (affectedCharacter.luck > 100) {\r\n            affectedCharacter.luck = 100;\r\n\r\n        } else if (affectedCharacter.charm < 0) {\r\n            affectedCharacter.charm = 0;\r\n\r\n        } else if (affectedCharacter.charm > 100) {\r\n            affectedCharacter.charm = 100;\r\n        }\r\n\r\n        characters[_id] = affectedCharacter;\r\n    }\r\n\r\n\r\n    function getRand() public view returns (uint256 _rand){\r\n        uint256 rand = uint256(sha256(block.timestamp, block.number - rand - 1)) % 10 + 1;\r\n        return rand;\r\n    }\r\n\r\n    function insertCharacter(string _name, uint _hp, uint _mp, uint _str, uint _intelli, uint _san, uint _luck, uint _charm, uint _mt, string _optionalAttrs) returns (uint){\r\n        require(checkLegal(_hp, _mp, _str, _intelli, _san, _luck, _charm, _mt) == 1);\r\n        //需要check合法性\r\n        characterNo++;\r\n        characters.push(Character(_name, _hp, _mp, _str, _intelli, _san, _luck, _charm, _mt, _optionalAttrs));\r\n\r\n        return characterNo;\r\n    }\r\n\r\n    function checkLegal(uint _hp, uint _mp, uint _str, uint _intelli, uint _san, uint _luck, uint _charm, uint _mt) returns (uint _checkresult){\r\n        if ((_hp < 0) || (_hp > 9999)) {\r\n            return 0;\r\n        } else if ((_mp < 0) || (_mp > 9999)) {\r\n            return 0;\r\n        } else if ((_str < 0) || (_str > 9999)) {\r\n            return 0;\r\n        } else if ((_intelli < 0) || (_intelli > 9999)) {\r\n            return 0;\r\n        } else if ((_san < 0) || (_san > 9999)) {\r\n            return 0;\r\n        } else if ((_luck < 0) || (_luck > 9999)) {\r\n            return 0;\r\n        } else if ((_charm < 0) || (_charm > 9999)) {\r\n            return 0;\r\n        } else if ((_mt < 0) || (_mt > 2)) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    // This function will return all of the details of the characters\r\n    function getCharacterDetails(uint _characterId) public view returns (\r\n        string _name,\r\n        uint _hp,\r\n        uint _mp,\r\n        uint _str,\r\n        uint _int,\r\n        uint _san,\r\n        uint _luck,\r\n        uint _charm,\r\n        uint _mt,\r\n        string _optionalAttrs\r\n    ) {\r\n\r\n        Character storage _characterInfo = characters[_characterId];\r\n\r\n        _name = _characterInfo.name;\r\n        _hp = _characterInfo.hp;\r\n        _mp = _characterInfo.mp;\r\n        _str = _characterInfo.str;\r\n        _int = _characterInfo.intelli;\r\n        _san = _characterInfo.san;\r\n        _luck = _characterInfo.luck;\r\n        _charm = _characterInfo.charm;\r\n        _mt = _characterInfo.mt;\r\n        _optionalAttrs = _characterInfo.optionalAttrs;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getCharacterNo\",\"outputs\":[{\"name\":\"_characterNo\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hp\",\"type\":\"uint256\"},{\"name\":\"_mp\",\"type\":\"uint256\"},{\"name\":\"_str\",\"type\":\"uint256\"},{\"name\":\"_intelli\",\"type\":\"uint256\"},{\"name\":\"_san\",\"type\":\"uint256\"},{\"name\":\"_luck\",\"type\":\"uint256\"},{\"name\":\"_charm\",\"type\":\"uint256\"},{\"name\":\"_mt\",\"type\":\"uint256\"}],\"name\":\"checkLegal\",\"outputs\":[{\"name\":\"_checkresult\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"isPositiveEffect\",\"type\":\"uint256\"}],\"name\":\"affectCharacter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRand\",\"outputs\":[{\"name\":\"_rand\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_characterId\",\"type\":\"uint256\"}],\"name\":\"getCharacterDetails\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_hp\",\"type\":\"uint256\"},{\"name\":\"_mp\",\"type\":\"uint256\"},{\"name\":\"_str\",\"type\":\"uint256\"},{\"name\":\"_int\",\"type\":\"uint256\"},{\"name\":\"_san\",\"type\":\"uint256\"},{\"name\":\"_luck\",\"type\":\"uint256\"},{\"name\":\"_charm\",\"type\":\"uint256\"},{\"name\":\"_mt\",\"type\":\"uint256\"},{\"name\":\"_optionalAttrs\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_hp\",\"type\":\"uint256\"},{\"name\":\"_mp\",\"type\":\"uint256\"},{\"name\":\"_str\",\"type\":\"uint256\"},{\"name\":\"_intelli\",\"type\":\"uint256\"},{\"name\":\"_san\",\"type\":\"uint256\"},{\"name\":\"_luck\",\"type\":\"uint256\"},{\"name\":\"_charm\",\"type\":\"uint256\"},{\"name\":\"_mt\",\"type\":\"uint256\"},{\"name\":\"_optionalAttrs\",\"type\":\"string\"}],\"name\":\"insertCharacter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"characterNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_hp\",\"type\":\"uint256\"},{\"name\":\"_mp\",\"type\":\"uint256\"},{\"name\":\"_str\",\"type\":\"uint256\"},{\"name\":\"_intelli\",\"type\":\"uint256\"},{\"name\":\"_san\",\"type\":\"uint256\"},{\"name\":\"_luck\",\"type\":\"uint256\"},{\"name\":\"_charm\",\"type\":\"uint256\"},{\"name\":\"_optionalAttrs\",\"type\":\"string\"}],\"name\":\"setCharacterAttributes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Genesis","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a8651bc71daa6e0e715a7a2a306e7b1ffdb3226c856853529e8a7e792a2362e3"}]}