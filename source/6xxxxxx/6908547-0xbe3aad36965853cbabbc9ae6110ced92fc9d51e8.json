{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract Owned {\r\n    modifier onlyOwner() {\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    address payable owner;\r\n    address payable newOwner;\r\n    function changeOwner(address payable _newOwner) public onlyOwner {\r\n        newOwner=_newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        if (msg.sender==newOwner) {\r\n            owner=newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address _owner) view public returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract UnlockVideo is Owned{\r\n    uint256 add;\r\n    uint8 fee;\r\n    uint8 bonus;\r\n    address token;\r\n    mapping (address=>uint256) donates;\r\n    mapping (bytes32=>address) videos;\r\n    mapping (address=>uint256) balances;\r\n    event Donate(address indexed _owner, uint256 _amount);\r\n    event Video(address indexed _sender, bytes32 _id);\r\n        \r\n    constructor() public{\r\n        add = 5000000000000000;\r\n        fee = 2;\r\n        bonus = 10;\r\n        token = 0xCD8aAC9972dc4Ddc48d700bc0710C0f5223fBCfa;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function addVideo(bytes32 _id) public returns (bool success){\r\n        require (videos[_id]==address(0x0) && balances[msg.sender]>=add);\r\n        videos[_id] = msg.sender;\r\n        balances[msg.sender] -= add;\r\n        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);\r\n        owner.transfer(add);\r\n        return true;\r\n    }\r\n    \r\n    function changeDonate(uint256 _donate) public returns (bool success){\r\n        require(_donate>0);\r\n        donates[msg.sender] = _donate;\r\n        return true;\r\n    }\r\n    \r\n    function donateVideo(bytes32 _id) public returns (bool success){\r\n        require(videos[_id]!=address(0x0) && balances[msg.sender]>=donates[videos[_id]]);\r\n        balances[videos[_id]] += donates[videos[_id]];\r\n        balances[msg.sender] -= donates[videos[_id]];\r\n        if (ERC20(token).balanceOf(address(this))>=bonus) ERC20(token).transfer(msg.sender, bonus);\r\n        emit Donate(videos[_id], donates[videos[_id]]);\r\n        emit Video(msg.sender, _id);\r\n        return true;\r\n    }\r\n    \r\n    function changeAdd (uint256 _add) onlyOwner public returns (bool success){\r\n        require (_add>0);\r\n        add=_add;\r\n        return true;\r\n    }\r\n    \r\n    function changeFee (uint8 _fee) onlyOwner public returns (bool success){\r\n        require (_fee>0);\r\n        fee=_fee;\r\n        return true;\r\n    }\r\n    \r\n    function changeBonus (uint8 _bonus) onlyOwner public returns (bool success){\r\n        require (_bonus>0);\r\n        bonus=_bonus;\r\n        return true;\r\n    }\r\n    \r\n    function getBalance(address _owner) view public returns (uint256 balance){\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function withdrawEth(uint256 _amount) public returns (bool success){\r\n        require(_amount>0 && balances[msg.sender]>=_amount);\r\n        uint256 deduct = _amount*fee/100;\r\n        owner.transfer(deduct);\r\n        msg.sender.transfer(_amount-deduct);\r\n        return true;\r\n    }\r\n    \r\n    function () payable external {\r\n        require(msg.value>0);\r\n        uint256 deduct = msg.value*fee/100;\r\n        owner.transfer(deduct);\r\n        balances[msg.sender]+=msg.value-deduct;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"changeFee\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"addVideo\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bonus\",\"type\":\"uint8\"}],\"name\":\"changeBonus\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"uint256\"}],\"name\":\"changeAdd\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"donateVideo\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_donate\",\"type\":\"uint256\"}],\"name\":\"changeDonate\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"Video\",\"type\":\"event\"}]","ContractName":"UnlockVideo","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://223704ca7616480ee994ab785a2cc2bc84fdb0677a0fa6497e18cbdf2bd898d1"}]}