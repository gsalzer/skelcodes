{"status":"1","message":"OK","result":[{"SourceCode":"/*  \r\n\r\n$$$$$$$\\                                 $$\\$$\\   $$\\                       $$$$$$\\                                \r\n$$  __$$\\                                $$ $$$\\  $$ |                     $$  __$$\\                               \r\n$$ |  $$ |$$$$$$\\ $$$$$$\\ $$$$$$$\\  $$$$$$$ $$$$\\ $$ |$$$$$$\\ $$\\  $$\\  $$\\$$ /  \\__|$$$$$$$\\$$$$$$\\ $$$$$$\\$$$$\\  \r\n$$$$$$$\\ $$  __$$\\\\____$$\\$$  __$$\\$$  __$$ $$ $$\\$$ $$  __$$\\$$ | $$ | $$ \\$$$$$$\\ $$  _____\\____$$\\$$  _$$  _$$\\ \r\n$$  __$$\\$$ |  \\__$$$$$$$ $$ |  $$ $$ /  $$ $$ \\$$$$ $$$$$$$$ $$ | $$ | $$ |\\____$$\\$$ /     $$$$$$$ $$ / $$ / $$ |\r\n$$ |  $$ $$ |    $$  __$$ $$ |  $$ $$ |  $$ $$ |\\$$$ $$   ____$$ | $$ | $$ $$\\   $$ $$ |    $$  __$$ $$ | $$ | $$ |\r\n$$$$$$$  $$ |    \\$$$$$$$ $$ |  $$ \\$$$$$$$ $$ | \\$$ \\$$$$$$$\\\\$$$$$\\$$$$  \\$$$$$$  \\$$$$$$$\\$$$$$$$ $$ | $$ | $$ |\r\n\\_______/\\__|     \\_______\\__|  \\__|\\_______\\__|  \\__|\\_______|\\_____\\____/ \\______/ \\_______\\_______\\__| \\__| \\__|\r\n\r\n           __________                                 \r\n         .'----------`.                              \r\n         | .--------. |                             \r\n         | |$$$$$$$$| |       __________              \r\n         | |$$$$$$$$| |      /__________\\             \r\n.--------| `--------' |------|    --=-- |-------------.\r\n|        `----,-.-----'      |o ======  |             | \r\n|       ______|_|_______     |__________|             | \r\n|      /  %%%%%%%%%%%%  \\                             | \r\n|     /  %%%%%%%%%%%%%%  \\                            | \r\n|     ^^^^^^^^^^^^^^^^^^^^                            | \r\n+-----------------------------------------------------+\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \r\n\r\nYou're always on the ground floor to somewhere...\r\n\r\n* No divs. No refs. Only scams\r\n* Scam price only goes up \r\n* No guarantee there will be any ETH left when you sell\r\n* 30-minute time out between buying and selling \r\n* Contract has a built-in equal opportunity ETH drain\r\n* 5% stupid tax \r\n* The whole contract can be exit scammed in 48 hours\r\n\r\n*/\r\n\r\npragma solidity ^0.4.25;\r\n\r\n    contract BrandNewScam {\r\n\r\n    using ScamMath for uint256;\r\n    \r\n    address public scammerInChief;\r\n    uint256 public greaterFools;\r\n    uint256 public availableBalance;\r\n    uint256 public countdownToExitScam;\r\n    uint256 public scamSupply;\r\n    uint256 public scamPrice = 69696969696969;\r\n    uint256 public stupidTaxRate = 5;\r\n    uint256 public timeOut = 30 minutes;\r\n    mapping (address => uint256) public userTime;\r\n    mapping (address => uint256) public userScams;\r\n    mapping (address => uint256) public userBalance;\r\n    \r\n    constructor() public payable{\r\n        scammerInChief = msg.sender;\r\n        buyScams();\r\n        countdownToExitScam = now + 48 hours;\r\n    }\r\n    \r\n    modifier relax { \r\n        require (msg.sender == tx.origin); \r\n        _; \r\n    }\r\n\r\n    modifier wait { \r\n        require (now >= userTime[msg.sender] + timeOut);\r\n        _; \r\n    }\r\n    \r\n    function () public payable relax {\r\n        buyScams();\r\n    }\r\n\r\n    function buyScams() public payable relax {\r\n        uint256 stupidTax = msg.value.mul(stupidTaxRate).div(100);\r\n        uint256 ethRemaining = msg.value.sub(stupidTax);\r\n        require(ethRemaining >= scamPrice);\r\n        uint256 scamsPurchased = ethRemaining.div(scamPrice);\r\n        userTime[msg.sender] = now;\r\n        userScams[msg.sender] += scamsPurchased;\r\n        scamSupply += scamsPurchased;\r\n        availableBalance += ethRemaining;\r\n        uint256 newScamPrice = availableBalance.div(scamSupply).mul(2);\r\n        if (newScamPrice > scamPrice) {\r\n            scamPrice = newScamPrice;\r\n        }\r\n        scammerInChief.transfer(stupidTax);\r\n        greaterFools++;\r\n    }\r\n    \r\n    function sellScams(uint256 _scams) public relax wait {\r\n        require (userScams[msg.sender] > 0 && userScams[msg.sender] >= _scams);\r\n        uint256 scamProfit = _scams.mul(scamPrice);\r\n        require (scamProfit <= availableBalance);\r\n        scamSupply = scamSupply.sub(_scams);\r\n        availableBalance = availableBalance.sub(scamProfit);\r\n        userScams[msg.sender] = userScams[msg.sender].sub(_scams);\r\n        userBalance[msg.sender] += scamProfit;\r\n        userTime[msg.sender] = now;\r\n    }\r\n        \r\n    function withdrawScamEarnings() public relax {\r\n        require (userBalance[msg.sender] > 0);\r\n        uint256 balance = userBalance[msg.sender];\r\n        userBalance[msg.sender] = 0;\r\n        msg.sender.transfer(balance);\r\n    }\r\n\r\n    function fastEscape() public relax {\r\n        uint256 scamProfit = userScams[msg.sender].mul(scamPrice);\r\n        if (scamProfit <= availableBalance) {\r\n            sellScams(userScams[msg.sender]);\r\n            withdrawScamEarnings();\r\n        } else {\r\n            uint256 maxScams = availableBalance.div(scamPrice);\r\n            assert (userScams[msg.sender] >= maxScams);\r\n            sellScams(maxScams);\r\n            withdrawScamEarnings();\r\n        }\r\n    }\r\n\r\n    function drainMe() public relax {\r\n        require (availableBalance > 420);\r\n        uint256 notRandomNumber = uint256(blockhash(block.number - 1)) % 2;\r\n        if (notRandomNumber == 0) {\r\n            msg.sender.transfer(420);\r\n            availableBalance.sub(420);\r\n        } else {\r\n            msg.sender.transfer(69);\r\n            availableBalance.sub(69);\r\n        }\r\n    }\r\n\r\n    function exitScam() public relax {\r\n        require (msg.sender == scammerInChief);\r\n        require (now >= countdownToExitScam);\r\n        selfdestruct(scammerInChief);\r\n    }\r\n    \r\n    function checkBalance() public view returns(uint256) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n\r\nlibrary ScamMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) { return 0; }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scamSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawScamEarnings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fastEscape\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userScams\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeOut\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scammerInChief\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scamPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"greaterFools\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exitScam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_scams\",\"type\":\"uint256\"}],\"name\":\"sellScams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyScams\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drainMe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stupidTaxRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countdownToExitScam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BrandNewScam","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://251a7aa1845d28edda7a1f763a1d1b992406b578859225f19432c5c19161bb2c"}]}