{"status":"1","message":"OK","result":[{"SourceCode":"// 0.4.20+commit.3155dd80.Emscripten.clang\r\npragma solidity ^0.4.20;\r\n\r\n/**\r\n * Ethereum Token callback\r\n */\r\ninterface tokenRecipient {\r\n  function receiveApproval( address from, uint256 value, bytes data ) external;\r\n}\r\n\r\n/**\r\n * ERC223 callback\r\n */\r\ninterface ContractReceiver {\r\n  function tokenFallback( address from, uint value, bytes data ) external;\r\n}\r\n\r\n/**\r\n * Ownable Contract\r\n */\r\ncontract Owned {\r\n  address public owner;\r\n\r\n  function owned() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function changeOwner(address _newOwner) public onlyOwner {\r\n    owner = _newOwner;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require (msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\n/**\r\n * ERC20 token with added ERC223 and Ethereum-Token support\r\n *\r\n * Blend of multiple interfaces:\r\n * - https://theethereum.wiki/w/index.php/ERC20_Token_Standard\r\n * - https://www.ethereum.org/token (uncontrolled, non-standard)\r\n * - https://github.com/Dexaran/ERC23-tokens/blob/Recommended/ERC223_Token.sol\r\n */\r\ncontract Token is Owned {\r\n  string  public name;\r\n  string  public symbol;\r\n  uint8   public decimals = 18;\r\n  uint256 public totalSupply;\r\n\r\n  mapping( address => uint256 ) balances;\r\n  mapping( address => mapping(address => uint256) ) allowances;\r\n\r\n  /**\r\n   * ERC20 Approval Event\r\n   */\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint value\r\n  );\r\n\r\n  /**\r\n   * ERC20-compatible version only, breaks ERC223 compliance but block\r\n   * explorers and exchanges expect ERC20. Also, cannot overload events\r\n   */\r\n  event Transfer(\r\n    address indexed from,\r\n    address indexed to,\r\n    uint256 value\r\n  );\r\n\r\n  function Token(\r\n    uint256 _initialSupply,\r\n    string _tokenName,\r\n    string _tokenSymbol\r\n  )\r\n    public\r\n  {\r\n    totalSupply = _initialSupply * 10**18;\r\n    balances[msg.sender] = _initialSupply * 10**18;\r\n\r\n    name = _tokenName;\r\n    symbol = _tokenSymbol;\r\n  }\r\n\r\n  /**\r\n   * ERC20 Balance Of Function\r\n   */\r\n  function balanceOf( address owner ) public constant returns (uint) {\r\n    return balances[owner];\r\n  }\r\n\r\n  /**\r\n   * ERC20 Approve Function\r\n   */\r\n  function approve( address spender, uint256 value ) public returns (bool success) {\r\n    // WARNING! When changing the approval amount, first set it back to zero\r\n    // AND wait until the transaction is mined. Only afterwards set the new\r\n    // amount. Otherwise you may be prone to a race condition attack.\r\n    // See: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    allowances[msg.sender][spender] = value;\r\n    Approval( msg.sender, spender, value );\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Recommended fix for known attack on any ERC20\r\n   */\r\n  function safeApprove(\r\n    address _spender,\r\n    uint256 _currentValue,\r\n    uint256 _value\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    // If current allowance for _spender is equal to _currentValue, then\r\n    // overwrite it with _value and return true, otherwise return false.\r\n\r\n    if (allowances[msg.sender][_spender] == _currentValue)\r\n      return approve(_spender, _value);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * ERC20 Allowance Function\r\n   */\r\n  function allowance(\r\n    address owner,\r\n    address spender\r\n  )\r\n    public constant\r\n    returns (uint256 remaining)\r\n  {\r\n    return allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * ERC20 Transfer Function\r\n   */\r\n  function transfer(\r\n    address to,\r\n    uint256 value\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    bytes memory empty; // null\r\n    _transfer( msg.sender, to, value, empty );\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * ERC20 Transfer From Function\r\n   */\r\n  function transferFrom(\r\n    address from,\r\n    address to,\r\n    uint256 value\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    require( value <= allowances[from][msg.sender] );\r\n\r\n    allowances[from][msg.sender] -= value;\r\n    bytes memory empty;\r\n    _transfer( from, to, value, empty );\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Ethereum Token Approve and Call Function\r\n   */\r\n  function approveAndCall(\r\n    address spender,\r\n    uint256 value,\r\n    bytes context\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    if (approve(spender, value))\r\n    {\r\n      tokenRecipient recip = tokenRecipient(spender);\r\n\r\n      if (isContract(recip))\r\n        recip.receiveApproval(msg.sender, value, context);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * ERC223 Transfer and invoke specified callback\r\n   */\r\n  function transfer(\r\n    address to,\r\n    uint value,\r\n    bytes data,\r\n    string custom_fallback\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    // throws if custom_fallback is not a valid contract call\r\n    require(\r\n      address(to).call.value(0)(\r\n        bytes4(keccak256(custom_fallback)),\r\n        msg.sender,\r\n        value,\r\n        data\r\n      )\r\n    );\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * ERC223 Transfer to a contract or externally-owned account\r\n   */\r\n  function transfer(\r\n    address to,\r\n    uint value,\r\n    bytes data\r\n  )\r\n    public\r\n    returns (bool success)\r\n  {\r\n    if (isContract(to)) {\r\n      return transferToContract( to, value, data );\r\n    }\r\n\r\n    _transfer( msg.sender, to, value, data );\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * ERC223 Transfer to contract and invoke tokenFallback() method\r\n   */\r\n  function transferToContract(\r\n    address to,\r\n    uint value,\r\n    bytes data\r\n  )\r\n    private\r\n    returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    ContractReceiver rx = ContractReceiver(to);\r\n\r\n    if (isContract(rx)) {\r\n      rx.tokenFallback( msg.sender, value, data );\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * ERC223 fetch contract size (must be nonzero to be a contract)\r\n   */\r\n  function isContract(address _addr)\r\n    private\r\n    constant\r\n    returns (bool)\r\n  {\r\n    uint length;\r\n    assembly { length := extcodesize(_addr) }\r\n    return (length > 0);\r\n  }\r\n\r\n  /**\r\n   * Transfer Functionality\r\n   */\r\n  function _transfer(\r\n    address from,\r\n    address to,\r\n    uint value,\r\n    bytes data\r\n  )\r\n    internal\r\n  {\r\n    require( to != 0x0 );\r\n    require( balances[from] >= value );\r\n    require( balances[to] + value > balances[to] ); // catch overflow\r\n\r\n    balances[from] -= value;\r\n    balances[to] += value;\r\n\r\n    bytes memory ignore;\r\n    ignore = data; // ignore compiler warning\r\n    Transfer( from, to, value ); // ERC20-version, ignore data\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"owned\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_currentValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000084d6f6e69636f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044d4f4e4900000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://b22974b91672c42dcaff3f9c6c007044027d4e2dc985ee136363eb112107ea8e"}]}