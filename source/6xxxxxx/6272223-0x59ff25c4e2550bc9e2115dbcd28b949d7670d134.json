{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        require(c / a == b, \"SafeMath mul failed\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath sub failed\");\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a, \"SafeMath add failed\");\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"You are not owner.\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0), \"Invalid address.\");\r\n\r\n        owner = _newOwner;\r\n\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n    }\r\n}\r\n\r\ncontract Partnership is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    string public name = \"Partnership (Fomo3D Asia)\";\r\n\r\n    mapping(address => uint256) public depositOf;\r\n\r\n    struct Partner {\r\n        address who;\r\n        uint256 shares;\r\n    }\r\n    Partner[] private partners;\r\n\r\n    event Deposited(address indexed who, uint256 amount);\r\n    event Withdrawn(address indexed who, uint256 amount);\r\n\r\n    constructor() public {\r\n        partners.push(Partner(address(0), 0));\r\n\r\n        partners.push(Partner(0x05dEbE8428CAe653eBA92a8A887CCC73C7147bB8, 60));\r\n        partners.push(Partner(0xF53e5f0Af634490D33faf1133DE452cd9fF987e1, 20));\r\n        partners.push(Partner(0x6127d9bc5BDEaDf5b3d5a056E80EE9B75d8Ac071, 20));\r\n    }\r\n\r\n    function() public payable {\r\n        withdraw(msg.sender);\r\n    }\r\n\r\n    function deposit() public payable {\r\n        uint256 amount = msg.value;\r\n        require(amount > 0, \"Deposit failed - zero deposits not allowed\");\r\n\r\n        for (uint256 i = 1; i < partners.length; i++) {\r\n            if (partners[i].shares > 0) {\r\n                depositOf[partners[i].who] = depositOf[partners[i].who].add(amount.mul(partners[i].shares).div(100));\r\n            }\r\n        }\r\n\r\n        emit Deposited(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(address _who) public {\r\n        uint256 amount = depositOf[_who];\r\n        require(amount > 0 && amount <= address(this).balance, \"Insufficient amount.\");\r\n\r\n        depositOf[_who] = depositOf[_who].sub(amount);\r\n\r\n        _who.transfer(amount);\r\n\r\n        emit Withdrawn(_who, amount);\r\n    }\r\n\r\n    function setPartner(address _who, uint256 _shares) public onlyOwner {\r\n        uint256 partnerIndex = 0;\r\n        uint256 sharesSupply = 100;\r\n        for (uint256 i = 1; i < partners.length; i++) {\r\n            if (partners[i].who == _who) {\r\n                partnerIndex = i;\r\n            } else if (partners[i].shares > 0) {\r\n                sharesSupply = sharesSupply.sub(partners[i].shares);\r\n            }\r\n        }\r\n        require(_shares <= sharesSupply, \"Insufficient shares.\");\r\n\r\n        if (partnerIndex > 0) {\r\n            partners[partnerIndex].shares = _shares;\r\n        } else {\r\n            partners.push(Partner(_who, _shares));\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"},{\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"setPartner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Partnership","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4c275631d0bd4929a64cb653902f3ce5959c4c6c6b55951186913214f9b43933"}]}