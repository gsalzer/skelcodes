{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/GodMode.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title God Mode\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev This contract provides a basic interface for God\r\n///  in a contract as well as the ability for God to pause\r\n///  the contract\r\ncontract GodMode {\r\n    /// @dev Is the contract paused?\r\n    bool public isPaused;\r\n\r\n    /// @dev God's address\r\n    address public god;\r\n\r\n    /// @dev Only God can run this function\r\n    modifier onlyGod()\r\n    {\r\n        require(god == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev This function can only be run while the contract\r\n    ///  is not paused\r\n    modifier notPaused()\r\n    {\r\n        require(!isPaused);\r\n        _;\r\n    }\r\n\r\n    /// @dev This event is fired when the contract is paused\r\n    event GodPaused();\r\n\r\n    /// @dev This event is fired when the contract is unpaused\r\n    event GodUnpaused();\r\n\r\n    constructor() public\r\n    {\r\n        // Make the creator of the contract God\r\n        god = msg.sender;\r\n    }\r\n\r\n    /// @dev God can change the address of God\r\n    /// @param _newGod The new address for God\r\n    function godChangeGod(address _newGod) public onlyGod\r\n    {\r\n        god = _newGod;\r\n    }\r\n\r\n    /// @dev God can pause the game\r\n    function godPause() public onlyGod\r\n    {\r\n        isPaused = true;\r\n\r\n        emit GodPaused();\r\n    }\r\n\r\n    /// @dev God can unpause the game\r\n    function godUnpause() public onlyGod\r\n    {\r\n        isPaused = false;\r\n\r\n        emit GodUnpaused();\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthAbstractInterface.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title King of Eth Abstract Interface\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Abstract interface contract for titles and taxes\r\ncontract KingOfEthAbstractInterface {\r\n    /// @dev The address of the current King\r\n    address public king;\r\n\r\n    /// @dev The address of the current Wayfarer\r\n    address public wayfarer;\r\n\r\n    /// @dev Anyone can pay taxes\r\n    function payTaxes() public payable;\r\n}\r\n\r\n// File: contracts/KingOfEthReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/// @title King of Eth Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Functionality to allow contracts to reference the king contract\r\ncontract KingOfEthReferencer is GodMode {\r\n    /// @dev The address of the king contract\r\n    address public kingOfEthContract;\r\n\r\n    /// @dev Only the king contract can run this\r\n    modifier onlyKingOfEthContract()\r\n    {\r\n        require(kingOfEthContract == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev God can change the king contract\r\n    /// @param _kingOfEthContract The new address\r\n    function godSetKingOfEthContract(address _kingOfEthContract)\r\n        public\r\n        onlyGod\r\n    {\r\n        kingOfEthContract = _kingOfEthContract;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthRoadsAbstractInterface.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/// @title King of Eth: Roads Abstract Interface\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Abstract interface contract for roads\r\ncontract KingOfEthRoadsAbstractInterface {\r\n    /// @dev Get the owner of the road at some location\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road (either\r\n    ///  0 for right or 1 for down)\r\n    /// @return The address of the owner\r\n    function ownerOf(uint _x, uint _y, uint8 _direction) public view returns(address);\r\n\r\n    /// @dev The road realty contract can transfer road ownership\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    /// @param _from The previous owner of road\r\n    /// @param _to The new owner of road\r\n    function roadRealtyTransferOwnership(\r\n          uint _x\r\n        , uint _y\r\n        , uint8 _direction\r\n        , address _from\r\n        , address _to\r\n    ) public;\r\n}\r\n\r\n// File: contracts/KingOfEthRoadsReferencer.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/// @title King of Eth: Roads Referencer\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Provides functionality to reference the roads contract\r\ncontract KingOfEthRoadsReferencer is GodMode {\r\n    /// @dev The roads contract's address\r\n    address public roadsContract;\r\n\r\n    /// @dev Only the roads contract can run this function\r\n    modifier onlyRoadsContract()\r\n    {\r\n        require(roadsContract == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev God can set the realty contract\r\n    /// @param _roadsContract The new address\r\n    function godSetRoadsContract(address _roadsContract)\r\n        public\r\n        onlyGod\r\n    {\r\n        roadsContract = _roadsContract;\r\n    }\r\n}\r\n\r\n// File: contracts/KingOfEthRoadRealty.sol\r\n\r\n/****************************************************\r\n *\r\n * Copyright 2018 BurzNest LLC. All rights reserved.\r\n *\r\n * The contents of this file are provided for review\r\n * and educational purposes ONLY. You MAY NOT use,\r\n * copy, distribute, or modify this software without\r\n * explicit written permission from BurzNest LLC.\r\n *\r\n ****************************************************/\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// @title King of Eth: Road Realty\r\n/// @author Anthony Burzillo <burz@burznest.com>\r\n/// @dev Contract for controlling sales of roads\r\ncontract KingOfEthRoadRealty is\r\n      GodMode\r\n    , KingOfEthReferencer\r\n    , KingOfEthRoadsReferencer\r\n{\r\n    /// @dev The number that divides the amount payed for any sale to produce\r\n    ///  the amount payed in taxes\r\n    uint public constant taxDivisor = 25;\r\n\r\n    /// @dev Mapping from the x, y coordinates and the direction (0 for right and\r\n    ///  1 for down) of a road to the  current sale price (0 if there is no sale)\r\n    mapping (uint => mapping (uint => uint[2])) roadPrices;\r\n\r\n    /// @dev Fired when there is a new road for sale\r\n    event RoadForSale(\r\n          uint x\r\n        , uint y\r\n        , uint8 direction\r\n        , address owner\r\n        , uint amount\r\n    );\r\n\r\n    /// @dev Fired when the owner changes the price of a road\r\n    event RoadPriceChanged(\r\n          uint x\r\n        , uint y\r\n        , uint8 direction\r\n        , uint amount\r\n    );\r\n\r\n    /// @dev Fired when a road is sold\r\n    event RoadSold(\r\n          uint x\r\n        , uint y\r\n        , uint8 direction\r\n        , address from\r\n        , address to\r\n        , uint amount\r\n    );\r\n\r\n    /// @dev Fired when the sale for a road is cancelled by the owner\r\n    event RoadSaleCancelled(\r\n          uint x\r\n        , uint y\r\n        , uint8 direction\r\n        , address owner\r\n    );\r\n\r\n    /// @dev Only the owner of the road at a location can run this\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    modifier onlyRoadOwner(uint _x, uint _y, uint8 _direction)\r\n    {\r\n        require(KingOfEthRoadsAbstractInterface(roadsContract).ownerOf(_x, _y, _direction) == msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @dev This can only be run if there is *not* an existing sale for a road\r\n    ///  at a location\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    modifier noExistingRoadSale(uint _x, uint _y, uint8 _direction)\r\n    {\r\n        require(0 == roadPrices[_x][_y][_direction]);\r\n        _;\r\n    }\r\n\r\n    /// @dev This can only be run if there is an existing sale for a house\r\n    ///  at a location\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    modifier existingRoadSale(uint _x, uint _y, uint8 _direction)\r\n    {\r\n        require(0 != roadPrices[_x][_y][_direction]);\r\n        _;\r\n    }\r\n\r\n    /// @param _kingOfEthContract The address of the king contract\r\n    constructor(address _kingOfEthContract) public\r\n    {\r\n        kingOfEthContract = _kingOfEthContract;\r\n    }\r\n\r\n    /// @dev The roads contract can cancel a sale when a road is transfered\r\n    ///  to another player\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    function roadsCancelRoadSale(uint _x, uint _y, uint8 _direction)\r\n        public\r\n        onlyRoadsContract\r\n    {\r\n        // If there is indeed a sale\r\n        if(0 != roadPrices[_x][_y][_direction])\r\n        {\r\n            // Cancel the sale\r\n            roadPrices[_x][_y][_direction] = 0;\r\n\r\n            emit RoadSaleCancelled(_x, _y, _direction, msg.sender);\r\n        }\r\n    }\r\n\r\n    /// @dev The owner of a road can start a sale\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    /// @param _askingPrice The price that must be payed by another player\r\n    ///  to purchase the road\r\n    function startRoadSale(\r\n          uint _x\r\n        , uint _y\r\n        , uint8 _direction\r\n        , uint _askingPrice\r\n    )\r\n        public\r\n        notPaused\r\n        onlyRoadOwner(_x, _y, _direction)\r\n        noExistingRoadSale(_x, _y, _direction)\r\n    {\r\n        // Require that the price is at least 0\r\n        require(0 != _askingPrice);\r\n\r\n        // Record the price\r\n        roadPrices[_x][_y][_direction] = _askingPrice;\r\n\r\n        emit RoadForSale(_x, _y, _direction, msg.sender, _askingPrice);\r\n    }\r\n\r\n    /// @dev The owner of a road can change the price of a sale\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    /// @param _askingPrice The new price that must be payed by another\r\n    ///  player to purchase the road\r\n    function changeRoadPrice(\r\n          uint _x\r\n        , uint _y\r\n        , uint8 _direction\r\n        , uint _askingPrice\r\n    )\r\n        public\r\n        notPaused\r\n        onlyRoadOwner(_x, _y, _direction)\r\n        existingRoadSale(_x, _y, _direction)\r\n    {\r\n        // Require that the price is at least 0\r\n        require(0 != _askingPrice);\r\n\r\n        // Record the price\r\n        roadPrices[_x][_y][_direction] = _askingPrice;\r\n\r\n        emit RoadPriceChanged(_x, _y, _direction, _askingPrice);\r\n    }\r\n\r\n    /// @dev Anyone can purchase a road as long as the sale exists\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    function purchaseRoad(uint _x, uint _y, uint8 _direction)\r\n        public\r\n        payable\r\n        notPaused\r\n        existingRoadSale(_x, _y, _direction)\r\n    {\r\n        // Require that the exact price was paid\r\n        require(roadPrices[_x][_y][_direction] == msg.value);\r\n\r\n        // End the sale\r\n        roadPrices[_x][_y][_direction] = 0;\r\n\r\n        // Calculate the taxes to be paid\r\n        uint taxCut = msg.value / taxDivisor;\r\n\r\n        // Pay the taxes\r\n        KingOfEthAbstractInterface(kingOfEthContract).payTaxes.value(taxCut)();\r\n\r\n        KingOfEthRoadsAbstractInterface _roadsContract = KingOfEthRoadsAbstractInterface(roadsContract);\r\n\r\n        // Determine the previous owner\r\n        address _oldOwner = _roadsContract.ownerOf(_x, _y, _direction);\r\n\r\n        // Send the buyer the house\r\n        _roadsContract.roadRealtyTransferOwnership(\r\n              _x\r\n            , _y\r\n            , _direction\r\n            , _oldOwner\r\n            , msg.sender\r\n        );\r\n\r\n        // Send the previous owner his share\r\n        _oldOwner.transfer(msg.value - taxCut);\r\n\r\n        emit RoadSold(\r\n              _x\r\n            , _y\r\n            , _direction\r\n            , _oldOwner\r\n            , msg.sender\r\n            , msg.value\r\n        );\r\n    }\r\n\r\n    /// @dev The owner of a road can cancel a sale\r\n    /// @param _x The x coordinate of the road\r\n    /// @param _y The y coordinate of the road\r\n    /// @param _direction The direction of the road\r\n    function cancelRoadSale(uint _x, uint _y, uint8 _direction)\r\n        public\r\n        notPaused\r\n        onlyRoadOwner(_x, _y, _direction)\r\n        existingRoadSale(_x, _y, _direction)\r\n    {\r\n        // Cancel the sale\r\n        roadPrices[_x][_y][_direction] = 0;\r\n\r\n        emit RoadSaleCancelled(_x, _y, _direction, msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"uint256\"},{\"name\":\"_y\",\"type\":\"uint256\"},{\"name\":\"_direction\",\"type\":\"uint8\"}],\"name\":\"roadsCancelRoadSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"godPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxDivisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newGod\",\"type\":\"address\"}],\"name\":\"godChangeGod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"uint256\"},{\"name\":\"_y\",\"type\":\"uint256\"},{\"name\":\"_direction\",\"type\":\"uint8\"},{\"name\":\"_askingPrice\",\"type\":\"uint256\"}],\"name\":\"startRoadSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kingOfEthContract\",\"type\":\"address\"}],\"name\":\"godSetKingOfEthContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"uint256\"},{\"name\":\"_y\",\"type\":\"uint256\"},{\"name\":\"_direction\",\"type\":\"uint8\"}],\"name\":\"purchaseRoad\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roadsContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"godUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"god\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"uint256\"},{\"name\":\"_y\",\"type\":\"uint256\"},{\"name\":\"_direction\",\"type\":\"uint8\"}],\"name\":\"cancelRoadSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"uint256\"},{\"name\":\"_y\",\"type\":\"uint256\"},{\"name\":\"_direction\",\"type\":\"uint8\"},{\"name\":\"_askingPrice\",\"type\":\"uint256\"}],\"name\":\"changeRoadPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roadsContract\",\"type\":\"address\"}],\"name\":\"godSetRoadsContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kingOfEthContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_kingOfEthContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"direction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoadForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"direction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoadPriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"direction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoadSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"direction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RoadSaleCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GodPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GodUnpaused\",\"type\":\"event\"}]","ContractName":"KingOfEthRoadRealty","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000004bba664ea822924ff435ce1b3fad3e8dcc69481","Library":"","SwarmSource":"bzzr://169824a1115f4e1a1d754d502087be023d5ac6272dfe5d3761c003015df19993"}]}