{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.25;\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b)internal pure returns(uint256 c) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tc = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\tfunction div(uint256 a, uint256 b)internal pure returns(uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\tfunction sub(uint256 a, uint256 b)internal pure returns(uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\tfunction add(uint256 a, uint256 b)internal pure returns(uint256 c) {\r\n\t\tc = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract ForeignToken {\r\n\tfunction balanceOf(address _owner)constant public returns(uint256);\r\n\tfunction transfer(address _to, uint256 _value)public returns(bool);\r\n}\r\n\r\ncontract ERC20Basic {\r\n\tuint256 public totalSupply;\r\n\tfunction balanceOf(address who)public constant returns(uint256);\r\n\tfunction transfer(address to, uint256 value)public returns(bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender)public constant returns(uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value)public returns(bool);\r\n\tfunction approve(address spender, uint256 value)public returns(bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract GoldRealEstate is ERC20 {\r\n\tusing SafeMath for uint256;\r\n\taddress owner = msg.sender;\r\n\tmapping(address => uint256)balances;\r\n\tmapping(address => mapping(address => uint256))allowed;\r\n\tstring public constant name = 'Gold Real Estate';\r\n\tstring public constant symbol = 'GRE';\r\n\tuint public constant decimals = 18;\r\n\tuint256 public totalSupply = 150000000000e18;\r\n\tuint256 public totalDistributed = 15000000000e18;\r\n\tuint256 public constant MIN_CONTRIBUTION = 1 ether / 100;\r\n\tuint256 public tokensPerEth = 20000000e18;\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\tevent Distr(address indexed to, uint256 amount);\r\n\tevent DistrFinished();\r\n\tevent Airdrop(address indexed _owner, uint _amount, uint _balance);\r\n\tevent TokensPerEthUpdated(uint _tokensPerEth);\r\n\tevent Burn(address indexed burner, uint256 value);\r\n\tbool public distributionFinished = false;\r\n\tmodifier canDistr() {\r\n\t\trequire(!distributionFinished);\r\n\t\t_;\r\n\t}\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\tconstructor()public {\r\n\t\towner = msg.sender;\r\n\t\tdistr(owner, totalDistributed);\r\n\t}\r\n\tfunction transferOwnership(address newOwner)onlyOwner public {\r\n\t\tif (newOwner != address(0)) {\r\n\t\t\towner = newOwner;\r\n\t\t}\r\n\t}\r\n\tfunction finishDistribution()onlyOwner canDistr public returns(bool) {\r\n\t\tdistributionFinished = true;\r\n\t\temit DistrFinished();\r\n\t\treturn true;\r\n\t}\r\n\tfunction distr(address _to, uint256 _amount)canDistr private returns(bool) {\r\n\t\ttotalDistributed = totalDistributed.add(_amount);\r\n\t\tbalances[_to] = balances[_to].add(_amount);\r\n\t\temit Distr(_to, _amount);\r\n\t\temit Transfer(address(0), _to, _amount);\r\n\t\treturn true;\r\n\t}\r\n\tfunction doAirdrop(address _participant, uint _amount)internal {\r\n\t\trequire(_amount > 0);\r\n\t\trequire(totalDistributed < totalSupply);\r\n\t\tbalances[_participant] = balances[_participant].add(_amount);\r\n\t\ttotalDistributed = totalDistributed.add(_amount);\r\n\t\tif (totalDistributed >= totalSupply) {\r\n\t\t\tdistributionFinished = true;\r\n\t\t}\r\n\t\temit Airdrop(_participant, _amount, balances[_participant]);\r\n\t\temit Transfer(address(0), _participant, _amount);\r\n\t}\r\n\tfunction adminClaimAirdrop(address _participant, uint _amount)public onlyOwner {\r\n\t\tdoAirdrop(_participant, _amount);\r\n\t}\r\n\tfunction adminClaimAirdropMultiple(address[]_addresses, uint _amount)public onlyOwner {\r\n\t\tfor (uint i = 0; i < _addresses.length; i++)\r\n\t\t\tdoAirdrop(_addresses[i], _amount);\r\n\t}\r\n\tfunction updateTokensPerEth(uint _tokensPerEth)public onlyOwner {\r\n\t\ttokensPerEth = _tokensPerEth;\r\n\t\temit TokensPerEthUpdated(_tokensPerEth);\r\n\t}\r\n\tfunction ()external payable {\r\n\t\tgetTokens();\r\n\t}\r\n\tfunction getTokens()payable canDistr public {\r\n\t\tuint256 token = 0;\r\n\t\tuint256 bonus = 0;\r\n\t\tuint256 tokens = 0;\r\n\t\trequire(msg.value >= MIN_CONTRIBUTION);\r\n\t\trequire(msg.value > 0);\r\n\t\ttoken = tokensPerEth.mul(msg.value) / 1 ether;\r\n\t\tif (msg.value >= 0.5 ether) {\r\n\t\t\tbonus = (token * 10) / 100;\r\n\t\t}\r\n\t\tif (msg.value >= 1 ether) {\r\n\t\t\tbonus = (token * 30) / 100;\r\n\t\t}\r\n\t\tif (msg.value >= 4 ether) {\r\n\t\t\tbonus = (token * 50) / 100;\r\n\t\t}\r\n\t\ttokens = token + bonus;\r\n\t\taddress investor = msg.sender;\r\n\t\tif (tokens > 0) {\r\n\t\t\tdistr(investor, tokens);\r\n\t\t}\r\n\t\tif (totalDistributed >= totalSupply) {\r\n\t\t\tdistributionFinished = true;\r\n\t\t}\r\n\t}\r\n\tfunction balanceOf(address _owner)constant public returns(uint256) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tassert(msg.data.length >= size + 4);\r\n\t\t_;\r\n\t}\r\n\tfunction transfer(address _to, uint256 _amount)onlyPayloadSize(2 * 32)public returns(bool success) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_amount <= balances[msg.sender]);\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_amount);\r\n\t\tbalances[_to] = balances[_to].add(_amount);\r\n\t\temit Transfer(msg.sender, _to, _amount);\r\n\t\treturn true;\r\n\t}\r\n\tfunction transferFrom(address _from, address _to, uint256 _amount)onlyPayloadSize(3 * 32)public returns(bool success) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_amount <= balances[_from]);\r\n\t\trequire(_amount <= allowed[_from][msg.sender]);\r\n\t\tbalances[_from] = balances[_from].sub(_amount);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n\t\tbalances[_to] = balances[_to].add(_amount);\r\n\t\temit Transfer(_from, _to, _amount);\r\n\t\treturn true;\r\n\t}\r\n\tfunction approve(address _spender, uint256 _value)public returns(bool success) {\r\n\t\tif (_value != 0 && allowed[msg.sender][_spender] != 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\tfunction allowance(address _owner, address _spender)constant public returns(uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\tfunction getTokenBalance(address tokenAddress, address who)constant public returns(uint) {\r\n\t\tForeignToken t = ForeignToken(tokenAddress);\r\n\t\tuint bal = t.balanceOf(who);\r\n\t\treturn bal;\r\n\t}\r\n\tfunction withdraw()onlyOwner public {\r\n\t\taddress myAddress = this;\r\n\t\tuint256 etherBalance = myAddress.balance;\r\n\t\towner.transfer(etherBalance);\r\n\t}\r\n\tfunction burn(uint256 _value)onlyOwner public {\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\t\taddress burner = msg.sender;\r\n\t\tbalances[burner] = balances[burner].sub(_value);\r\n\t\ttotalSupply = totalSupply.sub(_value);\r\n\t\ttotalDistributed = totalDistributed.sub(_value);\r\n\t\temit Burn(burner, _value);\r\n\t}\r\n\tfunction withdrawForeignTokens(address _tokenContract)onlyOwner public returns(bool) {\r\n\t\tForeignToken token = ForeignToken(_tokenContract);\r\n\t\tuint256 amount = token.balanceOf(address(this));\r\n\t\treturn token.transfer(owner, amount);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminClaimAirdropMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"updateTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistrFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"TokensPerEthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"GoldRealEstate","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c4867b6a57e6e66eb269e2e87dd0c13936509ea9e012027eb4d91bcb50a81e30"}]}