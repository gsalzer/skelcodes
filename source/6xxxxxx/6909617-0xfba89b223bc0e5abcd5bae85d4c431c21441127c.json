{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract Owned {\r\n    modifier onlyOwner() {\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    address payable owner;\r\n    address payable newOwner;\r\n    function changeOwner(address payable _newOwner) public onlyOwner {\r\n        newOwner=_newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        if (msg.sender==newOwner) {\r\n            owner=newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address _owner) view public returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract SmartWebLock is Owned{\r\n    string public domain;\r\n    uint8 public fee;\r\n    uint256 public unlock;\r\n    uint8 public bonus;\r\n    address public token;\r\n    uint8 public tokens;\r\n    address payable payee;\r\n    mapping (address=>uint) unlocks;\r\n    mapping (address=>address payable) refs;\r\n    mapping (address=>uint256) balances;\r\n    event Bonus(address indexed _user, uint256 _amount);\r\n        \r\n    constructor() public{\r\n        domain = 'videoblog.io';\r\n        fee = 2;\r\n        unlock = 100000000000000000;\r\n        bonus = 49;\r\n        token = 0xCD8aAC9972dc4Ddc48d700bc0710C0f5223fBCfa;\r\n        tokens = 100;\r\n        payee = 0x574c4DB1E399859753A09D65b6C5586429663701;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function changeTokens (uint8 _tokens) public returns (bool success){\r\n        require(_tokens>0 && msg.sender==payee);\r\n        tokens=_tokens;\r\n        return true;\r\n    }\r\n    \r\n    function changeBonus (uint8 _bonus) public returns (bool success){\r\n        require (_bonus>0 && _bonus<100-fee && msg.sender==payee);\r\n        bonus=_bonus;\r\n        return true;\r\n    }\r\n    \r\n    function changeUnlock(uint256 _unlock) public returns (bool success){\r\n        require(_unlock>0 && msg.sender==payee);\r\n        unlock = _unlock;\r\n        return true;\r\n    }\r\n    \r\n    function changeRef(address _user, address payable _ref) public returns (bool success){\r\n        require(_ref!=address(0x0) && refs[_user]!=_ref && msg.sender==payee);\r\n        refs[_user] = _ref;\r\n        return true;\r\n    }\r\n    \r\n    function changeFee (uint8 _fee) onlyOwner public returns (bool success){\r\n        require (_fee>0 && _fee<10);\r\n        fee=_fee;\r\n        return true;\r\n    }\r\n    \r\n    function setRef(address payable _ref) public returns (bool success){\r\n        require (_ref!=address(0x0) && refs[msg.sender]==address(0x0) && _ref!=msg.sender);\r\n        refs[msg.sender] = _ref;\r\n        return true;\r\n    }\r\n    \r\n    function getBalance(address _user) view public returns (uint256 balance){\r\n        return balances[_user];\r\n    }\r\n    \r\n    function getUnlock(address _user) view public returns (uint timestamp){\r\n        return unlocks[_user];\r\n    }\r\n    \r\n    function getRef(address _user) view public returns (address ref){\r\n        return refs[_user];\r\n    }\r\n    \r\n    function unLock(uint256 _amount) private{\r\n        balances[msg.sender]+=_amount;\r\n        if (balances[msg.sender]>=unlock) {\r\n            unlocks[msg.sender] = block.timestamp;\r\n            uint256 payout = 0;\r\n            if (refs[msg.sender]!=address(0x0) && bonus>0) {\r\n                payout = bonus*_amount/100;\r\n                refs[msg.sender].transfer(payout);\r\n                emit Bonus(refs[msg.sender],payout);\r\n            }\r\n            uint256 deduct = _amount*fee/100;\r\n            owner.transfer(deduct);\r\n            payee.transfer(_amount-payout-deduct);\r\n            if (ERC20(token).balanceOf(address(this))>=tokens) ERC20(token).transfer(msg.sender, tokens);\r\n        }\r\n    }\r\n    \r\n    function () payable external {\r\n        require(msg.value>0);\r\n        unLock(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_unlock\",\"type\":\"uint256\"}],\"name\":\"changeUnlock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"changeFee\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_ref\",\"type\":\"address\"}],\"name\":\"changeRef\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRef\",\"outputs\":[{\"name\":\"ref\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bonus\",\"type\":\"uint8\"}],\"name\":\"changeBonus\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ref\",\"type\":\"address\"}],\"name\":\"setRef\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"domain\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint8\"}],\"name\":\"changeTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUnlock\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Bonus\",\"type\":\"event\"}]","ContractName":"SmartWebLock","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a5ac611db7ded9a43cedf6758b39ba2bb1a8ad79b89bca41a78f32e73d4ed7ea"}]}