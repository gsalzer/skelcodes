{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ClaimSignatureVerifier {\r\n\r\n    uint256 public constant chainId = 1;\r\n    bytes32 public constant salt = 0x9567bfc1ad28e9dac18d12e131b4a45f5d9a3c6cbfe69ff8b34b0fb47703faa0;\r\n\r\n    string public constant EIP712_DOMAIN  = \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract,bytes32 salt)\";\r\n    string public constant CLAIM_TYPE = \"Claim(string claimant_id,string proof,uint256 timestamp,uint256 deadline,string skills,string kind,string voters,string claim_id,string version)\";\r\n\r\n    string public constant DAPP_NAME = \"Indorse\";\r\n    string public constant VERSION = \"1\";\r\n\r\n    bytes32 public constant EIP712_DOMAIN_TYPEHASH = keccak256(abi.encodePacked(EIP712_DOMAIN));\r\n    bytes32 public constant CLAIM_TYPEHASH = keccak256(abi.encodePacked(CLAIM_TYPE));\r\n\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n\r\n    constructor() public {\r\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\r\n            EIP712_DOMAIN_TYPEHASH,\r\n            keccak256(DAPP_NAME),\r\n            keccak256(VERSION),\r\n            chainId,\r\n            this,\r\n            salt\r\n        ));\r\n    }\r\n    \r\n    function verify(string claimant_id,string proof,uint256 timestamp,uint256 deadline,string skills,string kind,\r\n      string voters,string claim_id,string version,uint8 sigV, bytes32 sigR, bytes32 sigS) public view returns (address) {\r\n        bytes32 claimHash = keccak256(abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(\r\n                    CLAIM_TYPEHASH,\r\n                    keccak256(claimant_id),\r\n                    keccak256(proof),\r\n                    timestamp,\r\n                    deadline,\r\n                    keccak256(skills),\r\n                    keccak256(kind),\r\n                    keccak256(voters),\r\n                    keccak256(claim_id),\r\n                    keccak256(version)\r\n                ))\r\n            ));\r\n\r\n        return ecrecover(claimHash, sigV, sigR, sigS);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salt\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DAPP_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLAIM_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"claimant_id\",\"type\":\"string\"},{\"name\":\"proof\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"skills\",\"type\":\"string\"},{\"name\":\"kind\",\"type\":\"string\"},{\"name\":\"voters\",\"type\":\"string\"},{\"name\":\"claim_id\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"sigV\",\"type\":\"uint8\"},{\"name\":\"sigR\",\"type\":\"bytes32\"},{\"name\":\"sigS\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"ClaimSignatureVerifier","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0e257463cc69c109ec00e90ae2cef9f6a91d58341c007cddfcc517ee8a4c3bd2"}]}