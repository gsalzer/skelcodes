{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint a, uint b) internal pure returns (uint) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint a, uint b) internal pure returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal pure  returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  \r\n}\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint supply);\r\n    function balanceOf( address owner ) public view returns (uint value);\r\n    function allowance( address owner, address spender ) public view returns (uint _allowance);\r\n\r\n    function transfer( address to, uint value) public returns (bool success);\r\n    function transferFrom( address from, address to, uint value) public returns (bool success);\r\n    function approve( address spender, uint value ) public returns (bool success);\r\n\r\n    event Transfer( address indexed from, address indexed to, uint value);\r\n    event Approval( address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract EVAAuth is ERC20Interface {\r\n    address      public  owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setOwner(address _newOwner) public onlyOwner{\r\n        owner = _newOwner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n      require(msg.sender == owner);\r\n      _;\r\n    }\r\n}\r\n\r\ncontract EVAToken is EVAAuth {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    mapping(address => bool) optionPoolMembers; //\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 9;\r\n    uint256 public totalSupply;\r\n    uint256 public optionPoolMembersUnlockTime = 1596211200; \r\n    \r\n    constructor(uint256 _initialAmount, string _tokenName, string _tokenSymbol) public  {\r\n        balances[msg.sender] = _initialAmount;               \r\n        totalSupply = _initialAmount;                        \r\n        name = _tokenName;                                   \r\n        symbol = _tokenSymbol;    \r\n        optionPoolMembers[0xC5fdf4076b8F3A5357c5E395ab970B5B54098Fef] = true;\r\n        optionPoolMembers[0x821aEa9a577a9b44299B9c15c88cf3087F3b5544] = true;\r\n        optionPoolMembers[0x0d1d4e623D10F9FBA5Db95830F7d3839406C6AF2] = true;\r\n        optionPoolMembers[0x2932b7A2355D6fecc4b5c0B6BD44cC31df247a2e] = true;\r\n        optionPoolMembers[0x2191eF87E392377ec08E7c08Eb105Ef5448eCED5] = true;\r\n        optionPoolMembers[0x0F4F2Ac550A1b4e2280d04c21cEa7EBD822934b5] = true;\r\n        optionPoolMembers[0x6330A553Fc93768F612722BB8c2eC78aC90B3bbc] = true;\r\n        optionPoolMembers[0x5AEDA56215b167893e80B4fE645BA6d5Bab767DE] = true;\r\n    }\r\n\r\n    modifier verifyTheLock {\r\n        if(optionPoolMembers[msg.sender] == true) {\r\n            if(now < optionPoolMembersUnlockTime) {\r\n                revert();\r\n            } else {\r\n                _;\r\n            }\r\n        } else {\r\n            _;\r\n        }\r\n    }\r\n    \r\n    // Function to access name of token .\r\n    function name() public view returns (string _name) {\r\n        return name;\r\n    }\r\n    // Function to access symbol of token .\r\n    function symbol() public view returns (string _symbol) {\r\n        return symbol;\r\n    }\r\n    // Function to access decimals of token .\r\n    function decimals() public view returns (uint8 _decimals) {\r\n        return decimals;\r\n    }\r\n    // Function to access total supply of tokens .\r\n    function totalSupply() public view returns (uint _totalSupply) {\r\n        return totalSupply;\r\n    }\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    function balanceOf(address _owner) public view returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n    function verifyOptionPoolMembers(address _add) public view returns (bool _verifyResults) {\r\n        return optionPoolMembers[_add];\r\n    }\r\n    \r\n    function optionPoolMembersUnlockTime() public view returns (uint _optionPoolMembersUnlockTime) {\r\n        return optionPoolMembersUnlockTime;\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint _value) public verifyTheLock returns (bool success) {\r\n    \tassert(_value > 0);\r\n        assert(balances[msg.sender] >= _value);\r\n        assert(msg.sender != _to);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n    \tassert(balances[_from] >= _value);\r\n        assert(allowed[_from][msg.sender] >= _value);\r\n\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n        \r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public verifyTheLock returns (bool success) {\r\n        assert(_value > 0);\r\n        assert(msg.sender != _spender);\r\n        \r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"verifyOptionPoolMembers\",\"outputs\":[{\"name\":\"_verifyResults\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionPoolMembersUnlockTime\",\"outputs\":[{\"name\":\"_optionPoolMembersUnlockTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EVAToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000a688906bd8b00000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000003455641000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034556410000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://c43981d2cce8f56d58e5578fab0c9b0f15f6341a3cf5f6d3a7b007e4db3cf1e8"}]}