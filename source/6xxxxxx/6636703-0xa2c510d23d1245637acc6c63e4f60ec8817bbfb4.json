{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n  Info\r\n*/\r\n\r\ncontract Test {\r\n    address constant private PROMO1 = 0x51A2BF880F4db7713E95498833308ffE4D61d080;\r\n\taddress constant private PROMO2 = 0x1e8f7BD53c898625cDc2416ae5f1c446A16dd8D9;\r\n\taddress constant private TECH = 0x36413D58cA47520575889EE3E02E7Bb508b3D1E8;\r\n    uint constant public PROMO_PERCENT1 = 1;\r\n\tuint constant public PROMO_PERCENT2 = 1;\r\n\tuint constant public TECH_PERCENT = 1;\r\n    uint constant public MULTIPLIER = 110;\r\n    \r\n    struct Deposit {\r\n        address depositor; \r\n        uint128 deposit;  \r\n        uint128 expect;   \r\n    }\r\n\r\n    Deposit[] private queue;\r\n    uint public currentReceiverIndex = 0;\r\n\r\n    function () public payable {\r\n        if(msg.value > 0){\r\n            require(gasleft() >= 220000, \"We require more gas!\"); \r\n            require(msg.value >= 0.01 ether && msg.value <= 0.011 ether); \r\n            \r\n            queue.push(Deposit(msg.sender, uint128(msg.value), uint128(msg.value*MULTIPLIER/100)));\r\n            uint promo1 = msg.value*PROMO_PERCENT1/100;\r\n            PROMO1.send(promo1);\r\n\t\t\tuint promo2 = msg.value*PROMO_PERCENT2/100;\r\n            PROMO2.send(promo2);\r\n\t\t\tuint tech = msg.value*TECH_PERCENT/100;\r\n            TECH.send(tech);\r\n            pay();\r\n        }\r\n    }\r\n\r\n    function pay() private {\r\n        uint128 money = uint128(address(this).balance);\r\n        for(uint i=0; i<queue.length; i++){\r\n            uint idx = currentReceiverIndex + i;\r\n            Deposit storage dep = queue[idx]; \r\n            if(money >= dep.expect){  \r\n                dep.depositor.send(dep.expect); \r\n                money -= dep.expect;            \r\n                delete queue[idx];\r\n            }else{\r\n                dep.depositor.send(money); \r\n                dep.expect -= money;       \r\n                break;                    \r\n            }\r\n            if(gasleft() <= 50000)         \r\n                break;                     \r\n        }\r\n        currentReceiverIndex += i; \r\n    }\r\n\r\n    function getDeposit(uint idx) public view returns (address depositor, uint deposit, uint expect){\r\n        Deposit storage dep = queue[idx];\r\n        return (dep.depositor, dep.deposit, dep.expect);\r\n    }\r\n\r\n    function getDepositsCount(address depositor) public view returns (uint) {\r\n        uint c = 0;\r\n        for(uint i=currentReceiverIndex; i<queue.length; ++i){\r\n            if(queue[i].depositor == depositor)\r\n                c++;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    function getDeposits(address depositor) public view returns (uint[] idxs, uint128[] deposits, uint128[] expects) {\r\n        uint c = getDepositsCount(depositor);\r\n\r\n        idxs = new uint[](c);\r\n        deposits = new uint128[](c);\r\n        expects = new uint128[](c);\r\n\r\n        if(c > 0) {\r\n            uint j = 0;\r\n            for(uint i=currentReceiverIndex; i<queue.length; ++i){\r\n                Deposit storage dep = queue[i];\r\n                if(dep.depositor == depositor){\r\n                    idxs[j] = i;\r\n                    deposits[j] = dep.deposit;\r\n                    expects[j] = dep.expect;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getQueueLength() public view returns (uint) {\r\n        return queue.length - currentReceiverIndex;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentReceiverIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROMO_PERCENT2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"name\":\"idxs\",\"type\":\"uint256[]\"},{\"name\":\"deposits\",\"type\":\"uint128[]\"},{\"name\":\"expects\",\"type\":\"uint128[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"expect\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TECH_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQueueLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROMO_PERCENT1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDepositsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Test","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7ee968c9cf1803af55ff14d8c7fbfcf42b89c17603d9b3a05fe21486c1a7595e"}]}