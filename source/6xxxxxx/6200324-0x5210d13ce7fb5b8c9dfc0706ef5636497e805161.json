{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20 {\r\n  function totalSupply() public view returns (uint256);\r\n\r\n  function balanceOf(address _who) public view returns (uint256);\r\n\r\n  function allowance(address _owner, address _spender)\r\n    public view returns (uint256);\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n\r\n  function approve(address _spender, uint256 _value)\r\n    public returns (bool);\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)\r\n    public returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to,  uint256 value );\r\n\r\n  event Approval(  address indexed owner,  address indexed spender,  uint256 value );\r\n\r\n  }\r\n  \r\n  library SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n contract StandardToken is ERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  uint256 totalSupply_;\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply_;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function allowance(\r\n    address _owner,\r\n    address _spender\r\n   )\r\n    public\r\n    view\r\n    returns (uint256)\r\n  {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_value <= balances[msg.sender]);\r\n    require(_to != address(0));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _value\r\n  )\r\n    public\r\n    returns (bool)\r\n  {\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n    require(_to != address(0));\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n\r\n  function increaseApproval(\r\n    address _spender,\r\n    uint256 _addedValue\r\n  )\r\n    public\r\n    returns (bool)\r\n  {\r\n    allowed[msg.sender][_spender] = (\r\n      allowed[msg.sender][_spender].add(_addedValue));\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(\r\n    address _spender,\r\n    uint256 _subtractedValue\r\n  )\r\n    public\r\n    returns (bool)\r\n  {\r\n    uint256 oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue >= oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n}\r\n \r\n// ERC20 standard token\r\ncontract XYC is StandardToken {\r\n    address public admin; // ����Ա\r\n    string public name = \"XYCoin(逍遥生态币)\"; // ��������\r\n    string public symbol = \"XYC\"; // ���ҷ���\r\n    uint8 public decimals = 18; // ���Ҿ���\r\n    uint256 public totalSupply = 10000000000e18; // ����80�� *10^18\r\n    // ͬһ���˻��������ⶳ��������������\r\n    mapping (address => bool) public frozenAccount; //�����ڶ�����˻�\r\n    mapping (address => uint256) public frozenTimestamp; // �����ڶ�����˻�\r\n\r\n    bool public exchangeFlag = true; // ���Ҷһ�����\r\n    // ������������ļ����ɶ����eth�����ظ�ԭ�˻�\r\n    uint256 public minWei = 1;  //��ʹ� 1 wei  1eth = 1*10^18 wei\r\n    uint256 public maxWei = 20000e18; // ���һ�δ� 20000 eth\r\n    uint256 public maxRaiseAmount = 20000e18; // ļ������ 20000 eth\r\n    uint256 public raisedAmount = 0; // ��ļ�� 0 eth\r\n    uint256 public raiseRatio = 200000; // �һ����� 1eth = 20��token\r\n    // event ֪ͨ\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // ���캯��\r\n    constructor() public {\r\n        totalSupply_ = totalSupply;\r\n        admin = msg.sender;\r\n        balances[msg.sender] = totalSupply;\r\n    }\r\n\r\n    // fallback ���Լ��ַת�� or ���÷Ǻ�Լ��������\r\n    // �����Զ��һ�eth\r\n    function()\r\n    public payable {\r\n        require(msg.value > 0);\r\n        if (exchangeFlag) {\r\n            if (msg.value >= minWei && msg.value <= maxWei){\r\n                if (raisedAmount < maxRaiseAmount) {\r\n                    uint256 valueNeed = msg.value;\r\n                    raisedAmount = raisedAmount.add(msg.value);\r\n                    if (raisedAmount > maxRaiseAmount) {\r\n                        uint256 valueLeft = raisedAmount.sub(maxRaiseAmount);\r\n                        valueNeed = msg.value.sub(valueLeft);\r\n                        msg.sender.transfer(valueLeft);\r\n                        raisedAmount = maxRaiseAmount;\r\n                    }\r\n                    if (raisedAmount >= maxRaiseAmount) {\r\n                        exchangeFlag = false;\r\n                    }\r\n                    // �Ѵ��������� *10^18\r\n                    uint256 _value = valueNeed.mul(raiseRatio);\r\n\r\n                    require(_value <= balances[admin]);\r\n                    balances[admin] = balances[admin].sub(_value);\r\n                    balances[msg.sender] = balances[msg.sender].add(_value);\r\n\r\n                    emit Transfer(admin, msg.sender, _value);\r\n\r\n                }\r\n            } else {\r\n                msg.sender.transfer(msg.value);\r\n            }\r\n        } else {\r\n            msg.sender.transfer(msg.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * �޸Ĺ���Ա\r\n    */\r\n    function changeAdmin(\r\n        address _newAdmin\r\n    )\r\n    public\r\n    returns (bool)  {\r\n        require(msg.sender == admin);\r\n        require(_newAdmin != address(0));\r\n        balances[_newAdmin] = balances[_newAdmin].add(balances[admin]);\r\n        balances[admin] = 0;\r\n        admin = _newAdmin;\r\n        return true;\r\n    }\r\n    /**\r\n    * ����\r\n    */\r\n    function generateToken(\r\n        address _target,\r\n        uint256 _amount\r\n    )\r\n    public\r\n    returns (bool)  {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        balances[_target] = balances[_target].add(_amount);\r\n        totalSupply_ = totalSupply_.add(_amount);\r\n        totalSupply = totalSupply_;\r\n        return true;\r\n    }\r\n\r\n    // �Ӻ�Լ����\r\n    // ֻ���������Ա\r\n    function withdraw (\r\n        uint256 _amount\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        msg.sender.transfer(_amount);\r\n        return true;\r\n    }\r\n    /**\r\n    * �����˻�\r\n    */\r\n    function freeze(\r\n        address _target,\r\n        bool _freeze\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        frozenAccount[_target] = _freeze;\r\n        return true;\r\n    }\r\n    /**\r\n    * ͨ��ʱ��������˻�\r\n    */\r\n    function freezeWithTimestamp(\r\n        address _target,\r\n        uint256 _timestamp\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_target != address(0));\r\n        frozenTimestamp[_target] = _timestamp;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        * ���������˻�\r\n        */\r\n    function multiFreeze(\r\n        address[] _targets,\r\n        bool[] _freezes\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_targets.length == _freezes.length);\r\n        uint256 len = _targets.length;\r\n        require(len > 0);\r\n        for (uint256 i = 0; i < len; i = i.add(1)) {\r\n            address _target = _targets[i];\r\n            require(_target != address(0));\r\n            bool _freeze = _freezes[i];\r\n            frozenAccount[_target] = _freeze;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n            * ����ͨ��ʱ��������˻�\r\n            */\r\n    function multiFreezeWithTimestamp(\r\n        address[] _targets,\r\n        uint256[] _timestamps\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        require(_targets.length == _timestamps.length);\r\n        uint256 len = _targets.length;\r\n        require(len > 0);\r\n        for (uint256 i = 0; i < len; i = i.add(1)) {\r\n            address _target = _targets[i];\r\n            require(_target != address(0));\r\n            uint256 _timestamp = _timestamps[i];\r\n            frozenTimestamp[_target] = _timestamp;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n    * ����ת��\r\n    */\r\n    function multiTransfer(\r\n        address[] _tos,\r\n        uint256[] _values\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(!frozenAccount[msg.sender]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_tos.length == _values.length);\r\n        uint256 len = _tos.length;\r\n        require(len > 0);\r\n        uint256 amount = 0;\r\n        for (uint256 i = 0; i < len; i = i.add(1)) {\r\n            amount = amount.add(_values[i]);\r\n        }\r\n        require(amount <= balances[msg.sender]);\r\n        for (uint256 j = 0; j < len; j = j.add(1)) {\r\n            address _to = _tos[j];\r\n            require(_to != address(0));\r\n            balances[_to] = balances[_to].add(_values[j]);\r\n            balances[msg.sender] = balances[msg.sender].sub(_values[j]);\r\n            emit Transfer(msg.sender, _to, _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n    * �ӵ�����ת����_to\r\n    */\r\n    function transfer(\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(!frozenAccount[msg.sender]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    /*\r\n    * �ӵ�������Ϊfrom������from�˻��е�tokenת����to\r\n    * ��������from�����ɶ���б���>=value\r\n    */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        require(!frozenAccount[_from]);\r\n        require(now > frozenTimestamp[msg.sender]);\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    /**\r\n    * ����ת�˴�����spender�Ĵ��������ɶ��\r\n    */\r\n    function approve(\r\n        address _spender,\r\n        uint256 _value\r\n    ) public\r\n    returns (bool) {\r\n        // ת�˵�ʱ���У��balances���ô�require������\r\n        // require(_value <= balances[msg.sender]);\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    /**\r\n    * ����ת�˴�����spender�Ĵ��������ɶ��\r\n    * ���岻���function\r\n    */\r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        // uint256 value_ = allowed[msg.sender][_spender].add(_addedValue);\r\n        // require(value_ <= balances[msg.sender]);\r\n        // allowed[msg.sender][_spender] = value_;\r\n\r\n        // emit Approval(msg.sender, _spender, value_);\r\n        return true;\r\n    }\r\n    /**\r\n    * ����ת�˴�����spender�Ĵ��������ɶ��\r\n    * ���岻���function\r\n    */\r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _subtractedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        // uint256 oldValue = allowed[msg.sender][_spender];\r\n        // if (_subtractedValue > oldValue) {\r\n        //    allowed[msg.sender][_spender] = 0;\r\n        // } else {\r\n        //    uint256 newValue = oldValue.sub(_subtractedValue);\r\n        //    require(newValue <= balances[msg.sender]);\r\n        //   allowed[msg.sender][_spender] = newValue;\r\n        //}\r\n\r\n        // emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    //********************************************************************************\r\n    //��ѯ�˻��Ƿ��������ʱ���\r\n    function getFrozenTimestamp(\r\n        address _target\r\n    )\r\n    public view\r\n    returns (uint256) {\r\n        require(_target != address(0));\r\n        return frozenTimestamp[_target];\r\n    }\r\n    //��ѯ�˻��Ƿ�����\r\n    function getFrozenAccount(\r\n        address _target\r\n    )\r\n    public view\r\n    returns (bool) {\r\n        require(_target != address(0));\r\n        return frozenAccount[_target];\r\n    }\r\n    //��ѯ��Լ�����\r\n    function getBalance()\r\n    public view\r\n    returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\t\r\n    // �޸�ļ��flag\r\n    function setExchangeFlag (\r\n        bool _flag\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        exchangeFlag = _flag;\r\n        return true;\r\n\r\n    }\r\n    // �޸ĵ���ļ������\r\n    function setMinWei (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        minWei = _value;\r\n        return true;\r\n\r\n    }\r\n    // �޸ĵ���ļ������\r\n    function setMaxWei (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        maxWei = _value;\r\n        return true;\r\n    }\r\n    // �޸���ļ������\r\n    function setMaxRaiseAmount (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        maxRaiseAmount = _value;\r\n        return true;\r\n    }\r\n\r\n    // �޸���ļ����\r\n    function setRaisedAmount (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        raisedAmount = _value;\r\n        return true;\r\n    }\r\n\r\n    // �޸�ļ������\r\n    function setRaiseRatio (\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool) {\r\n        require(msg.sender == admin);\r\n        raiseRatio = _value;\r\n        return true;\r\n    }\r\n\r\n    // ���ٺ�Լ\r\n    function kill()\r\n    public {\r\n        require(msg.sender == admin);\r\n        selfdestruct(admin);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"maxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setExchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_freezes\",\"type\":\"bool[]\"}],\"name\":\"multiFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"freezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_timestamps\",\"type\":\"uint256[]\"}],\"name\":\"multiFreezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"XYC","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f67524c08475d3877944ff214a019fa6f35990cac43c34583252f8aaf92bdada"}]}