{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// constantionple check contract. call IsItConstantinople()\r\n// emits an event if it is called!\r\n// etherguy@mail.com\r\n\r\ncontract ConstantinopleCheck2 {\r\n    event Constantinople(bool);\r\n    \r\n    // call this function to check if we are on constantinple\r\n    function IsItConstantinople() public view returns (bool){\r\n        (bool success) = address(this).call(abi.encodeWithSignature(\"ConstantinopleCheckFunction()\"));\r\n        emit Constantinople(success);\r\n        return success;\r\n    }\r\n    \r\n    // reverts if not constantinople \r\n    // call IsItConstantinople() not this one (is available to be called though)\r\n    // using shl for low gas use. \"now\" has to be called to make sure this function doesnt return a constant \r\n    function ConstantinopleCheckFunction() public view returns (bytes32){\r\n        bytes32 test = bytes32(now);\r\n        assembly {\r\n            test := shl(test, 1)\r\n        }\r\n        return test; // explicitly return test so we are sure that the optimizer doesnt optimize this out\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ConstantinopleCheckFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsItConstantinople\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"bool\"}],\"name\":\"Constantinople\",\"type\":\"event\"}]","ContractName":"ConstantinopleCheck2","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://69c72d05c3b31b65dc0b5de1dc97b02549a66fe816407fc4e98bcee6792074c4"}]}