{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.0;\r\n\r\n// Letétszerződés. A letétbe helyezett ETH összeget csak a kedvezményezettnek lehet kifizetni.\r\ncontract Escrow {\r\n\r\n    // Tulajdonos\r\n    address owner;\r\n    // Kedvezményezett\r\n    address payable constant beneficiary = 0x168cF76582Cd7017058771Df6F623882E04FCf0F;\r\n\r\n    // Szerződés létrehozása\r\n    constructor() public {\r\n        owner = msg.sender; // Tulajdonos beállítása\r\n    }\r\n    \r\n    // Bizonyos dolgokat csak a tulajdonos kezdeményezhet.\r\n    modifier ownerOnly {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    // Csak a tulajdonos utalhat ki étert a szerződésből\r\n    function transfer(uint256 amount) ownerOnly public {\r\n        beneficiary.transfer(amount); // Csak a kezdvezményezettnek\r\n    }\r\n    \r\n    // Csak a tulajdonos semmisítheti meg a szerződést\r\n    function terminate() ownerOnly public {\r\n        selfdestruct(beneficiary); // Minden befizetést megkap a kedvezményezett\r\n    }\r\n    \r\n    // Bárki bármennyit befizethet a szerződésbe.\r\n    function () payable external {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Escrow","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ea8f553b4bb473240cbaf8dd45c3bfe3f4ab798170ba908289a961ffe0c66063"}]}