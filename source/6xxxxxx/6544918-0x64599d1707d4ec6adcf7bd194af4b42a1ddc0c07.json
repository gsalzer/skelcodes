{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/*\r\nMOSBIN is a Modern Marketplace Based on Blockchain - You can Sell and Buy goods with Fiat Money and Cryptocurrency\r\n\r\nMOSBIN Token details :\r\n\r\nName            : MOSBIN \r\nSymbol          : MOS \r\nTotal Supply    : 2.000.000.000 MOS\r\nDecimals        : 18 \r\nTelegram Group  : https://t.me/mosbin\r\n\r\nTokensale Details    :\r\n\r\nTotal for Tokensale         : 1.200.000.000 MOS \r\n\r\nTokensale (+airdrop) Tier 1 : 200.000.000 MOS\r\n*Price   : 600.000 MOS/ETH \r\nNo minimum Contribution but if contribute 0.1 ETH or more will get 50% Bonus\r\n\r\nTokensale (+airdrop) Tier 2 : 400.000.000 MOS\r\n*Price   : 600.000 MOS/ETH \r\nNo minimum Contribution but if contribute 0.1 ETH or more will get 25% Bonus\r\n\r\nTokensale (+airdrop) Tier 3 : 600.000.000 MOS\r\n*Price   : 600.000 MOS/ETH \r\nNo minimum Contribution but if contribute 0.1 ETH or more will get 10% Bonus\r\n\r\n\r\nFuture Development   :   500.000.000 MOS \r\nTeam and Foundation  :   300.000.000 MOS // Lock for 1 years\r\n\r\nSoftcap              :           400 ETH\r\nHardcap              :         1.400 ETH\r\n\r\n*No Minimum contribution on MOS Tokensale\r\nSend ETH To Contract Address you will get MOSBIN Token directly set gas limit 150.000\r\n\r\n*Airdrop - If you don't have enough ETH , you can send 0 ETH to Contract Address and you will get \"70 MOS\" / Transaction \r\nA Wallett Address can make more than once transaction on tokensale and airdrop \r\n\r\nSet GAS Limits 150.000 and GAS Price always check on ethgasstation.info (use Standard Gas Price or Fast Gas Price)\r\nEach contribution on Tokensale will get 70 MOS Extra  \r\nUnsold token will Burned \r\n\r\nAdd Custom Token on Myetherwallet and Metamask\r\n\r\nContract : 0x64599d1707d4ec6adcf7bd194af4b42a1ddc0c07\r\nSymbol   : MOS \r\nDecimals : 18 \r\n\r\n*/\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\ncontract MOS {\r\n    // Public variables of the token\r\n    string public name = \"MOSBIN\";\r\n    string public symbol = \"MOS\";\r\n    uint8 public decimals = 18;\r\n    // Decimals = 18\r\n    uint256 public totalSupply;\r\n    uint256 public btnSupply = 2000000000;\r\n    uint256 public buyPrice = 600000;\r\n    address public creator;\r\n    // This creates an array with all balances\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    // This generates a public event on the blockchain\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    \r\n    \r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     */\r\n    function MOS() public {\r\n        totalSupply = btnSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\r\n        balanceOf[msg.sender] = totalSupply;    // Give MOS Token the total created tokens\r\n        creator = msg.sender;\r\n    }\r\n    /**\r\n     * Internal transfer, only can be called by this contract\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0); //Burn\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n      \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    \r\n    \r\n    /// @notice Buy tokens from contract by sending ethereum to contract address with no minimum contribution\r\n    function () payable internal {\r\n        uint amount = msg.value * buyPrice +70e18 ;                    // calculates the amount\r\n        uint amountRaised;                                     \r\n        amountRaised += msg.value;                            \r\n        require(balanceOf[creator] >= amount);               \r\n        require(msg.value >=0);                        \r\n        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\r\n        balanceOf[creator] -= amount;                        \r\n        Transfer(creator, msg.sender, amount);               \r\n        creator.transfer(amountRaised);\r\n    }    \r\n    \r\n }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btnSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"MOS","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a82a5f9258482212e5374055f5af37b6312eba747c954e7d188797d0698ca186"}]}