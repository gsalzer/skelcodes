{"status":"1","message":"OK","result":[{"SourceCode":"//写这个合约的目的，就是为了方便大家快速的进行ETH和IFS之间的兑换\r\n//合约的基本原理和注释，本合约都会写的非常详细，以方便大家进行监督和信任\r\n//整个合约的逻辑非常简单：\r\n//1.用户给本合约打ETH，最小单位为0.01ETH，每0.01ETH，合约会给用户打币过来的地址发送200的IFS Token回去\r\n//2.小于0.01ETH的部分，合约会给找回。IFS的数量是另外一个账户授权给当前合约的，如果授权数量不足，则合约会失败，用户打过来的ETH也会直接被返回，交易失败\r\n\r\n//IFS使用场景：\r\n//官网：https://www.fanstime.org/\r\n//APP  Fanstime\r\n//Fanstime是一家在线明星交易的交易所，可以购买各个明星的时间，等待价格上涨或者是进行行权\r\n//IFS是Fanstime中的通用货币，与人民币有10:1(即每个IFS价格为1毛钱)的固定兑换率。官方有庞大的资金池保证汇率的稳定\r\n\r\n\r\n//                   _ooOoo_\r\n//                  o8888888o\r\n//                  88\" . \"88\r\n//                  (| -_- |)\r\n//                  O\\  =  /O\r\n//               ____/`---'\\____\r\n//             .'  \\\\|     |//  `.\r\n//            /  \\\\|||  :  |||//  \\\r\n//           /  _||||| -:- |||||-  \\\r\n//           |   | \\\\\\  -  /// |   |\r\n//           | \\_|  ''\\---/''  |   |\r\n//           \\  .-\\__  `-`  ___/-. /\r\n//         ___`. .'  /--.--\\  `. . __\r\n//      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\r\n//     | | :  ` - `.;`\\ _ /`;.`/ - ` : | |\r\n//     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\r\n//======`-.____`-.___\\_____/___.-`____.-'======\r\n//                   `=---='\r\n//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n//        [佛祖保佑]兑换IFS入场的都赚大钱\r\n\r\n\r\n\r\n//按照当前ETH价格1400左右计算，本合约IFS价格为七折优惠哦~\r\n\r\n\r\n//********************************************************************************\r\n//*\r\n//*\r\n//*\r\n//*             如果你不相信本合约，完全可以先用0.01ETH（才十来块钱）\r\n//*\r\n//*                             兑换一次\r\n//*\r\n//*                     去App里面使用一下，你就明白了\r\n//*\r\n//*\r\n//*\r\n//********************************************************************************\r\n\r\n\r\n\r\n\r\n\r\n//注意事项：\r\n//1.不要从交易所直接对本合约提币！！！不要从交易所直接对本合约提币！！！不要从交易所直接对本合约提币！！！\r\npragma solidity ^0.4.25;\r\ncontract Token {\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n    function transfer(address _to, uint256 _value) returns (bool success) {}\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n    function approve(address _spender, uint256 _value) returns (bool success) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract TokenExchange{\r\n\r\n    uint256 public minETHExchange = 10000000000000000;//最小兑换单位（0.01ETH）\r\n    uint256 public TokenCountPer = 200000000000000000000;//每0.01ETH可兑换200IFS\r\n    address public tokenAddress = address(0x5d47D55b33e067F8BfA9f1955c776B5AddD8fF17);//IFS的Token地址\r\n    address public fromAddress = address(0xfA25eC30ba33742D8d5E9657F7d04AeF8AF91F40);//持有IFS的地址，用于出币到用户手中\r\n    address public owner = address(0x8cddc253CA7f0bf51BeF998851b3F8E41053B784);//最终收获ETH的地址\r\n    Token _token = Token(tokenAddress);//实例化IFS的合约\r\n\r\n    function() public payable {\r\n        require(msg.value >= minETHExchange);//检查支付的ETH数量不能小于0.01ETH\r\n        uint256 count = 0;\r\n        count = msg.value / minETHExchange;//计算可以购买多少份\r\n\r\n        uint256 remianETH = msg.value - (count * minETHExchange);//计算找零\r\n        uint256 tokenCount = count * TokenCountPer;//计算可兑换IFS数量\r\n\r\n        if(remianETH > 0){//如果找零数量大于0的话，则进行找零\r\n            tx.origin.transfer(remianETH);\r\n        }\r\n        require(_token.transferFrom(fromAddress,tx.origin,tokenCount));//使用IFS的合约给交易发起者发放IFS\r\n        owner.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"minETHExchange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TokenCountPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fromAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TokenExchange","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c2e442eb0d30db237e8b64cde4ba1d51d424f9e8f8199cee85025a02315d8a83"}]}