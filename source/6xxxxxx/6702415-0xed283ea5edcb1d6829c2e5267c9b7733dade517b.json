{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Owned\r\n * @dev Contract that sets an owner, who can execute predefined functions, only accessible by him\r\n */\r\ncontract Owned {\r\n\taddress public owner;\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != 0x0);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Mathematical functions to check for overflows\r\n */\r\ncontract SafeMath {\r\n\tfunction safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a && c >= b);\r\n\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract CURESSale is Owned, SafeMath {\r\n\tuint256 public maxGoal = 175000 * 1 ether;\t\t\t// Hard Cap in Ethereum\r\n\tuint256 public minTransfer = 5 * 1 ether;\t\t\t// Minimum amount in EHT that can be send\r\n\tuint256 public amountRaised = 0;\t\t\t\t\t// The raised amount in ETH Wei\r\n\tmapping(address => uint256) public payments;\t\t// How much ETH the user sent\r\n\tbool public isFinalized = false;\t\t\t\t\t// Indicates if the Private Sale is finalized\r\n\r\n\t// Public event on the blockchain, to notify users when a Payment is made\r\n\tevent PaymentMade(address indexed _from, uint256 _ammount);\r\n\r\n\t/**\r\n\t * @dev The default function called when anyone sends funds (ETH) to the contract\r\n\t */\r\n\tfunction() payable public {\r\n\t\tbuyTokens();\r\n\t}\r\n\r\n\tfunction buyTokens() payable public returns (bool success) {\r\n\t\t// Check if finalized\r\n\t\trequire(!isFinalized);\r\n\r\n\t\tuint256 amount = msg.value;\r\n\r\n\t\t// Check if the goal is reached\r\n\t\tuint256 collectedEth = safeAdd(amountRaised, amount);\r\n\t\trequire(collectedEth <= maxGoal);\r\n\r\n\t\trequire(amount >= minTransfer);\r\n\r\n\t\tpayments[msg.sender] = safeAdd(payments[msg.sender], amount);\r\n\t\tamountRaised = safeAdd(amountRaised, amount);\r\n\r\n\t\towner.transfer(amount);\r\n\r\n\t\temit PaymentMade(msg.sender, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// In case of any ETH left at the contract\r\n\t// Can be used only after the Sale is finalized\r\n\tfunction withdraw(uint256 _value) public onlyOwner {\r\n\t\trequire(isFinalized);\r\n\t\trequire(_value > 0);\r\n\r\n\t\tmsg.sender.transfer(_value);\r\n\t}\r\n\r\n\tfunction changeMinTransfer(uint256 min) external onlyOwner {\r\n\t\trequire(!isFinalized);\r\n\r\n\t\trequire(min > 0);\r\n\r\n\t\tminTransfer = min;\r\n\t}\r\n\r\n\t// CURES finalizes the Sale\r\n\tfunction finalize() external onlyOwner {\r\n\t\trequire(!isFinalized);\r\n\r\n\t\t// Finalize the Sale\r\n\t\tisFinalized = true;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint256\"}],\"name\":\"changeMinTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ammount\",\"type\":\"uint256\"}],\"name\":\"PaymentMade\",\"type\":\"event\"}]","ContractName":"CURESSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://de7bbe917415b769e5fa5d6fdf5869b0edc75eacac8486e0dc3e382f911d047d"}]}