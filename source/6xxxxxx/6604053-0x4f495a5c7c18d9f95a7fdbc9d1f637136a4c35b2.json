{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20Interface \r\n{\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address froms, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    mapping(address => mapping(address => uint)) allowed;\r\n}\r\n\r\ncontract classSend {\r\n    \r\n    address public owner=msg.sender;\r\n    uint amount;\r\n    address sbttokenaddress = 0x503f9794d6a6bb0df8fbb19a2b3e2aeab35339ad;//sbttoken\r\n    address lctokenaddress = 0x32d5a1b48168fdfff42d854d5eb256f914ae5b2d;//lctoken\r\n    address ttttokenaddress = 0x4e1bb58a40f34d8843f61030fe4257c11d09a2c5;//ttttoken\r\n    \r\n    event TransferToken(address);\r\n    \r\n    modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n    \r\n    function () external payable {}\r\n    \r\n    function sendairdrop(address[] student) onlyOwner public {\r\n        uint256 i = 0;\r\n        while (i < student.length) {\r\n        sendInternally(student[i]);\r\n        i++;\r\n         }\r\n    }\r\n    \r\n    function sendInternally(address student) onlyOwner internal {\r\n      ERC20Interface(sbttokenaddress).transfer(student, 100*1e18);//token1\r\n      ERC20Interface(lctokenaddress).transfer(student, 80*1e18);//token2\r\n      ERC20Interface(ttttokenaddress).transfer(student, 200*1e18);//token3\r\n      emit TransferToken(student);\r\n    }\r\n    \r\n    function changeowner(address newowner) onlyOwner public{\r\n        owner=newowner;\r\n    }\r\n    \r\n    function transferanyERC20token(address _tokenAddress,uint tokens)public onlyOwner{\r\n    require(msg.sender==owner);\r\n    ERC20Interface(_tokenAddress).transfer(owner, tokens*1e18);\r\n}\r\n \r\n    function destroy() onlyOwner {\r\n    selfdestruct(owner);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"student\",\"type\":\"address[]\"}],\"name\":\"sendairdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"changeowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferanyERC20token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"TransferToken\",\"type\":\"event\"}]","ContractName":"classSend","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://59d170d81b0fbf58c1fca6130198fc603e97c4480f22d47713320755d96875fa"}]}