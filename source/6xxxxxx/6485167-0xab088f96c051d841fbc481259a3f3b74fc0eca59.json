{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;  \r\n/*\r\n* Web              - http://HOURS25.PRO\r\n*\r\n* Telegram         - https://t.me/hours25pro\r\n*\r\n* Email:             mailto:support(at sign)HOURS25.PRO\r\n* \r\n* Marketing        - https://a-ads.com/campaigns/75140\r\n*  - PROFIT 103,5% PER 25 HOURS \r\n*  - QUICK PAYMENTS\r\n*  - Minimal contribution 0.02 eth\r\n*  - Currency and payment - ETH\r\n*  - Contribution allocation schemes:\r\n*    -- 98% payments\r\n*    -- 1% Marketing \r\n*    -- 1% PROJECT COMMISSION  (address)\r\n*\r\n*   ---About the Project--\r\n*    Blockchain-enabled smart contracts have opened a new era of trustless relationships without \r\n*    intermediaries. This technology opens incredible financial possibilities. Our automated investment \r\n*    distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be \r\n*    freely accessed online. In order to insure our investors' complete security, full control over the \r\n*    project has been transferred from the organizers to the smart contract: nobody can influence the \r\n*    system's permanent autonomous functioning.\r\n* \r\n* ---How to use:--\r\n*  1. Send from ETH wallet to the smart contract address 0x123456789......\r\n*      any amount from 0.02 ETH.\r\n*  2. Verify your transaction in the history of your application or etherscan.io, specifying the address \r\n*      of your wallet.\r\n*  3. Claim your profit by sending 0.001 ether transaction.\r\n*      We recommend output immediately after 6 hours.\r\n*      Do not wait 25 hours!  \r\n*   RECOMMENDED GAS LIMIT: 200000\r\n*   RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n*     You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n*\r\n* ---It is not allowed to transfer from exchanges, only from your personal ETH wallet, for which you \r\n*     have private keys.\r\n* \r\n*    Contracts reviewed and approved by pros!\r\n* \r\n*    Scroll down to find it.\r\n*/\r\n\r\ncontract Hours25 {\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => uint256) public time_stamp;\r\n    mapping (address => uint256) public receive_funds;\r\n    uint256 internal total_funds;\r\n    \r\n    address commission;\r\n    address advertising;\r\n\r\n    constructor() public {\r\n        commission = msg.sender;\r\n        advertising = 0xD93dFA3966dDac00C78D24286199CE318E1Aaac6;\r\n    }\r\n\r\n    function showTotal() public view returns (uint256) {\r\n        return total_funds;\r\n    }\r\n\r\n    function showProfit(address _investor) public view returns (uint256) {\r\n        return receive_funds[_investor];\r\n    }\r\n\r\n    function showBalance(address _investor) public view returns (uint256) {\r\n        return balances[_investor];\r\n    }\r\n\r\n    function isLastWithdraw(address _investor) public view returns(bool) {\r\n        address investor = _investor;\r\n        uint256 profit = calcProfit(investor);\r\n        bool result = !((balances[investor] == 0) || ((balances[investor]  * 1035) / 1000  > receive_funds[investor] + profit)); \r\n        return result;\r\n    }\r\n\r\n    function calcProfit(address _investor) internal view returns (uint256) {\r\n        uint256 profit = balances[_investor]*69/100000*(now-time_stamp[_investor])/60;\r\n        return profit;\r\n    }\r\n\r\n\r\n    function () external payable {\r\n        require(msg.value > 0,\"Zero. Access denied.\");\r\n        total_funds +=msg.value;\r\n        address investor = msg.sender;\r\n        commission.transfer(msg.value * 1 / 100);\r\n        advertising.transfer(msg.value * 1 / 100);\r\n\r\n        uint256 profit = calcProfit(investor);\r\n        investor.transfer(profit);\r\n\r\n        if (isLastWithdraw(investor)){\r\n          \r\n            balances[investor] = 0;\r\n            receive_funds[investor] = 0;\r\n           \r\n        }\r\n        else {\r\n        receive_funds[investor] += profit;\r\n        balances[investor] += msg.value;\r\n            \r\n        }\r\n        time_stamp[investor] = now;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"showTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"showProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"time_stamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"isLastWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"showBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"receive_funds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Hours25","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a3d8efe1fc96e6d9e5177430d5395c63c4109dcc015c6da5c51121d9cf19f636"}]}