{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/RocketBalancerRETHRateProvider.sol\": {\r\n      \"content\": \"/**\\r\\n  *       .\\r\\n  *      / \\\\\\r\\n  *     |.'.|\\r\\n  *     |'.'|\\r\\n  *   ,'|   |`.\\r\\n  *  |,-'-|-'-.|\\r\\n  *   __|_| |         _        _      _____           _\\r\\n  *  | ___ \\\\|        | |      | |    | ___ \\\\         | |\\r\\n  *  | |_/ /|__   ___| | _____| |_   | |_/ /__   ___ | |\\r\\n  *  |    // _ \\\\ / __| |/ / _ \\\\ __|  |  __/ _ \\\\ / _ \\\\| |\\r\\n  *  | |\\\\ \\\\ (_) | (__|   <  __/ |_   | | | (_) | (_) | |\\r\\n  *  \\\\_| \\\\_\\\\___/ \\\\___|_|\\\\_\\\\___|\\\\__|  \\\\_|  \\\\___/ \\\\___/|_|\\r\\n  * +---------------------------------------------------+\\r\\n  * |    DECENTRALISED STAKING PROTOCOL FOR ETHEREUM    |\\r\\n  * +---------------------------------------------------+\\r\\n  *\\r\\n  *  Rocket Pool is a first-of-its-kind Ethereum staking pool protocol, designed to\\r\\n  *  be community-owned, decentralised, and trustless.\\r\\n  *\\r\\n  *  For more information about Rocket Pool, visit https://rocketpool.net\\r\\n  *\\r\\n  *  Authors: David Rugendyke, Jake Pospischil, Kane Wallmann, Darren Langley, Joe Clapis, Nick Doherty\\r\\n  *\\r\\n  */\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-only\\r\\n\\r\\ninterface IRateProvider {\\r\\n    function getRate() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface RocketTokenRETHInterface {\\r\\n    function getEthValue(uint256 _rethAmount) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract RocketBalancerRETHRateProvider is IRateProvider {\\r\\n    RocketTokenRETHInterface public immutable rocketTokenRETH;\\r\\n\\r\\n    constructor (RocketTokenRETHInterface _rocketTokenRETH) {\\r\\n        rocketTokenRETH = _rocketTokenRETH;\\r\\n    }\\r\\n\\r\\n    // Returns the ETH value of 1 rETH\\r\\n    function getRate() external override view returns (uint256) {\\r\\n        return rocketTokenRETH.getEthValue(1 ether);\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract RocketTokenRETHInterface\",\"name\":\"_rocketTokenRETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rocketTokenRETH\",\"outputs\":[{\"internalType\":\"contract RocketTokenRETHInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"RocketBalancerRETHRateProvider","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"000000000000000000000000ae78736cd615f374d3085123a210448e74fc6393","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}