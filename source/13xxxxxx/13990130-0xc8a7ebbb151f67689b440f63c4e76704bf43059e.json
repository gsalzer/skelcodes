{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with hardhat v2.6.8 https://hardhat.org\r\n\r\n// File contracts/interfaces/IStakingPoolRewarder.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\ninterface IStakingPoolRewarder {\r\n    function onReward(\r\n        uint256 poolId,\r\n        address user,\r\n        uint256 amount\r\n    ) external;\r\n}\r\n\r\n\r\n// File contracts/DirectPayoutRewarder.sol\r\n\r\n\r\npragma solidity ^0.7.6;\r\n\r\ncontract DirectPayoutRewarder is IStakingPoolRewarder {\r\n\r\n    address public stakingPool;\r\n    address public rewardToken;\r\n    address public rewardDispatcher;\r\n\r\n    modifier onlyStakingPool() {\r\n        require(stakingPool == msg.sender, \"StakingPoolRewarder: only stakingPool can call\");\r\n        _;\r\n    }\r\n    event OnRewardRedeemded(uint256 indexed poolId, address user, uint256 amount);\r\n\r\n    constructor(\r\n        address _stakingPool,\r\n        address _rewardToken,\r\n        address _rewardDispatcher\r\n    ) public {\r\n        stakingPool = _stakingPool;\r\n        rewardToken = _rewardToken;\r\n        rewardDispatcher = _rewardDispatcher;\r\n    }\r\n\r\n    function onReward(\r\n        uint256 poolId,\r\n        address user,\r\n        uint256 amount\r\n    ) external override onlyStakingPool() {\r\n        require(amount > 0, \"StakingPoolRewarder: zero amount to reward\");\r\n        safeTransferFrom(rewardToken, rewardDispatcher, user, amount);\r\n        emit OnRewardRedeemded(poolId, user, amount);\r\n    }\r\n\r\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardDispatcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OnRewardRedeemded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DirectPayoutRewarder","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"0000000000000000000000005995383373decbd673c2d3ab92e6118508f9b83e000000000000000000000000d049206fb408a611e543791f2d8f102a8bc253dc000000000000000000000000c041a45837259272b14259432af9912255f01fe3","EVMVersion":"istanbul","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://69957e4bb1f6cef19f8ee4c989525e8eaff0aed35f2f1cd4ff3b78cd8b85f144"}]}