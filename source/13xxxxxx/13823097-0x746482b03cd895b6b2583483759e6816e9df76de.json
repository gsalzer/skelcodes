{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/centers/Gym1.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Center.sol\\\";\\n\\ncontract AtopiaGym1 is AtopiaCenter {\\n\\tfunction initialize(address space) public virtual override {\\n\\t\\tAtopiaCenter.init(space, \\\"Gym Heros\\\", \\\"Atopia Center - Gym\\\");\\n\\t\\temission = 200;\\n\\t\\tminAge = (5 * 365 days) / 10;\\n\\t\\tenjoyFee = 1000;\\n\\t\\timage = '<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 1000 1000\\\" style=\\\"enable-background:new 0 0 1000 1000;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\">.s{stroke:#000000;stroke-width:10;stroke-miterlimit:10;}.d{stroke-linecap:round;stroke-linejoin:round}.e{fill:none}.c1{stop-color:#B2E6FF}.c2{stop-color:#9B9BEB}.c3{fill:#EBD15B}.c4{fill:#90503D}.c5{fill:#FFC08D}.c6{fill:#4BBD80}.c7{fill:url(#lg1)}.c8{fill:url(#lg2)}</style><linearGradient id=\\\"lg1\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"584.7225\\\" y1=\\\"210.7773\\\" x2=\\\"496.5416\\\" y2=\\\"200.981\\\"><stop offset=\\\"0\\\" class=\\\"c1\\\"/><stop offset=\\\"1\\\" class=\\\"c2\\\"/></linearGradient><polygon class=\\\"s d c7\\\" points=\\\"500.57,232.57 497.86,189.14 523.64,172.85 580.64,189.14 583.36,223.07\\\"/><line x1=\\\"523.64\\\" y1=\\\"172.85\\\" x2=\\\"526.36\\\" y2=\\\"228.5\\\" class=\\\"s\\\"/><polygon class=\\\"s d c3\\\" points=\\\"480.21,685.85 777.43,685.85 829,243.42 645.79,190.5 421.86,242.07\\\"/><line class=\\\"s d\\\" x1=\\\"644.58\\\" y1=\\\"684.49\\\" x2=\\\"645.79\\\" y2=\\\"190.5\\\"/><linearGradient id=\\\"lg2\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"661.9341\\\" y1=\\\"516.061\\\" x2=\\\"140.1486\\\" y2=\\\"458.0943\\\"><stop offset=\\\"0\\\" class=\\\"c1\\\"/><stop offset=\\\"1\\\" class=\\\"c2\\\"/></linearGradient><path class=\\\"c8\\\" d=\\\"M184.36,685.85L145,414.42c0,0,192.71-188.64,496.71-119.43l1.36,390.86H184.36z\\\"/><path class=\\\"c3\\\" d=\\\"M146.36,414.42c0,0,186.69-185.22,500.49-116.36l-3.77,68.86c0,0-260.57-90.93-492.03,86.58L146.36,414.42z\\\"/><g class=\\\"s e d\\\"><line x1=\\\"179.37\\\" y1=\\\"436.51\\\" x2=\\\"219.64\\\" y2=\\\"681.78\\\"/><line x1=\\\"229.24\\\" y1=\\\"404.77\\\" x2=\\\"267.14\\\" y2=\\\"681.78\\\"/><line x1=\\\"285.91\\\" y1=\\\"382.1\\\" x2=\\\"321.43\\\" y2=\\\"683.14\\\"/><line x1=\\\"354\\\" y1=\\\"361.5\\\" x2=\\\"378.43\\\" y2=\\\"681.78\\\"/><line x1=\\\"427.59\\\" y1=\\\"349.23\\\" x2=\\\"443.57\\\" y2=\\\"681.78\\\"/><line x1=\\\"508.71\\\" y1=\\\"347.92\\\" x2=\\\"515.99\\\" y2=\\\"684.72\\\"/><line x1=\\\"605.07\\\" y1=\\\"362.85\\\" x2=\\\"595.57\\\" y2=\\\"681.78\\\"/><path d=\\\"M162.37,514.71c0,0,156.96-135.3,478.29-80.47\\\"/><path d=\\\"M173.5,578.64c0,0,177.79-112.64,465.5-67.86\\\"/><path class=\\\"c5\\\" d=\\\"M51.72,683.64l896.56,4.61l-95.21,45.41c-3.04,1.45-6.25,2.54-9.55,3.25L449.64,821.6c-53.99,11.61-110.37,2.62-158.07-25.21l-74.24-43.31c-4.96-2.89-10.67-4.23-16.4-3.84l-51.88,3.55c-7.92,0.54-15.75-1.97-21.88-7.01L51.72,683.64z\\\"/><path class=\\\"c4\\\" d=\\\"M754.59,253.13c-6.43,4.61-10.62,17.32,16.05,26.94c0,0-18.25,33.78-11.21,46.47c0,0-17.21-24.79-38.17-9.78c0,0-16.51-26.42-38.63-10.94c-22.12,15.48-14.21,66.84,23.82,52.7c0,0,22.99,17.69,44.01,6.54c0,0,34.81,6.4,39.67-20.41c4.86-26.8,6.6-59.77-4.14-75.02C775.25,254.37,762.97,247.13,754.59,253.13z\\\"/><path d=\\\"M151.04,453.51c0,0,202.68-172.1,491.89-87.27\\\"/><path d=\\\"M184.36,685.85L145,414.42c0,0,192.71-188.64,496.71-119.43l1.36,390.86H184.36z\\\"/><path class=\\\"c6\\\" d=\\\"M601,691l-115.09,67.64c-9.09,5.22-19.88,6.64-30.02,3.95l-172.59-42.47c-8.33-2.21-16.98-3-25.58-2.33l-80.72,6.26c-13.86,1.08-27.28-5.11-35.48-16.33l-13.82-18.94\\\"/><polygon class=\\\"c6\\\" points=\\\"705.72,687 736.72,735.64 885.53,688\\\"/></g></svg>';\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IAtopia.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBucks.sol\\\";\\n\\ninterface IAtopia {\\n\\tfunction owner() external view returns (address);\\n\\n\\tfunction bucks() external view returns (IBucks);\\n\\n\\tfunction getAge(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction ownerOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction update(uint256 tokenId) external;\\n\\n\\tfunction exitCenter(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress center,\\n\\t\\tuint256 grown,\\n\\t\\tuint256 enjoyFee\\n\\t) external;\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IBucks.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBucks {\\n\\tfunction mint(address account, uint256 amount) external;\\n\\n\\tfunction burn(uint256 amount) external;\\n\\n\\tfunction burnFrom(address account, uint256 amount) external;\\n\\n\\tfunction transfer(address recipient, uint256 amount) external returns (bool);\\n\\n\\tfunction transferFrom(\\n\\t\\taddress sender,\\n\\t\\taddress recipient,\\n\\t\\tuint256 amount\\n\\t) external returns (bool);\\n\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/ISpace.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAtopia.sol\\\";\\n\\nstruct Task {\\n\\tuint256 id;\\n\\tuint256 info;\\n\\tuint256 rewards;\\n}\\n\\ninterface ISpace {\\n\\tfunction atopia() external view returns (IAtopia);\\n\\n\\tfunction ownerOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction lives(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tasks(uint256 id) external view returns (Task memory);\\n}\\n\"\r\n    },\r\n    \"contracts/libs/Base64.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Base64 {\\n\\tstring private constant base64stdchars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n\\tfunction encode(bytes memory data) internal pure returns (string memory) {\\n\\t\\tif (data.length == 0) return \\\"\\\";\\n\\n\\t\\t// load the table into memory\\n\\t\\tstring memory table = base64stdchars;\\n\\n\\t\\t// multiply by 4/3 rounded up\\n\\t\\tuint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n\\t\\t// add some extra buffer at the end required for the writing\\n\\t\\tstring memory result = new string(encodedLen + 32);\\n\\n\\t\\tassembly {\\n\\t\\t\\t// set the actual output length\\n\\t\\t\\tmstore(result, encodedLen)\\n\\n\\t\\t\\t// prepare the lookup table\\n\\t\\t\\tlet tablePtr := add(table, 1)\\n\\n\\t\\t\\t// input ptr\\n\\t\\t\\tlet dataPtr := data\\n\\t\\t\\tlet endPtr := add(dataPtr, mload(data))\\n\\n\\t\\t\\t// result ptr, jump over length\\n\\t\\t\\tlet resultPtr := add(result, 32)\\n\\n\\t\\t\\t// run over the input, 3 bytes at a time\\n\\t\\t\\tfor {\\n\\n\\t\\t\\t} lt(dataPtr, endPtr) {\\n\\n\\t\\t\\t} {\\n\\t\\t\\t\\tdataPtr := add(dataPtr, 3)\\n\\n\\t\\t\\t\\t// read 3 bytes\\n\\t\\t\\t\\tlet input := mload(dataPtr)\\n\\n\\t\\t\\t\\t// write 4 characters\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(6, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(input, 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t}\\n\\n\\t\\t\\t// padding with '='\\n\\t\\t\\tswitch mod(mload(data), 3)\\n\\t\\t\\tcase 1 {\\n\\t\\t\\t\\tmstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n\\t\\t\\t}\\n\\t\\t\\tcase 2 {\\n\\t\\t\\t\\tmstore(sub(resultPtr, 1), shl(248, 0x3d))\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tfunction toString(uint256 value) internal pure returns (string memory) {\\n\\t\\tif (value == 0) {\\n\\t\\t\\treturn \\\"0\\\";\\n\\t\\t}\\n\\t\\tuint256 temp = value;\\n\\t\\tuint256 digits;\\n\\t\\twhile (temp != 0) {\\n\\t\\t\\tdigits++;\\n\\t\\t\\ttemp /= 10;\\n\\t\\t}\\n\\t\\tbytes memory buffer = new bytes(digits);\\n\\t\\twhile (value != 0) {\\n\\t\\t\\tdigits -= 1;\\n\\t\\t\\tbuffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n\\t\\t\\tvalue /= 10;\\n\\t\\t}\\n\\t\\treturn string(buffer);\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/utils/Center.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ISpace.sol\\\";\\nimport \\\"../libs/Base64.sol\\\";\\n\\nabstract contract AtopiaCenter {\\n\\taddress implementation_;\\n\\taddress public admin;\\n\\n\\tbool public initialized;\\n\\tusing Base64 for *;\\n\\n\\tstruct Package {\\n\\t\\tuint256 id;\\n\\t\\tstring name;\\n\\t\\tuint256 info;\\n\\t\\tuint256 rewards;\\n\\t}\\n\\n\\tuint16 public constant FEE_PERCENT = 500;\\n\\tuint16 public constant WORK_PERCENT = 1000;\\n\\n\\tuint256 public id;\\n\\tstring public name;\\n\\tstring public description;\\n\\tstring public image;\\n\\tuint256 public emission;\\n\\tuint256 public minAge;\\n\\tuint16 public enjoyFee;\\n\\n\\tuint256 public level;\\n\\tuint256 public progress;\\n\\n\\tISpace public space;\\n\\n\\tuint256 public workAvailable;\\n\\tPackage[] public packages;\\n\\tmapping(uint256 => uint256) public workRewards;\\n\\n\\tuint256 public totalStaking;\\n\\tmapping(uint256 => uint256) public claims;\\n\\tuint256 public currentReflection;\\n\\tuint256 public lastUpdateAt;\\n\\n\\tevent PackageAdded(Package newPackage);\\n\\tevent LevelUpdated(uint256 level);\\n\\n\\tfunction initialize(address _space) public virtual;\\n\\n\\tfunction init(\\n\\t\\taddress _space,\\n\\t\\tstring memory _name,\\n\\t\\tstring memory _description\\n\\t) internal {\\n\\t\\trequire(!initialized);\\n\\t\\tinitialized = true;\\n\\t\\tspace = ISpace(_space);\\n\\t\\tname = _name;\\n\\t\\tdescription = _description;\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(space.ownerOf(id) == msg.sender);\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlySpace() {\\n\\t\\trequire(address(space) == msg.sender);\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction totalPackages() external view returns (uint256) {\\n\\t\\treturn packages.length;\\n\\t}\\n\\n\\tfunction newReflection() public view returns (uint256) {\\n\\t\\treturn currentReflection + (emission / totalStaking) * (block.timestamp - lastUpdateAt);\\n\\t}\\n\\n\\tfunction grown(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn newReflection() - claims[tokenId];\\n\\t}\\n\\n\\tfunction rewards(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn workRewards[tokenId];\\n\\t}\\n\\n\\tfunction getProgress() public view returns (uint256) {\\n\\t\\tuint256 percent = progress / emission;\\n\\t\\treturn percent > 100 ? 100 : percent;\\n\\t}\\n\\n\\tfunction updateReflection() internal {\\n\\t\\tif (totalStaking > 0) {\\n\\t\\t\\tcurrentReflection += (emission / totalStaking) * (block.timestamp - lastUpdateAt);\\n\\t\\t}\\n\\t\\tlastUpdateAt = block.timestamp;\\n\\t}\\n\\n\\tfunction setId(uint256 _id) external onlySpace {\\n\\t\\trequire(address(space) == msg.sender);\\n\\t\\trequire(id == 0);\\n\\t\\tid = _id;\\n\\t}\\n\\n\\tfunction enter(uint256 tokenId) external onlySpace returns (uint256) {\\n\\t\\trequire(space.atopia().getAge(tokenId) >= minAge);\\n\\t\\tupdateReflection();\\n\\t\\ttotalStaking += 1;\\n\\t\\tclaims[tokenId] = currentReflection;\\n\\t\\treturn id << 192;\\n\\t}\\n\\n\\tfunction exit(uint256 tokenId) external onlySpace returns (uint256 _growing) {\\n\\t\\t_growing = grown(tokenId);\\n\\t\\ttotalStaking -= 1;\\n\\t\\tupdateReflection();\\n\\t}\\n\\n\\tfunction work(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint16 packageId,\\n\\t\\tuint256 working\\n\\t) external onlySpace returns (uint256) {\\n\\t\\tif (packageId > 0) {\\n\\t\\t\\tuint16 package = packageId - 1;\\n\\t\\t\\trequire(package < packages.length);\\n\\t\\t\\trequire(space.atopia().getAge(tokenId) >= uint128(packages[package].info));\\n\\t\\t\\trequire(packages[package].rewards <= workAvailable);\\n\\n\\t\\t\\tif (working > 0) {\\n\\t\\t\\t\\tuint16 currentPackage = uint16(working >> 128) - 1;\\n\\t\\t\\t\\tuint256 end = working & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\t\\t\\t\\trequire(block.timestamp >= end);\\n\\t\\t\\t\\tworkRewards[tokenId] += packages[currentPackage].rewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\tworkAvailable -= packages[package].rewards;\\n\\t\\t\\treturn (id << 192) | (uint256(packageId) << 128) | (block.timestamp + (packages[package].info >> 128));\\n\\t\\t} else {\\n\\t\\t\\trequire(working > 0);\\n\\n\\t\\t\\tuint16 currentPackage = uint16(working >> 128) - 1;\\n\\t\\t\\tuint256 end = working & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\t\\t\\tuint256 totalRewards = 0;\\n\\t\\t\\tif (block.timestamp >= end) {\\n\\t\\t\\t\\ttotalRewards += packages[currentPackage].rewards;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tworkAvailable += packages[currentPackage].rewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (workRewards[tokenId] > 0) {\\n\\t\\t\\t\\ttotalRewards += workRewards[tokenId];\\n\\t\\t\\t\\tworkRewards[tokenId] = 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (totalRewards > 0) {\\n\\t\\t\\t\\tspace.atopia().bucks().transfer(space.atopia().ownerOf(tokenId), totalRewards);\\n\\t\\t\\t\\tprogress += totalRewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn totalRewards;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction addPackage(string memory packageName, uint256 taskId) external onlyOwner {\\n\\t\\tTask memory task = space.tasks(taskId);\\n\\t\\tPackage memory newPackage = Package(packages.length + 1, packageName, task.info, task.rewards);\\n\\t\\tpackages.push(newPackage);\\n\\t\\temit PackageAdded(newPackage);\\n\\t}\\n\\n\\tfunction upgrade() external onlyOwner {\\n\\t\\trequire(getProgress() == 100);\\n\\t\\tprogress -= emission * 100;\\n\\t\\temission = (emission * 110) / 100;\\n\\t\\tlevel += 1;\\n\\t\\temit LevelUpdated(level);\\n\\t}\\n\\n\\tfunction withdraw() external onlyOwner {\\n\\t\\tuint256 bucks = space.atopia().bucks().balanceOf(address(this)) - workAvailable;\\n\\t\\tuint256 fee = (bucks * FEE_PERCENT) / 10000;\\n\\t\\tuint256 newWork = (bucks * WORK_PERCENT) / 10000;\\n\\t\\tworkAvailable += newWork;\\n\\t\\tspace.atopia().bucks().burn(bucks - fee - newWork);\\n\\t\\tspace.atopia().bucks().transfer(msg.sender, fee);\\n\\t}\\n\\n\\tfunction metadata() external view returns (string memory) {\\n\\t\\treturn\\n\\t\\t\\tstring(\\n\\t\\t\\t\\tabi.encodePacked(\\n\\t\\t\\t\\t\\t\\\"data:application/json;base64,\\\",\\n\\t\\t\\t\\t\\tBase64.encode(\\n\\t\\t\\t\\t\\t\\tabi.encodePacked(\\n\\t\\t\\t\\t\\t\\t\\t'{\\\"name\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tname,\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"description\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tdescription,\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"image\\\":\\\"data:image/svg+xml;base64,',\\n\\t\\t\\t\\t\\t\\t\\tBase64.encode(bytes(image)),\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"attributes\\\":[{\\\"display_type\\\":\\\"number\\\",\\\"trait_type\\\":\\\"Emission\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\temission.toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"number\\\",\\\"trait_type\\\":\\\"Min Age\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\t((minAge * 10) / 365 days).toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"trait_type\\\":\\\"Level\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tlevel.toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"boost_percentage\\\",\\\"trait_type\\\":\\\"Progress\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tgetProgress().toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"boost_percentage\\\",\\\"trait_type\\\":\\\"Fee\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\t(enjoyFee / 100).toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"}]}'\\n\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t)\\n\\t\\t\\t);\\n\\t}\\n}\\n\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"LevelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AtopiaCenter.Package\",\"name\":\"newPackage\",\"type\":\"tuple\"}],\"name\":\"PackageAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WORK_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"packageName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"addPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enjoyFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_growing\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"grown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"image\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"space\",\"outputs\":[{\"internalType\":\"contract ISpace\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"packageId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"working\",\"type\":\"uint256\"}],\"name\":\"work\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"workRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AtopiaGym1","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}