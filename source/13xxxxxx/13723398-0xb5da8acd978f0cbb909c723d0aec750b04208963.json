{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract Owner {\r\n\r\n    address private owner;\r\n    address private bot;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    event BotSet(address indexed oldBot, address indexed newBot);\r\n    event BotTip(address from, address miner, uint256 tip);\r\n    \r\n    modifier isOwner() { \r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    } \r\n\r\n    modifier isBot() { \r\n        require(msg.sender == bot, \"Caller is not bot\");\r\n        _;\r\n    } \r\n    \r\n    constructor(address _bot) {\r\n        owner = msg.sender;  \r\n        bot = _bot;\r\n        emit OwnerSet(address(0), owner);\r\n    } \r\n\r\n    function changeOwner(address newOwner) public isOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n \r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    } \r\n\r\n    function changeBot(address newBot) public isOwner {\r\n        emit BotSet(bot, newBot);\r\n        bot = newBot;\r\n    }\r\n \r\n    function getBot() external view returns (address) {\r\n        return bot;\r\n    } \r\n\r\n    function tip() public payable isBot {\r\n        block.coinbase.transfer(msg.value);\r\n        emit BotTip(bot, block.coinbase, msg.value);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bot\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBot\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBot\",\"type\":\"address\"}],\"name\":\"BotSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tip\",\"type\":\"uint256\"}],\"name\":\"BotTip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBot\",\"type\":\"address\"}],\"name\":\"changeBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Owner","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000003a85586c4b4c2bfd2e7a51ef9ffd4447df84d91d","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://45bb87e45fdc58ad5f0f85d91b8574e822aff911f5822ceca525709a1c8c6f6c"}]}