{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.9;\r\n\r\n// SPDX-License-Identifier: CC0\r\n\r\ninterface ERC721 {\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n    function ownerOf(uint256 _tokenId) external view returns (address);\r\n}\r\n\r\ncontract ERC721Scanner {\r\n    \r\n    \r\n    function scan(address _contract, uint min, uint max) external view returns (uint[] memory) {\r\n        ERC721 token = ERC721(_contract);\r\n        require(token.supportsInterface(0x80ac58cd), 'not erc721');\r\n     \r\n        uint[] memory availableTokens = new uint[](max - min + 1);\r\n        uint count = 0;\r\n\r\n        for(uint i = 0; i < (max - min + 1); i++) {\r\n            uint tokenId = i + min;\r\n            try token.ownerOf(tokenId) returns (address addr) {\r\n                if (addr == address(0)) {\r\n                    availableTokens[count++] = tokenId;\r\n                }\r\n            } catch {\r\n                availableTokens[count++] = tokenId;\r\n            }\r\n        }\r\n\r\n        return availableTokens;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"scan\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ERC721Scanner","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://844bc7b40d20e3fda8adb4af509dc31c973c08efd048d34f0fd4f12235de8aaf"}]}