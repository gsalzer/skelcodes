{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface erc20 {\r\n    function approve(address, uint) external returns (bool);\r\n    function transfer(address, uint) external returns (bool);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\ninterface cy20 {\r\n    function redeemUnderlying(uint) external returns (uint);\r\n    function mint(uint) external returns (uint);\r\n    function borrow(uint) external returns (uint);\r\n    function repayBorrow(uint) external returns (uint);\r\n}\r\n\r\ninterface registry {\r\n    function cy(address) external view returns (address);\r\n    function price(address) external view returns (uint);\r\n}\r\n\r\ninterface cl {\r\n    function latestAnswer() external view returns (int);\r\n}\r\n\r\ncontract ibAMM {\r\n    address constant mim = address(0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3);\r\n    registry constant ff = registry(0x5C08bC10F45468F18CbDC65454Cbd1dd2cB1Ac65);\r\n    cl constant feed = cl(0x7A364e8770418566e3eb2001A96116E6138Eb32F);\r\n    \r\n    address public governance;\r\n    address public pendingGovernance;\r\n    bool public breaker = false;\r\n    int public threshold = 99000000;\r\n    \r\n    constructor(address _governance) {\r\n        governance = _governance;\r\n    }\r\n\r\n    modifier onlyGovernance() {\r\n        require(msg.sender == governance);\r\n        _;\r\n    }\r\n\r\n    function setGovernance(address _governance) external onlyGovernance {\r\n        pendingGovernance = _governance;\r\n    }\r\n\r\n    function acceptGovernance() external {\r\n        require(msg.sender == pendingGovernance);\r\n        governance = pendingGovernance;\r\n    }\r\n\r\n    function setBreaker(bool _breaker) external onlyGovernance {\r\n        breaker = _breaker;\r\n    }\r\n\r\n    function setThreshold(int _threshold) external onlyGovernance {\r\n        threshold = _threshold;\r\n    }\r\n\r\n    function repayBorrow(cy20 repay, erc20 token, uint amount) external returns (bool) {\r\n        token.approve(address(repay), amount);\r\n        repay.repayBorrow(amount);\r\n        return true;\r\n    }\r\n\r\n    function quote(address to, uint amount) external view returns (uint) {\r\n        return ff.price(to) * amount / 1e18;\r\n    }\r\n    \r\n    function swap(address to, uint amount, uint minOut) external returns (bool) {\r\n        require(!breaker, \"breaker\");\r\n        require(feed.latestAnswer() > threshold, \"mim peg\");\r\n        _safeTransferFrom(mim, msg.sender, governance, amount);\r\n        uint _quote = ff.price(to) * amount / 1e18;\r\n        require(_quote > 0 && _quote >= minOut, \"< minOut\");\r\n        require(cy20(ff.cy(to)).borrow(_quote) == 0, \"ib: borrow failed\");\r\n        _safeTransfer(to, msg.sender, _quote);\r\n        return true;\r\n    }\r\n\r\n    function _safeTransfer(address token, address to, uint256 value) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(erc20.transfer.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\r\n    }\r\n\r\n    function _safeTransferFrom(address token, address from, address to, uint256 value) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(erc20.transferFrom.selector, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"breaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract cy20\",\"name\":\"repay\",\"type\":\"address\"},{\"internalType\":\"contract erc20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayBorrow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_breaker\",\"type\":\"bool\"}],\"name\":\"setBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_threshold\",\"type\":\"int256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ibAMM","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000d5dc686d0a2abbfdafdfb4d0533e886517d4e83","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1321ebd0669fc6b56a008b37d6616f4d772b1f3578bd4a6f6eac18040c225c38"}]}