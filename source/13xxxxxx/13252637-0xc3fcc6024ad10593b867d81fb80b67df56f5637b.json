{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: AGPL V3.0\r\n\r\npragma solidity 0.8.0;\r\n\r\n\r\n\r\n// Part: IUpgradeCalculator\r\n\r\ninterface IUpgradeCalculator {\r\n    function calculateUpgrade(uint256 duration, uint256 amount, uint256 power) external pure returns (uint256);\r\n}\r\n\r\n// File: UpgradeCalculatorV0.sol\r\n\r\ncontract UpgradeCalculatorV0 is IUpgradeCalculator {\r\n    function calculateUpgrade(uint256 duration, uint256 amount, uint256 power)\r\n        external\r\n        pure\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return (amount/(power*1e18));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"calculateUpgrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"UpgradeCalculatorV0","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://59ace8b5fce6b792a22a724628309ed2d698f5707118495f30ed2c21a1db250b"}]}