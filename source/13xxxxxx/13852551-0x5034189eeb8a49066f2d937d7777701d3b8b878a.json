{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\n// SPDX-License-Identifier: MIT @GoPocketStudio\r\ninterface IFactory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\ninterface IPair {\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n}\r\n\r\ninterface IERC20 {\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract DexUtils {\r\n    \r\n    function findPairInDex(address factory, address token0, address[] memory token1Array) public view returns (address) {\r\n        IFactory factoryObj = IFactory(factory);\r\n        for(uint32 i = 0; i < token1Array.length; i++) {\r\n            address pair = factoryObj.getPair(token0, token1Array[i]);\r\n            if(pair != address(0)){\r\n                return pair;\r\n            }\r\n        }\r\n        return address(0);\r\n    }\r\n    \r\n    function getPairInfo(address pair) public view \r\n        returns (address token0, address token1, string memory symbol0, string memory symbol1, \r\n            uint8 decimals0, uint8 decimals1, uint112 reserve0, uint112 reserve1 ){\r\n        if(pair != address(0)){\r\n            IPair p = IPair(pair);\r\n            token0 = p.token0();\r\n            token1 = p.token1();\r\n            (reserve0, reserve1, ) = p.getReserves();\r\n            IERC20 t0 = IERC20(token0);\r\n            symbol0 = t0.symbol();\r\n            decimals0 = t0.decimals();\r\n            IERC20 t1 = IERC20(token1);\r\n            symbol1 = t1.symbol();\r\n            decimals1 = t1.decimals();\r\n        }\r\n    }\r\n    \r\n    function findPair(address factory, address token0, address[] memory token1Array) public view \r\n        returns (address _pair, address _token0, address _token1, string memory _symbol0, string memory _symbol1, \r\n            uint8 _decimals0, uint8 _decimals1, uint112 _reserve0, uint112 _reserve1 ){\r\n        _pair = findPairInDex(factory, token0, token1Array);\r\n        (_token0, _token1, _symbol0, _symbol1, _decimals0, _decimals1, _reserve0, _reserve1) = getPairInfo(_pair);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"token1Array\",\"type\":\"address[]\"}],\"name\":\"findPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol0\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol1\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_decimals1\",\"type\":\"uint8\"},{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"token1Array\",\"type\":\"address[]\"}],\"name\":\"findPairInDex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getPairInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol0\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol1\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals1\",\"type\":\"uint8\"},{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DexUtils","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://bb0d46196f706eacbae94aad51629c279f7b7a4bec6739598fb5ada5cad96986"}]}