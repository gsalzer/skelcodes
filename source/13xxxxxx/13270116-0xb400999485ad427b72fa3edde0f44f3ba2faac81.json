{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/protocol/Registry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity =0.7.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../openzeppelin/proxy/utils/Initializable.sol\\\";\\nimport \\\"../openzeppelin/access/OwnableUpgradeable.sol\\\";\\nimport \\\"./ILegacyRegistry.sol\\\";\\n\\n/**\\n * @title Registry contract for storing token proposals\\n * @dev For storing token proposals. This can be understood as a state contract with minimal CRUD logic.\\n */\\ncontract Registry is Initializable, OwnableUpgradeable {\\n\\tstruct Creator {\\n\\t\\taddress token;\\n\\t\\tstring name;\\n\\t\\tstring symbol;\\n\\t\\tuint256 totalSupply;\\n\\t\\tuint256 vestingPeriodInDays;\\n\\t\\taddress proposer;\\n\\t\\taddress vestingBeneficiary;\\n\\t\\tuint8 initialPlatformPercentage;\\n\\t\\tuint8 decimals;\\n\\t\\tuint8 initialPercentage;\\n\\t\\tbool approved;\\n\\t}\\n\\n\\tstruct CreatorReferral {\\n\\t\\taddress referral;\\n\\t\\tuint8 referralPercentage;\\n\\t}\\n\\n\\tmapping(bytes32 => Creator) public rolodex;\\n\\tmapping(bytes32 => CreatorReferral) public creatorReferral;\\n\\tmapping(string => bytes32) nameToIndex;\\n\\tmapping(string => bytes32) symbolToIndex;\\n\\n\\taddress legacyRegistry;\\n\\n\\tevent LogProposalSubmit(\\n\\t\\tstring name,\\n\\t\\tstring symbol,\\n\\t\\taddress proposer,\\n\\t\\tbytes32 indexed hashIndex\\n\\t);\\n\\n\\tevent LogProposalReferralSubmit(\\n\\t\\taddress referral,\\n\\t\\tuint8 referralPercentage,\\n\\t\\tbytes32 indexed hashIndex\\n\\t);\\n\\n\\tevent LogProposalImported(\\n\\t\\tstring name,\\n\\t\\tstring symbol,\\n\\t\\taddress proposer,\\n\\t\\tbytes32 indexed hashIndex\\n\\t);\\n\\tevent LogProposalApprove(string name, address indexed tokenAddress);\\n\\n\\tfunction initialize() public initializer {\\n\\t\\t__Ownable_init();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Submit token proposal to be stored, only called by Owner, which is set to be the Manager contract\\n\\t * @param _name string Name of token\\n\\t * @param _symbol string Symbol of token\\n\\t * @param _decimals uint8 Decimals of token\\n\\t * @param _totalSupply uint256 Total Supply of token\\n\\t * @param _initialPercentage uint8 Initial Percentage of total supply to Vesting Beneficiary\\n\\t * @param _vestingPeriodInDays uint256 Number of days that the remaining of total supply will be linearly vested for\\n\\t * @param _vestingBeneficiary address Address of Vesting Beneficiary\\n\\t * @param _proposer address Address of Proposer of Token, also the msg.sender of function call in Manager contract\\n\\t * @param _initialPlatformPercentage Roll 1.5\\n\\t * @return hashIndex bytes32 It will return a hash index which is calculated as keccak256(_name, _symbol, _proposer)\\n\\t */\\n\\tfunction submitProposal(\\n\\t\\tstring memory _name,\\n\\t\\tstring memory _symbol,\\n\\t\\tuint8 _decimals,\\n\\t\\tuint256 _totalSupply,\\n\\t\\tuint8 _initialPercentage,\\n\\t\\tuint256 _vestingPeriodInDays,\\n\\t\\taddress _vestingBeneficiary,\\n\\t\\taddress _proposer,\\n\\t\\tuint8 _initialPlatformPercentage\\n\\t) public onlyOwner returns (bytes32 hashIndex) {\\n\\t\\tnameDoesNotExist(_name);\\n\\t\\tsymbolDoesNotExist(_symbol);\\n\\t\\thashIndex = keccak256(abi.encodePacked(_name, _symbol, _proposer));\\n\\t\\trolodex[hashIndex] = Creator({\\n\\t\\t\\ttoken: address(0),\\n\\t\\t\\tname: _name,\\n\\t\\t\\tsymbol: _symbol,\\n\\t\\t\\tdecimals: _decimals,\\n\\t\\t\\ttotalSupply: _totalSupply,\\n\\t\\t\\tproposer: _proposer,\\n\\t\\t\\tvestingBeneficiary: _vestingBeneficiary,\\n\\t\\t\\tinitialPercentage: _initialPercentage,\\n\\t\\t\\tvestingPeriodInDays: _vestingPeriodInDays,\\n\\t\\t\\tapproved: false,\\n\\t\\t\\tinitialPlatformPercentage: _initialPlatformPercentage\\n\\t\\t});\\n\\n\\t\\temit LogProposalSubmit(_name, _symbol, msg.sender, hashIndex);\\n\\t}\\n\\n\\tfunction submitProposalReferral(\\n\\t\\tbytes32 _hashIndex,\\n\\t\\taddress _referral,\\n\\t\\tuint8 _referralPercentage\\n\\t) public onlyOwner {\\n\\t\\tcreatorReferral[_hashIndex] = CreatorReferral({\\n\\t\\t\\treferral: _referral,\\n\\t\\t\\treferralPercentage: _referralPercentage\\n\\t\\t});\\n\\t\\temit LogProposalReferralSubmit(\\n\\t\\t\\t_referral,\\n\\t\\t\\t_referralPercentage,\\n\\t\\t\\t_hashIndex\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Approve token proposal, only called by Owner, which is set to be the Manager contract\\n\\t * @param _hashIndex bytes32 Hash Index of Token proposal\\n\\t * @param _token address Address of Token which has already been launched\\n\\t * @return bool Whether it has completed the function\\n\\t * @dev Notice that the only things that have changed from an approved proposal to one that is not\\n\\t * is simply the .token and .approved object variables.\\n\\t */\\n\\tfunction approveProposal(bytes32 _hashIndex, address _token)\\n\\t\\texternal\\n\\t\\tonlyOwner\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\tCreator memory c = rolodex[_hashIndex];\\n\\t\\tnameDoesNotExist(c.name);\\n\\t\\tsymbolDoesNotExist(c.symbol);\\n\\t\\trolodex[_hashIndex].token = _token;\\n\\t\\trolodex[_hashIndex].approved = true;\\n\\t\\tnameToIndex[c.name] = _hashIndex;\\n\\t\\tsymbolToIndex[c.symbol] = _hashIndex;\\n\\t\\temit LogProposalApprove(c.name, _token);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t//Getters\\n\\n\\tfunction getIndexByName(string memory _name) public view returns (bytes32) {\\n\\t\\treturn nameToIndex[_name];\\n\\t}\\n\\n\\tfunction getIndexBySymbol(string memory _symbol)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (bytes32)\\n\\t{\\n\\t\\treturn symbolToIndex[_symbol];\\n\\t}\\n\\n\\tfunction getCreatorByIndex(bytes32 _hashIndex)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Creator memory)\\n\\t{\\n\\t\\treturn rolodex[_hashIndex];\\n\\t}\\n\\n\\tfunction getCreatorReferralByIndex(bytes32 _hashIndex)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (CreatorReferral memory)\\n\\t{\\n\\t\\treturn creatorReferral[_hashIndex];\\n\\t}\\n\\n\\tfunction getCreatorByName(string memory _name)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Creator memory)\\n\\t{\\n\\t\\tbytes32 _hashIndex = nameToIndex[_name];\\n\\t\\treturn rolodex[_hashIndex];\\n\\t}\\n\\n\\tfunction getCreatorBySymbol(string memory _symbol)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Creator memory)\\n\\t{\\n\\t\\tbytes32 _hashIndex = symbolToIndex[_symbol];\\n\\t\\treturn rolodex[_hashIndex];\\n\\t}\\n\\n\\t//Assertive functions\\n\\n\\tfunction nameDoesNotExist(string memory _name) internal view {\\n\\t\\trequire(nameToIndex[_name] == 0x0, \\\"Name already exists\\\");\\n\\t}\\n\\n\\tfunction symbolDoesNotExist(string memory _name) internal view {\\n\\t\\trequire(symbolToIndex[_name] == 0x0, \\\"Symbol already exists\\\");\\n\\t}\\n\\n\\t// Import functions\\n\\tfunction importByIndex(bytes32 _hashIndex, address _oldRegistry)\\n\\t\\texternal\\n\\t\\tonlyOwner\\n\\t{\\n\\t\\tRegistry old = Registry(_oldRegistry);\\n\\t\\tCreator memory proposal = old.getCreatorByIndex(_hashIndex);\\n\\t\\tnameDoesNotExist(proposal.name);\\n\\t\\tsymbolDoesNotExist(proposal.symbol);\\n\\n\\t\\trolodex[_hashIndex] = proposal;\\n\\t\\tif (proposal.approved) {\\n\\t\\t\\tnameToIndex[proposal.name] = _hashIndex;\\n\\t\\t\\tsymbolToIndex[proposal.symbol] = _hashIndex;\\n\\t\\t}\\n\\t\\temit LogProposalImported(\\n\\t\\t\\tproposal.name,\\n\\t\\t\\tproposal.symbol,\\n\\t\\t\\tproposal.proposer,\\n\\t\\t\\t_hashIndex\\n\\t\\t);\\n\\t}\\n\\n\\t// Legacy registry tools\\n\\n\\tfunction setLegacyRegistryAddress(address _legacyRegistry)\\n\\t\\texternal\\n\\t\\tonlyOwner\\n\\t{\\n\\t\\tlegacyRegistry = _legacyRegistry;\\n\\t}\\n\\n\\tfunction legacyProposalsByIndex(bytes32 hashIndex)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Creator memory)\\n\\t{\\n\\t\\tILegacyRegistry legacy = ILegacyRegistry(legacyRegistry);\\n\\t\\tILegacyRegistry.Creator memory legacyCreator =\\n\\t\\t\\tlegacy.rolodex(hashIndex);\\n\\t\\tCreator memory creator =\\n\\t\\t\\tCreator({\\n\\t\\t\\t\\ttoken: legacyCreator.token,\\n\\t\\t\\t\\tname: legacyCreator.name,\\n\\t\\t\\t\\tsymbol: legacyCreator.symbol,\\n\\t\\t\\t\\tdecimals: legacyCreator.decimals,\\n\\t\\t\\t\\ttotalSupply: legacyCreator.totalSupply,\\n\\t\\t\\t\\tproposer: legacyCreator.proposer,\\n\\t\\t\\t\\tvestingBeneficiary: legacyCreator.vestingBeneficiary,\\n\\t\\t\\t\\tinitialPercentage: legacyCreator.initialPercentage,\\n\\t\\t\\t\\tvestingPeriodInDays: legacyCreator.vestingPeriodInWeeks * 7,\\n\\t\\t\\t\\tapproved: legacyCreator.approved,\\n\\t\\t\\t\\tinitialPlatformPercentage: 0\\n\\t\\t\\t});\\n\\n\\t\\treturn creator;\\n\\t}\\n\\n\\tfunction legacyProposals(string memory _name)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Creator memory)\\n\\t{\\n\\t\\tILegacyRegistry legacy = ILegacyRegistry(legacyRegistry);\\n\\t\\tbytes32 hashIndex = legacy.getIndexSymbol(_name);\\n\\t\\treturn this.legacyProposalsByIndex(hashIndex);\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/openzeppelin/proxy/utils/Initializable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\t/**\\n\\t * @dev Indicates that the contract has been initialized.\\n\\t */\\n\\tbool private _initialized;\\n\\n\\t/**\\n\\t * @dev Indicates that the contract is in the process of being initialized.\\n\\t */\\n\\tbool private _initializing;\\n\\n\\t/**\\n\\t * @dev Modifier to protect an initializer function from being invoked twice.\\n\\t */\\n\\tmodifier initializer() {\\n\\t\\trequire(\\n\\t\\t\\t_initializing || !_initialized,\\n\\t\\t\\t\\\"Initializable: contract is already initialized\\\"\\n\\t\\t);\\n\\n\\t\\tbool isTopLevelCall = !_initializing;\\n\\t\\tif (isTopLevelCall) {\\n\\t\\t\\t_initializing = true;\\n\\t\\t\\t_initialized = true;\\n\\t\\t}\\n\\n\\t\\t_;\\n\\n\\t\\tif (isTopLevelCall) {\\n\\t\\t\\t_initializing = false;\\n\\t\\t}\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/openzeppelin/access/OwnableUpgradeable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n\\taddress private _owner;\\n\\n\\tevent OwnershipTransferred(\\n\\t\\taddress indexed previousOwner,\\n\\t\\taddress indexed newOwner\\n\\t);\\n\\n\\t/**\\n\\t * @dev Initializes the contract setting the deployer as the initial owner.\\n\\t */\\n\\tfunction __Ownable_init() internal initializer {\\n\\t\\t__Context_init_unchained();\\n\\t\\t__Ownable_init_unchained();\\n\\t}\\n\\n\\tfunction __Ownable_init_unchained() internal initializer {\\n\\t\\taddress msgSender = _msgSender();\\n\\t\\t_owner = msgSender;\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the address of the current owner.\\n\\t */\\n\\tfunction owner() public view virtual returns (address) {\\n\\t\\treturn _owner;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Throws if called by any account other than the owner.\\n\\t */\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Leaves the contract without owner. It will not be possible to call\\n\\t * `onlyOwner` functions anymore. Can only be called by the current owner.\\n\\t *\\n\\t * NOTE: Renouncing ownership will leave the contract without an owner,\\n\\t * thereby removing any functionality that is only available to the owner.\\n\\t */\\n\\tfunction renounceOwnership() public virtual onlyOwner {\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\n\\t\\t_owner = address(0);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n\\t * Can only be called by the current owner.\\n\\t */\\n\\tfunction transferOwnership(address newOwner) public virtual onlyOwner {\\n\\t\\trequire(\\n\\t\\t\\tnewOwner != address(0),\\n\\t\\t\\t\\\"Ownable: new owner is the zero address\\\"\\n\\t\\t);\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\n\\t\\t_owner = newOwner;\\n\\t}\\n\\n\\tuint256[49] private __gap;\\n}\\n\"\r\n    },\r\n    \"contracts/protocol/ILegacyRegistry.sol\": {\r\n      \"content\": \"pragma solidity =0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/**\\n * @title LegacyRegistry contract interface\\n * @dev Just for to have the interface to read old contracts\\n */\\n\\ninterface ILegacyRegistry {\\n\\tstruct Creator {\\n\\t\\taddress token;\\n\\t\\tstring name;\\n\\t\\tstring symbol;\\n\\t\\tuint8 decimals;\\n\\t\\tuint256 totalSupply;\\n\\t\\taddress proposer;\\n\\t\\taddress vestingBeneficiary;\\n\\t\\tuint8 initialPercentage;\\n\\t\\tuint256 vestingPeriodInWeeks;\\n\\t\\tbool approved;\\n\\t}\\n\\n\\tfunction rolodex(bytes32) external view returns (Creator memory);\\n\\n\\tfunction getIndexSymbol(string memory _symbol)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (bytes32);\\n}\\n\"\r\n    },\r\n    \"contracts/openzeppelin/utils/ContextUpgradeable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n\\tfunction __Context_init() internal initializer {\\n\\t\\t__Context_init_unchained();\\n\\t}\\n\\n\\tfunction __Context_init_unchained() internal initializer {}\\n\\n\\tfunction _msgSender() internal view virtual returns (address) {\\n\\t\\treturn msg.sender;\\n\\t}\\n\\n\\tfunction _msgData() internal view virtual returns (bytes calldata) {\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n\\t\\treturn msg.data;\\n\\t}\\n\\n\\tuint256[50] private __gap;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"LogProposalApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashIndex\",\"type\":\"bytes32\"}],\"name\":\"LogProposalImported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"referralPercentage\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashIndex\",\"type\":\"bytes32\"}],\"name\":\"LogProposalReferralSubmit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashIndex\",\"type\":\"bytes32\"}],\"name\":\"LogProposalSubmit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hashIndex\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"approveProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"creatorReferral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"referralPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hashIndex\",\"type\":\"bytes32\"}],\"name\":\"getCreatorByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getCreatorByName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getCreatorBySymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hashIndex\",\"type\":\"bytes32\"}],\"name\":\"getCreatorReferralByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"referralPercentage\",\"type\":\"uint8\"}],\"internalType\":\"struct Registry.CreatorReferral\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getIndexByName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getIndexBySymbol\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hashIndex\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_oldRegistry\",\"type\":\"address\"}],\"name\":\"importByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"legacyProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashIndex\",\"type\":\"bytes32\"}],\"name\":\"legacyProposalsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"rolodex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"initialPlatformPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_legacyRegistry\",\"type\":\"address\"}],\"name\":\"setLegacyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_initialPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_vestingPeriodInDays\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_initialPlatformPercentage\",\"type\":\"uint8\"}],\"name\":\"submitProposal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashIndex\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hashIndex\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_referralPercentage\",\"type\":\"uint8\"}],\"name\":\"submitProposalReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Registry","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}