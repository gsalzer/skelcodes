{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Mocked Pool contract.\r\n * \r\n * @dev Simulates a core pool, with the set weight function to be called\r\n * by the pool factory. It receives some weight so the total weight registered\r\n * by the factory contract is higher than 0, and allows ILV emissions to be\r\n * stopped and users are able to execute actions in the v1 contracts.\r\n */\r\ncontract MockedPool {\r\n    /**\r\n     * @dev Pool factory deployed instance.\r\n     */\r\n    address public factory;\r\n    /**\r\n     * @dev Weight registered by the factory\r\n     */\r\n    uint32 public weight;\r\n\r\n    /**\r\n     * @param _factory pool factory address\r\n     */\r\n    constructor(address _factory) {\r\n        factory = _factory;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by the factory, just stores the received weight\r\n     * in order to mock a v1 core pool.\r\n     */\r\n    function setWeight(uint32 _weight) external {\r\n        require(msg.sender == factory, \"invalid sender\");\r\n        weight = _weight;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_weight\",\"type\":\"uint32\"}],\"name\":\"setWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weight\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MockedPool","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002996222cb2bf3675e5f5f88a5f211736197f03c7","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://236f3740f407ec7b1fb0fcac888a7c3b0dcf3b9faa2fec2f489cecec8fa612da"}]}