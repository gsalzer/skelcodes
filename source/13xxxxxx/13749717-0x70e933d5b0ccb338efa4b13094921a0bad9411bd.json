{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\ninterface Bridge {\r\n\tfunction depositFor(address _user, address _rootToken, bytes calldata _depositData) external;\r\n}\r\n\r\ninterface ERC20 {\r\n\tfunction balanceOf(address) external view returns (uint256);\r\n\tfunction approve(address, uint256) external returns (bool);\r\n\tfunction transfer(address, uint256) external returns (bool);\r\n}\r\n\r\ncontract AutoBridge {\r\n\r\n\taddress constant private POLYGON_ERC20_BRIDGE = 0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf;\r\n\r\n\tstruct Info {\r\n\t\tbool isBridged;\r\n\t\tBridge bridge;\r\n\t\taddress bridgeDestination;\r\n\t\taddress owner;\r\n\t}\r\n\tInfo private info;\r\n\r\n\r\n\tmodifier _onlyOwner() {\r\n\t\trequire(msg.sender == owner());\r\n\t\t_;\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tinfo.isBridged = true;\r\n\t\tinfo.bridge = Bridge(0xA0c68C638235ee32657e8f720a23ceC1bFc77C77);\r\n\t\tinfo.bridgeDestination = address(0x0);\r\n\t\tinfo.owner = msg.sender;\r\n\t}\r\n\r\n\tfunction setOwner(address _owner) external _onlyOwner {\r\n\t\tinfo.owner = _owner;\r\n\t}\r\n\r\n\tfunction setIsBridged(bool _isBridged) external _onlyOwner {\r\n\t\tinfo.isBridged = _isBridged;\r\n\t}\r\n\r\n\tfunction setBridgeDestination(address _destination) external _onlyOwner {\r\n\t\tinfo.bridgeDestination = _destination;\r\n\t}\r\n\r\n\tfunction enableTokenBridging(ERC20 _token) external _onlyOwner {\r\n\t\t_token.approve(POLYGON_ERC20_BRIDGE, type(uint256).max);\r\n\t}\r\n\r\n\tfunction disableTokenBridging(ERC20 _token) external _onlyOwner {\r\n\t\t_token.approve(POLYGON_ERC20_BRIDGE, 0);\r\n\t}\r\n\r\n\r\n\tfunction bridge(ERC20 _token) external {\r\n\t\taddress _destination = bridgeDestination();\r\n\t\tuint256 _amount = _token.balanceOf(address(this));\r\n\t\tif (_destination != address(0x0) && _amount > 0) {\r\n\t\t\tif (isBridged()) {\r\n\t\t\t\tinfo.bridge.depositFor(_destination, address(_token), abi.encodePacked(_amount));\r\n\t\t\t} else {\r\n\t\t\t\t_token.transfer(_destination, _amount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn info.owner;\r\n\t}\r\n\t\r\n\tfunction isBridged() public view returns (bool) {\r\n\t\treturn info.isBridged;\r\n\t}\r\n\t\r\n\tfunction bridgeDestination() public view returns (address) {\r\n\t\treturn info.bridgeDestination;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"disableTokenBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"enableTokenBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBridged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"setBridgeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isBridged\",\"type\":\"bool\"}],\"name\":\"setIsBridged\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AutoBridge","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b32461a37ce1c80f4ab9a85bb501a7753fe1405b84d46e151ac0b076438d25f3"}]}