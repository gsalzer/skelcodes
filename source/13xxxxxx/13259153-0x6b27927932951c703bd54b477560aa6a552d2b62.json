{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ninterface IERC721 {\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n}\r\n\r\ncontract Scatter {\r\n    \r\n    function scatterEther(address payable[] calldata recipients, uint256[] calldata values) external payable {\r\n        for(uint256 i = 0; i < recipients.length; i++)\r\n            recipients[i].transfer(values[i]);\r\n        uint256 balance = address(this).balance;\r\n        if(balance > 0)\r\n            payable(msg.sender).transfer(balance);\r\n    }\r\n\r\n    function scatterToken(IERC20 token, address[] calldata recipients, uint256[] calldata tokenValues) external {\r\n        uint256 total = 0;\r\n        for(uint256 i = 0; i < recipients.length; i++)\r\n            total += tokenValues[i];\r\n        require(token.transferFrom(msg.sender, address(this), total));\r\n        for(uint256 i = 0; i < recipients.length; i++)\r\n            require(token.transfer(recipients[i], tokenValues[i]));\r\n    }\r\n    \r\n    function scatterErc721Nft(IERC721 token, address[] calldata recipients, uint256[] calldata tokenId) external {\r\n        require(token.isApprovedForAll(msg.sender, address(this)), \"Token not approved\");\r\n        for(uint256 i = 0; i < recipients.length; i++)\r\n            token.safeTransferFrom(msg.sender, recipients[i], tokenId[i]);\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"scatterErc721Nft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"scatterEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenValues\",\"type\":\"uint256[]\"}],\"name\":\"scatterToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Scatter","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ead8196d593b38351e9d030de7d373311c1ca7c43731afa0ddb5aa1468f0a05f"}]}