{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\n\r\n\r\n/* \r\n        BACKGROUNDS\r\n\r\n    01: \"rocknroll\"\r\n    02: \"fibonacci\"\r\n    03: \"clash\"\r\n    04: \"river\"\r\n    05: \"decide\"\r\n    06: \"everlast\"\r\n    07: \"vibe\"\r\n    08: \"motion\"\r\n    09: \"A village\"\r\n    10: \"jump in\"\r\n    11: \"walk\"\r\n    12: \"underwater\"\r\n    13: \"vision\"\r\n    14: \"dreamy\"\r\n    15: \"roundnround\"\r\n    16: \"joanna\"\r\n    17: \"dna1\"\r\n    18: \"yes and no\"\r\n    19: \"love\"\r\n    20: \"wild\"\r\n    21: \"seek\"\r\n    22: \"foundations\"\r\n    23: \"i will not\"\r\n    24: \"feel\"\r\n    25: \"flow\"\r\n    26: \"landing\"\r\n    27: \"japan\"\r\n    28: \"teamwork\"\r\n    29: \"Jelly\"\r\n    30: \"joa1\"\r\n    31: \"joa2\"\r\n    32: \"tiger roar\"\r\n    33: \"shadows\"\r\n    34: \"catch\"\r\n    35: \"passion\"\r\n    36: \"cylces\"\r\n    37: \"poetry\"\r\n    38: \"lucky\"\r\n    39: \"classical\"\r\n    40: \"trust\"\r\n    41: \"circles\"\r\n    42: \"live\"\r\n    43: \"around the world\"\r\n    44: \"now is it\"\r\n    45: \"wants\"\r\n    46: \"h20\"\r\n    47: \"rotations\"\r\n    48: \"lust\"\r\n    49: \"bloom\"\r\n    50: \"desires\"\r\n    51: \"eyes\"\r\n    52: \"dna2\"\r\n    53: \"triple\"\r\n    54: \"virgin\"\r\n    55: \"steal\"\r\n    56: \"spiral\"\r\n    57: \"monaco\"\r\n    58: \"growl33\"\r\n    59: \"bigmac\"\r\n    60: \"loyalty\"\r\n    61: \"jazz\"\r\n\r\n        BODIES\r\n\r\n    01: \"film\"\r\n    02: \"juice\"\r\n    03: \"power\"\r\n    04: \"trip\"\r\n    05: \"smooth\"\r\n    06: \"electric\"\r\n    07: \"scarecrow\"\r\n    08: \"boring\"\r\n    09: \"stinna\"\r\n    10: \"whawha\"\r\n    11: \"shimmer\"\r\n    12: \"space\"\r\n    13: \"gold\"\r\n    14: \"rock out\"\r\n    15: \"style\"\r\n    16: \"blueberry\"\r\n    17: \"bronze\"\r\n    18: \"chalk\"\r\n    19: \"positivity\"\r\n    20: \"orange juice\"\r\n    21: \"favorite\"\r\n    22: \"pompom\"\r\n    23: \"fruity\"\r\n    24: \"spacemen\"\r\n    25: \"maroon\"\r\n    26: \"black\"\r\n    27: \"poem\"\r\n    28: \"reckless\"\r\n    29: \"solve\"\r\n    30: \"victory\"\r\n    31: \"launch\"\r\n    32: \"greenboy\"\r\n    33: \"flowers\"\r\n    34: \"spacegirl\"\r\n    35: \"chance\"\r\n    36: \"raspberry\"\r\n    37: \"again\"\r\n    38: \"family\"\r\n    39: \"round about\"\r\n    40: \"goldandblue\"\r\n    41: \"give\"\r\n    42: \"take\"\r\n    43: \"want\"\r\n    44: \"taste\"\r\n    45: \"lebron\"\r\n    46: \"pinnochio\"\r\n    47: \"celtic\"\r\n    48: \"stay\"\r\n    49: \"yellow\"\r\n    50: \"impossible\"\r\n    51: \"goldy \"\r\n    52: \"mission\"\r\n    53: \"blackberry\"\r\n    54: \"gorgy\"\r\n    55: \"gardens\"\r\n    56: \"recent\"\r\n    57: \"loop\"\r\n    58: \"emerald\"\r\n    59: \"teach\"\r\n    60: \"home\"\r\n    61: \"new\"\r\n    62: \"rivers\"\r\n\r\n        EARS\r\n\r\n    01: \"ruby\"\r\n    02: \"on\"\r\n    03: \"turquoise\"\r\n    04: \"hotpink\"\r\n    05: \"blueboy\"\r\n    06: \"tight\"\r\n    07: \"squeeze\"\r\n    08: \"send\"\r\n    09: \"trips\"\r\n    10: \"lemonade\"\r\n    11: \"solve it\"\r\n    12: \"balls\"\r\n    13: \"floppy\"\r\n    14: \"relax\"\r\n    15: \"exits\"\r\n    16: \"lust\"\r\n    17: \"Love\"\r\n    18: \"weak\"\r\n    19: \"ask\"\r\n    20: \"jingle\"\r\n    21: \"vox\"\r\n    22: \"dizzy\"\r\n    23: \"black\"\r\n    24: \"sweep\"\r\n    25: \"commit\"\r\n    26: \"harvard\"\r\n    27: \"ucla\"\r\n    28: \"stanford\"\r\n    29: \"boston\"\r\n    30: \"please\"\r\n    31: \"tricks\"\r\n    32: \"treats\"\r\n    33: \"play\"\r\n    34: \"electric\"\r\n    35: \"soul\"\r\n    36: \"heart\"\r\n    37: \"intense\"\r\n    38: \"inject\"\r\n    39: \"eject\"\r\n    40: \"creamy\"\r\n    41: \"drive\"\r\n    42: \"fly\"\r\n    43: \"cruise\"\r\n    44: \"glide\"\r\n    45: \"work\"\r\n    46: \"wonder\"\r\n    47: \"please\"\r\n    48: \"visions\"\r\n    49: \"fantsies\"\r\n    50: \"molasses\"\r\n    \r\n        VISORS\r\n    \r\n    01: \"crush\"\r\n    02: \"rubies\"\r\n    03: \"emeralds\"\r\n    04: \"sapphire\"\r\n    05: \"wings\"\r\n    06: \"midnight\"\r\n    07: \"teeth\"\r\n    08: \"matisse\"\r\n    09: \"chrome\"\r\n    10: \"spaceboy\"\r\n    11: \"roll\"\r\n    12: \"Sirrichard\"\r\n    13: \"pinky\"\r\n    14: \"rush\"\r\n    15: \"onyx\"\r\n    16: \"when\"\r\n    17: \"treat\"\r\n    18: \"marble\"\r\n    19: \"reruns\"\r\n    20: \"tiptoe\"\r\n    21: \"meadow\"\r\n    22: \"modesty\"\r\n    23: \"smooth\"\r\n    24: \"more\"\r\n    25: \"fluff\"\r\n    26: \"lightning\"\r\n    27: \"prince\"\r\n    28: \"windows\"\r\n    29: \"girlz\"\r\n    30: \"dexter\"\r\n    31: \"blossom\"\r\n    32: \"straight\"\r\n    33: \"growling\"\r\n    34: \"chalkboards\"\r\n*/\r\n\r\n\r\ncontract Generator {\r\n\r\n    uint[] public backgroundWeights = [\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.008e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.008e18,\r\n        0.004e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.0161e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.008e18,\r\n        0.0264e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.008e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.0241e18,\r\n        0.0002e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.004e18,\r\n        0.0161e18,\r\n        0.0241e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0161e18,\r\n        0.0002e18,\r\n        0.0161e18\r\n    ];\r\n    uint public backgroundTotalWeight;\r\n\r\n    uint[] public bodiesWeights = [\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0037e18,\r\n        0.0037e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0037e18,\r\n        0.0222e18,\r\n        0.0037e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0222e18,\r\n        0.0037e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0148e18,\r\n        0.0074e18,\r\n        0.0037e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0148e18,\r\n        0.0074e18,\r\n        0.0222e18,\r\n        0.0222e18\r\n    ];\r\n    uint public bodiesTotalWeight;\r\n    \r\n    uint[] public earsWeights = [\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18,\r\n        0.02e18\r\n    ];\r\n    uint public earsTotalWeight;\r\n\r\n    uint[] public visorsWeights = [\r\n        0.0072e18,\r\n        0.0072e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0072e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0432e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0432e18,\r\n        0.0144e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0719e18,\r\n        0.0719e18,\r\n        0.0072e18,\r\n        0.0719e18,\r\n        0.0432e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0144e18,\r\n        0.0432e18,\r\n        0.0072e18,\r\n        0.0432e18,\r\n        0.0432e18,\r\n        0.0432e18,\r\n        0.0432e18\r\n    ];\r\n    uint public visorsTotalWeight;\r\n    \r\n    uint public constant LAST_NFT = 11111;\r\n    uint public constant ONE_OF_ONE_COUNT = 25;\r\n\r\n    uint[] public oneOfOne;\r\n    \r\n    uint public seedBlock;\r\n    uint public seed;\r\n    uint nonce;\r\n\r\n    constructor() {\r\n        \r\n        seedBlock = block.number + 10;\r\n        \r\n        uint backgroundBuf;\r\n        for(uint i = 0; i < backgroundWeights.length; i++) {\r\n            backgroundBuf+= backgroundWeights[i];\r\n        }\r\n\r\n        backgroundTotalWeight = backgroundBuf;\r\n\r\n        uint bodiesBuf;\r\n        for(uint i = 0; i < bodiesWeights.length; i++) {\r\n            bodiesBuf+= bodiesWeights[i];\r\n        }\r\n\r\n        bodiesTotalWeight = bodiesBuf;\r\n\r\n        uint earsBuf;\r\n        for(uint i = 0; i < earsWeights.length; i++) {\r\n            earsBuf+= earsWeights[i];\r\n        }\r\n\r\n        earsTotalWeight = earsBuf;\r\n\r\n        uint visorsBuf;\r\n        for(uint i = 0; i < visorsWeights.length; i++) {\r\n            visorsBuf+= visorsWeights[i];\r\n        }\r\n\r\n        visorsTotalWeight = visorsBuf;\r\n    }\r\n\r\n\r\n    function generateOneOfOne() public {\r\n        require(blockhash(seedBlock) != bytes32(0), \"too early or expired\");\r\n        require(oneOfOne.length == 0, \"already generated\");\r\n        \r\n        seed = uint(keccak256(abi.encodePacked(blockhash(seedBlock), tx.gasprice, block.timestamp)));\r\n\r\n        for(uint i = 0; i < ONE_OF_ONE_COUNT; i++) {\r\n            nonce++;\r\n            uint _random = uint(keccak256(abi.encode(seed, nonce))) % LAST_NFT + 1;\r\n            \r\n            //exclude lost NFT \r\n            if(_random == 6127) {\r\n                i--; \r\n                continue;\r\n            }\r\n            \r\n            oneOfOne.push(_random);\r\n        }\r\n\r\n        // check for duplicates\r\n        for(uint i = 0; i < ONE_OF_ONE_COUNT; i++) {\r\n            uint item = oneOfOne[i];\r\n            uint count = 0;\r\n            for(uint j = 0; j < ONE_OF_ONE_COUNT; j++) {\r\n                if(oneOfOne[j] == item) {\r\n                    count++;\r\n                }\r\n                if(count > 1) {\r\n                    //remove all array and try again\r\n                    oneOfOne = new uint[](0);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getNFTData(uint _tokenId) public view returns(uint[] memory res) {\r\n        res = new uint[](5);\r\n        \r\n        for(uint i = 0; i < oneOfOne.length; i++) {\r\n            if(_tokenId == oneOfOne[i]) {\r\n                res[4] = i + 1;\r\n                return res;\r\n            }\r\n        }\r\n        //0 - background\r\n        //1 - body\r\n        //2 - ear\r\n        //3 - visor\r\n        //4 - oneOfOne\r\n        \r\n        res[0] = getRandomBackground(_tokenId) + 1;\r\n        res[1] = getRandomBody(_tokenId) + 1;\r\n        res[2] = getRandomEar(_tokenId) + 1;\r\n        res[3] = getRandomVisor(_tokenId) + 1;\r\n        res[4] = 0;\r\n    }\r\n    \r\n    function getRandomBackground(uint _tokenId) public view returns(uint) {\r\n        uint rnd = random(_tokenId, backgroundTotalWeight);\r\n\r\n        for(uint i = 0; i < backgroundWeights.length; i++) {\r\n          if(rnd < backgroundWeights[i]) {\r\n            return i;\r\n          }\r\n\r\n          rnd -= backgroundWeights[i];\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getRandomBody(uint _tokenId) public view returns(uint) {\r\n        uint rnd = random(_tokenId, bodiesTotalWeight);\r\n\r\n        for(uint i = 0; i < bodiesWeights.length; i++) {\r\n          if(rnd < bodiesWeights[i]) {\r\n            return i;\r\n          }\r\n\r\n          rnd -= bodiesWeights[i];\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getRandomEar(uint _tokenId) public view returns(uint) {\r\n        uint rnd = random(_tokenId, earsTotalWeight);\r\n\r\n        for(uint i = 0; i < earsWeights.length; i++) {\r\n          if(rnd < earsWeights[i]) {\r\n            return i;\r\n          }\r\n\r\n          rnd -= earsWeights[i];\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getRandomVisor(uint _tokenId) public view returns(uint) {\r\n        uint rnd = random(_tokenId, visorsTotalWeight);\r\n\r\n        for(uint i = 0; i < visorsWeights.length; i++) {\r\n          if(rnd < visorsWeights[i]) {\r\n            return i;\r\n          }\r\n\r\n          rnd -= visorsWeights[i];\r\n        }\r\n\r\n        return 0;\r\n    }\r\n    \r\n    function random(uint _tokenId, uint _maximum) public view returns (uint) {\r\n        return uint(keccak256(abi.encode(seed, _tokenId))) % _maximum;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"LAST_NFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_OF_ONE_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backgroundTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"backgroundWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bodiesTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bodiesWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earsTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earsWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateOneOfOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTData\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRandomBackground\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRandomBody\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRandomEar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRandomVisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oneOfOne\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maximum\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"visorsTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"visorsWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Generator","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://efdfebfcdd897eb1f0015bc1674b8d6308881a354ff4816f926414f9073fdf1a"}]}