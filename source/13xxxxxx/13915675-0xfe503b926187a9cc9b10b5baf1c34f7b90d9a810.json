{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: CC0\r\n\r\n\r\n/*\r\n /$$$$$$$$ /$$$$$$$  /$$$$$$$$ /$$$$$$$$         /$$\r\n| $$_____/| $$__  $$| $$_____/| $$_____/       /$$$$\r\n| $$      | $$  \\ $$| $$      | $$            |_  $$\r\n| $$$$$   | $$$$$$$/| $$$$$   | $$$$$           | $$\r\n| $$__/   | $$__  $$| $$__/   | $$__/           | $$\r\n| $$      | $$  \\ $$| $$      | $$              | $$\r\n| $$      | $$  | $$| $$$$$$$$| $$$$$$$$       /$$$$$$\r\n|__/      |__/  |__/|________/|________/      |______/\r\n\r\n\r\n\r\n /$$\r\n| $$\r\n| $$$$$$$  /$$   /$$\r\n| $$__  $$| $$  | $$\r\n| $$  \\ $$| $$  | $$\r\n| $$  | $$| $$  | $$\r\n| $$$$$$$/|  $$$$$$$\r\n|_______/  \\____  $$\r\n           /$$  | $$\r\n          |  $$$$$$/\r\n           \\______/\r\n  /$$$$$$  /$$$$$$$$ /$$$$$$$$ /$$    /$$ /$$$$$$ /$$$$$$$$ /$$$$$$$\r\n /$$__  $$|__  $$__/| $$_____/| $$   | $$|_  $$_/| $$_____/| $$__  $$\r\n| $$  \\__/   | $$   | $$      | $$   | $$  | $$  | $$      | $$  \\ $$\r\n|  $$$$$$    | $$   | $$$$$   |  $$ / $$/  | $$  | $$$$$   | $$$$$$$/\r\n \\____  $$   | $$   | $$__/    \\  $$ $$/   | $$  | $$__/   | $$____/\r\n /$$  \\ $$   | $$   | $$        \\  $$$/    | $$  | $$      | $$\r\n|  $$$$$$/   | $$   | $$$$$$$$   \\  $/    /$$$$$$| $$$$$$$$| $$\r\n \\______/    |__/   |________/    \\_/    |______/|________/|__/\r\n\r\n\r\nCC0 2021\r\n*/\r\n\r\n\r\npragma solidity ^0.8.11;\r\n\r\n \r\ninterface IFree {\r\n  function mint(uint256 collectionId, address to) external;\r\n  function ownerOf(uint256 tokenId) external returns (address owner);\r\n  function tokenIdToCollectionId(uint256 tokenId) external returns (uint256 collectionId);\r\n  function appendAttributeToToken(uint256 tokenId, string memory attrKey, string memory attrValue) external;\r\n}\r\n\r\ncontract Free1 {\r\n  IFree public immutable free;\r\n\r\n  uint public mintCount;\r\n  mapping(uint256 => bool) public free0TokenIdUsed;\r\n\r\n  constructor(address freeAddr) {\r\n    free = IFree(freeAddr);\r\n  }\r\n\r\n  function claim(uint free0TokenId) public {\r\n    require(mintCount < 1000, 'Cannot mint more than 1000');\r\n    require(free.tokenIdToCollectionId(free0TokenId) == 0, 'Invalid Free0');\r\n    require(!free0TokenIdUsed[free0TokenId], 'This Free0 has already been used to mint a Free1');\r\n    require(free.ownerOf(free0TokenId) == msg.sender, 'You must be the owner of this Free0');\r\n\r\n    free0TokenIdUsed[free0TokenId] = true;\r\n    mintCount++;\r\n    free.appendAttributeToToken(free0TokenId, 'Used For Free1 Mint', 'true');\r\n\r\n    free.mint(1, msg.sender);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"freeAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"free0TokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"free\",\"outputs\":[{\"internalType\":\"contract IFree\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"free0TokenIdUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Free1","CompilerVersion":"v0.8.11+commit.d7f03943","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000030b541f1182ef19c56a39634b2fdaca5a0f2a741","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://db27b8229e22c1ff3506ba7983b181694c94a39a1de1d6f716e6dac7ecce67d2"}]}