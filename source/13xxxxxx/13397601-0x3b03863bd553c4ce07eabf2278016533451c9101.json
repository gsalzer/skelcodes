{"status":"1","message":"OK","result":[{"SourceCode":"// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/root.sol\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.5.15 >=0.7.6;\n\n////// lib/tinlake-auth/src/auth.sol\n// Copyright (C) Centrifuge 2020, based on MakerDAO dss https://github.com/makerdao/dss\n/* pragma solidity >=0.5.15; */\n\ncontract Auth {\n    mapping (address => uint256) public wards;\n    \n    event Rely(address indexed usr);\n    event Deny(address indexed usr);\n\n    function rely(address usr) external auth {\n        wards[usr] = 1;\n        emit Rely(usr);\n    }\n    function deny(address usr) external auth {\n        wards[usr] = 0;\n        emit Deny(usr);\n    }\n\n    modifier auth {\n        require(wards[msg.sender] == 1, \"not-authorized\");\n        _;\n    }\n\n}\n\n////// src/root.sol\n/* pragma solidity >=0.7.6; */\n\n/* import \"tinlake-auth/auth.sol\"; */\n\ninterface AuthLike_4 {\n    function rely(address) external;\n    function deny(address) external;\n}\n\ninterface DependLike_4 {\n    function depend(bytes32, address) external;\n}\n\ninterface BorrowerDeployerLike {\n    function feed() external returns (address);\n    function shelf() external returns (address);\n    function title() external returns (address);\n}\n\ninterface LenderDeployerLike_2 {\n    function assessor() external returns (address);\n    function reserve() external returns (address);\n    function poolAdmin() external returns (address);\n}\n\ninterface AdapterDeployerLike_1 {\n    function mgr() external returns (address);\n    function wireAdapter() external;\n}\n\ninterface PoolAdminLike_3 {\n    function setAdminLevel(address, uint) external;\n}\n\ncontract TinlakeRoot is Auth {\n    BorrowerDeployerLike public borrowerDeployer;\n    LenderDeployerLike_2 public  lenderDeployer;\n    AdapterDeployerLike_1 public  adapterDeployer;\n\n    bool public             deployed;\n    address public          deployUsr;\n    address public immutable governance;\n\n    address public          oracle;\n    address[] public        level1Admins;\n    address public          level3Admin;\n\n    constructor (address deployUsr_, address governance_) {\n        deployUsr = deployUsr_;\n        governance = governance_;\n        wards[governance_] = 1;\n        emit Rely(governance_);\n    }\n\n    // --- Prepare ---\n    // Sets the two deployer dependencies. This needs to be called by the deployUsr\n    function prepare(address lender_, address borrower_, address adapter_, address oracle_, address[] memory level1Admins_, address level3Admin_) public {\n        require(deployUsr == msg.sender);\n\n        borrowerDeployer = BorrowerDeployerLike(borrower_);\n        lenderDeployer = LenderDeployerLike_2(lender_);\n        if (adapter_ != address(0)) adapterDeployer = AdapterDeployerLike_1(adapter_);\n        oracle = oracle_;\n        level1Admins = level1Admins_;\n        level3Admin = level3Admin_;\n\n        deployUsr = address(0); // disallow the deploy user to call this more than once.\n    }\n\n    function prepare(address lender_, address borrower_, address adapter_) public {\n        prepare(lender_, borrower_, adapter_, address(0), new address[](0), address(0));\n    }\n\n    function prepare(address lender_, address borrower_) public {\n        prepare(lender_, borrower_, address(0), address(0), new address[](0), address(0));\n    }\n\n    // --- Deploy ---\n    // After going through the deploy process on the lender and borrower method, this method is called to connect\n    // lender and borrower contracts.\n    function deploy() public {\n        require(address(borrowerDeployer) != address(0) && address(lenderDeployer) != address(0) && deployed == false);\n        deployed = true;\n        address reserve_ = lenderDeployer.reserve();\n        address shelf_ = borrowerDeployer.shelf();\n        address assessor_ = lenderDeployer.assessor();\n\n        // Borrower depends\n        DependLike_4(borrowerDeployer.shelf()).depend(\"reserve\", reserve_);\n        DependLike_4(borrowerDeployer.shelf()).depend(\"assessor\", assessor_);\n\n        // Lender depends\n        address navFeed = borrowerDeployer.feed();\n\n        // shelf can deposit and payout from reserve\n        AuthLike_4(reserve_).rely(shelf_);\n        DependLike_4(assessor_).depend(\"navFeed\", navFeed);\n\n\n        // Lender wards\n        if (oracle != address(0)) AuthLike_4(navFeed).rely(oracle);\n\n        DependLike_4(lenderDeployer.poolAdmin()).depend(\"navFeed\", navFeed);\n        AuthLike_4(navFeed).rely(lenderDeployer.poolAdmin());\n\n        PoolAdminLike_3 poolAdmin = PoolAdminLike_3(lenderDeployer.poolAdmin());\n        poolAdmin.setAdminLevel(governance, 3);\n        poolAdmin.setAdminLevel(level3Admin, 3);\n\n        for (uint i = 0; i < level1Admins.length; i++) {\n            poolAdmin.setAdminLevel(level1Admins[i], 1);\n        }\n    }\n\n    // --- Governance Functions ---\n    // `relyContract` & `denyContract` can be called by any ward on the TinlakeRoot\n    // contract to make an arbitrary address a ward on any contract the TinlakeRoot\n    // is a ward on.\n    function relyContract(address target, address usr) public auth {\n        AuthLike_4(target).rely(usr);\n    }\n\n    function denyContract(address target, address usr) public auth {\n        AuthLike_4(target).deny(usr);\n    }\n\n}\n","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployUsr_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governance_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adapterDeployer\",\"outputs\":[{\"internalType\":\"contract AdapterDeployerLike_1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowerDeployer\",\"outputs\":[{\"internalType\":\"contract BorrowerDeployerLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"denyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployUsr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderDeployer\",\"outputs\":[{\"internalType\":\"contract LenderDeployerLike_2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"level1Admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level3Admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adapter_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"level1Admins_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"level3Admin_\",\"type\":\"address\"}],\"name\":\"prepare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adapter_\",\"type\":\"address\"}],\"name\":\"prepare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"}],\"name\":\"prepare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"relyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TinlakeRoot","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000790c2c860ddc993f3da92b19cb440cf8338c59a6000000000000000000000000f3bcea7494d8f3ac21585ca4b0e52aa175c24c25","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}