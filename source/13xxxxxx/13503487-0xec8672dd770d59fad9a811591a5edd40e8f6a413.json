{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.0;\r\n\r\n// Sources flattened with hardhat v2.6.7 https://hardhat.org\r\n\r\n// File contracts/Uniswap/TransferHelper.sol\r\n\r\n\r\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\r\nlibrary TransferHelper {\r\n    function safeApprove(address token, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\r\n    }\r\n\r\n    function safeTransfer(address token, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\r\n    }\r\n\r\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\r\n    }\r\n\r\n    function safeTransferETH(address to, uint value) internal {\r\n        (bool success,) = to.call{value:value}(new bytes(0));\r\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\r\n    }\r\n}\r\n\r\n\r\n// File contracts/Staking/Owned.sol\r\n\r\n\r\n// https://docs.synthetix.io/contracts/Owned\r\ncontract Owned {\r\n    address public owner;\r\n    address public nominatedOwner;\r\n\r\n    constructor (address _owner) public {\r\n        require(_owner != address(0), \"Owner address cannot be 0\");\r\n        owner = _owner;\r\n        emit OwnerChanged(address(0), _owner);\r\n    }\r\n\r\n    function nominateNewOwner(address _owner) external onlyOwner {\r\n        nominatedOwner = _owner;\r\n        emit OwnerNominated(_owner);\r\n    }\r\n\r\n    function acceptOwnership() external {\r\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\r\n        emit OwnerChanged(owner, nominatedOwner);\r\n        owner = nominatedOwner;\r\n        nominatedOwner = address(0);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\r\n        _;\r\n    }\r\n\r\n    event OwnerNominated(address newOwner);\r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n}\r\n\r\n\r\n// File contracts/Misc_AMOs/ManualTokenTrackerAMO.sol\r\n\r\n\r\n// ====================================================================\r\n// |     ______                   _______                             |\r\n// |    / _____________ __  __   / ____(_____  ____ _____  ________   |\r\n// |   / /_  / ___/ __ `| |/_/  / /_  / / __ \\/ __ `/ __ \\/ ___/ _ \\  |\r\n// |  / __/ / /  / /_/ _>  <   / __/ / / / / / /_/ / / / / /__/  __/  |\r\n// | /_/   /_/   \\__,_/_/|_|  /_/   /_/_/ /_/\\__,_/_/ /_/\\___/\\___/   |\r\n// |                                                                  |\r\n// ====================================================================\r\n// ======================= ManualTokenTrackerAMO ======================\r\n// ====================================================================\r\n// Balances manually set by a bot. Calculations done off chain to lower gas.\r\n// Calculating collatDollarBalance on-chain can be extremely gassy.\r\n// Sum of misc token balances in various addresses;\r\n// Has dollarBalances(), so it can be added to an AMOMinter\r\n\r\n// Frax Finance: https://github.com/FraxFinance\r\n\r\n// Primary Author(s)\r\n// Travis Moore: https://github.com/FortisFortuna\r\n\r\n// Reviewer(s) / Contributor(s)\r\n// Jason Huan: https://github.com/jasonhuan\r\n// Sam Kazemian: https://github.com/samkazemian\r\n\r\n\r\ncontract ManualTokenTrackerAMO is Owned {\r\n    // Core\r\n    address public timelock_address;\r\n    address public bot_address;\r\n\r\n    // Balances\r\n    uint256 public fraxDollarBalanceStored;\r\n    uint256 public collatDollarBalanceStored;\r\n\r\n    // Safeguards\r\n    uint256 public change_tolerance = 25000; // E6\r\n\r\n    // Price constants\r\n    uint256 public constant PRICE_PRECISION = 1e6;\r\n\r\n    // Misc\r\n    uint256 public last_timestamp;\r\n    uint256 public min_cooldown_secs = 14400; // 4 hours\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier onlyByOwnGov() {\r\n        require(msg.sender == owner || msg.sender == timelock_address, \"Not owner or timelock\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyByOwnGovBot() {\r\n        require(msg.sender == owner || msg.sender == timelock_address || msg.sender == bot_address, \"Not owner, tlck, or bot\");\r\n        _;\r\n    }\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor (\r\n        address _creator_address,\r\n        address _timelock_address,\r\n        address _bot_address\r\n    ) Owned(_creator_address) {\r\n        timelock_address = _timelock_address;\r\n        bot_address = _bot_address;\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    // Check if setDollarBalances() can be called by the bot instead of wasting gas calling it\r\n    function canUpdate() public view returns (bool) {\r\n        uint256 timeElapsed = block.timestamp - last_timestamp;\r\n        return (timeElapsed >= min_cooldown_secs);\r\n    }\r\n\r\n    function collatDollarBalance() external view returns (uint256) {\r\n        (, uint256 collat_val_e18) = dollarBalances();\r\n        return collat_val_e18;\r\n    }\r\n\r\n    function dollarBalances() public view returns (uint256 frax_val_e18, uint256 collat_val_e18) {\r\n        frax_val_e18 = fraxDollarBalanceStored;\r\n        collat_val_e18 = collatDollarBalanceStored;\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS, BUT BOT CAN SET ========== */\r\n\r\n    // Set the dollar balances for tracked tokens.\r\n    // These balances are calculated off-chain due to extensive gas.\r\n    // The very first set should be done manually\r\n    function setDollarBalances(\r\n        uint256 _new_frax_dollar_balance, \r\n        uint256 _new_collat_dollar_balance, \r\n        bool bypass_checks\r\n    ) public onlyByOwnGovBot {\r\n        // The bot cannot bypass the checks or update too fast\r\n        if (msg.sender == bot_address) {\r\n            require(!bypass_checks, \"Only owner or governance can bypass checks\");\r\n            require(block.timestamp >= (last_timestamp + min_cooldown_secs), \"Too soon\");\r\n        }\r\n\r\n        // Calculate the max change in either direction\r\n        uint256 frax_db_change = (fraxDollarBalanceStored * change_tolerance) / PRICE_PRECISION;\r\n        uint256 collat_db_change = (collatDollarBalanceStored * change_tolerance) / PRICE_PRECISION;\r\n\r\n        // Do the checks\r\n        if (!bypass_checks){\r\n            // FRAX Dollar Balance\r\n            if (_new_frax_dollar_balance >= fraxDollarBalanceStored) {\r\n                require(\r\n                    _new_frax_dollar_balance <= (fraxDollarBalanceStored + frax_db_change), \r\n                    \"_new_frax_dollar_balance too high\"\r\n                );\r\n            }\r\n            else {\r\n                // Prevent underflow\r\n                uint256 lower_frax_db_bound = 0;\r\n                if (frax_db_change < fraxDollarBalanceStored){\r\n                    lower_frax_db_bound = fraxDollarBalanceStored - frax_db_change;\r\n                }\r\n                require(\r\n                    _new_frax_dollar_balance >= lower_frax_db_bound, \r\n                    \"_new_frax_dollar_balance too low\"\r\n                );\r\n            }\r\n\r\n            // Collat Dollar Balance\r\n            if (_new_collat_dollar_balance >= collatDollarBalanceStored) {\r\n                require(\r\n                    _new_collat_dollar_balance <= (collatDollarBalanceStored + collat_db_change), \r\n                    \"_new_collat_dollar_balance too high\"\r\n                );\r\n            }\r\n            else {\r\n                // Prevent underflow\r\n                uint256 lower_collat_db_bound = 0;\r\n                if (collat_db_change < collatDollarBalanceStored){\r\n                    lower_collat_db_bound = collatDollarBalanceStored - collat_db_change;\r\n                }\r\n                require(\r\n                    _new_collat_dollar_balance >= lower_collat_db_bound, \r\n                    \"_new_collat_dollar_balance too low\"\r\n                );\r\n            }\r\n        }\r\n\r\n        // Set the values\r\n        fraxDollarBalanceStored = _new_frax_dollar_balance;\r\n        collatDollarBalanceStored = _new_collat_dollar_balance;\r\n        last_timestamp = block.timestamp;\r\n    }\r\n\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    function setTimelock(address _new_timelock_address) external onlyByOwnGov {\r\n        timelock_address = _new_timelock_address;\r\n    }\r\n\r\n    function setBot(address _new_bot_address) external onlyByOwnGov {\r\n        bot_address = _new_bot_address;\r\n    }\r\n\r\n    // Used to block fat-finger balance changes, or balanceOf/pricing errors\r\n    // In E6. 50000 = +/- 5% tolerance \r\n    function setChangeTolerance(uint256 _change_tolerance) external onlyByOwnGov {\r\n        change_tolerance = _change_tolerance;\r\n    }\r\n\r\n    // Used as a further safety feature\r\n    function setMinCooldownSecs(uint256 _min_cooldown_secs) external onlyByOwnGov {\r\n        min_cooldown_secs = _min_cooldown_secs;\r\n    }\r\n\r\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyByOwnGov {\r\n        // Can only be triggered by owner or governance, not custodian\r\n        // Tokens are sent to the custodian, as a sort of safeguard\r\n        TransferHelper.safeTransfer(tokenAddress, owner, tokenAmount);\r\n        \r\n        emit RecoveredERC20(tokenAddress, tokenAmount);\r\n    }\r\n\r\n    // Generic proxy\r\n    function execute(\r\n        address _to,\r\n        uint256 _value,\r\n        bytes calldata _data\r\n    ) external onlyByOwnGov returns (bool, bytes memory) {\r\n        (bool success, bytes memory result) = _to.call{value:_value}(_data);\r\n        return (success, result);\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RecoveredERC20(address token, uint256 amount);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timelock_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bot_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecoveredERC20\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bot_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"change_tolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collatDollarBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collatDollarBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dollarBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"frax_val_e18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collat_val_e18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxDollarBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last_timestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min_cooldown_secs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_bot_address\",\"type\":\"address\"}],\"name\":\"setBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_change_tolerance\",\"type\":\"uint256\"}],\"name\":\"setChangeTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_new_frax_dollar_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_new_collat_dollar_balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"bypass_checks\",\"type\":\"bool\"}],\"name\":\"setDollarBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min_cooldown_secs\",\"type\":\"uint256\"}],\"name\":\"setMinCooldownSecs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_timelock_address\",\"type\":\"address\"}],\"name\":\"setTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ManualTokenTrackerAMO","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"100000","ConstructorArguments":"000000000000000000000000234d953a9404bf9dbc3b526271d440cd2870bcd20000000000000000000000008412ebf45bac1b340bbe8f318b928c466c4e39ca000000000000000000000000bb437059584e30598b3af0154472e47e6e2a45b9","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv2","Proxy":"0","Implementation":"","SwarmSource":"ipfs://684a57e47fdc577e49805d1eb1f899c9e5132c665e2690e38b14116507d99a3f"}]}