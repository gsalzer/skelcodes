{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/OurProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n/**   ____________________________________________________________________________________        \\n     ___________/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_________\\n    _________/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\____/\\\\/\\\\____________/\\\\/\\\\___________ \\n   _________/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\/\\\\____________/\\\\/\\\\_____________  \\n  _________/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\__/\\\\/\\\\__________/\\\\/\\\\_______________   \\n ___________/\\\\/\\\\/\\\\/\\\\__________/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\____/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_________    \\n____________________________________________________________________________________ */\\n\\npragma solidity 0.8.4;\\n\\nimport {OurStorage} from \\\"./OurStorage.sol\\\";\\n\\ninterface IOurFactory {\\n    function pylon() external returns (address);\\n\\n    function merkleRoot() external returns (bytes32);\\n}\\n\\n/**\\n * @title OurProxy\\n * @author Nick A.\\n * https://github.com/ourz-network/our-contracts\\n *\\n * These contracts enable creators, builders, & collaborators of all kinds\\n * to receive royalties for their collective work, forever.\\n *\\n * Thank you,\\n * @author Mirror       @title Splits   https://github.com/mirror-xyz/splits\\n * @author Gnosis       @title Safe     https://github.com/gnosis/safe-contracts\\n * @author OpenZeppelin                 https://github.com/OpenZeppelin/openzeppelin-contracts\\n * @author Zora                         https://github.com/ourzora\\n */\\n\\ncontract OurProxy is OurStorage {\\n    constructor() {\\n        _pylon = IOurFactory(msg.sender).pylon();\\n        merkleRoot = IOurFactory(msg.sender).merkleRoot();\\n    }\\n\\n    // solhint-disable-next-line no-complex-fallback\\n    fallback() external payable {\\n        address impl = pylon();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            calldatacopy(ptr, 0, calldatasize())\\n            let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)\\n            let size := returndatasize()\\n            returndatacopy(ptr, 0, size)\\n\\n            switch result\\n            case 0 {\\n                revert(ptr, size)\\n            }\\n            default {\\n                return(ptr, size)\\n            }\\n        }\\n    }\\n\\n    function pylon() public view returns (address) {\\n        return _pylon;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/OurStorage.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\n/**\\n * @title OurStorage\\n * @author Nick A.\\n * https://github.com/ourz-network/our-contracts\\n *\\n * These contracts enable creators, builders, & collaborators of all kinds\\n * to receive royalties for their collective work, forever.\\n *\\n * Thank you,\\n * @author Mirror       @title Splits   https://github.com/mirror-xyz/splits\\n * @author Gnosis       @title Safe     https://github.com/gnosis/safe-contracts\\n * @author OpenZeppelin                 https://github.com/OpenZeppelin/openzeppelin-contracts\\n * @author Zora                         https://github.com/ourzora\\n */\\n\\ncontract OurStorage {\\n    bytes32 public merkleRoot;\\n    uint256 public currentWindow;\\n\\n    address internal _pylon;\\n    address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n\\n    uint256[] public balanceForWindow;\\n    mapping(bytes32 => bool) internal _claimed;\\n    uint256 internal _depositedInWindow;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceForWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pylon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OurProxy","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"2000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"1","Implementation":"0xf2219d832704c50dee7b7d2576c76052cc21eabb","SwarmSource":""}]}