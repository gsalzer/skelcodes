// SPDX-License-Identifier: Unlicense

pragma solidity^0.8.0;

import "hardhat/console.sol";

interface ICorruptionsDataMapper {
    function setValue(uint256 mapIndex, uint256 key, uint256 value) external;
    function valueFor(uint256 mapIndex, uint256 key) external view returns (uint256);
}

interface ICorruptions {
    function ownerOf(uint256 tokenID) external returns (address);
    function insight(uint256 tokenID) external view returns (uint256);
}

interface ICorruptionsPaletteToCharacterHelper {
    function prepareCanvas(string[] memory charPaletteStrings, uint256 numChars, bytes memory composition) external pure returns (string[32] memory);
}

contract CorruptionsTemporalFragmentDeviationWriter {
    address constant public chosenAddress = 0x4fFFFF3eD1E82057dffEe66b4aa4057466E24a38;

    bytes constant public data0 = hex

    bytes constant public data1 = hex

    bytes constant public data2 = hex


    bytes constant public data3 = hex

    bytes constant public data4 = hex"00000000010000000000000100000000000001000000000000000000000000000000000002000000000002000000000002000000000000000000000000000000000000000200000000020000000002000000000000000000000000000000000000000000020000000200000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101000000000000000000000000000000000000000000000000000001010101010000000000000000000000000000000000010202020202020200010100010100020202020202020202020202020202010000000000000000000000000101000000000000000000000000000000000000000000000000000001010101010000000000000000000000000000000000000000000000000000010101010100000000000000000000000000000000000000000000000000000000030300000000000000000000000000000000000000000000000000000000000303000000000000000000000000000000000000000000000000000000000003030000000000000000000000000000000000000000000000000000000000010101010101010101010100000000000000000000000000000000000000010101010101010101010101010000000000000000000000000000000000010101010101010101010101010101000000000000000000000000000000000101010101010101010101010101010000000000000000000000000000000001010101010101010101010101010100000000000000000000000000000000020101010101020101010101010102000000000000000000000000000000000301010101010301010101010101030000000000000000000000000000000003010101010103010101010101030000000000000000000000000000000000030000000000030000000000030000000000000000000000000000000000000300000000000300000000030000000000000000000000000000000000030300000000030300000000000003030000000000000000020202020202020202020202020202020202020202020202020202020202020200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002000200020002";

    bytes constant public data5 = hex

    bytes constant public data6 = hex

    bytes constant public data7 = hex

    address public owner;
    uint256 public publicCount;
    uint256 public chosenCount;
    bool public enabled;
    mapping (uint256 => uint256) variationMap;

    string[] private chars1;
    string[] private chars2;
    string[] private chars3;
    string[] private chars4;

    ICorruptionsPaletteToCharacterHelper private helper = ICorruptionsPaletteToCharacterHelper(0x358aaEfCFD6447C8795862586707a61fa4b330A1);
    
    constructor() {
        owner = msg.sender;
        enabled = false;

        chars1.push("&#x000A0;");
        chars1.push("&#x0007C;");
        chars1.push("&#x02592;");
        chars1.push("&#x02591;");

        chars2.push("&#x000A0;");
        chars2.push("&#x02593;");
        chars2.push("&#x02592;");
        chars2.push("&#x02591;");

        chars3.push("&#x0259E;");
        chars3.push("&#x0007C;");
        chars3.push("&#x02592;");
        chars3.push("&#x02591;");

        chars4.push("&#x025c8;");
        chars4.push("&#x02593;");
        chars4.push("&#x02592;");
        chars4.push("&#x02591;");
    }
    
    function setEnabled(bool isEnabled) public {
        require(msg.sender == owner, "Writer: not owner");
        enabled = isEnabled;
    }
    
    function DEVIATE___CORRUPTION_WILL_BE_LOCKED_PERMANENTLY_AND_NO_LONGER_GAIN_INSIGHT(uint256 tokenId, string memory ack) public {
        // Deviated corruptions render differently but are *permanently* destabilized and will no longer gain insight
        //
        // This is OPTIONAL
        // This is PERMANENT
        // This is IRREVERSIBLE
        // This is NOT A PUZZLE PIECE OR KEY
        //
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES
        
        require(enabled || msg.sender == owner, "Writer: not enabled");

        // I_HAVE_READ_THE_DISCLAIMER_AND_ACKNOWLEDGE
        require(keccak256(bytes(ack)) == bytes32(hex"98f083d894dad4ec49f86c8deae933e9e51a46d20f726170c3460fa6c80077f4"), "Writer: not acknowledged");
        require(ICorruptions(0x5BDf397bB2912859Dbd8011F320a222f79A28d2E).ownerOf(tokenId) == msg.sender, "Writer: corruption not owned");
        require(ICorruptionsDataMapper(0x7A96d95a787524a27a4df36b64a96910a2fDCF5B).valueFor(0, tokenId) == 0, "Writer: already inscribed");
        require(ICorruptions(0x5BDf397bB2912859Dbd8011F320a222f79A28d2E).insight(tokenId) >= 10, "Writer: insight too low");

        uint256 variation;
        if (msg.sender != chosenAddress) {
            require(publicCount < 504, "Writer: no remaining inscriptions");
            variation = publicCount % 8;
            publicCount++;
        } else {
            require(chosenCount < 8, "Writer: no remaining chosen inscriptions");
            variation = chosenCount;
            chosenCount++;
        }
        
        variationMap[tokenId] = variation;
        ICorruptionsDataMapper(0x7A96d95a787524a27a4df36b64a96910a2fDCF5B).setValue(0, tokenId, variation + 2);
    }

    function drawCanvas(uint256 tokenId, uint256 amount) public view returns (string[32] memory) {
        tokenId; // unused
        amount; // unused

        bytes memory data;
        string[] memory chars;

        if (variationMap[tokenId] == 0) {
            data = data0;
        } else if (variationMap[tokenId] == 1) {
            data = data1;
        } else if (variationMap[tokenId] == 2) {
            data = data2;
        } else if (variationMap[tokenId] == 3) {
            data = data3;
        } else if (variationMap[tokenId] == 4) {
            data = data4;
        } else if (variationMap[tokenId] == 5) {
            data = data5;
        } else if (variationMap[tokenId] == 6) {
            data = data6;
        } else if (variationMap[tokenId] == 7) {
            data = data7;
        }

        uint256 num = uint256(keccak256(abi.encodePacked("V", tokenId, variationMap[tokenId])));

        if (num % 4 == 0) {
            chars = chars1;
        } else if (num % 4 == 1) {
            chars = chars2;
        } else if (num % 4 == 2) {
            chars = chars3;
        } else {
            chars = chars4;
        }

        string[32] memory canvas = helper.prepareCanvas(chars, 4, data);
        return canvas;
    }
}
