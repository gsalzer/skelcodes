{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-05-06\r\n*/\r\n\r\npragma solidity ^0.5.0;\r\n\r\n// import \"http://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\r\n// import \"http://github.com/OpenZeppelin/openzeppelin-solidity/contracts/drafts/Counters.sol\";\r\n\r\n\r\ncontract FitusNFTBuilderMaster {\r\n    \r\n    //MODIFIERS\r\n    \r\n    modifier onlyOwner() {\r\n      require((msg.sender) == contractOwner);\r\n      _;\r\n    }\r\n    \r\n    //CONSTANTS\r\n    \r\n    // how many nifties this contract is selling\r\n    // used for metadat retrieval \r\n    uint public numNiftiesCurrentlyInContract;\r\n    \r\n    //id of this contract for metadata server\r\n    uint public contractId;\r\n    \r\n    address public contractOwner;\r\n    address public tokenTransferProxy;\r\n    \r\n    //multipliers to construct token Ids\r\n    uint topLevelMultiplier = 100000000;\r\n    uint midLevelMultiplier = 10000;\r\n    \r\n    //MAPPINGS\r\n    \r\n    //ERC20s that can mube used to pay\r\n    mapping (address => bool) public ERC20sApproved;\r\n    mapping (address => uint) public ERC20sDec;\r\n    \r\n    //CONSTRUCTOR FUNCTION\r\n\r\n    constructor() public { \r\n    }\r\n    \r\n    function changeTokenTransferProxy(address newTokenTransferProxy) onlyOwner public {\r\n        tokenTransferProxy = newTokenTransferProxy;\r\n    }\r\n    \r\n    function changeOwnerKey(address newOwner) onlyOwner public {\r\n        contractOwner = newOwner;\r\n    }\r\n    \r\n    \r\n    //functions to retrieve info from token Ids\r\n    function getContractId(uint tokenId) public view returns (uint) {\r\n        return (uint(tokenId/topLevelMultiplier));\r\n    }\r\n    \r\n    function getFitusNFTTypeId(uint tokenId) public view returns (uint) {\r\n        uint top_level = getContractId(tokenId);\r\n        return uint((tokenId-(topLevelMultiplier*top_level))/midLevelMultiplier);\r\n    }\r\n    \r\n    function getSpecificFitusNFTNum(uint tokenId) public view returns (uint) {\r\n         uint top_level = getContractId(tokenId);\r\n         uint mid_level = getFitusNFTTypeId(tokenId);\r\n         return uint(tokenId - (topLevelMultiplier*top_level) - (mid_level*midLevelMultiplier));\r\n    }\r\n    \r\n    function encodeTokenId(uint contractIdCalc, uint fitusNftType, uint specificFitusNFTNum) public view returns (uint) {\r\n        return ((contractIdCalc * topLevelMultiplier) + (fitusNftType * midLevelMultiplier) + specificFitusNFTNum);\r\n    }\r\n    \r\n      // via https://github.com/oraclize/ethereum-api/blob/master/oraclizeAPI_0.5.sol\r\n    function strConcat(string memory _a, string memory _b, string memory _c, string memory _d, string memory _e) public view returns (string memory) {\r\n      bytes memory _ba = bytes(_a);\r\n      bytes memory _bb = bytes(_b);\r\n      bytes memory _bc = bytes(_c);\r\n      bytes memory _bd = bytes(_d);\r\n      bytes memory _be = bytes(_e);\r\n      string memory abcde = new string(_ba.length + _bb.length + _bc.length + _bd.length + _be.length);\r\n      bytes memory babcde = bytes(abcde);\r\n      uint k = 0;\r\n      for (uint i = 0; i < _ba.length; i++) babcde[k++] = _ba[i];\r\n      for (uint i = 0; i < _bb.length; i++) babcde[k++] = _bb[i];\r\n      for (uint i = 0; i < _bc.length; i++) babcde[k++] = _bc[i];\r\n      for (uint i = 0; i < _bd.length; i++) babcde[k++] = _bd[i];\r\n      for (uint i = 0; i < _be.length; i++) babcde[k++] = _be[i];\r\n      return string(babcde);\r\n    }\r\n\r\n    function strConcat(string memory _a, string memory _b, string memory _c, string memory _d) public view returns (string memory) {\r\n        return strConcat(_a, _b, _c, _d, \"\");\r\n    }\r\n\r\n    function strConcat(string memory _a, string memory _b, string memory _c) public view returns (string memory) {\r\n        return strConcat(_a, _b, _c, \"\", \"\");\r\n    }\r\n\r\n    function strConcat(string memory _a, string memory _b) public view returns (string memory) {\r\n        return strConcat(_a, _b, \"\", \"\", \"\");\r\n    }\r\n\r\n    function uint2str(uint _i) public pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ERC20sApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenTransferProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokenTransferProxy\",\"type\":\"address\"}],\"name\":\"changeTokenTransferProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"string\"},{\"name\":\"_b\",\"type\":\"string\"},{\"name\":\"_c\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"string\"},{\"name\":\"_b\",\"type\":\"string\"},{\"name\":\"_c\",\"type\":\"string\"},{\"name\":\"_d\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"string\"},{\"name\":\"_b\",\"type\":\"string\"},{\"name\":\"_c\",\"type\":\"string\"},{\"name\":\"_d\",\"type\":\"string\"},{\"name\":\"_e\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contractIdCalc\",\"type\":\"uint256\"},{\"name\":\"fitusNftType\",\"type\":\"uint256\"},{\"name\":\"specificFitusNFTNum\",\"type\":\"uint256\"}],\"name\":\"encodeTokenId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnerKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getFitusNFTTypeId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSpecificFitusNFTNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ERC20sDec\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"uint2str\",\"outputs\":[{\"name\":\"_uintAsString\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numNiftiesCurrentlyInContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getContractId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"string\"},{\"name\":\"_b\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"FitusNFTBuilderMaster","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3e205640964c7cbb6b5068a4e16ba8ed578d44a92e0b3f5281ae8f8423ec2772"}]}