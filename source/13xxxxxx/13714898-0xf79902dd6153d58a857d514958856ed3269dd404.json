{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity =0.8.10;\r\n\r\ninterface AutoBurn {\r\n    function PoolBurnAndSync() external returns (bool);\r\n    function countdownPoolBurnDue() external view returns (uint256);\r\n}\r\n\r\ncontract poolBurnAndSyncRepeat{\r\n    address public token;\r\n    uint256 public ch;\r\n\r\n    function getChainId() public view  returns (uint256) {\r\n        uint256 id;\r\n        assembly {\r\n            id := chainid()\r\n        }\r\n        return id;\r\n    }\r\n   \r\n    constructor() {\r\n        token = address(0);\r\n        ch = getChainId();\r\n        if (ch == 1) token=0xf3a561E0F83814149992BcDC2aD375aCba84754e; //ETH mainnet\r\n        if (ch == 56) token=0x147Fb3D817107f13ee8E1d7feC0f71D54838656B; //BSC mainnet, v2\r\n    }\r\n\r\n    receive() external payable { revert();  }\r\n    \r\n    function poolBurnAndSync(uint256 m) public {\r\n        require(msg.sender == tx.origin); //no automated runs\r\n        require(m <= 1000); //3 years max\r\n        if (m == 0) m = 30;\r\n        m++;\r\n       uint256 c = AutoBurn(token).countdownPoolBurnDue();\r\n       while (--m > 0 && c == 0)\r\n      {\r\n        AutoBurn(token).PoolBurnAndSync();\r\n        c = AutoBurn(token).countdownPoolBurnDue();\r\n      }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"poolBurnAndSync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"poolBurnAndSyncRepeat","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ff20bd6a7acf818ffa35cd2b0907e8556d207bdcce54328377eea2d4faba9fb5"}]}