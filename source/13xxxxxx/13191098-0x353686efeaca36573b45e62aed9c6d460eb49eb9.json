{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.6.7;\r\ninterface IERC1155 {\r\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 value, bytes calldata _data) external;\r\n    function balanceOf(address _owner, uint256 _id) external view returns(uint256);\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address _who) external returns (uint256);\r\n}\r\n\r\nlibrary Math {\r\n    function add(uint a, uint b) internal pure returns (uint c) {require((c = a + b) >= b, \"BoringMath: Add Overflow\");}\r\n    function sub(uint a, uint b) internal pure returns (uint c) {require((c = a - b) <= a, \"BoringMath: Underflow\");}\r\n    function mul(uint a, uint b) internal pure returns (uint c) {require(a == 0 || (c = a * b)/b == a, \"BoringMath: Mul Overflow\");}\r\n}\r\n\r\ncontract NFTSale {\r\n    using Math for uint256;\r\n\r\n    address public controller;\r\n    address public hausAddress;\r\n    address public stakingSwapContract;\r\n    \r\n    IERC1155 public nft;\r\n    uint256  public price;\r\n    uint256  public id;\r\n    uint256  public start;\r\n    uint256 public limitPerOrder;\r\n    uint256 public stakingRewardPercentageBasisPoints;\r\n    \r\n    event Buy(address buyer, uint256 amount);\r\n    \r\n    constructor(\r\n        address _hausAddress,\r\n        uint256 _startTime,\r\n        address _tokenAddress,\r\n        uint256 _tokenId,\r\n        uint256 _priceWei,\r\n        uint256 _limitPerOrder,\r\n        uint256 _stakingRewardPercentageBasisPoints,\r\n        address _stakingSwapContract\r\n    ) public {\r\n        hausAddress = _hausAddress;\r\n        start = _startTime;\r\n        nft = IERC1155(_tokenAddress);\r\n        id = _tokenId;\r\n        price = _priceWei;\r\n        limitPerOrder = _limitPerOrder;\r\n        controller = msg.sender;\r\n        stakingRewardPercentageBasisPoints = _stakingRewardPercentageBasisPoints;\r\n        stakingSwapContract = _stakingSwapContract;\r\n    }\r\n    \r\n    function buy(uint256 amount) public payable {\r\n        require(msg.sender == tx.origin, \"no contracts\");\r\n        require(block.timestamp >= start, \"early\");\r\n        require(amount <= supply(), \"ordered too many\");\r\n        require(amount <= limitPerOrder, \"ordered too many\");\r\n        require(msg.value == price.mul(amount), \"wrong amount\");\r\n        nft.safeTransferFrom(address(this), msg.sender, id, amount, new bytes(0x0));\r\n        uint256 stakingReward = (address(this).balance * stakingRewardPercentageBasisPoints) / 10000;\r\n        (bool stakingRewardSuccess, ) = stakingSwapContract.call{value: stakingReward}(\"\");\r\n        require(stakingRewardSuccess, \"Staking reward transfer failed.\");\r\n        (bool successMultisig, ) = hausAddress.call{value: address(this).balance}(\"\");\r\n        require(successMultisig, \"Multisig transfer failed.\");\r\n        emit Buy(msg.sender, amount);\r\n    }\r\n    \r\n    function supply() public view returns(uint256) {\r\n        return nft.balanceOf(address(this), id);\r\n    }\r\n\r\n    function setTokenAddress(address _tokenAddress) public onlyController {\r\n        nft = IERC1155(_tokenAddress);\r\n    }\r\n\r\n    function setTokenId(uint256 _tokenId) public onlyController {\r\n        id = _tokenId;\r\n    }\r\n\r\n    function pull() public onlyController {\r\n        nft.safeTransferFrom(address(this), controller, id, nft.balanceOf(address(this), id), new bytes(0x0));\r\n    }\r\n\r\n    modifier onlyController {\r\n      require(msg.sender == controller);\r\n      _;\r\n    }\r\n    \r\n    function onERC1155Received(address, address, uint256, uint256, bytes calldata) external pure returns(bytes4) {\r\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hausAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limitPerOrder\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardPercentageBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_stakingSwapContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hausAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitPerOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardPercentageBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSwapContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"NFTSale","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004a25e18076ddcfd646ed14abc07286c2a4c1256a00000000000000000000000000000000000000000000000000000000613a59b000000000000000000000000013bab10a88fc5f6c77b87878d71c9f1707d2688a00000000000000000000000000000000000000000000000000000000000000a10000000000000000000000000000000000000000000000000429d069189e0000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000005dc0000000000000000000000001c436a02ea4c17522e656f730537d68f71fab92c","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2d4053fb7bd53e4dabf5b2ce48ba8ec2da18d690cc46612bee79ff6f7a5fa504"}]}