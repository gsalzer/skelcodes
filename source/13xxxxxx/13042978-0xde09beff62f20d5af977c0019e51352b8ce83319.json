{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\n\r\nlibrary Math {\r\n    function max(uint a, uint b) internal pure returns (uint) {\r\n        return a >= b ? a : b;\r\n    }\r\n    function min(uint a, uint b) internal pure returns (uint) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\ninterface erc20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n    function balanceOf(address) external view returns (uint);\r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n    function approve(address spender, uint value) external returns (bool);\r\n}\r\n\r\ninterface GaugeController {\r\n    struct VotedSlope {\r\n        uint slope;\r\n        uint power;\r\n        uint end;\r\n    }\r\n    \r\n    struct Point {\r\n        uint bias;\r\n        uint slope;\r\n    }\r\n    \r\n    function vote_user_slopes(address, address) external view returns (VotedSlope memory);\r\n    function last_user_vote(address, address) external view returns (uint);\r\n    function points_weight(address, uint256) external view returns (Point memory);\r\n    function checkpoint_gauge(address) external;\r\n}\r\n\r\ninterface ve {\r\n    function get_last_user_slope(address) external view returns (int128);\r\n}\r\n\r\ninterface bribe {\r\n    function active_period(address, address) external view returns (uint);\r\n    function reward_per_token(address, address) external view returns (uint);\r\n}\r\n\r\ncontract BribeV2 {\r\n    uint constant WEEK = 86400 * 7;\r\n    uint constant PRECISION = 10**18;\r\n    GaugeController constant GAUGE = GaugeController(0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB);\r\n    ve constant VE = ve(0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2);\r\n    bribe constant BRIBE = bribe(0x7893bbb46613d7a4FbcC31Dab4C9b823FfeE1026);\r\n    \r\n    function tokens_for_bribe(address user, address gauge, address reward_token) external view returns (uint) {\r\n        uint _reward_per_token = BRIBE.reward_per_token(gauge, reward_token);\r\n        uint _active_period = BRIBE.active_period(gauge, reward_token);\r\n        uint _previous_slope = GAUGE.points_weight(gauge, _active_period).slope;\r\n        uint _amount = Math.min(_reward_per_token * _previous_slope / PRECISION, erc20(reward_token).balanceOf(address(BRIBE)));\r\n        uint _slope = GAUGE.points_weight(gauge, _active_period+WEEK).slope;\r\n        return uint(int(VE.get_last_user_slope(user))) * _amount / _slope;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward_token\",\"type\":\"address\"}],\"name\":\"tokens_for_bribe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BribeV2","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://436e255c9e82e9b9306f5c9029b0f11e7c96ce2a6872a70eec913d3f536d21bc"}]}