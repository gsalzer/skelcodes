{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at polygonscan.com on 2021-12-27\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n// Author: LufyCZ\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n  function balanceOf(address _owner) external view returns(uint256);\r\n}\r\n\r\ncontract BalanceFetcher {\r\n  function getBalances(address _owner, address[] calldata _tokens) external view returns (uint256[] memory balances) {\r\n    balances = new uint256[](_tokens.length);\r\n    \r\n    for(uint256 i = 0; i < _tokens.length; i++) {\r\n      if(!isContract(_tokens[i])) {\r\n        continue;\r\n      }\r\n      try IERC20(_tokens[i]).balanceOf(_owner) returns(uint256 balance) {\r\n        balances[i] = balance;\r\n      } catch {}\r\n    }\r\n  }\r\n\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint size;\r\n    assembly { size := extcodesize(addr) }\r\n    return size > 0;\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BalanceFetcher","CompilerVersion":"v0.8.11+commit.d7f03943","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://16f307d5369acdd99b760bbe2c78f7e7a74194eefbe461edf5f582ef4c9ead7b"}]}