{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.7;\r\n\r\nabstract contract AuthLike {\r\n    function addAuthorization(address) external virtual;\r\n    function removeAuthorization(address) external virtual;\r\n    function authorizedAccounts(address) external view virtual returns (uint);\r\n}\r\n\r\nabstract contract TreasuryParamAdjusterLike is AuthLike {\r\n    function addRewardAdjuster(address) external virtual;\r\n    function removeRewardAdjuster(address) external virtual;\r\n    function addFundedFunction(address, bytes4, uint256) external virtual;\r\n    function rewardAdjusters(address) external virtual view returns (uint256);\r\n    function whitelistedFundedFunctions(address, bytes4) external virtual view returns (uint256, uint256);\r\n}\r\n\r\nabstract contract MinMaxRewardsAdjusterLike is AuthLike {\r\n    function addFundingReceiver(address, bytes4, uint256, uint256, uint256, uint256) external virtual;\r\n    function fundingReceivers(address, bytes4) external virtual view returns (uint256, uint256, uint256, uint256, uint256);\r\n}\r\n\r\nabstract contract Setter {\r\n    function modifyParameters(bytes32, address) public virtual;\r\n}\r\n\r\ncontract ReplaceMinMaxRewardsAdjuster {\r\n\r\n    function execute(bool) public {\r\n        address fixedRewardsAdjuster = 0xfF5126b97f37DdB4743858b7e0d6c5aE8E5Db2ab;     // GEB_FIXED_REWARDS_ADJUSTER\r\n        address oldMinmaxRewardsAdjuster = 0xbe0D9016714c64a877ed28fd3F3C7c8fF513d807; // GEB_MINMAX_REWARDS_ADJUSTER\r\n\r\n        uint256 updateDelay =  1209600;       // 14 days\r\n        uint256 gasAmountForExecution = 1000;\r\n        uint256 baseRewardMultiplier = 100;   // 1x\r\n        uint256 maxRewardMultiplier = 200;    // 2x\r\n\r\n        AuthLike stabilityFeeTreasury = AuthLike(0x83533fdd3285f48204215E9CF38C785371258E76);                                      // GEB_STABILITY_FEE_TREASURY\r\n        TreasuryParamAdjusterLike treasuryParamAdjuster = TreasuryParamAdjusterLike(0x73FEb3C2DBb87c8E0d040A7CD708F7497853B787);   // GEB_TREASURY_CORE_PARAM_ADJUSTER\r\n        MinMaxRewardsAdjusterLike newMinmaxRewardsAdjuster = MinMaxRewardsAdjusterLike(0xa937A6da2837Dcc91eB19657b051504C0D512a35);\r\n        Setter bundler = Setter(0x7F55e74C25647c100256D87629dee379D68bdCDe);                                                       // GEB_REWARD_ADJUSTER_BUNDLER\r\n\r\n        // authing new setter, deauthing old\r\n        stabilityFeeTreasury.addAuthorization(address(newMinmaxRewardsAdjuster));\r\n        stabilityFeeTreasury.removeAuthorization(address(oldMinmaxRewardsAdjuster));\r\n\r\n        treasuryParamAdjuster.addRewardAdjuster(address(newMinmaxRewardsAdjuster));\r\n        treasuryParamAdjuster.removeRewardAdjuster(address(oldMinmaxRewardsAdjuster));\r\n\r\n        bundler.modifyParameters(\"minMaxRewardAdjuster\", address(newMinmaxRewardsAdjuster));\r\n\r\n        // adding funded functions to the new adjuster\r\n        address payable[10] memory fundingReceivers = [\r\n            0xD52Da90c20c4610fEf8faade2a1281FFa54eB6fB, // GEB_RRFM_SETTER_RELAYER\r\n            0xE8063b122Bef35d6723E33DBb3446092877C6855, // MEDIANIZER_RAI_REWARDS_RELAYER\r\n            0xdD2e7750ebF07BB8Be147e712D5f8deDEE052fde, // MEDIANIZER_ETH_REWARDS_RELAYER\r\n            0x105b857583346E250FBD04a57ce0E491EB204BA3, // FSM_WRAPPER_ETH\r\n            0x54999Ee378b339f405a4a8a1c2f7722CD25960fa, // GEB_SINGLE_CEILING_SETTER\r\n            0x59536C9Ad1a390fA0F60813b2a4e8B957903Efc7, // COLLATERAL_AUCTION_THROTTLER\r\n            0x0262Bd031B99c5fb99B47Dc4bEa691052f671447, // GEB_DEBT_FLOOR_ADJUSTER\r\n            0x1450f40E741F2450A95F9579Be93DD63b8407a25, // GEB_AUTO_SURPLUS_BUFFER\r\n            0x7df2d51e69aA58B69C3dF18D75b8e9ACc3C1B04E, // GEB_DEBT_AUCTION_INITIAL_PARAM_SETTER\r\n            0xa43BFA2a04c355128F3f10788232feeB2f42FE98  // GEB_AUTO_SURPLUS_AUCTIONED\r\n\r\n        ];\r\n        bytes4[10] memory fundedFunctions = [\r\n            bytes4(0x59426fad),                         // relayRate(uint256,address)\r\n            0x8d7fb67a,                                 // reimburseCaller(address)\r\n            0x8d7fb67a,                                 // reimburseCaller(address)\r\n            0x2761f27b,                                 // renumerateCaller(address)\r\n            0xcb5ec87a,                                 // autoUpdateCeiling(address)\r\n            0x36b8b425,                                 // recomputeOnAuctionSystemCoinLimit(address)\r\n            0x341369c1,                                 // recomputeCollateralDebtFloor(address)\r\n            0xbf1ad0db,                                 // adjustSurplusBuffer(address)\r\n            0xbbaf0133,                                 // setDebtAuctionInitialParameters(address)\r\n            0xa8e2044e                                  // recomputeSurplusAmountAuctioned(address)\r\n        ];\r\n\r\n        for (uint256 i = 0; i < 10; i++) {\r\n            newMinmaxRewardsAdjuster.addFundingReceiver(fundingReceivers[i], fundedFunctions[i], updateDelay, gasAmountForExecution, baseRewardMultiplier, maxRewardMultiplier);\r\n        }\r\n\r\n        // Authing both reward adjusters in adjusted contracts\r\n        // Auth - Fixed rewards adjuster\r\n        AuthLike(0xe1d5181F0DD039aA4f695d4939d682C4cF874086).addAuthorization(fixedRewardsAdjuster); // DEBT_POPPER_REWARDS\r\n\r\n        // Auth - Minmax rewards adjuster\r\n        for (uint256 i = 0; i < 10; i++) {\r\n            AuthLike(fundingReceivers[i]).addAuthorization(address(newMinmaxRewardsAdjuster));\r\n        }\r\n\r\n        // remove deployer from new minmax adjuster\r\n        newMinmaxRewardsAdjuster.removeAuthorization(0x3E0139cE3533a42A7D342841aEE69aB2BfEE1d51);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ReplaceMinMaxRewardsAdjuster","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://aa83a888cc5cee7bd375a2ae270960b6cbd7327ae422b91554f50da5fd644bd1"}]}