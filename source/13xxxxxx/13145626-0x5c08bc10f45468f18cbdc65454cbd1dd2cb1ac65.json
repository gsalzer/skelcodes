{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\ninterface o {\r\n    function getUnderlyingPrice(address) external view returns (uint);\r\n}\r\n\r\ncontract ffregistry {\r\n    address[] _forexs;\r\n    mapping(address => address) public cy;\r\n    address public governance;\r\n    address public pendingGovernance;\r\n    uint public applyGovernance;\r\n    uint constant DELAY = 1 days;\r\n    address public oracle;\r\n    \r\n    constructor() {\r\n        governance = msg.sender;\r\n        oracle = 0xde19f5a7cF029275Be9cEC538E81Aa298E297266;\r\n        \r\n        _init(0xFAFdF0C4c1CB09d430Bf88c75D88BB46DAe09967, 0x86BBD9ac8B9B44C95FFc6BAAe58E25033B7548AA);\r\n        _init(0x1CC481cE2BD2EC7Bf67d1Be64d4878b16078F309, 0x1b3E95E8ECF7A7caB6c4De1b344F94865aBD12d5);\r\n        _init(0x69681f8fde45345C3870BCD5eaf4A05a60E7D227, 0xecaB2C76f1A8359A06fAB5fA0CEea51280A97eCF);\r\n        _init(0x5555f75e3d5278082200Fb451D1b6bA946D8e13b, 0x215F34af6557A6598DbdA9aa11cc556F5AE264B1);\r\n        _init(0x96E61422b6A9bA0e068B6c5ADd4fFaBC6a4aae27, 0x00e5c0774A5F065c285068170b20393925C84BF3);\r\n        _init(0x95dFDC8161832e4fF7816aC4B6367CE201538253, 0x3c9f5385c288cE438Ed55620938A4B967c080101);\r\n    }\r\n    \r\n    function _init(address _forex, address _cy) internal {\r\n        _forexs.push(_forex);\r\n        cy[_forex] = _cy;\r\n    }\r\n    \r\n    modifier gov() {\r\n        require(msg.sender == governance);\r\n        _;\r\n    }\r\n    \r\n    function _findIndex(address[] memory array, address element) internal pure returns (uint i) {\r\n        for (i = 0; i < array.length; i++) {\r\n            if (array[i] == element) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _remove(address[] storage array, address element) internal {\r\n        uint _index = _findIndex(array, element);\r\n        uint _length = array.length;\r\n        if (_index >= _length) return;\r\n        if (_index < _length-1) {\r\n            array[_index] = array[_length-1];\r\n        }\r\n\r\n        array.pop();\r\n    }\r\n    \r\n    function setOracle(address _oracle) external gov {\r\n        oracle = _oracle;\r\n    }\r\n    \r\n    function transferGovernance(address _governance) external gov {\r\n        pendingGovernance = _governance;\r\n        applyGovernance = block.timestamp + DELAY;\r\n    }\r\n    \r\n    function acceptGovernance() external {\r\n        require(msg.sender == pendingGovernance);\r\n        require(block.timestamp > applyGovernance);\r\n        governance = pendingGovernance;\r\n    }\r\n    \r\n    function addForex(address _forex, address _cy) external gov {\r\n        if (_findIndex(_forexs, _forex) == _forexs.length) {\r\n            _forexs.push(_forex);\r\n        }\r\n        cy[_forex] = _cy;\r\n    }\r\n    \r\n    function removeForex(address _forex) external gov {\r\n        if (_findIndex(_forexs, _forex) < _forexs.length) {\r\n            _remove(_forexs, _forex);\r\n        }\r\n    }\r\n    \r\n    function forex() external view returns (address[] memory) {\r\n        return _forexs;\r\n    }\r\n    \r\n    function price(address _forex) external view returns (uint) {\r\n        return o(oracle).getUnderlyingPrice(cy[_forex]);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cy\",\"type\":\"address\"}],\"name\":\"addForex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyGovernance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forex\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forex\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forex\",\"type\":\"address\"}],\"name\":\"removeForex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ffregistry","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://306818238965e2af92c380af5363ed2cc93eaa6a7a8f1cb924432546e655ff7a"}]}