{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.6;\r\n\r\ninterface AvastarsContract {\r\n        function useTraits(uint256 _primeId, bool[12] calldata _traitFlags) external;\r\n        function getPrimeReplicationByTokenId(uint256 _tokenId) external view returns (uint256 tokenId, bool[12] memory replicated); \r\n}\r\n\r\ninterface ARTContract {\r\n        function burnArt(uint256 artToBurn) external;\r\n        function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract AvastarsInterface {\r\n    \r\n        constructor() {\r\n            Avastars = AvastarsContract(AvastarsAddress);\r\n            AvastarReplicantToken = ARTContract(ARTAddress);\r\n            owner = msg.sender;\r\n            setPaymentIncrement(5000000000000000);\r\n        }\r\n        \r\n        modifier isOwner() {\r\n        require(msg.sender == owner, \"Must be owner of contract\");\r\n        _;\r\n        }\r\n        \r\n        address public AvastarsAddress = 0xF3E778F839934fC819cFA1040AabaCeCBA01e049; //mainnet: 0xF3E778F839934fC819cFA1040AabaCeCBA01e049\r\n        address public ARTAddress = 0x69ad42A8726f161Bd4C76305DFa8F4ecc120115c; //mainnet: 0x69ad42A8726f161Bd4C76305DFa8F4ecc120115c\r\n        address public owner;\r\n        uint256 public paymentIncrement;\r\n        \r\n        address payable paymentWallet = 0x4C7BEdfA26C744e6bd61CBdF86F3fc4a76DCa073; //nft42 wallet: 0x4C7BEdfA26C744e6bd61CBdF86F3fc4a76DCa073\r\n        \r\n        event TraitsBurned(address msgsender, uint256 paymentTier); \r\n        \r\n        AvastarsContract Avastars;\r\n        ARTContract AvastarReplicantToken;\r\n        \r\n        function burnReplicantTraits(uint256 paymentTier, uint[] memory avastarIDs, bool[12][] memory avastarTraits) public payable {\r\n            \r\n            require(msg.value >= paymentTier * paymentIncrement);\r\n            require(avastarIDs.length == avastarTraits.length);\r\n            \r\n            uint256 totalAvastars = avastarIDs.length;\r\n            \r\n            bool[12] memory traitIsUsed;\r\n            bool[12] memory traitsToBurn;\r\n            \r\n            for (uint i = 0; i < totalAvastars; i = i + 1){\r\n                (, traitIsUsed) = Avastars.getPrimeReplicationByTokenId(avastarIDs[i]);\r\n                traitsToBurn = avastarTraits[i];\r\n                \r\n                for(uint j = 0; j < 12; j = j + 1) {\r\n                    if(traitIsUsed[j] == true) {\r\n                        require(traitsToBurn[j] == false);\r\n                    }\r\n                }\r\n                \r\n                Avastars.useTraits(avastarIDs[i],avastarTraits[i]);                \r\n            }    \r\n            \r\n            AvastarReplicantToken.transferFrom(msg.sender,address(this),1000000000000000000);\r\n            AvastarReplicantToken.burnArt(1);\r\n            paymentWallet.transfer(msg.value);\r\n    \r\n            emit TraitsBurned(msg.sender, paymentTier);\r\n        }\r\n        \r\n        function setPaymentIncrement(uint256 newIncrement) public isOwner {\r\n            paymentIncrement = newIncrement;\r\n        }\r\n        \r\n        function setOwner(address newOwner) public isOwner {\r\n            owner = newOwner;\r\n        }\r\n        \r\n        function setPaymentWallet(address payable newWallet) public isOwner {\r\n            paymentWallet = newWallet;\r\n        }\r\n        \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentTier\",\"type\":\"uint256\"}],\"name\":\"TraitsBurned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AvastarsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentTier\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"avastarIDs\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[12][]\",\"name\":\"avastarTraits\",\"type\":\"bool[12][]\"}],\"name\":\"burnReplicantTraits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentIncrement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newIncrement\",\"type\":\"uint256\"}],\"name\":\"setPaymentIncrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setPaymentWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AvastarsInterface","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dfc9db7532622da5babb388c3f231f987f90224fffbf0e941924a8cf4341511b"}]}