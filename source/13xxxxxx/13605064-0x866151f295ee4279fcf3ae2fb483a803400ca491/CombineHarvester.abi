[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_bentoBox",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "contract ISafeStrategy",
                "name": "strategy",
                "type": "address"
            }
        ],
        "name": "_rebalanceNecessairy",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "bentoBox",
        "outputs": [
            {
                "internalType": "contract IBentoBoxMinimal",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract ISafeStrategy[]",
                "name": "strategies",
                "type": "address[]"
            },
            {
                "internalType": "uint256[]",
                "name": "maxChangeAmounts",
                "type": "uint256[]"
            },
            {
                "internalType": "bool[]",
                "name": "harvestRewards",
                "type": "bool[]"
            },
            {
                "internalType": "uint256[]",
                "name": "minOutAmounts",
                "type": "uint256[]"
            }
        ],
        "name": "executeSafeHarvests",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract ISafeStrategy[]",
                "name": "strategies",
                "type": "address[]"
            },
            {
                "internalType": "uint256[]",
                "name": "maxBalances",
                "type": "uint256[]"
            },
            {
                "internalType": "bool[]",
                "name": "rebalances",
                "type": "bool[]"
            },
            {
                "internalType": "uint256[]",
                "name": "maxChangeAmounts",
                "type": "uint256[]"
            },
            {
                "internalType": "bool[]",
                "name": "harvestRewards",
                "type": "bool[]"
            },
            {
                "internalType": "uint256[]",
                "name": "minOutAmounts",
                "type": "uint256[]"
            }
        ],
        "name": "executeSafeHarvestsManual",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]