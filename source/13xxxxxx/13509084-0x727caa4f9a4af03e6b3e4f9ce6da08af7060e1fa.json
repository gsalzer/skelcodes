{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 c = a + b;\r\n      require(c >= a);\r\n      return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      require(b <= a);\r\n      uint256 c = a - b;\r\n      return c;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}\r\n\r\ncontract ERC20 {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address holder) public view returns (uint256);\r\n  function allowance(address holder, address spender) public view returns (uint256);\r\n  function transfer(address to, uint256 amount) public returns (bool success);\r\n  function approve(address spender, uint256 amount) public returns (bool success);\r\n  function transferFrom(address from, address to, uint256 amount) public returns (bool success);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 amount);\r\n  event Approval(address indexed holder, address indexed spender, uint256 amount);\r\n}\r\n\r\ncontract FluffyInu is ERC20 {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string public symbol = \"Fluffy Inu\";\r\n    string public name = \"FLUFFY\";\r\n    uint8 public decimals = 18;\r\n    uint256 private _totalSupply = 1000000000000000000000000000;\r\n    uint256 oneHundredPercent = 100;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    constructor() public {\r\n        balances[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n      return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address holder) public view returns (uint256) {\r\n        return balances[holder];\r\n    }\r\n\r\n    function allowance(address holder, address spender) public view returns (uint256) {\r\n        return allowed[holder][spender];\r\n    }\r\n\r\n    function findOnePercent(uint256 amount) private view returns (uint256)  {\r\n        uint256 roundAmount = amount.ceil(oneHundredPercent);\r\n        uint256 fivePercent = roundAmount.mul(oneHundredPercent).div(1000);\r\n        return fivePercent;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public returns (bool success) {\r\n      require(amount <= balances[msg.sender]);\r\n      require(to != address(0));\r\n\r\n      uint256 tokensToBurn = findOnePercent(amount);\r\n      uint256 tokensToTransfer = amount.sub(tokensToBurn);\r\n\r\n      balances[msg.sender] = balances[msg.sender].sub(amount);\r\n      balances[to] = balances[to].add(tokensToTransfer);\r\n\r\n      _totalSupply = _totalSupply.sub(tokensToBurn);\r\n\r\n      emit Transfer(msg.sender, to, tokensToTransfer);\r\n      emit Transfer(msg.sender, address(0), tokensToBurn);\r\n      return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public returns (bool success) {\r\n        allowed[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) public returns (bool success) {\r\n      require(amount <= balances[from]);\r\n      require(amount <= allowed[from][msg.sender]);\r\n      require(to != address(0));\r\n\r\n      balances[from] = balances[from].sub(amount);\r\n\r\n      uint256 tokensToBurn = findOnePercent(amount);\r\n      uint256 tokensToTransfer = amount.sub(tokensToBurn);\r\n\r\n      balances[to] = balances[to].add(tokensToTransfer);\r\n      _totalSupply = _totalSupply.sub(tokensToBurn);\r\n\r\n      allowed[from][msg.sender] = allowed[from][msg.sender].sub(amount);\r\n\r\n      emit Transfer(from, to, tokensToTransfer);\r\n      emit Transfer(from, address(0), tokensToBurn);\r\n\r\n      return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"FluffyInu","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f5493aded7024822b6c294016e76086b5f004ef316990806f92241ed19d3c9fd"}]}