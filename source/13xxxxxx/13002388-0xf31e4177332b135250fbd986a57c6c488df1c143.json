{"status":"1","message":"OK","result":[{"SourceCode":"/*\n    ___            _       ___  _                          \n    | .\\ ___  _ _ <_> ___ | __><_>._ _  ___ ._ _  ___  ___ \n    |  _// ._>| '_>| ||___|| _> | || ' |<_> || ' |/ | '/ ._>\n    |_|  \\___.|_|  |_|     |_|  |_||_|_|<___||_|_|\\_|_.\\___.\n    \n* PeriFinance: EscrowChecker.sol\n*\n* Latest source (may be newer): https://github.com/perifinance/peri-finance/blob/master/contracts/EscrowChecker.sol\n* Docs: Will be added in the future. \n* https://docs.peri.finance/contracts/source/contracts/EscrowChecker\n*\n* Contract Dependencies: (none)\n* Libraries: (none)\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2021 PeriFinance\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n\n\n\npragma solidity 0.5.16;\n\ninterface IPeriFinanceEscrow {\n    function numVestingEntries(address account) external view returns (uint);\n\n    function getVestingScheduleEntry(address account, uint index) external view returns (uint[2] memory);\n}\n\n// https://docs.peri.finance/contracts/source/contracts/escrowchecker\ncontract EscrowChecker {\n    IPeriFinanceEscrow public periFinance_escrow;\n\n    constructor(IPeriFinanceEscrow _esc) public {\n        periFinance_escrow = _esc;\n    }\n\n    function checkAccountSchedule(address account) public view returns (uint[16] memory) {\n        uint[16] memory _result;\n        uint schedules = periFinance_escrow.numVestingEntries(account);\n        for (uint i = 0; i < schedules; i++) {\n            uint[2] memory pair = periFinance_escrow.getVestingScheduleEntry(account, i);\n            _result[i * 2] = pair[0];\n            _result[i * 2 + 1] = pair[1];\n        }\n        return _result;\n    }\n}\n\n    ","ABI":"[{\"inputs\":[{\"internalType\":\"contract IPeriFinanceEscrow\",\"name\":\"_esc\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkAccountSchedule\",\"outputs\":[{\"internalType\":\"uint256[16]\",\"name\":\"\",\"type\":\"uint256[16]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periFinance_escrow\",\"outputs\":[{\"internalType\":\"contract IPeriFinanceEscrow\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EscrowChecker","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d8afcfaa97b2d685dfe790d9fa82004ae426ee33","EVMVersion":"Default","Library":"SafeDecimalMath:6e0bff12512a94f3b1ecebe08203fe7f8f8fae64","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}