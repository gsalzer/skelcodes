{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.9;\r\n\r\n/// @title Parts of Four Token\r\ncontract P4CToken {\r\n\tstring public constant name = \"Parts of Four Coin\";\r\n\tstring public constant symbol = \"P4C\";\r\n\tuint8 public constant decimals = 18;\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n\t/// @notice The block number this contract was created in. Stored here so web3 scripts can easily access it and use\r\n\t/// @notice it to scan for InternalTransfer and NewRedistributedSupply events\r\n\tuint256 public immutable creationBlock;\r\n\r\n\t/// @notice This determines whether the 3% is deducted from transactions.\r\n\tbool public deductTaxes = true;\r\n\r\n\t/// @notice The original supply of P4C.\r\n\tuint256 public constant originalSupply = 4_000_000_000_000e18;\r\n\r\n\t/// @notice The current supply of internal P4C. This goes down when funds are burnt, as well as when supply is\r\n\t/// @notice redistributed.\r\n\tuint256 public totalInternalSupply = originalSupply;\r\n\r\n\t/// @notice This is the internal supply held in non-excluded addresses.\r\n\tuint256 public internalSupplyInNonExcludedAddresses;\r\n\r\n\t// @notice This 1e18 times a factor that adjusts internal balances to external balances. For example, if an account\r\n\t// @notice has an internal balance of 1e18 and this factor is 1.5e18, the external balance of that account will be\r\n\t// @notice 1.5e18.\r\n\tuint256 public adjustmentFactor = 1e18;\r\n\r\n\t// @notice The owner of the contract, set to the address that instantiated the contract. Only `contractOwner` may\r\n\t// @notice add or remove excluded addresses.\r\n\taddress public immutable contractOwner;\r\n\r\n\t// @notice This is a list of excluded addresses. Transfers involving these addresses don't have the 3% tax taken out\r\n\t// @notice of them, and they don't receive token redistribution (ie. their balances are adjusted downwards every\r\n\t// @notice time `adjustmentFactor` is increased.\r\n\taddress[] public excludedAddresses;\r\n\t// @notice A map where addresses in `excludedAddresses` map to `true`.\r\n\tmapping (address => bool) excludedAddressesMap;\r\n\r\n\t// @notice This is a mapping of addresses to the number of *internal* tokens they hold. This is *different* from the\r\n\t// @notice values that are used in contract calls, as those are adjusted by `adjustmentFactor`.\r\n\tmapping (address => uint256) public internalBalances;\r\n\r\n\t// @notice This event is emitted when tokens are transferred from `_from` to `_to`. `_internalSentValue` is the\r\n\t// @notice number of internal tokens transferred *before* any fees are deducted (ie. the recipient will actually get\r\n\t// @notice 3% less unless `_from` or `_to` is an excluded address).\r\n\tevent InternalTransfer(address _from, address _to, uint256 _internalSentValue);\r\n\t// @notice This event is fired when an excluded address is added.\r\n\tevent AddedExcludedAddress(address _addr);\r\n\t// @notice This event is fired when an address is removed from the excluded address list.\r\n\tevent RemovedExcludedAddress(address _addr);\r\n\t// @notice Called when deduct taxes setting is changed.\r\n\tevent SetDeductTaxes(bool _enabled);\r\n\r\n\t// Token authorisations. `_authorisee` can withdraw up to `allowed[_authoriser][_authroisee]` from `_authoriser`'s\r\n\t// account. Multiple transfers can be made so long as they do not cumulatively exceed the given amount. This is in\r\n\t// *EXTERNAL* tokens.\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tconstructor() {\r\n\t\tcreationBlock = block.number;\r\n\t\tcontractOwner = msg.sender;\r\n\t\taddExcludedAddress(msg.sender);\r\n\t\tinternalBalances[contractOwner] = originalSupply;\r\n\t}\r\n\r\n\t/// @notice Derive an external amount from an internal amount. (This will return a different result every time it's\r\n\t/// @notice called, as the amount it's being adjusted by changes when transfers are made.)\r\n\tfunction internalToExternalAmount(uint256 _internalAmount) view internal returns (uint256) {\r\n\t\treturn (_internalAmount * adjustmentFactor) / 1e18;\r\n\t}\r\n\r\n\t/// @notice Derive an internal amount from an external amount. (This will return a different result every time it's\r\n\t/// @notice called, as the amount it's being adjusted by changes when transfers are made.)\r\n\tfunction externalToInternalAmount(uint256 _externalAmount) view internal returns (uint256) {\r\n\t\treturn (_externalAmount * 1e18) / adjustmentFactor;\r\n\t}\r\n\r\n\t/// @notice The total external supply of the contract.\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn internalToExternalAmount(totalInternalSupply);\r\n\t}\r\n\r\n\t/// @notice Designate an address as excluded. Transactions to and from excluded addresses don't incur taxes, and\r\n\t/// @notice they don't receive token redistribution either (which in practice means that their balances are adjusted\r\n\t/// @notice downwards every time `adjustmentFactor` is increased). This may only be called by `contractOwner`.\r\n\tfunction addExcludedAddress(address _addr) public {\r\n\t\trequire(msg.sender == contractOwner, \"This function is callable only by the contract owner.\");\r\n\t\trequire(!excludedAddressesMap[_addr], \"_addr is already an excluded address.\");\r\n\r\n\t\tinternalSupplyInNonExcludedAddresses -= internalBalances[_addr];\r\n\t\texcludedAddressesMap[_addr] = true;\r\n\t\texcludedAddresses.push(_addr);\r\n\r\n\t\temit AddedExcludedAddress(_addr);\r\n\t}\r\n\r\n\t/// @notice Remove the designation of excluded address from `_addr`.  Transactions to and from excluded addresses\r\n\t/// @notice don't incur taxes, and they don't receive token redistribution either (which in practice means that\r\n\t/// @notice their balances are adjusted downwards every time `adjustmentFactor` is increased). This may only be\r\n\t/// @notice called by `contractOwner`.\r\n\tfunction removeExcludedAddress(address _addr) public {\r\n\t\trequire(msg.sender == contractOwner, \"This function is callable only by the contract owner.\");\r\n\t\trequire(_addr != contractOwner, \"contractOwner must be an excluded address for correct contract behaviour.\");\r\n\t\trequire(!!excludedAddressesMap[_addr], \"_addr is not an excluded address.\");\r\n\r\n\t\tinternalSupplyInNonExcludedAddresses += internalBalances[_addr];\r\n\t\texcludedAddressesMap[_addr] = false;\r\n\t\tfor (uint i; i < excludedAddresses.length; i++) {\r\n\t\t\tif (excludedAddresses[i] == _addr) {\r\n\t\t\t\tif (i != excludedAddresses.length-1)\r\n\t\t\t\t\texcludedAddresses[i] = excludedAddresses[excludedAddresses.length-1];\r\n\r\n\t\t\t\texcludedAddresses.pop();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\temit RemovedExcludedAddress(_addr);\r\n\t}\r\n\r\n\t/// @notice Set whether or not we deduct 3% from every transaction. This may only be called by `contractOwner`.\r\n\tfunction setDeductTaxes(bool _deductTaxes) public {\r\n\t\trequire(msg.sender == contractOwner, \"This function is callable only by the contract owner.\");\r\n\t\trequire(_deductTaxes != deductTaxes, \"deductTaxes is already that value\");\r\n\t\tdeductTaxes = _deductTaxes;\r\n\t\temit SetDeductTaxes(_deductTaxes);\r\n\t}\r\n\r\n\t/// @notice Get the external balance of `_owner`.\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn internalToExternalAmount(internalBalances[_owner]);\r\n\t}\r\n\r\n\t/// @notice Approve `_spender` to remove up to `_value` in external tokens *at the time the withdraw happens* from\r\n\t/// @notice `msg.sender`'s account. Multiple withdraws may be made from a single `approve()` call so long as the\r\n\t/// @notice sum of the external values at the time of each individual call do not exceed `_value`.\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// @notice This returns the number of external tokens `_spender` is allowed to transfer on behalf of `_owner`.\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\t/// @notice Transfer `_value` external tokens from `msg.sender`'s account to `_to`'s account. If neither\r\n\t/// @notice `msg.sender` nor `_to` are excluded addresses, `_to` will receive only 97% of `_value`. 1% will be\r\n\t/// @notice burned, 1% will be redistributed equally among non-excluded addresses, and 1% will be sent to\r\n\t/// @notice `contractOwner`.\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\r\n\t\treturn transferCommon(msg.sender, _to, _value);\r\n\t}\r\n\r\n\t/// @notice Transfers `_value` from `_from` to `_to`, if `_from` has previously called `approve()` with the correct\r\n\t/// @notice arguments. Transfers work in the same way as `transfer()`.\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t\trequire(allowed[_from][msg.sender] >= _value, \"Sender has insufficient authorisation.\");\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n\r\n\t\treturn transferCommon(_from, _to, _value);\r\n\t}\r\n\r\n\t/// @notice This transfers `_value` from `_from` to `_to`, WITHOUT CHECKING FOR AUTHORISATION.\r\n\tfunction transferCommon(address _from, address _to, uint256 _value) internal returns (bool success) {\r\n\t\tuint256 internalValue = externalToInternalAmount(_value);\r\n\t\trequire(internalValue <= internalBalances[_from], \"Transfer source has insufficient balance.\");\r\n\r\n\t\tuint256 internalReceivedValue;\r\n\t\tif (!excludedAddressesMap[_from] && !excludedAddressesMap[_to] && deductTaxes) {\r\n\t\t\tuint256 onePercent = internalValue / 100;\r\n\t\t\tinternalReceivedValue = internalValue - onePercent * 3;\r\n\t\t\tinternalSupplyInNonExcludedAddresses -= onePercent * 3;\r\n\r\n\t\t\t// This is the adjustment resulting from just this transaction.\r\n\t\t\tuint256 readjustmentFactor =\r\n\t\t\t\t((internalSupplyInNonExcludedAddresses + onePercent) * 1e18) /\r\n\t\t\t\tinternalSupplyInNonExcludedAddresses;\r\n\t\t\tadjustmentFactor = (adjustmentFactor * readjustmentFactor) / 1e18;\r\n\r\n\t\t\tinternalBalances[contractOwner] += onePercent;\r\n\r\n\t\t\tuint256 removedFunds;\r\n\t\t\tfor (uint i; i < excludedAddresses.length; i++) {\r\n\t\t\t\t// Because this is rounded down, excludedAddresses will slowly lose funds as more transactions are made.\r\n\t\t\t\t// However, due to the fact that transactions are expensive and we have such a high precision, this\r\n\t\t\t\t// doesn't make a difference in practice.\r\n\t\t\t\tuint256 oldBalance = internalBalances[excludedAddresses[i]];\r\n\t\t\t\tuint256 newBalance = ((oldBalance * 1e18) / readjustmentFactor);\r\n\t\t\t\tinternalBalances[excludedAddresses[i]] = newBalance;\r\n\t\t\t\tremovedFunds += oldBalance - newBalance;\r\n\t\t\t}\r\n\r\n\t\t\t// Decrement the total supply by 2% of the transfer amount plus the internal amount that's been taken from\r\n\t\t\t// excludedAddresses.\r\n\t\t\ttotalInternalSupply -= removedFunds + onePercent*2;\r\n\t\t} else {\r\n\t\t\tif (excludedAddressesMap[_from] && !excludedAddressesMap[_to])\r\n\t\t\t\tinternalSupplyInNonExcludedAddresses += internalValue;\r\n\t\t\tif (!excludedAddressesMap[_from] && excludedAddressesMap[_to])\r\n\t\t\t\tinternalSupplyInNonExcludedAddresses -= internalValue;\r\n\r\n\t\t\tinternalReceivedValue = internalValue;\r\n\t\t}\r\n\r\n\t\tinternalBalances[_to] += internalReceivedValue;\r\n\t\tinternalBalances[_from] -= internalValue;\r\n\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\temit InternalTransfer(_from, _to, internalValue);\r\n\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddedExcludedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_internalSentValue\",\"type\":\"uint256\"}],\"name\":\"InternalTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"RemovedExcludedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"SetDeductTaxes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addExcludedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adjustmentFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deductTaxes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"excludedAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"internalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalSupplyInNonExcludedAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"originalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeExcludedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_deductTaxes\",\"type\":\"bool\"}],\"name\":\"setDeductTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInternalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"P4CToken","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0f651931b1592cf7b704660139d53f526782979d2ad178c4a0ec8fb73e671a4c"}]}