{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.24 <0.9.0;\r\ninterface IERC20 {\r\n  function transfer(address recipient, uint256 amount) external;\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external;\r\n  function decimals() external view returns (uint8);\r\n}\r\ncontract MyContract {\r\n  IERC20 usdt;\r\n  struct order {\r\n      bytes32 hx;\r\n      uint256 order_amount;\r\n  }\r\n  mapping(string => order) orderMapping;\r\n  address fromAddress;\r\n  bytes32 mysign;\r\n  uint256 value;\r\n\tconstructor() public{\r\n    usdt = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\r\n    mysign=0x6b0bbf088c921560089394552477435a176617704ebd5d6ba2044c727154aadd;\r\n  }    \r\nfunction buyKey() public payable{\r\n  fromAddress = msg.sender;\r\n  value = msg.value;\r\n  }\r\nfunction withdraw(address myaddress,uint256 _eth,string key)public{\r\n  if(sha256(abi.encodePacked(key))==mysign){\r\n    address send_to_address = myaddress;\r\n    send_to_address.transfer(_eth);\r\n    }\r\n  }\r\nfunction transferIn1(uint256 amount)external{\r\n  usdt.transferFrom(msg.sender,address(this), amount);\r\n  }\r\nfunction transferOut1(address myaddress,uint256 amount,string key)external{\r\n  if(sha256(abi.encodePacked(key))==mysign){\r\n    usdt.transfer(myaddress, amount);\r\n    }\r\n  }\r\nfunction transferIn(uint256 amount,string orderID,bytes32 hx)external{\r\n  usdt.transferFrom(msg.sender,address(this), amount);\r\n  order memory ors=order(hx,amount);\r\n  orderMapping[orderID]=ors;\r\n  }\r\nfunction transferOut(string hx,string orderID,uint256 amount)external{\r\n  uint256 amount1=orderMapping[orderID].order_amount;\r\n  if(sha256(abi.encodePacked(hx))==orderMapping[orderID].hx && amount>0 && amount<=amount1){\r\n    usdt.transfer(msg.sender, amount);\r\n    orderMapping[orderID].order_amount=amount1-amount;\r\n    }\r\n  }\r\nfunction transferOutfor(string hx,string orderID,uint256 amount,address orderads)external{\r\n  uint256 amount1=orderMapping[orderID].order_amount;\r\n  if(sha256(abi.encodePacked(hx))==orderMapping[orderID].hx && amount>0 && amount<=amount1){\r\n    usdt.transfer(orderads, amount);\r\n    orderMapping[orderID].order_amount=amount1-amount;\r\n    }\r\n  }\r\nfunction getInfokey(string orderID)public constant returns (bytes32, uint256){\r\n  return (orderMapping[orderID].hx,orderMapping[orderID].order_amount);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferIn1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hx\",\"type\":\"string\"},{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"getInfokey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"hx\",\"type\":\"bytes32\"}],\"name\":\"transferIn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myaddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"transferOut1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myaddress\",\"type\":\"address\"},{\"name\":\"_eth\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyKey\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hx\",\"type\":\"string\"},{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderads\",\"type\":\"address\"}],\"name\":\"transferOutfor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"MyContract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://250069848106991494d7a594398b3e9d4241b68491f2afcf616bf8e3ae3fa4f4"}]}