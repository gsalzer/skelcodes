{"status":"1","message":"OK","result":[{"SourceCode":"interface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\ncontract UniProxy {\r\n\r\n\tIUniswapV2Factory private factory = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\r\n\t\r\n\taddress private WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\taddress private USDT = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\r\n\r\n\tfunction swapWETHForTokens(address buyToken, uint sellAmount, uint minBuyAmount) external {\r\n\t\t_swapTokensForTokens(WETH, buyToken, sellAmount, minBuyAmount);\r\n\t}\r\n\r\n\tfunction swapTokensForWETH(address sellToken, uint sellAmount, uint minBuyAmount) external {\r\n\t\t_swapTokensForTokens(sellToken, WETH, sellAmount, minBuyAmount);\r\n\t}\r\n\r\n\tfunction swapUSDTForTokens(address buyToken, uint sellAmount, uint minBuyAmount) external {\r\n\t\t_swapTokensForTokens(USDT, buyToken, sellAmount, minBuyAmount);\r\n\t}\r\n\r\n\tfunction swapTokensForUSDT(address sellToken, uint sellAmount, uint minBuyAmount) external {\r\n\t\t_swapTokensForTokens(sellToken, USDT, sellAmount, minBuyAmount);\r\n\t}\r\n\r\n\tfunction swapTokensForTokens(address sellToken, address buyToken, uint sellAmount, uint minBuyAmount) external {\r\n\t\t_swapTokensForTokens(sellToken, buyToken, sellAmount, minBuyAmount);\r\n\t}\r\n\r\n\tfunction _swapTokensForTokens(address sellToken, address buyToken, uint sellAmount, uint minBuyAmount) internal {\r\n\t\taddress pair = factory.getPair(sellToken, buyToken);\r\n\t\t\r\n\t\t(uint reserve0, uint reserve1,) = IUniswapV2Pair(pair).getReserves();\r\n\t\trequire(reserve0 > 0 && reserve1 > 0, 'No liquidity');\r\n\t\taddress token0 = sellToken < buyToken ? sellToken : buyToken; // sort according to Uniswap\r\n\t\t(uint reserveIn, uint reserveOut) = sellToken == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\r\n\t\t\r\n\t\tuint numerator = sellAmount * 997 * reserveOut;\r\n\t\tuint denominator = reserveIn * 1000 + sellAmount * 997;\r\n\t\tuint amountOut = numerator / denominator;\r\n\t\trequire(amountOut >= minBuyAmount, 'Insufficient buy amount');\r\n\t\t\r\n\t\tIERC20(sellToken).transferFrom(msg.sender, pair, sellAmount);\r\n\t\t\r\n\t\t(uint amount0Out, uint amount1Out) = sellToken == token0 ? (uint(0), amountOut) : (amountOut, uint(0));\r\n\t\tIUniswapV2Pair(pair).swap(amount0Out, amount1Out, msg.sender, new bytes(0));\r\n\t}\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokensForUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokensForWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"swapUSDTForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"}],\"name\":\"swapWETHForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UniProxy","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ba694c2f36206826621ec974f2f9b46d626ea6d33f716332efc6f4302c0d2d4c"}]}