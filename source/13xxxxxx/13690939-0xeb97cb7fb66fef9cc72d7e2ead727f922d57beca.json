{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface IERC20Token {\r\n    function transfer(address _to, uint256 _value) external  returns (bool success);\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n}\r\ncontract POLCVault {\r\n    IERC20Token POLCToken =  IERC20Token(0xaA8330FB2B4D5D07ABFE7A72262752a8505C6B37);  // VERIFY ME!!!\r\n    address public kwallet = 0x4ecC91cCAd7b4b78489792818814e995F562A947;  // VERIFY ME!!\r\n    uint256 public currentStep = 1;\r\n    uint256 public stepAmount = 187500 ether;\r\n    uint256 public stepSize = 30 days;  // VERIFY ME!!!\r\n    uint256 counterStart = 1638230400;\r\n    bool iDone = false;\r\n\r\n    function initialClaim() public {\r\n        require(iDone == false);\r\n        require(counterStart < block.timestamp, \"Must wait claim date\");\r\n        iDone = true;\r\n        POLCToken.transfer(kwallet, (250000 ether));\r\n    }\r\n\r\n    function claimStep() public {\r\n        require(counterStart > 0, \"Contract is not initialized\");\r\n        uint256 nClaim = counterStart + (currentStep * stepSize);\r\n        require(nClaim < block.timestamp, \"Must wait the next claim date\" );\r\n        currentStep += 1;\r\n        require(POLCToken.transfer(kwallet, stepAmount), \"ERC20 transfer error\");\r\n    }\r\n\r\n    function nextPayment() public view returns (uint256 paymentDate){\r\n        paymentDate = counterStart + (currentStep * stepSize);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"name\":\"claimStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kwallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stepAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stepSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"POLCVault","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://668c8e0c71d36604644e2d94473a2d141d3670d32b540ca1205e4c47253f5df9"}]}