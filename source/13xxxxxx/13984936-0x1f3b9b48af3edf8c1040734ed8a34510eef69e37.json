{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/v1/markets/eth/cryptopunks/CryptoPunksMarket.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\n\\ninterface ICryptoPunks {\\n\\n    struct Offer {\\n        bool isForSale;\\n        uint punkIndex;\\n        address seller;\\n        uint minValue;          // in ether\\n        address onlySellTo;     // specify to sell only to a specific person\\n    }\\n\\n    function buyPunk(uint punkIndex) external payable;\\n\\n    function punksOfferedForSale(uint punkIndex) external view returns(Offer memory offer);\\n\\n    // Transfer ownership of a punk to another user without requiring payment\\n    function transferPunk(address to, uint punkIndex) external;\\n}\\n\\nlibrary CryptoPunksMarket {\\n\\n\\n    address public constant CRYPTOPUNKS = 0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB;\\n\\n    function buyAssetsForEth(uint256[] memory punkIndexes, uint256[] memory prices, address recipient) public {\\n        for (uint256 i = 0; i < punkIndexes.length; i++) {\\n            _buyAssetForEth(punkIndexes[i], prices[i], recipient);\\n        }\\n    }\\n\\n    function _buyAssetForEth(uint256 _index, uint256 _price, address _recipient) internal {\\n        bytes memory _data = abi.encodeWithSelector(ICryptoPunks.buyPunk.selector, _index);\\n\\n        (bool success, ) = CRYPTOPUNKS.call{value:_price}(_data);\\n        if (success) {\\n            ICryptoPunks(CRYPTOPUNKS).transferPunk(_recipient, _index);\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"name\":\"CRYPTOPUNKS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CryptoPunksMarket","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}