{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\ncontract Ownable {\r\n\r\n    address internal _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor(address initialOwner) internal {\r\n        require(initialOwner != address(0));\r\n        _owner = initialOwner;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function isOwner() internal view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://eips.ethereum.org/EIPS/eip-20\r\n */\r\n interface IERC20 {\r\n     function transfer(address to, uint256 value) external returns (bool);\r\n     function approve(address spender, uint256 value) external returns (bool);\r\n     function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n     function totalSupply() external view returns (uint256);\r\n     function balanceOf(address who) external view returns (uint256);\r\n     function allowance(address owner, address spender) external view returns (uint256);\r\n     function mint(address to, uint256 value) external returns (bool);\r\n     function burnFrom(address from, uint256 value) external;\r\n\r\n     function freezeAndTransfer(address recipient, uint256 amount, uint256 period) external;\r\n }\r\n\r\n interface IUSDT {\r\n     function totalSupply() external view returns (uint256);\r\n     function balanceOf(address account) external view returns (uint256);\r\n     function transfer(address recipient, uint256 amount) external;\r\n     function allowance(address owner, address spender) external view returns (uint256);\r\n     function approve(address spender, uint256 amount) external;\r\n     function transferFrom(address sender, address recipient, uint256 amount) external;\r\n     function decimals() external view returns(uint8);\r\n }\r\n\r\n contract SSTReseller is Ownable {\r\n\r\n     IUSDT public USDT;\r\n     IERC20 public SST;\r\n\r\n     uint8[] public REFERRAL_PERCENTS = [20, 10, 5, 5, 5];\r\n     uint8 public FEE_PERCENT = 5;\r\n     uint8 public PERCENTS_DIVIDER = 100;\r\n\r\n     uint128 public rate;\r\n     uint32 public period;\r\n     uint64 public minimum;\r\n\r\n     address public boss1 = 0x96f9ED1C9555060da2A04b6250154C9941c1BA5a;\r\n     address public boss2 = 0x96f9ED1C9555060da2A04b6250154C9941c1BA5a;\r\n     address public boss3 = 0xda2233e2b415647cfB3a8389cFA95bbCe716a7D2;\r\n     address public boss4 = 0xda2233e2b415647cfB3a8389cFA95bbCe716a7D2;\r\n\r\n     bool public active;\r\n\r\n     mapping (address => uint64) public interestBalance;\r\n\r\n     event OnBuy(address indexed account, uint256 usdt, uint256 sst, uint256 rate);\r\n     event OnPurchase(address indexed account, uint256 usdt, string comment);\r\n     event OnFreezeAndTransfer(address indexed recipient, uint256 amount, uint256 period);\r\n     event OnRefBonus(address indexed account, address indexed referrer, uint256 level, uint256 bonus);\r\n     event OnWithdraw(address indexed account, uint256 value);\r\n     event OnSetRate(address indexed account, uint256 oldValue, uint256 newValue);\r\n     event OnSetPeriod(address indexed account, uint256 oldValue, uint256 newValue);\r\n     event OnSetMinimum(address indexed account, uint256 oldValue, uint256 newValue);\r\n     event OnWithdrawERC20(address indexed account, address indexed erc20, uint256 value);\r\n     event OnSwitchState(address indexed account, bool indexed active);\r\n     event OnBoss1Deposed(address indexed account, address oldBoss1, address newBoss1);\r\n     event OnBoss2Deposed(address indexed account, address oldBoss2, address newBoss2);\r\n     event OnBoss3Deposed(address indexed account, address oldBoss3, address newBoss3);\r\n     event OnBoss4Deposed(address indexed account, address oldBoss4, address newBoss4);\r\n\r\n     modifier onlyActive {\r\n         require(active, \"Not active\");\r\n         _;\r\n     }\r\n\r\n     constructor(address USDTAddr, address SSTAddr, uint128 initialRate, uint32 initialPeriod, address initialOwner) public Ownable(initialOwner) {\r\n         require(USDTAddr != address(0) && SSTAddr != address(0));\r\n         require(initialRate > 0);\r\n\r\n         USDT = IUSDT(USDTAddr);\r\n         SST = IERC20(SSTAddr);\r\n\r\n         rate = initialRate;\r\n         period = initialPeriod;\r\n\r\n         active = true;\r\n     }\r\n\r\n     function buy(uint256 value, address _ref1, address _ref2, address _ref3, address _ref4, address _ref5) public onlyActive {\r\n         require(value >= minimum, \"Less than minimum\");\r\n         USDT.transferFrom(msg.sender, address(this), value);\r\n\r\n         uint256 total;\r\n         if (_ref1 != address(0) && _ref1 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[0] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref1] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref1, 0, bonus);\r\n         }\r\n\r\n         if (_ref2 != address(0) && _ref2 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[1] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref2] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref2, 1, bonus);\r\n         }\r\n\r\n         if (_ref3 != address(0) && _ref3 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[2] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref3] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref3, 2, bonus);\r\n         }\r\n\r\n         if (_ref4 != address(0) && _ref4 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[3] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref4] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref4, 3, bonus);\r\n         }\r\n\r\n         if (_ref5 != address(0) && _ref5 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[4] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref5] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref5, 4, bonus);\r\n         }\r\n\r\n         uint256 fee = value * FEE_PERCENT / PERCENTS_DIVIDER;\r\n         interestBalance[boss2] += uint64(fee);\r\n         interestBalance[boss1] += uint64(value - fee - total);\r\n\r\n         uint256 amount = getEstimation(value);\r\n\r\n         SST.freezeAndTransfer(msg.sender, amount, period);\r\n\r\n         emit OnBuy(msg.sender, value, amount, rate);\r\n     }\r\n\r\n     function purchase(uint256 value, address _ref1, address _ref2, address _ref3, address _ref4, address _ref5, string memory comment) public onlyActive {\r\n         require(msg.sender == owner() || msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3 || msg.sender == boss4, \"No access\");\r\n         require(value >= minimum, \"Less than minimum\");\r\n         USDT.transferFrom(msg.sender, address(this), value);\r\n\r\n         uint256 total;\r\n         if (_ref1 != address(0) && _ref1 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[0] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref1] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref1, 0, bonus);\r\n         }\r\n\r\n         if (_ref2 != address(0) && _ref2 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[1] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref2] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref2, 1, bonus);\r\n         }\r\n\r\n         if (_ref3 != address(0) && _ref3 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[2] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref3] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref3, 2, bonus);\r\n         }\r\n\r\n         if (_ref4 != address(0) && _ref4 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[3] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref4] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref4, 3, bonus);\r\n         }\r\n\r\n         if (_ref5 != address(0) && _ref5 != msg.sender) {\r\n             uint256 bonus = value * REFERRAL_PERCENTS[4] / PERCENTS_DIVIDER;\r\n             interestBalance[_ref5] += uint64(bonus);\r\n             total += bonus;\r\n             emit OnRefBonus(msg.sender, _ref5, 4, bonus);\r\n         }\r\n\r\n         uint256 fee = value * FEE_PERCENT / PERCENTS_DIVIDER;\r\n         interestBalance[boss2] += uint64(fee);\r\n         interestBalance[boss1] += uint64(value - fee - total);\r\n\r\n         emit OnPurchase(msg.sender, value, comment);\r\n     }\r\n\r\n     function freezeAndTransfer(address recipient, uint256 amount, uint256 _period) public onlyActive {\r\n         require(msg.sender == owner() || msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3 || msg.sender == boss4, \"No access\");\r\n\r\n         SST.freezeAndTransfer(recipient, amount, _period);\r\n\r\n         emit OnFreezeAndTransfer(recipient, amount, _period);\r\n     }\r\n\r\n     function withdraw(uint256 value) public {\r\n         require(value <= interestBalance[msg.sender], \"Not enough balance\");\r\n\r\n         interestBalance[msg.sender] -= uint64(value);\r\n         USDT.transfer(msg.sender, value);\r\n\r\n         emit OnWithdraw(msg.sender, value);\r\n     }\r\n\r\n     function setRate(uint128 newRate) public {\r\n         require(msg.sender == owner() || msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3, \"No access\");\r\n         require(newRate > 0, \"Invalid rate\");\r\n\r\n         emit OnSetRate(msg.sender, rate, newRate);\r\n\r\n         rate = newRate;\r\n     }\r\n\r\n     function setMinimum(uint64 newMinimum) public {\r\n         require(msg.sender == owner() || msg.sender == boss1 || msg.sender == boss2, \"No access\");\r\n         require(newMinimum > 0, \"Invalid rate\");\r\n\r\n         emit OnSetMinimum(msg.sender, minimum, newMinimum);\r\n\r\n         minimum = newMinimum;\r\n     }\r\n\r\n     function setPeriod(uint32 newPeriod) public {\r\n         require(msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3, \"No access\");\r\n         require(newPeriod > 0, \"Invalid rate\");\r\n\r\n         emit OnSetPeriod(msg.sender, period, newPeriod);\r\n\r\n         period = newPeriod;\r\n     }\r\n\r\n     function withdrawERC20(address ERC20Token, address recipient, uint256 value) external {\r\n         require(msg.sender == boss1 || msg.sender == boss2, \"No access\");\r\n\r\n         IERC20(ERC20Token).transfer(recipient, value);\r\n\r\n         emit OnWithdrawERC20(msg.sender, ERC20Token, value);\r\n     }\r\n\r\n     function switchState() public {\r\n         require(msg.sender == owner() || msg.sender == boss1 || msg.sender == boss2, \"No access\");\r\n         active = !active;\r\n\r\n         emit OnSwitchState(msg.sender, active);\r\n     }\r\n\r\n     function deposeBoss1(address newBoss1) public {\r\n         require(msg.sender == boss1 || msg.sender == boss2, \"No access\");\r\n         require(newBoss1 != address(0), \"Zero address\");\r\n\r\n         emit OnBoss1Deposed(msg.sender, boss1, newBoss1);\r\n\r\n         boss1 = newBoss1;\r\n     }\r\n\r\n     function deposeBoss2(address newBoss2) public {\r\n         require(msg.sender == owner() || msg.sender == boss1, \"No access\");\r\n         require(newBoss2 != address(0), \"Zero address\");\r\n\r\n         emit OnBoss2Deposed(msg.sender, boss2, newBoss2);\r\n\r\n         boss2 = newBoss2;\r\n     }\r\n\r\n     function deposeBoss3(address newBoss3) public {\r\n         require(msg.sender == owner() || msg.sender == boss1, \"No access\");\r\n         require(newBoss3 != address(0), \"Zero address\");\r\n\r\n         emit OnBoss3Deposed(msg.sender, boss3, newBoss3);\r\n\r\n         boss3 = newBoss3;\r\n     }\r\n\r\n     function deposeBoss4(address newBoss4) public {\r\n         require(msg.sender == owner() || msg.sender == boss1, \"No access\");\r\n         require(newBoss4 != address(0), \"Zero address\");\r\n\r\n         emit OnBoss4Deposed(msg.sender, boss4, newBoss4);\r\n\r\n         boss4 = newBoss4;\r\n     }\r\n\r\n     function getEstimation(uint256 amount) public view returns(uint256) {\r\n         uint256 result = amount * rate;\r\n         require(result >= amount);\r\n         return amount * rate;\r\n     }\r\n\r\n     function allowanceUSDT(address account) public view returns(uint256) {\r\n         return USDT.allowance(account, address(this));\r\n     }\r\n\r\n     function allowanceSST(address account) public view returns(uint256) {\r\n         return SST.allowance(account, address(this));\r\n     }\r\n\r\n     function balanceUSDT(address account) public view returns(uint256) {\r\n         return USDT.balanceOf(account);\r\n     }\r\n\r\n     function balanceSST(address account) public view returns(uint256) {\r\n         return SST.balanceOf(account);\r\n     }\r\n\r\n }","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"USDTAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SSTAddr\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"initialRate\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"initialPeriod\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldBoss1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBoss1\",\"type\":\"address\"}],\"name\":\"OnBoss1Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldBoss2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBoss2\",\"type\":\"address\"}],\"name\":\"OnBoss2Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldBoss3\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBoss3\",\"type\":\"address\"}],\"name\":\"OnBoss3Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldBoss4\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBoss4\",\"type\":\"address\"}],\"name\":\"OnBoss4Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sst\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"OnBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"OnFreezeAndTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"OnPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"OnRefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"OnSetMinimum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"OnSetPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"OnSetRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"OnSwitchState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"OnWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"OnWithdrawERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"REFERRAL_PERCENTS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SST\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IUSDT\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowanceSST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowanceUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceSST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ref1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref4\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref5\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBoss1\",\"type\":\"address\"}],\"name\":\"deposeBoss1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBoss2\",\"type\":\"address\"}],\"name\":\"deposeBoss2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBoss3\",\"type\":\"address\"}],\"name\":\"deposeBoss3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBoss4\",\"type\":\"address\"}],\"name\":\"deposeBoss4\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"freezeAndTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getEstimation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"interestBalance\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimum\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ref1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref4\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref5\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newMinimum\",\"type\":\"uint64\"}],\"name\":\"setMinimum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newPeriod\",\"type\":\"uint32\"}],\"name\":\"setPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newRate\",\"type\":\"uint128\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"switchState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SSTReseller","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000002863916c6ebdbbf0c6f02f87b7eb4785092998680000000000000000000000000000000000000000000000000000009502f900000000000000000000000000000000000000000000000000000000000000f14280000000000000000000000000a9eebff951da440d92dd3ab248819113b0158c25","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3a5b7b4148a798c3b32aee69b43a971cb33e15390b0dc4d2ef621daff0bd6fb7"}]}