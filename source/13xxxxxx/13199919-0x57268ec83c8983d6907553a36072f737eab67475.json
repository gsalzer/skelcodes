{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: Unlicense\r\n\r\n/*\r\n  (w) (a) (g) (m) (i)\r\n  by dom\r\n*/\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract Wagmipet {\r\n    address _owner;\r\n    bool _birthed;\r\n    \r\n    event CaretakerLoved(address indexed caretaker, uint256 indexed amount);\r\n    \r\n    uint256 lastFeedBlock;\r\n    uint256 lastCleanBlock;\r\n    uint256 lastPlayBlock;\r\n    uint256 lastSleepBlock;\r\n    \r\n    uint8 internal hunger;\r\n    uint8 internal uncleanliness;\r\n    uint8 internal boredom;\r\n    uint8 internal sleepiness;\r\n    \r\n    mapping (address => uint256) public love;\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner);\r\n        _;\r\n    }\r\n    \r\n    constructor() {\r\n        _owner = msg.sender;\r\n        lastFeedBlock = block.number;\r\n        lastCleanBlock = block.number;\r\n        lastPlayBlock = block.number;\r\n        lastSleepBlock = block.number;\r\n        \r\n        hunger = 0;\r\n        uncleanliness = 0;\r\n        boredom = 0;\r\n        sleepiness = 0;\r\n    }\r\n    \r\n    function addLove(address caretaker, uint256 amount) internal {\r\n        love[caretaker] += amount;\r\n        emit CaretakerLoved(caretaker, amount);\r\n    }\r\n    \r\n    function feed() public {\r\n        require(getAlive(), \"no longer with us\");\r\n        require(getBoredom() < 80, \"im too tired to eat\");\r\n        \r\n        lastFeedBlock = block.number;\r\n        \r\n        hunger = 0;\r\n        boredom += 10;\r\n        uncleanliness += 3;\r\n\r\n        addLove(msg.sender, 1);\r\n    }\r\n    \r\n    function clean() public {\r\n        require(getAlive(), \"no longer with us\");\r\n        lastCleanBlock = block.number;\r\n        \r\n        uncleanliness = 0;\r\n        \r\n        addLove(msg.sender, 1);\r\n    }\r\n    \r\n    function play() public {\r\n        require(getAlive(), \"no longer with us\");\r\n        require(getHunger() < 80, \"too hungry to play\");\r\n        \r\n        lastPlayBlock = block.number;\r\n        \r\n        boredom = 0;\r\n        hunger += 10;\r\n        sleepiness += 10;\r\n        uncleanliness += 5;\r\n        \r\n        addLove(msg.sender, 1);\r\n    }\r\n    \r\n    function sleep() public {\r\n        require(getAlive(), \"no longer with us\");\r\n        require(getBoredom() < 80, \"im too restless to sleep\");\r\n        require(getSleepiness() > 20, \"im not feeling sleepy\");\r\n        \r\n        lastSleepBlock = block.number;\r\n        \r\n        sleepiness = 0;\r\n        uncleanliness += 5;\r\n        \r\n        addLove(msg.sender, 1);\r\n    }\r\n    \r\n    function getStatus() public view returns (string memory) {\r\n        uint256 mostNeeded = 0;\r\n        \r\n        string[4] memory goodStatus = [\r\n            \"gm\",\r\n            \"im feeling great\",\r\n            \"all good\",\r\n            \"i love u\"\r\n        ];\r\n        \r\n        string memory status = goodStatus[block.number % 4];\r\n        \r\n        uint256 _hunger = getHunger();\r\n        uint256 _uncleanliness = getUncleanliness();\r\n        uint256 _boredom = getBoredom();\r\n        uint256 _sleepiness = getSleepiness();\r\n        \r\n        if (getAlive() == false) {\r\n            return \"no longer with us\";\r\n        }\r\n        \r\n        if (_hunger > 50 && _hunger > mostNeeded) {\r\n            mostNeeded = _hunger;\r\n            status = \"im hungry\";\r\n        }\r\n        \r\n        if (_uncleanliness > 50 && _uncleanliness > mostNeeded) {\r\n            mostNeeded = _uncleanliness;\r\n            status = \"i need a bath\";\r\n        }\r\n        \r\n        if (_boredom > 50 && _boredom > mostNeeded) {\r\n            mostNeeded = _boredom;\r\n            status = \"im bored\";\r\n        }\r\n        \r\n        if (_sleepiness > 50 && _sleepiness > mostNeeded) {\r\n            mostNeeded = _sleepiness;\r\n            status = \"im sleepy\";\r\n        }\r\n        \r\n        return status;\r\n    }\r\n    \r\n    function getAlive() public view returns (bool) {\r\n        return getHunger() < 101 && getUncleanliness() < 101 &&\r\n            getBoredom() < 101 && getSleepiness() < 101;\r\n    }\r\n    \r\n    function getHunger() public view returns (uint256) {\r\n        return hunger + ((block.number - lastFeedBlock) / 50);\r\n    }\r\n    \r\n    function getUncleanliness() public view returns (uint256) {\r\n        return uncleanliness + ((block.number - lastCleanBlock) / 50);\r\n    }\r\n    \r\n    function getBoredom() public view returns (uint256) {\r\n        return boredom + ((block.number - lastPlayBlock) / 50);\r\n    }\r\n    \r\n    function getSleepiness() public view returns (uint256) {\r\n        return sleepiness + ((block.number - lastSleepBlock) / 50);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caretaker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CaretakerLoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"clean\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAlive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoredom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHunger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSleepiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncleanliness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"love\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Wagmipet","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://eae936025d2ee5a287dee03885363befd63c277ec49b1ff1411e17efb8752967"}]}