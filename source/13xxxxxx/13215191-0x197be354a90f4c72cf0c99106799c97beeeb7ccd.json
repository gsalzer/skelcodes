{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n// built by @nanexcool for his OCD friend\r\npragma solidity ^0.8.6;\r\n\r\ninterface IDepositContract {\r\n    /// @notice A processed deposit event.\r\n    event DepositEvent(\r\n        bytes pubkey,\r\n        bytes withdrawal_credentials,\r\n        bytes amount,\r\n        bytes signature,\r\n        bytes index\r\n    );\r\n\r\n    /// @notice Submit a Phase 0 DepositData object.\r\n    /// @param pubkey A BLS12-381 public key.\r\n    /// @param withdrawal_credentials Commitment to a public key for withdrawals.\r\n    /// @param signature A BLS12-381 signature.\r\n    /// @param deposit_data_root The SHA-256 hash of the SSZ-encoded DepositData object.\r\n    /// Used as a protection against malformed input.\r\n    function deposit(\r\n        bytes calldata pubkey,\r\n        bytes calldata withdrawal_credentials,\r\n        bytes calldata signature,\r\n        bytes32 deposit_data_root\r\n    ) external payable;\r\n}\r\n\r\ncontract Eth2MultiDeposit {\r\n    IDepositContract constant dc =\r\n        IDepositContract(0x00000000219ab540356cBB839Cbe05303d7705Fa);\r\n\r\n    function deposit(\r\n        bytes[] calldata pubkey,\r\n        bytes[] calldata withdrawal_credentials,\r\n        bytes[] calldata signature,\r\n        bytes32[] calldata deposit_data_root\r\n    ) external payable {\r\n        unchecked {\r\n            for (uint256 i = 0; i < pubkey.length; i++) {\r\n                dc.deposit{value: 32 ether}(\r\n                    pubkey[i],\r\n                    withdrawal_credentials[i],\r\n                    signature[i],\r\n                    deposit_data_root[i]\r\n                );\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"pubkey\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"withdrawal_credentials\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signature\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"deposit_data_root\",\"type\":\"bytes32[]\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Eth2MultiDeposit","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://638e013414a87d16e5978aee95546a48677abd8699e5287b22ac29a262f8002a"}]}