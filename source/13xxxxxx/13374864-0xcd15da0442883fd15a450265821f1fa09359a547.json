{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/sterlingcrispin/code/ConceptualLandscapesCONCEPT/Messages/contracts/StringHell.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Mixed...\\npragma solidity ^0.8.0;\\n\\n/// @title StringHell\\n/// @notice If you know a smarter way I could have done this feel free to email me\\n/// @author Sterling Crispin <sterlingcrispin@gmail.com>\\n/// my contract is giant \\n/// I had to do something with these strings\\nlibrary StringHell {\\n    string internal constant svgStart = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 400 400\\\" width=\\\"800\\\" height=\\\"800\\\"><defs><linearGradient id=\\\"grad\\\"  x1=\\\"0\\\" x2=\\\"0\\\" y1=\\\"0\\\" y2=\\\"1\\\"><stop offset=\\\"0%\\\" stop-color=\\\"dimgrey\\\" /><stop offset=\\\"10%\\\" stop-color=\\\"black\\\" /></linearGradient><radialGradient id=\\\"grad2\\\" cx=\\\"0.5\\\" cy=\\\"0.9\\\" r=\\\"1.2\\\" fx=\\\"0.5\\\" fy=\\\"0.9\\\" spreadMethod=\\\"repeat\\\"><stop offset=\\\"0%\\\" stop-color=\\\"red\\\"/><stop offset=\\\"100%\\\" stop-color=\\\"blue\\\"/></radialGradient></defs><style>.base { fill:';\\n    string internal constant svgO1 = 'font-family: monospace; font-size: 15px; }</style><rect y=\\\"8\\\" width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grad';\\n    string internal constant svgEnd = '<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"none\\\" stroke=\\\"dimgrey\\\" stroke-width=\\\"20\\\"/><circle cx=\\\"20\\\" cy=\\\"395\\\" r=\\\"3\\\" fill=\\\"limegreen\\\"/></svg>';\\n    string internal constant svgB1 = '<rect y=\\\"50%\\\" width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grad';\\n    string internal constant svgO3 = '<text x=\\\"20\\\" y=\\\"60\\\" class=\\\"base\\\">//usr: ';\\n    string internal constant svgP2 = '<text x=\\\"20\\\" y=\\\"250\\\" class=\\\"base\\\">//pub: '; \\n    string internal constant desc = '\\\", \\\"description\\\": \\\"Message is an experiment in communication. Write via contract, refresh metadata. Be nice. https://sterlingcrispin.com/message.html\\\",';\\n    string internal constant json = 'data:application/json;base64,';\\n    string internal constant jsonStub = '], \\\"image\\\": \\\"data:image/svg+xml;base64,';\\n    \\n    function SvgStart() external pure returns (string memory){\\n        return svgStart;\\n    }\\n    function SvgO1() external pure returns (string memory){\\n        return svgO1;\\n    }\\n    function SvgEnd() external pure returns (string memory){\\n        return svgEnd;\\n    }\\n    function SvgB1() external pure returns (string memory){\\n        return svgB1;\\n    }\\n    function SvgO3() external pure returns (string memory){\\n        return svgO3;\\n    }\\n    function SvgP2() external pure returns (string memory){\\n        return svgP2;\\n    }\\n    function Desc() external pure returns (string memory){\\n        return desc;\\n    }\\n    function Json() external pure returns (string memory){\\n        return json;\\n    }\\n    function JsonStub() external pure returns (string memory){\\n        return jsonStub;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 20\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"name\":\"Desc\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Json\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JsonStub\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgB1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgEnd\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgO1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgO3\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgP2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SvgStart\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"StringHell","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"20","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}