{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface EdenNetwork {\r\n    function stakeFor(address recipient, uint128 amount) external;\r\n}\r\n\r\ncontract Poker {\r\n    address constant EDEN_NETWORK = 0x9E3382cA57F4404AC7Bf435475EAe37e87D1c453;\r\n    address constant EDEN_TOKEN = 0x1559FA1b8F28238FD5D76D9f434ad86FD20D1559;\r\n\r\n    address owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        IERC20(EDEN_TOKEN).approve(EDEN_NETWORK, type(uint256).max);\r\n    }\r\n\r\n    function poke(address[] calldata addresses) public {\r\n        require(msg.sender == owner);\r\n        for (uint i = 0 ; i < addresses.length ; ++i) {\r\n            EdenNetwork(EDEN_NETWORK).stakeFor(addresses[i], 1 ether);\r\n        }\r\n    }\r\n\r\n    function rescue(address _token) public {\r\n        require(msg.sender == owner);\r\n        IERC20 token = IERC20(_token);\r\n        token.transfer(msg.sender, token.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Poker","CompilerVersion":"v0.8.11+commit.d7f03943","OptimizationUsed":"1","Runs":"9999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://92eeb3391641d188450752b17b612cdb7ad002ff54f9c7162e5b0ec10825c6e2"}]}