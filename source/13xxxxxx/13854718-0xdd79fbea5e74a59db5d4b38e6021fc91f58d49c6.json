{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/CritterzMetadata.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\\\";\\nimport \\\"./libraries/Base64.sol\\\";\\nimport \\\"./libraries/FormatMetadata.sol\\\";\\nimport \\\"./libraries/StringList.sol\\\";\\nimport \\\"./layers/ITrait.sol\\\";\\nimport \\\"./layers/Bodies.sol\\\";\\nimport \\\"./layers/Eyes.sol\\\";\\nimport \\\"./layers/Hats.sol\\\";\\nimport \\\"./layers/Mouths.sol\\\";\\nimport \\\"./layers/Pants.sol\\\";\\nimport \\\"./layers/Tops.sol\\\";\\nimport \\\"./ICritterzMetadata.sol\\\";\\n\\ncontract CritterzMetadata is ICritterzMetadata, Ownable, VRFConsumerBase {\\n  using Base64 for bytes;\\n  using Strings for uint256;\\n  using StringList for string[];\\n\\n  string internal constant HEADER =\\n    '<svg id=\\\"critterz\\\" width=\\\"100%\\\" height=\\\"100%\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 64 64\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">';\\n  string internal constant FRONT_HEADER_PLACEHOLDER =\\n    '<svg id=\\\"critterz\\\" width=\\\"100%\\\" height=\\\"100%\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">';\\n  string internal constant FRONT_HEADER =\\n    '<svg id=\\\"critterz\\\" width=\\\"100%\\\" height=\\\"100%\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"background-color:';\\n  string internal constant FRONT_HEADER_CLOSING = '\\\">';\\n  string internal constant FOOTER =\\n    \\\"<style>#critterz{shape-rendering: crispedges; image-rendering: -webkit-crisp-edges; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges; image-rendering: pixelated; -ms-interpolation-mode: nearest-neighbor;}</style></svg>\\\";\\n\\n  string internal constant PNG_HEADER =\\n    '<image x=\\\"0\\\" y=\\\"0\\\" width=\\\"64\\\" height=\\\"64\\\" image-rendering=\\\"pixelated\\\" preserveAspectRatio=\\\"xMidYMid\\\" xlink:href=\\\"data:image/png;base64,';\\n  string internal constant PNG_HEADER_PLACEHOLDER =\\n    '<image x=\\\"0\\\" y=\\\"0\\\" width=\\\"40\\\" height=\\\"40\\\" image-rendering=\\\"pixelated\\\" preserveAspectRatio=\\\"xMidYMid\\\" xlink:href=\\\"data:image/png;base64,';\\n  string internal constant PNG_FRONT_HEADER =\\n    '<image x=\\\"12\\\" y=\\\"4\\\" width=\\\"16\\\" height=\\\"32\\\" image-rendering=\\\"pixelated\\\" preserveAspectRatio=\\\"xMidYMid\\\" xlink:href=\\\"data:image/png;base64,';\\n  string internal constant PNG_FRONT_ARMOR_HEADER =\\n    '<image x=\\\"11\\\" y=\\\"3\\\" width=\\\"18\\\" height=\\\"36\\\" image-rendering=\\\"pixelated\\\" preserveAspectRatio=\\\"xMidYMid\\\" xlink:href=\\\"data:image/png;base64,';\\n  string internal constant PNG_FOOTER = '\\\"/>';\\n\\n  string internal constant STAKED_LAYER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAAAeDwA4HABcLRlnPizWq/oQAAAAAXRSTlMAQObYZgAAAC9JREFUGNNjYBgsQAlKM5koQBgqzhAGk7GTAJgh7GIEYYiYKELVOkMZDEICtHEVAG0PAxFGcat9AAAAAElFTkSuQmCC\\\";\\n\\n  string internal constant PLACEHOLDER_LAYER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAACgAAAAoBAMAAAB+0KVeAAAAElBMVEVQOAPvmQDxwgD/0Aro6N/////AfLfFAAAAiUlEQVQoz63S0QnDMAwE0ANN4GaDm8Do6ACFDFAo2n+VOh8lQdaHodHnwzpjydiLwk2oURPCCuyCFe1da5kbzDO+WhNnfDCj1LYzFec1FUbM+Iz4ZPQAQp7RFJaxVzhS3wUGciaPg7+HXlEJSQkiV+Z5tC/iyFzbUY0u/wc5r3h3+owkeff3vtYXMN7FTEvCxhsAAAAASUVORK5CYII=\\\";\\n\\n  address public bodies;\\n  address public eyes;\\n  address public mouths;\\n  address public pants;\\n  address public tops;\\n  address public hats;\\n  address public backgrounds;\\n\\n  uint256 public override seed;\\n\\n  bytes32 internal keyHash;\\n  uint256 internal fee;\\n\\n  string internal _description;\\n\\n  string internal _stakedDescription;\\n\\n  struct TraitLayer {\\n    string name;\\n    string skinLayer;\\n    string frontLayer;\\n    string frontArmorLayer;\\n    uint256 bodyIndex;\\n  }\\n\\n  constructor(\\n    address _bodies,\\n    address _eyes,\\n    address _mouths,\\n    address _pants,\\n    address _tops,\\n    address _hats,\\n    address _backgrounds,\\n    address _vrfCoordinator,\\n    address _link,\\n    bytes32 _keyHash,\\n    uint256 _fee\\n  ) VRFConsumerBase(_vrfCoordinator, _link) {\\n    bodies = _bodies;\\n    eyes = _eyes;\\n    mouths = _mouths;\\n    pants = _pants;\\n    tops = _tops;\\n    hats = _hats;\\n    backgrounds = _backgrounds;\\n    keyHash = _keyHash;\\n    fee = _fee;\\n\\n    _description = \\\"The first fully on-chain NFT collection to enable P2E while playing Minecraft. Stake to generate $BLOCK tokens in-game and use $BLOCK tokens to claim Plots of in-game land as NFTs.\\\";\\n    _stakedDescription = \\\"You should ONLY get staked Critterz from here if you want to RENT a Critter. These are NOT the same as Critterz NFTs -- staked Critterz have a steak in their hands. Rented Critterz also give access to the Critterz Minecraft world but generates less $BLOCK and are time limited.\\\";\\n  }\\n\\n  /*\\n  READ FUNCTIONS\\n  */\\n\\n  function getMetadata(\\n    uint256 tokenId,\\n    bool staked,\\n    string[] calldata additionalAttributes\\n  ) external view override returns (string memory) {\\n    TraitLayer[8] memory traitLayers;\\n\\n    traitLayers[0] = _getTrait(bodies, tokenId, 0);\\n    traitLayers[1] = _getTrait(eyes, tokenId, traitLayers[0].bodyIndex % 6);\\n    traitLayers[2] = _getTrait(mouths, tokenId, traitLayers[0].bodyIndex % 6);\\n    traitLayers[3] = _getTrait(pants, tokenId, 0);\\n    traitLayers[4] = _getTrait(tops, tokenId, 0);\\n    traitLayers[5] = _getTrait(hats, tokenId, 0);\\n    traitLayers[6] = _getTrait(backgrounds, tokenId, 0);\\n\\n    string memory skinSvg = _getSkinSvg(\\n      traitLayers[0].skinLayer,\\n      traitLayers[1].skinLayer,\\n      traitLayers[2].skinLayer,\\n      traitLayers[3].skinLayer,\\n      traitLayers[4].skinLayer,\\n      traitLayers[5].skinLayer\\n    );\\n\\n    string memory frontSvg = _getFrontSvg(\\n      traitLayers[0].frontLayer,\\n      traitLayers[1].frontLayer,\\n      traitLayers[2].frontLayer,\\n      traitLayers[3].frontLayer,\\n      traitLayers[4].frontLayer,\\n      traitLayers[5].frontLayer,\\n      traitLayers[5].frontArmorLayer,\\n      traitLayers[6].frontLayer,\\n      staked\\n    );\\n\\n    string[] memory attributes = _getAttributes(\\n      traitLayers[0].name,\\n      traitLayers[1].name,\\n      traitLayers[2].name,\\n      traitLayers[3].name,\\n      traitLayers[4].name,\\n      traitLayers[5].name,\\n      traitLayers[6].name,\\n      additionalAttributes\\n    );\\n\\n    return _formatMetadata(tokenId, skinSvg, frontSvg, attributes, staked);\\n  }\\n\\n  function getPlaceholderMetadata(\\n    uint256 tokenId,\\n    bool staked,\\n    string[] calldata additionalAttributes\\n  ) external view override returns (string memory) {\\n    string memory svg = _getPlaceholderSvg(staked);\\n    return _formatMetadata(tokenId, svg, svg, additionalAttributes, staked);\\n  }\\n\\n  function _getFrontSvg(\\n    string memory bodyLayer,\\n    string memory eyeLayer,\\n    string memory mouthLayer,\\n    string memory pantsLayer,\\n    string memory topLayer,\\n    string memory hatLayer,\\n    string memory hatFrontLayer,\\n    string memory backgroundHex,\\n    bool staked\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          _formatBackgroundHeader(backgroundHex),\\n          _formatLayer(bodyLayer, true, false),\\n          _formatLayer(eyeLayer, true, false),\\n          _formatLayer(mouthLayer, true, false),\\n          _formatLayer(pantsLayer, true, false),\\n          _formatLayer(topLayer, true, false),\\n          _formatLayer(hatLayer, true, false),\\n          _formatLayer(hatFrontLayer, true, true),\\n          staked ? _formatLayer(STAKED_LAYER, true, false) : \\\"\\\",\\n          FOOTER\\n        )\\n      );\\n  }\\n\\n  function _getSkinSvg(\\n    string memory bodyLayer,\\n    string memory eyeLayer,\\n    string memory mouthLayer,\\n    string memory pantsLayer,\\n    string memory topLayer,\\n    string memory hatLayer\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          HEADER,\\n          _formatLayer(bodyLayer, false, false),\\n          _formatLayer(eyeLayer, false, false),\\n          _formatLayer(mouthLayer, false, false),\\n          _formatLayer(pantsLayer, false, false),\\n          _formatLayer(topLayer, false, false),\\n          _formatLayer(hatLayer, false, false),\\n          FOOTER\\n        )\\n      );\\n  }\\n\\n  function _getPlaceholderSvg(bool staked)\\n    internal\\n    pure\\n    returns (string memory)\\n  {\\n    return\\n      string(\\n        abi.encodePacked(\\n          FRONT_HEADER_PLACEHOLDER,\\n          string(abi.encodePacked(PNG_HEADER_PLACEHOLDER, PLACEHOLDER_LAYER, PNG_FOOTER)),\\n          staked ? _formatLayer(STAKED_LAYER, true, false) : \\\"\\\",\\n          FOOTER\\n        )\\n      );\\n  }\\n\\n  function _getAttributes(\\n    string memory bodyName,\\n    string memory eyeName,\\n    string memory mouthName,\\n    string memory pantsName,\\n    string memory topName,\\n    string memory hatName,\\n    string memory backgroundName,\\n    string[] memory additionalAttributes\\n  ) internal pure returns (string[] memory) {\\n    string[] memory attributes = new string[](7);\\n    attributes[0] = FormatMetadata.formatTraitString(\\\"Body\\\", bodyName);\\n    attributes[1] = FormatMetadata.formatTraitString(\\\"Eye\\\", eyeName);\\n    attributes[2] = FormatMetadata.formatTraitString(\\\"Mouth\\\", mouthName);\\n    attributes[3] = FormatMetadata.formatTraitString(\\\"Pants\\\", pantsName);\\n    attributes[4] = FormatMetadata.formatTraitString(\\\"Top\\\", topName);\\n    attributes[5] = FormatMetadata.formatTraitString(\\\"Hat\\\", hatName);\\n    attributes[6] = FormatMetadata.formatTraitString(\\n      \\\"Background\\\",\\n      backgroundName\\n    );\\n\\n    return attributes.concat(additionalAttributes);\\n  }\\n\\n  function _getTrait(\\n    address trait,\\n    uint256 tokenId,\\n    uint256 layerIndex\\n  ) public view returns (TraitLayer memory) {\\n    {\\n      ITrait traitContract = ITrait(trait);\\n      uint256 index;\\n      uint256 nonce;\\n      string memory name;\\n      string memory skinLayer;\\n      // resample if layer doesn't exist on sampled trait\\n      while (bytes(skinLayer).length == 0 && nonce < 15) {\\n        index = traitContract.sampleTraitIndex(\\n          _random(trait, tokenId, nonce++)\\n        );\\n        name = traitContract.getName(index);\\n        // skin layer doesn't have background trait and all background layers\\n        // are valid. If name is empty, it means trait is \\\"None\\\"\\n        if (trait == backgrounds || bytes(name).length == 0) {\\n          break;\\n        }\\n        skinLayer = traitContract.getSkinLayer(index, layerIndex);\\n      }\\n      string memory frontLayer = traitContract.getFrontLayer(index, layerIndex);\\n      string memory frontArmorLayer = traitContract.getFrontArmorLayer(\\n        index,\\n        layerIndex\\n      );\\n      TraitLayer memory traitStruct = TraitLayer(\\n        name,\\n        skinLayer,\\n        frontLayer,\\n        frontArmorLayer,\\n        index\\n      );\\n      return traitStruct;\\n    }\\n  }\\n\\n  function _formatMetadata(\\n    uint256 tokenId,\\n    string memory svg,\\n    string memory frontSvg,\\n    string[] memory attributes,\\n    bool staked\\n  ) internal view returns (string memory) {\\n    return\\n      FormatMetadata.formatMetadata(\\n        string(\\n          abi.encodePacked(staked ? \\\"s\\\" : \\\"\\\", \\\"Critterz #\\\", tokenId.toString())\\n        ),\\n        staked ? _stakedDescription : _description,\\n        string(\\n          abi.encodePacked(\\n            \\\"data:image/svg+xml;base64,\\\",\\n            bytes(frontSvg).encode()\\n          )\\n        ),\\n        attributes,\\n        string(\\n          abi.encodePacked(\\n            '\\\"skinImage\\\": \\\"data:image/svg+xml;base64,',\\n            bytes(svg).encode(),\\n            '\\\"'\\n          )\\n        )\\n      );\\n  }\\n\\n  function _formatLayer(\\n    string memory layer,\\n    bool frontView,\\n    bool armorLayer\\n  ) internal pure returns (string memory) {\\n    if (!frontView) {\\n      assert(!armorLayer);\\n    }\\n    if (bytes(layer).length == 0) {\\n      return \\\"\\\";\\n    }\\n    if (frontView) {\\n      if (armorLayer) {\\n        return\\n          string(abi.encodePacked(PNG_FRONT_ARMOR_HEADER, layer, PNG_FOOTER));\\n      } else {\\n        return string(abi.encodePacked(PNG_FRONT_HEADER, layer, PNG_FOOTER));\\n      }\\n    } else {\\n      return string(abi.encodePacked(PNG_HEADER, layer, PNG_FOOTER));\\n    }\\n  }\\n\\n  // Background exists only for the front view\\n  function _formatBackgroundHeader(string memory backgroundHex)\\n    internal\\n    pure\\n    returns (string memory)\\n  {\\n    return\\n      string(\\n        abi.encodePacked(FRONT_HEADER, backgroundHex, FRONT_HEADER_CLOSING)\\n      );\\n  }\\n\\n  function _random(\\n    address trait,\\n    uint256 tokenId,\\n    uint256 nonce\\n  ) internal view returns (uint256) {\\n    return\\n      uint256(\\n        keccak256(\\n          abi.encodePacked(\\n            seed,\\n            trait,\\n            tokenId,\\n            keccak256(abi.encodePacked(nonce))\\n          )\\n        )\\n      );\\n  }\\n\\n  /*\\n  OWNER FUNCTIONS\\n  */\\n\\n  function setAddresses(\\n    address _bodies,\\n    address _eyes,\\n    address _mouths,\\n    address _tops,\\n    address _pants,\\n    address _hats\\n  ) external onlyOwner {\\n    bodies = _bodies;\\n    eyes = _eyes;\\n    mouths = _mouths;\\n    tops = _tops;\\n    pants = _pants;\\n    hats = _hats;\\n  }\\n\\n  function setDescription(string calldata description) external onlyOwner {\\n    _description = description;\\n  }\\n\\n  function setStakedDescription(string calldata stakedDescription)\\n    external\\n    onlyOwner\\n  {\\n    _stakedDescription = stakedDescription;\\n  }\\n\\n  function initializeSeed() external onlyOwner returns (bytes32 requestId) {\\n    require(seed == 0, \\\"Seed already initialized\\\");\\n    return requestRandomness(keyHash, fee);\\n  }\\n\\n  /**\\n   * Callback function used by VRF Coordinator\\n   */\\n  function fulfillRandomness(bytes32, uint256 randomness) internal override {\\n    seed = randomness;\\n  }\\n}\\n\"\r\n    },\r\n    \"hardhat/console.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\"\r\n    },\r\n    \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/LinkTokenInterface.sol\\\";\\n\\nimport \\\"./VRFRequestIDBase.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constuctor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash), and have told you the minimum LINK\\n * @dev price for VRF service. Make sure your contract has sufficient LINK, and\\n * @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\\n * @dev want to generate randomness from.\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomness method.\\n *\\n * @dev The randomness argument to fulfillRandomness is the actual random value\\n * @dev generated from your seed.\\n *\\n * @dev The requestId argument is generated from the keyHash and the seed by\\n * @dev makeRequestId(keyHash, seed). If your contract could have concurrent\\n * @dev requests open, you can use the requestId to track which seed is\\n * @dev associated with which randomness. See VRFRequestIDBase.sol for more\\n * @dev details. (See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.)\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ. (Which is critical to making unpredictable randomness! See the\\n * @dev next section.)\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\\n * @dev block in which the request is made, user-provided seeds have no impact\\n * @dev on its economic security properties. They are only included for API\\n * @dev compatability with previous versions of this contract.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request.\\n */\\nabstract contract VRFConsumerBase is VRFRequestIDBase {\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBase expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomness the VRF output\\n   */\\n  function fulfillRandomness(\\n    bytes32 requestId,\\n    uint256 randomness\\n  )\\n    internal\\n    virtual;\\n\\n  /**\\n   * @dev In order to keep backwards compatibility we have kept the user\\n   * seed field around. We remove the use of it because given that the blockhash\\n   * enters later, it overrides whatever randomness the used seed provides.\\n   * Given that it adds no security, and can easily lead to misunderstandings,\\n   * we have removed it from usage and can now provide a simpler API.\\n   */\\n  uint256 constant private USER_SEED_PLACEHOLDER = 0;\\n\\n  /**\\n   * @notice requestRandomness initiates a request for VRF output given _seed\\n   *\\n   * @dev The fulfillRandomness method receives the output, once it's provided\\n   * @dev by the Oracle, and verified by the vrfCoordinator.\\n   *\\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\\n   * @dev the _fee must exceed the fee specified during registration of the\\n   * @dev _keyHash.\\n   *\\n   * @dev The _seed parameter is vestigial, and is kept only for API\\n   * @dev compatibility with older versions. It can't *hurt* to mix in some of\\n   * @dev your own randomness, here, but it's not necessary because the VRF\\n   * @dev oracle will mix the hash of the block containing your request into the\\n   * @dev VRF seed it ultimately uses.\\n   *\\n   * @param _keyHash ID of public key against which randomness is generated\\n   * @param _fee The amount of LINK to send with the request\\n   *\\n   * @return requestId unique ID for this request\\n   *\\n   * @dev The returned requestId can be used to distinguish responses to\\n   * @dev concurrent requests. It is passed as the first argument to\\n   * @dev fulfillRandomness.\\n   */\\n  function requestRandomness(\\n    bytes32 _keyHash,\\n    uint256 _fee\\n  )\\n    internal\\n    returns (\\n      bytes32 requestId\\n    )\\n  {\\n    LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER));\\n    // This is the seed passed to VRFCoordinator. The oracle will mix this with\\n    // the hash of the block containing this request to obtain the seed/input\\n    // which is finally passed to the VRF cryptographic machinery.\\n    uint256 vRFSeed  = makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]);\\n    // nonces[_keyHash] must stay in sync with\\n    // VRFCoordinator.nonces[_keyHash][this], which was incremented by the above\\n    // successful LINK.transferAndCall (in VRFCoordinator.randomnessRequest).\\n    // This provides protection against the user repeating their input seed,\\n    // which would result in a predictable/duplicate output, if multiple such\\n    // requests appeared in the same block.\\n    nonces[_keyHash] = nonces[_keyHash] + 1;\\n    return makeRequestId(_keyHash, vRFSeed);\\n  }\\n\\n  LinkTokenInterface immutable internal LINK;\\n  address immutable private vrfCoordinator;\\n\\n  // Nonces for each VRF key from which randomness has been requested.\\n  //\\n  // Must stay in sync with VRFCoordinator[_keyHash][this]\\n  mapping(bytes32 /* keyHash */ => uint256 /* nonce */) private nonces;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   * @param _link address of LINK token contract\\n   *\\n   * @dev https://docs.chain.link/docs/link-token-contracts\\n   */\\n  constructor(\\n    address _vrfCoordinator,\\n    address _link\\n  ) {\\n    vrfCoordinator = _vrfCoordinator;\\n    LINK = LinkTokenInterface(_link);\\n  }\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomness(\\n    bytes32 requestId,\\n    uint256 randomness\\n  )\\n    external\\n  {\\n    require(msg.sender == vrfCoordinator, \\\"Only VRFCoordinator can fulfill\\\");\\n    fulfillRandomness(requestId, randomness);\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/libraries/Base64.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n  string internal constant TABLE_ENCODE =\\n    \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n  function encode(bytes memory data) internal pure returns (string memory) {\\n    if (data.length == 0) return \\\"\\\";\\n\\n    // load the table into memory\\n    string memory table = TABLE_ENCODE;\\n\\n    // multiply by 4/3 rounded up\\n    uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n    // add some extra buffer at the end required for the writing\\n    string memory result = new string(encodedLen + 32);\\n\\n    assembly {\\n      // set the actual output length\\n      mstore(result, encodedLen)\\n\\n      // prepare the lookup table\\n      let tablePtr := add(table, 1)\\n\\n      // input ptr\\n      let dataPtr := data\\n      let endPtr := add(dataPtr, mload(data))\\n\\n      // result ptr, jump over length\\n      let resultPtr := add(result, 32)\\n\\n      // run over the input, 3 bytes at a time\\n      for {\\n\\n      } lt(dataPtr, endPtr) {\\n\\n      } {\\n        // read 3 bytes\\n        dataPtr := add(dataPtr, 3)\\n        let input := mload(dataPtr)\\n\\n        // write 4 characters\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1)\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1)\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1)\\n        mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n        resultPtr := add(resultPtr, 1)\\n      }\\n\\n      // padding with '='\\n      switch mod(mload(data), 3)\\n      case 1 {\\n        mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n        mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/libraries/FormatMetadata.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"./Base64.sol\\\";\\nimport \\\"./StringList.sol\\\";\\n\\nlibrary FormatMetadata {\\n  using Base64 for bytes;\\n  using StringList for string[];\\n  using Strings for uint256;\\n\\n  function formatTraitString(string memory traitType, string memory value)\\n    internal\\n    pure\\n    returns (string memory)\\n  {\\n    if (bytes(value).length == 0) {\\n      return \\\"\\\";\\n    }\\n    return\\n      string(\\n        abi.encodePacked(\\n          '{\\\"trait_type\\\":\\\"',\\n          traitType,\\n          '\\\",\\\"value\\\":\\\"',\\n          value,\\n          '\\\"}'\\n        )\\n      );\\n  }\\n\\n  function formatTraitNumber(\\n    string memory traitType,\\n    uint256 value,\\n    string memory displayType\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          '{\\\"trait_type\\\":\\\"',\\n          traitType,\\n          '\\\",\\\"value\\\":',\\n          value.toString(),\\n          ',\\\"display_type\\\":\\\"',\\n          displayType,\\n          '\\\"}'\\n        )\\n      );\\n  }\\n\\n  function formatTraitNumber(\\n    string memory traitType,\\n    int256 value,\\n    string memory displayType\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          '{\\\"trait_type\\\":\\\"',\\n          traitType,\\n          '\\\",\\\"value\\\":',\\n          intToString(value),\\n          ',\\\"display_type\\\":\\\"',\\n          displayType,\\n          '\\\"}'\\n        )\\n      );\\n  }\\n\\n  function formatMetadata(\\n    string memory name,\\n    string memory description,\\n    string memory image,\\n    string[] memory attributes,\\n    string memory additionalMetadata\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          \\\"data:application/json;base64,\\\",\\n          bytes(\\n            abi.encodePacked(\\n              '{\\\"name\\\": \\\"',\\n              name,\\n              '\\\", \\\"description\\\": \\\"',\\n              description,\\n              '\\\", \\\"image\\\": \\\"',\\n              image,\\n              '\\\", \\\"attributes\\\": [',\\n              attributes.join(\\\", \\\", true),\\n              \\\"]\\\",\\n              bytes(additionalMetadata).length > 0 ? \\\",\\\" : \\\"\\\",\\n              additionalMetadata,\\n              \\\"}\\\"\\n            )\\n          ).encode()\\n        )\\n      );\\n  }\\n\\n  function formatMetadataWithSVG(\\n    string memory name,\\n    string memory description,\\n    string memory svg,\\n    string[] memory attributes,\\n    string memory additionalMetadata\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          \\\"data:application/json;base64,\\\",\\n          bytes(\\n            abi.encodePacked(\\n              '{\\\"name\\\": \\\"',\\n              name,\\n              '\\\", \\\"description\\\": \\\"',\\n              description,\\n              '\\\", \\\"image_data\\\": \\\"',\\n              svg,\\n              '\\\", \\\"attributes\\\": [',\\n              attributes.join(\\\", \\\", true),\\n              \\\"]\\\",\\n              bytes(additionalMetadata).length > 0 ? \\\",\\\" : \\\"\\\",\\n              additionalMetadata,\\n              \\\"}\\\"\\n            )\\n          ).encode()\\n        )\\n      );\\n  }\\n\\n  function intToString(int256 n) internal pure returns (string memory) {\\n    uint256 nAbs = n < 0 ? uint256(-n) : uint256(n);\\n    bool nNeg = n < 0;\\n    return string(abi.encodePacked(nNeg ? \\\"-\\\" : \\\"\\\", nAbs.toString()));\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/libraries/StringList.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary StringList {\\n  /**\\n   * @dev join list of strings with delimiter\\n   */\\n  function join(\\n    string[] memory list,\\n    string memory delimiter,\\n    bool skipEmpty\\n  ) internal pure returns (string memory) {\\n    if (list.length == 0) {\\n      return \\\"\\\";\\n    }\\n    string memory result = list[0];\\n    for (uint256 i = 1; i < list.length; i++) {\\n      if (skipEmpty && bytes(list[i]).length == 0) continue;\\n      result = string(abi.encodePacked(result, delimiter, list[i]));\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @dev concatenate two lists of strings\\n   */\\n  function concat(string[] memory list1, string[] memory list2)\\n    internal\\n    pure\\n    returns (string[] memory)\\n  {\\n    string[] memory result = new string[](list1.length + list2.length);\\n    for (uint256 i = 0; i < list1.length; i++) {\\n      result[i] = list1[i];\\n    }\\n    for (uint256 i = 0; i < list2.length; i++) {\\n      result[list1.length + i] = list2[i];\\n    }\\n    return result;\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/ITrait.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ITrait {\\n  function getSkinLayer(uint256 traitIndex, uint256 layerIndex)\\n    external\\n    view\\n    returns (string memory layer);\\n\\n  function getFrontLayer(uint256 traitIndex, uint256 layerIndex)\\n    external\\n    view\\n    returns (string memory frontLayer);\\n\\n  function getFrontArmorLayer(uint256 traitIndex, uint256 layerIndex)\\n    external\\n    view\\n    returns (string memory frontArmorLayer);\\n\\n  function getName(uint256 traitIndex)\\n    external\\n    view\\n    returns (string memory name);\\n\\n  function sampleTraitIndex(uint256 rand) external view returns (uint256 index);\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Bodies.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\n\\ncontract Bodies is Trait {\\n  // Skin view\\n  string public constant MOUSE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEUAAACbnZmoqqf3ocW1t7TCxMH6uNXP0c7/0ODy9PBk4k/iAAAAAXRSTlMAQObYZgAAAlFJREFUSMftlEGumzAQhnMFp0ZZg+AAT9l0a/SPvDaakdULoGwjYaGuK6EcoG/BbTsOpM0T5PUCbxYJyJ//sWeY/3DQ4JTIHCtzeBXCIlVlypcAJUlG47XCmOQ/AH8OsBB/Chgb8nr1EjgX4Wyqah8gYXMGzm8gJhHZAC7Kt+8iv95EYGOkDWDHhLwT4kWftwoco2RAaAwUxy1ANEoNFYiRKSVsgEL7ULOGT20p0m4AAHJk/UlwFdy2YQYGR6UYzpmy3aumyDQt//K3I8z99AT0/QOwgMvPXj4ATworYIdl0wawepClAZfLulwHO4Ko0q2mqoG2alsYg5zuDjSdT0BRAlFGUUBJ0lsrwEuClpOWQQE/zwNQH8VZtlFr7xbA6SeLOivMs2rVPnHBpPXFQwFX5sYBP+b5XYEmdZRoUIW0AvbKaFrIz3n+rajEzjMNTCvQdKeBWTqSrCDcxNjZq9Vj2XAHjgFX7WcrWeE9KwS2wepxi2Fpdwc9UNMtgFaE9BbhpAqe1xR6i6zAMV+TapAr+ClF1eYPrmq1Rvdroqq1ULbve1oUpts09f3lAhjiAC6NLfP77XbpD1/xFa9D1oFlfvGpPHzCy0tgUZBnb9gDCNO0swyMTu3MZUe2xmIHKBw4D5A4jyLsADqy3OgIJlcEj31gIFXI4Do0HzwbPujAqRsT1B2GreuTz2coWZXUv7cA6BQ8q8PpfmLvdqoQHYWjGpwf7EB7wOmqgA65DDQUvAMUan9N0BSOnB32ALaonRqDcxbbFHdPuEzT7e4X/7z+D7sW7hfwM1TYAAAAAElFTkSuQmCC\\\";\\n  string public constant MOUSE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAFlUlEQVR42u1bO2/bVhQ+JMSkZho7bYcCHCR09NwOUn9B58JAli7N0h+RuXPm7l2y9CdkjIQAnT3LKAhkSNG0AB2YQtiB/MjvHt5LXsXUwwYPIJCiJYrn/Z2HA+mh4u/fCsmvRE7mIptUZJKUx/xKJJqKvH/ZfDiaNef5WkREgm9eBXLENPH6VDRtmOZrmmliXKJZc36nBQBNTxL1TViCg8k7wLyISOilfWYagtikch8o3Pob2hXuOPnFAGYYLqGv31sB1FF+KRIv2pHf6TqzeyKAeFEes6UZD/j6HWJYU1C8fV4YjMG0wRgY7aJsaX5Ou4i+Pz/Al78cFCeEhpkjwuOBK6aKxxflNXoVjy/a2QIvZj5bNue4/yQ5mvgR1trjh1OaDz68aWvuw5uWoGrGJ4kpDM38Ju20iv0K4OypmdcBdzUDXTghmjYaPZmbARSBk3GDBlUHDYJIa9pMa42mdmCk/RtoEQLUlsF/OyIsETZRvBLCJrWjPLYGxgJ4zwIEg3lavt6/NC3MJdyDWEC8aAMdQ9Nru+Z1YWTTbL4u02M0M69ny6MpliatdFe/70CDNqSoGcT9mMl8XcWE46kUA2v9z+8/+06Cm0spHpxLcHMpwZOfgt7+gReydDxQT/+g7k/AZR+el9c9n29rJBjcXBrHQcgFrmB9fXUJmjMDpNLearB4cG4cByEfRru+e71qgalPVVB4EMfT8SZb+guFcUVlAbdRUlD89XMhUWJWefGiATTXKzPaw/+y6nqUdGuYi6TIAYA4HUZJ+Z6PNquBELUbAHyBwa9/DfpjAPf3oqRhXuMBFElnlCI1U9FU5Kt5813dQXJlE74PznH/aNrOSn3+z+Cu0wXieTv/a61ryfelRBGR0wuRJ89E4u/Ll6sAgpazZXWuIDiKKVxjS7BBargIV7TeMSBft1FeCwWmfj3E8LQ54rxLa/FC5PRHsyK1mTkY1O6plcDf9xYA/BWaQkzQQommbn8WEfn8h/L48d/yJVJaQWd6s0DwPG2YQIHmU1ABmXqkydA7RdnM1whwU3v7nC2BBakFGs/NatSIVD0FlEai2xVDq/YDIQjaujx4UM0AiLUI5mENNuY1o115H+kSRZutYct/9+hdhpKvm5QGrA7f4koRx2xlSlwzY2MCbtBXV4Cpdy/amUG7h48LeMeAWqsz8wddN+hrlmiG2RK4muRYwkI5e9odxU/m7sEMulueg5vQ2s3tCyIun4PpZa8tpvzanQZZKNZYo1pvrujPLuMJuUsglK3aUb1LgozQbJrNr8qoH56W1sBpsDVkSbrTa11WK8GEj+pKsFtgr7qh8MfszwLlLhcWKC9dBVL9mf/+sGcRztc8SufcXneN1hawVV3/4lnn79uqV372bcvjkUYaaaSRRhpppJFGGmmkkUYa6f7T4M2C1n5A+MhoYITxt1vP/3fZ4NjLdHirHQPM/0X2skq3FwFsNb7G6JtmiYMuZxxCAFsRmp9VZ3cnCxpDxoDi7XPT53mvgNvSxtL1rJkIY1FTCwCLVnzU95L++X8fTQYX6bsXJlO6CxzNaBDTsY8YkxB4+5S31n3W9vfuApjMuMbbWtMtlah5Q7Zs1mF4rzm/8ttk37sFOH8pMQch0dQ+DLle0XDWIlyRRiADrNsOYwGudGWb5kL72cq9LGkbhetV/oEWrsNBmLdNinFNm2lu2e/DOI33jfVKzI7+S+32AtCa0iN1zgwiVfSvZpF6h5gtwLZxjt+bJO0sc7AYoLWJDMCMQXv6/4viuV0AbN7ZsowFJ/TZAa1h+CyA1MRa3yZu6H+u4CGrtrABssBukOAmNWf0HA8YB9jyOCNBNnF+DzcYIjntLO1huZEf2hY3Hp77WxVrfKAYcHso/M/vha34ce0c8LnvjN9VYH3Kerym/wFb+eX9GW42nAAAAABJRU5ErkJggg==\\\";\\n  string public constant FROG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEUAAAA7lEpEpFNNsmA+uFVLy2R565KV9mKK+Xuu+YeVjfWeAAAAAXRSTlMAQObYZgAAAoNJREFUSMftlcFu3CAQhvcVwFvlzMAqe4Uh7V6Dh8NeHVAfodpjUinWvkFybKKsy9t2bGerpLbTF8hcQPbHD8x4fq9WHAF8Nhbr1VLUiaIQFS4DOYXGUFwGYq4T0H4RiIkBattFIKVMzf5YPlCIN7vHh4+AHHePZR5IMRHkDCbHmCnlCeATcRYykefXMU+vauroTYKgfb8R0QQg01DalTuNiYg2MAEghNDwAe+IIk/9BNAQsCmlPKmrRAam9QCQbssKnfcJtHMTAMHpr6xQdJ3RIcxkAnFMkdbotMV1P6/wTeL/At/ao7DrQaPWpZsAeOxKLdZ2mOvyVuFw6EdX2s5coxzUXp/1t7DeATgQalt+l/Js1mupUJvIX+m43nGlAEQltv1dflkFwYMzlF01AEqmBgBdZXcDwHnzCMB1VWNWhcIAoJSU/RdRnkLFiO638GMbOBXDBqy1YgCeeXVlEIgSjIDlKvIplB0SXmRwFSEGrr0LI6ASH1MLYbcPDFQo7do5k3Kq9ABIlZqcpVKKFZ64vUAiIotmHCtreY+clXQqMCAdWn6PkQHxCsgNK2hUkh7Kpuov3ANNOitc/Ny/5Hx5i8JsIfT6PZBLm167/f7+dDiW9qjcl2ACb+A0tt3h0HbHbvUZn7Ec5y53YsFSz4D3/wHemcd74HQa+30c/wkh9A1oKVIO7FXg5gBQQmBKwVl2vjngSmLFxhB0jc7OAKYWCIoy8XpHM8DmykrNXUnaAlzPAWy00sacAPEa585QW6cUGwNbEPo5IGrtZEo3gbvXzbi+IcU+kiP/E+aBTeTWZzuKiQ9TzQD7l4vby7vvpTTILjAB2vZ0Ovxo2RZOp46H8/M/lvTY1DIlh4sAAAAASUVORK5CYII=\\\";\\n  string public constant FROG_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAIVBMVEUAAADPtCThwyXw0Cf+2xv+3TL/4Eb95Fr/8a7+9cX899RhptAzAAAAAXRSTlMAQObYZgAAAp9JREFUSMftlb1u2zAQx/0KNMt0tg0P7SaxZ8PZkiLeqfORtbfEpdNdoPkKjbYUKBB5K9wiMp+ylOx2qOT0BXIaSIg/nO6Lf/V60TJJfqyIeuds4cgwJs4D6BFv+XByFiCixWcGq7OAWXsiWX49C+RuQ3erXTjvgYxb7srw0ifMche6AWccSe8leGM8Od/OwMVH38dE4rHxpgUAGQInMa7Om45qEuRkl2EP0RHRVLYAiYh5DHBPZOK27QEk0jpEIInRgmwDUnKcRQ+ByElAbMcQ4/sUz8MkpoEkO1t1LNGCCOGKRL3nuggtAJZVwZRIGxhCG5jvDoGYUB1AUTRjE8oqDh6v95PTu/o4zqKUOGLJLBxC+AlC9AcWAO5BHQGMnZKyL9iszuWHGgwzShHkPTbh9jLucikJx2rZACMk0qkku0luGmCgCKVUyUjUExH2mRgijQDm/tQ4TA1OpVJZvwF+UX8kRKweutERULGLPl4bRU3BOa5F7Cpq6++OZVepi2ECY2pWRuANcSWsBbe1p4vEU5d7zwdJEj3sB4JSruvx8v7D6RPKOu9TjkOMACet5pa08ZYYndKcRg9AA05lmAqy6wutyeRrZ4/Au++rZ+8vHxdDmMlsyMle6I31obRaN0D1VBW7UBUZvkXAG0VyrMtQFOVhd+i92qv1XpD0442+Y2ck9Q9A8B8Ax+FwBqiqevXr4/qPMQYOQfTdNopu1s+6ABowRrlDVBLHXYDhJKIwIGjCqy5ADylNaEPyetwhyYxNjRpB/VeA21SqLiAKbT/T1smNVl0eJqQ+JondOpwT2S7AACC3a4c3RFmH6tcSoBKrQW6svu4ApvGHJNBsjdN2IzqA1fP7x8tvX0LINXUEWZZVVTw8RFmoqkN4+tuu37PtHby9UpV8AAAAAElFTkSuQmCC\\\";\\n  string public constant CAT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAKlBMVEUAfoMAAADfhAbme6LykxL1qUH3s131uGb6vXLxu871woDw38b369768eo1FJ5bAAAAAXRSTlMAQObYZgAAAn1JREFUSMftVbtq41AQ9beYbbfdLwhmN72E6l17Msh2G4Lr9TAkcbeNIemCCfoAEdBNawgzt9kiWET6lx1JTgjRtfcHMhi50NGcM4977mBgAQAUWQwOBSJjlBwBADOoxTEAHgUQ038ymMijgBOEkxcVdxAwHI2H+nAdBgDhzyHQ8AshxCa2LxDg91eGv98BcGJiAiXS+AfgnxEyQELUz4BoPwQk46C4T4EA9ilh+zhb9jMwCJgOAGdkpqOvQYqi+PXNHg4wCWSYOhXJp87+8niZQKATqrVvyfbREVfVO4CvPwKQuo/2gPLpFfA6MqCn8j2g/AhgKF8B4ipRHUG2mKluswVC1OxPU3hLNihc7VUhShdXzj2nC14urWdgiH3JTrRQncglT+URLxkijJmaFJOuZBVvFIXLzuYiu+wMExsLUDO5jkKtQ6ZM0nQlLk9TZI5hZmsOHHcitXqxDDmncxXilJacWfsbHR0FOjQNSpt0/uJxk9IETmcqj6ahy0BEV6pMGZPIc2a9uLybWukAUdKN2yQbI2d2uBxmnMB4I977Zk32GUwWo1Fcq9tu0mSZjURrtf3ptnzXDmi1u7+YWTX3FxGfoqt8DSDtCAf1uixri+zcatXsPE7vJn79VAL4wyftMz6jOcSdJwBX/gDA+703VAcAnU8g3NweApQdxe1t8LXtrINxawzMEAAUVeGi5upo7SEAcF6dxPaSzXYpBHgUlcIAZtyd1/UyNG5qCq63gHGYopjamVyZKUMow8NcCe1dUemWlgFAbtdGcytILXngauK9UYC5dJUHKBqTsLAm+NrKpXCG1WpngMpL3b8i67os1+YTADc360rf5vkPQ7rZon2nXVAAAAAASUVORK5CYII=\\\";\\n  string public constant CAT_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEU3ZmbWs/X+2Q7/4lj853H864r/8779+NX9/PP8//vaF3CyAAAAAXRSTlMAQObYZgAAAlRJREFUSMftVUGO4kAM5C0ItA9I8gEoC+YK9i65r1acVwxp7gx23zea5LfrTmA1Ghr2A2NFOaQrrnLbXT2ZeADgwmPyKIiEiuoJACIwj2cAegpg4f9kcJFPAVPC9N00PAbMFlN73eUBYFpMwdMpE0oXey8Q2HwT/J4DtHQxmRJ5MQdtZiRAxXyfgcgfArFzcHlPQYD/yjS8sL3PIFC4DiA4meu416DNr2Yx81cAVZkMq72pHlYh2OVQbitkdsKsjwPZNUbirvsAiP1nAPH40xXQvt0At5aB39qPgPYzQNDeALrv1GzmM7M2O3szUKT5SYUPZJNj6KMZCpYfIfxhke3W9wyOuJYcLnY0WyrTSk++6yioFE4plmPJptEpmiD0otoKUeVtAafOjRTmG+XKVFBfwk8BiZRY+5hDylGkde+e4eAZ7OKpeeuL2iQdIwUFcg3m7Xx5j36CeIn52vTkGsYMzPzdTNhHXzVVIbJZhU6BohrbLemjt5pgwauosGCNMaYxuWZwWU4ttLNwFu+4zNR68/kZp7wdGlS3TGtNUgqZU+hiD+jQwkkvbdt7pD6oeY20WUZ5a4H4+KR9xVekQzx6AqSLDwAxXr2hewAYfYKwqx8B2pGirrPLPrMBi8EYRJABNN0xFOnqGOwhAwjR9lr6orjtcgawP6lp4wBKHpADxL17hSvYnUFlFmDNys9k7aaMXIbXFz+avtZ0duZtBnDwayPdCtrrIXM1ydUo4C7dHTIUySQ8fBNib0E5n6Gu07Hvovb3V2Tft624TwC7nXT2r59/AQMDMqrp7GQzAAAAAElFTkSuQmCC\\\";\\n  string public constant APE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAGFBMVEUAAAA7DwhHEwdaGAhoGwh3Iw2nfibBkCsdplZnAAAAAXRSTlMAQObYZgAAAlhJREFUSMftlMFu2zAMhvMKloz2LFLLzuIvt+dYwnpfugdYW1jnZYD0+qPjYCtmu09QAolh8/Ov3yLFw0EDz3EIydBhLxLSWYzILpDzAICwC4xAdID7YAkMDuP+En5MoyWx+wrnZ2CaPvCQvu8DzEyZxY+IxOA1RAP6h1LZ8qi7kddAGNg8tMo0/BA/8LACJEUcWyWDjC/nvP5UieBja+RjdIOMae0BXp5qu7hwFh6wLphIwrfSXkmYLTYKxl3HmEo0hjsC88ZOAK0u1yWu9XXNvgPKCnDc3t4rtP8Bf1O9Rk91pTCilFs6MhHQ64+1XHNE8RT/dVikRIKTAE+t/Na0pjjOL9i49IJozDiearno45G1qIZnqWUnkwnCyETUJup5JAhGUBTJV8DCOGHTSz6W+pYY1qseBepuhRvBogoJdFfaJWXR28AcKISlcIHJCXGW7nGaXpCi8ZwDkQ2yfIWHFV2xE/+11F+qF1WvI3G4dVfMRm0pk1Cb5rX71a/WNtxMIpF+BcMg3l30fMoJ8GoikbsBfP+TQHNj6WtZe7vnx9eHFxdSfwVaq6W1VljgSDdgzCdtj6LPej58xmfsh6C0ZWpx2QQgbZqvBvdtB6jXhJG6o4ByVfDSymaanJ4rPeXB5YCwBehZonkS6DjkbgMwoM7N48OfWHgDYGdGo6fQI+jA3ARits6RkZP+bwA2zNMnKND1JFsmA50g7EgCkLZMBhg2sWMhM2ID6Jz1ksiy0yFgNwA3D1NY3YugM2kDuLvogFGvx5fHV6xN6pyYytSm2kqp1fz18Acnz6v6AMt3MQAAAABJRU5ErkJggg==\\\";\\n  string public constant APE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAG1BMVEWjTRz73ET/6UP/8UP+90P//8D9/9v9/+/+//sa9BhIAAAAAXRSTlMAQObYZgAAAlxJREFUSMftlc1q5DAMx/sKkg0zV8mC7tVWDnu1o6V9ku65S2FynXYhfuxVJlkWNpk+QQUmIfmhL1t/Pzy4jTYMeQR+uGdttJGA7gNmQ1KGct+DjQZc4D7QBiNt9S4gzVoAwk9ycHt5sU9yaA5cjoEQApg0qSrALaQdAMLxaZpjCNXbYftSyRL86LOgWBGTfRhuAz/2mWG0JGb7UrNZeuzdHRhIaeM+hyHS89yvQEZBDrqZc+Onqb8RxRi05H2ZAMEukwEiYMF00AnWPi9P3ezWW+r/Gq/a+/8AYP/9KRA3rzeLsA/R0jRtv4cEoBrJ1+XnqJqKUPSOqG5nVMCwaM2qz72/q0phCRJRFWXdauZatMANuLqfiti8Yo+17guMWEtiA4h9bhErJNLKIDmvADJSSRibnab5bWR/ZQaoAEY3oHJcPIxK56lfRyPMRBgrUG7reUCgwsEyPF8u72UUiGjEhMRbFSk25QEonvt8bRqEUgNsoLZ6EAPSQgxWeq/J/QVfXANtSeqtCt/HIqcrsBfNKZKIl7oCjOdXViDx4aRguuTw7f3plajFG9D7PHU3pqXnjavVcumTf4v3J+3LvszPd1mnvAhOh0Aq/fYD07kfA3n1ANtzZ7qJhuR+FMKPPrHfK6rZBVHoCGjG4DqBIXCCQwAAkgOxhhwOgEiwiANJIZQ9wOwDZ0guqNXF4SAH14nKqHmZ7IiHSVauyeUCW9bU9l1wIIFrE/hg++tBCL8Xo9/gIVLOB1fkIgGJA2OClgmOqjhdWwkp4enX9w/eJ+k6cXGZ8DVN8wz69/sfNbmlnl7guAkAAAAASUVORK5CYII\\\";\\n  string public constant ALIEN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVzLWlnyeJtzudn3PqA4PnR7JeRAAAAAXRSTlMAQObYZgAAAbNJREFUSMftleuR6zAIhdMCchoQuAEDDTjQf033IN9kkvixM/t7Scbj2J+OJNAhtxvCLLw35ttZGIt1IjoFlFowXygAkEsgOl0DWKGIXi1S2SDRz4FwI3oc7yIR5mFuOWIPhOeSOaXjrWfsd2A2xsZQMtvPv0xqtpot92Cz/U5ksQ4RE5u028FOWLSLZcPoTtz2AHHvjEQ0UaKjgtEzmI8BTMKtvTJi2z4i1/UN6P0H4DcK/gKcxmGaMtfW7rh2mpFWr/xuqcYoTDJXJTxfgQrEBmTV2nRUI4qwGv8GuEf9iFFKXOsXSK9nn4DZmBc6hvvcKcSQ5rQFxydl8J9AaK0WFsKCXFz1C4Aq6wwClVdjBypfwEMFR3vCnlmlxDYFGAKOUOg/5geARnCx4IPvF4BnuGsd52aLbYpWT6jj2D2k1kCNCAlfie7321/8xXk8XR725uxPYHP5m7NPOo3/TgG2Mp6Uyp9+1LOrt1hUU4W346Bn47XH6Avp5fUDIOK/Db24C8AKyHNAfC7oFIDFQ9D7TwG0BRcQ5wBcrU/rf+ZRdWsFuDOWKyAP/4UJfaJ6xXdv+Ad3ppnSV1byKgAAAABJRU5ErkJggg==\\\";\\n  string public constant ALIEN_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEUAAAD/64b+7I//76H+99H//fOpxc4dAAAAAXRSTlMAQObYZgAAAb5JREFUSMftlduN6zAMRNMCIacB3woE0gUYJAswTPXfyg7lTW4SPxbY72UCw7GPRhKpYW43hFl4Lcy3szAWq0R0CiiVYL5QACCXQFS6BrBCEb1apLJBop4D4Ua0Hu+iIczD3FqPPRDe5taG5njrLfY7MOtjoyuZ7eefBzVbzOZ7sNl+JzJbhYiJDVrtYCcsWsVawehKXPYAca2MRBRRoqOC0SOYjwFMwqU8M2LbPqItywtQ6w/AbxT8CTj1wzS0tpRyx7XShLR65ndLNUZhkikr4e0ZqEBsQMtam/ZqRBKW418A98gf0UuJa/4C6fnsHTDr80LHcN92CtGludmM49Ok8+9AaK4WFsKCXFz1A4Aq6wQClVdjByofwKqCoz1gz6ySYpsCDAFHKPTXaQVQCC4WfPD9APAMd6Xi3GyxTVHwZBwrjt0quQYqREj4Mo73++0v/uI8Hi4Pe3H2O7C5/MXZJ53Gf6cAWxkPSulPP+rZ2VsssqnC23HQs/Hao/eF5un1AyDi24ae3AVgCbRzQHxK6BSAxUPQ+08BtAUXEOcAXK0P67/nUXVrBbgzliugHf4Lj/9qzV6RvYHof2/4Au0Iyq3lC/iXAAAAAElFTkSuQmCC\\\";\\n  string public constant DOGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAOVBMVEUAAGc7LRZhSi6EYS+wgjevj1nHlUTPnEPQnVLfpEzaplPNqmzdqE/Xsm7jv4DwyoXtypf10Zf50ax+6m1uAAAAAXRSTlMAQObYZgAAAvFJREFUWMPtl9uW2jAMRWkaJFtxY4f//9ieIzkktJ3B0Fc0TJZDrB3dbIvLpUuWlFPKOYkk/l9elQxlqHb9twCSNQmVKfo6ACbAiNwB8jJAU1a34W2AKtSpv7i8DEjKNIhcr1eoX5e3gsgouP4rFiB4eK/ik4uUvCCOWZX5TG7SUwBmYb4qtEvJua43ArwYPCjPAXxj0lSYR0u3223NQib0IQOAhImaa62p2Fq31toKPbxbHT0GgP5a27ZOP27QXxcWNdM6Asg0oNZl+bUs9ecEdQwYWeqngSAmriDPfMgvXlCUKaI7YAGqn4A7wfX7skyDq9IgjN6prF2sy/G9CKZtbwMEhC8B0zZtzwGSt7b9BwAmnOeFcjETMd9I5hnlXESKB/TqYwkW8sIISOENqldOgGIoXd9EFgdA2oJqquY4PorHXHEBSKcNx2DCbNqnwBpOWde6rFU5pgmuyou5vj7sWCXcVDHaV/iZFRYAYD6+vxy3d4Admy6stNwB0j0wFDTEXQjfe0BDXwk7A7CSweCLwutiFT6sq4/dAbhYGCx8gMJH7C8L4L2JT5sFgCWCOHsSjH/MliEbbkmxhxhkPiPAnzELjGENd/h6PMK8wnT/WRssojI7wBi0okiltso0+jh83y8ldwMeXfAYGlMYABKww6iPfXpEgD51VDkAjcujOVm7B6r8UjV8uBMK5oUtrR2AbZsm1DeWSEhUX2Rrz6qHBTK1iYvW5fKRj3zkI2/1C9hhtlc2EQK4RR0A0fYyAPvXqbHQf/YF37qAjfLoC0TO90+VsT1L7KUYKtvgOKB5Hfjd4A2H9APBN2g/IDUahVFAP0pK6Wej0Qw2DM8BtN9yjtPg1Czx8NIhAO12QJzmO0F5Po26kAmwA+AHIxGqYwCc+BFD6y0aj3eHjFmgiMF+zDqA/VNP61AdUKXsUcTt7s9DZ/IdQPArtERH4X3DXPakjgKan+J+0kc/sLVofdpzAHsELiQ0DS7eDLCB+KIv+A3z8j1xfknTpQAAAABJRU5ErkJggg==\\\";\\n  string public constant DOGE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAJ1BMVEUAAAAAAAANDAB+aQD73T3+5m3964L87JD88KH/87z+9cb8+t/8//sh9bMDAAAAAXRSTlMAQObYZgAAAndJREFUSMftlcFuo0AMhvMsPecxeknvhk601xkJ1CsibPfakES9QvCUY8qurbxANresVInsPNR6krTaCmhfoBbSIPPF/DPYf0YjiSJLMQmTcDQUawxTSOEDQOUhAASDAGYZCgCDQF6p/ENgscwTYOZBYBau4fqGJx+IzLJrZOwXmMLDrZ0+IS7SJMmSDhBW+eKZqXa4CJPbKu0ACvOc1vjDtWqRLHHdrbCsave9ds7hLF1i3gOgPDyMnduFs+WyC1T4+Pdp92fs9rieVeuuyCS93032iPsdPiTZoisS4R43+JsQqzQJ074viiLCr0YCJU73cM4NAoF+B4zHHUB9AoA55yQsggW4/rXiDe5vVhwYE2kDU2NUcQZoqgE2PyO7rds2sgEE0nwQGxOeGwhpYiRj5/bO1S9zCyYArVVjzKXD5ABKBQ2V8V1dt2Us5XRQkgfKE8BEAkwZjXywFo28X6RaERxcAGYsQHHqgWMqeWWILZkyUm8VUAUkFdpWKhhTlhZVHKGliwYqUClE3rbuiFyUuiAL9vVERmgnBWLMpeyiPcqPUS6SDn5tYiZMEKdcrRrnXqoVMYoEuxHKnoCtSEOMbLWaO2cEsGQt+9z2eALc1VjazTn2h6xlT8Ts3Dk3+oqvGI5XG9BmoFXegGAQOBxO3mA+AQDOa+fxvGArI2qetQ607gAGQQAqjGm00dAL+IlhmU2MA910gChSfiRkeCMxjLIHwMAScemdrCTb9wrlZ1aAWAyBTB9gZXAFaAoiKnqASCR6DQR+uz3n4J2Hm6hk8ZaLu7wHAk0WxUxuPNgHfBOn4GfxBbGCbdsB5G/pcOVNQdb/veEfCqS+LlEIo/sAAAAASUVORK5CYII=\\\";\\n\\n  // Front view\\n  string public constant FRONT_MOUSE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAAD3ocW1t7T/0ODCxMGoqqebnZnP0c7y9PD6uNUYO1c3AAAAAXRSTlMAQObYZgAAAK5JREFUGNNVjjEOwyAMRX2FqDewEMwdWS0rdK7UC6Ak7ChKOlcZvDPltgWTDvX09OD7GwAGxAHa3JjvCoaZ/+GJjB2ISGEm7GZGhQXt8npiBOTAO7OFGJxIXi0YCiKrIzD5IXIYrPAW+VQTSU2G2MzhMiRqwNW0VDZ1z4k1flooZTE0el/b4r5bbXfr1IFagd78A9zcqBA31/+knMbrKXSDlLYrde0xPPW496UAfAHzjTeL5IzRoQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_FROG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAABEpFNLy2Q+uFVNsmCK+Xuu+YeV9mJ565I7lEplCHFxAAAAAXRSTlMAQObYZgAAAKtJREFUGNM1z8ENwyAMBVCvYHAGwGQBQ5Q7bSJ1gfTeSLVy7RIZoBMXcMPp6WP0DQAgM0I7OXHu8BGlI6766QhPVYP+MVzJwxLyg75VCEqFqhTAvDZQvVrrcMaWNBBIas8j1qZhqxDIXJPXKJBYKjxCCnlTlyKw+gFFA5znV7wcR227Fxp7OzPZ8jHQrWMRP3UkcZbE7BZDoekaTjYcvX3ZBWfJvM97x3G2ph+xUif8/19AxAAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_CAT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAADfhAb3s136vXL68erykxLxu87w38bme6L3697kvRXPAAAAAXRSTlMAQObYZgAAALlJREFUGNM1j0EKwkAMRXOFgidICtXtRJAu1dIyF/AGLrqthWG2HkEGP7mt05n6V4/3E0KIqGHX0JaD8rXAg+VZQES4ALOTAo65mnB8hwJYuriN8snsk0uWS4w3x6TSYRVRctoCdxFSPSMu2lPQ1uDOgbC2U5LgycMBNwyUElsU72mw3uInZTOcYJY8fUcz2Dznax6Gcn1IeXmLhZgKJMS1GuzGTztIeLX1i8uyv6PqaqVajf7NmEP0Az2IOx+h0qlJAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAABoGwhHEwdaGAinfibBkCs7DwicKfTcAAAAAXRSTlMAQObYZgAAAK1JREFUGNMtz01ywzAIBWCu0B8fwA9Xe4tE+7qiB3Ch+ypO7n+EKsJs+GYeM8wjohfOMz3nosYBP7G44YQHJvN94F39a0Cqrn2twrVKSfSHyfUHTI0n051nEsArZiGURe2zZeJyqO8dwLXWDR35Q+2XnxDzV07EvB5769FlY2ReNlKVBFHt3wCk8f0NkIGcW6AVjqilE5xvZQAJgVtugYZH3KCkKHj/PqKgqVWif1kQJtsU7kIuAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ALIEN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAABn3PqA4PlnyeJtzuejFreRAAAAAXRSTlMAQObYZgAAAIJJREFUGNOVjssVAkEIBDsFkATomQTUTYDZzj8m2dGL3qwDr3h8AZin4eJG3rew2WI27CP2ljIeW2ShLc/mmvFxHI+eY9KdzJZkOh3eeWY6jOa9yFHcXQvlYaZKyKlY1SWbUaWCaq5ZEqSOIWKMWbHG6Gsp/TyW3nu3NP9LNN9yNsALJUcY7sDqAgYAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAMAAAAsVwj+AAAAM1BMVEUAAADIlUPPm0Leo0veqU/WsnTxyoTQnVHaplPzy5rjv4BhTC48LBXLqm+vkFnmqUqugja3Zpx/AAAAAXRSTlMAQObYZgAAANxJREFUKM9Vj1l2xSAMQ/EQR0CJs//VVn5thqePBN+DJdQaJWoublu7xMndLB5gthv2foOI3THiATz3MX8esLZtxZwPOIpQz41jre0CIswssB3uokKg7n2NsQKuBeo3RqwRCgWaF+ANgprRakYfJah+gAPBnTGcbqCHJsEq01RUCtJ7eYYnRBrgqT0q1tP/PE4nCcae5dF7r1xK1flts88u+pHwOP/7IFEJlySVHV/g5BsJcANWUG7lDbKA2gskTMzs+wbwtSL69jgLsPQrham66w1YIaV6XKo+V49fUFgJhmcLhjkAAAAASUVORK5CYII=\\\";\\n\\n  string public constant FRONT_MOUSE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAIVBMVEUAAAD/6Xv+9s//7pn/5GH/30L/8rP//O3//vv/8KT+9s1LjXuuAAAAAXRSTlMAQObYZgAAALVJREFUGNNVjjEOwyAMRX0FF8HeI1hWUNZIvQBKwo5Q0u4ZmrVTuEK4AbcsATrU09PHzx8AwDxwzY35XkAw8z8MyHVnIKICEzVrqvqMcn4MaABZ88oswWi1v52XIEiH4BWBcP2xbwIzvI7wyYmhPoRNODDuFY5NObD0zAnn5LKcyHdO3Hd/SohxFtSllNvMusrSrvxYga6C8ucf4KK6AmZRdcc627UnXRMkuzSr3RE8Vj2lGAG+jVgvhr3EkdsAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_FROG_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAADw0Cf95Fr+3TL/4Eb+9cX899T/8a7hwyXPtCT2V0zAAAAAAXRSTlMAQObYZgAAAKRJREFUGNM1z9ERgzAIBmBWQMwASSYgqO1r6wz2Xe+KGzhIJy4hMU/fwc9BAABTQqhPprc4KCM71ll3R/yoOl7aEe7Ko1WIgn6VCdigygwocwVZa7awICA7LDPV8Yy2KWwGBklW2Q0lsYEQSpRNh5IhKQV8aoTr+jHxedZThbJvT4nazTlSab9gmhyFh1bJMvQMj3d4bK019/Eh9vByLIfjvOqmP4ELJ1XM0kwpAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_CAT_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAGFBMVEUAAAD+2Q7853H864r9+NX9/PP8//v/877neKqBAAAAAXRSTlMAQObYZgAAALRJREFUGNM1j0ESgjAMRXMF1AuYAHsbwbXYwh6TugfKAZzh/pYW/+rN+8lkAgAFmgL2XBifCc5ItwREhAkQDSUwiNnY68kmkK50+yhWqmMske7OTQaBqZSeiMFwLTITAXP7cV9uwHKtH9NakL5ePNkAQYzIJCt4j+ooBFi1UTf6aNZKVH2A96wq2jTxWhCVdH31cXmPDs4n8LL12ciWTVgOoOFV5y8e3fEOs8kVczb8N3MMwA/sISy7wemIKAAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_APE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAG1BMVEUAAAD+90P/6UP9/+/+//v73ET//8D/8UP9/9uzqmsUAAAAAXRSTlMAQObYZgAAAK5JREFUGNM1z1EOwjAIBmCusDr0uTWNz1p2AWEHgI14jyXGA3hxu67y0i9/IQQAGGKIsNeJWBvOwkdyFU4dYg0jy9yb5d4wFBrqEzct38s7g9oo8rQX+I7ZFJKrcIgbOC7Ed0NQXKl+BUh5LOVZYWEVnmNNcBNBzRBjXGb3AKcpeX4tDyC6uX+I6jZ3y8d2q8N7JeywfbghdygqNni2Axrsn3hvxo51Wo4DmbgA/ACHzic41uzVBwAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ALIEN_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAAD+99H//fP/64b/76E/c53eAAAAAXRSTlMAQObYZgAAAIJJREFUGNOVjssVAkEIBDsFkATomQTUTYDZzj8m2dGL3qwDr3h8AZin4eJG3rew2WI27CP2ljIeW2ShLc/mmvFxHI+eY9KdzJZkOh3eeWY6jOa9yFHcXQvlYaZKyKlY1SWbUaWCaq5ZEqSOIWKMWbHG6Gsp/TyW3nu3NP9LNN9yNsALJUcY7sDqAgYAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE_GOLD =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAJFBMVEUAAAD+5m388KH/87z+9cb8+t/8//v87JANDAB+aQD73T3964LSVpU9AAAAAXRSTlMAQObYZgAAAMhJREFUGNMtzzGOwyAQBdC5AouVxkfYyhrCFq6iQS5MuckJQCOvUq0U5QhcxLkAiuWGyy1mloan0UefAYAP053hOBdHtoG+8NnAD8sCXlLD+ftHsN4QG2a8Ur1UN+PtdcmgtsmG4DNov7O9jwjkd2vDG8EUyxxKBVXEjUBvNRv8AMpMgSMpQLdziK5mZs98fxFwLMxlYkipLyUvy9FmPofW3mUlWIuS/+ConWwx9qbBocb/iZYJDW/JrEMhefXbZ9k0nmTllI6mPyFUO1tjRrmRAAAAAElFTkSuQmCC\\\";\\n\\n  constructor() {\\n    _tiers = [\\n      2500,\\n      4500,\\n      6500,\\n      8000,\\n      9140,\\n      9940,\\n      9950,\\n      9960,\\n      9970,\\n      9980,\\n      9990,\\n      10000\\n    ];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    pure\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"Frog\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Mouse\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Ape\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Cat\\\";\\n    } else if (traitIndex == 4) {\\n      return \\\"Alien\\\";\\n    } else if (traitIndex == 5) {\\n      return \\\"Doge\\\";\\n    } else if (traitIndex == 6) {\\n      return \\\"Frog Gold\\\";\\n    } else if (traitIndex == 7) {\\n      return \\\"Mouse Gold\\\";\\n    } else if (traitIndex == 8) {\\n      return \\\"Ape Gold\\\";\\n    } else if (traitIndex == 9) {\\n      return \\\"Cat Gold\\\";\\n    } else if (traitIndex == 10) {\\n      return \\\"Alien Gold\\\";\\n    } else if (traitIndex == 11) {\\n      return \\\"Doge Gold\\\";\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256,\\n    string memory prefix\\n  ) internal view override returns (string memory layer) {\\n    if (traitIndex == 0) {\\n      return _layer(prefix, \\\"FROG\\\");\\n    } else if (traitIndex == 1) {\\n      return _layer(prefix, \\\"MOUSE\\\");\\n    } else if (traitIndex == 2) {\\n      return _layer(prefix, \\\"APE\\\");\\n    } else if (traitIndex == 3) {\\n      return _layer(prefix, \\\"CAT\\\");\\n    } else if (traitIndex == 4) {\\n      return _layer(prefix, \\\"ALIEN\\\");\\n    } else if (traitIndex == 5) {\\n      return _layer(prefix, \\\"DOGE\\\");\\n    } else if (traitIndex == 6) {\\n      return _layer(prefix, \\\"FROG_GOLD\\\");\\n    } else if (traitIndex == 7) {\\n      return _layer(prefix, \\\"MOUSE_GOLD\\\");\\n    } else if (traitIndex == 8) {\\n      return _layer(prefix, \\\"APE_GOLD\\\");\\n    } else if (traitIndex == 9) {\\n      return _layer(prefix, \\\"CAT_GOLD\\\");\\n    } else if (traitIndex == 10) {\\n      return _layer(prefix, \\\"ALIEN_GOLD\\\");\\n    } else if (traitIndex == 11) {\\n      return _layer(prefix, \\\"DOGE_GOLD\\\");\\n    }\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Eyes.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\n\\ncontract Eyes is Trait {\\n  // Skin view\\n  // Mouse: 0\\n  string public constant MOUSE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWckJCScnJzx8fGYJxp/AAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCgIsLTYCXl2EUjIJRMGAAAKbZAC/5M7/QAAAAAElFTkSuQmCC\\\";\\n  string public constant MOUSE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWckJCScnJzx8fGYJxp/AAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCgIsLTYCdnWEUjIJRMGAAAHzHACMa7IPxAAAAAElFTkSuQmCC\\\";\\n  string public constant MOUSE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWckJCScnJzx8fGYJxp/AAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCgIsLTYCdl2EUjIJRMGAAAJHNACkBjKxHAAAAAElFTkSuQmCC\\\";\\n  string public constant MOUSE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAAD8RkZGw/zx8fFFHVXFAAAAAXRSTlMAQObYZgAAACJJREFUOMtjYBi8wP7/ART+/19f/6Op4D/AMApGwSgYKAAA+5EG+o56Gh4AAAAASUVORK5CYII=\\\";\\n  string public constant MOUSE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAE/5Pz/+hoZe3CQjAAAAAXRSTlMAQObYZgAAABtJREFUOMtjYBhCgIMDTUBNjZCKUTAKRgHtAAB+8QBtvTcAMwAAAABJRU5ErkJggg==\\\";\\n  string public constant MOUSE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEUAAAAkJCRXyFKEAAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKAZ4P//AcoyZhgFwxQAACR0AjJvfSwqAAAAAElFTkSuQmCC\\\";\\n\\n  // Frog: 1\\n  string public constant FROG_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWcAAABCpkz///+XoPGRAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBg0YAEXmsAFXoZRMApGwSAGAJ86AYhDlf2iAAAAAElFTkSuQmCC\\\";\\n  string public constant FROG_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAAAAAABCpkz///9ZYjdQAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBg0YAEXmkABO8MoGAWjYBADACvZASKoINImAAAAAElFTkSuQmCC\\\";\\n  string public constant FROG_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVhYmwAAABCpkz///8p9twwAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBg0YAEXmkABL8MoGAWjYBADAEGrASg0BSMWAAAAAElFTkSuQmCC\\\";\\n  string public constant FROG_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAAQujUVCpkxbHzrDAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBg0YAEXmkAAK8MoGAWjYBADALAEAQBNGbSAAAAAAElFTkSuQmCC\\\";\\n  string public constant FROG_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVHAOPfNB7fbmA8zv7oAAAAAXRSTlMAQObYZgAAABtJREFUOMtjYBg0QIEDTWCGGiEVo2AUjIKBBADbLwEPsGTK8wAAAABJRU5ErkJggg==\\\";\\n  string public constant FROG_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVrdEccEwC5FntbAAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKA24P//Acp6zjAKhjsAAIyMAubQmKY3AAAAAElFTkSuQmCC\\\";\\n\\n  // Cats: 2\\n  string public constant CAT_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEV0ADMICAjW4cj17uQ4AAAAAXRSTlMAQObYZgAAABZJREFUOMtjYBjeQEWFYRSMglFAIwAA9xwASXm4vVAAAAAASUVORK5CYII=\\\";\\n  string public constant CAT_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAAIICAjW4chWtdgHAAAAAXRSTlMAQObYZgAAABZJREFUOMtjYBjeQEKCYRSMglFAIwAApigAMYl5xA8AAAAASUVORK5CYII=\\\";\\n  string public constant CAT_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAOQICAjW4cg2xUsqAAAAAXRSTlMAQObYZgAAABZJREFUOMtjYBjeQEWCYRSMglFAIwAAzqgAPQRpQ1IAAAAASUVORK5CYII=\\\";\\n  string public constant CAT_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVzADHzkhJnCg09AAAAAXRSTlMAQObYZgAAABJJREFUKM9jYBgQkMYwCoYFAAC4VgBnaf6kIQAAAABJRU5ErkJggg==\\\";\\n  string public constant CAT_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWfiYGBgt+L///9ibcCbAAAAAXRSTlMAQObYZgAAAB5JREFUOMtjYBhW4P9/NP7r62gif+wZRsEoGAXUAQCX2Ab61dcG7QAAAABJRU5ErkJggg==\\\";\\n  string public constant CAT_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVHAMzzUjr4koPwf4VCAAAAAXRSTlMAQObYZgAAABtJREFUOMtjYBhWQIEDTWCGGiEVo2AUjAJyAQCTdwEPtoqJgAAAAABJRU5ErkJggg==\\\";\\n  string public constant CAT_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEUAAAAICAhtdupNAAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKAj4P//AcpKYxgFwwIAAFgNAmXWxHedAAAAAElFTkSuQmCC\\\";\\n\\n  // Ape: 3\\n  string public constant APE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEV7+wMAAACSayD///8/JDF/AAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCQGMBmoDJBYZRMApGwYABAF4KAc2JOLBoAAAAAElFTkSuQmCC\\\";\\n  string public constant APE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWcAAACSayD////l64lvAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCQGMBmoBMAcMoGAWjYMAAALlcAVV93WgeAAAAAElFTkSuQmCC\\\";\\n  string public constant APE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVhYmwAAACSayD///9bvaTOAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCQGMBmoDMBYZRMApGwYABAAnaAbU/MvXGAAAAAElFTkSuQmCC\\\";\\n  string public constant APE_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAEqCXhuSayBzqykqAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCQGMBmoBIAMMoGAWjYMAAAC0sAS1SowumAAAAAElFTkSuQmCC\\\";\\n  string public constant APE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWffNB5PoNv//PdcxyH/AAAAAXRSTlMAQObYZgAAAB5JREFUOMtjYBg64D8QoIpcX4Ou5A/DKBgFo4BeAABeJQd7/5unYgAAAABJRU5ErkJggg==\\\";\\n  string public constant APE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVwAMPfNB/fb2FvgwzdAAAAAXRSTlMAQObYZgAAABtJREFUOMtjYBhCQEEBTWDGDEIqRsEoGAW0AwDvEwGxXm8ZoQAAAABJRU5ErkJggg==\\\";\\n  string public constant APE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVqZWMoHACkYH8mAAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKAZ4P//AcrKYRgFwxQAAI43AmtGeoLrAAAAAElFTkSuQmCC\\\";\\n\\n  // Alien: 4\\n  string public constant ALIEN_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAOoJDAdnzujtq9nGAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBjKQEUFTUBCgmEUjIJRQC8AAKXTAHkKAFKsAAAAAElFTkSuQmCC\\\";\\n  string public constant ALIEN_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAKoICAhsyOJ1xWj1AAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBjKQEICTUBFhWEUjIJRQC8AAKQ7AHlAkZAkAAAAAElFTkSuQmCC\\\";\\n  string public constant ALIEN_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVwANQICAhsyOI5MQBWAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBjKQEIFTUBFgmEUjIJRQC8AAKUHAHlRv0sRAAAAAElFTkSuQmCC\\\";\\n  string public constant ALIEN_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVHAM5BuNpWwN7KSNqmAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBjKQEMDTUBEhGEUjIJRQC8AAKZbAHm+C5+oAAAAAElFTkSuQmCC\\\";\\n  string public constant ALIEN_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWfiR0xHx+L8/v9h5aJlAAAAAXRSTlMAQObYZgAAAB5JREFUOMtjYBhC4P9/NP7112gif+wZRsEoGAX0AgCE5Qb6uWgeRgAAAABJRU5ErkJggg==\\\";\\n  string public constant ALIEN_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAFzeVmXmgYyfcOAVAAAAAXRSTlMAQObYZgAAACJJREFUOMtjYBhCgIMDTUBNDU1gxgw0AQUFhlEwCkYBjQAANawBzdOo8sAAAAAASUVORK5CYII=\\\";\\n  string public constant ALIEN_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVya3UICAiZn1B1AAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKA94P//AcpKYxgFwwsAAG2RAmVHLjXYAAAAAElFTkSuQmCC\\\";\\n\\n  // Doge: 5\\n  string public constant DOGE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAANUVEQ7///+UYrkZAAAAAXRSTlMAQObYZgAAABZJREFUOMtjYBjEQIUAfxSMglEwoAAAB+cASbvRsD4AAAAASUVORK5CYII=\\\";\\n  string public constant DOGE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAH0VEQ7////gJiQQAAAAAXRSTlMAQObYZgAAABZJREFUOMtjYBjEQIIAfxSMglEwoAAAsVAAMYYGv/kAAAAASUVORK5CYII=\\\";\\n  string public constant DOGE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEV0AFEVEQ7///9FdOUhAAAAAXRSTlMAQObYZgAAABhJREFUOMtjYBjEQAKNr8IwCkbBKBhEAADcNAA9lvR/RAAAAABJRU5ErkJggg==\\\";\\n  string public constant DOGE_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEUAAACfdzgbVBGtAAAAAXRSTlMAQObYZgAAABRJREFUKM9jYKA6YIMxEhhGwXAHAMNOAGfViymQAAAAAElFTkSuQmCC\\\";\\n  string public constant DOGE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVx+wP/AABBquz8/v/7RaQZAAAAAXRSTlMAQObYZgAAAB9JREFUOMtjYBi04D8QoIpcf42m5I89wygYBaNgwAAAHVsG+hdSEVQAAAAASUVORK5CYII=\\\";\\n  string public constant DOGE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAABz/QUH/cnKceMWeAAAAAXRSTlMAQObYZgAAAB1JREFUOMtjYBg8QAGdPwNNYIYCAR2jYBSMAnoCABoqAbGPkLppAAAAAElFTkSuQmCC\\\";\\n  string public constant DOGE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVya3UfGhWbBPmKAAAAAXRSTlMAQObYZgAAABdJREFUKM9jYKA24P//AcpKYxgFwx0AAJiZAmUBXFhvAAAAAElFTkSuQmCC\\\";\\n\\n  // Front view\\n  // Mouse: 0\\n  string public constant FRONT_MOUSE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAYSURBVCjPY2AgEsyZA8Fw8FEFgkfBcAYA3bAEmxgUpywAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_MOUSE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAYSURBVCjPY2AgEsyZA8FwoPIRgkfBcAYA3BYEm2WQB0sAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_MOUSE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAdSURBVCjPY2AgEsyZA8FwoPKRgeGjCrHaR8HQBADc4wSbx3hv2QAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_MOUSE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAADx8fFGw/z8RkZ76pEBAAAAAXRSTlMAQObYZgAAABdJREFUCNdjYAAD0VAgERUPYrEyDCYAALi7AT4MkX99AAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_MOUSE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD+hob5Pz8OwnIiAAAAAXRSTlMAQObYZgAAABVJREFUCNdjYEAAFhYgISkJYw0KAAAlXQBDsjfRKgAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_MOUSE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAeSURBVCjPY2AgBBgZGBgYVKCcOwhxFRUIHgXDGQAABmMBkrRf8jEAAAAASUVORK5CYII=\\\";\\n\\n  // Frog: 1\\n  string public constant FRONT_FROG_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAABCpkz///8AAADaoYegAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYAhgZWBg2MDNMDgBAKTJARGvt+qEAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_FROG_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAABCpkwAAAD///8qussDAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYAhgZWBg2MDNMDgBAKTJARGvt+qEAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_FROG_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAABCpkwAAAD///8qussDAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYAhgZWBg2MDHMDgBAKaRARSCVSMWAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_FROG_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABCpkwujUVVHvfnAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYAhgZWBgWMDFMDgBAJqhAQBfDkj7AAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_FROG_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADfbmDfNB6638WMAAAAAXRSTlMAQObYZgAAABZJREFUCNdjYBBgYWBgSJEEEmDWIAMAYxwApt1kpUkAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_FROG_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAAAcEwDRtKJJAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYGBg4P/AwFfAQBsAAIZyAX7ot6HTAAAAAElFTkSuQmCC\\\";\\n\\n  // Cats: 2\\n  string public constant FRONT_CAT_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADW4cgICAgpWG32AAAAAXRSTlMAQObYZgAAABFJREFUCNdjYMAJJCQYBh4AABl4ADERYRJzAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_CAT_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAICAjW4cjBKskuAAAAAXRSTlMAQObYZgAAABFJREFUCNdjYMAJJCQYBh4AABl4ADERYRJzAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_CAT_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADW4cgICAgpWG32AAAAAXRSTlMAQObYZgAAABFJREFUCNdjYMAJJFQYBh4AAB+oAD1GfLEsAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_CAT_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAADzkhKiK+2WAAAAAXRSTlMAQObYZgAAABBJREFUCNdjYEAFbAkMVAUAH+AAZ1iIvc8AAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_CAT_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD///9gt+LiYGCclyvXAAAAAXRSTlMAQObYZgAAABhJREFUCNdjYMAGQkOBRGYtkAgRZRhQAAAHagH68ks+IQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_CAT_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD4koPzUjrXizT8AAAAAXRSTlMAQObYZgAAABVJREFUCNdjYMAGBFiARIokjDWAAABWOACmNAJ9WgAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_CAT_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAeSURBVCjPY2CgHDAyMDAwcEA5P+DCHBwQPAqGMAAAC6oBIm0YoIMAAAAASUVORK5CYII=\\\";\\n\\n  // Ape: 3\\n  string public constant FRONT_APE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAACSayD///8AAABjE7LuAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAkQAgobOBYTABALRUAUE6qUrJAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAACSayAAAAD///+TCP5NAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAkQAgobOBYTABALRUAUE6qUrJAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAACSayAAAAD///+TCP5NAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAkQAgofOAYTABAM70AXFIS3QeAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAACSayCCXhvR8cEyAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAkQAgobGAYTABAKk4AS2OnR7CAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD//PffNB5PoNu2dNPXAAAAAXRSTlMAQObYZgAAABdJREFUCNdjYECA0FAgkfkFxAphGCQAAH9nArGt+abTAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_APE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADfb2HfNB9IBLvPAAAAAXRSTlMAQObYZgAAABVJREFUCNdjYEAAAQEgkZICYw0KAACTlAEJt/qpQQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_APE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAAAoHAB1TvPKAAAAAXRSTlMAQObYZgAAABNJREFUCNdjYAAD/g8MbAcYaAAAmdsBxjfxqA8AAAAASUVORK5CYII=\\\";\\n\\n  // Alien: 4\\n  string public constant FRONT_ALIEN_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABnzugJDAfufAhvAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEADEhJAQkWFYZAAAEIEAHmk+RO7AAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ALIEN_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAICAhsyOKWHuTVAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEADEhJAQkWFYZAAAEIEAHmk+RO7AAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ALIEN_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAICAhsyOKWHuTVAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEADEipAQkWCYZAAAEJAAHnqcWUsAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ALIEN_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABWwN5BuNpNaNzWAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEADIiJAQkODYZAAAEHcAHnnfXiLAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ALIEN_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD8/v/iR0xHx+LiC8udAAAAAXRSTlMAQObYZgAAABhJREFUCNdjYECA0FAgkVkLJEJEGQYJAAAbJAH6EljucAAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ALIEN_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADmgYzeVmU+WfbBAAAAAXRSTlMAQObYZgAAABtJREFUCNdjYEAAFhYgISkJJFJSgISAAMPAAwCdDQEjJ/SyKQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ALIEN_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAeSURBVCjPY2AgGTAyMDAwcEA5P+DCHBwQPAqGEwAAHtsBIq1KNLoAAAAASUVORK5CYII=\\\";\\n\\n  // Doge: 5\\n  string public constant FRONT_DOGE_RIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD///8VEQ7dSuz9AAAAAXRSTlMAQObYZgAAABBJREFUCNdjYIAACSgebAAAHMAAMYYQwVYAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE_LEFT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAVEQ7///9tmZX7AAAAAXRSTlMAQObYZgAAABBJREFUCNdjYIAACSgebAAAHMAAMYYQwVYAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE_CROSSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAVEQ7///9tmZX7AAAAAXRSTlMAQObYZgAAABJJREFUCNdjYIAACSBWYRh8AAAjsAA9lDVa0QAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_DOGE_CLOSED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACfdzgbVBGtAAAAAXRSTlMAQObYZgAAABFJREFUCNdjYACCBAY2BhoBACSWAGeG8raLAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_DOGE_3D =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD8/v//AABBquxVNP1bAAAAAXRSTlMAQObYZgAAABhJREFUCNdjYACD0FAgkVkLJEJEGQYTAAAlAQH6aSoA1gAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_DOGE_LASER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD/cnL/QUFzoqIbAAAAAXRSTlMAQObYZgAAABdJREFUCNdjYGAQYADiFCCRAmYxDCoAAJtQAQnk4ZJQAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_DOGE_SUN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAAAfGhVv7UOyAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYGBg4P/AwJbAQBsAAH4qAWZN2x1aAAAAAElFTkSuQmCC\\\";\\n\\n  constructor() {\\n    _tiers = [3100, 6100, 8100, 9300, 9800, 9900, 10000];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    pure\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"Right\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Left\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Crossed\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Sun\\\"; \\n    } else if (traitIndex == 4) {\\n      return \\\"Closed\\\";\\n    } else if (traitIndex == 5) {\\n      return \\\"3D\\\";\\n    } else if (traitIndex == 6) {\\n      return \\\"Laser\\\";\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256 layerIndex,\\n    string memory prefix\\n  ) internal view override returns (string memory layer) {\\n    if (traitIndex == 0) {\\n      return _indexedLayer(layerIndex, prefix, \\\"RIGHT\\\");\\n    } else if (traitIndex == 1) {\\n      return _indexedLayer(layerIndex, prefix, \\\"LEFT\\\");\\n    } else if (traitIndex == 2) {\\n      return _indexedLayer(layerIndex, prefix, \\\"CROSSED\\\");\\n    } else if (traitIndex == 3) {\\n      return _indexedLayer(layerIndex, prefix, \\\"SUN\\\");\\n    } else if (traitIndex == 4) {\\n      return _indexedLayer(layerIndex, prefix, \\\"CLOSED\\\");\\n    } else if (traitIndex == 5) {\\n      return _indexedLayer(layerIndex, prefix, \\\"3D\\\");\\n    } else if (traitIndex == 6) {\\n      return _indexedLayer(layerIndex, prefix, \\\"LASER\\\");\\n    }\\n  }\\n\\n  function _getLayerPrefix(uint256 layerIndex)\\n    internal\\n    pure\\n    override\\n    returns (string memory prefix)\\n  {\\n    if (layerIndex == 0) {\\n      return \\\"FROG_\\\";\\n    } else if (layerIndex == 1) {\\n      return \\\"MOUSE_\\\";\\n    } else if (layerIndex == 2) {\\n      return \\\"APE_\\\";\\n    } else if (layerIndex == 3) {\\n      return \\\"CAT_\\\";\\n    } else if (layerIndex == 4) {\\n      return \\\"ALIEN_\\\";\\n    } else if (layerIndex == 5) {\\n      return \\\"DOGE_\\\";\\n    }\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Hats.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\n\\ncontract Hats is Trait {\\n  // Skin view\\n  string public constant SPECIAL_OPS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVldC1BQDp+dliPhGKbkW5wpPPzAAAAAXRSTlMAQObYZgAAALJJREFUSMftkF0OhCAMhIvsATTxALvUA5C2B3Bb73+mrRqjxMjDPvOFv4EBBgCcZSsnL5b3VcPsc1fNIgQ11GipGkxRqgbGpPUTjKyYyB5ycA5Nkrjc4bmuOn7GfN4HIOgGj83+thQTz/E75k6855TX46P/Spf3GskMZSLhpGtrt4CJSMyLCqOi3l9jAbaACD1NRHwz5HCM+shouA52HYoOzoXhMAxP/xYKf6PRaDQa//ADr8MV+48oCrMAAAAASUVORK5CYII=\\\";\\n  string public constant CROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEUAAAACZ7cxtwI16QL/0Sn/3Vv/5430D+K1AAAAAXRSTlMAQObYZgAAAERJREFUSMdjYMACEgJY2RgoAgEMDKwMtAWUW4HXmwkhrmyJQaZiIBqEMRS4uqWEuDqrhIBpIGYYBaNgFIyCUTAKRgwAAEUsCuU59t5pAAAAAElFTkSuQmCC\\\";\\n  string public constant MOTORCYCLE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEUAAAAkJCQ6OjpUVFRhYWH/PT1ubm7/V1ejo6PX19epJvNBAAAAAXRSTlMAQObYZgAAAM5JREFUSMftkDEOwjAMRcPCTHoCagSsCLfKihTT7FCJvUKBmbT0BpyB4+KSFBbICfImy3n6yY8QPyjUsUBG/EOrlqJCUTri0/8CDgkxQZu6igpkWhsX9ncbfSSZiICFJjS1tfZMqNxbkjJbPWCsqJEP2spaIv4wzauJlHB9NvOQgM4PFxoTpE/Ig3Da+GHa6a8goQHp973bBcF0WH6EDPIg3GDhhwbWvXK9fwNHyJnfA9fjS6ZcApZ9dxAiZHxqDqh2KIFbGOMSiUQikYjzAm+BMKFIftxBAAAAAElFTkSuQmCC\\\";\\n  string public constant KNIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUwAIGvRA7fVhK/WBtCAAAAAXRSTlMAQObYZgAAACtJREFUOMtjYGBYtYoBFcAEtFbQQwDOhQAGdBAKBXCBmVDAMApGwSgYWAAARq4cTV6NFBEAAAAASUVORK5CYII=\\\";\\n  string public constant HARDHAT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVldC3gvADDw8P/2hD//JQq30h5AAAAAXRSTlMAQObYZgAAAFBJREFUSMdjYAACYyBgwAcMDYWFUQQMmIegAmNlI1RvMikgSYIAUAEMgAVZHJAUgNQgYQZBQQZGFScBEA3G6EAQDTCMglEwCkbBKBgFwwUAANLMDPQRsBm8AAAAAElFTkSuQmCC\\\";\\n  string public constant KNIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAG1BMVEX4ClzkOzvuZGSZmZmzs7PAwMDNzc3a2trn5+eNpld+AAAAAXRSTlMAQObYZgAAALxJREFUSMftkTEOwjAMRSNRlZ2he4fCipQcoFLtnUp2ZlqRdGVKegN6bFIY0wYOkDdaT/a3LcQGyH0lAUDswTie04Kup6sQxa6AuvZJge0p3YGHy48OfTWr9qASIadFtsX2FsxMqP2y+MmODXMsEEAQ5pd3emg0RgIAkSifwltnDSNFAtH3gt5bzQ+OcyCoT9E5Y0yYFwkddID30jtjQ1yKR6jwpCBYGxIYhC4S5MrtCLxCIEUmk8lkMn/wBpnuNHgsWh6yAAAAAElFTkSuQmCC\\\";\\n  string public constant RAINBOW =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVldC3lUEdPjONl5Enj5Ekn+BeYAAAAAXRSTlMAQObYZgAAAG5JREFUSMftz7ENwzAMRFEi8QA5aYGA0AAOqAmM23+mUJ2vcDKA+RuCwGNBs2wQsF850c/7g3gpGAgBA7sC7wq8K4jpft6f098K2BSwKZiEgI1QQKJdv+gxF8j5AXjYvxJGHmDNPKBVVVVV1W36AkLsDMOwXhdMAAAAAElFTkSuQmCC\\\";\\n  string public constant GAS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEVodAAQEBAqKipeXl5sbGyGhobN4uAxiuNyAAAAAXRSTlMAQObYZgAAAGZJREFUSMdjYBhZgJFRQACZb+DAwgznsAawBqCoNjZG1R0awBqKzFcCAhQFYQlsqch8BSYFJtIUMAkwKqDwFYUU8ClgcQBBFC8KMCJ7kdnQUUTYAEWBoCB+BaNgFIyCUTAKRgEBAAAFzwlvyOPfIwAAAABJRU5ErkJggg==\\\";\\n  string public constant HAMBURGER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAGFBMVEUAAABWMBLzPSHEaB3miT488yF9+2z/6B+OeA4iAAAAAXRSTlMAQObYZgAAAI5JREFUSMftkTEOwyAMRb3Q3RN7z+AbmAN4gbmL2TPl+nVoIkUQoiqz32AJva9vEAAGpx8wY5N0HyBOzPPAHyvoPkD7JeYNtGl+uGJ3qbXQRYs1s6njITwENFfVrKWUrNUOQcNLigapIgEE4N1R4dNMk8XG2jGsiLgiLhEXmxgRhwB2XP7kGXAcx3GcB3wBQf41+gnJ8/EAAAAASUVORK5CYII=\\\";\\n  string public constant ASTRONAUT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAJFBMVEUAAABwcHAOmNwQpe0Tsf8uuv9Uzf/Nzc236//n5+fx8fH09PT96emkAAAAAXRSTlMAQObYZgAAAPFJREFUSMftkTtuwzAMQIkuRrp18p4cITlAB/cI9hGCjvJkqFk6ZsxmSF6yklq6BSIvF8m1ChuFfQK9hYTwQPEDkChalVLP3pheaVgwE5gQ/wszCC0aALMqsHN2W/DMmwIS0XYFETKBVUEGkYXQBVJunAze+EGY2ZKT+PZyqJrr998E4m8AOyuhD+JR2B9Ozed1EtzD/8T46rRFdMMk1OdzEtqv2yg8yrDOqcL+9NEkwbaX+ySEdVr7Kxyruo7n6BTY8jJVaLHvNI5Nhj+q9yi8KUBECVfbkbDpQdNizKJUEOc3nR5DX+j1ZWUymUwmM+MJxypxehjjjQAAAAAASUVORK5CYII=\\\";\\n  string public constant USHANKA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEUAAAB5HByFhYWSkpKfn5+srKyqZcbPAAAAAXRSTlMAQObYZgAAAItJREFUSMftjzEKwzAMRQWtL9ATtLK6F8negxzvIXXuf5WaDK2DwZkLeugPH33EF0Bl2+eHk7C0Hqpzrd8iC4woSvMwEJB1GFBNcnIhpGHJgj4fAt2bVJbDspXLOl0ZX478/RLnaT/fSkmIHzdi5azKa/+Bx5SqJCGuiL4L8Lfe+ynFRzAMwzCMP+EDYuAXa3pgoK4AAAAASUVORK5CYII=\\\";\\n  string public constant SANTA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEVjb2zGJCrZKzHdQUbo6N/z8+6qFXUgAAAAAXRSTlMAQObYZgAAAH1JREFUSMftzrENw0AIhWGKZIDjlAGABeJHBkgK+kQ677+K3aWwwzUp+SokfiGITiwGoYyYzwLlNGBMA/Q0UEDTwHb5BVX8XLrs26bs5togfgjAwreIz9K6icnxkjzGGESxxou5nzwb8Z1CNNJnCfd8T5f3JLg+qZRSSvmLDRNvDyRpMVYXAAAAAElFTkSuQmCC\\\";\\n\\n  // Front view\\n  string public constant FRONT_SPECIAL_OPS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAB+dliPhGKbkW5+ND/UAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEjgZWBgcGBkGJwAAGqxAK/ONtuCAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_CROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQAAAAAz8sVhAAAAAnRSTlMAAHaTzTgAAAAMSURBVAjXY2CgLQAAAGAAATeQF3gAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_MOTORCYCLE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAABMSURBVCjP7cyrDYAwAEDB4+NwiE7ACO2irNVuQYKoxyMIoWECBE+eeLzqYCGIKa8YLw9iijxQQyHDADPHtCsb+ntWFVpQtY9G/j7ZCRxkDJDlVoYwAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_KNIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAADfVhI86kBYAAAAAXRSTlMAQObYZgAAAA5JREFUCNdj4P/AQEsAAF4RAQAJJ6MzAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_HARDHAT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD/2hDDw8OFqE31AAAAAXRSTlMAQObYZgAAABRJREFUCNdjYIhMZWBgCGBlGJwAAKhHARREPXISAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_KNIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQAAAAAz8sVhAAAAAnRSTlMAAHaTzTgAAAAMSURBVAjXY2CgLQAAAGAAATeQF3gAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_RAINBOW =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAADj5EnlUEdPjONN8RqPAAAAAXRSTlMAQObYZgAAAA9JREFUCNdjYAhdzTCIAQCd9QEBc0kIcgAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_GAS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAACGhobN4uAqKioQEBCW/DTpAAAAAXRSTlMAQObYZgAAAC5JREFUGNNjYGBgFGAUYAABQQFGQTBDSIFJEZXB7MBigMpgcWBxgDBcXCCMYQkAFYoDQpDT6ogAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_HAMBURGER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAGFBMVEUAAADmiT7EaB19+2w88yHzPSH/6B9WMBInv3+2AAAAAXRSTlMAQObYZgAAADFJREFUGNNjYGAQBAIGEBBUFBQCM0xcTJzBjFAgADPSgADMKE8vK4cwgACiC6Z9WAIAD+MIYM1v0dEAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ASTRONAUT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAGFBMVEUAAADNzc0OmNwQpe0Tsf8uuv9Uzf+36/+lKt1+AAAAAXRSTlMAQObYZgAAADFJREFUGNNjYGAQBAIGEFB2CSuHMEzC0qGM0DQwQ8nENQzCMHYJhTCUTVzADLj2YQkAcDMGf78bGZYAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_USHANKA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAcSURBVCjPY2BgYGBYswZBMjAwMDCsQaFGwcgFAFp8BAmdVdSNAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_SANTA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQAAAAAz8sVhAAAAAnRSTlMAAHaTzTgAAAAMSURBVAjXY2CgLQAAAGAAATeQF3gAAAAASUVORK5CYII=\\\";\\n\\n  // Front armor view\\n  string public constant FRONT_ARMOR_SPECIAL_OPS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAACPhGKbkW5BQDp+dlh+zwHRAAAAAXRSTlMAQObYZgAAAB9JREFUGNNjYGBgVDYSYAABIScRITBDUURIkWEUgAAAYMsBScRVzMEAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ARMOR_CROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAAD/540CZ7f/3VsxtwI16QL/0SnadNOZAAAAAXRSTlMAQObYZgAAABlJREFUGNNjYGAQMglWZACB5FQ3M4ZRgAIAKtAB/5DJXMEAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ARMOR_MOTORCYCLE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAABUVFRhYWH/V1f/PT1ubm5TBb01AAAAAXRSTlMAQObYZgAAACRJREFUGNNjYGAQVHYKZQABQWEjVQZigQADAytMVyjRuoYcAAALBQIHLifLJQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ARMOR_KNIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAACvRA7fVhK/CDrWAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYACD0FAgMXMmw6ADABZDAd3yppsFAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ARMOR_HARDHAT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD//JTgvADDw8N9xan+AAAAAXRSTlMAQObYZgAAABhJREFUCNdjYGB0YGBg0K0AEqtWMQw6AABOmAI7b+TcDwAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ARMOR_KNIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAABESURBVCjP7cyxDUBAAAXQd3LtH8ACDGB0cxiAASxgAYVERHWVyhvgFZgjET06t8PTsmlVrjSTJQbUd1phN5K1uf197wSkaQiNqd5CiwAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_ARMOR_RAINBOW =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAADj5EnlUEfV0W1oAAAAAXRSTlMAQObYZgAAABFJREFUCNdjYACD0FUMgxMAAJhdAQAOYUYrAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ARMOR_GAS =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAABOSURBVCjP7cxBCYBAFIThb8UAno3wMokJXirZTEYwwCbw4IIgBvDgfxn4mZkCrNhAgbisvacgovvBg9Irh/leSDJJGKFNS5W1vX78fJMT4r8KaMLOpcEAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ARMOR_HAMBURGER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAA88yF9+2wIpCLGAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAt4lAwpGFYTABAKLiAR0JrN+2AAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ARMOR_ASTRONAUT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAAxSURBVCjPY2RgYGD48pmBgfczAy8PAxQ8R6GoBM4iGcoIYT1jYJBiYJCkqjWjgJoAAB/QCIUq0ToRAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_ARMOR_USHANKA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAACfn5+SkpKFhYV5HByeMTx6AAAAAXRSTlMAQObYZgAAAB9JREFUGNNjYGBgVDZWYAABZRNnQzBDyMhYiGEUgAAA7GUBzApMvPIAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ARMOR_SANTA =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAADdQUbZKzHGJCrz8+7o6N+uWPkKAAAAAXRSTlMAQObYZgAAAB9JREFUGNNjYGAQMlYyYgABk5AQZzDDlYEhhGEUgAAAfMQCUmAKvrwAAAAASUVORK5CYII=\\\";\\n\\n  constructor() {\\n    _frontArmorTraitsExists = true;\\n    _tiers = [\\n      4350,\\n      5150,\\n      5950,\\n      6600,\\n      7300,\\n      7900,\\n      8500,\\n      9000,\\n      9300,\\n      9500,\\n      9700,\\n      9900,\\n      10000\\n    ];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    pure\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Knitted Cap\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Hard Hat\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Special Ops\\\";\\n    } else if (traitIndex == 4) {\\n      return \\\"Santa\\\";\\n    } else if (traitIndex == 5) {\\n      return \\\"Ushanka\\\";\\n    } else if (traitIndex == 6) {\\n      return \\\"Gas Mask\\\";\\n    } else if (traitIndex == 7) {\\n      return \\\"Rainbow Beanie\\\";\\n    } else if (traitIndex == 8) {\\n      return \\\"Motorcycle Helmet\\\";\\n    } else if (traitIndex == 9) {\\n      return \\\"Hamburger\\\";\\n    } else if (traitIndex == 10) {\\n      return \\\"Astronaut\\\";\\n    } else if (traitIndex == 11) {\\n      return \\\"Knight\\\";\\n    } else if (traitIndex == 12) {\\n      return \\\"Crown\\\";\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256,\\n    string memory prefix\\n  ) internal view override returns (string memory layer) {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return _layer(prefix, \\\"KNIT\\\");\\n    } else if (traitIndex == 2) {\\n      return _layer(prefix, \\\"HARDHAT\\\");\\n    } else if (traitIndex == 3) {\\n      return _layer(prefix, \\\"SPECIAL_OPS\\\");\\n    } else if (traitIndex == 4) {\\n      return _layer(prefix, \\\"SANTA\\\");\\n    } else if (traitIndex == 5) {\\n      return _layer(prefix, \\\"USHANKA\\\");\\n    } else if (traitIndex == 6) {\\n      return _layer(prefix, \\\"GAS\\\");\\n    } else if (traitIndex == 7) {\\n      return _layer(prefix, \\\"RAINBOW\\\");\\n    } else if (traitIndex == 8) {\\n      return _layer(prefix, \\\"MOTORCYCLE\\\");\\n    } else if (traitIndex == 9) {\\n      return _layer(prefix, \\\"HAMBURGER\\\");\\n    } else if (traitIndex == 10) {\\n      return _layer(prefix, \\\"ASTRONAUT\\\");\\n    } else if (traitIndex == 11) {\\n      return _layer(prefix, \\\"KNIGHT\\\");\\n    } else if (traitIndex == 12) {\\n      return _layer(prefix, \\\"CROWN\\\");\\n    }\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Mouths.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\n\\ncontract Mouths is Trait {\\n  // Skin view\\n  // Mouse: 0\\n  string public constant MOUSE_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAALVYWFj80eMK120yAAAAAXRSTlMAQObYZgAAABxJREFUOMtjYBjmQAFdIASNz+jKMApGwSggCwAAaIUAuwUYiUcAAAAASUVORK5CYII=\\\";\\n  string public constant MOUSE_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAOtYWFj80eN5Pf/YAAAAAXRSTlMAQObYZgAAABxJREFUOMtjYBjegFERXcQFXQUjwygYBaOALAAAXiEAaZ6N2uMAAAAASUVORK5CYII=\\\";\\n\\n  // Frog: 1\\n  string public constant FROG_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVWa3SUT2C1RgEMAAAAAXRSTlMAQObYZgAAABJJREFUKM9jYKAD4GMYBcMUAAAcOgAPPOXO0QAAAABJRU5ErkJggg==\\\";\\n  string public constant FROG_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEV0APksIR6UTl1i+bioAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBhCgDEETYB1KcMoGAWjYMAAAIeXAQDvPvAiAAAAAElFTkSuQmCC\\\";\\n\\n  // Cats: 2\\n\\n  \\n  // Alien: 3\\n  string public constant ALIEN_SMIRK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVya3WUT2CRxyFJAAAAAXRSTlMAQObYZgAAABRJREFUKM9jYBgQoABjyDCMgqEMAGxgAD0bClW7AAAAAElFTkSuQmCC\\\";\\n  string public constant ALIEN_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABJJREFUKM9jYBhYYMMwCoYyAABrQAA9cZpOMgAAAABJRU5ErkJggg==\\\";\\n  string public constant ALIEN_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVCaW6UT2BoZaUaAAAAAXRSTlMAQObYZgAAABJJREFUKM9jYBhYIMMwCoYyAAAzQAAddC7+RwAAAABJRU5ErkJggg==\\\";\\n  string public constant ALIEN_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVwANI1IAuUT2DNoiTcAAAAAXRSTlMAQObYZgAAABpJREFUOMtjYBjegDEATYB1CsMoGAWjgDoAAA8gAOueLsSjAAAAAElFTkSuQmCC\\\";\\n\\n// Ape: 4\\n  string public constant APE_SMIRK = ALIEN_SMIRK;\\n  string public constant APE_BIG = ALIEN_BIG;\\n  string public constant APE_SMALL = ALIEN_SMALL;\\n  string public constant APE_FROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEUAAC6UT2BssdvWgWEuAAAAAXRSTlMAQObYZgAAABlJREFUOMtjYBhWQIGgCkYHhlEwCkYBdQAAST4AYreuqbAAAAAASUVORK5CYII=\\\";\\n  string public constant APE_MUSTACHE = ALIEN_MUSTACHE;\\n\\n  // Doge: 5\\n  string public constant DOGE_SMIRK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVya3WUT2CRxyFJAAAAAXRSTlMAQObYZgAAABRJREFUKM9jYBgQIABj8DGMgqEMADdQAB8IFVfpAAAAAElFTkSuQmCC\\\";\\n  string public constant DOGE_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEVzAACUT2DomOQeAAAAAXRSTlMAQObYZgAAABJJREFUKM9jYBhYIMcwCoYyAAA2wAAf/BIHWwAAAABJRU5ErkJggg==\\\";\\n  string public constant DOGE_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAQMAAACQp+OdAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABJJREFUKM9jYBhYwMcwCoYyAAAawAAPQ9QEUQAAAABJRU5ErkJggg==\\\";\\n  string public constant DOGE_FROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEVwAJqUT2BsstvZNZqLAAAAAXRSTlMAQObYZgAAABxJREFUOMtjYBhWQIGwkgA0PiMLwygYBaOALAAAiwEAdlwHFK4AAAAASUVORK5CYII=\\\";\\n  string public constant DOGE_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAACVBMVEV0ACg2IQyUT2B2Y3PgAAAAAXRSTlMAQObYZgAAABlJREFUOMtjYBjmIASNz5jKMApGwSigDgAAcJ8AuwGKa1QAAAAASUVORK5CYII=\\\";\\n\\n  // Front view\\n  // Mouse: 0\\n  string public constant FRONT_MOUSE_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAD80eNYWFjkEfkPAAAAAXRSTlMAQObYZgAAABZJREFUCNdjYMANBEDECiBm6mIYKAAAnvIBRSBsz2QAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_MOUSE_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABYWFj80eN4mg01AAAAAXRSTlMAQObYZgAAABZJREFUCNdjYMAJGBVBpAuIxcgwUAAANNoAaVg+T9UAAAAASUVORK5CYII=\\\";\\n\\n  // Frog: 1\\n  string public constant FRONT_FROG_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAAA9JREFUCNdjYICDBww0AABKwADhDIMvpQAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_FROG_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAAsIR6UTl0+UFV7AAAAAXRSTlMAQObYZgAAABRJREFUCNdjYEAAxhAgwbqUYTABAI/BAQBb10M/AAAAAElFTkSuQmCC\\\";\\n\\n  // Cats: 2\\n\\n\\n  // Alien: 3\\n  string public constant FRONT_ALIEN_SMIRK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABNJREFUCNdjYEAFTAwMjAcYqAcAOk0AxAK2t8EAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ALIEN_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABBJREFUCNdjYMAAzAcYqAcAOkcAxDphh+IAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ALIEN_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABBJREFUCNdjYMAAjAcYqAcAOa0Awvt43+8AAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_ALIEN_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAA1IAuUT2ABXfVlAAAAAXRSTlMAQObYZgAAABRJREFUCNdjYMAJGAOABOsUhgEFAHZRAOu70/C4AAAAAElFTkSuQmCC\\\";\\n\\n  // Ape: 4\\n  string public constant FRONT_APE_SMIRK = FRONT_ALIEN_SMIRK;\\n  string public constant FRONT_APE_BIG = FRONT_ALIEN_BIG;\\n  string public constant FRONT_APE_SMALL = FRONT_ALIEN_SMALL;\\n  string public constant FRONT_APE_FROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABssduUT2Dg7htjAAAAAXRSTlMAQObYZgAAABNJREFUCNdjYMAGBOAspgaGAQUAScAAk5NAtAAAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_APE_MUSTACHE = FRONT_ALIEN_MUSTACHE;\\n\\n  // Doge: 5\\n  string public constant FRONT_DOGE_SMIRK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABJJREFUCNdjYEAFjED8gIF6AABDMADi7zfJjwAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_DOGE_BIG =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAABBJREFUCNdjYMAAjA8YqAcAQy0A4p55BkcAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE_SMALL =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAQMAAAAhR2qPAAAABlBMVEUAAACUT2BlLptxAAAAAXRSTlMAQObYZgAAAA9JREFUCNdjYMAEDxioBwBC4ADhVa/7BAAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_DOGE_FROWN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAABsstuUT2CnTmGzAAAAAXRSTlMAQObYZgAAABZJREFUCNdjYMAGBBDMBUDMxMEwUAAAXWYAu5CDr/AAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_DOGE_MUSTACHE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAACVBMVEUAAAA2IQyUT2AnfpbCAAAAAXRSTlMAQObYZgAAABNJREFUCNdjYMANQoCYMZVhQAEAXosAu6Iz+KcAAAAASUVORK5CYII=\\\";\\n\\n  constructor() {\\n    _tiers = [3000, 5000, 7000, 9000, 10000];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    pure\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"Small\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Smirk\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Big\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Frown\\\";\\n    } else if (traitIndex == 4) {\\n      return \\\"Mustache\\\";\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256 layerIndex,\\n    string memory prefix\\n  ) internal view override returns (string memory layer) {\\n    if (traitIndex == 0) {\\n      return _indexedLayer(layerIndex, prefix, \\\"SMALL\\\");\\n    } else if (traitIndex == 1) {\\n      return _indexedLayer(layerIndex, prefix, \\\"SMIRK\\\");\\n    } else if (traitIndex == 2) {\\n      return _indexedLayer(layerIndex, prefix, \\\"BIG\\\");\\n    } else if (traitIndex == 3) {\\n      return _indexedLayer(layerIndex, prefix, \\\"FROWN\\\");\\n    } else if (traitIndex == 4) {\\n      return _indexedLayer(layerIndex, prefix, \\\"MUSTACHE\\\");\\n    }\\n  }\\n\\n  function _getLayerPrefix(uint256 layerIndex)\\n    internal\\n    pure\\n    override\\n    returns (string memory prefix)\\n  {\\n    if (layerIndex == 0) {\\n      return \\\"FROG_\\\";\\n    } else if (layerIndex == 1) {\\n      return \\\"MOUSE_\\\";\\n    } else if (layerIndex == 2) {\\n      return \\\"APE_\\\";\\n    } else if (layerIndex == 3) {\\n      return \\\"CAT_\\\";\\n    } else if (layerIndex == 4) {\\n      return \\\"ALIEN_\\\";\\n    } else if (layerIndex == 5) {\\n      return \\\"DOGE_\\\";\\n    }\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Pants.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\n\\ncontract Pants is Trait {\\n  // Skin view\\n  // Short pants\\n  string public constant SHORT_FANCY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVhYmzOfBTTexbcghM7VPhxAAAAAXRSTlMAQObYZgAAAFhJREFUOMtjYBgFVAdhU0MzUQT2rdxXhyKwbt/e9SgCdfv27kYTqEUVqNy1M2s0aIcNCN0eNgtF4OWqXXtRBN7m7duJIvCzbi+qip95tT9RBHbmZb6lrzcA0kkexhJMXJEAAAAASUVORK5CYII=\\\";\\n  string public constant SHORT_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWcXGBYcHRsfIR/lS+CTAAAAAXRSTlMAQObYZgAAAE9JREFUOMtjYBgFVAehQIAiUBtaW4siEFtbG4+qora2HE0gFlWgNBbN0FEwpNNIGlp0Xg0tRU0jd2NrS1EEvtaipaKvsbVfUQ2NjaVzGgEA9JIWUHO78tYAAAAASUVORK5CYII=\\\";\\n  string public constant SHORT_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVyZXMUMGQeOXQfSIxwGWR2AAAAAXRSTlMAQObYZgAAAFhJREFUOMtjYBgFVAdhU0MzUQT2rdxXhyKwbt/e9SgCdfv27kYTqEUVyFy3Mm80aIcNCF0WNgtF4OWqXXtRBN7m7duJIvCzbi+qip95tT9RBFZm5b6krzcAVPMeeUDvN08AAAAASUVORK5CYII=\\\";\\n\\n  // Long pants\\n  string public constant LONG_FANCY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVzLWnOfBTTexbbgRLfhBdEB3xUAAAAAXRSTlMAQObYZgAAAJFJREFUSMftlMERAyEMA68FMA3YogELGjju+q8pFBD7mzzYh187GjOArutw+DNK1VL2CAXQFBSGghGE2xMKsjq7A7FALEmFuxN3Y7IkVPyNE/qANpcZCtU2+6jnRRwOX3qiQHZNWChQzWDwWPC6sBD/sKGycCcJQyvFZ9JV2th85gnNn1yAI26aUXT3nfEHV/ABZ+MVbV8H+hoAAAAASUVORK5CYII=\\\";\\n  string public constant LONG_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVzLWkVFhQYGRccHRsgIR/TWU0JAAAAAXRSTlMAQObYZgAAAIhJREFUSMftlLENBDEIBN0CfhqApxEQ/df064sPLrwP2MCJRyss27PWZPJnoS1EWErAQsWCowQ0LMw1S4AvwKwFuAX8NDQzYFvYs26wPADXQ25FcNR5EZPJjSfo+4EmtARCVE3Na8D3EUH9w1L4eMIbYMMT2bgKDQAeG3oAM9SmSRKcQuOFK/gBESgYVnnv5RIAAAAASUVORK5CYII=\\\";\\n  string public constant LONG_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEUAAAAUMGQfOXQeRocfTaK1PriXAAAAAXRSTlMAQObYZgAAAJFJREFUSMftlMERAyEMA68FMA3YogELGjju+q8pFBD7mzzYh187GjOArutw+DNK1VL2CAXQFBSGghGE2xMKsjq7A7FALEmFuxN3Y7IkVPyNE/qANpcZCtU2+6jnRRwOX3qiWN01YaFANYPBY8HrwkL8w4bKwp0kDK0Un0lXaWPzmSc0f3IBjrhpRtHdd8YfXMEHZOIVaw91yZoAAAAASUVORK5CYII=\\\";\\n\\n  // New pants\\n  string public constant ASTRONAUT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAG1BMVEVPsue5AABWV1VvcW5/gX6+wb3Lzsrm6OXy9PHHtKnUAAAAAXRSTlMAQObYZgAAAMtJREFUSMftlLENAyEMRW8FmgwAGwAbcCscpE2BYAG8QTx37CsT2ZZS8yl58v2TxTuOnZ2vxGAAwQJ8tABtQu21X1ftIjDfDQdOEIGBAyZOlAGY91E6DBiodHDu4Wp3TgTaqn1CW1oH/gtUO9Te5A655FJKKiJAd/kkSl619yElc+E7O394IloaCN6aoAHsCD6yJ2CuJ70xGcBbBKiJBFkEyif4jSodyBEv5xRPsGXaUjzBBQeYnqjyhJzZFDnJnjjpVvMEOYJM8bvwD2e5RJo7hlZhAAAAAElFTkSuQmCC\\\";\\n  string public constant COWBOY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAIVBMVEUAAAAkFwYTH04WIFYyIwsUJWM4JwpZKgdvNxGJQBL+1QCN1Ay8AAAAAXRSTlMAQObYZgAAANBJREFUSMftlEEKwjAQRXuFQugBRN1LGPeBafY25ASN9gZt9QJNbpA5gdc0boWZgiC46N/m8SdhyKuqLVs+Mk0rwDj8FPCnvtMlLODqFsCD44HGeucBWMCocEXEmm9Qt+CdMEIbDPIdgkGngX8FnRUSUWKBSClRzJEHYs6xhAWe8/t4mYVVj8M0rS58y5Y/9AQc9n0n/DAHu4sF7aSGYEFowPporEXFN+jGIHjBE74pIzSvInDKlDvwQCZlW8kTKc9ExQWCJ+6yJ2Kc4/L4whMvV8tLH1+dY+AAAAAASUVORK5CYII=\\\";\\n  string public constant LUMBERJACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEUAAABiMQ8IRWARSWUAVHpgQShiZGEoVAkJAAAAAXRSTlMAQObYZgAAALFJREFUSMftlLENQyEMRP8KFGQAzhPYTABZgOIPkP2XiN1G8qEoTQqOkifOgO6u6+joQ6VsgLp+BaiFDXs2nSMF2sDsCk0BsQ5xKLfQblDJT8CAgllgwsAsZMSIkt8ijhcFu6bAGFBXXaWQx/b9et+rkn94vErZfvjR0f/1BJpEiI1kVFQaSbkMmd42PKORcwa4Aasiz3hXbjF9DttUkfQcMG+KRmaIjoiVAtERsb7uiTct3iR+3MrH0QAAAABJRU5ErkJggg==\\\";\\n  string public constant SUIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEUAAAAKFh8OHiwwHAs4IgYZKDZOMROMMu4EAAAAAXRSTlMAQObYZgAAAJdJREFUSMftlMEJgDAMRV2hhQ6QQDZwA4v3BNxA3H8Ek6vQHwS99ZecfPyk2PxlmZp6qK8JsPVfHQpVYq5lCPhHEz54CIjFYUMACyOAooWkgGLAGpxBvQgA4QABwS2u69yjxj+qb2vUfPRTr/VzDKQOzMWFcsKaBwlcoOYLdBBwSFYwWkQQJEBVNEM4aDJk4pABcQv9PiduMCsrUNLT6DgAAAAASUVORK5CYII=\\\";\\n  string public constant KNIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEUAAAA2NjZKSkpxcXGZmZmzs7PAwMDNzc3a2trn5+difNTDAAAAAXRSTlMAQObYZgAAAMBJREFUSMftlDEOwjAMRXuFemJ1WJgJ4gJYFRdoEBdI071q6AhDRC6Q9LhQRpDNiJDy56cnWUpeVZWVvQ3wt8A0WW9dcCLgXEwCYBZg5oFhAa4bFiDStCMi/oK+PQEgfwdO5oIIwBtGY2WDN142+KYTDVprpfV2zQJ1DagUYnn0ZX/XiWBTTFboRAhjzLmfJcDnHCVgPxzvtxXfiYMmkjqB2J6T+InBxCxmAI3tvhm8bGg6LxlemZA6oRTgsxUfhgc/NTk1w29ieQAAAABJRU5ErkJggg==\\\";\\n  string public constant POLICE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEUAAAAGHDMLJkIIKUozJwZKOQilffLwAAAAAXRSTlMAQObYZgAAALxJREFUSMftlNENBCEIRK8FoAKgAoYW3A7W/ls59ncT+L1cIv6ZcVDivM/n1KlXrfVbQabDydAKAAe7WSsQTWcVbwVWp0UlWwGrBZR7B3bAwmi4Awenae8Qglq9IJ2qB/dzCIp6KNEw5n3vfd2tYO/7Wuu+zqc/9XecoMJAsaLHAFTgOkVQORHAkFE2towBA2Ll0rcQE68QDykvTmmiF3hxQt1igJmAyqSfQxataKBdMWKvNXDiYcTDivf+F1qGI59+bsDhAAAAAElFTkSuQmCC\\\";\\n\\n  // Front view\\n  // Short pants\\n  string public constant FRONT_SHORT_FANCY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAADTexbOfBTcghMsdKvZAAAAAXRSTlMAQObYZgAAAB5JREFUCNdjYKAHyKoGEmGhQKJ2LojYC2OVziWgEwALYAYRFZBR2QAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_SHORT_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAAXGBYcHRsfIR8riSZSAAAAAXRSTlMAQObYZgAAAB1JREFUCNdjYKAHCE0DEaFAojYWRNTCWLGxBHQCANcVBM4rWVNSAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_SHORT_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAAeOXQUMGQfSIyVuGQPAAAAAXRSTlMAQObYZgAAAB5JREFUCNdjYKAHyIoEEmGhQKJ2LojYC2PFTiWgEwD/pwXPMca/4wAAAABJRU5ErkJggg==\\\";\\n\\n  // Long pants\\n  string public constant FRONT_LONG_FANCY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAADTexbOfBTbgRLfhBffcoAOAAAAAXRSTlMAQObYZgAAADZJREFUGNNjYBiSQEhJWBnMEBQSFAQzhA0VHcEMEUNlCEPYUdEQKqICYQgLKaIxBAWFDPFaBAAzRwSS/7mIvgAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_LONG_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAAAYGRcVFhQcHRsgIR/IZ4SkAAAAAXRSTlMAQObYZgAAACxJREFUGNNjYBiSQEhJWBnMEBQSFAQzRBwVHaEMFUdcIkKKaAxBQSFHvBYBAFFsBRcWOvIhAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_LONG_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAAAfOXQUMGQeRocfTaJii7rMAAAAAXRSTlMAQObYZgAAADZJREFUGNNjYBiSQEhJUBHMEBQSFAQzhA0VHcEMEUNlCEPYUdEQKqICYQgLKaIxBAWFDPFaBAAxrQSOcxLd+gAAAABJRU5ErkJggg==\\\";\\n\\n  string public constant FRONT_ASTRONAUT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAG1BMVEUAAAC+wb3Lzsrm6OXy9PG5AABvcW5/gX5WV1XM19zcAAAAAXRSTlMAQObYZgAAAD9JREFUGNNjYBiSQEhRSBHMEHZSMQQzlI2UjcAMFSNlJ1SRoNBQVVRdKk4qaGrSy9LLwAwgnQ5mdLRldDAwAADYYguPdveXlwAAAABJRU5ErkJggg==\\\";\\n  string public constant FRONT_COWBOY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAAA4JwoWIFYUJWMTH04yIwskFwZvNxGJQBJZKgd8QHc+AAAAAXRSTlMAQObYZgAAAE9JREFUGNNjYBiSQMjE2RXMCFZ2MQMzAo2dRcEMUWHHMDBDUDQRwggVTYRIhYWmQkRSQ1MDwYyKiukdYEZ7+4x2MKO8fHo5mDFRcqIkAwMArrcPebGzeOMAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_LUMBERJACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAAARSWUAVHoIRWBiMQ9gQShiZGHXzFGbAAAAAXRSTlMAQObYZgAAAEZJREFUGNNjYBiSQFDJSBDMMFQ0EgYzhAyNFCEMQUOIiKGwoTGEIQhTI2yoCJOCiBgZGiuDGa4hriFgBpB2BTPcUtxSGBgAeOIIql2Q1FEAAAAASUVORK5CYII=\\\";\\n  string public constant FRONT_SUIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAAAKFh8OHiwZKDZOMRM4IgYwHAtTPbD1AAAAAXRSTlMAQObYZgAAADVJREFUGNNjYBiSQEhRUBDCMBJWBDOUjYSNIAwlISNUKUyGsqGwEQ7triGuIWBGWGpYKgMDAElYB6ymxDOdAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_KNIGHT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAAB2SURBVCjP7c2xDcJQEIPhj0CFdAPkLUAGYGQWQPQRAzBAMgBXQfUk6BBNEhiAEjcn2f/Z/PVrreAslLFEi2ZOcroNVFDTN3HgAhvodRy7T+mJkuzbmRARolheqHXemYxQlVhWUpUyF2IYRuzAGl5Pt8f2Pl7xBva4HQsbSM+kAAAAAElFTkSuQmCC\\\";\\n  string public constant FRONT_POLICE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAAALJkIIKUoGHDNKOQgzJwa3pY29AAAAAXRSTlMAQObYZgAAAENJREFUGNPVy1ENACAIRVEqgAmABGAFaED/LG6gIXxfZ3u7AF+OmPjCB0ImDUTDgfqA2alheuGv2g+6bK7IikZWFsABUEcHhkozIfgAAAAASUVORK5CYII=\\\";\\n\\n  constructor() {\\n    _tiers = [\\n      5000,\\n      5700,\\n      6400,\\n      7000,\\n      7600,\\n      8200,\\n      8800,\\n      9300,\\n      9500,\\n      9700,\\n      9900,\\n      9950,\\n      10000\\n    ];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    pure\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Short Black\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Long Black\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Short Blue\\\";\\n    } else if (traitIndex == 4) {\\n      return \\\"Long Blue\\\";\\n    } else if (traitIndex == 5) {\\n      return \\\"Police\\\";\\n    } else if (traitIndex == 6) {\\n      return \\\"Suit\\\";\\n    } else if (traitIndex == 7) {\\n      return \\\"Lumberjack\\\";\\n    } else if (traitIndex == 8) {\\n      return \\\"Knight\\\";\\n    } else if (traitIndex == 9) {\\n      return \\\"Short Fancy\\\";\\n    } else if (traitIndex == 10) {\\n      return \\\"Long Fancy\\\";\\n    } else if (traitIndex == 11) {\\n      return \\\"Astronaut\\\";\\n    } else if (traitIndex == 12) {\\n      return \\\"Cowboy\\\";\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256,\\n    string memory prefix\\n  ) internal view override returns (string memory layer) {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return _layer(prefix, \\\"SHORT_BLACK\\\");\\n    } else if (traitIndex == 2) {\\n      return _layer(prefix, \\\"LONG_BLACK\\\");\\n    } else if (traitIndex == 3) {\\n      return _layer(prefix, \\\"SHORT_BLUE\\\");\\n    } else if (traitIndex == 4) {\\n      return _layer(prefix, \\\"LONG_BLUE\\\");\\n    } else if (traitIndex == 5) {\\n      return _layer(prefix, \\\"POLICE\\\");\\n    } else if (traitIndex == 6) {\\n      return _layer(prefix, \\\"SUIT\\\");\\n    } else if (traitIndex == 7) {\\n      return _layer(prefix, \\\"LUMBERJACK\\\");\\n    } else if (traitIndex == 8) {\\n      return _layer(prefix, \\\"KNIGHT\\\");\\n    } else if (traitIndex == 9) {\\n      return _layer(prefix, \\\"SHORT_FANCY\\\");\\n    } else if (traitIndex == 10) {\\n      return _layer(prefix, \\\"LONG_FANCY\\\");\\n    } else if (traitIndex == 11) {\\n      return _layer(prefix, \\\"ASTRONAUT\\\");\\n    } else if (traitIndex == 12) {\\n      return _layer(prefix, \\\"COWBOY\\\");\\n    }\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/layers/Tops.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Trait.sol\\\";\\nimport \\\"./ITrait.sol\\\";\\n\\ncontract Tops is Trait {\\n  // Skin view\\n  string private constant STRAPPY_TOP =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEUAMCI8BEk2B0FaMWNpOXR5QYaFvGz8AAAAAXRSTlMAQObYZgAAAHBJREFUSMft07sNgDAMRVE3GSArsILNBCZ9JPD+q5CPEEEYCoQUhHyKV93GhQGMUTmA2CcgYs67BafsvUBEopPqEPgk79RQb0AkJsbiItipgciMONZVA99Qg6GhBiEsSSieBcZ8DzNR/vKewc1f/t8KRdUnFMn/8bQAAAAASUVORK5CYII=\\\";\\n  string private constant CHEF =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAGFBMVEUAAAAyMzHNFB3gISLM2drh5unk5uPp7vCYXFw/AAAAAXRSTlMAQObYZgAAARtJREFUSMftlMFOwzAQRK1+BL2DENeqOfSMFJQfwPGdxtlzobvz+x0HWhHXSYS4ZuSDFb+dWSftOrdqVVHHqqque0EJcG5z3aMvAB/OPd0crOSw29wicB8BxP0eGr6qAwxphXFMwPHx86BoBMJTKoxdPOILnqE8iQkxrsyBz5VlLJcUYZlD0HjCNjnYeWCkzSI0CiuVPZyNEb0Ey3roWKbaqCk3bVpZD90JD7ynQRnR0iQD9Nsh0MP/KHOwhlccgLp+q5PGPXh7Nd7CEyh+bPXWGbxX9WH96a/6g2ALQI8FQJYcgIXj9L/sdQ5IyDQgaTZApmOGAWMzDqwmgzgN9AITmWmS04MZceY1cc6wjUmgOBt+i2Ph/W42/EsXOlyFE/2FZvkAAAAASUVORK5CYII=\\\";\\n  string private constant PREHISTORIC =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEVwcABjSBOEYBvhnhXspBT2yXBrTUdUAAAAAXRSTlMAQObYZgAAALxJREFUSMftlD0OwyAMRllygCRcgIQeINg9AP7MXqnh/lcpSdQlJUuXqhJv4cfPlkAYYxqNK7rfCJ6cGtPHQ1DNZ0Gn3hsz0L5YBelxEkiGe4nwNs+OP0soccnJ6xZfQ/Q2nYyc942ujM8ZAqwpVw+gCLcwkvKkWhUWgiMmliHOVSGqJwTAWa5XgAw0OrGCUK9A0SoketDiq0IPFIWhXlEXSMUCXJD27ht/gpb2PLr8gvTu8iv2nyO3m/ySF7D/I9Xi8JzlAAAAAElFTkSuQmCC\\\";\\n  string private constant TSHIRT_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAAA2NjY4ODg5OTnWDzk4AAAAAXRSTlMAQObYZgAAALtJREFUOMtjYBgFmMCBEURGIgQOMIPI+egCdegC/+H8cAemUAfm0OX/66ECsVdE/9aGl8dfvw8V+JkaW/8/vzb2fzpU4P/Sq5W19+un1ZdDBepD42P/ViK5qzb07v2v/5EE/t8trf9fiiRQHhpa/f4vkkD89PDculokgfehqdVf/yEJ3A+9ej/3O7It0+K/lt8cTQX4wVV0gSh0gW3oAt/Q+KGh67+jCJRfrf6JqiIs/z+KQOy6+q+DKRQA8fVFNXs3A+0AAAAASUVORK5CYII=\\\";\\n  string private constant TSHIRT_WHITE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAB9klEQVR42u2a3W7DIAyFnUFFpb3/o04C1YjdzJHrQNM2JKPt+W76k8TKsU8MghABAAAAAAAAAAAAbCTGWJ459kj8GGO5XC6lR7zulFLKM8fuRYQLW+N9vZrDcs4UQiAiImamj3NAMWyN53s+8yEESik1z2Xmah84n89TS6yNJ1UXJ9gkpJRmhxARTdM07ZoAKz6EMIt0zn3nnImIfqx95Wa1M1rJ07HlnFqcEMLVufcw9bI8M9OfWHLOzd9r7rh1cyklcs6R935RUZ2gllC5XpK95oBuTdB7TyEEcs4thNeqy8yUUrr6XwTZ5OlYEl+E1lwjyTvEATHGUrNj7eatXW0F9TFxVKs/9KLrMFgTbwXq3y3x2lF7060H1DqxrXZN+Nq1wztAbrT12XKGnsTo75KcI6rf7RHQ1tZN0IrQMzjv/dwEpWlJYzySLo+ACGpV2w6L0uR0t64NkcxMp9Np/CbYGrZEkBWvq55SImaujuePDGf/5gA9DOpJiK18TWBrUqPj7N0EAQAAAAAAAAAA8HkMt9hg9wP3XhDxoyVAxNsdpr0Y7v0A59zN7bG3T8ARC6FD9YC193zkUbCJkUXUtd3fl3CA3g2yq8c5Z/LeL16Hae0Mv5UDZGlcvy+wELDRAcOMArI3oC0vVa+JP3oLDQAAAADvxy8j65Qi++Br+AAAAABJRU5ErkJggg==\\\";\\n  string private constant TSHIRT_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAB/0lEQVR42u2awW7CMAyGG5qq6t6Syw6cdtszcJjEade9JVHVoOyA/s6YBBiEKMD/XaC0smL7txPVNA0hhBBCCCGEEELIjSzX23DNvf/YX6634f3LhRz2FrkDMPTmqnuX0tm9Ddvmsbd4NIVNPsyO+13zegGQWbft7fZszpofetO4MV2WfhfvAz+fb1EtrzYuaHvIOpSw2riDB9wYDoL0/TGYuwZAOz/0ZnYSjuFayheLhaPy+pRtPBOzM/Tm4NkiCtD16MbQdNY0kw9RdcjF6UXimc6aI3nH1AVbOhidvTwI2XoAujK6tA5QTMoIiHZo8mklwL50NLaWYj1AR1ovXktWqmDyxyrAPb/b20r1h1xk3QVi2dDylNepOs65z989ANohXd+6eaVqUzYwqZTqAyAXHPtMKUMeYuT3VIOsugRkVmUTjHV5OGzbvyyjaaExliTLNigzKJsgnMG2iGvb7p091QN0MKtWQGrbgkPyPuocWXdjOAoGfs9x1C26DcpDEDIYy6w+1KActJ3S5UAIIYQQQgghhJDXwNS2ID0PvPdcwNYWAPkesQTVjcc7a06Ox54+ACVehFbVA879z0f+JUaXytCbs/P/h1CAnAbp1+OTD/McQQcmx1vjKppgbJwGJycf5kmSLhXbmucIALKPeQAcRNZjfYEzA0IIIYTcyi9gyVB9JbpWGAAAAABJRU5ErkJggg==\\\";\\n  string private constant VERTICAL_RED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVlLXTaT1Dg4t/t7+v6/PkXGOinAAAAAXRSTlMAQObYZgAAAIVJREFUSMft01EKhDAMBNAIHmAhcwGPMDfYQO5/Jq1UwSXdiPpn56vQR5IWItLTE+YrMmxnYwJoWYULACjA7CMyutPcgR9gaxSAu7UBoC3ACkqFqIWu9ywg/Ka9hSZA0wrLlA0wZeDEkKzPDIHWFs0he3rihJt9AEwA7V6LcLOfBvwPXpoZT/Eo1b+hauMAAAAASUVORK5CYII=\\\";\\n  string private constant VERTICAL_GREEN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVlLXQ4xmPg4t/t7+v6/Pk83kfxAAAAAXRSTlMAQObYZgAAAIVJREFUSMft01EKhDAMBNAIHmAhcwGPMDfYQO5/Jq1UwSXdiPpn56vQR5IWItLTE+YrMmxnYwJoWYULACjA7CMyutPcgR9gaxSAu7UBoC3ACkqFqIWu9ywg/Ka9hSZA0wrLlA0wZeDEkKzPDIHWFs0he3rihJt9AEwA7V6LcLOfBvwPXpoZT/Eo1b+hauMAAAAASUVORK5CYII=\\\";\\n  string private constant VERTICAL_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAD1BMVEVldC3slA3/oxjg4t/5+/gVaV5HAAAAAXRSTlMAQObYZgAAAJhJREFUSMftlLENwzAMBOkgA7jgCD9BJsgT2n8mU7YDJBYpw3AZXSVAh3+qoEQGg5C3yONzNrstMBamjgDUBLNZ5FmKsRTgV1CrEArEAlbBAOguaCvQEzzCBUsTVA8XbYUmgm4VHtBNYB0yEV5bRTqD7kN2K1gTsiG9gk76zMEgJlz9b3gmhH/DhYpwcQ8CTwRa8zdcqvhTFu2fLhJzL3fyAAAAAElFTkSuQmCC\\\";\\n  string private constant TURTLENECK_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAAA9PT1CQkJGRkYh3l+BAAAAAXRSTlMAQObYZgAAAM1JREFUOMvt0rEKwjAQBmBn3+8KFepocbCbPbTgW6gEqbp0ucGxIMHHENGSjhWHdlTcbIe0zQniA/QfDvJxl5CQXq/Ld4iqWjSw71dVclB8BOs1KAWOOgqaaBACbPFekafhheAV17CBciSQqgXow7DqcOuOBFy5aQF6YOd4In0wOZJGiFuaa/BzUrs4pVhDKmntWgCWBllQdDBuT7SMul/wO4oDckg5BPybDaY3E8JZYoJjnxkUdxMW2cOEOBubgE8Oiu3h5xcDoMx/r/ABd61lED+9l94AAAAASUVORK5CYII=\\\";\\n  string private constant TURTLENECK_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVhYmz2jCD3mTn4plAa+3z3AAAAAXRSTlMAQObYZgAAAM1JREFUOMvt0rEKwjAQBmBn3+8KFepocbCbPbTgW6gEqbp0ucGxIMHHENGSjhWHdlTcbIe0zQniA/QfDvJxl5CQXq/Ld4iqWjSw71dVclB8BOs1KAWOOgqaaBACbPFekafhheAV17CBciSQqgXow7DqcOuOBFy5aQF6YOd4In0wOZJGiFuaa/BzUrs4pVhDKmntWgCWBllQdDBuT7SMul/wO4oDckg5BPybDaY3E8JZYoJjnxkUdxMW2cOEOBubgE8Oiu3h5xcDoMx/r/ABd61lED+9l94AAAAASUVORK5CYII=\\\";\\n  string private constant STRIPE_RED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEVoAADoSC76UDLg4t/t7+z3+fb+//xTrp1TAAAAAXRSTlMAQObYZgAAAPBJREFUSMftlE1uAyEMhVHVdF0sZV8/tRwgUi8QDbPujMD7VsH3P0IcVbMgYYq6562M/OGH+XNuaKipN+detjjHBvDq3GGLo3YqyHcH0OUhzTDgWdKXc085TwsQahsQv+cVHMrKYgNm1ECOSS0PaFJi8gymCog63fJGHBXBaBWuAElEUJmV8NHcJoBQNIkmUBNgOlpRM74vvSmJ/ICI4fXSBEo8ASLWJNqAzSarMmvmtgUz5dma5KK+vQb9TOzZUyhxXP2hf6isHSCfO8C8dAD920J1JbvbYReAZe1vwC5gX4O94J238WsxXQzI47hrXQGiRjKpvbWUKAAAAABJRU5ErkJggg==\\\";\\n  string private constant STRIPE_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEVvcm0neeErhfXg4t/t7+z3+fb+//z67CVSAAAAAXRSTlMAQObYZgAAAPBJREFUSMftlE1uAyEMhVHVdF0sZV8/tRwgUi8QDbPujMD7VsH3P0IcVbMgYYq6562M/OGH+XNuaKipN+detjjHBvDq3GGLo3YqyHcH0OUhzTDgWdKXc085TwsQahsQv+cVHMrKYgNm1ECOSS0PaFJi8gymCog63fJGHBXBaBWuAElEUJmV8NHcJoBQNIkmUBNgOlpRM74vvSmJ/ICI4fXSBEo8ASLWJNqAzSarMmvmtgUz5dma5KK+vQb9TOzZUyhxXP2hf6isHSCfO8C8dAD920J1JbvbYReAZe1vwC5gX4O94J238WsxXQzI47hrXQGiRjKpvbWUKAAAAABJRU5ErkJggg==\\\";\\n  string private constant STRIPE_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAFVBMVEX7AwDrkw3/oxjg4t/t7+z3+fb+//zA9QaHAAAAAXRSTlMAQObYZgAAAPBJREFUSMftlE1uAyEMhVHVdF0sZV8/tRwgUi8QDbPujMD7VsH3P0IcVbMgYYq6562M/OGH+XNuaKipN+detjjHBvDq3GGLo3YqyHcH0OUhzTDgWdKXc085TwsQahsQv+cVHMrKYgNm1ECOSS0PaFJi8gymCog63fJGHBXBaBWuAElEUJmV8NHcJoBQNIkmUBNgOlpRM74vvSmJ/ICI4fXSBEo8ASLWJNqAzSarMmvmtgUz5dma5KK+vQb9TOzZUyhxXP2hf6isHSCfO8C8dAD920J1JbvbYReAZe1vwC5gX4O94J238WsxXQzI47hrXQGiRjKpvbWUKAAAAABJRU5ErkJggg==\\\";\\n  string private constant SUIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAElBMVEVjb2wKFh8PHiyQBQAZKDb09/M4xg+kAAAAAXRSTlMAQObYZgAAAPhJREFUSMftlEtuwzAMRJ1F9pWiHIADXiCLHsAED9Cg8P2v0pFiI0jNSItsPStJfCL1nWk6dChUWpa0tYEAuE7TfWurDYA8BJ4lAHy1EVx/zncgURB2sZZhf60qv99ZDTWE7Gy9ltkAZSgzyJaEANwl1/AesMtN62yXYooAcLlxODMDgymZzv8AFVG34io6hxnabMvKDN7WMO8BI1B3gdy2uwNSnefFllVBhscphJfNo0ECAXkDHDoUK/SG18c3AmRU4h1w4k+Q6hd0h7hMs4r6R+sL7yyR/7L39B/O0AVYYO4B1Rms9DMUG6zBexloggLp3EfoDR/pD84DPQp5evZaAAAAAElFTkSuQmCC\\\";\\n  string private constant LUMBER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAHlBMVEUAAABgMhCSLidiQSi6OjFkY2LRVk37zFfc3Nzp6elLjlLzAAAAAXRSTlMAQObYZgAAANtJREFUSMftlL8KwjAQh6O+QGulu5gHsFZ0tVc87C7uxRPs7BuIS1fp0LytsVLon2tFEEHIl+WGH98dJBchDAaWuRCDsgbgA6OyJmICViXAGqxKC8aAuBQiJnKFCBGJUFMLSLnYDEOApZQzKQGkpmlIsiPRCjHoMIyj68sw7TbEhaFzht01AJj0zXDTM7g9huj+xnDOXoZApfoolbYNYWGYsneJuE+yE9EBccsGbM9ZXxzftn3PNk/f8AHsZldh/4ZvGkgD0NiqegNmq5qG1l7+neH5L+QqVz+8/AfiPlMwOCAUmQAAAABJRU5ErkJggg==\\\";\\n  string private constant COWBOY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAIVBMVEUAAAAkFwY4JwqOHQqmIwhvNxEMVWqJQBIVWm8TZnr+1QAbz5SLAAAAAXRSTlMAQObYZgAAASxJREFUSMftlLFOwzAQhiPxBFnZyMiE1DwAUirlAaqLKx4gcvcepiui7t2K1HC38qSYFqrGdRMxsOXLkEj+8vu3EjvLJiaSwMNN+fusnBAWWXYSyCaE9ZnAqQR4nJ0Eq5fD+FLNSgCsSiBhLxr1MG7zVs0RzaJGq2JJhXqCQyfz0jlTrx1zx8ocJ+DzR20w3JGsshCvooSn5hUNgnNOrJKI7wvGmOUuvB8uFBIVFo5Wgc37QUD0ItwGog6u2YX47xLCFIgT3CEBggjtDz1BAZotgO7BbJLfsiiK+8/iSFLI8/z2Lj8y/foTf0B0RPA0liAjgvrhYQ57jgZ6KOlKPfHAGsLWl4EexGI9ddeFUIE8d/b6FOyZ4rPhnLb1zDba2b0ORJenSz8hcTb8L1/HE4qVeT7A/AAAAABJRU5ErkJggg==\\\";\\n  string private constant HIGHVIS_JACKET =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAGFBMVEUAAACcnpv7mQD/pAW8vrvCxMHy+gD4/wDT7TsBAAAAAXRSTlMAQObYZgAAAPBJREFUSMftlEGOwjAMRVmVda+AJQ5gS+UCcXsBe9ii6TTdIqDN9XE1KhLUpRfIX0Xy0/d3oni3y8pyhdc9zGdlFyhoPktwALgWh5eDeA6X4tVCdFEmoMueTPeKmIVFFzngcbYWdD9h4BAM+myDXQ0TcCTlidCwcGjQgNuJVIWVP3JY9+EMRNBW6F5Tin1XpzHG2EcXKMvyUZf/coHYp64ZYz+OKbkAIVlIuw2bwn8qwr/aQtJvBb4DwPCDeMB2xQEIhsampHbFISvLl/Nx3xV4A+AtB+WNsu0G+ZJDJASx7bAOWF00fHGYdoMq5+d+1xN/Fj0+ISur7wAAAABJRU5ErkJggg==\\\";\\n  string private constant POLICE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAIVBMVEUAAAAGGzMKJkICKUsGLE0eKDMqNUCwsq72yzL23DTj5eFBYsbWAAAAAXRSTlMAQObYZgAAARdJREFUSMftlEFOwzAQRXMF21CJpf9E2XsGWcCONFdI92mEe4NegCNwArY5JTYqC6dxEELd5S0sS3n+HjmjqaqNjUWaqjr+7EVuLtC1IOKn6fi9jiJCCrMUJv/yOQo8y5Fpj87CZgJx48zI7Ec/gFrgVbs8Ad49xLOnEM5we9teC8MuRCFEWGB1NxdoUKfA9q3vDyw1687kRWoa7vuDuJSg6dHWrUEmhDDs4v0hJRiq27qV/AqN9Ak2JRgnCkqpvAYOIdbASZsuzGpoQhgBH9fFn60uxGeWrfU3/sCvDXNzAYp4tXF1B3764LJwB6bnd3ZloTYcKQtx9BBjVdDMAIpCmgtC4BVBQyCqKMTBEF/BmqKwOBv+xRclPU913ozfnwAAAABJRU5ErkJggg==\\\";\\n  string private constant DOCTOR =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAIVBMVEUAAABNTU0SYKEVbriournH2dnW4+Pp6enu7u7y8vL09PQCAr0yAAAAAXRSTlMAQObYZgAAAU9JREFUSMftlEFugzAQRVkmNylHYJ9F0n2P0DtkmaqVYrxqQxb+cwLPP2W/Q1OVyDSq1CUfBAae/e0xM02zaFFV583Grm2yAmya9eO17VYBds16d20DdwD692sjDuphwO59vTXwIvNyHQGwABQwdFvCSD3QaDbawHLBHHg7tU/6ap70dNaL0SbbXtfgJqB7Vj+1NNxZt3El4SiHZhXgL0ObyJ7IDv9wYZM1mOWhfaH39ER3K8cUYD51UYAjEa654AZAGrro7CELo5Zp03CbyyK6RTAH9CGFkCcAmU5tNGiE1OurFG+AMgdZOHJ1s+F4fVCIo8jl11/0B1Vrw09Va8Pk58MdwOYsVlDKYVIbboBLxrmSSnnrtSGiqziMp1XncfRopVBAXlVgtQ/hULJaB3+JgpuSez4WWofNWXwFuvSnzwJBpQEhhnlA6lMO/7f5n/dF3uKgDgDjAAAAAElFTkSuQmCC\\\";\\n  string private constant SCARF =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEVlLWcTXHw0fqUlkclQ/2RTAAAAAXRSTlMAQObYZgAAAD5JREFUOMtjYBgFmOBdHJpAAzOagAO6wKtqVP6y37d2vZuHJBCWuT1yWxiKGml0e9nQBbjRBVhGI2cUDCIAAPcdC0Sriwc2AAAAAElFTkSuQmCC\\\";\\n\\n  // Front view\\n  string private constant FRONT_STRAPPY_TOP =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAAB5QYZpOXRaMWM8BEk2B0FPX/j/AAAAAXRSTlMAQObYZgAAAEFJREFUGNNjYKAaYGRgEMDBEBRgFAQzlIAAzDBSNlIGM4yBAMwQNjY2BDNcgADMCAUCMEMICFAZykBAiAE3hxIAAIn5CUPRP/A/AAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_CHEF =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAGFBMVEUAAADp7vDk5uPh5ungISLNFB0yMzHM2dqz5iDyAAAAAXRSTlMAQObYZgAAAGRJREFUGNO9jTEKwzAQBO8LcybuFxnUS0VqF35ACH6A/ANjiL6fU94QvM3CDOya/Sl42jaQwbI/VjAnvXg7Q6FJbijNNGkoCYUqOWqokmeOILUOUqtd3U/oz9j2j7ffieeYuzVfCIcMvEFIXXoAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_PREHISTORIC =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAAD2yXDspBSEYBtjSBPhnhV+54yIAAAAAXRSTlMAQObYZgAAAFlJREFUGNNjYKAmYIQxhKC0oAmUFgqG0KKmqmBGsGGwK5ihahIaBGYYhapC1DiHukJ0OSmpKkPUqDgpgRlKyk4Q7SZKSoJghouRogBEVyCEZggSgNlNDR8BADOYCcf2m7C4AAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_TSHIRT_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAABfSURBVCjP3czBCcNAEEPRt5rUtLj/S8A9zZLD2iYlhOgi9IXEb2gcVvUJjoUxFe00qd6gZdlREp2gtKQMmKC8kfu9aDcopas9oPXVXyDUXl1g0fL1AbW2vyBLei/+Sh92QxnEYz6W1wAAAABJRU5ErkJggg==\\\";\\n  string private constant FRONT_TSHIRT_WHITE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAQAAACxgDBHAAAAgElEQVQ4y+3Q2wrDIBCE4c8asND3f9RCJBV7kcOakgfoRRZEdMad3+UuSEunKapniuult90wdwqoyK/GG4o6Giqy/dUukqW1WQZtEDMmH0fu3IOgIG3K45c6eH4MZVt1IMB1BI5PHx3yEBD7YGgxi2uGYGmn8xQR6zzqKeCuf6ovmrclCB/qexQAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_TSHIRT_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAABmjfdhifZqkPe4/L/QAAAAAXRSTlMAQObYZgAAAEBJREFUCNdjYCASRDcwrmJY/0LrFcO6WetWMmRGvYplYFi1Hiiz6h2QeLcLxFoFJLJXg1izQMQrIJG5nlgbsAIAPkMTzjoNkgwAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_VERTICAL_RED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAADt7+vaT1D6/Png4t+h3+a4AAAAAXRSTlMAQObYZgAAAC5JREFUGNNjYKASEDIyYGBgMjJiMIICBEPISAhICRkBVYH5DPgZTlikhNCk6AYAf9ELa7EDmbwAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_VERTICAL_GREEN =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAADt7+s4xmP6/Png4t9g4G7rAAAAAXRSTlMAQObYZgAAAC5JREFUGNNjYKASEDIyYGBgMjJiMIICBEPISAhICRkBVYH5DPgZTlikhNCk6AYAf9ELa7EDmbwAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_VERTICAL_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAD1BMVEUAAAD5+/j/oxjslA3g4t9iQy2/AAAAAXRSTlMAQObYZgAAADZJREFUGNNjYKASEBIWYGBgEhICMoRAQBjKEAaKQGghkCohMIXKEEYVccKtxklIWJhaDiYOAAAMrAS1M4ONyAAAAABJRU5ErkJggg==\\\";\\n  string private constant FRONT_TURTLENECK_BLACK =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgCAAAAAA+4qcQAAAAAnRSTlMAAHaTzTgAAABpSURBVCjPzdCxDQNBCETRdwiCbesKd1sbQOBgT67Akj0/+iMmgf/IdXf12gdK0DUOJTtYnasPCPCZPMXjZamAx7NsYT0XldNk2MrxhMizqZzcmNh2r71MzrL1BXdOmpwXEoxhfv3Gr+cNlQs5SgvhgjUAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_TURTLENECK_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAD3mTn2jCD4plD1RLbEAAAAAXRSTlMAQObYZgAAAElJREFUCNdjYCASpL17t5QhMy0tjyHv9+51DHnv3gGJ3Tv3AlnPKxnqds/dzZC7rnw3w9ud93YyrHpbvoqBofwuUF9oKLE2YAUASgUcgbsGDRoAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_STRIPE_RED =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAADt7+z3+fboSC76UDL+//zg4t8rmtWlAAAAAXRSTlMAQObYZgAAAFxJREFUGNNjYKASEFR2YGBgVDFhMHF2dlRScXFmMDFWDFVxMVZkEFIUBPIFA4GqTExcQsHKTVyCIAyjUFVnMEM1xMUEzEhxcVGFqDFRhDKURCFqkhSdjanlYOIAAHH5DOZvM6uHAAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_STRIPE_BLUE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAADt7+z3+fYneeErhfX+//zg4t8twd8zAAAAAXRSTlMAQObYZgAAAFxJREFUGNNjYKASEFR2YGBgVDFhMHF2dlRScXFmMDFWDFVxMVZkEFIUBPIFA4GqTExcQsHKTVyCIAyjUFVnMEM1xMUEzEhxcVGFqDFRhDKURCFqkhSdjanlYOIAAHH5DOZvM6uHAAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_STRIPE_ORANGE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAFVBMVEUAAADt7+z3+fbrkw3/oxj+//zg4t+EruBNAAAAAXRSTlMAQObYZgAAAFxJREFUGNNjYKASEFR2YGBgVDFhMHF2dlRScXFmMDFWDFVxMVZkEFIUBPIFA4GqTExcQsHKTVyCIAyjUFVnMEM1xMUEzEhxcVGFqDFRhDKURCFqkhSdjanlYOIAAHH5DOZvM6uHAAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_SUIT =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAElBMVEUAAAAKFh8PHiz09/MZKDaQBQC6OIC8AAAAAXRSTlMAQObYZgAAAGBJREFUGNO1jYEJgDAMBCMuYCoOkOcHUIoLhC5Q3H8Xk3YFfcJzHCER+SgF+7leMCnN7idK4AmEcIIL4UePEmqzDk1Ds2GcXlrslASnSa109VrjdprxhFAMwLZM0DH/5QXVxg9lyNDWVAAAAABJRU5ErkJggg==\\\";\\n  string private constant FRONT_LUMBER =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAADRVk26OjFiQShgMhCSLifp6enc3NxkY2L7zFc4dVrNAAAAAXRSTlMAQObYZgAAAFVJREFUGNNjYKASEBIyYmAQERJiUFU1VWBVVlUFiYglCYNFXNVK4SJQNeqlKlCRIogaU7VUkEhamZF4knBaGdBIoIgy2OwmsSQJMMPZcrIztRxMHAAAU3sPFfsn/DYAAAAASUVORK5CYII=\\\";\\n  string private constant FRONT_COWBOY =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAIVBMVEUAAAAVWm8TZnoMVWqJQBKmIwiOHQpvNxH+1QA4JwokFwZY6uHRAAAAAXRSTlMAQObYZgAAAG9JREFUGNNjYKASEBJ2DEtLFVJkUDR0Eg0LVTJiUBZyUQxNVRJiUBJyd1YJUTRkUBKsKJZ0VxRkUFQqKRRxFxZiUBRyL9YEMQQFXYpFXASVGIyNQSLGxkAjy4vFy8Fmz5zRORPMWLVi1ipqOZg4AAAIXRUILf2sbAAAAABJRU5ErkJggg==\\\";\\n  string private constant FRONT_HIGHVIS_JACKET =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAGFBMVEUAAADCxMG8vrv/pAXy+gD4/wD7mQCcnpvRgHh+AAAAAXRSTlMAQObYZgAAAF1JREFUGNNjYKASEFI0dmA1FlJkUFJKDhJNU1JiUFQyc1RJVhICSiUHqZoBpRgYjANFk8HKXR1VQsGM8iCVcjAj1FE1BMwwBioGM8ycVCCKkwNFzKAMVWNqOZg4AAAc8g4MOkwg4gAAAABJRU5ErkJggg==\\\";\\n  string private constant FRONT_POLICE =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAHlBMVEUAAAACKUsKJkIqNUDj5eEGLE0GGzP23DSwsq4eKDN1tAz/AAAAAXRSTlMAQObYZgAAAHFJREFUGNOtzjEOwyAQBMD9AofjnkOmh5OQ3Z/c4x9gS0R5jyt+G5QXpPCUW+wu8BDjrGpyhMJ22iMTDvZzjeRQgp3fqRI45EsSOyyU2yon4RXyp9+VsRz5GgnDtK33uxmoiqyiOrq9SPyNtOGpw//5AsJIFHjeSLgRAAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_DOCTOR =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgBAMAAADpp+X/AAAAIVBMVEUAAADy8vL09PSournu7u4VbrgSYKHH2dnW4+NNTU3p6elNMf8JAAAAAXRSTlMAQObYZgAAAIBJREFUGNOtz8ENwjAMBdCPlAFqk0TiaCsLVOoAaTCHcssIkdiBEViEQQnJCODTk/1ly8CfimVdThsLlNdQN1HQ+RrbU2igvogglyM0TwzhFNohHZpiLcpQ8aEWVuzWR8U8zHzssL77mxlH6PbQiexoQLObnQTMzBu4D2TA/fzWB4aNEdL4EWwpAAAAAElFTkSuQmCC\\\";\\n  string private constant FRONT_SCARF =\\n    \\\"iVBORw0KGgoAAAANSUhEUgAAABAAAAAgAgMAAABm5xBfAAAADFBMVEUAAAAlkck0fqUTXHy1QV4JAAAAAXRSTlMAQObYZgAAACBJREFUCNdjYCAWRFYBiddzQUxLEMEHIjhBBA/RZpAOADMCAriGZfwcAAAAAElFTkSuQmCC\\\";\\n\\n  address public tops2;\\n\\n  constructor(address _tops2) {\\n    tops2 = _tops2;\\n\\n    _tiers = [\\n      500,\\n      1000,\\n      1400,\\n      1800,\\n      2100,\\n      2400,\\n      2700,\\n      3000,\\n      3300,\\n      3600,\\n      3900,\\n      4200,\\n      4500,\\n      4800,\\n      5100,\\n      5400,\\n      5700,\\n      6000,\\n      6300,\\n      6600,\\n      6900,\\n      7200,\\n      7500,\\n      7800,\\n      8100,\\n      8300,\\n      8500,\\n      8700,\\n      8900,\\n      9100,\\n      9290,\\n      9470,\\n      9620,\\n      9720,\\n      9820,\\n      9870,\\n      9920,\\n      9970,\\n      9990,\\n      10000\\n    ];\\n  }\\n\\n  function getName(uint256 traitIndex)\\n    public\\n    view\\n    override\\n    returns (string memory name)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return \\\"Strappy Top\\\";\\n    } else if (traitIndex == 2) {\\n      return \\\"Chef\\\";\\n    } else if (traitIndex == 3) {\\n      return \\\"Prehistoric\\\";\\n    } else if (traitIndex == 4) {\\n      return \\\"T-Shirt Black\\\";\\n    } else if (traitIndex == 5) {\\n      return \\\"T-Shirt White\\\";\\n    } else if (traitIndex == 6) {\\n      return \\\"T-Shirt Blue\\\";\\n    } else if (traitIndex == 7) {\\n      return \\\"Vertical Red\\\";\\n    } else if (traitIndex == 8) {\\n      return \\\"Vertical Green\\\";\\n    } else if (traitIndex == 9) {\\n      return \\\"Vertical Orange\\\";\\n    } else if (traitIndex == 10) {\\n      return \\\"Turtleneck Black\\\";\\n    } else if (traitIndex == 11) {\\n      return \\\"Turtleneck Orange\\\";\\n    } else if (traitIndex == 12) {\\n      return \\\"Stripe Red\\\";\\n    } else if (traitIndex == 13) {\\n      return \\\"Stripe Blue\\\";\\n    } else if (traitIndex == 14) {\\n      return \\\"Stripe Orange\\\";\\n    } else if (traitIndex == 15) {\\n      return \\\"Suit\\\";\\n    } else if (traitIndex == 16) {\\n      return \\\"Lumberjack\\\";\\n    } else if (traitIndex == 17) {\\n      return \\\"Cowboy\\\";\\n    } else if (traitIndex == 18) {\\n      return \\\"High-vis Vest\\\";\\n    } else if (traitIndex == 19) {\\n      return \\\"Police\\\";\\n    } else if (traitIndex == 20) {\\n      return \\\"Doctor\\\";\\n    } else if (traitIndex == 21) {\\n      return \\\"Scarf\\\";\\n    } else {\\n      return ITrait(tops2).getName(traitIndex);\\n    }\\n  }\\n\\n  function getSkinLayer(uint256 traitIndex, uint256)\\n    public\\n    view\\n    override\\n    returns (string memory layer)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return STRAPPY_TOP;\\n    } else if (traitIndex == 2) {\\n      return CHEF;\\n    } else if (traitIndex == 3) {\\n      return PREHISTORIC;\\n    } else if (traitIndex == 4) {\\n      return TSHIRT_BLACK;\\n    } else if (traitIndex == 5) {\\n      return TSHIRT_WHITE;\\n    } else if (traitIndex == 6) {\\n      return TSHIRT_BLUE;\\n    } else if (traitIndex == 7) {\\n      return VERTICAL_RED;\\n    } else if (traitIndex == 8) {\\n      return VERTICAL_GREEN;\\n    } else if (traitIndex == 9) {\\n      return VERTICAL_ORANGE;\\n    } else if (traitIndex == 10) {\\n      return TURTLENECK_BLACK;\\n    } else if (traitIndex == 11) {\\n      return TURTLENECK_ORANGE;\\n    } else if (traitIndex == 12) {\\n      return STRIPE_RED;\\n    } else if (traitIndex == 13) {\\n      return STRIPE_BLUE;\\n    } else if (traitIndex == 14) {\\n      return STRIPE_ORANGE;\\n    } else if (traitIndex == 15) {\\n      return SUIT;\\n    } else if (traitIndex == 16) {\\n      return LUMBER;\\n    } else if (traitIndex == 17) {\\n      return COWBOY;\\n    } else if (traitIndex == 18) {\\n      return HIGHVIS_JACKET;\\n    } else if (traitIndex == 19) {\\n      return POLICE;\\n    } else if (traitIndex == 20) {\\n      return DOCTOR;\\n    } else if (traitIndex == 21) {\\n      return SCARF;\\n    } else {\\n      return ITrait(tops2).getSkinLayer(traitIndex, 0);\\n    }\\n  }\\n\\n  function getFrontLayer(uint256 traitIndex, uint256)\\n    public\\n    view\\n    override\\n    returns (string memory layer)\\n  {\\n    if (traitIndex == 0) {\\n      return \\\"\\\";\\n    } else if (traitIndex == 1) {\\n      return FRONT_STRAPPY_TOP;\\n    } else if (traitIndex == 2) {\\n      return FRONT_CHEF;\\n    } else if (traitIndex == 3) {\\n      return FRONT_PREHISTORIC;\\n    } else if (traitIndex == 4) {\\n      return FRONT_TSHIRT_BLACK;\\n    } else if (traitIndex == 5) {\\n      return FRONT_TSHIRT_WHITE;\\n    } else if (traitIndex == 6) {\\n      return FRONT_TSHIRT_BLUE;\\n    } else if (traitIndex == 7) {\\n      return FRONT_VERTICAL_RED;\\n    } else if (traitIndex == 8) {\\n      return FRONT_VERTICAL_GREEN;\\n    } else if (traitIndex == 9) {\\n      return FRONT_VERTICAL_ORANGE;\\n    } else if (traitIndex == 10) {\\n      return FRONT_TURTLENECK_BLACK;\\n    } else if (traitIndex == 11) {\\n      return FRONT_TURTLENECK_ORANGE;\\n    } else if (traitIndex == 12) {\\n      return FRONT_STRIPE_RED;\\n    } else if (traitIndex == 13) {\\n      return FRONT_STRIPE_BLUE;\\n    } else if (traitIndex == 14) {\\n      return FRONT_STRIPE_ORANGE;\\n    } else if (traitIndex == 15) {\\n      return FRONT_SUIT;\\n    } else if (traitIndex == 16) {\\n      return FRONT_LUMBER;\\n    } else if (traitIndex == 17) {\\n      return FRONT_COWBOY;\\n    } else if (traitIndex == 18) {\\n      return FRONT_HIGHVIS_JACKET;\\n    } else if (traitIndex == 19) {\\n      return FRONT_POLICE;\\n    } else if (traitIndex == 20) {\\n      return FRONT_DOCTOR;\\n    } else if (traitIndex == 21) {\\n      return FRONT_SCARF;\\n    } else {\\n      return ITrait(tops2).getFrontLayer(traitIndex, 0);\\n    }\\n  }\\n\\n  function _getLayer(\\n    uint256,\\n    uint256,\\n    string memory\\n  ) internal pure override returns (string memory layer) {\\n    return \\\"\\\";\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/ICritterzMetadata.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ICritterzMetadata {\\n  function getMetadata(\\n    uint256 tokenId,\\n    bool staked,\\n    string[] calldata additionalAttributes\\n  ) external view returns (string memory);\\n\\n  function getPlaceholderMetadata(\\n    uint256 tokenId,\\n    bool staked,\\n    string[] calldata additionalAttributes\\n  ) external view returns (string memory);\\n\\n  function seed() external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 remaining\\n    );\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 balance\\n    );\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8 decimalPlaces\\n    );\\n\\n  function decreaseApproval(\\n    address spender,\\n    uint256 addedValue\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function increaseApproval(\\n    address spender,\\n    uint256 subtractedValue\\n  ) external;\\n\\n  function name()\\n    external\\n    view\\n    returns (\\n      string memory tokenName\\n    );\\n\\n  function symbol()\\n    external\\n    view\\n    returns (\\n      string memory tokenSymbol\\n    );\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (\\n      uint256 totalTokensIssued\\n    );\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n}\\n\"\r\n    },\r\n    \"@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VRFRequestIDBase {\\n\\n  /**\\n   * @notice returns the seed which is actually input to the VRF coordinator\\n   *\\n   * @dev To prevent repetition of VRF output due to repetition of the\\n   * @dev user-supplied seed, that seed is combined in a hash with the\\n   * @dev user-specific nonce, and the address of the consuming contract. The\\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\\n   * @dev the final seed, but the nonce does protect against repetition in\\n   * @dev requests which are included in a single block.\\n   *\\n   * @param _userSeed VRF seed input provided by user\\n   * @param _requester Address of the requesting contract\\n   * @param _nonce User-specific nonce at the time of the request\\n   */\\n  function makeVRFInputSeed(\\n    bytes32 _keyHash,\\n    uint256 _userSeed,\\n    address _requester,\\n    uint256 _nonce\\n  )\\n    internal\\n    pure\\n    returns (\\n      uint256\\n    )\\n  {\\n    return uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\\n  }\\n\\n  /**\\n   * @notice Returns the id for this request\\n   * @param _keyHash The serviceAgreement ID to be used for this request\\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\\n   * @return The id for this request\\n   *\\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\\n   * @dev contract, but the one generated by makeVRFInputSeed\\n   */\\n  function makeRequestId(\\n    bytes32 _keyHash,\\n    uint256 _vRFInputSeed\\n  )\\n    internal\\n    pure\\n    returns (\\n      bytes32\\n    )\\n  {\\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\\n  }\\n}\"\r\n    },\r\n    \"contracts/layers/Trait.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"./ITrait.sol\\\";\\n\\nabstract contract Trait is ITrait {\\n  bool internal _frontArmorTraitsExists = false;\\n  uint256[] internal _tiers;\\n\\n  /*\\n  READ FUNCTIONS\\n  */\\n\\n  function getSkinLayer(uint256 traitIndex, uint256 layerIndex)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (string memory layer)\\n  {\\n    return _getLayer(traitIndex, layerIndex, \\\"\\\");\\n  }\\n\\n  function getFrontLayer(uint256 traitIndex, uint256 layerIndex)\\n    external\\n    view\\n    virtual\\n    override\\n    returns (string memory frontLayer)\\n  {\\n    return _getLayer(traitIndex, layerIndex, \\\"FRONT_\\\");\\n  }\\n\\n  function getFrontArmorLayer(uint256 traitIndex, uint256 layerIndex)\\n    external\\n    view\\n    virtual\\n    override\\n    returns (string memory frontArmorLayer)\\n  {\\n    return _getLayer(traitIndex, layerIndex, \\\"FRONT_ARMOR_\\\");\\n  }\\n\\n  function sampleTraitIndex(uint256 rand)\\n    external\\n    view\\n    virtual\\n    override\\n    returns (uint256 index)\\n  {\\n    rand = rand % 10000;\\n    for (uint256 i = 0; i < _tiers.length; i++) {\\n      if (rand < _tiers[i]) {\\n        return i;\\n      }\\n    }\\n  }\\n\\n  function _layer(string memory prefix, string memory name)\\n    internal\\n    view\\n    virtual\\n    returns (string memory trait)\\n  {\\n    bytes memory sig = abi.encodeWithSignature(\\n      string(abi.encodePacked(prefix, name, \\\"()\\\")),\\n      \\\"\\\"\\n    );\\n    (bool success, bytes memory data) = address(this).staticcall(sig);\\n    return success ? abi.decode(data, (string)) : \\\"\\\";\\n  }\\n\\n  function _indexedLayer(\\n    uint256 layerIndex,\\n    string memory prefix,\\n    string memory name\\n  ) internal view virtual returns (string memory layer) {\\n    return\\n      _layer(\\n        string(abi.encodePacked(prefix, _getLayerPrefix(layerIndex))),\\n        name\\n      );\\n  }\\n\\n  function _getLayerPrefix(uint256)\\n    internal\\n    view\\n    virtual\\n    returns (string memory prefix)\\n  {\\n    return \\\"\\\";\\n  }\\n\\n  /*\\n  PURE VIRTUAL FUNCTIONS\\n  */\\n\\n  function _getLayer(\\n    uint256 traitIndex,\\n    uint256 layerIndex,\\n    string memory prefix\\n  ) internal view virtual returns (string memory layer);\\n\\n  /*\\n  MODIFIERS\\n  */\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bodies\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_eyes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mouths\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pants\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tops\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hats\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backgrounds\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trait\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"layerIndex\",\"type\":\"uint256\"}],\"name\":\"_getTrait\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skinLayer\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"frontLayer\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"frontArmorLayer\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bodyIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct CritterzMetadata.TraitLayer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backgrounds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bodies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eyes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"additionalAttributes\",\"type\":\"string[]\"}],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"additionalAttributes\",\"type\":\"string[]\"}],\"name\":\"getPlaceholderMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hats\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mouths\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bodies\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_eyes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mouths\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tops\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pants\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hats\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"setDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stakedDescription\",\"type\":\"string\"}],\"name\":\"setStakedDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tops\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CritterzMetadata","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d3da16f358bf7b7c1feea859eaf66772a48b3693000000000000000000000000e05f7e1505b84c2c029eb6894fbdedb7db9447fe00000000000000000000000097f8d8558f9a3274a7d3928f7dd74c8147efe03b0000000000000000000000009779a0c8fdb4947e631dcb599b934ca73d25472b000000000000000000000000f33095dd8a3a147d33ef82a82cacd4292f3346ce0000000000000000000000007e2a10bcf849d762aa76a2c1bbb4dfd72238b0530000000000000000000000000f334d487716c3f947f3a4155dd82fc15cfb0e06000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca000000000000000000000000f0d54349addcf704f77ae15b96510dea15cb7952aa77729d3466ca35ae8d28b3bbac7cc36a5031efdc430821c02bc31a238af4450000000000000000000000000000000000000000000000001bc16d674ec80000","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}