{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.7;\r\n\r\nabstract contract AuthLike {\r\n    function addAuthorization(address) public virtual;\r\n    function removeAuthorization(address) public virtual;\r\n    function authorizedAccounts(address) public virtual returns (uint);\r\n    // function authorities(address) public virtual returns (uint);\r\n}\r\n\r\nabstract contract StabilityFeeTreasuryLike {\r\n    function setTotalAllowance(address, uint) external virtual;\r\n    function setPerBLockAllowance(address, uint) external virtual;\r\n    function getAllowance(address) virtual external view returns (uint256, uint256);\r\n}\r\n\r\n\r\ncontract SwapSetters {\r\n\r\n    function execute(bool) public {\r\n        address newAuctionedSurplusSetter      = 0xa43BFA2a04c355128F3f10788232feeB2f42FE98;\r\n        address newDebtAuctionParamSetter      = 0x7df2d51e69aA58B69C3dF18D75b8e9ACc3C1B04E;\r\n        address oldAuctionedSurplusSetter      = 0xfCD7BcC44C3778880AEd0E025fd0aE5f7ce5Ba44;\r\n        address oldDebtAuctionParamSetter      = 0x840E4e438711962DAc1a0c37B0588C08C92c29A5;\r\n\r\n        address autoSurplusBufferSetter        = 0x1450f40E741F2450A95F9579Be93DD63b8407a25;\r\n\r\n        address accountingEngine               = 0xcEe6Aa1aB47d0Fb0f24f51A3072EC16E20F90fcE;\r\n        address stabilityFeeTreasury           = 0x83533fdd3285f48204215E9CF38C785371258E76;\r\n        address increasingReimbursementOverlay = 0x1dCeE093a7C952260f591D9B8401318f2d2d72Ac;\r\n        address debtAuctionParamSetterOverlay  = 0x262BE7C309C059C83C15f845C8b0dC25c3b2cDCE;\r\n\r\n        // updating auth on accountingEngine\r\n        AuthLike(accountingEngine).addAuthorization(newAuctionedSurplusSetter);\r\n        AuthLike(accountingEngine).addAuthorization(newDebtAuctionParamSetter);\r\n        AuthLike(accountingEngine).removeAuthorization(oldAuctionedSurplusSetter);\r\n        AuthLike(accountingEngine).removeAuthorization(oldDebtAuctionParamSetter);\r\n\r\n        // authing overlays\r\n        AuthLike(newAuctionedSurplusSetter).addAuthorization(increasingReimbursementOverlay);\r\n        AuthLike(newDebtAuctionParamSetter).addAuthorization(increasingReimbursementOverlay);\r\n        AuthLike(newDebtAuctionParamSetter).addAuthorization(debtAuctionParamSetterOverlay);\r\n\r\n        // updating allowances (SF treasury)\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setPerBLockAllowance(newAuctionedSurplusSetter, 10**43); // .01 RAD\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setPerBLockAllowance(newDebtAuctionParamSetter, 10**43); // .01 RAD\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setTotalAllowance(newAuctionedSurplusSetter, uint(-1));\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setTotalAllowance(newDebtAuctionParamSetter, uint(-1));\r\n\r\n        // removing allowances from old contracts - convert to RAD\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setPerBLockAllowance(oldAuctionedSurplusSetter, 0);\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setPerBLockAllowance(oldDebtAuctionParamSetter, 0);\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setTotalAllowance(oldAuctionedSurplusSetter, 0);\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setTotalAllowance(oldDebtAuctionParamSetter, 0);\r\n\r\n        // setting allowance for GEB_AUTO_SURPLUS_BUFFER\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setPerBLockAllowance(autoSurplusBufferSetter, 10**43); // .01 RAD\r\n        StabilityFeeTreasuryLike(stabilityFeeTreasury).setTotalAllowance(autoSurplusBufferSetter, uint(-1));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SwapSetters","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dcf07ffe311f50d0f305aad28c7b2911cdab1e552c1b055e828e62b3a8133c55"}]}