{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.0;\r\n\r\ncontract Distr {\r\n    address owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function dist(address payable[] memory addrs, uint256[] memory blncs) public payable {\r\n        require(msg.sender == owner, \"NO\");\r\n        require(addrs.length == blncs.length);\r\n        for(uint256 i = 0; i < addrs.length; i++) {\r\n            (bool s, ) = addrs[i].call{value: blncs[i], gas: 35000}(\"\");\r\n\r\n            require(s, \"failed\");\r\n        }\r\n\r\n        payable(msg.sender).call{value: address(this).balance}(\"\");\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"blncs\",\"type\":\"uint256[]\"}],\"name\":\"dist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Distr","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a24c6451fb44ce76801fbe8aa965b52873d6d40433f74e8cc8b68a5f5f1c787a"}]}