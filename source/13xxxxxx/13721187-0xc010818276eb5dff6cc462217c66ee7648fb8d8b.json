{"status":"1","message":"OK","result":[{"SourceCode":"{\"IStarknetCore.sol\":{\"content\":\"pragma solidity ^0.6.12;\\n\\ninterface IStarknetCore {\\n    /**\\n      Sends a message to an L2 contract.\\n\\n      Returns the hash of the message.\\n    */\\n    function sendMessageToL2(\\n        uint256 to_address,\\n        uint256 selector,\\n        uint256[] calldata payload\\n    ) external returns (bytes32);\\n\\n    /**\\n      Consumes a message that was sent from an L2 contract.\\n\\n      Returns the hash of the message.\\n    */\\n    function consumeMessageFromL2(uint256 fromAddress, uint256[] calldata payload)\\n        external\\n        returns (bytes32);\\n}\\n\"},\"StarkNetGraffiti.sol\":{\"content\":\"pragma solidity ^0.6.12;\\nimport \\u0027./IStarknetCore.sol\\u0027;\\n\\n/**\\n  Demo contract for L1 \\u003c-\\u003e L2 interaction between an L2 StarkNet contract and this L1 solidity\\n  contract.\\n*/\\ncontract StarkNetGraffiti {\\n    // The StarkNet core contract.\\n    IStarknetCore public starknetCore;\\n\\n    // The selector of the \\\"graffOnStarkNetFromMainnet\\\" l1_handler.\\n    uint256 public GRAFF_SELECTOR; \\n    // The address of the L2 graff contract\\n    uint256 public l2MessengerContractAddress;\\n\\n    // An owner who can modify the graff contract\\n    address public owner;\\n\\n    event messageReceivedFromStarkNet(string stringMessage);\\n    event messageSentToStarkNet(string stringMessage);\\n\\n    constructor() public \\n    {   \\n      owner = msg.sender;\\n    }\\n\\n\\n    function graffFromStarknetOnMainnet(bytes32 messageToGraff) \\n    public \\n    {\\n        // Construct the withdrawal message\\u0027s payload.\\n        uint256[] memory payload = new uint256[](1);\\n        payload[0] = uint256(messageToGraff);\\n\\n        // Consume the message from the StarkNet core contract.\\n        // This will revert the (Ethereum) transaction if the message does not exist.\\n        starknetCore.consumeMessageFromL2(l2MessengerContractAddress, payload);\\n        emit messageReceivedFromStarkNet(customizedBytes32ToString(messageToGraff));\\n    }\\n\\n    function graffFromMainnetOnStarknet(bytes32 messageToGraff) \\n    public \\n    {\\n       \\n        // Construct the deposit message\\u0027s payload.\\n        uint256[] memory payload = new uint256[](1);\\n        payload[0] = uint256(messageToGraff);\\n\\n        // Send the message to the StarkNet core contract.\\n        starknetCore.sendMessageToL2(l2MessengerContractAddress, GRAFF_SELECTOR, payload);\\n        emit messageSentToStarkNet(customizedBytes32ToString(messageToGraff));\\n    }\\n\\n    function multiGraffs(bytes32[] memory messageToGraff)\\n    external\\n    {\\n        for (uint i = 0; i \\u003c messageToGraff.length; i++)\\n        {\\n            graffFromStarknetOnMainnet(messageToGraff[i]);\\n        }\\n    }\\n\\n    // Setup, permissions and utility\\n\\n    function setL2Graffer(IStarknetCore starknetCore_, uint256 l2MessengerContractAddress_, uint256 GRAFF_SELECTOR_)\\n    public\\n    onlyOwner\\n    {\\n        starknetCore = starknetCore_;   \\n        l2MessengerContractAddress = l2MessengerContractAddress_;\\n        GRAFF_SELECTOR = GRAFF_SELECTOR_;\\n    }\\n\\n    modifier onlyOwner() \\n    {\\n\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    function customizedBytes32ToString(bytes32 _bytes32) \\n    public \\n    pure \\n    returns (string memory) \\n    {\\n        uint8 i = 0;\\n        while(i \\u003c 32 \\u0026\\u0026 _bytes32[i] != 0) {\\n            i++;\\n        }\\n        uint offset = i;\\n        bytes memory bytesArray = new bytes(32-offset);\\n        for (i = 0; i \\u003c 32-offset; i++) {\\n            bytesArray[i] = _bytes32[i+offset];\\n        }\\n        return string(bytesArray);\\n    }\\n    \\n\\n\\n\\n}\"}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stringMessage\",\"type\":\"string\"}],\"name\":\"messageReceivedFromStarkNet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stringMessage\",\"type\":\"string\"}],\"name\":\"messageSentToStarkNet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRAFF_SELECTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_bytes32\",\"type\":\"bytes32\"}],\"name\":\"customizedBytes32ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageToGraff\",\"type\":\"bytes32\"}],\"name\":\"graffFromMainnetOnStarknet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageToGraff\",\"type\":\"bytes32\"}],\"name\":\"graffFromStarknetOnMainnet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2MessengerContractAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"messageToGraff\",\"type\":\"bytes32[]\"}],\"name\":\"multiGraffs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStarknetCore\",\"name\":\"starknetCore_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l2MessengerContractAddress_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"GRAFF_SELECTOR_\",\"type\":\"uint256\"}],\"name\":\"setL2Graffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"starknetCore\",\"outputs\":[{\"internalType\":\"contract IStarknetCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"StarkNetGraffiti","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://35fec497033731f5474998544a41bdcd0065b12da0f5fe92083b9e65fffc4ce1"}]}