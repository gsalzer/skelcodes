{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/VNLSSellOrderBook.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.5;\\r\\n\\r\\nimport \\\"./interfaces/IVNLSSellOrderBook.sol\\\";\\r\\nimport \\\"./interfaces/IVirtualBitcoin.sol\\\";\\r\\n\\r\\ncontract VNLSSellOrderBook is IVNLSSellOrderBook {\\r\\n    \\r\\n    IVirtualBitcoin vbtc;\\r\\n\\r\\n    struct SellOrder {\\r\\n        address seller;\\r\\n        uint256 amount;\\r\\n        uint256 price;\\r\\n    }\\r\\n    SellOrder[] public orders;\\r\\n\\r\\n    constructor(IVirtualBitcoin _vbtc) {\\r\\n        vbtc = _vbtc;\\r\\n    }\\r\\n\\r\\n    function count() override external view returns (uint256) {\\r\\n        return orders.length;\\r\\n    }\\r\\n\\r\\n    function get(uint256 orderId) override external view returns (address seller, uint256 amount, uint256 price) {\\r\\n        SellOrder memory order = orders[orderId];\\r\\n        return (order.seller, order.amount, order.price);\\r\\n    }\\r\\n\\r\\n    function sell(uint256 amount, uint256 price) override external {\\r\\n        vbtc.transferFrom(msg.sender, address(this), amount);\\r\\n        uint256 orderId = orders.length;\\r\\n        orders.push(SellOrder({\\r\\n            seller: msg.sender,\\r\\n            amount: amount,\\r\\n            price: price\\r\\n        }));\\r\\n        emit Sell(orderId, msg.sender, amount, price);\\r\\n    }\\r\\n\\r\\n    function remove(uint256 orderId) internal {\\r\\n        delete orders[orderId];\\r\\n        emit Remove(orderId);\\r\\n    }\\r\\n\\r\\n    function buy(uint256 orderId) override payable external {\\r\\n        SellOrder storage order = orders[orderId];\\r\\n        uint256 amount = order.amount * msg.value / order.price;\\r\\n        vbtc.transfer(msg.sender, amount);\\r\\n        order.amount -= amount;\\r\\n        order.price -= msg.value;\\r\\n        address seller = order.seller;\\r\\n        if (order.amount == 0) {\\r\\n            remove(orderId);\\r\\n        }\\r\\n        payable(seller).transfer(msg.value);\\r\\n        emit Buy(orderId, msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function cancel(uint256 orderId) override external {\\r\\n        SellOrder memory order = orders[orderId];\\r\\n        require(order.seller == msg.sender);\\r\\n        vbtc.transfer(msg.sender, order.amount);\\r\\n        remove(orderId);\\r\\n        emit Cancel(orderId);\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/interfaces/IVNLSSellOrderBook.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.5;\\r\\n\\r\\ninterface IVNLSSellOrderBook {\\r\\n\\r\\n    event Sell(uint256 indexed orderId, address indexed seller, uint256 amount, uint256 price);\\r\\n    event Remove(uint256 indexed orderId);\\r\\n    event Buy(uint256 indexed orderId, address indexed buyer, uint256 amount);\\r\\n    event Cancel(uint256 indexed orderId);\\r\\n\\r\\n    function count() external view returns (uint256);\\r\\n    function get(uint256 orderId) external view returns (address seller, uint256 amount, uint256 price);\\r\\n    function sell(uint256 amount, uint256 price) external;\\r\\n    function buy(uint256 orderId) payable external;\\r\\n    function cancel(uint256 orderId) external;\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/interfaces/IVirtualBitcoin.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ninterface IVirtualBitcoin {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\r\\n    event BuyPizza(address indexed owner, uint256 indexed pizzaId, uint256 power);\\r\\n    event ChangePizza(address indexed owner, uint256 indexed pizzaId, uint256 power);\\r\\n    event SellPizza(address indexed owner, uint256 indexed pizzaId);\\r\\n    event Mine(address indexed owner, uint256 indexed pizzaId, uint256 subsidy);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n    function transfer(address to, uint256 amount) external returns (bool success);\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool success);\\r\\n    function approve(address spender, uint256 amount) external returns (bool success);\\r\\n    function allowance(address owner, address spender) external view returns (uint256 remaining);\\r\\n\\r\\n    function pizzaPrice(uint256 power) external view returns (uint256);\\r\\n    function pizzaCount() external view returns (uint256);\\r\\n    function subsidyAt(uint256 blockNumber) external view returns (uint256);\\r\\n    function buyPizza(uint256 power) external returns (uint256);\\r\\n    function sellPizza(uint256 pizzaId) external;\\r\\n    function changePizza(uint256 pizzaId, uint256 power) external;\\r\\n    function powerOf(uint256 pizzaId) external view returns (uint256);\\r\\n    function subsidyOf(uint256 pizzaId) external view returns (uint256);\\r\\n    function mine(uint256 pizzaId) external returns (uint256);\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IVirtualBitcoin\",\"name\":\"_vbtc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"Remove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VNLSSellOrderBook","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000fe6d468bb4dd530e0f5ee98b58e37e11daaaaf31","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}