{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at FtmScan.com on 2021-09-06\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity ^0.8.6;\r\n\r\n// MPC management means multi-party validation.\r\n// MPC signing likes Multi-Signature is more secure than use private key directly.\r\ncontract MPCManageable {\r\n    address public mpc;\r\n    address public pendingMPC;\r\n\r\n    uint256 public constant delay = 2*24*3600;\r\n    uint256 public delayMPC;\r\n\r\n    modifier onlyMPC() {\r\n        require(msg.sender == mpc, \"MPC: only mpc\");\r\n        _;\r\n    }\r\n\r\n    event LogChangeMPC(\r\n        address indexed oldMPC,\r\n        address indexed newMPC,\r\n        uint256 indexed effectiveTime);\r\n\r\n    event LogApplyMPC(\r\n        address indexed oldMPC,\r\n        address indexed newMPC,\r\n        uint256 indexed applyTime);\r\n\r\n    constructor(address _mpc) {\r\n        require(_mpc != address(0), \"MPC: mpc is the zero address\");\r\n        mpc = _mpc;\r\n        emit LogChangeMPC(address(0), mpc, block.timestamp);\r\n    }\r\n\r\n    function changeMPC(address _mpc) external onlyMPC {\r\n        require(_mpc != address(0), \"MPC: mpc is the zero address\");\r\n        pendingMPC = _mpc;\r\n        delayMPC = block.timestamp + delay;\r\n        emit LogChangeMPC(mpc, pendingMPC, delayMPC);\r\n    }\r\n\r\n    function applyMPC() external {\r\n        require(msg.sender == pendingMPC, \"MPC: only pendingMPC\");\r\n        require(block.timestamp >= delayMPC, \"MPC: time before delayMPC\");\r\n        emit LogApplyMPC(mpc, pendingMPC, block.timestamp);\r\n        mpc = pendingMPC;\r\n        pendingMPC = address(0);\r\n        delayMPC = 0;\r\n    }\r\n}\r\n\r\ninterface IERC721Transfer {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n}\r\n\r\ninterface IERC1155Transfer {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata tokenIds,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ncontract NFTRouter is MPCManageable {\r\n    uint256 public immutable cID;\r\n    uint256 public feePerTransaction;\r\n    uint256 public feePerUnitInBatch;\r\n\r\n    constructor(\r\n        address _mpc,\r\n        uint256 _feePerTransaction,\r\n        uint256 _feePerUnitInBatch\r\n    ) MPCManageable(_mpc) {\r\n        uint256 chainID;\r\n        assembly {chainID := chainid()}\r\n        cID = chainID;\r\n        feePerTransaction = _feePerTransaction;\r\n        feePerUnitInBatch = _feePerUnitInBatch;\r\n    }\r\n\r\n    // adjust base fee per transaction\r\n    function adjustFeePerTransaction(uint256 newFee) external onlyMPC {\r\n        emit LogAdjustFee(feePerTransaction, newFee, false);\r\n        feePerTransaction = newFee;\r\n    }\r\n\r\n    // adjust unit fee in batch transfer\r\n    function adjustFeePerUnitInBatch(uint256 newFee) external onlyMPC {\r\n        emit LogAdjustFee(feePerUnitInBatch, newFee, true);\r\n        feePerUnitInBatch = newFee;\r\n    }\r\n\r\n    // swapin `tokenId` of `token` in `fromChainID` to recipient `to` on this chainID\r\n    function nft721SwapIn(\r\n        bytes32 txHash,\r\n        address token,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 fromChainID\r\n    ) external onlyMPC {\r\n        IERC721Transfer(token).safeTransferFrom(address(this), to, tokenId);\r\n        emit LogNFT721SwapIn(txHash, token, to, tokenId, fromChainID, cID);\r\n    }\r\n\r\n    // swapin `amount` of `tokenId` of `token` in `fromChainID` to recipient `to` on this chainID\r\n    function nft1155SwapIn(\r\n        bytes32 txHash,\r\n        address token,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        uint256 fromChainID\r\n    ) external onlyMPC {\r\n        IERC1155Transfer(token).safeTransferFrom(address(this), to, tokenId, amount, new bytes(0));\r\n        emit LogNFT1155SwapIn(txHash, token, to, tokenId, amount, fromChainID, cID);\r\n    }\r\n\r\n    // swapin `amounts` of `tokenIds` of `token` in `fromChainID` to recipient `to` on this chainID\r\n    function nft1155BatchSwapIn(\r\n        bytes32 txHash,\r\n        address token,\r\n        address to,\r\n        uint256[] calldata tokenIds,\r\n        uint256[] calldata amounts,\r\n        uint256 fromChainID\r\n    ) external onlyMPC {\r\n        IERC1155Transfer(token).safeBatchTransferFrom(address(this), to, tokenIds, amounts, new bytes(0));\r\n        emit LogNFT1155SwapInBatch(txHash, token, to, tokenIds, amounts, fromChainID, cID);\r\n    }\r\n\r\n    // swapout `tokenId` of `token` from this chain to `toChainID` chain with recipient `to`\r\n    function nft721SwapOut(\r\n        address token,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 toChainID\r\n    ) external payable {\r\n        _transferFee(0);\r\n        IERC721Transfer(token).safeTransferFrom(msg.sender, address(this), tokenId);\r\n        emit LogNFT721SwapOut(token, msg.sender, to, tokenId, cID, toChainID);\r\n    }\r\n\r\n    // swapout `amount` of `tokenId` of `token` from this chain to `toChainID` chain with recipient `to`\r\n    function nft1155SwapOut(\r\n        address token,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        bytes calldata data,\r\n        uint256 toChainID\r\n    ) external payable {\r\n        _transferFee(0);\r\n        IERC1155Transfer(token).safeTransferFrom(msg.sender, address(this), tokenId, amount, data);\r\n        emit LogNFT1155SwapOut(token, msg.sender, to, tokenId, amount, cID, toChainID);\r\n    }\r\n\r\n    // swapout `amounts` of `tokenIds` of `token` from this chain to `toChainID` chain with recipient `to`\r\n    function nft1155BatchSwapOut(\r\n        address token,\r\n        address to,\r\n        uint256[] calldata tokenIds,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data,\r\n        uint256 toChainID\r\n    ) external payable {\r\n        _transferFee(tokenIds.length);\r\n        IERC1155Transfer(token).safeBatchTransferFrom(msg.sender, address(this), tokenIds, amounts, data);\r\n        emit LogNFT1155SwapOutBatch(token, msg.sender, to, tokenIds, amounts, cID, toChainID);\r\n    }\r\n\r\n    function _transferFee(uint256 unitsInBatch) internal {\r\n        uint256 needFee = feePerTransaction + unitsInBatch * feePerUnitInBatch;\r\n        require(msg.value >= needFee, \"NFTRouter: not enough fee\");\r\n        if (msg.value > 0) {\r\n            (bool success,) = mpc.call{value: msg.value}(new bytes(0));\r\n            require(success, \"NFTRouter: transfer fee failed\");\r\n        }\r\n    }\r\n\r\n    // make this router contract can receive erc721 token\r\n    function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {\r\n        return NFTRouter.onERC721Received.selector;\r\n    }\r\n\r\n    // make this router contract can receive erc1155 token\r\n    function onERC1155Received(address, address, uint256, uint256, bytes calldata) external pure returns (bytes4) {\r\n        return NFTRouter.onERC1155Received.selector;\r\n    }\r\n\r\n    // make this router contract can receive erc1155 token in batch\r\n    function onERC1155BatchReceived(address, address, uint256[] calldata, uint256[] calldata, bytes calldata) external pure returns (bytes4) {\r\n        return NFTRouter.onERC1155BatchReceived.selector;\r\n    }\r\n\r\n    event LogAdjustFee(\r\n        uint256 indexed oldFee,\r\n        uint256 indexed newFee,\r\n        bool isUnitFee);\r\n\r\n    event LogNFT721SwapIn(\r\n        bytes32 indexed txHash,\r\n        address indexed token,\r\n        address indexed to,\r\n        uint256 tokenId,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n\r\n    event LogNFT1155SwapIn(\r\n        bytes32 indexed txHash,\r\n        address indexed token,\r\n        address indexed to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n\r\n    event LogNFT1155SwapInBatch(\r\n        bytes32 indexed txHash,\r\n        address indexed token,\r\n        address indexed to,\r\n        uint256[] tokenIds,\r\n        uint256[] amounts,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n\r\n    event LogNFT721SwapOut(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 tokenId,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n\r\n    event LogNFT1155SwapOut(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n\r\n    event LogNFT1155SwapOutBatch(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] tokenIds,\r\n        uint256[] amounts,\r\n        uint256 fromChainID,\r\n        uint256 toChainID);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mpc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feePerUnitInBatch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isUnitFee\",\"type\":\"bool\"}],\"name\":\"LogAdjustFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMPC\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMPC\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"applyTime\",\"type\":\"uint256\"}],\"name\":\"LogApplyMPC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMPC\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMPC\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"effectiveTime\",\"type\":\"uint256\"}],\"name\":\"LogChangeMPC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT1155SwapIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT1155SwapInBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT1155SwapOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT1155SwapOutBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT721SwapIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"LogNFT721SwapOut\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"adjustFeePerTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"adjustFeePerUnitInBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyMPC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mpc\",\"type\":\"address\"}],\"name\":\"changeMPC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayMPC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePerTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePerUnitInBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mpc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"}],\"name\":\"nft1155BatchSwapIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"nft1155BatchSwapOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"}],\"name\":\"nft1155SwapIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"nft1155SwapOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainID\",\"type\":\"uint256\"}],\"name\":\"nft721SwapIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainID\",\"type\":\"uint256\"}],\"name\":\"nft721SwapOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingMPC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"NFTRouter","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006d7bacdd585cd287c1290ffb659abb01e5599b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c9fc76b308e2fbbe999d3faf5e2aea1093ed469fccede9e0f55edfcc518f4cf9"}]}