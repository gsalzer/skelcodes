// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";
import "@openzeppelin/contracts/security/ReentrancyGuard.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//////////////@@@@@@///////////////////@///////////////@@@@@@@@@@@@@@@@@////////
//////////@@@////////@@@//////////////@/@//////////////@///////////////@////////
////////@@//////////////@@//////////@@//#@/////////////@///////////////@////////
///////@@////////////////@@////////@@/////@@///////////@///////////////@////////
///////@@////////////////@@//////@@////////@@//////////@///////////////@////////
////////@@//////////////@@//////@@///////////@/////////@///////////////@////////
//////////@@@////////@@@///////@//////////////@@///////@///////////////@////////
//////////////@@@@@@/////////@@@@@@@@@@@@@@@@@@@@//////@@@@@@@@@@@@@@@@@////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

contract SquidGame is ERC721Enumerable, ReentrancyGuard, Ownable {

    uint256 public priceInWei = 10000000000000000;
    uint16  public maxTotalSupply = 5000;
    uint16  public maxCount = 5;
    uint16  public minted = 0;
    string  public baseURI;

    constructor() ERC721("SQUID GAME", "SQUID") {}

    function _baseURI() internal view virtual override returns (string memory) {
        return baseURI;
    }

    function setBaseURI(string calldata uri) external onlyOwner {
        baseURI = uri;
    }

    function mint(uint16 count) external payable virtual nonReentrant {
        require(minted < maxTotalSupply, "MAX TOKENS MINTED");
        require(count > 0 && count <= maxCount, "INVALID COUNT");
        require(minted + count <= maxTotalSupply, "NOT ENOUGH TOKENS AVAILABLE");
        require(msg.value == priceInWei * count, "INVALID PRICE");

        for (uint16 i = 0; i < count; i++) {
            minted++;
            _safeMint(msg.sender, minted);
        }
    }

    function withdrawAll() external onlyOwner {
        payable(owner()).transfer(address(this).balance);
    }

}

