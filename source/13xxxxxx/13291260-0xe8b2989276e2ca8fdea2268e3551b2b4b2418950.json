{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.16\r\n# Curve.Fi, 2021\r\n# Distributed under MIT license\r\n\r\ninterface Tricrypto:\r\n    def virtual_price() -> uint256: view\r\n    def price_oracle(k: uint256) -> uint256: view\r\n    def A() -> uint256: view\r\n    def gamma() -> uint256: view\r\n\r\n\r\nPOOL: constant(address) = 0xD51a44d3FaE010294C616388b506AcdA1bfAAE46\r\nGAMMA0: constant(uint256) = 28000000000000  # 2.8e-5\r\nA0: constant(uint256) = 2 * 3**3 * 10000\r\nDISCOUNT0: constant(uint256) = 1087460000000000  # 0.00108..\r\n\r\n\r\n@pure\r\n@internal\r\ndef cubic_root(x: uint256) -> uint256:\r\n    # x is taken at base 1e36\r\n    # result is at base 1e18\r\n    # Will have convergence problems when ETH*BTC is cheaper than 0.01 squared dollar\r\n    # (for example, when BTC < $0.1 and ETH < $0.1)\r\n    D: uint256 = x / 10**18\r\n    for i in range(255):\r\n        diff: uint256 = 0\r\n        D_prev: uint256 = D\r\n        D = D * (2 * 10**18 + x / D * 10**18 / D * 10**18 / D) / (3 * 10**18)\r\n        if D > D_prev:\r\n            diff = D - D_prev\r\n        else:\r\n            diff = D_prev - D\r\n        if diff <= 1 or diff * 10**18 < D:\r\n            return D\r\n    raise \"Did not converge\"\r\n\r\n\r\n@external\r\n@view\r\ndef lp_price() -> uint256:\r\n    vp: uint256 = Tricrypto(POOL).virtual_price()\r\n    p1: uint256 = Tricrypto(POOL).price_oracle(0)\r\n    p2: uint256 = Tricrypto(POOL).price_oracle(1)\r\n\r\n    max_price: uint256 = 3 * vp * self.cubic_root(p1 * p2) / 10**18\r\n\r\n    # ((A/A0) * (gamma/gamma0)**2) ** (1/3)\r\n    g: uint256 = Tricrypto(POOL).gamma() * 10**18 / GAMMA0\r\n    a: uint256 = Tricrypto(POOL).A() * 10**18 / A0\r\n    discount: uint256 = max(g**2 / 10**18 * a, 10**34)  # handle qbrt nonconvergence\r\n    # if discount is small, we take an upper bound\r\n    discount = self.cubic_root(discount) * DISCOUNT0 / 10**18\r\n\r\n    max_price -= max_price * discount / 10**18\r\n\r\n    return max_price","ABI":"[{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"lp_price\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":1054528}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.16","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}