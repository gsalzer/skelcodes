{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/CorruptionsBidirectionalDataMapper.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity^0.8.0;\\n\\ncontract CorruptionsBidirectionalDataMapper {\\n    address constant public chosenAddress = 0x4fFFFF3eD1E82057dffEe66b4aa4057466E24a38;\\n    address public owner;\\n    \\n    struct DataMap {\\n        bool created;\\n        bool locked;\\n        string name;\\n        mapping(uint256 => uint256) values;\\n    }\\n    \\n    mapping(uint256 => DataMap) public dataMaps;\\n    uint256 public mapCount;\\n    \\n    constructor() {\\n        owner = msg.sender;\\n    }\\n    \\n    function addMap(string memory name) public {\\n        require(msg.sender == owner, \\\"CorruptionsBidirectionalDataMapper: not owner\\\");\\n        DataMap storage map = dataMaps[mapCount];\\n        map.created = true;\\n        map.name = name;\\n        mapCount++;\\n    }\\n\\n    function setValue(uint256 mapIndex, uint256 key, uint256 value) public {\\n        require(msg.sender == owner || msg.sender == chosenAddress, \\\"CorruptionsBidirectionalDataMapper: not owner or allowed\\\");\\n        DataMap storage map = dataMaps[mapIndex];\\n        require(map.locked == false, \\\"CorruptionsBidirectionalDataMapper: map is locked\\\");\\n        map.values[key] = value;\\n    }\\n    \\n    function valueFor(uint256 mapIndex, uint256 key) public view returns (uint256) {\\n        DataMap storage map = dataMaps[mapIndex];\\n        return map.values[key];\\n    }\\n    \\n    // owner or chosen address can \\\"commit\\\" a map's value once it's finalized\\n    // this makes the values immutable\\n    function commitMap(uint256 mapIndex) public {\\n        require(msg.sender == owner || msg.sender == chosenAddress, \\\"CorruptionsBidirectionalDataMapper: not owner\\\");\\n        DataMap storage map = dataMaps[mapIndex];\\n        map.locked = true;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chosenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mapIndex\",\"type\":\"uint256\"}],\"name\":\"commitMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dataMaps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"created\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CorruptionsBidirectionalDataMapper","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}