{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENCED\r\n\r\npragma solidity ^0.8.4;\r\n\r\ninterface IERC721 {\r\n\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\ncontract MultiSenderERC721 {\r\n\r\n   function send(address _token, address _to, uint256[] calldata _tokenIds) external {\r\n      require(_token != address(0), \"EMPTY_TOKEN\");\r\n      require(_to != address(0), \"EMPTY_TO\");\r\n      require(_tokenIds.length > 0, \"EMPTY_TOKEN_IDS\");\r\n      require(IERC721(_token).isApprovedForAll(msg.sender, address(this)), \"NOT_APPROVED_FOR_ALL\");\r\n\r\n      uint numberOfTokens = _tokenIds.length;\r\n      for (uint256 i = 0; i < numberOfTokens; i++) {\r\n          uint256 tokenId = _tokenIds[i];\r\n          IERC721(_token).safeTransferFrom(msg.sender, _to, tokenId);\r\n          assert(IERC721(_token).ownerOf(tokenId) == _to);\r\n      }\r\n   }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiSenderERC721","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://78c22aead1654b53acc7d91ac172ff7e0ce0706bfa5ffe880dea1ae4e20ac4a5"}]}