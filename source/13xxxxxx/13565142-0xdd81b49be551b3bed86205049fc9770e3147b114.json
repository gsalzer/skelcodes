{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/PersonalSubgraphAnchor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\n/// @dev A general contract that lets users anchor data on chain\\n/// The data being anchored is a single ethereum address, with all the tokens\\n/// it wants to track. We also add the sender to the event. This way, everyone\\n/// can have their own view of an account. To have a shared view of a single account\\n/// does not make sense, as there is no way to come to consensus about what the most\\n/// useful view is. Other than, every single token.\\ncontract PersonalSubgraphAnchor {\\n    event AddERC20(address indexed sender, address indexed user, address indexed token);\\n    function addERC20(address _token, address _user) external {\\n        emit AddERC20(msg.sender, _user, _token);\\n    }\\n    function addERC20s(address[] memory tokens, address _user) external {\\n\\t\\tfor (uint256 i = 0; i < tokens.length; i++){\\n            emit AddERC20(msg.sender, _user, tokens[i]);\\n\\t\\t}\\n\\t}\\n\\n    // Note - NFTs not part of POC\\n    // event AddERC721(address indexed sender, address indexed user, address indexed token);\\n    // event AddERC721Sender(address indexed sender, address indexed user, address indexed token);\\n\\n    // Note - not in use for POC\\n    // event AddERC20Sender(address indexed sender, address indexed user, address indexed token);\\n    // function addERC20(address _token) external {\\n    //     emit AddERC20Sender(msg.sender, msg.sender, _token);\\n    // }\\n    // function addERC20s(address[] memory _tokens) external {\\n\\t// \\tfor (uint256 i = 0; i < _tokens.length; i++){\\n    //        emit AddERC20Sender(msg.sender, msg.sender, _tokens[i]);\\n\\t// \\t}\\n\\t// }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AddERC20\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addERC20s\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PersonalSubgraphAnchor","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}