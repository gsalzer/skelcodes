{"status":"1","message":"OK","result":[{"SourceCode":"{\"Fix64V1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"MathV1.sol\\\";\\r\\n\\r\\n/*\\r\\n    Provides mathematical operations and representation in Q31.Q32 format.\\r\\n\\r\\n    exp: Adapted from Petteri Aimonen\\u0027s libfixmath\\r\\n    \\r\\n    See: https://github.com/PetteriAimonen/libfixmath\\r\\n         https://github.com/PetteriAimonen/libfixmath/blob/master/LICENSE\\r\\n\\r\\n    other functions: Adapted from André Slupik\\u0027s FixedMath.NET\\r\\n                     https://github.com/asik/FixedMath.Net/blob/master/LICENSE.txt\\r\\n         \\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    libfixmath is Copyright (c) 2011-2021 Flatmush \\u003cFlatmush@gmail.com\\u003e,\\r\\n    Petteri Aimonen \\u003cPetteri.Aimonen@gmail.com\\u003e, \\u0026 libfixmath AUTHORS\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n\\r\\n    Copyright 2012 André Slupik\\r\\n\\r\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n    you may not use this file except in compliance with the License.\\r\\n    You may obtain a copy of the License at\\r\\n\\r\\n        http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n    Unless required by applicable law or agreed to in writing, software\\r\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n    See the License for the specific language governing permissions and\\r\\n    limitations under the License.\\r\\n\\r\\n    This project uses code from the log2fix library, which is under the following license:           \\r\\n    The MIT License (MIT)\\r\\n\\r\\n    Copyright (c) 2015 Dan Moulding\\r\\n    \\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), \\r\\n    to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, \\r\\n    and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\r\\n    \\r\\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\\r\\n    IN THE SOFTWARE.\\r\\n*/\\r\\n\\r\\nlibrary Fix64V1 {\\r\\n    int64 public constant FRACTIONAL_PLACES = 32;\\r\\n    int64 public constant ONE = 4294967296; // 1 \\u003c\\u003c FRACTIONAL_PLACES\\r\\n    int64 public constant TWO = ONE * 2;\\r\\n    int64 public constant PI = 0x3243F6A88;\\r\\n    int64 public constant TWO_PI = 0x6487ED511;\\r\\n    int64 public constant MAX_VALUE = type(int64).max;\\r\\n    int64 public constant MIN_VALUE = type(int64).min;\\r\\n    int64 public constant PI_OVER_2 = 0x1921FB544;\\r\\n\\r\\n    function countLeadingZeros(uint64 x) internal pure returns (int64) {        \\r\\n        int64 result = 0;\\r\\n        while ((x \\u0026 0xF000000000000000) == 0) {\\r\\n            result += 4;\\r\\n            x \\u003c\\u003c= 4;\\r\\n        }\\r\\n        while ((x \\u0026 0x8000000000000000) == 0) {\\r\\n            result += 1;\\r\\n            x \\u003c\\u003c= 1;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function div(int64 x, int64 y)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        if (y == 0) {\\r\\n            revert(\\\"attempted to divide by zero\\\");\\r\\n        }\\r\\n\\r\\n        int64 xl = x;\\r\\n        int64 yl = y;        \\r\\n\\r\\n        uint64 remainder = uint64(xl \\u003e= 0 ? xl : -xl);\\r\\n        uint64 divider = uint64((yl \\u003e= 0 ? yl : -yl));\\r\\n        uint64 quotient = 0;\\r\\n        int64 bitPos = 64 / 2 + 1;\\r\\n\\r\\n        while ((divider \\u0026 0xF) == 0 \\u0026\\u0026 bitPos \\u003e= 4) {\\r\\n            divider \\u003e\\u003e= 4;\\r\\n            bitPos -= 4;\\r\\n        }\\r\\n\\r\\n        while (remainder != 0 \\u0026\\u0026 bitPos \\u003e= 0) {\\r\\n            int64 shift = countLeadingZeros(remainder);\\r\\n            if (shift \\u003e bitPos) {\\r\\n                shift = bitPos;\\r\\n            }\\r\\n            remainder \\u003c\\u003c= uint64(shift);\\r\\n            bitPos -= shift;\\r\\n\\r\\n            uint64 d = remainder / divider;\\r\\n            remainder = remainder % divider;\\r\\n            quotient += d \\u003c\\u003c uint64(bitPos);\\r\\n\\r\\n            if ((d \\u0026 ~(uint64(0xFFFFFFFFFFFFFFFF) \\u003e\\u003e uint64(bitPos)) != 0)) {\\r\\n                return\\r\\n                    ((xl ^ yl) \\u0026 MIN_VALUE) == 0\\r\\n                        ? MAX_VALUE\\r\\n                        : MIN_VALUE;\\r\\n            }\\r\\n\\r\\n            remainder \\u003c\\u003c= 1;\\r\\n            --bitPos;\\r\\n        }\\r\\n\\r\\n        ++quotient;\\r\\n        int64 result = int64(quotient \\u003e\\u003e 1);\\r\\n        if (((xl ^ yl) \\u0026 MIN_VALUE) != 0) {\\r\\n            result = -result;\\r\\n        }\\r\\n\\r\\n        return int64(result);\\r\\n    }\\r\\n\\r\\n    function mul(int64 x, int64 y)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 xl = x;\\r\\n        int64 yl = y;\\r\\n\\r\\n        uint64 xlo = (uint64)((xl \\u0026 (int64)(0x00000000FFFFFFFF)));\\r\\n        int64 xhi = xl \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n        uint64 ylo = (uint64)(yl \\u0026 (int64)(0x00000000FFFFFFFF));\\r\\n        int64 yhi = yl \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n\\r\\n        uint64 lolo = xlo * ylo;\\r\\n        int64 lohi = int64(xlo) * yhi;\\r\\n        int64 hilo = xhi * int64(ylo);\\r\\n        int64 hihi = xhi * yhi;\\r\\n\\r\\n        uint64 loResult = lolo \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n        int64 midResult1 = lohi;\\r\\n        int64 midResult2 = hilo;\\r\\n        int64 hiResult = hihi \\u003c\\u003c 32; // FRACTIONAL_PLACES\\r\\n\\r\\n        int64 sum = int64(loResult) + midResult1 + midResult2 + hiResult;\\r\\n\\r\\n        return int64(sum);\\r\\n    }\\r\\n\\r\\n    function mul_256(int x, int y)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int)\\r\\n    {\\r\\n        int xl = x;\\r\\n        int yl = y;\\r\\n\\r\\n        uint xlo = uint((xl \\u0026 int(0x00000000FFFFFFFF)));\\r\\n        int xhi = xl \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n        uint ylo = uint(yl \\u0026 int(0x00000000FFFFFFFF));\\r\\n        int yhi = yl \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n\\r\\n        uint lolo = xlo * ylo;\\r\\n        int lohi = int(xlo) * yhi;\\r\\n        int hilo = xhi * int(ylo);\\r\\n        int hihi = xhi * yhi;\\r\\n\\r\\n        uint loResult = lolo \\u003e\\u003e 32; // FRACTIONAL_PLACES\\r\\n        int midResult1 = lohi;\\r\\n        int midResult2 = hilo;\\r\\n        int hiResult = hihi \\u003c\\u003c 32; // FRACTIONAL_PLACES\\r\\n\\r\\n        int sum = int(loResult) + midResult1 + midResult2 + hiResult;\\r\\n\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n    function floor(int x) internal pure returns (int64) {\\r\\n        return int64(x \\u0026 0xFFFFFFFF00000000);\\r\\n    }\\r\\n\\r\\n    function round(int x) internal pure returns (int) {\\r\\n        int fractionalPart = x \\u0026 0x00000000FFFFFFFF;\\r\\n        int integralPart = floor(x);\\r\\n        if (fractionalPart \\u003c 0x80000000) return integralPart;\\r\\n        if (fractionalPart \\u003e 0x80000000) return integralPart + ONE;\\r\\n        if ((integralPart \\u0026 ONE) == 0) return integralPart;\\r\\n        return integralPart + ONE;\\r\\n    }\\r\\n\\r\\n    function sub(int64 x, int64 y)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 xl = x;\\r\\n        int64 yl = y;\\r\\n        int64 diff = xl - yl;\\r\\n        if (((xl ^ yl) \\u0026 (xl ^ diff) \\u0026 MIN_VALUE) != 0) diff = xl \\u003c 0 ? MIN_VALUE : MAX_VALUE;\\r\\n        return diff;\\r\\n    }\\r\\n\\r\\n    function add(int64 x, int64 y)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 xl = x;\\r\\n        int64 yl = y;\\r\\n        int64 sum = xl + yl;\\r\\n        if ((~(xl ^ yl) \\u0026 (xl ^ sum) \\u0026 MIN_VALUE) != 0) sum = xl \\u003e 0 ? MAX_VALUE : MIN_VALUE;\\r\\n        return sum;\\r\\n    }\\r\\n\\r\\n    function sign(int64 x) internal pure returns (int8) {\\r\\n        return x == int8(0) ? int8(0) : x \\u003e int8(0) ? int8(1) : int8(-1);\\r\\n    }\\r\\n\\r\\n    function abs(int64 x) internal pure returns (int64) {\\r\\n        int64 mask = x \\u003e\\u003e 63;\\r\\n        return (x + mask) ^ mask;\\r\\n    }\\r\\n}\\r\\n\"},\"GeometryV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"TypesV1.sol\\\";\\r\\n\\r\\nlibrary GeometryV1 {\\r\\n        \\r\\n    struct Triangle2D {\\r\\n        TypesV1.Point2D v0;\\r\\n        TypesV1.Point2D v1;\\r\\n        TypesV1.Point2D v2;\\r\\n        uint32 strokeColor;\\r\\n        uint32 fillColor;\\r\\n        TypesV1.Chunk2D chunk;\\r\\n    }\\r\\n\\r\\n    struct Line2D {\\r\\n        TypesV1.Point2D v0;\\r\\n        TypesV1.Point2D v1;\\r\\n        uint32 color;\\r\\n        TypesV1.Chunk2D chunk;\\r\\n    }\\r\\n\\r\\n    struct Polygon2D {\\r\\n        TypesV1.Point2D[40960] vertices;\\r\\n        uint32 vertexCount;\\r\\n        uint32 strokeColor;\\r\\n        uint32 fillColor;\\r\\n        TypesV1.Chunk2D chunk;\\r\\n    }\\r\\n\\r\\n    function edge(\\r\\n        TypesV1.Point2D memory a,\\r\\n        TypesV1.Point2D memory b,\\r\\n        TypesV1.Point2D memory c\\r\\n    ) external pure returns (int256) {\\r\\n        return ((b.y - a.y) * (c.x - a.x)) - ((b.x - a.x) * (c.y - a.y));\\r\\n    }\\r\\n\\r\\n    function getBoundingBox(TypesV1.Point2D[] memory vertices)\\r\\n        external\\r\\n        pure\\r\\n        returns (TypesV1.Point2D memory tl, TypesV1.Point2D memory br)\\r\\n    {\\r\\n        int256 xMax = vertices[0].x;\\r\\n        int256 xMin = vertices[0].x;\\r\\n        int256 yMax = vertices[0].y;\\r\\n        int256 yMin = vertices[0].y;\\r\\n\\r\\n        for (uint256 i; i \\u003c vertices.length; i++) {\\r\\n            TypesV1.Point2D memory p = vertices[i];\\r\\n\\r\\n            if (p.x \\u003e xMax) xMax = p.x;\\r\\n            if (p.x \\u003c xMin) xMin = p.x;\\r\\n            if (p.y \\u003e yMax) yMax = p.y;\\r\\n            if (p.y \\u003c yMin) yMin = p.y;\\r\\n        }\\r\\n\\r\\n        return (TypesV1.Point2D(xMin, yMin), TypesV1.Point2D(xMax, yMax));\\r\\n    }\\r\\n}\"},\"GraphicsV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary GraphicsV1 {\\r\\n    \\r\\n    function setPixel(\\r\\n        uint32[16384 /* 128 * 128 */] memory result,\\r\\n        uint256 width,\\r\\n        int256 x,\\r\\n        int256 y,\\r\\n        uint32 color\\r\\n    ) internal pure {\\r\\n        uint256 p = uint256(int256(width) * y + x);\\r\\n        result[p] = blend(result[p], color);\\r\\n    }\\r\\n\\r\\n    function blend(uint32 bg, uint32 fg) internal pure returns (uint32) {\\r\\n        uint32 r1 = bg \\u003e\\u003e 16;\\r\\n        uint32 g1 = bg \\u003e\\u003e 8;\\r\\n        uint32 b1 = bg;\\r\\n        \\r\\n        uint32 a2 = fg \\u003e\\u003e 24;\\r\\n        uint32 r2 = fg \\u003e\\u003e 16;\\r\\n        uint32 g2 = fg \\u003e\\u003e 8;\\r\\n        uint32 b2 = fg;\\r\\n        \\r\\n        uint32 alpha = (a2 \\u0026 0xFF) + 1;\\r\\n        uint32 inverseAlpha = 257 - alpha;\\r\\n\\r\\n        uint32 r = (alpha * (r2 \\u0026 0xFF) + inverseAlpha * (r1 \\u0026 0xFF)) \\u003e\\u003e 8;\\r\\n        uint32 g = (alpha * (g2 \\u0026 0xFF) + inverseAlpha * (g1 \\u0026 0xFF)) \\u003e\\u003e 8;\\r\\n        uint32 b = (alpha * (b2 \\u0026 0xFF) + inverseAlpha * (b1 \\u0026 0xFF)) \\u003e\\u003e 8;\\r\\n\\r\\n        uint32 rgb = 0;\\r\\n        rgb |= uint32(0xFF) \\u003c\\u003c 24;\\r\\n        rgb |= r \\u003c\\u003c 16;\\r\\n        rgb |= g \\u003c\\u003c 8;\\r\\n        rgb |= b;\\r\\n\\r\\n        return rgb;\\r\\n    }\\r\\n\\r\\n    function setOpacity(uint32 color, uint32 opacity) internal pure returns (uint32) {\\r\\n\\r\\n        require(opacity \\u003e 0 \\u0026\\u0026 opacity \\u003c= 255, \\\"opacity must be between 0 and 255\\\");\\r\\n        \\r\\n        uint32 r = color \\u003e\\u003e 16 \\u0026 0xFF;\\r\\n        uint32 g = color \\u003e\\u003e 8 \\u0026 0xFF;\\r\\n        uint32 b = color \\u0026 0xFF;\\r\\n\\r\\n        uint32 rgb = 0;\\r\\n        rgb |= opacity \\u003c\\u003c 24;\\r\\n        rgb |= r \\u003c\\u003c 16;\\r\\n        rgb |= g \\u003c\\u003c 8;\\r\\n        rgb |= b;\\r\\n\\r\\n        return uint32(rgb);     \\r\\n    }\\r\\n}\"},\"KintsugiDraw.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"KintsugiLayer.sol\\\";\\r\\nimport \\\"ParticleSetV1.sol\\\";\\r\\nimport \\\"GraphicsV1.sol\\\";\\r\\nimport \\\"ProcessingV1.sol\\\";\\r\\nimport \\\"GeometryV1.sol\\\";\\r\\n\\r\\nlibrary KintsugiDraw {\\r\\n\\r\\n    struct Draw {\\r\\n        uint32[16384] result;\\r\\n        KintsugiLayer.KintsugiParameters p;\\r\\n        int64[4096] noiseTable;\\r\\n        TypesV1.Chunk2D chunk;\\r\\n    }\\r\\n\\r\\n    uint16 internal constant NOISE_TABLE_SIZE = 4095;\\r\\n    uint16 internal constant PARTICLE_COUNT = 5000;\\r\\n    uint16 internal constant FRAME_COUNT = 400;\\r\\n    \\r\\n    function draw(Draw memory f) external pure returns(uint32[16384] memory buffer) {\\r\\n        f.p.iteration = 0;\\r\\n        f.p.frame = 0;\\r\\n\\r\\n        while (f.p.frame \\u003c FRAME_COUNT) {\\r\\n            f.p.frame++;\\r\\n\\r\\n            if (f.p.iteration \\u003e= f.p.layers) {\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            bool dead = true;\\r\\n            {\\r\\n                for (uint256 i = 0; i \\u003c f.p.layers; i++) {\\r\\n                    ParticleSetV1.ParticleSet2D memory particleSet = f.p.particleSets[i];\\r\\n                    update(\\r\\n                        f.noiseTable,\\r\\n                        particleSet,\\r\\n                        PARTICLE_COUNT,\\r\\n                        f.chunk.width,\\r\\n                        f.chunk.height\\r\\n                    );\\r\\n                    if (!particleSet.dead) {\\r\\n                        dead = false;\\r\\n                    }\\r\\n                    draw(particleSet, PARTICLE_COUNT, f.result, f.chunk);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (dead) {\\r\\n                f.p.iteration++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return f.result;\\r\\n    }\\r\\n\\r\\n    function update(\\r\\n        int64[NOISE_TABLE_SIZE + 1] memory noiseTable,\\r\\n        ParticleSetV1.ParticleSet2D memory set,\\r\\n        uint16 particleCount,\\r\\n        uint256 width,\\r\\n        uint256 height\\r\\n    ) internal pure {\\r\\n        set.dead = true;\\r\\n        for (uint16 i = 0; i \\u003c particleCount; i++) {\\r\\n            ParticleV1.Particle2D memory p = set.particles[i];\\r\\n            if (p.dead) {\\r\\n                continue;\\r\\n            }\\r\\n            set.dead = false;\\r\\n            ParticleV1.update(noiseTable, p, width, height);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function draw(\\r\\n        ParticleSetV1.ParticleSet2D memory set,\\r\\n        uint16 particleCount,\\r\\n        uint32[16384] memory result,\\r\\n        TypesV1.Chunk2D memory chunk\\r\\n    ) internal pure {\\r\\n        if (set.dead) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        for (uint256 i = 0; i \\u003c particleCount; i++) {\\r\\n            ParticleV1.Particle2D memory p = set.particles[i];\\r\\n            if (p.dead) {\\r\\n                continue;\\r\\n            }\\r\\n            step(p, result, chunk);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function step(\\r\\n        ParticleV1.Particle2D memory p,\\r\\n        uint32[16384] memory result,\\r\\n        TypesV1.Chunk2D memory chunk\\r\\n    ) internal pure {\\r\\n        if (p.frames \\u003c 40) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        uint32 dark = GraphicsV1.setOpacity(0xFFF4BB29, 10);\\r\\n\\r\\n        TypesV1.Point2D memory v0 = TypesV1.Point2D(int32(p.x), int32(p.y));\\r\\n        TypesV1.Point2D memory v1 = TypesV1.Point2D(int32(p.px), int32(p.py));\\r\\n\\r\\n        ProcessingV1.line(\\r\\n            result,\\r\\n            GeometryV1.Line2D(\\r\\n                TypesV1.Point2D(v0.x, v0.y - 2),\\r\\n                TypesV1.Point2D(v1.x, v1.y - 2),\\r\\n                dark,\\r\\n                chunk\\r\\n            )\\r\\n        );\\r\\n        ProcessingV1.line(\\r\\n            result,\\r\\n            GeometryV1.Line2D(\\r\\n                TypesV1.Point2D(v0.x, v0.y + 2),\\r\\n                TypesV1.Point2D(v1.x, v1.y + 2),\\r\\n                dark,\\r\\n                chunk\\r\\n            )\\r\\n        );\\r\\n\\r\\n        uint32 bright = GraphicsV1.setOpacity(0xFFD5B983, 10);\\r\\n\\r\\n        ProcessingV1.line(\\r\\n            result,\\r\\n            GeometryV1.Line2D(\\r\\n                TypesV1.Point2D(v0.x, v0.y - 1),\\r\\n                TypesV1.Point2D(v1.x, v1.y - 1),\\r\\n                bright,\\r\\n                chunk\\r\\n            )\\r\\n        );\\r\\n        ProcessingV1.line(\\r\\n            result,\\r\\n            GeometryV1.Line2D(\\r\\n                TypesV1.Point2D(v0.x, v0.y),\\r\\n                TypesV1.Point2D(v1.x, v1.y),\\r\\n                bright,\\r\\n                chunk\\r\\n            )\\r\\n        );\\r\\n        ProcessingV1.line(\\r\\n            result,\\r\\n            GeometryV1.Line2D(\\r\\n                TypesV1.Point2D(v0.x, v0.y + 1),\\r\\n                TypesV1.Point2D(v1.x, v1.y + 1),\\r\\n                bright,\\r\\n                chunk\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n}\"},\"KintsugiLayer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"ParticleSetV1.sol\\\";\\r\\nimport \\\"ParticleSetFactoryV1.sol\\\";\\r\\nimport \\\"RandomV1.sol\\\";\\r\\nimport \\\"LCG64.sol\\\";\\r\\n\\r\\nlibrary KintsugiLayer {\\r\\n\\r\\n    uint16 public constant PARTICLE_COUNT = 5000;\\r\\n    uint8 public constant PARTICLE_RANGE = 65;\\r\\n    uint8 public constant PARTICLE_LIFETIME = 100;\\r\\n    int64 public constant PARTICLE_FORCE_SCALE = 15 * 4294967296; /* 15 * Fix64V1.ONE */\\r\\n    int64 public constant PARTICLE_NOISE_SCALE = 42949673; /* 0.01 */\\r\\n\\r\\n    struct KintsugiParameters {\\r\\n        uint8 layers;        \\r\\n        uint256 frame;\\r\\n        uint256 iteration;\\r\\n        ParticleSetV1.ParticleSet2D[4] particleSets;\\r\\n    }\\r\\n\\r\\n    function getParameters(RandomV1.PRNG memory prng, int32 seed) \\r\\n    external pure returns (KintsugiParameters memory kintsugi, RandomV1.PRNG memory) {\\r\\n        kintsugi.layers = uint8(uint32(RandomV1.next(prng, 1, 5)));\\r\\n\\r\\n        for (uint256 i = 0; i \\u003c kintsugi.layers; i++) {\\r\\n            (ParticleSetV1.ParticleSet2D memory particleSet, RandomV1.PRNG memory p) = ParticleSetFactoryV1.createSet(\\r\\n                ParticleSetFactoryV1.CreateParticleSet2D(\\r\\n                    seed,\\r\\n                    PARTICLE_RANGE,\\r\\n                    1024,\\r\\n                    1024,\\r\\n                    PARTICLE_COUNT,                    \\r\\n                    PARTICLE_FORCE_SCALE,\\r\\n                    PARTICLE_NOISE_SCALE,\\r\\n                    PARTICLE_LIFETIME                                        \\r\\n                ),\\r\\n                prng\\r\\n            );\\r\\n            prng = p;                \\r\\n            kintsugi.particleSets[i] = particleSet;            \\r\\n        }\\r\\n\\r\\n        return (kintsugi, prng);\\r\\n    }\\r\\n}\"},\"LCG64.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"Fix64V1.sol\\\";\\r\\nimport \\\"Trig256.sol\\\";\\r\\n\\r\\n/*\\r\\n    An implementation of a Linear Congruential Generator in Q31.Q32 format.\\r\\n    Adapted from the algorithm used by p5js, which is licensed under the LGPL v2.1.\\r\\n\\r\\n    See: https://github.com/processing/p5.js/blob/374acfb44588bfd565c54d61264df197d798d121/src/math/noise.js\\r\\n         https://github.com/processing/p5.js/blob/main/license.txt\\r\\n         \\r\\n    This adaptation was necessary to ensure generative art in p5js produces identical results for noise values in Solidity.\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n                        GNU LESSER GENERAL PUBLIC LICENSE\\r\\n                       Version 2.1, February 1999\\r\\n\\r\\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\\r\\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\\r\\n Everyone is permitted to copy and distribute verbatim copies\\r\\n of this license document, but changing it is not allowed.\\r\\n\\r\\n(This is the first released version of the Lesser GPL.  It also counts\\r\\n as the successor of the GNU Library Public License, version 2, hence\\r\\n the version number 2.1.)\\r\\n\\r\\n                            Preamble\\r\\n\\r\\n  The licenses for most software are designed to take away your\\r\\nfreedom to share and change it.  By contrast, the GNU General Public\\r\\nLicenses are intended to guarantee your freedom to share and change\\r\\nfree software--to make sure the software is free for all its users.\\r\\n\\r\\n  This license, the Lesser General Public License, applies to some\\r\\nspecially designated software packages--typically libraries--of the\\r\\nFree Software Foundation and other authors who decide to use it.  You\\r\\ncan use it too, but we suggest you first think carefully about whether\\r\\nthis license or the ordinary General Public License is the better\\r\\nstrategy to use in any particular case, based on the explanations below.\\r\\n\\r\\n  When we speak of free software, we are referring to freedom of use,\\r\\nnot price.  Our General Public Licenses are designed to make sure that\\r\\nyou have the freedom to distribute copies of free software (and charge\\r\\nfor this service if you wish); that you receive source code or can get\\r\\nit if you want it; that you can change the software and use pieces of\\r\\nit in new free programs; and that you are informed that you can do\\r\\nthese things.\\r\\n\\r\\n  To protect your rights, we need to make restrictions that forbid\\r\\ndistributors to deny you these rights or to ask you to surrender these\\r\\nrights.  These restrictions translate to certain responsibilities for\\r\\nyou if you distribute copies of the library or if you modify it.\\r\\n\\r\\n  For example, if you distribute copies of the library, whether gratis\\r\\nor for a fee, you must give the recipients all the rights that we gave\\r\\nyou.  You must make sure that they, too, receive or can get the source\\r\\ncode.  If you link other code with the library, you must provide\\r\\ncomplete object files to the recipients, so that they can relink them\\r\\nwith the library after making changes to the library and recompiling\\r\\nit.  And you must show them these terms so they know their rights.\\r\\n\\r\\n  We protect your rights with a two-step method: (1) we copyright the\\r\\nlibrary, and (2) we offer you this license, which gives you legal\\r\\npermission to copy, distribute and/or modify the library.\\r\\n\\r\\n  To protect each distributor, we want to make it very clear that\\r\\nthere is no warranty for the free library.  Also, if the library is\\r\\nmodified by someone else and passed on, the recipients should know\\r\\nthat what they have is not the original version, so that the original\\r\\nauthor\\u0027s reputation will not be affected by problems that might be\\r\\nintroduced by others.\\r\\n\\r\\n  Finally, software patents pose a constant threat to the existence of\\r\\nany free program.  We wish to make sure that a company cannot\\r\\neffectively restrict the users of a free program by obtaining a\\r\\nrestrictive license from a patent holder.  Therefore, we insist that\\r\\nany patent license obtained for a version of the library must be\\r\\nconsistent with the full freedom of use specified in this license.\\r\\n\\r\\n  Most GNU software, including some libraries, is covered by the\\r\\nordinary GNU General Public License.  This license, the GNU Lesser\\r\\nGeneral Public License, applies to certain designated libraries, and\\r\\nis quite different from the ordinary General Public License.  We use\\r\\nthis license for certain libraries in order to permit linking those\\r\\nlibraries into non-free programs.\\r\\n\\r\\n  When a program is linked with a library, whether statically or using\\r\\na shared library, the combination of the two is legally speaking a\\r\\ncombined work, a derivative of the original library.  The ordinary\\r\\nGeneral Public License therefore permits such linking only if the\\r\\nentire combination fits its criteria of freedom.  The Lesser General\\r\\nPublic License permits more lax criteria for linking other code with\\r\\nthe library.\\r\\n\\r\\n  We call this license the \\\"Lesser\\\" General Public License because it\\r\\ndoes Less to protect the user\\u0027s freedom than the ordinary General\\r\\nPublic License.  It also provides other free software developers Less\\r\\nof an advantage over competing non-free programs.  These disadvantages\\r\\nare the reason we use the ordinary General Public License for many\\r\\nlibraries.  However, the Lesser license provides advantages in certain\\r\\nspecial circumstances.\\r\\n\\r\\n  For example, on rare occasions, there may be a special need to\\r\\nencourage the widest possible use of a certain library, so that it becomes\\r\\na de-facto standard.  To achieve this, non-free programs must be\\r\\nallowed to use the library.  A more frequent case is that a free\\r\\nlibrary does the same job as widely used non-free libraries.  In this\\r\\ncase, there is little to gain by limiting the free library to free\\r\\nsoftware only, so we use the Lesser General Public License.\\r\\n\\r\\n  In other cases, permission to use a particular library in non-free\\r\\nprograms enables a greater number of people to use a large body of\\r\\nfree software.  For example, permission to use the GNU C Library in\\r\\nnon-free programs enables many more people to use the whole GNU\\r\\noperating system, as well as its variant, the GNU/Linux operating\\r\\nsystem.\\r\\n\\r\\n  Although the Lesser General Public License is Less protective of the\\r\\nusers\\u0027 freedom, it does ensure that the user of a program that is\\r\\nlinked with the Library has the freedom and the wherewithal to run\\r\\nthat program using a modified version of the Library.\\r\\n\\r\\n  The precise terms and conditions for copying, distribution and\\r\\nmodification follow.  Pay close attention to the difference between a\\r\\n\\\"work based on the library\\\" and a \\\"work that uses the library\\\".  The\\r\\nformer contains code derived from the library, whereas the latter must\\r\\nbe combined with the library in order to run.\\r\\n\\r\\n                  GNU LESSER GENERAL PUBLIC LICENSE\\r\\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\r\\n\\r\\n  0. This License Agreement applies to any software library or other\\r\\nprogram which contains a notice placed by the copyright holder or\\r\\nother authorized party saying it may be distributed under the terms of\\r\\nthis Lesser General Public License (also called \\\"this License\\\").\\r\\nEach licensee is addressed as \\\"you\\\".\\r\\n\\r\\n  A \\\"library\\\" means a collection of software functions and/or data\\r\\nprepared so as to be conveniently linked with application programs\\r\\n(which use some of those functions and data) to form executables.\\r\\n\\r\\n  The \\\"Library\\\", below, refers to any such software library or work\\r\\nwhich has been distributed under these terms.  A \\\"work based on the\\r\\nLibrary\\\" means either the Library or any derivative work under\\r\\ncopyright law: that is to say, a work containing the Library or a\\r\\nportion of it, either verbatim or with modifications and/or translated\\r\\nstraightforwardly into another language.  (Hereinafter, translation is\\r\\nincluded without limitation in the term \\\"modification\\\".)\\r\\n\\r\\n  \\\"Source code\\\" for a work means the preferred form of the work for\\r\\nmaking modifications to it.  For a library, complete source code means\\r\\nall the source code for all modules it contains, plus any associated\\r\\ninterface definition files, plus the scripts used to control compilation\\r\\nand installation of the library.\\r\\n\\r\\n  Activities other than copying, distribution and modification are not\\r\\ncovered by this License; they are outside its scope.  The act of\\r\\nrunning a program using the Library is not restricted, and output from\\r\\nsuch a program is covered only if its contents constitute a work based\\r\\non the Library (independent of the use of the Library in a tool for\\r\\nwriting it).  Whether that is true depends on what the Library does\\r\\nand what the program that uses the Library does.\\r\\n\\r\\n  1. You may copy and distribute verbatim copies of the Library\\u0027s\\r\\ncomplete source code as you receive it, in any medium, provided that\\r\\nyou conspicuously and appropriately publish on each copy an\\r\\nappropriate copyright notice and disclaimer of warranty; keep intact\\r\\nall the notices that refer to this License and to the absence of any\\r\\nwarranty; and distribute a copy of this License along with the\\r\\nLibrary.\\r\\n\\r\\n  You may charge a fee for the physical act of transferring a copy,\\r\\nand you may at your option offer warranty protection in exchange for a\\r\\nfee.\\r\\n\\r\\n  2. You may modify your copy or copies of the Library or any portion\\r\\nof it, thus forming a work based on the Library, and copy and\\r\\ndistribute such modifications or work under the terms of Section 1\\r\\nabove, provided that you also meet all of these conditions:\\r\\n\\r\\n    a) The modified work must itself be a software library.\\r\\n\\r\\n    b) You must cause the files modified to carry prominent notices\\r\\n    stating that you changed the files and the date of any change.\\r\\n\\r\\n    c) You must cause the whole of the work to be licensed at no\\r\\n    charge to all third parties under the terms of this License.\\r\\n\\r\\n    d) If a facility in the modified Library refers to a function or a\\r\\n    table of data to be supplied by an application program that uses\\r\\n    the facility, other than as an argument passed when the facility\\r\\n    is invoked, then you must make a good faith effort to ensure that,\\r\\n    in the event an application does not supply such function or\\r\\n    table, the facility still operates, and performs whatever part of\\r\\n    its purpose remains meaningful.\\r\\n\\r\\n    (For example, a function in a library to compute square roots has\\r\\n    a purpose that is entirely well-defined independent of the\\r\\n    application.  Therefore, Subsection 2d requires that any\\r\\n    application-supplied function or table used by this function must\\r\\n    be optional: if the application does not supply it, the square\\r\\n    root function must still compute square roots.)\\r\\n\\r\\nThese requirements apply to the modified work as a whole.  If\\r\\nidentifiable sections of that work are not derived from the Library,\\r\\nand can be reasonably considered independent and separate works in\\r\\nthemselves, then this License, and its terms, do not apply to those\\r\\nsections when you distribute them as separate works.  But when you\\r\\ndistribute the same sections as part of a whole which is a work based\\r\\non the Library, the distribution of the whole must be on the terms of\\r\\nthis License, whose permissions for other licensees extend to the\\r\\nentire whole, and thus to each and every part regardless of who wrote\\r\\nit.\\r\\n\\r\\nThus, it is not the intent of this section to claim rights or contest\\r\\nyour rights to work written entirely by you; rather, the intent is to\\r\\nexercise the right to control the distribution of derivative or\\r\\ncollective works based on the Library.\\r\\n\\r\\nIn addition, mere aggregation of another work not based on the Library\\r\\nwith the Library (or with a work based on the Library) on a volume of\\r\\na storage or distribution medium does not bring the other work under\\r\\nthe scope of this License.\\r\\n\\r\\n  3. You may opt to apply the terms of the ordinary GNU General Public\\r\\nLicense instead of this License to a given copy of the Library.  To do\\r\\nthis, you must alter all the notices that refer to this License, so\\r\\nthat they refer to the ordinary GNU General Public License, version 2,\\r\\ninstead of to this License.  (If a newer version than version 2 of the\\r\\nordinary GNU General Public License has appeared, then you can specify\\r\\nthat version instead if you wish.)  Do not make any other change in\\r\\nthese notices.\\r\\n\\r\\n  Once this change is made in a given copy, it is irreversible for\\r\\nthat copy, so the ordinary GNU General Public License applies to all\\r\\nsubsequent copies and derivative works made from that copy.\\r\\n\\r\\n  This option is useful when you wish to copy part of the code of\\r\\nthe Library into a program that is not a library.\\r\\n\\r\\n  4. You may copy and distribute the Library (or a portion or\\r\\nderivative of it, under Section 2) in object code or executable form\\r\\nunder the terms of Sections 1 and 2 above provided that you accompany\\r\\nit with the complete corresponding machine-readable source code, which\\r\\nmust be distributed under the terms of Sections 1 and 2 above on a\\r\\nmedium customarily used for software interchange.\\r\\n\\r\\n  If distribution of object code is made by offering access to copy\\r\\nfrom a designated place, then offering equivalent access to copy the\\r\\nsource code from the same place satisfies the requirement to\\r\\ndistribute the source code, even though third parties are not\\r\\ncompelled to copy the source along with the object code.\\r\\n\\r\\n  5. A program that contains no derivative of any portion of the\\r\\nLibrary, but is designed to work with the Library by being compiled or\\r\\nlinked with it, is called a \\\"work that uses the Library\\\".  Such a\\r\\nwork, in isolation, is not a derivative work of the Library, and\\r\\ntherefore falls outside the scope of this License.\\r\\n\\r\\n  However, linking a \\\"work that uses the Library\\\" with the Library\\r\\ncreates an executable that is a derivative of the Library (because it\\r\\ncontains portions of the Library), rather than a \\\"work that uses the\\r\\nlibrary\\\".  The executable is therefore covered by this License.\\r\\nSection 6 states terms for distribution of such executables.\\r\\n\\r\\n  When a \\\"work that uses the Library\\\" uses material from a header file\\r\\nthat is part of the Library, the object code for the work may be a\\r\\nderivative work of the Library even though the source code is not.\\r\\nWhether this is true is especially significant if the work can be\\r\\nlinked without the Library, or if the work is itself a library.  The\\r\\nthreshold for this to be true is not precisely defined by law.\\r\\n\\r\\n  If such an object file uses only numerical parameters, data\\r\\nstructure layouts and accessors, and small macros and small inline\\r\\nfunctions (ten lines or less in length), then the use of the object\\r\\nfile is unrestricted, regardless of whether it is legally a derivative\\r\\nwork.  (Executables containing this object code plus portions of the\\r\\nLibrary will still fall under Section 6.)\\r\\n\\r\\n  Otherwise, if the work is a derivative of the Library, you may\\r\\ndistribute the object code for the work under the terms of Section 6.\\r\\nAny executables containing that work also fall under Section 6,\\r\\nwhether or not they are linked directly with the Library itself.\\r\\n\\r\\n  6. As an exception to the Sections above, you may also combine or\\r\\nlink a \\\"work that uses the Library\\\" with the Library to produce a\\r\\nwork containing portions of the Library, and distribute that work\\r\\nunder terms of your choice, provided that the terms permit\\r\\nmodification of the work for the customer\\u0027s own use and reverse\\r\\nengineering for debugging such modifications.\\r\\n\\r\\n  You must give prominent notice with each copy of the work that the\\r\\nLibrary is used in it and that the Library and its use are covered by\\r\\nthis License.  You must supply a copy of this License.  If the work\\r\\nduring execution displays copyright notices, you must include the\\r\\ncopyright notice for the Library among them, as well as a reference\\r\\ndirecting the user to the copy of this License.  Also, you must do one\\r\\nof these things:\\r\\n\\r\\n    a) Accompany the work with the complete corresponding\\r\\n    machine-readable source code for the Library including whatever\\r\\n    changes were used in the work (which must be distributed under\\r\\n    Sections 1 and 2 above); and, if the work is an executable linked\\r\\n    with the Library, with the complete machine-readable \\\"work that\\r\\n    uses the Library\\\", as object code and/or source code, so that the\\r\\n    user can modify the Library and then relink to produce a modified\\r\\n    executable containing the modified Library.  (It is understood\\r\\n    that the user who changes the contents of definitions files in the\\r\\n    Library will not necessarily be able to recompile the application\\r\\n    to use the modified definitions.)\\r\\n\\r\\n    b) Use a suitable shared library mechanism for linking with the\\r\\n    Library.  A suitable mechanism is one that (1) uses at run time a\\r\\n    copy of the library already present on the user\\u0027s computer system,\\r\\n    rather than copying library functions into the executable, and (2)\\r\\n    will operate properly with a modified version of the library, if\\r\\n    the user installs one, as long as the modified version is\\r\\n    interface-compatible with the version that the work was made with.\\r\\n\\r\\n    c) Accompany the work with a written offer, valid for at\\r\\n    least three years, to give the same user the materials\\r\\n    specified in Subsection 6a, above, for a charge no more\\r\\n    than the cost of performing this distribution.\\r\\n\\r\\n    d) If distribution of the work is made by offering access to copy\\r\\n    from a designated place, offer equivalent access to copy the above\\r\\n    specified materials from the same place.\\r\\n\\r\\n    e) Verify that the user has already received a copy of these\\r\\n    materials or that you have already sent this user a copy.\\r\\n\\r\\n  For an executable, the required form of the \\\"work that uses the\\r\\nLibrary\\\" must include any data and utility programs needed for\\r\\nreproducing the executable from it.  However, as a special exception,\\r\\nthe materials to be distributed need not include anything that is\\r\\nnormally distributed (in either source or binary form) with the major\\r\\ncomponents (compiler, kernel, and so on) of the operating system on\\r\\nwhich the executable runs, unless that component itself accompanies\\r\\nthe executable.\\r\\n\\r\\n  It may happen that this requirement contradicts the license\\r\\nrestrictions of other proprietary libraries that do not normally\\r\\naccompany the operating system.  Such a contradiction means you cannot\\r\\nuse both them and the Library together in an executable that you\\r\\ndistribute.\\r\\n\\r\\n  7. You may place library facilities that are a work based on the\\r\\nLibrary side-by-side in a single library together with other library\\r\\nfacilities not covered by this License, and distribute such a combined\\r\\nlibrary, provided that the separate distribution of the work based on\\r\\nthe Library and of the other library facilities is otherwise\\r\\npermitted, and provided that you do these two things:\\r\\n\\r\\n    a) Accompany the combined library with a copy of the same work\\r\\n    based on the Library, uncombined with any other library\\r\\n    facilities.  This must be distributed under the terms of the\\r\\n    Sections above.\\r\\n\\r\\n    b) Give prominent notice with the combined library of the fact\\r\\n    that part of it is a work based on the Library, and explaining\\r\\n    where to find the accompanying uncombined form of the same work.\\r\\n\\r\\n  8. You may not copy, modify, sublicense, link with, or distribute\\r\\nthe Library except as expressly provided under this License.  Any\\r\\nattempt otherwise to copy, modify, sublicense, link with, or\\r\\ndistribute the Library is void, and will automatically terminate your\\r\\nrights under this License.  However, parties who have received copies,\\r\\nor rights, from you under this License will not have their licenses\\r\\nterminated so long as such parties remain in full compliance.\\r\\n\\r\\n  9. You are not required to accept this License, since you have not\\r\\nsigned it.  However, nothing else grants you permission to modify or\\r\\ndistribute the Library or its derivative works.  These actions are\\r\\nprohibited by law if you do not accept this License.  Therefore, by\\r\\nmodifying or distributing the Library (or any work based on the\\r\\nLibrary), you indicate your acceptance of this License to do so, and\\r\\nall its terms and conditions for copying, distributing or modifying\\r\\nthe Library or works based on it.\\r\\n\\r\\n  10. Each time you redistribute the Library (or any work based on the\\r\\nLibrary), the recipient automatically receives a license from the\\r\\noriginal licensor to copy, distribute, link with or modify the Library\\r\\nsubject to these terms and conditions.  You may not impose any further\\r\\nrestrictions on the recipients\\u0027 exercise of the rights granted herein.\\r\\nYou are not responsible for enforcing compliance by third parties with\\r\\nthis License.\\r\\n\\r\\n  11. If, as a consequence of a court judgment or allegation of patent\\r\\ninfringement or for any other reason (not limited to patent issues),\\r\\nconditions are imposed on you (whether by court order, agreement or\\r\\notherwise) that contradict the conditions of this License, they do not\\r\\nexcuse you from the conditions of this License.  If you cannot\\r\\ndistribute so as to satisfy simultaneously your obligations under this\\r\\nLicense and any other pertinent obligations, then as a consequence you\\r\\nmay not distribute the Library at all.  For example, if a patent\\r\\nlicense would not permit royalty-free redistribution of the Library by\\r\\nall those who receive copies directly or indirectly through you, then\\r\\nthe only way you could satisfy both it and this License would be to\\r\\nrefrain entirely from distribution of the Library.\\r\\n\\r\\nIf any portion of this section is held invalid or unenforceable under any\\r\\nparticular circumstance, the balance of the section is intended to apply,\\r\\nand the section as a whole is intended to apply in other circumstances.\\r\\n\\r\\nIt is not the purpose of this section to induce you to infringe any\\r\\npatents or other property right claims or to contest validity of any\\r\\nsuch claims; this section has the sole purpose of protecting the\\r\\nintegrity of the free software distribution system which is\\r\\nimplemented by public license practices.  Many people have made\\r\\ngenerous contributions to the wide range of software distributed\\r\\nthrough that system in reliance on consistent application of that\\r\\nsystem; it is up to the author/donor to decide if he or she is willing\\r\\nto distribute software through any other system and a licensee cannot\\r\\nimpose that choice.\\r\\n\\r\\nThis section is intended to make thoroughly clear what is believed to\\r\\nbe a consequence of the rest of this License.\\r\\n\\r\\n  12. If the distribution and/or use of the Library is restricted in\\r\\ncertain countries either by patents or by copyrighted interfaces, the\\r\\noriginal copyright holder who places the Library under this License may add\\r\\nan explicit geographical distribution limitation excluding those countries,\\r\\nso that distribution is permitted only in or among countries not thus\\r\\nexcluded.  In such case, this License incorporates the limitation as if\\r\\nwritten in the body of this License.\\r\\n\\r\\n  13. The Free Software Foundation may publish revised and/or new\\r\\nversions of the Lesser General Public License from time to time.\\r\\nSuch new versions will be similar in spirit to the present version,\\r\\nbut may differ in detail to address new problems or concerns.\\r\\n\\r\\nEach version is given a distinguishing version number.  If the Library\\r\\nspecifies a version number of this License which applies to it and\\r\\n\\\"any later version\\\", you have the option of following the terms and\\r\\nconditions either of that version or of any later version published by\\r\\nthe Free Software Foundation.  If the Library does not specify a\\r\\nlicense version number, you may choose any version ever published by\\r\\nthe Free Software Foundation.\\r\\n\\r\\n  14. If you wish to incorporate parts of the Library into other free\\r\\nprograms whose distribution conditions are incompatible with these,\\r\\nwrite to the author to ask for permission.  For software which is\\r\\ncopyrighted by the Free Software Foundation, write to the Free\\r\\nSoftware Foundation; we sometimes make exceptions for this.  Our\\r\\ndecision will be guided by the two goals of preserving the free status\\r\\nof all derivatives of our free software and of promoting the sharing\\r\\nand reuse of software generally.\\r\\n\\r\\n                            NO WARRANTY\\r\\n\\r\\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\\r\\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\\r\\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\\r\\nOTHER PARTIES PROVIDE THE LIBRARY \\\"AS IS\\\" WITHOUT WARRANTY OF ANY\\r\\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\\r\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\r\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\\r\\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\\r\\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\r\\n\\r\\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\\r\\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\\r\\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\\r\\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\\r\\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\\r\\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\\r\\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\\r\\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\\r\\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\\r\\nDAMAGES.\\r\\n\\r\\n                     END OF TERMS AND CONDITIONS\\r\\n*/\\r\\n\\r\\nlibrary LCG64 {\\r\\n    uint64 internal constant M = 4294967296;\\r\\n    uint32 internal constant A = 1664525;\\r\\n    uint32 internal constant C = 1013904223;\\r\\n\\r\\n    function next(uint64 z) internal pure returns(uint64, int64) {                \\r\\n                \\r\\n        uint256 r = uint(A) * uint(z) + uint(C);            \\r\\n        uint64 g = uint64(r % M);           \\r\\n        \\r\\n        int lz = Trig256.log_256(int64(g) * int(Fix64V1.ONE));\\r\\n        int lm = Trig256.log_256(int64(M) * int(Fix64V1.ONE));\\r\\n        int64 lml = Fix64V1.sub(int64(lz), int64(lm));\\r\\n        int64 v = Trig256.exp(lml);\\r\\n\\r\\n        return (g, v);\\r\\n    }\\r\\n}\"},\"MathV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary MathV1 {\\r\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\r\\n        return a \\u003e= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\r\\n        return a \\u003c b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max3(\\r\\n        int256 a,\\r\\n        int256 b,\\r\\n        int256 c\\r\\n    ) internal pure returns (int256) {\\r\\n        int256 d = b \\u003e= c ? b : c;\\r\\n        return a \\u003e= d ? a : d;\\r\\n    }\\r\\n\\r\\n    function min3(\\r\\n        int256 a,\\r\\n        int256 b,\\r\\n        int256 c\\r\\n    ) internal pure returns (int256) {\\r\\n        int256 d = b \\u003c c ? b : c;\\r\\n        return a \\u003c d ? a : d;\\r\\n    }\\r\\n\\r\\n    function abs(int256 x) internal pure returns (int256) {\\r\\n        return x \\u003e= 0 ? x : -x;\\r\\n    }\\r\\n\\r\\n    function sign(int256 x) internal pure returns (int8) {\\r\\n        return x == 0 ? int8(0) : x \\u003e 0 ? int8(1) : int8(-1);\\r\\n    }\\r\\n}\"},\"NoiseV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"Fix64V1.sol\\\";\\r\\nimport \\\"Trig256.sol\\\";\\r\\nimport \\\"LCG64.sol\\\";\\r\\n\\r\\n/*\\r\\n    An implementation of fixed-point noise in Q31.Q32 format.\\r\\n    Adapted from the algorithm used by p5js, which is licensed under the LGPL v2.1.\\r\\n\\r\\n    See: https://github.com/processing/p5.js/blob/374acfb44588bfd565c54d61264df197d798d121/src/math/noise.js\\r\\n         https://github.com/processing/p5.js/blob/main/license.txt\\r\\n\\r\\n    This adaptation was necessary to ensure generative art in p5js produces identical results for noise values in Solidity.\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n                    GNU LESSER GENERAL PUBLIC LICENSE\\r\\n                       Version 2.1, February 1999\\r\\n\\r\\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\\r\\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\\r\\n Everyone is permitted to copy and distribute verbatim copies\\r\\n of this license document, but changing it is not allowed.\\r\\n\\r\\n(This is the first released version of the Lesser GPL.  It also counts\\r\\n as the successor of the GNU Library Public License, version 2, hence\\r\\n the version number 2.1.)\\r\\n\\r\\n                            Preamble\\r\\n\\r\\n  The licenses for most software are designed to take away your\\r\\nfreedom to share and change it.  By contrast, the GNU General Public\\r\\nLicenses are intended to guarantee your freedom to share and change\\r\\nfree software--to make sure the software is free for all its users.\\r\\n\\r\\n  This license, the Lesser General Public License, applies to some\\r\\nspecially designated software packages--typically libraries--of the\\r\\nFree Software Foundation and other authors who decide to use it.  You\\r\\ncan use it too, but we suggest you first think carefully about whether\\r\\nthis license or the ordinary General Public License is the better\\r\\nstrategy to use in any particular case, based on the explanations below.\\r\\n\\r\\n  When we speak of free software, we are referring to freedom of use,\\r\\nnot price.  Our General Public Licenses are designed to make sure that\\r\\nyou have the freedom to distribute copies of free software (and charge\\r\\nfor this service if you wish); that you receive source code or can get\\r\\nit if you want it; that you can change the software and use pieces of\\r\\nit in new free programs; and that you are informed that you can do\\r\\nthese things.\\r\\n\\r\\n  To protect your rights, we need to make restrictions that forbid\\r\\ndistributors to deny you these rights or to ask you to surrender these\\r\\nrights.  These restrictions translate to certain responsibilities for\\r\\nyou if you distribute copies of the library or if you modify it.\\r\\n\\r\\n  For example, if you distribute copies of the library, whether gratis\\r\\nor for a fee, you must give the recipients all the rights that we gave\\r\\nyou.  You must make sure that they, too, receive or can get the source\\r\\ncode.  If you link other code with the library, you must provide\\r\\ncomplete object files to the recipients, so that they can relink them\\r\\nwith the library after making changes to the library and recompiling\\r\\nit.  And you must show them these terms so they know their rights.\\r\\n\\r\\n  We protect your rights with a two-step method: (1) we copyright the\\r\\nlibrary, and (2) we offer you this license, which gives you legal\\r\\npermission to copy, distribute and/or modify the library.\\r\\n\\r\\n  To protect each distributor, we want to make it very clear that\\r\\nthere is no warranty for the free library.  Also, if the library is\\r\\nmodified by someone else and passed on, the recipients should know\\r\\nthat what they have is not the original version, so that the original\\r\\nauthor\\u0027s reputation will not be affected by problems that might be\\r\\nintroduced by others.\\r\\n\\r\\n  Finally, software patents pose a constant threat to the existence of\\r\\nany free program.  We wish to make sure that a company cannot\\r\\neffectively restrict the users of a free program by obtaining a\\r\\nrestrictive license from a patent holder.  Therefore, we insist that\\r\\nany patent license obtained for a version of the library must be\\r\\nconsistent with the full freedom of use specified in this license.\\r\\n\\r\\n  Most GNU software, including some libraries, is covered by the\\r\\nordinary GNU General Public License.  This license, the GNU Lesser\\r\\nGeneral Public License, applies to certain designated libraries, and\\r\\nis quite different from the ordinary General Public License.  We use\\r\\nthis license for certain libraries in order to permit linking those\\r\\nlibraries into non-free programs.\\r\\n\\r\\n  When a program is linked with a library, whether statically or using\\r\\na shared library, the combination of the two is legally speaking a\\r\\ncombined work, a derivative of the original library.  The ordinary\\r\\nGeneral Public License therefore permits such linking only if the\\r\\nentire combination fits its criteria of freedom.  The Lesser General\\r\\nPublic License permits more lax criteria for linking other code with\\r\\nthe library.\\r\\n\\r\\n  We call this license the \\\"Lesser\\\" General Public License because it\\r\\ndoes Less to protect the user\\u0027s freedom than the ordinary General\\r\\nPublic License.  It also provides other free software developers Less\\r\\nof an advantage over competing non-free programs.  These disadvantages\\r\\nare the reason we use the ordinary General Public License for many\\r\\nlibraries.  However, the Lesser license provides advantages in certain\\r\\nspecial circumstances.\\r\\n\\r\\n  For example, on rare occasions, there may be a special need to\\r\\nencourage the widest possible use of a certain library, so that it becomes\\r\\na de-facto standard.  To achieve this, non-free programs must be\\r\\nallowed to use the library.  A more frequent case is that a free\\r\\nlibrary does the same job as widely used non-free libraries.  In this\\r\\ncase, there is little to gain by limiting the free library to free\\r\\nsoftware only, so we use the Lesser General Public License.\\r\\n\\r\\n  In other cases, permission to use a particular library in non-free\\r\\nprograms enables a greater number of people to use a large body of\\r\\nfree software.  For example, permission to use the GNU C Library in\\r\\nnon-free programs enables many more people to use the whole GNU\\r\\noperating system, as well as its variant, the GNU/Linux operating\\r\\nsystem.\\r\\n\\r\\n  Although the Lesser General Public License is Less protective of the\\r\\nusers\\u0027 freedom, it does ensure that the user of a program that is\\r\\nlinked with the Library has the freedom and the wherewithal to run\\r\\nthat program using a modified version of the Library.\\r\\n\\r\\n  The precise terms and conditions for copying, distribution and\\r\\nmodification follow.  Pay close attention to the difference between a\\r\\n\\\"work based on the library\\\" and a \\\"work that uses the library\\\".  The\\r\\nformer contains code derived from the library, whereas the latter must\\r\\nbe combined with the library in order to run.\\r\\n\\r\\n                  GNU LESSER GENERAL PUBLIC LICENSE\\r\\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\r\\n\\r\\n  0. This License Agreement applies to any software library or other\\r\\nprogram which contains a notice placed by the copyright holder or\\r\\nother authorized party saying it may be distributed under the terms of\\r\\nthis Lesser General Public License (also called \\\"this License\\\").\\r\\nEach licensee is addressed as \\\"you\\\".\\r\\n\\r\\n  A \\\"library\\\" means a collection of software functions and/or data\\r\\nprepared so as to be conveniently linked with application programs\\r\\n(which use some of those functions and data) to form executables.\\r\\n\\r\\n  The \\\"Library\\\", below, refers to any such software library or work\\r\\nwhich has been distributed under these terms.  A \\\"work based on the\\r\\nLibrary\\\" means either the Library or any derivative work under\\r\\ncopyright law: that is to say, a work containing the Library or a\\r\\nportion of it, either verbatim or with modifications and/or translated\\r\\nstraightforwardly into another language.  (Hereinafter, translation is\\r\\nincluded without limitation in the term \\\"modification\\\".)\\r\\n\\r\\n  \\\"Source code\\\" for a work means the preferred form of the work for\\r\\nmaking modifications to it.  For a library, complete source code means\\r\\nall the source code for all modules it contains, plus any associated\\r\\ninterface definition files, plus the scripts used to control compilation\\r\\nand installation of the library.\\r\\n\\r\\n  Activities other than copying, distribution and modification are not\\r\\ncovered by this License; they are outside its scope.  The act of\\r\\nrunning a program using the Library is not restricted, and output from\\r\\nsuch a program is covered only if its contents constitute a work based\\r\\non the Library (independent of the use of the Library in a tool for\\r\\nwriting it).  Whether that is true depends on what the Library does\\r\\nand what the program that uses the Library does.\\r\\n\\r\\n  1. You may copy and distribute verbatim copies of the Library\\u0027s\\r\\ncomplete source code as you receive it, in any medium, provided that\\r\\nyou conspicuously and appropriately publish on each copy an\\r\\nappropriate copyright notice and disclaimer of warranty; keep intact\\r\\nall the notices that refer to this License and to the absence of any\\r\\nwarranty; and distribute a copy of this License along with the\\r\\nLibrary.\\r\\n\\r\\n  You may charge a fee for the physical act of transferring a copy,\\r\\nand you may at your option offer warranty protection in exchange for a\\r\\nfee.\\r\\n\\r\\n  2. You may modify your copy or copies of the Library or any portion\\r\\nof it, thus forming a work based on the Library, and copy and\\r\\ndistribute such modifications or work under the terms of Section 1\\r\\nabove, provided that you also meet all of these conditions:\\r\\n\\r\\n    a) The modified work must itself be a software library.\\r\\n\\r\\n    b) You must cause the files modified to carry prominent notices\\r\\n    stating that you changed the files and the date of any change.\\r\\n\\r\\n    c) You must cause the whole of the work to be licensed at no\\r\\n    charge to all third parties under the terms of this License.\\r\\n\\r\\n    d) If a facility in the modified Library refers to a function or a\\r\\n    table of data to be supplied by an application program that uses\\r\\n    the facility, other than as an argument passed when the facility\\r\\n    is invoked, then you must make a good faith effort to ensure that,\\r\\n    in the event an application does not supply such function or\\r\\n    table, the facility still operates, and performs whatever part of\\r\\n    its purpose remains meaningful.\\r\\n\\r\\n    (For example, a function in a library to compute square roots has\\r\\n    a purpose that is entirely well-defined independent of the\\r\\n    application.  Therefore, Subsection 2d requires that any\\r\\n    application-supplied function or table used by this function must\\r\\n    be optional: if the application does not supply it, the square\\r\\n    root function must still compute square roots.)\\r\\n\\r\\nThese requirements apply to the modified work as a whole.  If\\r\\nidentifiable sections of that work are not derived from the Library,\\r\\nand can be reasonably considered independent and separate works in\\r\\nthemselves, then this License, and its terms, do not apply to those\\r\\nsections when you distribute them as separate works.  But when you\\r\\ndistribute the same sections as part of a whole which is a work based\\r\\non the Library, the distribution of the whole must be on the terms of\\r\\nthis License, whose permissions for other licensees extend to the\\r\\nentire whole, and thus to each and every part regardless of who wrote\\r\\nit.\\r\\n\\r\\nThus, it is not the intent of this section to claim rights or contest\\r\\nyour rights to work written entirely by you; rather, the intent is to\\r\\nexercise the right to control the distribution of derivative or\\r\\ncollective works based on the Library.\\r\\n\\r\\nIn addition, mere aggregation of another work not based on the Library\\r\\nwith the Library (or with a work based on the Library) on a volume of\\r\\na storage or distribution medium does not bring the other work under\\r\\nthe scope of this License.\\r\\n\\r\\n  3. You may opt to apply the terms of the ordinary GNU General Public\\r\\nLicense instead of this License to a given copy of the Library.  To do\\r\\nthis, you must alter all the notices that refer to this License, so\\r\\nthat they refer to the ordinary GNU General Public License, version 2,\\r\\ninstead of to this License.  (If a newer version than version 2 of the\\r\\nordinary GNU General Public License has appeared, then you can specify\\r\\nthat version instead if you wish.)  Do not make any other change in\\r\\nthese notices.\\r\\n\\r\\n  Once this change is made in a given copy, it is irreversible for\\r\\nthat copy, so the ordinary GNU General Public License applies to all\\r\\nsubsequent copies and derivative works made from that copy.\\r\\n\\r\\n  This option is useful when you wish to copy part of the code of\\r\\nthe Library into a program that is not a library.\\r\\n\\r\\n  4. You may copy and distribute the Library (or a portion or\\r\\nderivative of it, under Section 2) in object code or executable form\\r\\nunder the terms of Sections 1 and 2 above provided that you accompany\\r\\nit with the complete corresponding machine-readable source code, which\\r\\nmust be distributed under the terms of Sections 1 and 2 above on a\\r\\nmedium customarily used for software interchange.\\r\\n\\r\\n  If distribution of object code is made by offering access to copy\\r\\nfrom a designated place, then offering equivalent access to copy the\\r\\nsource code from the same place satisfies the requirement to\\r\\ndistribute the source code, even though third parties are not\\r\\ncompelled to copy the source along with the object code.\\r\\n\\r\\n  5. A program that contains no derivative of any portion of the\\r\\nLibrary, but is designed to work with the Library by being compiled or\\r\\nlinked with it, is called a \\\"work that uses the Library\\\".  Such a\\r\\nwork, in isolation, is not a derivative work of the Library, and\\r\\ntherefore falls outside the scope of this License.\\r\\n\\r\\n  However, linking a \\\"work that uses the Library\\\" with the Library\\r\\ncreates an executable that is a derivative of the Library (because it\\r\\ncontains portions of the Library), rather than a \\\"work that uses the\\r\\nlibrary\\\".  The executable is therefore covered by this License.\\r\\nSection 6 states terms for distribution of such executables.\\r\\n\\r\\n  When a \\\"work that uses the Library\\\" uses material from a header file\\r\\nthat is part of the Library, the object code for the work may be a\\r\\nderivative work of the Library even though the source code is not.\\r\\nWhether this is true is especially significant if the work can be\\r\\nlinked without the Library, or if the work is itself a library.  The\\r\\nthreshold for this to be true is not precisely defined by law.\\r\\n\\r\\n  If such an object file uses only numerical parameters, data\\r\\nstructure layouts and accessors, and small macros and small inline\\r\\nfunctions (ten lines or less in length), then the use of the object\\r\\nfile is unrestricted, regardless of whether it is legally a derivative\\r\\nwork.  (Executables containing this object code plus portions of the\\r\\nLibrary will still fall under Section 6.)\\r\\n\\r\\n  Otherwise, if the work is a derivative of the Library, you may\\r\\ndistribute the object code for the work under the terms of Section 6.\\r\\nAny executables containing that work also fall under Section 6,\\r\\nwhether or not they are linked directly with the Library itself.\\r\\n\\r\\n  6. As an exception to the Sections above, you may also combine or\\r\\nlink a \\\"work that uses the Library\\\" with the Library to produce a\\r\\nwork containing portions of the Library, and distribute that work\\r\\nunder terms of your choice, provided that the terms permit\\r\\nmodification of the work for the customer\\u0027s own use and reverse\\r\\nengineering for debugging such modifications.\\r\\n\\r\\n  You must give prominent notice with each copy of the work that the\\r\\nLibrary is used in it and that the Library and its use are covered by\\r\\nthis License.  You must supply a copy of this License.  If the work\\r\\nduring execution displays copyright notices, you must include the\\r\\ncopyright notice for the Library among them, as well as a reference\\r\\ndirecting the user to the copy of this License.  Also, you must do one\\r\\nof these things:\\r\\n\\r\\n    a) Accompany the work with the complete corresponding\\r\\n    machine-readable source code for the Library including whatever\\r\\n    changes were used in the work (which must be distributed under\\r\\n    Sections 1 and 2 above); and, if the work is an executable linked\\r\\n    with the Library, with the complete machine-readable \\\"work that\\r\\n    uses the Library\\\", as object code and/or source code, so that the\\r\\n    user can modify the Library and then relink to produce a modified\\r\\n    executable containing the modified Library.  (It is understood\\r\\n    that the user who changes the contents of definitions files in the\\r\\n    Library will not necessarily be able to recompile the application\\r\\n    to use the modified definitions.)\\r\\n\\r\\n    b) Use a suitable shared library mechanism for linking with the\\r\\n    Library.  A suitable mechanism is one that (1) uses at run time a\\r\\n    copy of the library already present on the user\\u0027s computer system,\\r\\n    rather than copying library functions into the executable, and (2)\\r\\n    will operate properly with a modified version of the library, if\\r\\n    the user installs one, as long as the modified version is\\r\\n    interface-compatible with the version that the work was made with.\\r\\n\\r\\n    c) Accompany the work with a written offer, valid for at\\r\\n    least three years, to give the same user the materials\\r\\n    specified in Subsection 6a, above, for a charge no more\\r\\n    than the cost of performing this distribution.\\r\\n\\r\\n    d) If distribution of the work is made by offering access to copy\\r\\n    from a designated place, offer equivalent access to copy the above\\r\\n    specified materials from the same place.\\r\\n\\r\\n    e) Verify that the user has already received a copy of these\\r\\n    materials or that you have already sent this user a copy.\\r\\n\\r\\n  For an executable, the required form of the \\\"work that uses the\\r\\nLibrary\\\" must include any data and utility programs needed for\\r\\nreproducing the executable from it.  However, as a special exception,\\r\\nthe materials to be distributed need not include anything that is\\r\\nnormally distributed (in either source or binary form) with the major\\r\\ncomponents (compiler, kernel, and so on) of the operating system on\\r\\nwhich the executable runs, unless that component itself accompanies\\r\\nthe executable.\\r\\n\\r\\n  It may happen that this requirement contradicts the license\\r\\nrestrictions of other proprietary libraries that do not normally\\r\\naccompany the operating system.  Such a contradiction means you cannot\\r\\nuse both them and the Library together in an executable that you\\r\\ndistribute.\\r\\n\\r\\n  7. You may place library facilities that are a work based on the\\r\\nLibrary side-by-side in a single library together with other library\\r\\nfacilities not covered by this License, and distribute such a combined\\r\\nlibrary, provided that the separate distribution of the work based on\\r\\nthe Library and of the other library facilities is otherwise\\r\\npermitted, and provided that you do these two things:\\r\\n\\r\\n    a) Accompany the combined library with a copy of the same work\\r\\n    based on the Library, uncombined with any other library\\r\\n    facilities.  This must be distributed under the terms of the\\r\\n    Sections above.\\r\\n\\r\\n    b) Give prominent notice with the combined library of the fact\\r\\n    that part of it is a work based on the Library, and explaining\\r\\n    where to find the accompanying uncombined form of the same work.\\r\\n\\r\\n  8. You may not copy, modify, sublicense, link with, or distribute\\r\\nthe Library except as expressly provided under this License.  Any\\r\\nattempt otherwise to copy, modify, sublicense, link with, or\\r\\ndistribute the Library is void, and will automatically terminate your\\r\\nrights under this License.  However, parties who have received copies,\\r\\nor rights, from you under this License will not have their licenses\\r\\nterminated so long as such parties remain in full compliance.\\r\\n\\r\\n  9. You are not required to accept this License, since you have not\\r\\nsigned it.  However, nothing else grants you permission to modify or\\r\\ndistribute the Library or its derivative works.  These actions are\\r\\nprohibited by law if you do not accept this License.  Therefore, by\\r\\nmodifying or distributing the Library (or any work based on the\\r\\nLibrary), you indicate your acceptance of this License to do so, and\\r\\nall its terms and conditions for copying, distributing or modifying\\r\\nthe Library or works based on it.\\r\\n\\r\\n  10. Each time you redistribute the Library (or any work based on the\\r\\nLibrary), the recipient automatically receives a license from the\\r\\noriginal licensor to copy, distribute, link with or modify the Library\\r\\nsubject to these terms and conditions.  You may not impose any further\\r\\nrestrictions on the recipients\\u0027 exercise of the rights granted herein.\\r\\nYou are not responsible for enforcing compliance by third parties with\\r\\nthis License.\\r\\n\\r\\n  11. If, as a consequence of a court judgment or allegation of patent\\r\\ninfringement or for any other reason (not limited to patent issues),\\r\\nconditions are imposed on you (whether by court order, agreement or\\r\\notherwise) that contradict the conditions of this License, they do not\\r\\nexcuse you from the conditions of this License.  If you cannot\\r\\ndistribute so as to satisfy simultaneously your obligations under this\\r\\nLicense and any other pertinent obligations, then as a consequence you\\r\\nmay not distribute the Library at all.  For example, if a patent\\r\\nlicense would not permit royalty-free redistribution of the Library by\\r\\nall those who receive copies directly or indirectly through you, then\\r\\nthe only way you could satisfy both it and this License would be to\\r\\nrefrain entirely from distribution of the Library.\\r\\n\\r\\nIf any portion of this section is held invalid or unenforceable under any\\r\\nparticular circumstance, the balance of the section is intended to apply,\\r\\nand the section as a whole is intended to apply in other circumstances.\\r\\n\\r\\nIt is not the purpose of this section to induce you to infringe any\\r\\npatents or other property right claims or to contest validity of any\\r\\nsuch claims; this section has the sole purpose of protecting the\\r\\nintegrity of the free software distribution system which is\\r\\nimplemented by public license practices.  Many people have made\\r\\ngenerous contributions to the wide range of software distributed\\r\\nthrough that system in reliance on consistent application of that\\r\\nsystem; it is up to the author/donor to decide if he or she is willing\\r\\nto distribute software through any other system and a licensee cannot\\r\\nimpose that choice.\\r\\n\\r\\nThis section is intended to make thoroughly clear what is believed to\\r\\nbe a consequence of the rest of this License.\\r\\n\\r\\n  12. If the distribution and/or use of the Library is restricted in\\r\\ncertain countries either by patents or by copyrighted interfaces, the\\r\\noriginal copyright holder who places the Library under this License may add\\r\\nan explicit geographical distribution limitation excluding those countries,\\r\\nso that distribution is permitted only in or among countries not thus\\r\\nexcluded.  In such case, this License incorporates the limitation as if\\r\\nwritten in the body of this License.\\r\\n\\r\\n  13. The Free Software Foundation may publish revised and/or new\\r\\nversions of the Lesser General Public License from time to time.\\r\\nSuch new versions will be similar in spirit to the present version,\\r\\nbut may differ in detail to address new problems or concerns.\\r\\n\\r\\nEach version is given a distinguishing version number.  If the Library\\r\\nspecifies a version number of this License which applies to it and\\r\\n\\\"any later version\\\", you have the option of following the terms and\\r\\nconditions either of that version or of any later version published by\\r\\nthe Free Software Foundation.  If the Library does not specify a\\r\\nlicense version number, you may choose any version ever published by\\r\\nthe Free Software Foundation.\\r\\n\\r\\n  14. If you wish to incorporate parts of the Library into other free\\r\\nprograms whose distribution conditions are incompatible with these,\\r\\nwrite to the author to ask for permission.  For software which is\\r\\ncopyrighted by the Free Software Foundation, write to the Free\\r\\nSoftware Foundation; we sometimes make exceptions for this.  Our\\r\\ndecision will be guided by the two goals of preserving the free status\\r\\nof all derivatives of our free software and of promoting the sharing\\r\\nand reuse of software generally.\\r\\n\\r\\n                            NO WARRANTY\\r\\n\\r\\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\\r\\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\\r\\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\\r\\nOTHER PARTIES PROVIDE THE LIBRARY \\\"AS IS\\\" WITHOUT WARRANTY OF ANY\\r\\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\\r\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\r\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\\r\\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\\r\\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\r\\n\\r\\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\\r\\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\\r\\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\\r\\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\\r\\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\\r\\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\\r\\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\\r\\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\\r\\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\\r\\nDAMAGES.\\r\\n\\r\\n                     END OF TERMS AND CONDITIONS\\r\\n*/\\r\\n\\r\\nlibrary NoiseV1 {\\r\\n\\r\\n    uint32 private constant NOISE_TABLE_SIZE = 4095;\\r\\n    \\r\\n    int32 private constant PERLIN_YWRAPB = 4;\\r\\n    int32 private constant PERLIN_YWRAP = 16; // 1 \\u003c\\u003c PERLIN_YWRAPB\\r\\n    int32 private constant PERLIN_ZWRAPB = 8;\\r\\n    int32 private constant PERLIN_ZWRAP = 256; // 1 \\u003c\\u003c PERLIN_ZWRAPB   \\r\\n    uint8 private constant PERLIN_OCTAVES = 4;\\r\\n    int64 private constant PERLIN_AMP_FALLOFF = 2147483648; // 0.5\\r\\n\\r\\n    struct noiseFunction {\\r\\n        int64[NOISE_TABLE_SIZE + 1] noiseTable;\\r\\n        \\r\\n        int64 x;\\r\\n        int64 y;\\r\\n        int64 z;\\r\\n\\r\\n        int32 xi;\\r\\n        int32 yi;\\r\\n        int32 zi;\\r\\n\\r\\n        int64 xf;\\r\\n        int64 yf;\\r\\n        int64 zf;\\r\\n\\r\\n        int64 rxf;\\r\\n        int64 ryf;\\r\\n\\r\\n        int64 n1;\\r\\n        int64 n2;\\r\\n        int64 n3;\\r\\n    }\\r\\n\\r\\n    function buildNoiseTable(int32 seed) external pure returns (int64[4096] memory noiseTable){\\r\\n        for (uint16 i = 0; i \\u003c NOISE_TABLE_SIZE + 1; i++) {\\r\\n            (uint64 s, int64 v) = LCG64.next(uint32(seed));\\r\\n            noiseTable[i] = v;\\r\\n            seed = int32(uint32(s));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function noise(\\r\\n        int64[NOISE_TABLE_SIZE + 1] memory noiseTable,\\r\\n        int64 x,\\r\\n        int64 y\\r\\n    ) external pure returns (int64) {\\r\\n        return noise_impl(noiseFunction(noiseTable, x, y, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));\\r\\n    }\\r\\n\\r\\n    function noise(noiseFunction memory f) external pure returns (int64) {\\r\\n        return noise_impl(f);\\r\\n    }\\r\\n\\r\\n    function noise_impl(noiseFunction memory f) private pure returns (int64) {\\r\\n        if (f.x \\u003c 0) {\\r\\n            f.x = -f.x;\\r\\n        }\\r\\n        if (f.y \\u003c 0) {\\r\\n            f.y = -f.y;\\r\\n        }\\r\\n        if (f.z \\u003c 0) {\\r\\n            f.z = -f.z;\\r\\n        }\\r\\n\\r\\n        f.xi = int32(Fix64V1.floor(f.x) \\u003e\\u003e 32 /* FRACTIONAL_PLACES */);\\r\\n        f.yi = int32(Fix64V1.floor(f.y) \\u003e\\u003e 32 /* FRACTIONAL_PLACES */);\\r\\n        f.zi = int32(Fix64V1.floor(f.z) \\u003e\\u003e 32 /* FRACTIONAL_PLACES */);        \\r\\n\\r\\n        f.xf = Fix64V1.sub(f.x, (f.xi * Fix64V1.ONE));\\r\\n        f.yf = Fix64V1.sub(f.y, (f.yi * Fix64V1.ONE));\\r\\n        f.zf = Fix64V1.sub(f.z, (f.zi * Fix64V1.ONE)); \\r\\n        \\r\\n        int64 r = 0;\\r\\n        int64 ampl = PERLIN_AMP_FALLOFF;     \\r\\n\\r\\n        for (uint8 o = 0; o \\u003c PERLIN_OCTAVES; o++) {\\r\\n\\r\\n            int32 off = f.xi + (f.yi \\u003c\\u003c uint32(PERLIN_YWRAPB)) + (f.zi \\u003c\\u003c uint32(PERLIN_ZWRAPB));\\r\\n            f.rxf = scaled_cosine(f.xf);\\r\\n            f.ryf = scaled_cosine(f.yf);\\r\\n\\r\\n            f.n1 = f.noiseTable[uint32(off) \\u0026 NOISE_TABLE_SIZE];\\r\\n            {\\r\\n                f.n1 = Fix64V1.add(f.n1, Fix64V1.mul(f.rxf, Fix64V1.sub(int64(f.noiseTable[(uint32(off) + 1) \\u0026 NOISE_TABLE_SIZE]), f.n1)));                        \\r\\n\\r\\n                f.n2 = f.noiseTable[(uint32(off) + uint32(PERLIN_YWRAP)) \\u0026 NOISE_TABLE_SIZE];\\r\\n                f.n2 = Fix64V1.add(f.n2, Fix64V1.mul(f.rxf, Fix64V1.sub(int64(f.noiseTable[(uint32(off) + uint32(PERLIN_YWRAP) + 1) \\u0026 NOISE_TABLE_SIZE]), f.n2)));\\r\\n                f.n1 = Fix64V1.add(f.n1, Fix64V1.mul(f.ryf, Fix64V1.sub(f.n2, f.n1)));\\r\\n\\r\\n                off += PERLIN_ZWRAP;\\r\\n\\r\\n                f.n2 = f.noiseTable[uint32(off) \\u0026 NOISE_TABLE_SIZE];\\r\\n                f.n2 = Fix64V1.add(f.n2, Fix64V1.mul(f.rxf, Fix64V1.sub(int64(f.noiseTable[((uint32(off) + 1)) \\u0026 NOISE_TABLE_SIZE]), f.n2)));\\r\\n\\r\\n                f.n3 = f.noiseTable[(uint32(off) + uint32(PERLIN_YWRAP)) \\u0026 NOISE_TABLE_SIZE];\\r\\n                f.n3 = Fix64V1.add(f.n3, Fix64V1.mul(f.rxf, Fix64V1.sub(int64(f.noiseTable[(uint32(off) + uint32(PERLIN_YWRAP) + 1) \\u0026 NOISE_TABLE_SIZE]), f.n3)));\\r\\n                f.n2 = Fix64V1.add(f.n2, Fix64V1.mul(f.ryf, Fix64V1.sub(f.n3, f.n2)));\\r\\n                f.n1 = Fix64V1.add(f.n1, Fix64V1.mul(scaled_cosine(f.zf), Fix64V1.sub(f.n2, f.n1)));\\r\\n            }           \\r\\n\\r\\n            r = Fix64V1.add(r, Fix64V1.mul(f.n1, ampl));\\r\\n            ampl = Fix64V1.mul(ampl, PERLIN_AMP_FALLOFF);\\r\\n\\r\\n            f.xi \\u003c\\u003c= 1;\\r\\n            f.xf = Fix64V1.mul(f.xf, Fix64V1.TWO);\\r\\n            f.yi \\u003c\\u003c= 1;\\r\\n            f.yf = Fix64V1.mul(f.yf, Fix64V1.TWO);\\r\\n            f.zi \\u003c\\u003c= 1;\\r\\n            f.zf = Fix64V1.mul(f.zf, Fix64V1.TWO);\\r\\n\\r\\n            if (f.xf \\u003e= Fix64V1.ONE) {\\r\\n                f.xi++;\\r\\n                f.xf = f.xf - Fix64V1.ONE;\\r\\n            }\\r\\n            if (f.yf \\u003e= Fix64V1.ONE) {\\r\\n                f.yi++;\\r\\n                f.yf = f.yf - Fix64V1.ONE;\\r\\n            }\\r\\n            if (f.zf \\u003e= Fix64V1.ONE) {\\r\\n                f.zi++;\\r\\n                f.zf = f.zf - Fix64V1.ONE;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return r;\\r\\n    }\\r\\n\\r\\n    function scaled_cosine(int64 i)\\r\\n        private\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 angle = Fix64V1.mul(i, Fix64V1.PI);      \\r\\n        int64 cosine = Trig256.cos(angle);\\r\\n        int64 scaled = Fix64V1.mul(\\r\\n                2147483648, /* 0.5f */\\r\\n                Fix64V1.sub(Fix64V1.ONE, cosine)\\r\\n            );        \\r\\n\\r\\n        return scaled;            \\r\\n    }\\r\\n}\\r\\n\"},\"ParticleSetFactoryV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"ParticleSetV1.sol\\\";\\r\\nimport \\\"ParticleV1.sol\\\";\\r\\nimport \\\"RandomV1.sol\\\";\\r\\n\\r\\n/*\\r\\n    A noise-based particle simulator, built for generative art that uses flow fields.\\r\\n\\r\\n    Based on techniques in Sighack\\u0027s \\\"Getting Creative with Perlin Noise Fields\\\":\\r\\n    See: https://github.com/sighack/perlin-noise-fields\\r\\n    See: https://github.com/sighack/perlin-noise-fields/blob/master/LICENSE\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    MIT License\\r\\n\\r\\n    Copyright (c) 2018 Manohar Vanga\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n*/\\r\\n\\r\\nlibrary ParticleSetFactoryV1 {\\r\\n    uint16 internal constant PARTICLE_TABLE_SIZE = 5000;\\r\\n\\r\\n    struct CreateParticleSet2D {\\r\\n        int32 seed;\\r\\n        uint32 range;\\r\\n        uint16 width;\\r\\n        uint16 height;\\r\\n        uint16 n;\\r\\n        int64 forceScale;\\r\\n        int64 noiseScale;\\r\\n        uint8 lifetime;\\r\\n    }\\r\\n\\r\\n    function createSet(CreateParticleSet2D memory f, RandomV1.PRNG memory prng)\\r\\n        external\\r\\n        pure\\r\\n        returns (ParticleSetV1.ParticleSet2D memory set, RandomV1.PRNG memory)\\r\\n    {\\r\\n        ParticleV1.Particle2D[PARTICLE_TABLE_SIZE] memory particles;\\r\\n\\r\\n        for (uint16 i = 0; i \\u003c f.n; i++) {  \\r\\n\\r\\n            int256 px = RandomV1.next(\\r\\n                prng,\\r\\n                -int32(f.range),\\r\\n                int16(f.width) + int32(f.range)\\r\\n            );\\r\\n\\r\\n            int256 py = RandomV1.next(\\r\\n                prng,\\r\\n                -int32(f.range),\\r\\n                int16(f.height) + int32(f.range)\\r\\n            );\\r\\n\\r\\n            ParticleV1.Particle2D memory particle = ParticleV1.Particle2D(\\r\\n                int64(px),\\r\\n                int64(py),\\r\\n                0,\\r\\n                0,\\r\\n                int64(px),\\r\\n                int64(py),\\r\\n                0,\\r\\n                false,\\r\\n                TypesV1.Point2D(0, 0),\\r\\n                f.lifetime,\\r\\n                f.forceScale,\\r\\n                f.noiseScale\\r\\n            );\\r\\n            particles[i] = particle;\\r\\n        }\\r\\n\\r\\n        set.particles = particles;\\r\\n        return (set, prng);\\r\\n    }\\r\\n}\"},\"ParticleSetV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"ParticleV1.sol\\\";\\r\\nimport \\\"TypesV1.sol\\\";\\r\\n\\r\\n/*\\r\\n    A noise-based particle simulator, built for generative art that uses flow fields.\\r\\n\\r\\n    Based on techniques in Sighack\\u0027s \\\"Getting Creative with Perlin Noise Fields\\\":\\r\\n    See: https://github.com/sighack/perlin-noise-fields\\r\\n    See: https://github.com/sighack/perlin-noise-fields/blob/master/LICENSE\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    MIT License\\r\\n\\r\\n    Copyright (c) 2018 Manohar Vanga\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n*/\\r\\n\\r\\nabstract contract ParticleSetV1 {\\r\\n    uint16 internal constant NOISE_TABLE_SIZE = 4095;\\r\\n    uint16 internal constant PARTICLE_TABLE_SIZE = 5000;\\r\\n\\r\\n    struct ParticleSet2D {\\r\\n        ParticleV1.Particle2D[5000] particles;\\r\\n        bool dead;\\r\\n    }\\r\\n    \\r\\n    function update(\\r\\n        int64[NOISE_TABLE_SIZE + 1] memory noiseTable,\\r\\n        ParticleSet2D memory set,\\r\\n        uint16 particleCount,\\r\\n        uint256 width,\\r\\n        uint256 height\\r\\n    ) internal pure {\\r\\n        set.dead = true;\\r\\n        for (uint16 i = 0; i \\u003c particleCount; i++) {\\r\\n            ParticleV1.Particle2D memory p = set.particles[i];\\r\\n            if (p.dead) {\\r\\n                continue;\\r\\n            }\\r\\n            set.dead = false;\\r\\n            ParticleV1.update(noiseTable, p, width, height);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function draw(\\r\\n        ParticleSet2D memory set,\\r\\n        uint16 particleCount,\\r\\n        uint32[16384] memory result,\\r\\n        TypesV1.Chunk2D memory chunk\\r\\n    ) internal pure {\\r\\n        if (set.dead) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        for (uint256 i = 0; i \\u003c particleCount; i++) {\\r\\n            ParticleV1.Particle2D memory p = set.particles[i];\\r\\n            if (p.dead) {\\r\\n                continue;\\r\\n            }\\r\\n            step(p, result, chunk);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function step(\\r\\n        ParticleV1.Particle2D memory p, uint32[16384] memory result,\\r\\n        TypesV1.Chunk2D memory chunk\\r\\n    ) internal pure virtual;\\r\\n}\\r\\n\"},\"ParticleV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"Fix64V1.sol\\\";\\r\\nimport \\\"TypesV1.sol\\\";\\r\\nimport \\\"NoiseV1.sol\\\";\\r\\nimport \\\"RandomV1.sol\\\";\\r\\nimport \\\"Trig256.sol\\\";\\r\\n\\r\\n/*\\r\\n    A noise-based particle simulator, built for generative art that uses flow fields.\\r\\n\\r\\n    Based on techniques in Sighack\\u0027s \\\"Getting Creative with Perlin Noise Fields\\\":\\r\\n    See: https://github.com/sighack/perlin-noise-fields\\r\\n    See: https://github.com/sighack/perlin-noise-fields/blob/master/LICENSE\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    MIT License\\r\\n\\r\\n    Copyright (c) 2018 Manohar Vanga\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n*/\\r\\n\\r\\nlibrary ParticleV1 {\\r\\n    uint16 internal constant NOISE_TABLE_SIZE = 4096;\\r\\n\\r\\n    struct Particle2D {\\r\\n        int64 ox;\\r\\n        int64 oy;\\r\\n        int64 px;\\r\\n        int64 py;\\r\\n        int64 x;\\r\\n        int64 y;\\r\\n        uint32 frames;\\r\\n        bool dead;\\r\\n        TypesV1.Point2D force;\\r\\n        uint8 _lifetime;\\r\\n        int64 _forceScale;\\r\\n        int64 _noiseScale;\\r\\n    }\\r\\n\\r\\n    function update(\\r\\n        int64[NOISE_TABLE_SIZE] memory noiseTable,\\r\\n        Particle2D memory p,\\r\\n        uint256 width,\\r\\n        uint256 height\\r\\n    ) internal pure {\\r\\n        p.frames++;\\r\\n\\r\\n        if (p.frames \\u003e= p._lifetime) {\\r\\n            p.dead = true;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        p.force = forceAt(noiseTable, p, p.x, p.y);\\r\\n\\r\\n        if (\\r\\n            p.x \\u003e= int256(width) + int256(width) / 2 ||\\r\\n            p.x \\u003c -int256(width) / 2 ||\\r\\n            p.y \\u003e= int256(height) + int256(height) / 2 ||\\r\\n            p.y \\u003c -int256(height) / 2\\r\\n        ) {\\r\\n            p.dead = true;\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        p.px = p.x;\\r\\n        p.py = p.y;                \\r\\n\\r\\n        p.x += int64(p.force.x);\\r\\n        p.y += int64(p.force.y);        \\r\\n    }\\r\\n\\r\\n    function forceAt(\\r\\n        int64[NOISE_TABLE_SIZE] memory noiseTable,\\r\\n        Particle2D memory p,\\r\\n        int64 x,\\r\\n        int64 y\\r\\n    ) internal pure returns (TypesV1.Point2D memory force) {\\r\\n\\r\\n        int64 nx = Fix64V1.mul(x * Fix64V1.ONE, p._noiseScale);       \\r\\n        int64 ny = Fix64V1.mul(y * Fix64V1.ONE, p._noiseScale);\\r\\n        \\r\\n        int64 noise = NoiseV1.noise(noiseTable, nx, ny);\\r\\n        int64 theta = Fix64V1.mul(noise, Fix64V1.TWO_PI);\\r\\n\\r\\n        return forceFromAngle(p, theta);\\r\\n    }\\r\\n\\r\\n    function forceFromAngle(Particle2D memory p, int64 theta)\\r\\n        internal\\r\\n        pure\\r\\n        returns (TypesV1.Point2D memory force)\\r\\n    {\\r\\n        int64 px = Trig256.cos(theta);\\r\\n        int64 py = Trig256.sin(theta);\\r\\n\\r\\n        int64 pxl = Fix64V1.mul(px, p._forceScale) \\u003e\\u003e 32 /* FRACTIONAL_PLACES */;\\r\\n        int64 pyl = Fix64V1.mul(py, p._forceScale) \\u003e\\u003e 32 /* FRACTIONAL_PLACES */;        \\r\\n        \\r\\n        force = TypesV1.Point2D(int32(pxl), int32(pyl));\\r\\n    }\\r\\n}\\r\\n\"},\"ProcessingV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"TypesV1.sol\\\";\\r\\nimport \\\"GraphicsV1.sol\\\";\\r\\nimport \\\"GeometryV1.sol\\\";\\r\\nimport \\\"RandomV1.sol\\\";\\r\\nimport \\\"MathV1.sol\\\";\\r\\n\\r\\nlibrary ProcessingV1 {\\r\\n    uint32 internal constant BG_COLOR = 0xFFD3D3D3;\\r\\n    uint32 internal constant FILL_COLOR = 0xFFFFFFFF;\\r\\n    uint32 internal constant STROKE_COLOR = 0x00000000;\\r\\n    uint32 internal constant MAX_POLYGON_NODES = 400;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets the color used for the background of the drawing surface.\\r\\n     * @notice https://processing.org/reference/background_.html\\r\\n     */\\r\\n    function background(\\r\\n        uint32[16384] /* 128 * 128 */\\r\\n            memory result,\\r\\n        uint32 color,\\r\\n        TypesV1.Chunk2D memory chunk\\r\\n    ) internal pure {\\r\\n        for (uint256 x = 0; x \\u003c chunk.chunkWidth; x++) {\\r\\n            for (uint256 y = 0; y \\u003c chunk.chunkHeight; y++) {\\r\\n                GraphicsV1.setPixel(\\r\\n                    result,\\r\\n                    chunk.chunkWidth,\\r\\n                    int256(x),\\r\\n                    int256(y),\\r\\n                    color\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice A triangle is a plane created by connecting three points. The first two arguments specify the first point, the middle two arguments specify the second point, and the last two arguments specify the third point.\\r\\n     * @notice https://processing.org/reference/triangle_.html\\r\\n     * @dev Renders a filled triangle, using the Barycentric rasterization algorithm.\\r\\n     */\\r\\n    function triangle(\\r\\n        uint32[16384] /* 128 * 128 */\\r\\n            memory result,\\r\\n        GeometryV1.Triangle2D memory f\\r\\n    ) internal pure {\\r\\n        TypesV1.Point2D memory p;\\r\\n\\r\\n        uint256 minX = f.chunk.startX;\\r\\n        uint256 maxX = (f.chunk.startX + f.chunk.chunkWidth) - 1;\\r\\n        uint256 minY = f.chunk.startY;\\r\\n        uint256 maxY = (f.chunk.startY + f.chunk.chunkHeight) - 1;\\r\\n\\r\\n        while (GeometryV1.edge(f.v0, f.v1, f.v2) \\u003c 0) {\\r\\n            TypesV1.Point2D memory temp = f.v1;\\r\\n            f.v1 = f.v2;\\r\\n            f.v2 = temp;\\r\\n        }\\r\\n\\r\\n        for (p.x = int256(minX); p.x \\u003c= int256(maxX); p.x++) {\\r\\n            for (p.y = int256(minY); p.y \\u003c= int256(maxY); p.y++) {\\r\\n                int256 w0 = GeometryV1.edge(f.v1, f.v2, p);\\r\\n                int256 w1 = GeometryV1.edge(f.v2, f.v0, p);\\r\\n                int256 w2 = GeometryV1.edge(f.v0, f.v1, p);\\r\\n\\r\\n                if (w0 \\u003e= 0 \\u0026\\u0026 w1 \\u003e= 0 \\u0026\\u0026 w2 \\u003e= 0) {\\r\\n                    GraphicsV1.setPixel(\\r\\n                        result,\\r\\n                        f.chunk.chunkWidth,\\r\\n                        int256(p.x - int32(f.chunk.startX)),\\r\\n                        int256(p.y - int32(f.chunk.startY)),\\r\\n                        f.fillColor\\r\\n                    );\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (f.strokeColor == f.fillColor) return;\\r\\n\\r\\n        {\\r\\n            line(result, GeometryV1.Line2D(f.v0, f.v1, f.strokeColor, f.chunk));\\r\\n            line(result, GeometryV1.Line2D(f.v1, f.v2, f.strokeColor, f.chunk));\\r\\n            line(result, GeometryV1.Line2D(f.v2, f.v0, f.strokeColor, f.chunk));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Draws a line (a direct path between two points) to the screen.\\r\\n     * @notice https://processing.org/reference/line_.html\\r\\n     * @dev Renders a line between two points, using Bresenham\\u0027s rasterization algorithm.\\r\\n     */\\r\\n    function line(uint32[16384]memory result, GeometryV1.Line2D memory f\\r\\n    ) internal pure {\\r\\n        int256 x0 = f.v0.x;\\r\\n        int256 x1 = f.v1.x;\\r\\n        int256 y0 = f.v0.y;\\r\\n        int256 y1 = f.v1.y;\\r\\n\\r\\n        int256 dx = MathV1.abs(x1 - x0);        \\r\\n        int256 dy = MathV1.abs(y1 - y0);\\r\\n\\r\\n        int256 err = (dx \\u003e dy ? dx : -dy) / 2;\\r\\n        int256 e2;\\r\\n\\r\\n        for (;;) {\\r\\n            if (\\r\\n                x0 \\u003c= int32(f.chunk.startX) + int16(f.chunk.chunkWidth) - 1 \\u0026\\u0026\\r\\n                x0 \\u003e= int32(f.chunk.startX) \\u0026\\u0026\\r\\n                y0 \\u003c= int32(f.chunk.startY) + int16(f.chunk.chunkHeight) - 1 \\u0026\\u0026\\r\\n                y0 \\u003e= int32(f.chunk.startY)\\r\\n            ) {\\r\\n                GraphicsV1.setPixel(\\r\\n                    result,\\r\\n                    f.chunk.chunkWidth,\\r\\n                    x0 - int32(f.chunk.startX),\\r\\n                    y0 - int32(f.chunk.startY),\\r\\n                    f.color\\r\\n                );\\r\\n            }\\r\\n\\r\\n            if (x0 == x1 \\u0026\\u0026 y0 == y1) break;\\r\\n            e2 = err;\\r\\n            if (e2 \\u003e -dx) {\\r\\n                err -= dy;\\r\\n                x0 += x0 \\u003c x1 ? int8(1) : -1;\\r\\n            }\\r\\n            if (e2 \\u003c dy) {\\r\\n                err += dx;\\r\\n                y0 += y0 \\u003c y1 ? int8(1) : -1;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Draw a polygon shape to the screen.\\r\\n     * @notice https://processing.org/reference/beginShape_.html\\r\\n     * @notice https://processing.org/reference/vertex_.html\\r\\n     * @notice https://processing.org/reference/endShape_.html\\r\\n     * @dev Renders a filled polygon, using Finley\\u0027s algorithm.\\r\\n     */\\r\\n    function polygon(uint32[16384] memory result, GeometryV1.Polygon2D memory f\\r\\n    ) internal pure {\\r\\n        uint32 polyCorners = f.vertexCount;\\r\\n\\r\\n        int32[MAX_POLYGON_NODES] memory nodeX;\\r\\n\\r\\n        for (uint32 pixelY = f.chunk.startY; pixelY \\u003c (f.chunk.startY + f.chunk.chunkHeight); pixelY++) {\\r\\n            uint32 i;\\r\\n\\r\\n            uint256 nodes = 0;\\r\\n            uint32 j = polyCorners - 1;\\r\\n            for (i = 0; i \\u003c polyCorners; i++) {\\r\\n                \\r\\n                TypesV1.Point2D memory a = TypesV1.Point2D(\\r\\n                    f.vertices[i].x,\\r\\n                    f.vertices[i].y\\r\\n                );\\r\\n                TypesV1.Point2D memory b = TypesV1.Point2D(\\r\\n                    f.vertices[j].x,\\r\\n                    f.vertices[j].y\\r\\n                );\\r\\n\\r\\n                if (\\r\\n                    (a.y \\u003c int32(pixelY) \\u0026\\u0026 b.y \\u003e= int32(pixelY)) ||\\r\\n                    (b.y \\u003c int32(pixelY) \\u0026\\u0026 a.y \\u003e= int32(pixelY))\\r\\n                ) {\\r\\n                    int32 t = int32(a.x) + (int32(pixelY) - int32(a.y)) / (int32(b.y) - int32(a.y)) * (int32(b.x) - int32(a.x));\\r\\n                    nodeX[nodes++] = t;\\r\\n                }\\r\\n\\r\\n                j = i;\\r\\n            }\\r\\n\\r\\n            if(nodes == 0) {\\r\\n                continue; // nothing to draw\\r\\n            }\\r\\n\\r\\n            i = 0;\\r\\n            while (i \\u003c nodes - 1) {\\r\\n                if (nodeX[i] \\u003e nodeX[i + 1]) {\\r\\n                    (nodeX[i], nodeX[i + 1]) = (nodeX[i + 1], nodeX[i]);\\r\\n                    if (i != 0) i--;\\r\\n                } else {\\r\\n                    i++;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            for (i = 0; i \\u003c nodes; i += 2) {\\r\\n                \\r\\n                if (nodeX[i] \\u003e= int32(f.chunk.startX) + int16(f.chunk.chunkHeight)) break;\\r\\n                if (nodeX[i + 1] \\u003c= int32(f.chunk.startX)) continue;\\r\\n                if (nodeX[i] \\u003c int32(f.chunk.startX)) nodeX[i] = int32(f.chunk.startX);                \\r\\n                if (nodeX[i + 1] \\u003e int32(f.chunk.startX) + int16(f.chunk.chunkHeight))\\r\\n                    nodeX[i + 1] = int32(int32(f.chunk.startX) + int16(f.chunk.chunkHeight));\\r\\n\\r\\n                for (\\r\\n                    int32 pixelX = nodeX[i];\\r\\n                    pixelX \\u003c nodeX[i + 1];\\r\\n                    pixelX++\\r\\n                ) {\\r\\n                    if (pixelX \\u003e= int32(f.chunk.startX) + int16(f.chunk.chunkHeight)) continue;\\r\\n\\r\\n                    int32 px = int32(pixelX) - int32(f.chunk.startX);\\r\\n                    int32 py = int32(pixelY) - int32(f.chunk.startY);\\r\\n\\r\\n                    if (\\r\\n                        px \\u003e= 0 \\u0026\\u0026\\r\\n                        px \\u003c int16(f.chunk.chunkWidth) \\u0026\\u0026\\r\\n                        py \\u003e= 0 \\u0026\\u0026\\r\\n                        py \\u003c int16(f.chunk.chunkHeight)\\r\\n                    ) {\\r\\n                        GraphicsV1.setPixel(\\r\\n                            result,\\r\\n                            f.chunk.chunkWidth,\\r\\n                            px,\\r\\n                            py,\\r\\n                            f.fillColor\\r\\n                        );\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (f.strokeColor == f.fillColor) return;\\r\\n\\r\\n        {\\r\\n            uint256 j = f.vertices.length - 1;\\r\\n            for (uint256 i = 0; i \\u003c f.vertices.length; i++) {\\r\\n                TypesV1.Point2D memory a = f.vertices[i];\\r\\n                TypesV1.Point2D memory b = f.vertices[j];\\r\\n                line(result, GeometryV1.Line2D(a, b, f.strokeColor, f.chunk));\\r\\n                j = i;\\r\\n            }\\r\\n            line(\\r\\n                result,\\r\\n                GeometryV1.Line2D(\\r\\n                    f.vertices[f.vertices.length - 1],\\r\\n                    f.vertices[0],\\r\\n                    f.strokeColor,\\r\\n                    f.chunk\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Renders a number from a random series of numbers having a mean of 0 and standard deviation of 1.\\r\\n     * @notice https://processing.org/reference/randomGaussian_.html\\r\\n     */\\r\\n    function randomGaussian(RandomV1.PRNG memory prng)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64) {\\r\\n        return RandomV1.nextGaussian(prng);\\r\\n    }\\r\\n}\"},\"RandomV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"Fix64V1.sol\\\";\\r\\nimport \\\"Trig256.sol\\\";\\r\\nimport \\\"MathV1.sol\\\";\\r\\n\\r\\n/*\\r\\n    A pseudo-random number generator, adapted from and matching the algorithm for .NET maximum compatibility Random implementation.\\r\\n\\r\\n    See: https://github.com/dotnet/runtime/blob/f7633f498a8be34bee739b240a0aa9ae6a660cd9/src/libraries/System.Private.CoreLib/src/System/Random.Net5CompatImpl.cs#L192\\r\\n         https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\\r\\n\\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    The MIT License (MIT)\\r\\n\\r\\n    Copyright (c) .NET Foundation and Contributors\\r\\n\\r\\n    All rights reserved.\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n*/\\r\\n\\r\\nlibrary RandomV1 {\\r\\n\\r\\n    int32 private constant MBIG = 0x7fffffff;\\r\\n    int32 private constant MSEED = 161803398;\\r\\n\\r\\n    struct PRNG {\\r\\n        int32[56] _seedArray;\\r\\n        int32 _inext;\\r\\n        int32 _inextp;\\r\\n    }\\r\\n    \\r\\n    function buildSeedTable(int32 seed) internal pure returns(PRNG memory prng) {\\r\\n        uint8 ii = 0;\\r\\n        int32 mj;\\r\\n        int32 mk;\\r\\n\\r\\n        int32 subtraction = (seed == type(int32).min) ? type(int32).max : int32(MathV1.abs(seed));\\r\\n        mj = MSEED - subtraction;\\r\\n        prng._seedArray[55] = mj;\\r\\n        mk = 1;\\r\\n        for (uint8 i = 1; i \\u003c 55; i++) {  \\r\\n            if ((ii += 21) \\u003e= 55) {\\r\\n                ii -= 55;\\r\\n            }\\r\\n            prng._seedArray[uint64(ii)] = mk;\\r\\n            mk = mj - mk;\\r\\n            if (mk \\u003c 0) mk += MBIG;\\r\\n            mj = prng._seedArray[uint8(ii)];\\r\\n        }\\r\\n\\r\\n        for (uint8 k = 1; k \\u003c 5; k++) {\\r\\n\\r\\n            for (uint8 i = 1; i \\u003c 56; i++) {                \\r\\n                uint8 n = i + 30;           \\r\\n                if (n \\u003e= 55) {\\r\\n                    n -= 55;                \\r\\n                }\\r\\n\\r\\n                int64 an = prng._seedArray[1 + n];                \\r\\n                int64 ai = prng._seedArray[i];\\r\\n                prng._seedArray[i] = int32(ai - an);\\r\\n                \\r\\n                if (prng._seedArray[i] \\u003c 0) {\\r\\n                    int64 x = prng._seedArray[i];\\r\\n                    x += MBIG;\\r\\n                    prng._seedArray[i] = int32(x);\\r\\n                }               \\r\\n            }\\r\\n        }\\r\\n\\r\\n        prng._inextp = 21;\\r\\n    }   \\r\\n\\r\\n    function next(PRNG memory prng, int32 maxValue) internal pure returns (int32) {\\r\\n        require(maxValue \\u003e= 0, \\\"maxValue \\u003c 0\\\");\\r\\n\\r\\n        int32 retval = next(prng);\\r\\n\\r\\n        int64 fretval = retval * Fix64V1.ONE;\\r\\n        int64 sample = Fix64V1.mul(fretval, Fix64V1.div(Fix64V1.ONE, MBIG * Fix64V1.ONE));\\r\\n        int64 sr = Fix64V1.mul(sample, maxValue * Fix64V1.ONE);\\r\\n        int32 r = int32(sr \\u003e\\u003e 32 /* FRACTIONAL_PLACES */);\\r\\n\\r\\n        return r;\\r\\n    }\\r\\n\\r\\n    function next(PRNG memory prng, int32 minValue, int32 maxValue) internal pure returns(int32) {\\r\\n        require(maxValue \\u003e minValue, \\\"maxValue \\u003c= minValue\\\");\\r\\n        \\r\\n        int64 range = maxValue - minValue;\\r\\n        \\r\\n        if (range \\u003c= type(int32).max) {\\r\\n            int32 retval = next(prng);\\r\\n\\r\\n            int64 fretval = retval * Fix64V1.ONE;\\r\\n            int64 sample = Fix64V1.mul(fretval, Fix64V1.div(Fix64V1.ONE, MBIG * Fix64V1.ONE));\\r\\n            int64 sr = Fix64V1.mul(sample, range * Fix64V1.ONE);\\r\\n            int32 r = int32(sr \\u003e\\u003e 32  /* FRACTIONAL_PLACES */) + minValue;\\r\\n            \\r\\n            return r;\\r\\n        }\\r\\n        else {\\r\\n            int64 fretval = nextForLargeRange(prng);\\r\\n            int64 sr = Fix64V1.mul(fretval, range * Fix64V1.ONE);\\r\\n            int32 r = int32(sr \\u003e\\u003e 32  /* FRACTIONAL_PLACES */) + minValue;\\r\\n            return r;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function next(PRNG memory prng) internal pure returns(int32) {\\r\\n\\r\\n        int64 retVal;        \\r\\n        int32 locINext = prng._inext;\\r\\n        int32 locINextp = prng._inextp;\\r\\n\\r\\n        if (++locINext \\u003e= 56) locINext = 1;\\r\\n        if (++locINextp \\u003e= 56) locINextp = 1;\\r\\n\\r\\n        int64 a = int64(prng._seedArray[uint32(locINext)]);\\r\\n        int64 b = int64(prng._seedArray[uint32(locINextp)]);\\r\\n        retVal = a - b;        \\r\\n\\r\\n        if (retVal == MBIG) {\\r\\n            retVal--;\\r\\n        }\\r\\n        if (retVal \\u003c 0) {\\r\\n            retVal += MBIG;\\r\\n        }\\r\\n\\r\\n        prng._seedArray[uint32(locINext)] = int32(retVal);\\r\\n        prng._inext = locINext;\\r\\n        prng._inextp = locINextp;        \\r\\n\\r\\n        int32 r = int32(retVal);\\r\\n        return r;\\r\\n    }\\r\\n\\r\\n    function nextForLargeRange(PRNG memory prng) private pure returns(int64) {\\r\\n\\r\\n        int sample1 = next(prng);\\r\\n        int sample2 = next(prng);\\r\\n\\r\\n        bool negative = sample2 % 2 == 0;\\r\\n        if (negative) {\\r\\n            sample1 = -sample1;\\r\\n        }\\r\\n\\r\\n        int64 d = int64(sample1) * Fix64V1.ONE;\\r\\n        d = Fix64V1.add(int64(d), (type(int32).max - 1));\\r\\n        d = Fix64V1.div(int64(d), int64(2) * (type(int32).max - 1));\\r\\n\\r\\n        return d; \\r\\n    }\\r\\n\\r\\n    function nextGaussian(PRNG memory prng) internal pure returns (int64 randNormal) {\\r\\n        int64 u1 = Fix64V1.sub(Fix64V1.ONE, Fix64V1.mul(next(prng) * Fix64V1.ONE, Fix64V1.div(Fix64V1.ONE, Fix64V1.MAX_VALUE)));\\r\\n        int64 u2 = Fix64V1.sub(Fix64V1.ONE, Fix64V1.mul(next(prng) * Fix64V1.ONE, Fix64V1.div(Fix64V1.ONE, Fix64V1.MAX_VALUE)));\\r\\n        int64 sqrt = Trig256.sqrt(Fix64V1.mul(-2 * Fix64V1.ONE, Trig256.log(u1)));\\r\\n        int64 randStdNormal = Fix64V1.mul(sqrt, Trig256.sin(Fix64V1.mul(Fix64V1.TWO, Fix64V1.mul(Fix64V1.PI, u2))));\\r\\n        randNormal = Fix64V1.add(0, Fix64V1.mul(Fix64V1.ONE, randStdNormal));\\r\\n        return randNormal;\\r\\n    }\\r\\n}\"},\"SinLut256.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary SinLut256 {\\r\\n    /**\\r\\n     * @notice Lookup tables for computing the sine value for a given angle.\\r\\n     * @param i The clamped and rounded angle integral to index into the table.\\r\\n     * @return The sine value in fixed-point (Q31.32) space.\\r\\n     */\\r\\n    function sinlut(int256 i) external pure returns (int64) {\\r\\n        if (i \\u003c= 127) {\\r\\n            if (i \\u003c= 63) {\\r\\n                if (i \\u003c= 31) {\\r\\n                    if (i \\u003c= 15) {\\r\\n                        if (i \\u003c= 7) {\\r\\n                            if (i \\u003c= 3) {\\r\\n                                if (i \\u003c= 1) {\\r\\n                                    if (i == 0) {\\r\\n                                        return 0;\\r\\n                                    } else {\\r\\n                                        return 26456769;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 2) {\\r\\n                                        return 52912534;\\r\\n                                    } else {\\r\\n                                        return 79366292;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 5) {\\r\\n                                    if (i == 4) {\\r\\n                                        return 105817038;\\r\\n                                    } else {\\r\\n                                        return 132263769;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 6) {\\r\\n                                        return 158705481;\\r\\n                                    } else {\\r\\n                                        return 185141171;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 11) {\\r\\n                                if (i \\u003c= 9) {\\r\\n                                    if (i == 8) {\\r\\n                                        return 211569835;\\r\\n                                    } else {\\r\\n                                        return 237990472;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 10) {\\r\\n                                        return 264402078;\\r\\n                                    } else {\\r\\n                                        return 290803651;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 13) {\\r\\n                                    if (i == 12) {\\r\\n                                        return 317194190;\\r\\n                                    } else {\\r\\n                                        return 343572692;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 14) {\\r\\n                                        return 369938158;\\r\\n                                    } else {\\r\\n                                        return 396289586;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 23) {\\r\\n                            if (i \\u003c= 19) {\\r\\n                                if (i \\u003c= 17) {\\r\\n                                    if (i == 16) {\\r\\n                                        return 422625977;\\r\\n                                    } else {\\r\\n                                        return 448946331;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 18) {\\r\\n                                        return 475249649;\\r\\n                                    } else {\\r\\n                                        return 501534935;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 21) {\\r\\n                                    if (i == 20) {\\r\\n                                        return 527801189;\\r\\n                                    } else {\\r\\n                                        return 554047416;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 22) {\\r\\n                                        return 580272619;\\r\\n                                    } else {\\r\\n                                        return 606475804;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 27) {\\r\\n                                if (i \\u003c= 25) {\\r\\n                                    if (i == 24) {\\r\\n                                        return 632655975;\\r\\n                                    } else {\\r\\n                                        return 658812141;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 26) {\\r\\n                                        return 684943307;\\r\\n                                    } else {\\r\\n                                        return 711048483;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 29) {\\r\\n                                    if (i == 28) {\\r\\n                                        return 737126679;\\r\\n                                    } else {\\r\\n                                        return 763176903;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 30) {\\r\\n                                        return 789198169;\\r\\n                                    } else {\\r\\n                                        return 815189489;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    if (i \\u003c= 47) {\\r\\n                        if (i \\u003c= 39) {\\r\\n                            if (i \\u003c= 35) {\\r\\n                                if (i \\u003c= 33) {\\r\\n                                    if (i == 32) {\\r\\n                                        return 841149875;\\r\\n                                    } else {\\r\\n                                        return 867078344;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 34) {\\r\\n                                        return 892973912;\\r\\n                                    } else {\\r\\n                                        return 918835595;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 37) {\\r\\n                                    if (i == 36) {\\r\\n                                        return 944662413;\\r\\n                                    } else {\\r\\n                                        return 970453386;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 38) {\\r\\n                                        return 996207534;\\r\\n                                    } else {\\r\\n                                        return 1021923881;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 43) {\\r\\n                                if (i \\u003c= 41) {\\r\\n                                    if (i == 40) {\\r\\n                                        return 1047601450;\\r\\n                                    } else {\\r\\n                                        return 1073239268;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 42) {\\r\\n                                        return 1098836362;\\r\\n                                    } else {\\r\\n                                        return 1124391760;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 45) {\\r\\n                                    if (i == 44) {\\r\\n                                        return 1149904493;\\r\\n                                    } else {\\r\\n                                        return 1175373592;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 46) {\\r\\n                                        return 1200798091;\\r\\n                                    } else {\\r\\n                                        return 1226177026;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 55) {\\r\\n                            if (i \\u003c= 51) {\\r\\n                                if (i \\u003c= 49) {\\r\\n                                    if (i == 48) {\\r\\n                                        return 1251509433;\\r\\n                                    } else {\\r\\n                                        return 1276794351;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 50) {\\r\\n                                        return 1302030821;\\r\\n                                    } else {\\r\\n                                        return 1327217884;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 53) {\\r\\n                                    if (i == 52) {\\r\\n                                        return 1352354586;\\r\\n                                    } else {\\r\\n                                        return 1377439973;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 54) {\\r\\n                                        return 1402473092;\\r\\n                                    } else {\\r\\n                                        return 1427452994;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 59) {\\r\\n                                if (i \\u003c= 57) {\\r\\n                                    if (i == 56) {\\r\\n                                        return 1452378731;\\r\\n                                    } else {\\r\\n                                        return 1477249357;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 58) {\\r\\n                                        return 1502063928;\\r\\n                                    } else {\\r\\n                                        return 1526821503;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 61) {\\r\\n                                    if (i == 60) {\\r\\n                                        return 1551521142;\\r\\n                                    } else {\\r\\n                                        return 1576161908;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 62) {\\r\\n                                        return 1600742866;\\r\\n                                    } else {\\r\\n                                        return 1625263084;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            } else {\\r\\n                if (i \\u003c= 95) {\\r\\n                    if (i \\u003c= 79) {\\r\\n                        if (i \\u003c= 71) {\\r\\n                            if (i \\u003c= 67) {\\r\\n                                if (i \\u003c= 65) {\\r\\n                                    if (i == 64) {\\r\\n                                        return 1649721630;\\r\\n                                    } else {\\r\\n                                        return 1674117578;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 66) {\\r\\n                                        return 1698450000;\\r\\n                                    } else {\\r\\n                                        return 1722717974;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 69) {\\r\\n                                    if (i == 68) {\\r\\n                                        return 1746920580;\\r\\n                                    } else {\\r\\n                                        return 1771056897;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 70) {\\r\\n                                        return 1795126012;\\r\\n                                    } else {\\r\\n                                        return 1819127010;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 75) {\\r\\n                                if (i \\u003c= 73) {\\r\\n                                    if (i == 72) {\\r\\n                                        return 1843058980;\\r\\n                                    } else {\\r\\n                                        return 1866921015;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 74) {\\r\\n                                        return 1890712210;\\r\\n                                    } else {\\r\\n                                        return 1914431660;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 77) {\\r\\n                                    if (i == 76) {\\r\\n                                        return 1938078467;\\r\\n                                    } else {\\r\\n                                        return 1961651733;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 78) {\\r\\n                                        return 1985150563;\\r\\n                                    } else {\\r\\n                                        return 2008574067;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 87) {\\r\\n                            if (i \\u003c= 83) {\\r\\n                                if (i \\u003c= 81) {\\r\\n                                    if (i == 80) {\\r\\n                                        return 2031921354;\\r\\n                                    } else {\\r\\n                                        return 2055191540;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 82) {\\r\\n                                        return 2078383740;\\r\\n                                    } else {\\r\\n                                        return 2101497076;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 85) {\\r\\n                                    if (i == 84) {\\r\\n                                        return 2124530670;\\r\\n                                    } else {\\r\\n                                        return 2147483647;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 86) {\\r\\n                                        return 2170355138;\\r\\n                                    } else {\\r\\n                                        return 2193144275;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 91) {\\r\\n                                if (i \\u003c= 89) {\\r\\n                                    if (i == 88) {\\r\\n                                        return 2215850191;\\r\\n                                    } else {\\r\\n                                        return 2238472027;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 90) {\\r\\n                                        return 2261008923;\\r\\n                                    } else {\\r\\n                                        return 2283460024;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 93) {\\r\\n                                    if (i == 92) {\\r\\n                                        return 2305824479;\\r\\n                                    } else {\\r\\n                                        return 2328101438;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 94) {\\r\\n                                        return 2350290057;\\r\\n                                    } else {\\r\\n                                        return 2372389494;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    if (i \\u003c= 111) {\\r\\n                        if (i \\u003c= 103) {\\r\\n                            if (i \\u003c= 99) {\\r\\n                                if (i \\u003c= 97) {\\r\\n                                    if (i == 96) {\\r\\n                                        return 2394398909;\\r\\n                                    } else {\\r\\n                                        return 2416317469;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 98) {\\r\\n                                        return 2438144340;\\r\\n                                    } else {\\r\\n                                        return 2459878695;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 101) {\\r\\n                                    if (i == 100) {\\r\\n                                        return 2481519710;\\r\\n                                    } else {\\r\\n                                        return 2503066562;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 102) {\\r\\n                                        return 2524518435;\\r\\n                                    } else {\\r\\n                                        return 2545874514;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 107) {\\r\\n                                if (i \\u003c= 105) {\\r\\n                                    if (i == 104) {\\r\\n                                        return 2567133990;\\r\\n                                    } else {\\r\\n                                        return 2588296054;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 106) {\\r\\n                                        return 2609359905;\\r\\n                                    } else {\\r\\n                                        return 2630324743;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 109) {\\r\\n                                    if (i == 108) {\\r\\n                                        return 2651189772;\\r\\n                                    } else {\\r\\n                                        return 2671954202;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 110) {\\r\\n                                        return 2692617243;\\r\\n                                    } else {\\r\\n                                        return 2713178112;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 119) {\\r\\n                            if (i \\u003c= 115) {\\r\\n                                if (i \\u003c= 113) {\\r\\n                                    if (i == 112) {\\r\\n                                        return 2733636028;\\r\\n                                    } else {\\r\\n                                        return 2753990216;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 114) {\\r\\n                                        return 2774239903;\\r\\n                                    } else {\\r\\n                                        return 2794384321;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 117) {\\r\\n                                    if (i == 116) {\\r\\n                                        return 2814422705;\\r\\n                                    } else {\\r\\n                                        return 2834354295;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 118) {\\r\\n                                        return 2854178334;\\r\\n                                    } else {\\r\\n                                        return 2873894071;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 123) {\\r\\n                                if (i \\u003c= 121) {\\r\\n                                    if (i == 120) {\\r\\n                                        return 2893500756;\\r\\n                                    } else {\\r\\n                                        return 2912997648;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 122) {\\r\\n                                        return 2932384004;\\r\\n                                    } else {\\r\\n                                        return 2951659090;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 125) {\\r\\n                                    if (i == 124) {\\r\\n                                        return 2970822175;\\r\\n                                    } else {\\r\\n                                        return 2989872531;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 126) {\\r\\n                                        return 3008809435;\\r\\n                                    } else {\\r\\n                                        return 3027632170;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            if (i \\u003c= 191) {\\r\\n                if (i \\u003c= 159) {\\r\\n                    if (i \\u003c= 143) {\\r\\n                        if (i \\u003c= 135) {\\r\\n                            if (i \\u003c= 131) {\\r\\n                                if (i \\u003c= 129) {\\r\\n                                    if (i == 128) {\\r\\n                                        return 3046340019;\\r\\n                                    } else {\\r\\n                                        return 3064932275;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 130) {\\r\\n                                        return 3083408230;\\r\\n                                    } else {\\r\\n                                        return 3101767185;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 133) {\\r\\n                                    if (i == 132) {\\r\\n                                        return 3120008443;\\r\\n                                    } else {\\r\\n                                        return 3138131310;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 134) {\\r\\n                                        return 3156135101;\\r\\n                                    } else {\\r\\n                                        return 3174019130;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 139) {\\r\\n                                if (i \\u003c= 137) {\\r\\n                                    if (i == 136) {\\r\\n                                        return 3191782721;\\r\\n                                    } else {\\r\\n                                        return 3209425199;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 138) {\\r\\n                                        return 3226945894;\\r\\n                                    } else {\\r\\n                                        return 3244344141;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 141) {\\r\\n                                    if (i == 140) {\\r\\n                                        return 3261619281;\\r\\n                                    } else {\\r\\n                                        return 3278770658;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 142) {\\r\\n                                        return 3295797620;\\r\\n                                    } else {\\r\\n                                        return 3312699523;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 151) {\\r\\n                            if (i \\u003c= 147) {\\r\\n                                if (i \\u003c= 145) {\\r\\n                                    if (i == 144) {\\r\\n                                        return 3329475725;\\r\\n                                    } else {\\r\\n                                        return 3346125588;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 146) {\\r\\n                                        return 3362648482;\\r\\n                                    } else {\\r\\n                                        return 3379043779;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 149) {\\r\\n                                    if (i == 148) {\\r\\n                                        return 3395310857;\\r\\n                                    } else {\\r\\n                                        return 3411449099;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 150) {\\r\\n                                        return 3427457892;\\r\\n                                    } else {\\r\\n                                        return 3443336630;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 155) {\\r\\n                                if (i \\u003c= 153) {\\r\\n                                    if (i == 152) {\\r\\n                                        return 3459084709;\\r\\n                                    } else {\\r\\n                                        return 3474701532;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 154) {\\r\\n                                        return 3490186507;\\r\\n                                    } else {\\r\\n                                        return 3505539045;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 157) {\\r\\n                                    if (i == 156) {\\r\\n                                        return 3520758565;\\r\\n                                    } else {\\r\\n                                        return 3535844488;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 158) {\\r\\n                                        return 3550796243;\\r\\n                                    } else {\\r\\n                                        return 3565613262;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    if (i \\u003c= 175) {\\r\\n                        if (i \\u003c= 167) {\\r\\n                            if (i \\u003c= 163) {\\r\\n                                if (i \\u003c= 161) {\\r\\n                                    if (i == 160) {\\r\\n                                        return 3580294982;\\r\\n                                    } else {\\r\\n                                        return 3594840847;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 162) {\\r\\n                                        return 3609250305;\\r\\n                                    } else {\\r\\n                                        return 3623522808;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 165) {\\r\\n                                    if (i == 164) {\\r\\n                                        return 3637657816;\\r\\n                                    } else {\\r\\n                                        return 3651654792;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 166) {\\r\\n                                        return 3665513205;\\r\\n                                    } else {\\r\\n                                        return 3679232528;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 171) {\\r\\n                                if (i \\u003c= 169) {\\r\\n                                    if (i == 168) {\\r\\n                                        return 3692812243;\\r\\n                                    } else {\\r\\n                                        return 3706251832;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 170) {\\r\\n                                        return 3719550786;\\r\\n                                    } else {\\r\\n                                        return 3732708601;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 173) {\\r\\n                                    if (i == 172) {\\r\\n                                        return 3745724777;\\r\\n                                    } else {\\r\\n                                        return 3758598821;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 174) {\\r\\n                                        return 3771330243;\\r\\n                                    } else {\\r\\n                                        return 3783918561;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 183) {\\r\\n                            if (i \\u003c= 179) {\\r\\n                                if (i \\u003c= 177) {\\r\\n                                    if (i == 176) {\\r\\n                                        return 3796363297;\\r\\n                                    } else {\\r\\n                                        return 3808663979;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 178) {\\r\\n                                        return 3820820141;\\r\\n                                    } else {\\r\\n                                        return 3832831319;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 181) {\\r\\n                                    if (i == 180) {\\r\\n                                        return 3844697060;\\r\\n                                    } else {\\r\\n                                        return 3856416913;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 182) {\\r\\n                                        return 3867990433;\\r\\n                                    } else {\\r\\n                                        return 3879417181;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 187) {\\r\\n                                if (i \\u003c= 185) {\\r\\n                                    if (i == 184) {\\r\\n                                        return 3890696723;\\r\\n                                    } else {\\r\\n                                        return 3901828632;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 186) {\\r\\n                                        return 3912812484;\\r\\n                                    } else {\\r\\n                                        return 3923647863;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 189) {\\r\\n                                    if (i == 188) {\\r\\n                                        return 3934334359;\\r\\n                                    } else {\\r\\n                                        return 3944871565;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 190) {\\r\\n                                        return 3955259082;\\r\\n                                    } else {\\r\\n                                        return 3965496515;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            } else {\\r\\n                if (i \\u003c= 223) {\\r\\n                    if (i \\u003c= 207) {\\r\\n                        if (i \\u003c= 199) {\\r\\n                            if (i \\u003c= 195) {\\r\\n                                if (i \\u003c= 193) {\\r\\n                                    if (i == 192) {\\r\\n                                        return 3975583476;\\r\\n                                    } else {\\r\\n                                        return 3985519583;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 194) {\\r\\n                                        return 3995304457;\\r\\n                                    } else {\\r\\n                                        return 4004937729;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 197) {\\r\\n                                    if (i == 196) {\\r\\n                                        return 4014419032;\\r\\n                                    } else {\\r\\n                                        return 4023748007;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 198) {\\r\\n                                        return 4032924300;\\r\\n                                    } else {\\r\\n                                        return 4041947562;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 203) {\\r\\n                                if (i \\u003c= 201) {\\r\\n                                    if (i == 200) {\\r\\n                                        return 4050817451;\\r\\n                                    } else {\\r\\n                                        return 4059533630;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 202) {\\r\\n                                        return 4068095769;\\r\\n                                    } else {\\r\\n                                        return 4076503544;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 205) {\\r\\n                                    if (i == 204) {\\r\\n                                        return 4084756634;\\r\\n                                    } else {\\r\\n                                        return 4092854726;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 206) {\\r\\n                                        return 4100797514;\\r\\n                                    } else {\\r\\n                                        return 4108584696;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 215) {\\r\\n                            if (i \\u003c= 211) {\\r\\n                                if (i \\u003c= 209) {\\r\\n                                    if (i == 208) {\\r\\n                                        return 4116215977;\\r\\n                                    } else {\\r\\n                                        return 4123691067;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 210) {\\r\\n                                        return 4131009681;\\r\\n                                    } else {\\r\\n                                        return 4138171544;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 213) {\\r\\n                                    if (i == 212) {\\r\\n                                        return 4145176382;\\r\\n                                    } else {\\r\\n                                        return 4152023930;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 214) {\\r\\n                                        return 4158713929;\\r\\n                                    } else {\\r\\n                                        return 4165246124;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 219) {\\r\\n                                if (i \\u003c= 217) {\\r\\n                                    if (i == 216) {\\r\\n                                        return 4171620267;\\r\\n                                    } else {\\r\\n                                        return 4177836117;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 218) {\\r\\n                                        return 4183893437;\\r\\n                                    } else {\\r\\n                                        return 4189791999;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 221) {\\r\\n                                    if (i == 220) {\\r\\n                                        return 4195531577;\\r\\n                                    } else {\\r\\n                                        return 4201111955;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 222) {\\r\\n                                        return 4206532921;\\r\\n                                    } else {\\r\\n                                        return 4211794268;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    if (i \\u003c= 239) {\\r\\n                        if (i \\u003c= 231) {\\r\\n                            if (i \\u003c= 227) {\\r\\n                                if (i \\u003c= 225) {\\r\\n                                    if (i == 224) {\\r\\n                                        return 4216895797;\\r\\n                                    } else {\\r\\n                                        return 4221837315;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 226) {\\r\\n                                        return 4226618635;\\r\\n                                    } else {\\r\\n                                        return 4231239573;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 229) {\\r\\n                                    if (i == 228) {\\r\\n                                        return 4235699957;\\r\\n                                    } else {\\r\\n                                        return 4239999615;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 230) {\\r\\n                                        return 4244138385;\\r\\n                                    } else {\\r\\n                                        return 4248116110;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 235) {\\r\\n                                if (i \\u003c= 233) {\\r\\n                                    if (i == 232) {\\r\\n                                        return 4251932639;\\r\\n                                    } else {\\r\\n                                        return 4255587827;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 234) {\\r\\n                                        return 4259081536;\\r\\n                                    } else {\\r\\n                                        return 4262413632;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 237) {\\r\\n                                    if (i == 236) {\\r\\n                                        return 4265583990;\\r\\n                                    } else {\\r\\n                                        return 4268592489;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 238) {\\r\\n                                        return 4271439015;\\r\\n                                    } else {\\r\\n                                        return 4274123460;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    } else {\\r\\n                        if (i \\u003c= 247) {\\r\\n                            if (i \\u003c= 243) {\\r\\n                                if (i \\u003c= 241) {\\r\\n                                    if (i == 240) {\\r\\n                                        return 4276645722;\\r\\n                                    } else {\\r\\n                                        return 4279005706;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 242) {\\r\\n                                        return 4281203321;\\r\\n                                    } else {\\r\\n                                        return 4283238485;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 245) {\\r\\n                                    if (i == 244) {\\r\\n                                        return 4285111119;\\r\\n                                    } else {\\r\\n                                        return 4286821154;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 246) {\\r\\n                                        return 4288368525;\\r\\n                                    } else {\\r\\n                                        return 4289753172;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        } else {\\r\\n                            if (i \\u003c= 251) {\\r\\n                                if (i \\u003c= 249) {\\r\\n                                    if (i == 248) {\\r\\n                                        return 4290975043;\\r\\n                                    } else {\\r\\n                                        return 4292034091;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 250) {\\r\\n                                        return 4292930277;\\r\\n                                    } else {\\r\\n                                        return 4293663567;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                if (i \\u003c= 253) {\\r\\n                                    if (i == 252) {\\r\\n                                        return 4294233932;\\r\\n                                    } else {\\r\\n                                        return 4294641351;\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    if (i == 254) {\\r\\n                                        return 4294885809;\\r\\n                                    } else {\\r\\n                                        return 4294967296;\\r\\n                                    }\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"},\"Trig256.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"Fix64V1.sol\\\";\\r\\nimport \\\"SinLut256.sol\\\";\\r\\n\\r\\n/*\\r\\n    Provides trigonometric functions in Q31.Q32 format.\\r\\n\\r\\n    exp: Adapted from Petteri Aimonen\\u0027s libfixmath\\r\\n\\r\\n    See: https://github.com/PetteriAimonen/libfixmath\\r\\n         https://github.com/PetteriAimonen/libfixmath/blob/master/LICENSE\\r\\n\\r\\n    other functions: Adapted from André Slupik\\u0027s FixedMath.NET\\r\\n                     https://github.com/asik/FixedMath.Net/blob/master/LICENSE.txt\\r\\n         \\r\\n    THIRD PARTY NOTICES:\\r\\n    ====================\\r\\n\\r\\n    libfixmath is Copyright (c) 2011-2021 Flatmush \\u003cFlatmush@gmail.com\\u003e,\\r\\n    Petteri Aimonen \\u003cPetteri.Aimonen@gmail.com\\u003e, \\u0026 libfixmath AUTHORS\\r\\n\\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n    of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n    in the Software without restriction, including without limitation the rights\\r\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n    copies of the Software, and to permit persons to whom the Software is\\r\\n    furnished to do so, subject to the following conditions:\\r\\n\\r\\n    The above copyright notice and this permission notice shall be included in all\\r\\n    copies or substantial portions of the Software.\\r\\n\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n    SOFTWARE.\\r\\n\\r\\n    Copyright 2012 André Slupik\\r\\n\\r\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n    you may not use this file except in compliance with the License.\\r\\n    You may obtain a copy of the License at\\r\\n\\r\\n        http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n    Unless required by applicable law or agreed to in writing, software\\r\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n    See the License for the specific language governing permissions and\\r\\n    limitations under the License.\\r\\n\\r\\n    This project uses code from the log2fix library, which is under the following license:           \\r\\n    The MIT License (MIT)\\r\\n\\r\\n    Copyright (c) 2015 Dan Moulding\\r\\n    \\r\\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), \\r\\n    to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, \\r\\n    and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\r\\n    \\r\\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\r\\n    THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\r\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\\r\\n    IN THE SOFTWARE.\\r\\n*/\\r\\n\\r\\nlibrary Trig256 {\\r\\n    int64 private constant LARGE_PI = 7244019458077122842;\\r\\n    int64 private constant LN2 = 0xB17217F7;\\r\\n    int64 private constant LN_MAX = 0x157CD0E702;\\r\\n    int64 private constant LN_MIN = -0x162E42FEFA;\\r\\n    int64 private constant E = -0x2B7E15162;\\r\\n\\r\\n    function sin(int64 x)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {       \\r\\n        (\\r\\n            int64 clamped,\\r\\n            bool flipHorizontal,\\r\\n            bool flipVertical\\r\\n        ) = clamp(x);\\r\\n\\r\\n        int64 lutInterval = Fix64V1.div(((256 - 1) * Fix64V1.ONE), Fix64V1.PI_OVER_2);\\r\\n        int rawIndex = Fix64V1.mul_256(clamped, lutInterval);\\r\\n        int64 roundedIndex = int64(Fix64V1.round(rawIndex));\\r\\n        int64 indexError = Fix64V1.sub(int64(rawIndex), roundedIndex);     \\r\\n\\r\\n        roundedIndex = roundedIndex \\u003e\\u003e 32; /* FRACTIONAL_PLACES */\\r\\n\\r\\n        int64 nearestValueIndex = flipHorizontal\\r\\n            ? (256 - 1) - roundedIndex\\r\\n            : roundedIndex;\\r\\n\\r\\n        int64 nearestValue = SinLut256.sinlut(nearestValueIndex);\\r\\n\\r\\n        int64 secondNearestValue = SinLut256.sinlut(\\r\\n            flipHorizontal\\r\\n                ? (256 - 1) -\\r\\n                    roundedIndex -\\r\\n                    Fix64V1.sign(indexError)\\r\\n                : roundedIndex + Fix64V1.sign(indexError)\\r\\n        );\\r\\n\\r\\n        int64 delta = Fix64V1.mul(indexError, Fix64V1.abs(Fix64V1.sub(nearestValue, secondNearestValue)));\\r\\n        int64 interpolatedValue = nearestValue + (flipHorizontal ? -delta : delta);\\r\\n        int64 finalValue = flipVertical ? -interpolatedValue: interpolatedValue;\\r\\n    \\r\\n        return finalValue;\\r\\n    }\\r\\n\\r\\n    function cos(int64 x)\\r\\n        internal\\r\\n        pure\\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 xl = x;\\r\\n        int64 angle;\\r\\n        if(xl \\u003e 0) {            \\r\\n            angle = Fix64V1.add(xl, Fix64V1.sub(0 - Fix64V1.PI, Fix64V1.PI_OVER_2));            \\r\\n        } else {            \\r\\n            angle = Fix64V1.add(xl, Fix64V1.PI_OVER_2);\\r\\n        }        \\r\\n        return sin(angle);\\r\\n    }\\r\\n\\r\\n    function sqrt(int64 x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int64)\\r\\n    {\\r\\n        int64 xl = x;\\r\\n        if (xl \\u003c 0)\\r\\n            revert(\\\"negative value passed to sqrt\\\");\\r\\n\\r\\n        uint64 num = uint64(xl);\\r\\n        uint64 result = uint64(0);\\r\\n        uint64 bit = uint64(1) \\u003c\\u003c (64 - 2);\\r\\n\\r\\n        while (bit \\u003e num) bit \\u003e\\u003e= 2;\\r\\n        for (uint8 i = 0; i \\u003c 2; ++i)\\r\\n        {\\r\\n            while (bit != 0)\\r\\n            {\\r\\n                if (num \\u003e= result + bit)\\r\\n                {\\r\\n                    num -= result + bit;\\r\\n                    result = (result \\u003e\\u003e 1) + bit;\\r\\n                }\\r\\n                else\\r\\n                {\\r\\n                    result = result \\u003e\\u003e 1;\\r\\n                }\\r\\n\\r\\n                bit \\u003e\\u003e= 2;\\r\\n            }\\r\\n\\r\\n            if (i == 0)\\r\\n            {\\r\\n                if (num \\u003e (uint64(1) \\u003c\\u003c (64 / 2)) - 1)\\r\\n                {\\r\\n                    num -= result;\\r\\n                    num = (num \\u003c\\u003c (64 / 2)) - uint64(0x80000000);\\r\\n                    result = (result \\u003c\\u003c (64 / 2)) + uint64(0x80000000);\\r\\n                }\\r\\n                else\\r\\n                {\\r\\n                    num \\u003c\\u003c= 64 / 2;\\r\\n                    result \\u003c\\u003c= 64 / 2;\\r\\n                }\\r\\n\\r\\n                bit = uint64(1) \\u003c\\u003c (64 / 2 - 2);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (num \\u003e result) ++result;\\r\\n        return int64(result);\\r\\n    }\\r\\n\\r\\n     function log2_256(int x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int)\\r\\n    {\\r\\n        if (x \\u003c= 0) {\\r\\n            revert(\\\"negative value passed to log2_256\\\");\\r\\n        }\\r\\n\\r\\n        // This implementation is based on Clay. S. Turner\\u0027s fast binary logarithm\\r\\n        // algorithm (C. S. Turner,  \\\"A Fast Binary Logarithm Algorithm\\\", IEEE Signal\\r\\n        //     Processing Mag., pp. 124,140, Sep. 2010.)\\r\\n\\r\\n        int b = 1 \\u003c\\u003c 31; // FRACTIONAL_PLACES - 1\\r\\n        int y = 0;\\r\\n\\r\\n        int rawX = x;\\r\\n        while (rawX \\u003c Fix64V1.ONE) {\\r\\n            rawX \\u003c\\u003c= 1;\\r\\n            y -= Fix64V1.ONE;\\r\\n        }\\r\\n\\r\\n        while (rawX \\u003e= Fix64V1.ONE \\u003c\\u003c 1) {\\r\\n            rawX \\u003e\\u003e= 1;\\r\\n            y += Fix64V1.ONE;\\r\\n        }\\r\\n\\r\\n        int z = rawX;\\r\\n\\r\\n        for (uint8 i = 0; i \\u003c 32 /* FRACTIONAL_PLACES */; i++) {\\r\\n            z = Fix64V1.mul_256(z, z);\\r\\n            if (z \\u003e= Fix64V1.ONE \\u003c\\u003c 1) {\\r\\n                z = z \\u003e\\u003e 1;\\r\\n                y += b;\\r\\n            }\\r\\n            b \\u003e\\u003e= 1;\\r\\n        }\\r\\n\\r\\n        return y;\\r\\n    }\\r\\n\\r\\n    function log_256(int x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int)\\r\\n    {\\r\\n        return Fix64V1.mul_256(log2_256(x), LN2);\\r\\n    }\\r\\n\\r\\n    function log2(int64 x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int64)\\r\\n    {\\r\\n        if (x \\u003c= 0) revert(\\\"non-positive value passed to log2\\\");\\r\\n\\r\\n        // This implementation is based on Clay. S. Turner\\u0027s fast binary logarithm\\r\\n        // algorithm (C. S. Turner,  \\\"A Fast Binary Logarithm Algorithm\\\", IEEE Signal\\r\\n        //     Processing Mag., pp. 124,140, Sep. 2010.)\\r\\n\\r\\n        int64 b = 1 \\u003c\\u003c 31; // FRACTIONAL_PLACES - 1\\r\\n        int64 y = 0;\\r\\n\\r\\n        int64 rawX = x;\\r\\n        while (rawX \\u003c Fix64V1.ONE)\\r\\n        {\\r\\n            rawX \\u003c\\u003c= 1;\\r\\n            y -= Fix64V1.ONE;\\r\\n        }\\r\\n\\r\\n        while (rawX \\u003e= Fix64V1.ONE \\u003c\\u003c 1)\\r\\n        {\\r\\n            rawX \\u003e\\u003e= 1;\\r\\n            y += Fix64V1.ONE;\\r\\n        }\\r\\n\\r\\n        int64 z = rawX;\\r\\n\\r\\n        for (int32 i = 0; i \\u003c Fix64V1.FRACTIONAL_PLACES; i++)\\r\\n        {\\r\\n            z = Fix64V1.mul(z, z);\\r\\n            if (z \\u003e= Fix64V1.ONE \\u003c\\u003c 1)\\r\\n            {\\r\\n                z = z \\u003e\\u003e 1;\\r\\n                y += b;\\r\\n            }\\r\\n\\r\\n            b \\u003e\\u003e= 1;\\r\\n        }\\r\\n\\r\\n        return y;\\r\\n    }\\r\\n\\r\\n    function log(int64 x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int64)\\r\\n    {\\r\\n        return Fix64V1.mul(log2(x), LN2);\\r\\n    }\\r\\n\\r\\n    function exp(int64 x)\\r\\n        internal\\r\\n        pure        \\r\\n        returns (int64)\\r\\n    {\\r\\n        if (x == 0) return Fix64V1.ONE;\\r\\n        if (x == Fix64V1.ONE) return E;\\r\\n        if (x \\u003e= LN_MAX) return Fix64V1.MAX_VALUE;\\r\\n        if (x \\u003c= LN_MIN) return 0;\\r\\n\\r\\n        /* The algorithm is based on the power series for exp(x):\\r\\n         * http://en.wikipedia.org/wiki/Exponential_function#Formal_definition\\r\\n         *\\r\\n         * From term n, we get term n+1 by multiplying with x/n.\\r\\n         * When the sum term drops to zero, we can stop summing.\\r\\n         */\\r\\n\\r\\n        // The power-series converges much faster on positive values\\r\\n        // and exp(-x) = 1/exp(x).\\r\\n        \\r\\n        bool neg = (x \\u003c 0);\\r\\n        if (neg) x = -x;\\r\\n\\r\\n        int64 result = Fix64V1.add(\\r\\n            int64(x),\\r\\n            Fix64V1.ONE\\r\\n        );\\r\\n        int64 term = x;\\r\\n\\r\\n        for (uint32 i = 2; i \\u003c 40; i++) {\\r\\n            term = Fix64V1.mul(\\r\\n                x,\\r\\n                Fix64V1.div(term, int32(i) * Fix64V1.ONE)\\r\\n            );\\r\\n            result = Fix64V1.add(result, int64(term));\\r\\n            if (term == 0) break;\\r\\n        }\\r\\n\\r\\n        if (neg) {\\r\\n            result = Fix64V1.div(Fix64V1.ONE, result);\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function clamp(int64 x)\\r\\n        internal\\r\\n        pure\\r\\n        returns (\\r\\n            int64,\\r\\n            bool,\\r\\n            bool\\r\\n        )\\r\\n    {\\r\\n        int64 clamped2Pi = x;\\r\\n        for (uint8 i = 0; i \\u003c 29; ++i) {\\r\\n            clamped2Pi %= LARGE_PI \\u003e\\u003e i;\\r\\n        }\\r\\n        if (x \\u003c 0) {\\r\\n            clamped2Pi += Fix64V1.TWO_PI;\\r\\n        }\\r\\n\\r\\n        bool flipVertical = clamped2Pi \\u003e= Fix64V1.PI;\\r\\n        int64 clampedPi = clamped2Pi;\\r\\n        while (clampedPi \\u003e= Fix64V1.PI) {\\r\\n            clampedPi -= Fix64V1.PI;\\r\\n        }\\r\\n\\r\\n        bool flipHorizontal = clampedPi \\u003e= Fix64V1.PI_OVER_2;\\r\\n\\r\\n        int64 clampedPiOver2 = clampedPi;\\r\\n        if (clampedPiOver2 \\u003e= Fix64V1.PI_OVER_2)\\r\\n            clampedPiOver2 -= Fix64V1.PI_OVER_2;\\r\\n\\r\\n        return (clampedPiOver2, flipHorizontal, flipVertical);\\r\\n    }\\r\\n}\\r\\n\"},\"TypesV1.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n/* Copyright (c) 2021 Kohi Art Community, Inc. All rights reserved. */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nlibrary TypesV1 {\\r\\n    /**\\r\\n     * @dev Represents a point in two-dimensional space.\\r\\n     */\\r\\n    struct Point2D {\\r\\n        int256 x;\\r\\n        int256 y;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Represents a chunked rendering region.\\r\\n     */\\r\\n    struct Chunk2D {\\r\\n        uint16 index;\\r\\n        uint16 width;\\r\\n        uint16 height;\\r\\n        uint16 chunkWidth;\\r\\n        uint16 chunkHeight;\\r\\n        uint32 startX;\\r\\n        uint32 startY;\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"components\":[{\"internalType\":\"uint32[16384]\",\"name\":\"result\",\"type\":\"uint32[16384]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"layers\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"frame\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"iteration\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"ox\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"oy\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"px\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"py\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"x\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"y\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"frames\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"dead\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"internalType\":\"struct TypesV1.Point2D\",\"name\":\"force\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"_lifetime\",\"type\":\"uint8\"},{\"internalType\":\"int64\",\"name\":\"_forceScale\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"_noiseScale\",\"type\":\"int64\"}],\"internalType\":\"struct ParticleV1.Particle2D[5000]\",\"name\":\"particles\",\"type\":\"tuple[5000]\"},{\"internalType\":\"bool\",\"name\":\"dead\",\"type\":\"bool\"}],\"internalType\":\"struct ParticleSetV1.ParticleSet2D[4]\",\"name\":\"particleSets\",\"type\":\"tuple[4]\"}],\"internalType\":\"struct KintsugiLayer.KintsugiParameters\",\"name\":\"p\",\"type\":\"tuple\"},{\"internalType\":\"int64[4096]\",\"name\":\"noiseTable\",\"type\":\"int64[4096]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"width\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"height\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"chunkWidth\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"chunkHeight\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"startX\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"startY\",\"type\":\"uint32\"}],\"internalType\":\"struct TypesV1.Chunk2D\",\"name\":\"chunk\",\"type\":\"tuple\"}],\"internalType\":\"struct KintsugiDraw.Draw\",\"name\":\"f\",\"type\":\"tuple\"}],\"name\":\"draw\",\"outputs\":[{\"internalType\":\"uint32[16384]\",\"name\":\"buffer\",\"type\":\"uint32[16384]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"KintsugiDraw","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"","EVMVersion":"Default","Library":"NoiseV1:5325f8acd1e9798507dc3d4e7dc6d2b610a1c019;SinLut256:05fc8f5682f28a82b4fe09f0c4ab6187e193b02d","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8d70ff8818eb9ab4d278512de972ecaaef9e89874de65745bc4ba73f4941f304"}]}