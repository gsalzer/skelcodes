{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @title SmartWalletChecker\r\n */\r\ncontract SmartWalletChecker {\r\n\r\n    mapping(address => bool) public isManager;\r\n    mapping(address => bool) public isAllowed;\r\n\r\n    constructor() public {\r\n        isManager[msg.sender] = true;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the status of a manager\r\n     * @param _manager The address of the manager\r\n     * @param _status The status to allow the manager \r\n     */\r\n    function setManager(\r\n        address _manager,\r\n        bool _status\r\n    )\r\n        external\r\n        onlyManager\r\n    {\r\n        isManager[_manager] = _status;\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the status of a contract to be allowed or disallowed\r\n     * @param _contract The address of the contract\r\n     * @param _status The status to allow the manager \r\n     */\r\n    function setAllowedContract(\r\n        address _contract,\r\n        bool _status\r\n    )\r\n        external\r\n        onlyManager\r\n    {\r\n        isAllowed[_contract] = _status;\r\n    }\r\n\r\n    /**\r\n     * @notice returns true is _address is whitelisted\r\n     * @param _address The address to check\r\n     */\r\n    function check (\r\n        address _address\r\n    )\r\n        external\r\n        view\r\n        returns(bool)\r\n    {\r\n        return isAllowed[_address];\r\n    }\r\n\r\n    modifier onlyManager() {\r\n        require(isManager[msg.sender], \"!manager\");\r\n        _;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setAllowedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SmartWalletChecker","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://42511a50dc244a9b5be0bb51edb679b0ebe158ce77dc7c82c6d260fbd8ea26cb"}]}