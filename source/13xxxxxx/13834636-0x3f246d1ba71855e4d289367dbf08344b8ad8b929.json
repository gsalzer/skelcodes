{"status":"1","message":"OK","result":[{"SourceCode":"//  Kryptonite Inu NFTs Token Smart Contract\r\n//  Token Symbol      : KRYPTINU\r\n//  Token Name        : Kryptonite Inu\r\n//  Total supply: 32000000000\r\n//  Decimals    : 18\r\n//  Official Website: https://www.kryptinu.com/en/\r\n\r\npragma solidity ^0.4.24;\r\n\r\ncontract ERC20 {\r\n\tuint256 public totalSupply;\r\n\r\n\tfunction balanceOf(address who) public view returns (uint256 balance);\r\n\r\n\tfunction allowance(address owner, address spender) public view returns (uint256 remaining);\r\n\r\n\tfunction transfer(address to, uint256 value) public returns (bool success);\r\n\r\n\tfunction approve(address spender, uint256 value) public returns (bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool success);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a - b;\r\n\t\tassert(b <= a && c <= a);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a + b;\r\n\t\tassert(c >= a && c>=b);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction safeTransfer(ERC20 _token, address _to, uint256 _value) internal {\r\n\t\trequire(_token.transfer(_to, _value));\r\n\t}\r\n}\r\n\r\ncontract Owned {\r\n\taddress public owner;\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner,\"O1- Owner only function\");\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction setOwner(address newOwner) onlyOwner public {\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\ncontract Pausable is Owned {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() public onlyOwner whenNotPaused {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() public onlyOwner whenPaused {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n}\r\n\r\ncontract Kryptinu is Owned, Pausable, ERC20 {\r\n\tusing SafeMath for uint256;\r\n\tusing SafeERC20 for ERC20;\r\n\r\n\tmapping (address => uint256) public balances;\r\n\tmapping (address => mapping (address => uint256)) public allowed;\r\n\tmapping (address => bool) public frozenAccount;\r\n\tmapping (address => bool) public verifyPublisher;\r\n\tmapping (address => bool) public verifyWallet;\r\n\r\n\tstruct fStruct { uint256 index; }\r\n\tmapping(string => fStruct) private fileHashes;\r\n\tstring[] private fileIndex;\r\n\r\n\tstring public constant name = \"Kryptonite Inu\";\r\n\tuint8 public constant decimals = 18;\r\n\tstring public constant symbol = \"KRYPTINU\";\r\n\tuint256 public constant initialSupply = 32000000000;\r\n\r\n\tuint256 public validationPrice = 7 * 10 ** uint(decimals);\r\n\taddress public validationWallet = address(0);\r\n\r\n\tconstructor() public {\r\n\t\tvalidationWallet = msg.sender;\r\n\t\tverifyWallet[msg.sender] = true;\r\n\t\ttotalSupply = initialSupply * 10 ** uint(decimals);\r\n\t\tbalances[msg.sender] = totalSupply;\r\n\t\temit Transfer(address(0),owner,initialSupply);\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\t\trevert();\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public whenNotPaused returns (bool success) {\r\n\t\trequire(_to != msg.sender,\"T1- Recipient can not be the same as sender\");\r\n\t\trequire(_to != address(0),\"T2- Please check the recipient address\");\r\n\t\trequire(balances[msg.sender] >= _value,\"T3- The balance of sender is too low\");\r\n\t\trequire(!frozenAccount[msg.sender],\"T4- The wallet of sender is frozen\");\r\n\t\trequire(!frozenAccount[_to],\"T5- The wallet of recipient is frozen\");\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool success) {\r\n\t\trequire(_to != address(0),\"TF1- Please check the recipient address\");\r\n\t\trequire(balances[_from] >= _value,\"TF2- The balance of sender is too low\");\r\n\t\trequire(allowed[_from][msg.sender] >= _value,\"TF3- The allowance of sender is too low\");\r\n\t\trequire(!frozenAccount[_from],\"TF4- The wallet of sender is frozen\");\r\n\t\trequire(!frozenAccount[_to],\"TF5- The wallet of recipient is frozen\");\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n\t\temit Transfer(_from, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public whenNotPaused returns (bool success) {\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0),\"A1- Reset allowance to 0 first\");\r\n\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint256 _addedValue) public whenNotPaused returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint256 _subtractedValue) public whenNotPaused returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].sub(_subtractedValue);\r\n\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tstruct TKN { address sender; uint256 value; bytes data; bytes4 sig; }\r\n\r\n\tfunction tokenFallback(address _from, uint256 _value, bytes _data) public pure returns (bool) {\r\n\t\tTKN memory tkn;\r\n\t\ttkn.sender = _from;\r\n\t\ttkn.value = _value;\r\n\t\ttkn.data = _data;\r\n\t\tuint32 u = uint32(_data[3]) + (uint32(_data[2]) << 8) + (uint32(_data[1]) << 16) + (uint32(_data[0]) << 24);\r\n\t\ttkn.sig = bytes4(u);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferToken(address tokenAddress, uint256 tokens) public onlyOwner {\r\n\t\tERC20(tokenAddress).safeTransfer(owner,tokens);\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) public onlyOwner returns (bool) {\r\n\t\trequire(_value <= balances[msg.sender],\"B1- The balance of burner is too low\");\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\ttotalSupply = totalSupply.sub(_value);\r\n\r\n\t\temit Burn(msg.sender, _value);\r\n\r\n\t\temit Transfer(msg.sender, address(0), _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freeze(address _address, bool _state) public onlyOwner returns (bool) {\r\n\t\tfrozenAccount[_address] = _state;\r\n\r\n\t\temit Freeze(_address, _state);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction validatePublisher(address Address, bool State, string Publisher) public onlyOwner returns (bool) {\r\n\t\tverifyPublisher[Address] = State;\r\n\r\n\t\temit ValidatePublisher(Address,State,Publisher);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction validateWallet(address Address, bool State, string Wallet) public onlyOwner returns (bool) {\r\n\t\tverifyWallet[Address] = State;\r\n\r\n\t\temit ValidateWallet(Address,State,Wallet);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction validateFile(address To, uint256 Payment, bytes Data, bool cStore, bool eLog) public whenNotPaused returns (bool) {\r\n\t\trequire(Payment>=validationPrice,\"V1- Insufficient payment provided\");\r\n\t\trequire(verifyPublisher[msg.sender],\"V2- Unverified publisher address\");\r\n\t\trequire(!frozenAccount[msg.sender],\"V3- The wallet of publisher is frozen\");\r\n\t\trequire(Data.length == 64,\"V4- Invalid hash provided\");\r\n\r\n\t\tif (!verifyWallet[To] || frozenAccount[To]) {\r\n\t\t\tTo = validationWallet;\r\n\t\t}\r\n\r\n\t\tuint256 index = 0;\r\n\t\tstring memory fileHash = string(Data);\r\n\r\n\t\tif (cStore) {\r\n\t\t\tif (fileIndex.length > 0) {\r\n\t\t\t\trequire(fileHashes[fileHash].index == 0,\"V5- This hash was previously validated\");\r\n\t\t\t}\r\n\r\n\t\t\tfileHashes[fileHash].index = fileIndex.push(fileHash)-1;\r\n\t\t\tindex = fileHashes[fileHash].index;\r\n\t\t}\r\n\r\n\t\tif (allowed[To][msg.sender] >= Payment) {\r\n\t\t\tallowed[To][msg.sender] = allowed[To][msg.sender].sub(Payment);\r\n\t\t} else {\r\n\t\t\tbalances[msg.sender] = balances[msg.sender].sub(Payment);\r\n\t\t\tbalances[To] = balances[To].add(Payment);\r\n\t\t}\r\n\r\n\t\temit Transfer(msg.sender, To, Payment);\r\n\r\n\t\tif (eLog) {\r\n\t\t\temit ValidateFile(index,fileHash);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction verifyFile(string fileHash) public view returns (bool) {\r\n\t\tif (fileIndex.length == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tbytes memory a = bytes(fileIndex[fileHashes[fileHash].index]);\r\n\t\tbytes memory b = bytes(fileHash);\r\n\r\n\t\tif (a.length != b.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (uint256 i = 0; i < a.length; i ++) {\r\n\t\t\tif (a[i] != b[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setPrice(uint256 newPrice) public onlyOwner {\r\n\t\tvalidationPrice = newPrice;\r\n\t}\r\n\r\n\tfunction setWallet(address newWallet) public onlyOwner {\r\n\t\tvalidationWallet = newWallet;\r\n\t}\r\n\r\n\tfunction listFiles(uint256 startAt, uint256 stopAt) onlyOwner public returns (bool) {\r\n\t\tif (fileIndex.length == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\trequire(startAt <= fileIndex.length-1,\"L1- Please select a valid start\");\r\n\r\n\t\tif (stopAt > 0) {\r\n\t\t\trequire(stopAt > startAt && stopAt <= fileIndex.length-1,\"L2- Please select a valid stop\");\r\n\t\t} else {\r\n\t\t\tstopAt = fileIndex.length-1;\r\n\t\t}\r\n\r\n\t\tfor (uint256 i = startAt; i <= stopAt; i++) {\r\n\t\t\temit LogEvent(i,fileIndex[i]);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tevent Burn(address indexed burner, uint256 value);\r\n\tevent Freeze(address target, bool frozen);\r\n\r\n\tevent ValidateFile(uint256 index, string data);\r\n\tevent ValidatePublisher(address indexed publisherAddress, bool state, string indexed publisherName);\r\n\tevent ValidateWallet(address indexed walletAddress, bool state, string indexed walletName);\r\n\r\n\tevent LogEvent(uint256 index, string data) anonymous;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"startAt\",\"type\":\"uint256\"},{\"name\":\"stopAt\",\"type\":\"uint256\"}],\"name\":\"listFiles\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifyPublisher\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validationWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validationPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fileHash\",\"type\":\"string\"}],\"name\":\"verifyFile\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"To\",\"type\":\"address\"},{\"name\":\"Payment\",\"type\":\"uint256\"},{\"name\":\"Data\",\"type\":\"bytes\"},{\"name\":\"cStore\",\"type\":\"bool\"},{\"name\":\"eLog\",\"type\":\"bool\"}],\"name\":\"validateFile\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Address\",\"type\":\"address\"},{\"name\":\"State\",\"type\":\"bool\"},{\"name\":\"Publisher\",\"type\":\"string\"}],\"name\":\"validatePublisher\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifyWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Address\",\"type\":\"address\"},{\"name\":\"State\",\"type\":\"bool\"},{\"name\":\"Wallet\",\"type\":\"string\"}],\"name\":\"validateWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"string\"}],\"name\":\"ValidateFile\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"publisherAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"publisherName\",\"type\":\"string\"}],\"name\":\"ValidatePublisher\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"walletName\",\"type\":\"string\"}],\"name\":\"ValidateWallet\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"string\"}],\"name\":\"LogEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]","ContractName":"Kryptinu","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a47c68ad209565d5d2fa5d7ceff55d6332e0ac68a00bc9043e5c6676b2c2759a"}]}