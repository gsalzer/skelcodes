{"status":"1","message":"OK","result":[{"SourceCode":"{\"DGTownHall.sol\":{\"content\":\"// SPDX-License-Identifier: DG\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\ninterface DGToken {\\n\\n    function balanceOf(\\n        address _account\\n    )\\n        external\\n        view\\n        returns (uint256);\\n\\n    function transfer(\\n        address _recipient,\\n        uint256 _amount\\n    )\\n        external\\n        returns (bool);\\n\\n    function transferFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _amount\\n    )\\n        external\\n        returns (bool);\\n}\\n\\ncontract DGTownHall is ERC20(\\\"External DG\\\", \\\"xDG\\\") {\\n\\n    DGToken public immutable DG;\\n\\n    constructor(\\n        address _tokenAddress\\n    ) {\\n        DG = DGToken(\\n            _tokenAddress\\n        );\\n    }\\n\\n    function stepInside(\\n        uint256 _DGAmount\\n    )\\n        external\\n    {\\n        uint256 DGTotal = innerSupply();\\n        uint256 xDGTotal = totalSupply();\\n\\n        DGTotal == 0 || xDGTotal == 0\\n            ? _mint(msg.sender, _DGAmount)\\n            : _mint(msg.sender, _DGAmount * xDGTotal / DGTotal);\\n\\n        DG.transferFrom(\\n            msg.sender,\\n            address(this),\\n            _DGAmount\\n        );\\n    }\\n\\n    function stepOutside(\\n        uint256 _xDGAmount\\n    )\\n        external\\n    {\\n        uint256 transferAmount = _xDGAmount\\n            * innerSupply()\\n            / totalSupply();\\n\\n        _burn(\\n            msg.sender,\\n            _xDGAmount\\n        );\\n\\n        DG.transfer(\\n            msg.sender,\\n            transferAmount\\n        );\\n    }\\n\\n    function DGAmount(\\n        address _account\\n    )\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return balanceOf(_account)\\n            * innerSupply()\\n            / totalSupply();\\n    }\\n\\n    function outsidAmount(\\n        uint256 _xDGAmount\\n    )\\n        external\\n        view\\n        returns (uint256 _DGAmount)\\n    {\\n        return _xDGAmount\\n            * innerSupply()\\n            / totalSupply();\\n    }\\n\\n    function insideAmount(\\n        uint256 _DGAmount\\n    )\\n        external\\n        view\\n        returns (uint256 _xDGAmount)\\n    {\\n        uint256 xDGTotal = totalSupply();\\n        uint256 DGTotal = innerSupply();\\n\\n        return xDGTotal == 0 || DGTotal == 0\\n            ? _DGAmount\\n            : _DGAmount * xDGTotal / DGTotal;\\n    }\\n\\n    function innerSupply()\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return DG.balanceOf(address(this));\\n    }\\n}\\n\"},\"ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: ---DG----\\n\\npragma solidity ^0.8.9;\\n\\ncontract ERC20 {\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private  _decimals;\\n\\n    uint256 private _totalSupply;\\n\\n    mapping(address =\\u003e uint256) private _balances;\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) private _allowances;\\n    mapping(address =\\u003e uint) public nonces;\\n\\n    bytes32 public DOMAIN_SEPARATOR;\\n    bytes32 public constant PERMIT_TYPEHASH = keccak256(\\n        \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n    );\\n\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 _value\\n    );\\n\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _value\\n    );\\n\\n    constructor(\\n        string memory _entryname,\\n        string memory _entrysymbol\\n    ) {\\n        _name = _entryname;\\n        _symbol = _entrysymbol;\\n        _decimals = 18;\\n    }\\n\\n    function name()\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        return _name;\\n    }\\n\\n    function symbol()\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        return _symbol;\\n    }\\n\\n    function decimals()\\n        public\\n        view\\n        returns (uint8)\\n    {\\n        return _decimals;\\n    }\\n\\n    function totalSupply()\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(\\n        address _account\\n    )\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return _balances[_account];\\n    }\\n\\n    function transfer(\\n        address _recipient,\\n        uint256 _amount\\n    )\\n        external\\n        returns (bool)\\n    {\\n        _transfer(\\n            msg.sender,\\n            _recipient,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    )\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _allowances[_owner][_spender];\\n    }\\n\\n    function approve(\\n        address _spender,\\n        uint256 _amount\\n    )\\n        external\\n        returns (bool)\\n    {\\n        _approve(\\n            msg.sender,\\n            _spender,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _amount\\n    )\\n        public\\n        returns (bool)\\n    {\\n        _approve(\\n            _sender,\\n            msg.sender,\\n            _allowances[_sender][msg.sender] - _amount\\n        );\\n\\n        _transfer(\\n            _sender,\\n            _recipient,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    function permit(\\n        address _owner,\\n        address _spender,\\n        uint256 _value,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    )\\n        external\\n    {\\n        require(\\n            _deadline \\u003e= block.timestamp,\\n            \\u0027ERC20: PERMIT_CALL_EXPIRED\\u0027\\n        );\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\u0027\\\\x19\\\\x01\\u0027,\\n                DOMAIN_SEPARATOR,\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        _owner,\\n                        _spender,\\n                        _value,\\n                        nonces[_owner]++,\\n                        _deadline\\n                    )\\n                )\\n            )\\n        );\\n\\n        address recoveredAddress = ecrecover(\\n            digest,\\n            _v,\\n            _r,\\n            _s\\n        );\\n\\n        require(\\n            recoveredAddress != address(0) \\u0026\\u0026\\n            recoveredAddress == _owner,\\n            \\u0027INVALID_SIGNATURE\\u0027\\n        );\\n\\n        _approve(\\n            _owner,\\n            _spender,\\n            _value\\n        );\\n    }\\n\\n    function _transfer(\\n        address _sender,\\n        address _recipient,\\n        uint256 _amount\\n    )\\n        internal\\n    {\\n        _balances[_sender] =\\n        _balances[_sender] - _amount;\\n\\n        _balances[_recipient] =\\n        _balances[_recipient] + _amount;\\n\\n        emit Transfer(\\n            _sender,\\n            _recipient,\\n            _amount\\n        );\\n    }\\n\\n    function _mint(\\n        address _account,\\n        uint256 _amount\\n    )\\n        internal\\n    {\\n        _totalSupply =\\n        _totalSupply + _amount;\\n\\n        unchecked {\\n            _balances[_account] =\\n            _balances[_account] + _amount;\\n        }\\n\\n        emit Transfer(\\n            address(0),\\n            _account,\\n            _amount\\n        );\\n    }\\n\\n    function _burn(\\n        address _account,\\n        uint256 _amount\\n    )\\n        internal\\n    {\\n        _balances[_account] =\\n        _balances[_account] - _amount;\\n\\n        unchecked {\\n            _totalSupply =\\n            _totalSupply - _amount;\\n        }\\n\\n        emit Transfer(\\n            _account,\\n            address(0),\\n            _amount\\n        );\\n    }\\n\\n    function _approve(\\n        address _owner,\\n        address _spender,\\n        uint256 _amount\\n    )\\n        internal\\n    {\\n        _allowances[_owner][_spender] = _amount;\\n\\n        emit Approval(\\n            _owner,\\n            _spender,\\n            _amount\\n        );\\n    }\\n}\\n\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DG\",\"outputs\":[{\"internalType\":\"contract DGToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"DGAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"innerSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DGAmount\",\"type\":\"uint256\"}],\"name\":\"insideAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_xDGAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_xDGAmount\",\"type\":\"uint256\"}],\"name\":\"outsidAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_DGAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DGAmount\",\"type\":\"uint256\"}],\"name\":\"stepInside\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_xDGAmount\",\"type\":\"uint256\"}],\"name\":\"stepOutside\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DGTownHall","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004b520c812e8430659fc9f12f6d0c39026c83588d","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://39b98028b02427479ea964bc8febbd8748290eddc55914cda956f8f3faff5892"}]}