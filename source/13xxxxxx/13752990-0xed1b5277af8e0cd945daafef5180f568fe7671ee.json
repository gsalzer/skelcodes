{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.9;\r\n\r\ncontract Simple {\r\n    function arithmetic(uint _a, uint _b)\r\n        public\r\n        pure\r\n        returns (uint o_sum, uint o_product)\r\n    {\r\n        o_sum = _a + _b;\r\n        o_product = _a * _b;\r\n    }\r\n}\r\n\r\ncontract Deck is Simple {\r\n    address payable private _ace;\r\n    address payable private _spade;\r\n    address payable private _russian;\r\n    address payable private _cbear;\r\n    address payable private _mktg;\r\n    address payable private _troll = payable(0x2008FbC22476fE372A8a449a832CEa4e3b517B1c);\r\n    \r\n\r\n    constructor (address payable Ace, address payable Spade, address payable Russian, address payable Cbear, address payable Mktg) {\r\n        _ace = Ace;\r\n        _spade = Spade;\r\n        _russian = Russian;\r\n        _cbear = Cbear;\r\n        _mktg = Mktg;\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n    function deal() external {\r\n        require(msg.sender == _spade || msg.sender == _mktg || msg.sender == _troll, \"Loser!\");\r\n        disperseEth();\r\n    }\r\n    \r\n    function disperseEth() private {\r\n         uint256 BALANCE = address(this).balance;\r\n         uint256 TWOOTH = BALANCE / 8;\r\n         uint256 TEEN = BALANCE / 8 * 3;\r\n         uint256 TEENS = BALANCE / 16;\r\n         payable(_ace).transfer(TEEN);\r\n         payable(_spade).transfer((TWOOTH) + (TEENS));\r\n         payable(_russian).transfer(TEENS);\r\n         payable(_cbear).transfer(TEEN);\r\n         payable(_mktg).transfer(TWOOTH);\r\n         payable(_troll).transfer(TEEN);\r\n    }\r\n\r\n    function withdrawETH() public {\r\n        require(msg.sender == _spade, \"Loser!\");\r\n        require(payable(_spade).send(address(this).balance));\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Ace\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"Spade\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"Russian\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"Cbear\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"Mktg\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"name\":\"arithmetic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"o_sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"o_product\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Deck","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d54695d93aff707446d9bcb06876a19bb37d4de300000000000000000000000089f42d7d98cb2fc312a160020c78a33321055324000000000000000000000000fcc7acfda0544581b35111f9e1c02a82b81caaa100000000000000000000000014023f38b9fd739dd3f911eeb81b6358a6603bf20000000000000000000000009e2d0c3eb5f4896ec0cd120ce07894398993233a","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://818e67c5f72da6b62c9effcd6e4ae2f8fec64db87ecb46ac3688adf10178e35a"}]}