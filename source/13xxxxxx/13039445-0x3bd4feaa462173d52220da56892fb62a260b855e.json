{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.1;\r\n\r\ninterface Leader {\r\n    function tokenBurn(\r\n        string memory _coin,\r\n        address _userAddress,\r\n        uint256 _amount\r\n    ) external;\r\n\r\n    function tokenMint(\r\n        string memory _coin,\r\n        address _userAddress,\r\n        uint256 _amount\r\n    ) external;\r\n}\r\n\r\ncontract Controller {\r\n    // Ownership Logic\r\n    address public owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    //statics\r\n    address internal LEADER = 0x9Ae8786C620A0d0D20C5Ef96566907836D9F6743;\r\n\r\n    // Mint Logic\r\n    struct Queue {\r\n        string coin;\r\n        address addr;\r\n        uint256 amount;\r\n        string txnhash;\r\n    }\r\n\r\n    Queue[] public userMints;\r\n\r\n    mapping(string => uint256) public timestampSolver;\r\n    mapping(string => bool) public transactionsProceeded;\r\n\r\n    function registerDeposit(\r\n        string memory _coin,\r\n        address _userAddress,\r\n        uint256 _amount,\r\n        string memory _txnhash,\r\n        uint256 _lastTimestamp\r\n    ) external onlyOwner {\r\n        if (transactionsProceeded[_txnhash] == false) {\r\n            if (timestampSolver[_coin] <= _lastTimestamp) {\r\n                Queue memory m;\r\n                m.coin = _coin;\r\n                m.addr = _userAddress;\r\n                m.amount = _amount;\r\n                m.txnhash = _txnhash;\r\n\r\n                userMints.push(m);\r\n\r\n                timestampSolver[_coin] = _lastTimestamp;\r\n                Leader(LEADER).tokenMint(_coin, _userAddress, _amount);\r\n\r\n                transactionsProceeded[_txnhash] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// Burn logic\r\n    struct QueueBlock {\r\n        string coin;\r\n        string addr;\r\n        uint256 amount;\r\n        bool success;\r\n        string txnhash;\r\n    }\r\n\r\n    QueueBlock[] public userWithdraws;\r\n\r\n    function registerWithdraw(\r\n        string memory _coin,\r\n        string memory _address,\r\n        uint256 _amount\r\n    ) external {\r\n        Leader(LEADER).tokenBurn(_coin, msg.sender, _amount);\r\n\r\n        QueueBlock memory m;\r\n        m.coin = _coin;\r\n        m.addr = _address;\r\n        m.amount = _amount;\r\n        m.success = false;\r\n        m.txnhash = \"x\";\r\n\r\n        userWithdraws.push(m);\r\n    }\r\n\r\n    // counter\r\n\r\n    function registerWithdrawSuccess(uint256 _queue, string memory txnhash)\r\n        external\r\n        onlyOwner\r\n    {\r\n        userWithdraws[_queue].success = true;\r\n        userWithdraws[_queue].txnhash = txnhash;\r\n    }\r\n\r\n    // length\r\n\r\n    function getMintsLength() public view returns (uint256) {\r\n        return userMints.length;\r\n    }\r\n\r\n    function getBurnsLength() public view returns (uint256) {\r\n        return userWithdraws.length;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBurnsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_coin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_txnhash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_lastTimestamp\",\"type\":\"uint256\"}],\"name\":\"registerDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_coin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_address\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"registerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txnhash\",\"type\":\"string\"}],\"name\":\"registerWithdrawSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timestampSolver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"transactionsProceeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMints\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"coin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txnhash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userWithdraws\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"coin\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"addr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"txnhash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Controller","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://800ba5f98c154660d3bf6d6096902889823179725cfd5448abdfc957e9976949"}]}