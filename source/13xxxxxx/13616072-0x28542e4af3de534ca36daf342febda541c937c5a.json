{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.0\r\n\"\"\"\r\n@title Root Forwarder\r\n@author Curve Finance\r\n@license MIT\r\n@notice Reciever contract for sidechain fees. Must be deployed to the same\r\n        address as the sidechain bridger, when using a bridge that does not\r\n        allow specificying a receiver on the root chain.\r\n\"\"\"\r\n\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\n\r\nowner: public(address)\r\nfuture_owner: public(address)\r\n\r\npool_proxy: public(address)\r\n\r\n\r\n@external\r\ndef __init__(_owner: address, _pool_proxy: address):\r\n    self.owner = _owner\r\n    self.pool_proxy = _pool_proxy\r\n\r\n\r\n@external\r\ndef transfer(_token: address) -> bool:\r\n    # transfer underlying coin from msg.sender to self\r\n    amount: uint256 = ERC20(_token).balanceOf(self)\r\n    response: Bytes[32] = raw_call(\r\n        _token,\r\n        _abi_encode(self.pool_proxy, amount, method_id=method_id(\"transfer(address,uint256)\")),\r\n        max_outsize=32\r\n    )\r\n    if len(response) != 0:\r\n        assert convert(response, bool)\r\n\r\n    return True\r\n\r\n\r\n@external\r\ndef transfer_many(_tokens: address[10]) -> bool:\r\n    pool_proxy: address = self.pool_proxy\r\n    for token in _tokens:\r\n        if token == ZERO_ADDRESS:\r\n            break\r\n\r\n        # transfer underlying coin from msg.sender to self\r\n        amount: uint256 = ERC20(token).balanceOf(self)\r\n        response: Bytes[32] = raw_call(\r\n            token,\r\n            _abi_encode(self.pool_proxy, amount, method_id=method_id(\"transfer(address,uint256)\")),\r\n            max_outsize=32\r\n        )\r\n        if len(response) != 0:\r\n            assert convert(response, bool)\r\n\r\n    return True\r\n\r\n\r\n@external\r\ndef set_pool_proxy(_pool_proxy: address):\r\n    assert msg.sender == self.owner\r\n    self.pool_proxy = _pool_proxy\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(_owner: address):\r\n    assert msg.sender == self.owner\r\n    self.future_owner = _owner\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership():\r\n    assert msg.sender == self.future_owner\r\n    self.owner = self.future_owner","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_pool_proxy\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":12409},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer_many\",\"inputs\":[{\"name\":\"_tokens\",\"type\":\"address[10]\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":124311},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_pool_proxy\",\"inputs\":[{\"name\":\"_pool_proxy\",\"type\":\"address\"}],\"outputs\":[],\"gas\":37702},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"outputs\":[],\"gas\":37732},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[],\"outputs\":[],\"gas\":39702},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2676},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2706},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"pool_proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2736}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.3.0","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"0000000000000000000000007eeac6cddbd1d0b8af061742d41877d7f707289a000000000000000000000000ecb456ea5365865ebab8a2661b0c503410e9b347","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}