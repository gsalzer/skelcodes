{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/_utilities/BatchTxCaller.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.7.3;\\npragma experimental ABIEncoderV2;\\n\\n/**\\n * @title BatchTxCaller\\n * @notice Utility that executes an array of provided transactions.\\n */\\ncontract BatchTxCaller {\\n    event TransactionFailed(address indexed destination, uint256 index, bytes data, bytes reason);\\n\\n    /**\\n     * @notice Executes all transactions marked enabled.\\n     *         If any transaction in the transaction list reverts, it returns false.\\n     */\\n    function executeAll(\\n        address[] memory destinations,\\n        bytes[] memory data,\\n        uint256[] memory values\\n    ) external payable returns (bool) {\\n        bool exeuctionSuccess = true;\\n\\n        for (uint256 i = 0; i < destinations.length; i++) {\\n            (bool result, bytes memory reason) = destinations[i].call{value: values[i]}(data[i]);\\n            if (!result) {\\n                emit TransactionFailed(destinations[i], i, data[i], reason);\\n                exeuctionSuccess = false;\\n            }\\n        }\\n\\n        return exeuctionSuccess;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"TransactionFailed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"destinations\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"executeAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"BatchTxCaller","CompilerVersion":"v0.7.3+commit.9bfce1f6","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}