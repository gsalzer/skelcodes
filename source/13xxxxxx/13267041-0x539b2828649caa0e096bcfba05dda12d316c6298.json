{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.4;\r\n\r\ncontract MNMToken\r\n{\r\n  uint256 internal constant _total_whole_tokens = 100000;\r\n  uint8 public constant decimals = 18;\r\n\r\n  mapping (address => uint256) internal _ledger;\r\n  mapping (address => mapping (address => uint256)) _allowance;\r\n\r\n  uint256 internal constant _hard_token_limit = (2**256-1) / 10 ** decimals;\r\n  uint256 public totalSupply = _total_whole_tokens * 10 ** decimals;\r\n\r\n  address internal _owner;\r\n  string public constant name = \"MNM Token\";\r\n  string public constant symbol = \"MNM\";\r\n\r\n  uint256 public available;\r\n  uint256 public tokenPrice;\r\n\r\n  address _nft_contract;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  constructor()\r\n  {\r\n    require(_total_whole_tokens <= _hard_token_limit, 'max token limit exceeded');\r\n    _owner = msg.sender;\r\n    uint256 reserved = 10000 * 10 ** decimals;\r\n    _ledger[msg.sender] = reserved;\r\n    available = totalSupply - reserved;\r\n    tokenPrice = 10 ** 16;\r\n\r\n    emit Transfer(address(0), msg.sender, reserved);\r\n  }\r\n\r\n  receive() external payable {}\r\n  fallback() external payable {}\r\n\r\n  function withdrawWhole(address from, uint256 num_whole_tokens)\r\n    public\r\n  {\r\n    _only_nft_contract();\r\n    uint256 full_quantity = num_whole_tokens * 10 ** decimals;\r\n    require(_ledger[from] >= full_quantity, 'insufficient tokens');\r\n\r\n    _ledger[from] -= full_quantity;\r\n    totalSupply -= full_quantity;\r\n\r\n    emit Transfer(from, address(0), full_quantity);\r\n  }\r\n\r\n  function depositWhole(address to, uint256 num_whole_tokens)\r\n    public\r\n  {\r\n    _only_nft_contract();\r\n    uint256 full_quantity = num_whole_tokens * 10 ** decimals;\r\n\r\n    _ledger[to] += full_quantity;\r\n    totalSupply += full_quantity;\r\n\r\n    emit Transfer(address(0), to, full_quantity);\r\n  }\r\n\r\n  function setNFTContractAddress(address nft_contract)\r\n    external\r\n  {\r\n    _only_owner();\r\n    _nft_contract = nft_contract;\r\n  }\r\n\r\n  function setContractOwner(address new_owner)\r\n    external\r\n  {\r\n    _only_owner();\r\n    _owner = new_owner;\r\n  }\r\n\r\n  function balanceOf(address owner)\r\n    external view returns(uint256)\r\n  {\r\n    require(owner != address(0), 'address 0 is not an owner');\r\n    return _ledger[owner];\r\n  }\r\n\r\n  function setTokenPrice(uint256 price)\r\n    external\r\n  {\r\n    _only_owner();\r\n    tokenPrice = price;\r\n  }\r\n\r\n  function giftTokens(uint256 num_tokens, address to)\r\n    external\r\n  {\r\n    _only_owner();\r\n    require(num_tokens <= available, 'not enough tokens available');\r\n    available -= num_tokens;\r\n    _ledger[to] += num_tokens;\r\n\r\n    emit Transfer(address(0), to, num_tokens);\r\n  }\r\n\r\n  function buyTokens()\r\n    external payable\r\n  {\r\n    uint256 num_tokens = msg.value * 10 ** decimals / tokenPrice;\r\n    require(num_tokens > 0, 'not enough eth sent');\r\n    require(num_tokens <= available, 'not enough tokens available');\r\n    available -= num_tokens;\r\n    _ledger[msg.sender] += num_tokens;\r\n\r\n    emit Transfer(address(0), msg.sender, num_tokens);\r\n  }\r\n\r\n  function withdrawEth()\r\n    external\r\n  {\r\n    _only_owner();\r\n    (bool success,) = msg.sender.call{value:address(this).balance}(\"\");\r\n    require(success, 'transfer failed');\r\n  }\r\n\r\n  function transfer(address to, uint256 value)\r\n    external returns(bool)\r\n  {\r\n    _transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    external returns(bool)\r\n  {\r\n    if (msg.sender != from) {\r\n      uint256 allowance_val = _allowance[from][msg.sender];\r\n      require(allowance_val >= value, 'you are not authorized to transfer that amount');\r\n      _allowance[from][msg.sender] -= value;\r\n    }\r\n    _transfer(from, to, value);\r\n    return true;\r\n  }\r\n\r\n  function _transfer(address from, address to, uint256 value)\r\n    internal\r\n  {\r\n    require(_ledger[from] >= value, 'insufficient funds');\r\n\r\n    _ledger[to] += value;\r\n    _ledger[from] -= value;\r\n\r\n    emit Transfer(from, to, value);\r\n  }\r\n\r\n  function approve(address spender, uint256 value)\r\n    external returns(bool)\r\n  {\r\n    _allowance[msg.sender][spender] = value;\r\n\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address spender)\r\n    external view returns(uint256)\r\n  {\r\n    return _allowance[owner][spender];\r\n  }\r\n\r\n  function _only_nft_contract()\r\n    internal view\r\n  {\r\n    require(msg.sender == _nft_contract, 'not the nft contract');\r\n  }\r\n\r\n  function _only_owner()\r\n    internal view\r\n  {\r\n    require(msg.sender == _owner, 'not the contract owner');\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num_whole_tokens\",\"type\":\"uint256\"}],\"name\":\"depositWhole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num_tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"giftTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"setContractOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft_contract\",\"type\":\"address\"}],\"name\":\"setNFTContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num_whole_tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawWhole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"MNMToken","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e2c9b6e70faa4cf31950bf86d30f3d0679d1de02ca68448fcbb03035ad7f7417"}]}