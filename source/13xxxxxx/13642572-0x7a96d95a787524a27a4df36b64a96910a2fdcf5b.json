{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: Unlicense\r\n// not bidirectional; for possible internal use only\r\n\r\npragma solidity^0.8.7;\r\n\r\ninterface ICorruptionsDataMapper {\r\n    function setValue(uint256 mapIndex, uint256 key, uint256 value) external;\r\n}\r\n\r\ncontract CorruptionsDataMapper {\r\n    address public owner;\r\n    \r\n    struct DataMap {\r\n        bool created;\r\n        string name;\r\n        mapping(uint256 => uint256) values;\r\n    }\r\n    \r\n    mapping(uint256 => DataMap) public dataMaps;\r\n    uint256 public mapCount;\r\n    \r\n    mapping (address => bool) public allowList;\r\n    \r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function addToAllowList(address addr) public {\r\n        require(msg.sender == owner, \"CorruptionsDataMapper: not owner\");\r\n        allowList[addr] = true;\r\n    }\r\n    \r\n    function removeFromAllowList(address addr) public {\r\n        require(msg.sender == owner, \"CorruptionsDataMapper: not owner\");\r\n        allowList[addr] = false;\r\n    }\r\n    \r\n    function addMap(string memory name) public {\r\n        require(msg.sender == owner, \"CorruptionsDataMapper: not owner\");\r\n        DataMap storage map = dataMaps[mapCount];\r\n        map.created = true;\r\n        map.name = name;\r\n        mapCount++;\r\n    }\r\n    \r\n    function setValue(uint256 mapIndex, uint256 key, uint256 value) public {\r\n        require(msg.sender == owner || allowList[msg.sender] == true, \"CorruptionsDataMapper: not owner or allowed\");\r\n        DataMap storage map = dataMaps[mapIndex];\r\n        map.values[key] = value;\r\n    }\r\n    \r\n    function valueFor(uint256 mapIndex, uint256 key) public view returns (uint256) {\r\n        DataMap storage map = dataMaps[mapIndex];\r\n        return map.values[key];\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addToAllowList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dataMaps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"created\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeFromAllowList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mapIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CorruptionsDataMapper","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://bc55ed48245c084d30ea03e97e15aec75112ac59e3178caadfaf030afef1f7a4"}]}