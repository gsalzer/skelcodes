{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity =0.5.12;\r\n\r\ncontract BinhePay{\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 4;\r\n    uint256 public totalSupply;\r\n    address internal admin;\r\n    mapping (address => uint256) public balanceOf;\r\n    bool public isActivity = true;\r\n    bool public openRaise = true;\r\n    uint256 public raiseOption = 0;\r\n    address payable internal management;\r\n    \r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent SendEth(address indexed to, uint256 value);\r\n    \r\n    constructor(\r\n        uint256 initialSupply,\r\n        string memory tokenName,\r\n        string memory tokenSymbol\r\n     ) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[msg.sender] = totalSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        management = msg.sender;\r\n        admin = msg.sender;\r\n    }\r\n\r\n    modifier onlyAdmin() { \r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    modifier isAct() { \r\n        require(isActivity);\r\n        _;\r\n    }\r\n\r\n    modifier isOpenRaise() { \r\n        require(openRaise);\r\n        _;\r\n    }\r\n\r\n    function () external payable isAct isOpenRaise{\r\n\t\trequire(raiseOption >= 0);\r\n\t\tuint256 buyNum = msg.value /10000 * raiseOption;\r\n\t\trequire(buyNum <= balanceOf[management]);\r\n\t\tbalanceOf[management] -= buyNum;\r\n\t\tbalanceOf[msg.sender] += buyNum;\r\n        management.transfer(msg.value);\r\n        emit SendEth(management, msg.value);\r\n        emit Transfer(management, msg.sender, buyNum);\r\n\t}\r\n    \r\n    function transfer(address _to, uint256 _value) public isAct{\r\n\t    _transfer(msg.sender, _to, _value);\r\n    }\r\n    \r\n    function batchTransfer(address[] memory _tos, uint[] memory _values) public isAct {\r\n        require(_tos.length == _values.length);\r\n        uint256 _total = 0;\r\n        for(uint256 i;i<_values.length;i++){\r\n            _total += _values[i];\r\n\t    }\r\n        require(balanceOf[msg.sender]>=_total);\r\n        for(uint256 i;i<_tos.length;i++){\r\n            _transfer(msg.sender,_tos[i],_values[i]);\r\n\t    }\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != address(0));\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\t\r\n\tfunction mint(address usr, uint wad) external onlyAdmin {\r\n        balanceOf[usr] = balanceOf[usr] + wad;\r\n        totalSupply    = totalSupply + wad;\r\n        emit Transfer(address(0), usr, wad);\r\n    }\r\n\t\r\n\tfunction setRaiseOption(uint256 _price)public onlyAdmin{\r\n\t\traiseOption = _price;\r\n\t}\r\n\t\r\n\tfunction setRaiseOpen(bool _open) public onlyAdmin{\r\n\t    openRaise = _open;\r\n\t}\r\n\t\r\n\tfunction setAct(bool _isAct) public onlyAdmin{\r\n\t\tisActivity = _isAct;\r\n\t}\r\n\t\r\n\tfunction changeAdmin(address _address) public onlyAdmin{\r\n       admin = _address;\r\n    }\r\n    \r\n    function changeFinance(address payable _address) public onlyAdmin{\r\n       management = _address;\r\n    }\r\n\t\r\n\tfunction destructContract()public onlyAdmin{\r\n\t\tselfdestruct(management);\r\n\t}\r\n\t\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SendEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeFinance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destructContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActivity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openRaise\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raiseOption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isAct\",\"type\":\"bool\"}],\"name\":\"setAct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"setRaiseOpen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setRaiseOption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BinhePay","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000842696e68655061790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005554e504159000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7b538dd65f626c74d9f52064bb6f96a0ce694758800845605d18d99f5f30edb9"}]}