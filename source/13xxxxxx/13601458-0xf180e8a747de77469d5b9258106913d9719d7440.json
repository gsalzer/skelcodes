{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\ncontract MetaScraperSubscriptions{\r\n    \r\n    mapping(uint256 => uint256) public subscriptionPrices;\r\n    mapping(address => uint256) public addressSubscriptionDate;\r\n    mapping(address => uint256) public addressSubscriptionDays;\r\n\r\n    address public owner1;\r\n    address public owner2;\r\n\r\n    event SubscriptionSet(address indexed user, uint256 startDate, uint256 subscriptionDays);\r\n\r\n    constructor(uint256 weeklyPrice, uint256 monthlyPrice){\r\n        subscriptionPrices[7] = weeklyPrice;\r\n        subscriptionPrices[30] = monthlyPrice;\r\n        owner1=msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender==owner1 || msg.sender==owner2,\"ONLY OWNER\");  \r\n        _;\r\n    }\r\n\r\n    function buySubscription(uint256 subscriptionDays,uint256 startDate) external payable{\r\n\r\n        require(subscriptionPrices[subscriptionDays] > 0, \"INEXISTENT SUBSCRIPTION\");\r\n        require(subscriptionPrices[subscriptionDays] == msg.value, \"VALUE ERROR\"); \r\n        require(startDate >= (block.timestamp - 1 hours), \"INVALID START DATE\");\r\n        require(addressSubscriptionDate[msg.sender] < block.timestamp,\"ALREADY SUBSCRIBED\");        \r\n\r\n        if(isSubscribedOnDate(msg.sender, startDate)){\r\n            addressSubscriptionDays[msg.sender] = addressSubscriptionDays[msg.sender] + subscriptionDays;   \r\n        }\r\n        else{\r\n            require((addressSubscriptionDate[msg.sender] + (addressSubscriptionDays[msg.sender] * 1 days)) < block.timestamp,\"INVALID START DATE: SUBSCRIPTION IN PROGRESS\");\r\n            addressSubscriptionDate[msg.sender] = startDate;\r\n            addressSubscriptionDays[msg.sender] = subscriptionDays;            \r\n        } \r\n\r\n        emit SubscriptionSet(msg.sender,addressSubscriptionDate[msg.sender],subscriptionDays);        \r\n\r\n    }\r\n\r\n    function moveSubscription(uint256 startDate) external{\r\n        require(startDate >= (block.timestamp - 1 hours), \"MOVE FORBIDDEN:0\");\r\n        require(addressSubscriptionDate[msg.sender] > block.timestamp, \"MOVE FORBIDDEN:1\");        \r\n        addressSubscriptionDate[msg.sender] = startDate; \r\n        emit SubscriptionSet(msg.sender,startDate,addressSubscriptionDays[msg.sender]);        \r\n    }\r\n\r\n    function isSubscribedOnDate(address subscriber, uint256 checkDate) public view returns(bool){        \r\n        uint256 subscriptionDate = addressSubscriptionDate[subscriber];\r\n        uint256 subscriptionDays = addressSubscriptionDays[subscriber];\r\n        return (subscriptionDays > 0 && (checkDate >= subscriptionDate) && (checkDate <= (subscriptionDate + subscriptionDays * 1 days)));\r\n    }\r\n\r\n    function setSubscriptionPrice(uint256 subscriptionDays,uint256 price) external onlyOwner{        \r\n        subscriptionPrices[subscriptionDays]=price;\r\n    }\r\n\r\n    function withdraw() external onlyOwner{\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }    \r\n\r\n    function changeOwner1(address newOwner) external onlyOwner{\r\n        owner1 = newOwner;\r\n    }\r\n    \r\n    function changeOwner2(address newOwner) external onlyOwner{\r\n        owner2 = newOwner;\r\n    }\r\n    \r\n    function setSubscription(address user,uint256 startDate,uint256 subscriptionDays) external onlyOwner{\r\n        addressSubscriptionDate[user] = startDate;\r\n        addressSubscriptionDays[user] = subscriptionDays;\r\n        emit SubscriptionSet(user,startDate,subscriptionDays);        \r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weeklyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthlyPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionDays\",\"type\":\"uint256\"}],\"name\":\"SubscriptionSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubscriptionDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubscriptionDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"buySubscription\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"checkDate\",\"type\":\"uint256\"}],\"name\":\"isSubscribedOnDate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"moveSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionDays\",\"type\":\"uint256\"}],\"name\":\"setSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setSubscriptionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subscriptionPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MetaScraperSubscriptions","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000004db7325476300000000000000000000000000000000000000000000000000000b1a2bc2ec500000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d421d910784673016917e96f4ee0021faed8e518ebd8e14547878015b5e13108"}]}