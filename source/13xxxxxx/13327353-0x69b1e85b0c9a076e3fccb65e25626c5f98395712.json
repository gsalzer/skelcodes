{"status":"1","message":"OK","result":[{"SourceCode":"# @version ^0.2.12\r\n\r\n\"\"\"\r\n@title Paladin Loan Killer\r\n@notice Tries to kill a Borrow (a PalLoan) that is over the health factor\r\n        Receives ERC20 as reward, can withdraw them to the admin address\r\n\"\"\"\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface PalPool:\r\n    def killBorrow(loanPool: address): nonpayable\r\n    def isKillable(_loan: address) -> bool: view\r\n    def _updateInterest() -> bool: nonpayable\r\n\r\n\r\nevent Kill:\r\n    pool: indexed(address)\r\n    loan: indexed(address)\r\n\r\n\r\nadmin: address\r\nkiller: address\r\n\r\n\r\n@external\r\ndef __init__(_killer: address):\r\n    self.admin = msg.sender\r\n    self.killer = _killer\r\n\r\n\r\n\r\n@external\r\ndef kill(_pool: address, _loan: address) -> bool:\r\n    \"\"\"\r\n    @notice Try to kill a Borrow in a PalPool\r\n    @param _pool : address of the PalPool\r\n    @param _loan : address of the PalLoan\r\n    @return Success\r\n    \"\"\"\r\n    assert msg.sender == self.killer, \"Killer only can call\"\r\n\r\n    PalPool(_pool)._updateInterest()\r\n\r\n    assert PalPool(_pool).isKillable(_loan), \"Loan not killable\"\r\n\r\n    PalPool(_pool).killBorrow(_loan)\r\n\r\n    log Kill(_pool, _loan)\r\n\r\n    return True\r\n\r\n\r\n@external\r\n@view\r\ndef balanceERC20(_token: address) -> uint256:\r\n    \"\"\"\r\n    @notice Balance of the contract for a given ERC20\r\n    @param _token : address of the ERC20\r\n    @return balance amount\r\n    \"\"\"\r\n    return ERC20(_token).balanceOf(self)\r\n\r\n\r\n@external\r\ndef withdrawERC20(_token: address, _amount: uint256) -> bool:\r\n    \"\"\"\r\n    @notice Withdraw the given amount in the given ERC20\r\n    @param _token : address of the ERC20\r\n    @param _amount : amount ot withdraw\r\n    @return Success\r\n    \"\"\"\r\n    assert msg.sender == self.admin, \"Admin function\"\r\n\r\n    assert ERC20(_token).balanceOf(self) > 0, \"No balance to withdraw\"\r\n\r\n    success: bool = ERC20(_token).transfer(self.admin, _amount)\r\n\r\n    assert success, \"Transfer failed\"\r\n\r\n    return success\r\n\r\n\r\n@external\r\ndef changeAdmin(_new_admin: address):\r\n    \"\"\"\r\n    @notice Change Admin of the contract\r\n    @param _new_admin : address of the new admin\r\n    \"\"\"\r\n    assert msg.sender == self.admin, \"Admin function\"\r\n\r\n    self.admin = _new_admin","ABI":"[{\"name\":\"Kill\",\"inputs\":[{\"name\":\"pool\",\"type\":\"address\",\"indexed\":true},{\"name\":\"loan\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_killer\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"kill\",\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_loan\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":14035},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceERC20\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2816},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdrawERC20\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":9792},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"changeAdmin\",\"inputs\":[{\"name\":\"_new_admin\",\"type\":\"address\"}],\"outputs\":[],\"gas\":37664}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.12","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000006800922954920940b41a4f72154dce342dca77f","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}