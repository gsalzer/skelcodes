{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface IERC20{\r\n    function transferFrom(address holder, address recipient, uint amount) external  returns (bool);\r\n}\r\n\r\ncontract PayMultiple{\r\n    uint constant ONE = 1 ether;\r\n    function pay (address token, address [] memory recipients, uint  []  memory amounts) external {\r\n        for(uint i =0; i< recipients.length;i++) {\r\n            require(recipients[i] != address(0));\r\n            require(IERC20(token).transferFrom(msg.sender, recipients[i], amounts[i]*ONE),\"PM: transfer failed.\");\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PayMultiple","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c20830ebd97f5e8c43fb52731ebd21ad34b66d690dab24affd06b4e54c5b1df2"}]}