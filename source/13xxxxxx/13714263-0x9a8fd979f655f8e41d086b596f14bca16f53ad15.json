{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\ninterface Callable {\r\n\tfunction tokenCallback(address _from, uint256 _tokens, bytes calldata _data) external returns (bool);\r\n}\r\n\r\ninterface KRILL {\r\n\tfunction balanceOf(address) external view returns (uint256);\r\n\tfunction transfer(address, uint256) external returns (bool);\r\n\tfunction transferFrom(address, address, uint256) external returns (bool);\r\n}\r\n\r\ncontract cKRILL {\r\n\r\n\tuint256 constant private FLOAT_SCALAR = 2**64;\r\n\tuint256 constant private BUY_TAX = 10;\r\n\tuint256 constant private SELL_TAX = 10;\r\n\tuint256 constant private STARTING_PRICE = 1e18;\r\n\tuint256 constant private INCREMENT = 1e13;\r\n\r\n\tstring constant public name = \"Krill Compounder\";\r\n\tstring constant public symbol = \"cKRILL\";\r\n\tuint8 constant public decimals = 18;\r\n\r\n\tstruct User {\r\n\t\tuint256 balance;\r\n\t\tmapping(address => uint256) allowance;\r\n\t\tint256 scaledPayout;\r\n\t}\r\n\r\n\tstruct Info {\r\n\t\tuint256 totalSupply;\r\n\t\tmapping(address => User) users;\r\n\t\tuint256 scaledKrillPerToken;\r\n\t\tuint256 openingTime;\r\n\t\tKRILL krill;\r\n\t}\r\n\tInfo private info;\r\n\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 tokens);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 tokens);\r\n\tevent Buy(address indexed buyer, uint256 amountSpent, uint256 tokensReceived);\r\n\tevent Sell(address indexed seller, uint256 tokensSpent, uint256 amountReceived);\r\n\tevent Withdraw(address indexed user, uint256 amount);\r\n\tevent Reinvest(address indexed user, uint256 amount);\r\n\r\n\r\n\tconstructor(KRILL _krill, uint256 _openingTime) {\r\n\t\tinfo.krill = _krill;\r\n\t\tinfo.openingTime = _openingTime;\r\n\t}\r\n\r\n\tfunction disburse(uint256 _amount) external {\r\n\t\trequire(_amount > 0);\r\n\t\tuint256 _balanceBefore = info.krill.balanceOf(address(this));\r\n\t\tinfo.krill.transferFrom(msg.sender, address(this), _amount);\r\n\t\tuint256 _amountReceived = info.krill.balanceOf(address(this)) - _balanceBefore;\r\n\t\tinfo.scaledKrillPerToken += _amountReceived * FLOAT_SCALAR / info.totalSupply;\r\n\t}\r\n\r\n\tfunction buy(uint256 _amount) external returns (uint256) {\r\n\t\treturn buyFor(_amount, msg.sender);\r\n\t}\r\n\r\n\tfunction buyFor(uint256 _amount, address _user) public returns (uint256) {\r\n\t\trequire(_amount > 0);\r\n\t\tuint256 _balanceBefore = info.krill.balanceOf(address(this));\r\n\t\tinfo.krill.transferFrom(msg.sender, address(this), _amount);\r\n\t\tuint256 _amountReceived = info.krill.balanceOf(address(this)) - _balanceBefore;\r\n\t\treturn _buy(_amountReceived, _user);\r\n\t}\r\n\r\n\tfunction tokenCallback(address _from, uint256 _tokens, bytes calldata) external returns (bool) {\r\n\t\trequire(msg.sender == address(info.krill));\r\n\t\trequire(_tokens > 0);\r\n\t\t_buy(_tokens, _from);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction sell(uint256 _tokens) external returns (uint256) {\r\n\t\trequire(balanceOf(msg.sender) >= _tokens);\r\n\t\treturn _sell(_tokens);\r\n\t}\r\n\r\n\tfunction withdraw() external returns (uint256) {\r\n\t\tuint256 _dividends = dividendsOf(msg.sender);\r\n\t\trequire(_dividends > 0);\r\n\t\tinfo.users[msg.sender].scaledPayout += int256(_dividends * FLOAT_SCALAR);\r\n\t\tinfo.krill.transfer(msg.sender, _dividends);\r\n\t\temit Withdraw(msg.sender, _dividends);\r\n\t\treturn _dividends;\r\n\t}\r\n\r\n\tfunction reinvest() external returns (uint256) {\r\n\t\tuint256 _dividends = dividendsOf(msg.sender);\r\n\t\trequire(_dividends > 0);\r\n\t\tinfo.users[msg.sender].scaledPayout += int256(_dividends * FLOAT_SCALAR);\r\n\t\temit Reinvest(msg.sender, _dividends);\r\n\t\treturn _buy(_dividends, msg.sender);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _tokens) external returns (bool) {\r\n\t\treturn _transfer(msg.sender, _to, _tokens);\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _tokens) external returns (bool) {\r\n\t\tinfo.users[msg.sender].allowance[_spender] = _tokens;\r\n\t\temit Approval(msg.sender, _spender, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _tokens) external returns (bool) {\r\n\t\trequire(info.users[_from].allowance[msg.sender] >= _tokens);\r\n\t\tinfo.users[_from].allowance[msg.sender] -= _tokens;\r\n\t\treturn _transfer(_from, _to, _tokens);\r\n\t}\r\n\r\n\tfunction transferAndCall(address _to, uint256 _tokens, bytes calldata _data) external returns (bool) {\r\n\t\t_transfer(msg.sender, _to, _tokens);\r\n\t\tuint32 _size;\r\n\t\tassembly {\r\n\t\t\t_size := extcodesize(_to)\r\n\t\t}\r\n\t\tif (_size > 0) {\r\n\t\t\trequire(Callable(_to).tokenCallback(msg.sender, _tokens, _data));\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn info.totalSupply;\r\n\t}\r\n\r\n\tfunction currentPrices() public view returns (uint256 truePrice, uint256 buyPrice, uint256 sellPrice) {\r\n\t\ttruePrice = STARTING_PRICE + INCREMENT * totalSupply() / 1e18;\r\n\t\tbuyPrice = truePrice * 100 / (100 - BUY_TAX);\r\n\t\tsellPrice = truePrice * (100 - SELL_TAX) / 100;\r\n\t}\r\n\r\n\tfunction balanceOf(address _user) public view returns (uint256) {\r\n\t\treturn info.users[_user].balance;\r\n\t}\r\n\r\n\tfunction dividendsOf(address _user) public view returns (uint256) {\r\n\t\treturn uint256(int256(info.scaledKrillPerToken * balanceOf(_user)) - info.users[_user].scaledPayout) / FLOAT_SCALAR;\r\n\t}\r\n\r\n\tfunction allInfoFor(address _user) external view returns (uint256 contractBalance, uint256 totalTokenSupply, uint256 truePrice, uint256 buyPrice, uint256 sellPrice, uint256 openingTime, uint256 userETH, uint256 userKRILL, uint256 userBalance, uint256 userDividends, uint256 userLiquidValue) {\r\n\t\tcontractBalance = info.krill.balanceOf(address(this));\r\n\t\ttotalTokenSupply = totalSupply();\r\n\t\t(truePrice, buyPrice, sellPrice) = currentPrices();\r\n\t\topeningTime = info.openingTime;\r\n\t\tuserETH = _user.balance;\r\n\t\tuserKRILL = info.krill.balanceOf(_user);\r\n\t\tuserBalance = balanceOf(_user);\r\n\t\tuserDividends = dividendsOf(_user);\r\n\t\tuserLiquidValue = calculateResult(userBalance, false, false) + userDividends;\r\n\t}\r\n\r\n\tfunction allowance(address _user, address _spender) external view returns (uint256) {\r\n\t\treturn info.users[_user].allowance[_spender];\r\n\t}\r\n\r\n\tfunction calculateResult(uint256 _amount, bool _isBuy, bool _inverse) public view returns (uint256) {\r\n\t\tuint256 _buyPrice;\r\n\t\tuint256 _sellPrice;\r\n\t\t( , _buyPrice, _sellPrice) = currentPrices();\r\n\t\tuint256 _rate = (_isBuy ? _buyPrice : _sellPrice);\r\n\t\tuint256 _increment = INCREMENT * (_isBuy ? 100 : (100 - SELL_TAX)) / (_isBuy ? (100 - BUY_TAX) : 100);\r\n\t\tif ((_isBuy && !_inverse) || (!_isBuy && _inverse)) {\r\n\t\t\tif (_inverse) {\r\n\t\t\t\treturn (2 * _rate - _sqrt(4 * _rate * _rate + _increment * _increment - 4 * _rate * _increment - 8 * _amount * _increment) - _increment) * 1e18 / (2 * _increment);\r\n\t\t\t} else {\r\n\t\t\t\treturn (_sqrt((_increment + 2 * _rate) * (_increment + 2 * _rate) + 8 * _amount * _increment) - _increment - 2 * _rate) * 1e18 / (2 * _increment);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (_inverse) {\r\n\t\t\t\treturn (_rate * _amount + (_increment * (_amount + 1e18) / 2e18) * _amount) / 1e18;\r\n\t\t\t} else {\r\n\t\t\t\treturn (_rate * _amount - (_increment * (_amount + 1e18) / 2e18) * _amount) / 1e18;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _transfer(address _from, address _to, uint256 _tokens) internal returns (bool) {\r\n\t\trequire(info.users[_from].balance >= _tokens);\r\n\t\tinfo.users[_from].balance -= _tokens;\r\n\t\tinfo.users[_from].scaledPayout -= int256(_tokens * info.scaledKrillPerToken);\r\n\t\tinfo.users[_to].balance += _tokens;\r\n\t\tinfo.users[_to].scaledPayout += int256(_tokens * info.scaledKrillPerToken);\r\n\t\temit Transfer(_from, _to, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _buy(uint256 _amount, address _user) internal returns (uint256 tokens) {\r\n\t\trequire(block.timestamp >= info.openingTime);\r\n\t\tuint256 _tax = _amount * BUY_TAX / 100;\r\n\t\ttokens = calculateResult(_amount, true, false);\r\n\t\tinfo.totalSupply += tokens;\r\n\t\tinfo.users[_user].balance += tokens;\r\n\t\tinfo.users[_user].scaledPayout += int256(tokens * info.scaledKrillPerToken);\r\n\t\tinfo.scaledKrillPerToken += _tax * FLOAT_SCALAR / info.totalSupply;\r\n\t\temit Transfer(address(0x0), _user, tokens);\r\n\t\temit Buy(_user, _amount, tokens);\r\n\t}\r\n\r\n\tfunction _sell(uint256 _tokens) internal returns (uint256 amount) {\r\n\t\trequire(info.users[msg.sender].balance >= _tokens);\r\n\t\tamount = calculateResult(_tokens, false, false);\r\n\t\tuint256 _tax = amount * SELL_TAX / (100 - SELL_TAX);\r\n\t\tinfo.totalSupply -= _tokens;\r\n\t\tinfo.users[msg.sender].balance -= _tokens;\r\n\t\tinfo.users[msg.sender].scaledPayout -= int256(_tokens * info.scaledKrillPerToken);\r\n\t\tinfo.scaledKrillPerToken += _tax * FLOAT_SCALAR / info.totalSupply;\r\n\t\tinfo.krill.transfer(msg.sender, amount);\r\n\t\temit Transfer(msg.sender, address(0x0), _tokens);\r\n\t\temit Sell(msg.sender, _tokens, amount);\r\n\t}\r\n\r\n\tfunction _sqrt(uint256 _n) internal pure returns (uint256 result) {\r\n\t\tuint256 _tmp = (_n + 1) / 2;\r\n\t\tresult = _n;\r\n\t\twhile (_tmp < result) {\r\n\t\t\tresult = _tmp;\r\n\t\t\t_tmp = (_n / _tmp + _tmp) / 2;\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract KRILL\",\"name\":\"_krill\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_openingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSpent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensReceived\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSpent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"truePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userKRILL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userDividends\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userLiquidValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"buyFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBuy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_inverse\",\"type\":\"bool\"}],\"name\":\"calculateResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"truePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"disburse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"cKRILL","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000f59bfeed034092e399cc43ff79edab15e2e187350000000000000000000000000000000000000000000000000000000061a61240","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://bf7dd50c30b1794352c1c8147d06eb5f27f8fa471cc8be9d0c8ab31227080ea5"}]}