{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/MultiSend.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/// @author: manifold.xyz\\r\\n\\r\\n/**\\r\\n * Send ETH to multiple users \\r\\n */\\r\\n \\r\\n contract MultiSend {\\r\\n     \\r\\n    struct SendData {\\r\\n        address receiver;\\r\\n        uint256 amount;\\r\\n    }\\r\\n     \\r\\n    function multiSend(SendData[] calldata sendData) public payable {\\r\\n        uint256 totalAmount;\\r\\n        for (uint i = 0; i < sendData.length; i++) {\\r\\n            totalAmount += sendData[i].amount;\\r\\n        }\\r\\n        \\r\\n        require(totalAmount == msg.value, \\\"Invalid amount\\\");\\r\\n        \\r\\n        uint256 totalRefund;\\r\\n        for (uint i = 0; i < sendData.length; i++) {\\r\\n            (bool sent, ) = sendData[i].receiver.call{value: sendData[i].amount}(\\\"\\\");\\r\\n            if (!sent) {\\r\\n                // On failure, accrue to refund to sender\\r\\n                totalRefund += sendData[i].amount;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (totalRefund > 0) {\\r\\n            // Refund any amounts necessary\\r\\n            (bool sent, ) = msg.sender.call{value: totalRefund}(\\\"\\\");\\r\\n            if (!sent) {\\r\\n                revert(\\\"Send failure\\\");\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n }\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiSend.SendData[]\",\"name\":\"sendData\",\"type\":\"tuple[]\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"MultiSend","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"1000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}