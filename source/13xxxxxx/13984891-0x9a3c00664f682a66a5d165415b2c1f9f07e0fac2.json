{"status":"1","message":"OK","result":[{"SourceCode":"{\"IValidator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * Interface for a validation mechanism for mint destination addresses.\\n */\\ninterface IValidator {\\n    \\n  /**\\n   * Get error message for this validator.\\n   */   \\n  function errorMessage() external view returns (string memory);\\n\\n  /**\\n   * Validates that the given destination address is validate for a mint. Function\\n   * will return false if validation fails.\\n   */\\n  function validateMint(address _to) external view returns (bool);\\n}\\n\"},\"ValidateMultiple.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IValidator.sol\\\";\\n\\ncontract ValidateMultiple is IValidator {\\n\\n  IValidator[] validators;\\n\\n  constructor(address[] memory _validators) {\\n    for (uint i = 0; i \\u003c _validators.length; i++) {\\n      validators.push(IValidator(_validators[i]));\\n    }\\n  }\\n\\n  function errorMessage() external view returns (string memory) {\\n    string memory error = \\\"\\\";\\n    for (uint i = 0; i \\u003c validators.length; i++) {\\n      string(abi.encodePacked(error, \\\" and \\\", validators[i].errorMessage));\\n    }\\n    return error;\\n  }\\n\\n  function validateMint(address _address) external view returns(bool) {\\n    bool valid = false;\\n    for (uint i = 0; i \\u003c validators.length; i++) {\\n      valid = valid || validators[i].validateMint(_address);\\n    }\\n    return valid;\\n  }\\n}\\n\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"errorMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"validateMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ValidateMultiple","CompilerVersion":"v0.8.11+commit.d7f03943","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000d32f31670bd1d49d4aa4835f63d81e6a67d53f2e000000000000000000000000502552b7e9a0d2159dbe8d00c929957a2204b1cb","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://91a1ea38f635a09897e13381e03c25b7a4b254cbe5e645933100d436aa4909f9"}]}