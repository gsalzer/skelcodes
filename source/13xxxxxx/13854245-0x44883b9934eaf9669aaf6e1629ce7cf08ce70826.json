{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2020-11-24\r\n*/\r\n\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract ElectionManager{\r\n    \r\n    struct Election{\r\n        uint id;\r\n        uint total;\r\n        string name;\r\n        uint optionsCount;\r\n        string[] options;\r\n        string json;\r\n        uint[] optionVotes;\r\n        mapping(address => uint) userVotes;\r\n    }\r\n\r\n    struct VoteOption{\r\n        string name;\r\n        uint id;\r\n    }\r\n\r\n    mapping(address => bool) public voters;\r\n\r\n    mapping(address => bool) public admins;\r\n    address[] public adminsList;\r\n\r\n    mapping(uint => Election) public elections;\r\n\r\n\r\n    uint public lastElectionId = 1;\r\n    uint public lastAdminId = 1;\r\n\r\n    uint256 public voteFee = 0.01 ether;\r\n\r\n    event NewElection(string name, uint id);\r\n    event UserVoteEvent(address user, uint electionId, \r\n        string electionName, uint vote, string voteName);\r\n\r\n\r\n    constructor(){\r\n        admins[msg.sender] = true;\r\n        adminsList.push(msg.sender);\r\n    }\r\n\r\n    receive () external payable {\r\n\r\n    }\r\n\r\n    modifier isAdmin(){\r\n        require(admins[msg.sender], \"You are not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier isVoter(){\r\n        require(voters[msg.sender], \"You are not voter\");\r\n        _;\r\n    }\r\n\r\n    function adminAddVoter(address _addr) isAdmin public payable{\r\n        voters[_addr] = true;\r\n        require(msg.value > 0, \"The transaction amount should be over 0.\");\r\n        require(msg.value == voteFee, \"The transaction amount is not matched with contract amount.\");\r\n\r\n        payable(_addr).transfer(msg.value);    \r\n\r\n    }\r\n\r\n    function adminRemoveVoter(address _addr) isAdmin public{\r\n        voters[_addr] = false;\r\n    }\r\n\r\n    function adminAddAdmin(address _addr) isAdmin public{\r\n        admins[_addr] = true;\r\n        lastAdminId++;\r\n        adminsList.push(_addr);\r\n    }\r\n\r\n    function adminSetVoteFee(uint256 _fee) isAdmin public{\r\n        voteFee = _fee;\r\n    }\r\n\r\n    function adminAddElection(string memory _name, string[] memory _options, string memory _json) isAdmin public{\r\n        Election storage e = elections[lastElectionId++];\r\n        e.name = _name;\r\n        e.id = lastElectionId;\r\n        e.json = _json;\r\n        for(uint i = 0; i< _options.length; i++){\r\n            e.options.push(_options[i]);\r\n            e.optionVotes.push(0);\r\n        }\r\n        emit NewElection(_name, lastElectionId-1);\r\n    }\r\n\r\n    function vote(uint _electionId, uint _vote) isVoter public{\r\n        require(elections[_electionId].id > 0, \"Invalid Election\");\r\n        require(elections[_electionId].userVotes[msg.sender] <= 0, \"Already voted\");\r\n        elections[_electionId].total += 1;\r\n        elections[_electionId].optionVotes[_vote] += 1;\r\n        elections[_electionId].userVotes[msg.sender] = _vote;\r\n\r\n        emit UserVoteEvent(msg.sender, _electionId, \r\n            elections[_electionId].name, \r\n            _vote, elections[_electionId].options[_vote-1]);\r\n    }\r\n\r\n    function userVote(address _addr, uint _electionId) public view returns(uint _vote){\r\n        _vote = elections[_electionId].userVotes[_addr];\r\n    }\r\n\r\n    function getAdmins() public view returns(address[] memory _admins){\r\n        _admins = adminsList;\r\n    }\r\n\r\n    function electionInfo(uint _id) public view returns(\r\n        string[] memory _options,\r\n        uint[] memory _optionVotes,\r\n        uint _total,\r\n        string memory _name,\r\n        string memory _json\r\n    ){\r\n        _options = elections[_id].options;\r\n        _total = elections[_id].total;\r\n        _name = elections[_id].name;\r\n        _optionVotes = elections[_id].optionVotes;\r\n        _json = elections[_id].json;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NewElection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"electionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"electionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"voteName\",\"type\":\"string\"}],\"name\":\"UserVoteEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"adminAddAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_json\",\"type\":\"string\"}],\"name\":\"adminAddElection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"adminAddVoter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"adminRemoveVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"adminSetVoteFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adminsList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"electionInfo\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_optionVotes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"elections\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"optionsCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAdminId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastElectionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_electionId\",\"type\":\"uint256\"}],\"name\":\"userVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_vote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_electionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vote\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ElectionManager","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://48db6148bd9ba0db6998afbdd1323c7c5feaf6e21fadb2cfbeee40f77cacc8a6"}]}