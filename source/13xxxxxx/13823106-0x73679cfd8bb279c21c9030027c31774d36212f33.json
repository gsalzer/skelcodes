{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/centers/Club1.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Center.sol\\\";\\n\\ncontract AtopiaClub1 is AtopiaCenter {\\n\\tfunction initialize(address space) public virtual override {\\n\\t\\tAtopiaCenter.init(space, \\\"Crazy Nights\\\", \\\"Atopia Center - Club\\\");\\n\\t\\temission = 300;\\n\\t\\tminAge = (5 * 365 days) / 10;\\n\\t\\tenjoyFee = 1000;\\n\\t\\timage = '<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 1000 1000\\\" style=\\\"enable-background:new 0 0 1000 1000;\\\" xml:space=\\\"preserve\\\"><style type=\\\"text/css\\\">.s{stroke:#000000;stroke-width:10;stroke-miterlimit:10;}.d{stroke-linecap:round;stroke-linejoin:round}.e{fill:none}.c1{fill:#FFA6D8}.c2{fill:#A4A4F4}.c3{fill:#C5C5FF}.c4{fill:#F4DA5B}.c5{stop-color:#FFA6D8}.c6{stop-color:#A4A4F4}.c7{fill:#FFC08D}.c8{fill:#4BBD80}</style><g class=\\\"s d\\\"><polygon class=\\\"c1\\\" points=\\\"198.65,736.91 708.89,736.91 712.31,593.09 196.94,629.04\\\"/><polygon class=\\\"c2\\\" points=\\\"710.6,736.91 799.63,738.62 803.06,613.63 712.31,593.09\\\"/><polygon class=\\\"c3\\\" points=\\\"664.37,240.37 660.43,595.56 556.5,602.65 563.35,165.04\\\"/><polygon class=\\\"c2\\\" points=\\\"462,611 498,608 489,737 455,736\\\"/><polygon class=\\\"c2\\\" points=\\\"340,619 311,621 313,736 340,736\\\"/><line x1=\\\"528.79\\\" y1=\\\"607.68\\\" x2=\\\"519\\\" y2=\\\"735\\\"/><polygon class=\\\"c4\\\" points=\\\"340,619 461,611 455,736 340,736\\\"/><line x1=\\\"286.26\\\" y1=\\\"735.2\\\" x2=\\\"283.35\\\" y2=\\\"624.54\\\"/></g><linearGradient id=\\\"lg1\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"267.5063\\\" y1=\\\"628.1265\\\" x2=\\\"283.586\\\" y2=\\\"318.4593\\\"><stop offset=\\\"0.3\\\" class=\\\"c5\\\"/><stop offset=\\\"1\\\" class=\\\"c6\\\"/></linearGradient><path style=\\\"fill:url(#lg1)\\\" d=\\\"M219.2,625.62c0,0-3.96-251.83,74.8-306.62l24,301L219.2,625.62z\\\"/><g style=\\\"opacity:0.8;fill:#FFFFFF\\\"><polygon points=\\\"324.11,524.6 216.25,444.13 211.11,488.64 323.64,570.25\\\"/><polygon points=\\\"209.4,495.49 207.53,517.55 324.62,603.11 325.74,579.47\\\"/></g><path class=\\\"s e d\\\" d=\\\"M219.2,625.62c0,0-9.2-252.62,74.8-306.62l31.03,300.32L219.2,625.62z\\\"/><linearGradient id=\\\"lg2\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"286.5359\\\" y1=\\\"593.678\\\" x2=\\\"597.051\\\" y2=\\\"227.607\\\"><stop  offset=\\\"0\\\" class=\\\"c5\\\"/><stop  offset=\\\"1\\\" class=\\\"c6\\\"/></linearGradient><polygon style=\\\"fill:url(#lg2)\\\" class=\\\"s\\\" points=\\\"556.41,603.34 561.64,197.57 289.4,262.48 316.8,619.35\\\"/><path class=\\\"s c2\\\" d=\\\"M699.61,591.09l69.2,14.7c0,0,37.67-252.4-150.67-327.74L699.61,591.09z\\\"/><linearGradient id=\\\"lg3\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"642.7665\\\" y1=\\\"597.0062\\\" x2=\\\"636.0984\\\" y2=\\\"265.043\\\"><stop offset=\\\"0.3\\\" class=\\\"c5\\\"/><stop offset=\\\"1\\\" class=\\\"c6\\\"/></linearGradient><path style=\\\"fill:url(#lg3);\\\" d=\\\"M585.61,266.06l-3.42,332.17l116.43-5.14C698.61,593.09,731.15,286.6,585.61,266.06z\\\"/><g style=\\\"opacity:0.8;fill:#FFFFFF\\\"><polygon points=\\\"583.9,500.63 691.77,420.15 696.9,464.67 584.37,546.28\\\"/><polygon points=\\\"698.61,471.52 700.48,493.58 583.39,579.14 582.27,555.5\\\"/></g><path class=\\\"s e d\\\" d=\\\"M585.61,266.06l-3.42,334.17l116.43-7.14C698.61,593.09,731.15,286.6,585.61,266.06z\\\"/><linearGradient id=\\\"lg4\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"373.4626\\\" y1=\\\"20.2399\\\" x2=\\\"445.1289\\\" y2=\\\"319.795\\\"><stop offset=\\\"0.3\\\" class=\\\"c5\\\"/><stop offset=\\\"1\\\" class=\\\"c6\\\"/></linearGradient><polygon style=\\\"fill:url(#lg4)\\\" class=\\\"s d\\\" points=\\\"263.72,272.19 565.06,200.28 567.77,121.75 263.72,206.13\\\"/><polygon class=\\\"s d c2\\\" points=\\\"565.06,200.99 681.2,250.65 684.92,187.3 568.49,122.23\\\"/><g style=\\\"opacity:0.8;fill:url(#lg5)\\\"><linearGradient id=\\\"lg5\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"504.4951\\\" y1=\\\"572.329\\\" x2=\\\"521.496\\\" y2=\\\"244.9237\\\"><stop  offset=\\\"0\\\" style=\\\"stop-color:#F4DA5B\\\"/><stop  offset=\\\"0.4375\\\" style=\\\"stop-color:#FFE98A\\\"/><stop  offset=\\\"0.5527\\\" style=\\\"stop-color:#FFF2BB\\\"/><stop  offset=\\\"0.6575\\\" style=\\\"stop-color:#FFF9E0\\\"/><stop  offset=\\\"0.7418\\\" style=\\\"stop-color:#FFFDF7\\\"/><stop  offset=\\\"0.7951\\\" style=\\\"stop-color:#FFFFFF\\\"/></linearGradient><path d=\\\"M529.11,572.54c0,0,5.84-326.87,3.42-327.03c-25.68-1.71-35.96,5.14-35.96,5.14l11.99,321.89H529.11z\\\"/><path d=\\\"M471.45,575.88c0,0,4.78-321.87,2.37-321.86c-23.48,0.06-35.46,8.62-35.46,8.62l12.54,313.31L471.45,575.88z\\\"/><path d=\\\"M417.71,579.03c0,0-8.6-310.26-10.96-310.19c-21.47,0.65-35.69,6.54-35.69,6.54l26.13,304.61L417.71,579.03z\\\"/><path d=\\\"M363.73,583.92c0,0-10.8-301.55-13.13-301.47c-21.83,0.73-35.64,6.7-35.64,6.7l28.26,295.9L363.73,583.92z\\\"/></g><path class=\\\"s d c2\\\" d=\\\"M500,548.57l32.53-1.71c0,0,5.14,30.82-13.7,32.53C500,581.1,500,548.57,500,548.57z\\\"/><path class=\\\"s d c2\\\" d=\\\"M443.5,554.3l31.9-1.68c0,0,5.04,30.23-13.43,31.9C443.5,586.21,443.5,554.3,443.5,554.3z\\\"/><path class=\\\"s d c2\\\" d=\\\"M392.13,560.8l26.87-1.41c0,0,4.24,25.45-11.31,26.87C392.13,587.66,392.13,560.8,392.13,560.8z\\\"/><path class=\\\"s d c2\\\" d=\\\"M337.34,565.93l26.87-1.41c0,0,4.24,25.45-11.31,26.87C337.34,592.8,337.34,565.93,337.34,565.93z\\\"/><path class=\\\"s d c7\\\" d=\\\"M51.22,734.62l896.56,4.61l-95.21,45.41c-3.04,1.45-6.25,2.54-9.55,3.25l-393.89,84.69c-53.99,11.61-110.37,2.62-158.07-25.21l-74.24-43.31c-4.96-2.89-10.67-4.23-16.4-3.84l-51.88,3.55c-7.92,0.54-15.75-1.97-21.88-7.01L51.22,734.62z\\\"/><path class=\\\"s d c8\\\" d=\\\"M337,736c-27.36,16.65-51,33-56,34c-45.82,9.16-106.95,4.03-137-11c-4-2-12.32-17.48-17-24L337,736z\\\"/><path class=\\\"s d c8\\\" d=\\\"M459,737c0.13-0.04,5.11,16.15,6,19.62c3.12,12.1,8.54,27.57,19.94,40.12c3.91,6.05,11.32,8.83,18.24,6.85C634.92,781.18,758.86,759.94,882,739C740.94,738.22,459,737,459,737z\\\"/></svg>';\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IAtopia.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBucks.sol\\\";\\n\\ninterface IAtopia {\\n\\tfunction owner() external view returns (address);\\n\\n\\tfunction bucks() external view returns (IBucks);\\n\\n\\tfunction getAge(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction ownerOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction update(uint256 tokenId) external;\\n\\n\\tfunction exitCenter(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress center,\\n\\t\\tuint256 grown,\\n\\t\\tuint256 enjoyFee\\n\\t) external;\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IBucks.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBucks {\\n\\tfunction mint(address account, uint256 amount) external;\\n\\n\\tfunction burn(uint256 amount) external;\\n\\n\\tfunction burnFrom(address account, uint256 amount) external;\\n\\n\\tfunction transfer(address recipient, uint256 amount) external returns (bool);\\n\\n\\tfunction transferFrom(\\n\\t\\taddress sender,\\n\\t\\taddress recipient,\\n\\t\\tuint256 amount\\n\\t) external returns (bool);\\n\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/ISpace.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAtopia.sol\\\";\\n\\nstruct Task {\\n\\tuint256 id;\\n\\tuint256 info;\\n\\tuint256 rewards;\\n}\\n\\ninterface ISpace {\\n\\tfunction atopia() external view returns (IAtopia);\\n\\n\\tfunction ownerOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction lives(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tasks(uint256 id) external view returns (Task memory);\\n}\\n\"\r\n    },\r\n    \"contracts/libs/Base64.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Base64 {\\n\\tstring private constant base64stdchars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n\\tfunction encode(bytes memory data) internal pure returns (string memory) {\\n\\t\\tif (data.length == 0) return \\\"\\\";\\n\\n\\t\\t// load the table into memory\\n\\t\\tstring memory table = base64stdchars;\\n\\n\\t\\t// multiply by 4/3 rounded up\\n\\t\\tuint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n\\t\\t// add some extra buffer at the end required for the writing\\n\\t\\tstring memory result = new string(encodedLen + 32);\\n\\n\\t\\tassembly {\\n\\t\\t\\t// set the actual output length\\n\\t\\t\\tmstore(result, encodedLen)\\n\\n\\t\\t\\t// prepare the lookup table\\n\\t\\t\\tlet tablePtr := add(table, 1)\\n\\n\\t\\t\\t// input ptr\\n\\t\\t\\tlet dataPtr := data\\n\\t\\t\\tlet endPtr := add(dataPtr, mload(data))\\n\\n\\t\\t\\t// result ptr, jump over length\\n\\t\\t\\tlet resultPtr := add(result, 32)\\n\\n\\t\\t\\t// run over the input, 3 bytes at a time\\n\\t\\t\\tfor {\\n\\n\\t\\t\\t} lt(dataPtr, endPtr) {\\n\\n\\t\\t\\t} {\\n\\t\\t\\t\\tdataPtr := add(dataPtr, 3)\\n\\n\\t\\t\\t\\t// read 3 bytes\\n\\t\\t\\t\\tlet input := mload(dataPtr)\\n\\n\\t\\t\\t\\t// write 4 characters\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(6, input), 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t\\tmstore(resultPtr, shl(248, mload(add(tablePtr, and(input, 0x3F)))))\\n\\t\\t\\t\\tresultPtr := add(resultPtr, 1)\\n\\t\\t\\t}\\n\\n\\t\\t\\t// padding with '='\\n\\t\\t\\tswitch mod(mload(data), 3)\\n\\t\\t\\tcase 1 {\\n\\t\\t\\t\\tmstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n\\t\\t\\t}\\n\\t\\t\\tcase 2 {\\n\\t\\t\\t\\tmstore(sub(resultPtr, 1), shl(248, 0x3d))\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tfunction toString(uint256 value) internal pure returns (string memory) {\\n\\t\\tif (value == 0) {\\n\\t\\t\\treturn \\\"0\\\";\\n\\t\\t}\\n\\t\\tuint256 temp = value;\\n\\t\\tuint256 digits;\\n\\t\\twhile (temp != 0) {\\n\\t\\t\\tdigits++;\\n\\t\\t\\ttemp /= 10;\\n\\t\\t}\\n\\t\\tbytes memory buffer = new bytes(digits);\\n\\t\\twhile (value != 0) {\\n\\t\\t\\tdigits -= 1;\\n\\t\\t\\tbuffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n\\t\\t\\tvalue /= 10;\\n\\t\\t}\\n\\t\\treturn string(buffer);\\n\\t}\\n}\\n\"\r\n    },\r\n    \"contracts/utils/Center.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/ISpace.sol\\\";\\nimport \\\"../libs/Base64.sol\\\";\\n\\nabstract contract AtopiaCenter {\\n\\taddress implementation_;\\n\\taddress public admin;\\n\\n\\tbool public initialized;\\n\\tusing Base64 for *;\\n\\n\\tstruct Package {\\n\\t\\tuint256 id;\\n\\t\\tstring name;\\n\\t\\tuint256 info;\\n\\t\\tuint256 rewards;\\n\\t}\\n\\n\\tuint16 public constant FEE_PERCENT = 500;\\n\\tuint16 public constant WORK_PERCENT = 1000;\\n\\n\\tuint256 public id;\\n\\tstring public name;\\n\\tstring public description;\\n\\tstring public image;\\n\\tuint256 public emission;\\n\\tuint256 public minAge;\\n\\tuint16 public enjoyFee;\\n\\n\\tuint256 public level;\\n\\tuint256 public progress;\\n\\n\\tISpace public space;\\n\\n\\tuint256 public workAvailable;\\n\\tPackage[] public packages;\\n\\tmapping(uint256 => uint256) public workRewards;\\n\\n\\tuint256 public totalStaking;\\n\\tmapping(uint256 => uint256) public claims;\\n\\tuint256 public currentReflection;\\n\\tuint256 public lastUpdateAt;\\n\\n\\tevent PackageAdded(Package newPackage);\\n\\tevent LevelUpdated(uint256 level);\\n\\n\\tfunction initialize(address _space) public virtual;\\n\\n\\tfunction init(\\n\\t\\taddress _space,\\n\\t\\tstring memory _name,\\n\\t\\tstring memory _description\\n\\t) internal {\\n\\t\\trequire(!initialized);\\n\\t\\tinitialized = true;\\n\\t\\tspace = ISpace(_space);\\n\\t\\tname = _name;\\n\\t\\tdescription = _description;\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(space.ownerOf(id) == msg.sender);\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlySpace() {\\n\\t\\trequire(address(space) == msg.sender);\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction totalPackages() external view returns (uint256) {\\n\\t\\treturn packages.length;\\n\\t}\\n\\n\\tfunction newReflection() public view returns (uint256) {\\n\\t\\treturn currentReflection + (emission / totalStaking) * (block.timestamp - lastUpdateAt);\\n\\t}\\n\\n\\tfunction grown(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn newReflection() - claims[tokenId];\\n\\t}\\n\\n\\tfunction rewards(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn workRewards[tokenId];\\n\\t}\\n\\n\\tfunction getProgress() public view returns (uint256) {\\n\\t\\tuint256 percent = progress / emission;\\n\\t\\treturn percent > 100 ? 100 : percent;\\n\\t}\\n\\n\\tfunction updateReflection() internal {\\n\\t\\tif (totalStaking > 0) {\\n\\t\\t\\tcurrentReflection += (emission / totalStaking) * (block.timestamp - lastUpdateAt);\\n\\t\\t}\\n\\t\\tlastUpdateAt = block.timestamp;\\n\\t}\\n\\n\\tfunction setId(uint256 _id) external onlySpace {\\n\\t\\trequire(address(space) == msg.sender);\\n\\t\\trequire(id == 0);\\n\\t\\tid = _id;\\n\\t}\\n\\n\\tfunction enter(uint256 tokenId) external onlySpace returns (uint256) {\\n\\t\\trequire(space.atopia().getAge(tokenId) >= minAge);\\n\\t\\tupdateReflection();\\n\\t\\ttotalStaking += 1;\\n\\t\\tclaims[tokenId] = currentReflection;\\n\\t\\treturn id << 192;\\n\\t}\\n\\n\\tfunction exit(uint256 tokenId) external onlySpace returns (uint256 _growing) {\\n\\t\\t_growing = grown(tokenId);\\n\\t\\ttotalStaking -= 1;\\n\\t\\tupdateReflection();\\n\\t}\\n\\n\\tfunction work(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint16 packageId,\\n\\t\\tuint256 working\\n\\t) external onlySpace returns (uint256) {\\n\\t\\tif (packageId > 0) {\\n\\t\\t\\tuint16 package = packageId - 1;\\n\\t\\t\\trequire(package < packages.length);\\n\\t\\t\\trequire(space.atopia().getAge(tokenId) >= uint128(packages[package].info));\\n\\t\\t\\trequire(packages[package].rewards <= workAvailable);\\n\\n\\t\\t\\tif (working > 0) {\\n\\t\\t\\t\\tuint16 currentPackage = uint16(working >> 128) - 1;\\n\\t\\t\\t\\tuint256 end = working & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\t\\t\\t\\trequire(block.timestamp >= end);\\n\\t\\t\\t\\tworkRewards[tokenId] += packages[currentPackage].rewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\tworkAvailable -= packages[package].rewards;\\n\\t\\t\\treturn (id << 192) | (uint256(packageId) << 128) | (block.timestamp + (packages[package].info >> 128));\\n\\t\\t} else {\\n\\t\\t\\trequire(working > 0);\\n\\n\\t\\t\\tuint16 currentPackage = uint16(working >> 128) - 1;\\n\\t\\t\\tuint256 end = working & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\t\\t\\tuint256 totalRewards = 0;\\n\\t\\t\\tif (block.timestamp >= end) {\\n\\t\\t\\t\\ttotalRewards += packages[currentPackage].rewards;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tworkAvailable += packages[currentPackage].rewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (workRewards[tokenId] > 0) {\\n\\t\\t\\t\\ttotalRewards += workRewards[tokenId];\\n\\t\\t\\t\\tworkRewards[tokenId] = 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (totalRewards > 0) {\\n\\t\\t\\t\\tspace.atopia().bucks().transfer(space.atopia().ownerOf(tokenId), totalRewards);\\n\\t\\t\\t\\tprogress += totalRewards;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn totalRewards;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction addPackage(string memory packageName, uint256 taskId) external onlyOwner {\\n\\t\\tTask memory task = space.tasks(taskId);\\n\\t\\tPackage memory newPackage = Package(packages.length + 1, packageName, task.info, task.rewards);\\n\\t\\tpackages.push(newPackage);\\n\\t\\temit PackageAdded(newPackage);\\n\\t}\\n\\n\\tfunction upgrade() external onlyOwner {\\n\\t\\trequire(getProgress() == 100);\\n\\t\\tprogress -= emission * 100;\\n\\t\\temission = (emission * 110) / 100;\\n\\t\\tlevel += 1;\\n\\t\\temit LevelUpdated(level);\\n\\t}\\n\\n\\tfunction withdraw() external onlyOwner {\\n\\t\\tuint256 bucks = space.atopia().bucks().balanceOf(address(this)) - workAvailable;\\n\\t\\tuint256 fee = (bucks * FEE_PERCENT) / 10000;\\n\\t\\tuint256 newWork = (bucks * WORK_PERCENT) / 10000;\\n\\t\\tworkAvailable += newWork;\\n\\t\\tspace.atopia().bucks().burn(bucks - fee - newWork);\\n\\t\\tspace.atopia().bucks().transfer(msg.sender, fee);\\n\\t}\\n\\n\\tfunction metadata() external view returns (string memory) {\\n\\t\\treturn\\n\\t\\t\\tstring(\\n\\t\\t\\t\\tabi.encodePacked(\\n\\t\\t\\t\\t\\t\\\"data:application/json;base64,\\\",\\n\\t\\t\\t\\t\\tBase64.encode(\\n\\t\\t\\t\\t\\t\\tabi.encodePacked(\\n\\t\\t\\t\\t\\t\\t\\t'{\\\"name\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tname,\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"description\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tdescription,\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"image\\\":\\\"data:image/svg+xml;base64,',\\n\\t\\t\\t\\t\\t\\t\\tBase64.encode(bytes(image)),\\n\\t\\t\\t\\t\\t\\t\\t'\\\",\\\"attributes\\\":[{\\\"display_type\\\":\\\"number\\\",\\\"trait_type\\\":\\\"Emission\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\temission.toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"number\\\",\\\"trait_type\\\":\\\"Min Age\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\t((minAge * 10) / 365 days).toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"trait_type\\\":\\\"Level\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tlevel.toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"boost_percentage\\\",\\\"trait_type\\\":\\\"Progress\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\tgetProgress().toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"},{\\\"display_type\\\":\\\"boost_percentage\\\",\\\"trait_type\\\":\\\"Fee\\\",\\\"value\\\":\\\"',\\n\\t\\t\\t\\t\\t\\t\\t(enjoyFee / 100).toString(),\\n\\t\\t\\t\\t\\t\\t\\t'\\\"}]}'\\n\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t)\\n\\t\\t\\t);\\n\\t}\\n}\\n\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"LevelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AtopiaCenter.Package\",\"name\":\"newPackage\",\"type\":\"tuple\"}],\"name\":\"PackageAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WORK_PERCENT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"packageName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"addPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enjoyFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_growing\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"grown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"image\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"space\",\"outputs\":[{\"internalType\":\"contract ISpace\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"packageId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"working\",\"type\":\"uint256\"}],\"name\":\"work\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"workRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AtopiaClub1","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}