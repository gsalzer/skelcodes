{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"runs\": 200,\r\n      \"enabled\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/common/governance/IGovernance.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.2;\\n\\ninterface IGovernance {\\n    function update(address target, bytes calldata data) external;\\n}\\n\"\r\n    },\r\n    \"contracts/common/Registry.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.2;\\n\\nimport {Governable} from \\\"./governance/Governable.sol\\\";\\nimport {IWithdrawManager} from \\\"../root/withdrawManager/IWithdrawManager.sol\\\";\\n\\n\\ncontract Registry is Governable {\\n    // @todo hardcode constants\\n    bytes32 private constant WETH_TOKEN = keccak256(\\\"wethToken\\\");\\n    bytes32 private constant DEPOSIT_MANAGER = keccak256(\\\"depositManager\\\");\\n    bytes32 private constant STAKE_MANAGER = keccak256(\\\"stakeManager\\\");\\n    bytes32 private constant VALIDATOR_SHARE = keccak256(\\\"validatorShare\\\");\\n    bytes32 private constant WITHDRAW_MANAGER = keccak256(\\\"withdrawManager\\\");\\n    bytes32 private constant CHILD_CHAIN = keccak256(\\\"childChain\\\");\\n    bytes32 private constant STATE_SENDER = keccak256(\\\"stateSender\\\");\\n    bytes32 private constant SLASHING_MANAGER = keccak256(\\\"slashingManager\\\");\\n\\n    address public erc20Predicate;\\n    address public erc721Predicate;\\n\\n    mapping(bytes32 => address) public contractMap;\\n    mapping(address => address) public rootToChildToken;\\n    mapping(address => address) public childToRootToken;\\n    mapping(address => bool) public proofValidatorContracts;\\n    mapping(address => bool) public isERC721;\\n\\n    enum Type {Invalid, ERC20, ERC721, Custom}\\n    struct Predicate {\\n        Type _type;\\n    }\\n    mapping(address => Predicate) public predicates;\\n\\n    event TokenMapped(address indexed rootToken, address indexed childToken);\\n    event ProofValidatorAdded(address indexed validator, address indexed from);\\n    event ProofValidatorRemoved(address indexed validator, address indexed from);\\n    event PredicateAdded(address indexed predicate, address indexed from);\\n    event PredicateRemoved(address indexed predicate, address indexed from);\\n    event ContractMapUpdated(bytes32 indexed key, address indexed previousContract, address indexed newContract);\\n\\n    constructor(address _governance) public Governable(_governance) {}\\n\\n    function updateContractMap(bytes32 _key, address _address) external onlyGovernance {\\n        emit ContractMapUpdated(_key, contractMap[_key], _address);\\n        contractMap[_key] = _address;\\n    }\\n\\n    /**\\n     * @dev Map root token to child token\\n     * @param _rootToken Token address on the root chain\\n     * @param _childToken Token address on the child chain\\n     * @param _isERC721 Is the token being mapped ERC721\\n     */\\n    function mapToken(\\n        address _rootToken,\\n        address _childToken,\\n        bool _isERC721\\n    ) external onlyGovernance {\\n        require(_rootToken != address(0x0) && _childToken != address(0x0), \\\"INVALID_TOKEN_ADDRESS\\\");\\n        rootToChildToken[_rootToken] = _childToken;\\n        childToRootToken[_childToken] = _rootToken;\\n        isERC721[_rootToken] = _isERC721;\\n        IWithdrawManager(contractMap[WITHDRAW_MANAGER]).createExitQueue(_rootToken);\\n        emit TokenMapped(_rootToken, _childToken);\\n    }\\n\\n    function addErc20Predicate(address predicate) public onlyGovernance {\\n        require(predicate != address(0x0), \\\"Can not add null address as predicate\\\");\\n        erc20Predicate = predicate;\\n        addPredicate(predicate, Type.ERC20);\\n    }\\n\\n    function addErc721Predicate(address predicate) public onlyGovernance {\\n        erc721Predicate = predicate;\\n        addPredicate(predicate, Type.ERC721);\\n    }\\n\\n    function addPredicate(address predicate, Type _type) public onlyGovernance {\\n        require(predicates[predicate]._type == Type.Invalid, \\\"Predicate already added\\\");\\n        predicates[predicate]._type = _type;\\n        emit PredicateAdded(predicate, msg.sender);\\n    }\\n\\n    function removePredicate(address predicate) public onlyGovernance {\\n        require(predicates[predicate]._type != Type.Invalid, \\\"Predicate does not exist\\\");\\n        delete predicates[predicate];\\n        emit PredicateRemoved(predicate, msg.sender);\\n    }\\n\\n    function getValidatorShareAddress() public view returns (address) {\\n        return contractMap[VALIDATOR_SHARE];\\n    }\\n\\n    function getWethTokenAddress() public view returns (address) {\\n        return contractMap[WETH_TOKEN];\\n    }\\n\\n    function getDepositManagerAddress() public view returns (address) {\\n        return contractMap[DEPOSIT_MANAGER];\\n    }\\n\\n    function getStakeManagerAddress() public view returns (address) {\\n        return contractMap[STAKE_MANAGER];\\n    }\\n\\n    function getSlashingManagerAddress() public view returns (address) {\\n        return contractMap[SLASHING_MANAGER];\\n    }\\n\\n    function getWithdrawManagerAddress() public view returns (address) {\\n        return contractMap[WITHDRAW_MANAGER];\\n    }\\n\\n    function getChildChainAndStateSender() public view returns (address, address) {\\n        return (contractMap[CHILD_CHAIN], contractMap[STATE_SENDER]);\\n    }\\n\\n    function isTokenMapped(address _token) public view returns (bool) {\\n        return rootToChildToken[_token] != address(0x0);\\n    }\\n\\n    function isTokenMappedAndIsErc721(address _token) public view returns (bool) {\\n        require(isTokenMapped(_token), \\\"TOKEN_NOT_MAPPED\\\");\\n        return isERC721[_token];\\n    }\\n\\n    function isTokenMappedAndGetPredicate(address _token) public view returns (address) {\\n        if (isTokenMappedAndIsErc721(_token)) {\\n            return erc721Predicate;\\n        }\\n        return erc20Predicate;\\n    }\\n\\n    function isChildTokenErc721(address childToken) public view returns (bool) {\\n        address rootToken = childToRootToken[childToken];\\n        require(rootToken != address(0x0), \\\"Child token is not mapped\\\");\\n        return isERC721[rootToken];\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/common/governance/Governable.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.2;\\n\\nimport {IGovernance} from \\\"./IGovernance.sol\\\";\\n\\ncontract Governable {\\n    IGovernance public governance;\\n\\n    constructor(address _governance) public {\\n        governance = IGovernance(_governance);\\n    }\\n\\n    modifier onlyGovernance() {\\n        _assertGovernance();\\n        _;\\n    }\\n\\n    function _assertGovernance() private view {\\n        require(\\n            msg.sender == address(governance),\\n            \\\"Only governance contract is authorized\\\"\\n        );\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/root/withdrawManager/IWithdrawManager.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.2;\\n\\ncontract IWithdrawManager {\\n    function createExitQueue(address token) external;\\n\\n    function verifyInclusion(\\n        bytes calldata data,\\n        uint8 offset,\\n        bool verifyTxInclusion\\n    ) external view returns (uint256 age);\\n\\n    function addExitToQueue(\\n        address exitor,\\n        address childToken,\\n        address rootToken,\\n        uint256 exitAmountOrTokenId,\\n        bytes32 txHash,\\n        bool isRegularExit,\\n        uint256 priority\\n    ) external;\\n\\n    function addInput(\\n        uint256 exitId,\\n        uint256 age,\\n        address utxoOwner,\\n        address token\\n    ) external;\\n\\n    function challengeExit(\\n        uint256 exitId,\\n        uint256 inputId,\\n        bytes calldata challengeData,\\n        address adjudicatorPredicate\\n    ) external;\\n}\\n\"\r\n    }\r\n  },\r\n  \"language\": \"Solidity\"\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractMapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PredicateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PredicateRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ProofValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ProofValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rootToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childToken\",\"type\":\"address\"}],\"name\":\"TokenMapped\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"addErc20Predicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"addErc721Predicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"internalType\":\"enum Registry.Type\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"addPredicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"childToRootToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"contractMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc20Predicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc721Predicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChildChainAndStateSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDepositManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSlashingManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStakeManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getValidatorShareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWethTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWithdrawManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"childToken\",\"type\":\"address\"}],\"name\":\"isChildTokenErc721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMappedAndGetPredicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMappedAndIsErc721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isERC721\",\"type\":\"bool\"}],\"name\":\"mapToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"predicates\",\"outputs\":[{\"internalType\":\"enum Registry.Type\",\"name\":\"_type\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proofValidatorContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"removePredicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rootToChildToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateContractMap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Registry","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000009a15f3a682d086c515be4037bda3b0676203a8ef","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}