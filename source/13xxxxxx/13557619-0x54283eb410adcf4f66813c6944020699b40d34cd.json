{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\nabstract contract Setter {\r\n    function modifyParameters(bytes32, address) external virtual;\r\n    function modifyParameters(bytes32, uint256, uint256, address) external virtual;\r\n    function addAuthorization(address) external virtual;\r\n    function removeAuthorization(address) external virtual;\r\n}\r\n\r\ncontract GovProposal {\r\n    // New contracts\r\n    address public constant chainlinkTWAP = 0x92dC9b16be52De059279916c1eF810877f85F960;\r\n    address public constant stakingOverlay = 0x374eA6547802136FFD20Aacb2c16de0b69b9bCE6;\r\n    address public constant treasuryParamAdjusterOverlay = 0x17DACA422F564133f94674bF493C818D8B58E4E2;\r\n    address public constant fixedRewardsAdjusterOverlay = 0x94ad9752FB73b8487f50551E68Ed6029aDEBbe2e;\r\n    address public constant minMaxRewardsAdjusterOverlay = 0x3C3f8d76d15Da0B380fC34e80079EF3667001094;\r\n\r\n    // Existing contracts\r\n    Setter public constant staking = Setter(0x69c6C08B91010c88c95775B6FD768E5b04EFc106);               // GEB_STAKING\r\n    Setter public constant treasuryParamAdjuster = Setter(0x73FEb3C2DBb87c8E0d040A7CD708F7497853B787); // GEB_TREASURY_CORE_PARAM_ADJUSTER\r\n    Setter public constant fixedRewardsAdjuster = Setter(0xfF5126b97f37DdB4743858b7e0d6c5aE8E5Db2ab);  // GEB_FIXED_REWARDS_ADJUSTER\r\n    Setter public constant minmaxRewardsAdjuster = Setter(0xbe0D9016714c64a877ed28fd3F3C7c8fF513d807); // GEB_MINMAX_REWARDS_ADJUSTER\r\n    Setter public constant rateSetter = Setter(0x7Acfc14dBF2decD1c9213Db32AE7784626daEb48);            // GEB_RRFM_SETTER\r\n    Setter public constant twapRewardsRelayer = Setter(0xE8063b122Bef35d6723E33DBb3446092877C6855);    // MEDIANIZER_RAI_REWARDS_RELAYER\r\n    Setter public constant taxCollector = Setter(0xcDB05aEda142a1B0D6044C09C64e4226c1a281EB);          // GEB_TAX_COLLECTOR\r\n\r\n    function execute(bool) public {\r\n\r\n        // Connect new chainlink twap to rate setter / rewards contract\r\n        rateSetter.modifyParameters(\"orcl\", chainlinkTWAP);\r\n        twapRewardsRelayer.modifyParameters(\"refundRequestor\", chainlinkTWAP);\r\n\r\n        // Attach new overlays\r\n        staking.addAuthorization(stakingOverlay);\r\n        treasuryParamAdjuster.addAuthorization(treasuryParamAdjusterOverlay);\r\n        fixedRewardsAdjuster.addAuthorization(fixedRewardsAdjusterOverlay);\r\n        minmaxRewardsAdjuster.addAuthorization(minMaxRewardsAdjusterOverlay);\r\n\r\n        // Remove the recycling trigger contract from the TaxCollector\r\n        taxCollector.modifyParameters(\"ETH-A\", 2, 0, 0xaE09AFE44fCeA8e93338bdC492A6B038F4092818);\r\n\r\n        // Deauthing deployer\r\n        Setter(stakingOverlay).removeAuthorization(0x3E0139cE3533a42A7D342841aEE69aB2BfEE1d51);\r\n        Setter(treasuryParamAdjusterOverlay).removeAuthorization(0x3E0139cE3533a42A7D342841aEE69aB2BfEE1d51);\r\n        Setter(fixedRewardsAdjusterOverlay).removeAuthorization(0x3E0139cE3533a42A7D342841aEE69aB2BfEE1d51);\r\n        Setter(minMaxRewardsAdjusterOverlay).removeAuthorization(0x3E0139cE3533a42A7D342841aEE69aB2BfEE1d51);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"chainlinkTWAP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedRewardsAdjuster\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedRewardsAdjusterOverlay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMaxRewardsAdjusterOverlay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minmaxRewardsAdjuster\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateSetter\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingOverlay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxCollector\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryParamAdjuster\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryParamAdjusterOverlay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapRewardsRelayer\",\"outputs\":[{\"internalType\":\"contract Setter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"GovProposal","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://eec11dd68eda59840b5d56427f637d6bb0f4f2f337a474777f081a05513b4d98"}]}