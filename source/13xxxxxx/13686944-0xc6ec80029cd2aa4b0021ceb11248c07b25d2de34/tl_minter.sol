// SPDX-License-Identifier: UNLICENSED

/**
TERMS AND CONDITIONS OF SALE
the little details
These Terms and Conditions of Sale (the “Sale Terms and Conditions”) constitute a legally binding agreement between you and WAGMI Studios Ltd. (“WAGMI”, “we”, “We”, “Us”, or “us”).  The littles collection is a collection of digital artworks (non-fungible tokens, or “NFT”s) running on the Ethereum network. This website is an interface allowing participants to exchange content comprising digital collectibles in the form of images (the “littles collection NFT”s), and content related thereto. 
These Sale Terms and Conditions govern your purchase and use of any littles collection NFT and Content, including all art, graphics and images that may be associated with your littles collection NFT (the “Artwork”).  
Users are entirely responsible for the safety and management of their own private Ethereum wallets and validating all transactions and contracts generated by this website before approval. As transactions involving littles connection NFTs and Artwork runs on the Ethereum network, there is no ability to undo, reverse, or restore any transactions.
By purchasing any littles collection NFT, or by entering into any other transaction for a littles collection NFT or related Artwork, you expressly acknowledge that you understand and accept all of these Sale Terms and Conditions. IF YOU DO NOT AGREE TO BE BOUND BY THESE SALE TERMS AND CONDITIONS, THEN YOU MAY NOT PURCHASE ANY LITTLES COLLECTION NFTS OR OTHERWISE TRANSACT ANY BUSINESS INVOLVING LITTLES COLLECTION NFTS OR RELATED ARTWORK.
OWNERSHIP AND LICENSING OF INTELLECTUAL PROPERTY RIGHTS
You acknowledge and agree that WAGMI owns all legal right, title, and interest in and to the littles collection brand, logo, thelittles.io domain name and related intellectual property, including the Artwork and all related intellectual property rights in and to the Artwork (collectively, the “WAGMI Materials”). You acknowledge that the WAGMI Materials are protected by applicable laws including applicable copyright and trademark laws. The rights that you have in and to the Artwork are limited to those expressly stated in these Sale Terms and Conditions. WAGMI reserves all rights and ownership in and to the WAGMI Materials not expressly granted to you in these Sale Terms and Conditions.  
You acknowledge and agree that, except with the express written permission of WAGMI, which is not and shall not be granted by these Sale Terms and Conditions: (a) you will not apply for, register, or otherwise use or attempt to use any WAGMI trademarks or service marks, or any confusingly similar marks, anywhere in the world; and (b) you have no right to and shall in no event take any enforcement action (including by, for example, sending takedown notices) or make any claims based on any WAGMI Materials without WAGMI’s prior written consent, and WAGMI may, in its sole discretion, undertake any necessary actions to prevent any unlicensed or unauthorized use and/or distribution of any WAGMI Materials.
When you purchase any littles collection NFT, you own the NFT. Each of the littles collection NFTs is a NFT on the Ethereum blockchain. Ownership of the NFT is mediated entirely by the Smart Contract and the Ethereum Network.
Upon your purchase of any littles collection NFT including any related Artwork, and subject to your ongoing and continued compliance with these Sale Terms and Conditions, WAGMI grants you a non-exclusive, transferable, sub-licensable, perpetual, non-revocable, royalty-free licence (the “License”) to use, produce, reproduce, and display the Artwork, and create derivative works from the Artwork, in any form or medium, for any purpose or use including any commercial purpose or use (the “Licensed Rights”).  
USER CONDUCT
You shall not: 
(a)	Use or reproduce the Artwork in any manner that is inconsistent with these Website Terms and Conditions;
(b)	attempt to trademark, copyright, or otherwise acquire additional intellectual property rights in or to the Artwork;
(c)	use or reproduce the Artwork in any manner to harass, abuse, or threaten others or otherwise violate any person's legal rights;
(d)	use or reproduce the Artwork to violate any person’s legal rights, or to violate any intellectual property rights of WAGMI or WAGMI’s licensors and affiliates, or any third party; 
(e)	use or reproduce the Artwork in any fraudulent manner or in any manner to perpetrate any fraud, to publish or distribute any obscene or defamatory material, to publish or distribute any material that incites violence, hate, or discrimination towards any group, to publish or distribute any pornographic material or use or reproduce the Artwork for any pornographic purpose, or to unlawfully gather information about others;
(f)	transfer the right to use the Artwork, except to the extent expressly permitted in these Sale Terms and Conditions; 
(g)	disparage WAGMI, its affiliates, and their respective officers, directors, members, employees, agents, and/or attorneys; or
(h)	use or reproduce the Artwork except as expressly provided for in these Sale Terms and Conditions. 
To the extent the Artwork contains any third-party intellectual property rights (e.g., licensed intellectual property rights from a celebrity, artist, or other public figure), you understand and agree that: (i) you will not have the right to use any third-party intellectual property rights in any way except as incorporated in the Artwork, and only subject to the license and restrictions contained in these Sale Terms and Conditions; (ii) depending on the nature of the license granted from the owner of the third-party intellectual property rights, WAGMI may need to pass through additional restrictions on your ability to use the Artwork; and (iii) to the extent that WAGMI notifies you in these Sale Terms and Conditions or otherwise notifies you of any additional restrictions that apply to the Artwork due to third-party intellectual property rights, you will comply with those restrictions, and your failure to comply with those restrictions will be deemed a breach of these Sale Terms and Conditions.
TERMINATION OF LICENSED RIGHTS
The Licensed Rights shall automatically terminate and all rights shall return to WAGMI if: (a) you make any assignment for the benefit of creditors, file a petition in bankruptcy or are adjudged bankrupt, or become insolvent, or your assets are placed in the hands of a receiver; (b) you engage in any unlawful business practice related to your littles collection NFT; (c) you breach any of these Sale Terms and Conditions or any of your obligations under these Sale Terms and Conditions; or (d) you disparage WAGMI, its affiliates, and their respective officers, directors, members, employees, agents, and/or attorneys. 
DISCLAIMER OF WARRANTIES & LIMITATION OF LIABILITY
YOU UNDERSTAND AND ACKNOWLEDGE THAT LITTLES COLLECTION NFTS ARE INTANGIBLE DIGITAL ASSETS THAT EXIST ONLY BY VIRTUE OF THE OWNERSHIP RECORD MAINTAINED ON THE ETHEREUM BLOCKCHAIN AND ARE NOT LEGAL TENDER OR INTENDED FOR INVESTMENT PURPOSES.  ALL SMART CONTRACTS RELATING TO YOUR LITTLES COLLECTION NFT RUN ON THE DECENTRALIZED LEDGER WITHIN THE ETHEREUM BLOCKCHAIN. ALL TRANSFERS OF LITTLES COLLECTION NFTS ARE CONDUCTED AND OCCUR ON THE DECENTRALIZED LEDGER WITHIN THE ETHEREUM BLOCKCHAIN. WAGMI HAS NO CONTROL OVER AND MAKES NO GUARANTEES OR PROMISES WITH RESPECT TO ANY OF THOSE SMART CONTRACTS OR TRANSFERS. ALL LITTLES COLLECTION NFTS AND ARTWORK ARE PROVIDED "AS IS" AND "AS AVAILABLE", WITHOUT WARRANTIES OF ANY KIND EITHER EXPRESS OR IMPLIED. WAGMI DISCLAIMS ALL REPRESENTATIONS AND WARRANTIES, EXPRESS OR IMPLIED, REGARDING LITTLES COLLECTION NFTS OR ANY PART THEREOF (INCLUDING ANY SMART CONTRACT, ARTWORK, OR SECONDARY SALES OF LITTLES COLLECTION NFTS), INCLUDING ANY EXPRESS OR IMPLIED REPRESENTATIONS AND WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE, CORRECTNESS, ACCURACY, RELIABILITY, THAT DEFECTS IN LITTLES COLLECTION NFTS, OR ITS SUPPORTING SYSTEMS OR TECHNOLOGY, WILL BE CORRECTED, OR THAT THE DELIVERY MECHANISM FOR LITTLES COLLECTION NFTS WILL BE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. 
IN NO EVENT AND UNDER NO THEORY OF LIABILITY, INCLUDING CONTRACT, STATUTE, TORT, NEGLIGENCE, STRICT LIABILITY, WARRANTY, OR OTHERWISE, WILL WAGMI BE LIABLE TO YOU FOR ANY INDIRECT, CONSEQUENTIAL, EXEMPLARY, INCIDENTAL, SPECIAL, OR PUNITIVE DAMAGES, OR LOST PROFITS ARISING FROM OR RELATING TO YOUR LITTLES COLLECTION NFT AND ARTWORK OR YOUR ACQUISITION OF LITTLES COLLECTION NFTS, OR ARTWORK (EVEN IF WAGMI HAS BEEN ADVISED OF THE POSSIBILITY OF THOSE DAMAGES), AND IN NO EVENT WILL THE AGGREGATE LIABILITY OF WAGMI FOR ANY CAUSE OR ACTION WHATSOEVER RELATED TO YOUR LITTLES COLLECTION NFT AND ARTWORK OR YOUR ACQUISITION OF LITTLES COLLECTION NFTS, EXCEED CAD$100.
THE LIMITATIONS OF THIS SECTION WILL APPLY EVEN IF ANY REMEDY SET FORTH IN THESE SALE TERMS AND CONDITIONS IS FOUND TO HAVE FAILED ITS ESSENTIAL PURPOSE AND TO THE FULLEST EXTENT PERMITTED BY LAW IN THE APPLICABLE JURISDICTION.
ASSUMPTION OF RISK
You agree that you assume the following risks, and that you understand and agree to the following: (a) to the extent there is a price or market for a blockchain asset such as a non-fungible token, (i) those prices and markets are extremely volatile, (ii) variations in the price of other digital assets could materially and adversely affect the value of any digital assets you own, including your littles collection NFT, and (iii) there is no guarantee that your littles collection NFTs will have or retain any value; (b) the commercial or market value of your littles collection NFT may materially diminish in value as a result of a variety of things, including negative publicity associated with WAGMI; (c) there are risks associated with using and acquiring Internet-native assets (e.g., non-fungible tokens, cryptocurrencies, etc.) including the risk of hardware, software and Internet connections and/or failures, the risk of malicious software introduction, and the risk that third parties may obtain unauthorized access to information and assets stored within your digital "wallet" or elsewhere, and WAGMI expressly disclaims any responsible for these risks; (d) WAGMI does not make any promises or guarantees about the availability of your littles collection NFTs or Artwork or any other littles collection NFTs or Artwork, or that they will host your littles collection NFTs or Artwork or any other littles collection NFTs or Artwork at any specific location and/or for any specific period of time; (e) upgrades to the Ethereum blockchain, a hard fork or other change to the Ethereum blockchain, a failure or cessation of the Ethereum blockchain or its underlying cryptocurrency, or a change in how transactions are confirmed on the Ethereum blockchain, may have adverse effects on all blockchains using those or similar technologies, including littles collection NFTs, and WAGMI shall not be responsible for any such adverse effect; (f) any agreements and obligations by WAGMI are not transferable, and WAGMI does not make (and expressly disclaims) any promises or guarantees to any third parties related to your littles collection NFT(s); (g) the risk of losing access to your littles collection NFT due to loss of your private key(s), custodial error or purchaser error; (h) the risk of mining attacks; (i) the risk of hacking, security weaknesses, fraud, counterfeiting, cyber attacks and other technological difficulties; (j) the risk of changes to the regulatory regime governing blockchain technologies, cryptocurrencies, and tokens and new regulations, unfavorable regulatory intervention in one or more jurisdictions or policies any of which may materially adversely affect the use and value of your littles collection NFT(s); (k) the taxes due as a result of, and tax consequences associated with, your acquisition of any littles collection NFT or other littles collection NFT-related transactions; and (l) the risk of engaging in any transactions relating to your littles collection NFTs with third parties (e.g., transferring your littles collection NFT to a third party on any so-called "secondary market").
You also acknowledge and agree that: (i) you have obtained sufficient information to make an informed decision regarding the littles collection NFTs; (ii) you are solely responsible for determining the nature, potential value, suitability and appropriateness of these risks for yourself; and (iii) WAGMI will not be responsible for any communication failures, disruptions, errors, distortions or delays you may experience related to any littles collection NFTs.
LAW AND VENUE  
The laws of British Columbia govern these Sale Terms and Conditions and all proceedings arising out of it. All disputes between the parties relating to these Sale Terms and Conditions will be finally resolved in the Supreme Court of British Columbia or the Federal Court of Canada sitting in Vancouver, British Columbia.
ELIGIBILITY
You acknowledge that you cannot purchase or use any littles collection NFT or Artwork if you: (a) are not able to form legally binding contracts; or (b) are a person with whom such transactions are prohibited under economic or trade sanctions.
INDEMNITY
You will defend, indemnify, and hold WAGMI and its employees, representatives, executives, directors, and affiliates and related entities harmless from any claims, actions, suits, losses, costs, liabilities and expenses (including reasonable lawyer’s fees) relating to or arising out of your purchase of any littles collection NFT, Artwork, and Licensed Rights, including: (a) your breach of any of these Sale Terms and Conditions or any other terms and conditions of use of our website; (b) your violation of any law or the rights of any third party as a result of your own interaction with that third party; (c) any allegation that any materials or communications that you submit to us infringe or otherwise violate the intellectual property rights of any third party; or (d) any other activities in connection with any littles collection NFT or Artwork. This indemnity shall be applicable without regard to the negligence of any party, including any indemnified person. We reserve the right to control the defense of any matter for which you are required to indemnify us, and you agree to cooperate with our defense of these claims.
TAXES
You are solely responsible for all taxes and charges that apply in connection with any littles collection NFT transaction. WAGMI is not responsible for determining the taxes that may apply to any of your transactions, and offers no representation or warranty that any such transaction will be tax-free or will not otherwise have tax consequences.
MISCELLANEOUS
If any term or provision of these Sale Terms and Conditions is invalid, illegal, or unenforceable in any jurisdiction, such invalidity, illegality, or unenforceability shall not affect any other term or provision of these Sale Terms and Conditions or invalidate or render unenforceable such term or provision in any other jurisdiction. Use of section headers in these Sale Terms and Conditions is for convenience only and will not have any impact on the interpretation of any provision. 
INTERPRETATION AND ENTIRE AGREEMENT
Throughout these Sale Terms and Conditions, the use of the word "including" means "including but not limited to." Any reference to “agree”, “agrees”, “represent”, “represents”, “acknowledge”, “acknowledges”, or any “acknowledgement” by you in these Sale Terms and Conditions, shall refer in all cases to your acceptance of these Sale Terms and Conditions by proceeding with your purchase or acquisition of a littles  collection NFT.  These Sale Terms and Conditions constitute the entire and only agreement between us and you with respect to the subject matter hereof.
NO WAIVER
Our failure to enforce or insist upon strict compliance with any provision of these Sale Terms and Conditions shall not be deemed a waiver of such provision nor of the right to enforce such provision.
CHOICE OF LANGUAGE
The parties acknowledge that they require that these Sale Terms and Conditions be drawn up in the English language only.  Les parties reconnaissent qu’elles ont exigé que la présente convention soit rédigée en langue anglaise seulement.
 */

pragma solidity ^0.8.3;

import "./ERC721.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

interface iWhitelist {
    function isWhitelisted(address address_, bytes32[] memory proof_)
        external
        view
        returns (bool);
}

interface iEvolution {
    function getYieldRate(uint256 tokenId_) external view returns (uint256);
}

contract tlMinter is ERC721, Ownable {
    // Minting Price
    uint256 public ethPrice = 0.125 ether;

    // Supply variables
    uint256 public totalSupply;
    uint256 public maxSupply;
    uint256 public maxPerTxn;
    uint256 public maxPerWallet;

    // Sale state control variables
    bool public burningEnabled;
    bool public whitelistMintingEnabled;
    bool public publicMintingEnabled;
    uint256 public startSaleTimestamp;

    // Wallet to withdraw to
    address payable public payableWallet;

    // Metadata variables
    string public _baseURI_;

    // External Contracts
    iWhitelist tlWhitelist;
    address public evolutionAddress;

    // Track mints
    mapping(address => uint256) walletMints;

    // Add one eth on deploy
    constructor() payable ERC721("the littles NFT", "thelittlesnft") {
        totalSupply = 0; // Start at Token ID 1
        maxSupply = 10000;
        maxPerTxn = 2;
        maxPerWallet = 2; // @todo This will update to 4 during public minting
        startSaleTimestamp = 1637978400; // @todo set minting date

        // placeholder for testing
        _baseURI_ = "https://s3.amazonaws.com/nft-meta.thelittles.io/";

        // @todo Add wil's wallet address here
        payableWallet = payable(
            address(0x3811866A85b0e42B437B36BB4FD2f05e4c3b16f8)
        );

        // @todo Add Inu's contract reference here
        tlWhitelist = iWhitelist(0x1A3b1D5e9678d9e71271f2c5017A10D3Afb7d296);
    }

    /** *********************************** **/
    /** ********* Internal Functions ****** **/
    /** *********************************** **/
    function isContract(address account) internal view returns (bool) {
        uint256 size;
        assembly {
            size := extcodesize(account)
        }
        return size > 0;
    }

    /** *********************************** **/
    /** ********* Minting Functions ******* **/
    /** *********************************** **/
    function mintTokens(uint256 quantity) private {
        walletMints[msg.sender] += quantity;
        for (uint256 i = 0; i < quantity; i++) {
            uint256 newTokenId = totalSupply + 1;
            _safeMint(msg.sender, newTokenId);
            totalSupply++;
        }
    }

    function defaultMintingRules(uint256 value, uint256 quantity) private view {
        require(isContract(msg.sender) == false, "Cannot mint from a contract");
        require(value == getPrice(quantity), "wrong value");
        require(totalSupply < maxSupply, "sold out");
        require(totalSupply + quantity <= maxSupply, "exceeds max supply");
        require(quantity <= maxPerTxn, "exceeds max per txn");
        require(
            walletMints[msg.sender] + quantity <= maxPerWallet,
            "exceeds max per wallet"
        );
    }

    function mintWhitelist(uint256 quantity, bytes32[] memory proof)
        public
        payable
    {
        require(whitelistMintingEnabled, "minting not enabled");
        require(
            tlWhitelist.isWhitelisted(msg.sender, proof),
            "address supplied is not on the whitelist"
        );
        require(tx.origin == msg.sender, "Contracts not allowed");

        defaultMintingRules(msg.value, quantity);
        mintTokens(quantity);
    }

    function mintPublic(uint256 quantity) public payable {
        require(
            block.timestamp >= startSaleTimestamp,
            "official sale has not started"
        );
        require(publicMintingEnabled, "minting not enabled");
        require(tx.origin == msg.sender, "Contracts not allowed");
        defaultMintingRules(msg.value, quantity);
        mintTokens(quantity);
    }

    function reserveTokens(uint256 tokensToReserve) public onlyOwner {
        mintTokens(tokensToReserve);
    }

    /** *********************************** **/
    /** ********* Owner Functions ********* **/
    /** *********************************** **/
    function setEvolutionAddress(address _address) external onlyOwner {
        evolutionAddress = _address;
    }

    function setPriceInWei(uint256 _price) external onlyOwner {
        ethPrice = _price;
    }

    function setMaxSupply(uint256 _maxSupply) external onlyOwner {
        maxSupply = _maxSupply;
    }

    function setMaxPerWallet(uint256 _maxPerWallet) external onlyOwner {
        maxPerWallet = _maxPerWallet;
    }

    function setMaxPerTxn(uint256 _maxPerTxn) external onlyOwner {
        maxPerTxn = _maxPerTxn;
    }

    function toggleBurningEnabled() external onlyOwner {
        burningEnabled = !burningEnabled;
    }

    function toggleWhitelistMintingEnabled() external onlyOwner {
        whitelistMintingEnabled = !whitelistMintingEnabled;
    }

    function togglePublicMintingEnabled() external onlyOwner {
        publicMintingEnabled = !publicMintingEnabled;
    }

    function setStartSaleTimestamp(uint256 _startSaleTimestamp)
        external
        onlyOwner
    {
        startSaleTimestamp = _startSaleTimestamp;
    }

    function setBaseURI(string memory _newBaseURI) external onlyOwner {
        _baseURI_ = _newBaseURI;
    }

    function setPayableWallet(address _payableWallet) external onlyOwner {
        payableWallet = payable(_payableWallet);
    }

    function withdraw() external onlyOwner {
        uint256 balance = address(this).balance;
        payable(payableWallet).transfer(balance);
    }

    /** *********************************** **/
    /** ***** 0xInuarashi Functions ******* **/
    /** *** https://twitter.com/0xinuarashi **/
    /** *********************************** **/
    function ownerOf(uint256 tokenId)
        public
        view
        virtual
        override
        returns (address)
    {
        return _owners[tokenId];
    }

    function walletOfOwner(address address_)
        public
        view
        returns (uint256[] memory)
    {
        uint256 _balance = balanceOf(address_);
        uint256[] memory _tokens = new uint256[](_balance);
        uint256 _index;

        for (uint256 i = 0; i < maxSupply; i++) {
            if (address_ == ownerOf(i)) {
                _tokens[_index] = i;
                _index++;
            }
        }

        return _tokens;
    }

    function multiTransferFrom(
        address from_,
        address to_,
        uint256[] memory tokenIds_
    ) public {
        for (uint256 i = 0; i < tokenIds_.length; i++) {
            transferFrom(from_, to_, tokenIds_[i]);
        }
    }

    function multiSafeTransferFrom(
        address from_,
        address to_,
        uint256[] memory tokenIds_,
        bytes memory data_
    ) public {
        for (uint256 i = 0; i < tokenIds_.length; i++) {
            safeTransferFrom(from_, to_, tokenIds_[i], data_);
        }
    }

    /** *********************************** **/
    /** ******** Public Functions ********* **/
    /** *********************************** **/
    function getWalletMintCount(address addr) public view returns (uint256) {
        return walletMints[addr];
    }

    function getYieldRate(uint256 tokenId_) public view returns (uint256) {
        if (evolutionAddress != address(0x0)) {
            return iEvolution(evolutionAddress).getYieldRate(tokenId_);
        } else {
            revert("Evolution not enabled yet!");
        }
    }

    function getPrice(uint256 quantity) public view returns (uint256) {
        return ethPrice * quantity;
    }

    function burn(uint256 tokenId) public {
        require(burningEnabled, "burning enabled");
        require(
            _isApprovedOrOwner(_msgSender(), tokenId),
            "caller is not owner nor approved"
        );
        _burn(tokenId);
    }

    function remainingSupply() public view returns (uint256) {
        return maxSupply - totalSupply;
    }

    function _baseURI() internal view override returns (string memory) {
        return _baseURI_;
    }
}

