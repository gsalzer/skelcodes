// SPDX-License-Identifier: MIT

pragma solidity ^0.8.7;

/// @artist: Tory Bryant
/// @author: Botscommand.xyz
/// @legal: Spacebots Studios


import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";
import "@openzeppelin/contracts/utils/Strings.sol";


//#first%321####(((((########((#####%%############%%%%%#%%#####%%%###%%###%####%##
//############(((##((############elkie#######%%##%%%###%%#########################
//##########((##########################%%########%#####%%%###i###%####(##########
//####bare########################c####%#%%##h######%#############################
//##################%%%%%###%###########################%#%#######%###############
//#################################((########((#####(####(#########((((((/((((((##
//######################^.........,...................... ..                  .(##
//#(###%%############/.............................................         #####%
//&@&@@@&#########(( .........,,,................................,,......,/#######
//@@&&@@&######(#((.......,,,,,,.........,..............................,/########
//#@&&%%@#########...,,,,,,,,,,............^###a#######(###((((###########%%######
//###############/,,,,,,,,,,,..............#######################################
//###############(,,,,,,,,,,.................##############################(#(####
//################............................./##################################
//#################,...........1190...............##%###########g###############(#
//###t#########a#####,..............................^#############################
//#####################(..........................,.,,,(##########################
//########################/......................,,,.,,,,^#####toni###########&##^
//######gabe################(..............   ..,,..,,,,,,,^####################^.
//#############################(................,.........   ##################/  
//################################^....                      /######%#########(,,,
//#################%################.       .................^################////
//#################################/................,,,,,..  (##############(////^
//###/ ............................................. .^/////###############(^/////
//##(......................................  .,^///////////(###############///////
//#(.......................   ,^//////////////////////////################////////
// ................  .^/////////////////////////^///////############//#(//////(///
//....,.......,^//////////////////////////////////(#################(//((((((/((((
//#######################################OG################%%#%###################
//##################%#############%%######%#################################%%%###
//#####&@@@@%%####@torybryant20#############%#%%######%##@jlindsayfilm###%%%######
//#####&@@@@%#%@@&%#######################%%%%%##########%%#######@botscommand.xyz


contract SpaceBotsCaptains is ERC1155 {
    
    uint256 public constant BotsDAO = 0;
    uint256 public constant Captains = 1;

    string public name;
    string public symbol;
    
    constructor() public ERC1155("ipfs://QmSDdpMTv7DwDGJ7wh4SPYxC3iEJEpmDQie9SBxxdnDjQ2/{id}.json"){
        name = "SpaceBots Passports";
        symbol = "SBPP";
        
        _mint(msg.sender, BotsDAO, 21, "");
        _mint(msg.sender, Captains, 421, "");
    }
    
    function uri(uint256 _tokenId) override public view returns (string memory) {
        return string(
            abi.encodePacked(
                "ipfs://QmSDdpMTv7DwDGJ7wh4SPYxC3iEJEpmDQie9SBxxdnDjQ2/",
                Strings.toString(_tokenId),
                ".json"
            )
        );
    }
    
    function contractURI() public view returns (string memory) {
        return "ipfs://QmWU6dzesGDkqDqmZPMAbFAHm1HwBSS2AhYZyTqj9MBQzb";
    }
    
}
