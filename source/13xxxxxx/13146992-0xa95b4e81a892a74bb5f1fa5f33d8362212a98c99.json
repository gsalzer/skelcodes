{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/KetherView.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\ninterface IKetherHomepage {\\n  function ads(uint _idx) external view returns (address,uint,uint,uint,uint,string memory,string memory,string memory,bool,bool);\\n  function getAdsLength() view external returns (uint);\\n}\\n\\ninterface IERC721 {\\n  function ownerOf(uint256) external view returns (address);\\n}\\n\\nlibrary KetherView {\\n  struct AdView {\\n    address owner;\\n    uint x;\\n    uint y;\\n    uint width;\\n    uint height;\\n    string link;\\n    string image;\\n    string title;\\n    bool NSFW;\\n    bool forceNSFW;\\n    bool wrapped;\\n  }\\n  /// allAds is a helper view designed to be called from frontends that want to\\n  /// display all of the ads with their correct NFT owners.\\n  function allAds(address _instanceAddress, address _nftAddress) external view returns (AdView[] memory) {\\n    // FIXME: Does this actually enumerate all of the ads, or do we need to paginate?\\n    AdView[] memory ads_ = new AdView[](IKetherHomepage(_instanceAddress).getAdsLength());\\n\\n    for (uint idx=0; idx<ads_.length; idx++) {\\n      (address owner, uint x, uint y, uint width, uint height, string memory link, string memory image, string memory title, bool NSFW, bool forceNSFW) = IKetherHomepage(_instanceAddress).ads(idx);\\n      bool wrapped = false;\\n\\n      // Is it an NFT already?\\n      if (owner == _nftAddress) {\\n        // Override owner to be the NFT owner\\n        owner = IERC721(_nftAddress).ownerOf(idx);\\n        wrapped = true;\\n      }\\n\\n      ads_[idx] = AdView(owner, x, y, width, height, link, image, title, NSFW, forceNSFW, wrapped);\\n    }\\n    return ads_;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200,\r\n      \"details\": {\r\n        \"yul\": false\r\n      }\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_instanceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"name\":\"allAds\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"width\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"NSFW\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"forceNSFW\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct KetherView.AdView[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"KetherView","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}