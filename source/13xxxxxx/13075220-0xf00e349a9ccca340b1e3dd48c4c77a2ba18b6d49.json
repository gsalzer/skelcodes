{"status":"1","message":"OK","result":[{"SourceCode":"{\"ExternalInitializer.sol\":{\"content\":\"/*\\n  Copyright 2019-2022 StarkWare Industries Ltd.\\n\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\").\\n  You may not use this file except in compliance with the License.\\n  You may obtain a copy of the License at\\n\\n  https://www.starkware.co/open-source-license/\\n\\n  Unless required by applicable law or agreed to in writing,\\n  software distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  See the License for the specific language governing permissions\\n  and limitations under the License.\\n*/\\n// SPDX-License-Identifier: Apache-2.0.\\npragma solidity ^0.6.11;\\n\\ninterface ExternalInitializer {\\n\\n    event LogExternalInitialize(bytes data);\\n\\n    function initialize(bytes calldata data) external;\\n}\\n\"},\"ModifyUpgradeDelayExternalInitializer.sol\":{\"content\":\"/*\\n  Copyright 2019-2022 StarkWare Industries Ltd.\\n\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\").\\n  You may not use this file except in compliance with the License.\\n  You may obtain a copy of the License at\\n\\n  https://www.starkware.co/open-source-license/\\n\\n  Unless required by applicable law or agreed to in writing,\\n  software distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  See the License for the specific language governing permissions\\n  and limitations under the License.\\n*/\\n// SPDX-License-Identifier: Apache-2.0.\\npragma solidity ^0.6.11;\\n\\nimport \\\"ExternalInitializer.sol\\\";\\n\\n/*\\n  This contract is an external initializing contract that modifies the upgradability proxy\\n  upgrade activation delay.\\n*/\\ncontract ModifyUpgradeDelayExternalInitializer is ExternalInitializer {\\n    uint256 constant MAX_DELAY = 28 days;\\n\\n    // Web3.solidityKeccak([\\u0027string\\u0027], [\\u0027StarkWare.Upgradibility.Delay.Slot\\u0027]).\\n    bytes32 constant UPGRADE_DELAY_SLOT =\\n        0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f;\\n\\n    function initialize(bytes calldata data) external override {\\n        require(data.length == 32, \\\"INCORRECT_INIT_DATA_SIZE_32\\\");\\n        uint256 delayInSeconds;\\n        (delayInSeconds) = abi.decode(data, (uint256));\\n        require(delayInSeconds \\u003c= MAX_DELAY, \\\"DELAY_TOO_LONG\\\");\\n\\n        // To support V1 Proxy - we use the expected slot.\\n        // For V2+ we query the Proxy to provide a slot.\\n        bytes32 slot = UPGRADE_DELAY_SLOT;\\n\\n        //NOLINTNEXTLINE low-level-calls reentrancy-events.\\n        (bool success, bytes memory returndata) = address(this).staticcall(\\n            abi.encodeWithSignature(\\\"UPGRADE_DELAY_SLOT()\\\")\\n        );\\n\\n        if (success) {\\n            slot = abi.decode(returndata, (bytes32));\\n        }\\n\\n        assembly {\\n            sstore(slot, delayInSeconds)\\n        }\\n\\n        emit LogExternalInitialize(data);\\n    }\\n}\\n\"}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogExternalInitialize\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ModifyUpgradeDelayExternalInitializer","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"100","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://fa7c7bb3173b1d6cb2097eefbc0113982aee8d7b14348b748677762b261caca4"}]}