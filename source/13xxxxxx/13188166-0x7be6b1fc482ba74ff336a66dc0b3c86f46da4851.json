{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.2;\r\n\r\ninterface IUniswap {\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n}\r\n\r\ninterface IERC721 {\r\n\r\n    function mint(address to, uint32 _assetType, uint256 _value, uint32 _customDetails) external returns (bool success);\r\n    function assetsByType(uint256 _typeId) external view returns (uint64 _maxAmount, uint64 _mintedAmount, uint64 _coinIndex, string memory copyright);\r\n    function tradeCoins(uint256 coinIndex) external view returns (address _tokenAddress, string memory _symbol, string memory _name);\r\n\r\n}\r\ncontract Ownable {\r\n\r\n    address private owner;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\r\n        emit OwnerSet(address(0), owner);\r\n    }\r\n\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n}\r\n\r\ncontract POLN3DSeller is Ownable {\r\n    \r\n    address public nftAddress;\r\n    IUniswap public uniswapRouter;\r\n    address payable public sellingWallet;\r\n    uint256 slippage = 2;\r\n    \r\n    mapping(uint => uint) public assets;\r\n    \r\n    constructor() {\r\n        sellingWallet = payable(0xAD334543437EF71642Ee59285bAf2F4DAcBA613F);\r\n        nftAddress = 0xB20217bf3d89667Fa15907971866acD6CcD570C8;\r\n        uniswapRouter = IUniswap(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        assets[47] = 1000000000;\r\n\r\n    }\r\n    \r\n    function getPrice(uint _assetType) public view returns (uint256) {\r\n        address[] memory path = new address[](2);\r\n        path[0] = 0xdAC17F958D2ee523a2206206994597C13D831ec7; // USDT\r\n        path[1] = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; // WETH\r\n        uint256[] memory uprices = uniswapRouter.getAmountsOut(assets[_assetType], path);\r\n        return uprices[1];\r\n    }\r\n    \r\n    function calcMaxSlippage(uint256 _amount) public view returns (uint256) {\r\n        return (_amount - ((_amount * slippage) / 100));\r\n    }\r\n\r\n    function buyWithEth(uint256 assetType, uint256 assetDetails) public payable returns (bool) {\r\n        IERC721 nft = IERC721(nftAddress);\r\n        (, , uint64 _coinIndex, ) = nft.assetsByType(assetType);\r\n        require(_coinIndex == 1 , \"Invalid coin\");\r\n        require(assets[assetType] != 0, \"Invalid asset\");\r\n        uint256 sellingPrice = getPrice(assets[assetType]);\r\n        require(msg.value >= (calcMaxSlippage(sellingPrice)), 'Invalid amount');\r\n        require(sellingWallet.send(msg.value));\r\n        require(nft.mint(msg.sender, uint32(assetType), sellingPrice, uint32(assetDetails)), \"Not possible to mint this type of asset\");\r\n        return true;\r\n    }\r\n    \r\n    function setPrice(uint256 _assetId, uint256 _newPrice) public onlyOwner {\r\n        assets[_assetId] = _newPrice;\r\n    }\r\n    \r\n    function setSlippage(uint256 _slippage) public onlyOwner {\r\n        slippage = _slippage;\r\n    }\r\n\r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetDetails\",\"type\":\"uint256\"}],\"name\":\"buyWithEth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calcMaxSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetType\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"POLN3DSeller","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d155d149f1c196209108918cbde9e7328d3c85750b0c3830057281c9487c3d97"}]}