{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.1;\r\n\r\n\r\ncontract UBI {\r\n    mapping(address=>bool) public bidders;\r\n    uint256 public totalBidders;\r\n    uint256 public totalAmount;\r\n    address public game;\r\n    bool public claimable;\r\n\r\n    constructor() public {\r\n        game = msg.sender;\r\n    }\r\n\r\n    modifier onlyGame() {\r\n        require(msg.sender == game, \"only the game itself can do this\");\r\n        _;\r\n    }\r\n\r\n    function addBidder(address bidder, uint256 amount) public onlyGame {\r\n        if (!bidders[bidder]) {\r\n            bidders[bidder] = true;\r\n            totalBidders = totalBidders + 1;\r\n        }\r\n        totalAmount = totalAmount + amount;\r\n    }\r\n\r\n    function endGame(address winner) public onlyGame {\r\n        bidders[winner] = false;\r\n        claimable = true;\r\n        totalBidders = totalBidders - 1;\r\n    }\r\n\r\n    function eachGets() public view returns (uint256) {\r\n        return totalAmount / totalBidders;\r\n    }\r\n\r\n    function claim() public onlyGame {\r\n        require(claimable, \"game isn't over yet\");\r\n        require(bidders[tx.origin], \"theres nothing for you here\");\r\n        bidders[tx.origin] = false;\r\n        if (eachGets() > addy().balance) {\r\n            payable(tx.origin).transfer(addy().balance);\r\n        } else {\r\n            require(payable(tx.origin).send(eachGets()), \"send failed\");\r\n        }\r\n    }\r\n    \r\n    function addy() public view returns(address payable) {\r\n        return payable(address(this));\r\n    }\r\n    \r\n    fallback() external payable {\r\n        \r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBidder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bidders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eachGets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"game\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBidders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"UBI","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://68a28fb32e0e5e11e8af16c8cb14c8059dda6b665decd06231f2c94098dfef29"}]}