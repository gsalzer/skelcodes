{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IERC20{\r\n\r\n    string public symbol;\r\n    string public name;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\ncontract safebox {\r\n\r\n    // ERC20 basic token contract being held\r\n    IERC20 private Itoken;\r\n\r\n    address public CEO = 0x1238DE607d15B9e4e176FA801552d214d2f1c0D7;\r\n    address public CTO = 0x2E29304769e5fdD0bF4F6Eb3174afA6a08B5aC75;\r\n    uint public approveAmount;\r\n    \r\n    constructor (IERC20 token) public {\r\n        Itoken = token;\r\n    }\r\n    \r\n    function setCEO(address newCEO) external returns(address) {\r\n        require(msg.sender==CEO, 'You are not authorized');\r\n        CEO = newCEO;\r\n        return CEO;\r\n    }\r\n    \r\n    function setCTO(address newCTO) external returns(address) {\r\n        require(msg.sender==CTO, 'You are not authorized');\r\n        CTO = newCTO;\r\n        return CTO;\r\n    }\r\n\r\n    /**\r\n     * @return the token being held.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return Itoken;\r\n    }\r\n\r\n    /**\r\n     * @return this contract balance\r\n     */\r\n    function balance() public view returns (uint256) {\r\n        return Itoken.balanceOf(address(this));\r\n    }\r\n    \r\n    function ApproveWithdraw(uint wad) external {\r\n        require(msg.sender==CEO, 'You are not authorized');\r\n        \r\n        require(balance()>=wad, 'override balance');\r\n        \r\n        approveAmount = approveAmount + wad;\r\n    }\r\n    \r\n    function Withdraw(uint wad) external {\r\n        require(msg.sender==CTO, 'You are not authorized');\r\n        \r\n        require(approveAmount>=wad, 'override approve amount');\r\n        \r\n        require(balance()>=wad, 'override balance');\r\n        \r\n        Itoken.transfer(CTO, wad);\r\n        approveAmount = approveAmount - wad;\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"ApproveWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CEO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CTO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approveAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCTO\",\"type\":\"address\"}],\"name\":\"setCTO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"safebox","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c6b70abab6dd7c671af884bad1cffd599c5c40e2","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://56da8a435c189ed46f5feee1324b7385ec0629ac7030989c0fdd8cab47406bd5"}]}