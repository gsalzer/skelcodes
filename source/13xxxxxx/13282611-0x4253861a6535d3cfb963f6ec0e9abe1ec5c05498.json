{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/mainnet/connectors/gelato/aave-services/protection/main.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport {LendingPoolInterface, AaveServicesInterface} from \\\"./interface.sol\\\";\\nimport {Events} from \\\"./events.sol\\\";\\nimport {Helpers} from \\\"./helpers.sol\\\";\\n\\nabstract contract GAaveProtectionResolver is Events, Helpers {\\n    /// @dev Function for submitting a protection task\\n    /// @param _wantedHealthFactor targeted health after protection.\\n    /// @param _minimumHealthFactor trigger protection when current health\\n    /// factor is below _minimumHealthFactor.\\n    /// @param _isPermanent boolean to set a protection as permanent\\n    function submitProtection(\\n        uint256 _wantedHealthFactor,\\n        uint256 _minimumHealthFactor,\\n        bool _isPermanent\\n    ) external payable {\\n        _submitProtection(\\n            _wantedHealthFactor,\\n            _minimumHealthFactor,\\n            _isPermanent\\n        );\\n        emit LogSubmitProtection(\\n            address(this),\\n            _protectionAction,\\n            _wantedHealthFactor,\\n            _minimumHealthFactor,\\n            _isPermanent\\n        );\\n    }\\n\\n    /// @dev Function for modifying a protection task\\n    /// @param _wantedHealthFactor targeted health after protection.\\n    /// @param _minimumHealthFactor trigger protection when current health\\n    /// factor is below _minimumHealthFactor.\\n    /// @param _isPermanent boolean to set a protection as permanent\\n    function updateProtection(\\n        uint256 _wantedHealthFactor,\\n        uint256 _minimumHealthFactor,\\n        bool _isPermanent\\n    ) external payable {\\n        _updateProtection(\\n            _wantedHealthFactor,\\n            _minimumHealthFactor,\\n            _isPermanent\\n        );\\n        emit LogUpdateProtection(\\n            address(this),\\n            _protectionAction,\\n            _wantedHealthFactor,\\n            _minimumHealthFactor,\\n            _isPermanent\\n        );\\n    }\\n\\n    /// @dev Function for cancelling a protection task\\n    function cancelProtection() external payable {\\n        _cancelProtection();\\n        emit LogCancelProtection(address(this), _protectionAction);\\n    }\\n\\n    /// @dev Function for cancelling and removing allowance\\n    /// of aToken to _protectionAction\\n    function cancelAndRevoke() external payable {\\n        if (_dsaHasProtection()) _cancelProtection();\\n        _revokeAllowance();\\n        emit LogCancelAndRevoke(address(this), _protectionAction);\\n    }\\n}\\n\\ncontract GAaveProtectionMainnetConnector is GAaveProtectionResolver {\\n    // solhint-disable-next-line const-name-snakecase\\n    string public constant name = \\\"GAaveProtectionMainnetConnector-v1\\\";\\n}\"\r\n    },\r\n    \"contracts/mainnet/connectors/gelato/aave-services/protection/interface.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nstruct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    //tokens addresses\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint8 id;\\n}\\n\\nstruct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: Reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60-63: reserved\\n    //bit 64-79: reserve factor\\n    uint256 data;\\n}\\n\\ninterface LendingPoolInterface {\\n    function getReservesList() external view returns (address[] memory);\\n\\n    function getReserveData(address asset)\\n        external\\n        view\\n        returns (ReserveData memory);\\n}\\n\\ninterface AaveServicesInterface {\\n    function submitTask(\\n        address _action,\\n        bytes memory _taskData,\\n        bool _isPermanent\\n    ) external;\\n\\n    function cancelTask(address _action) external;\\n\\n    function updateTask(\\n        address _action,\\n        bytes memory _data,\\n        bool _isPermanent\\n    ) external;\\n\\n    function taskByUsersAction(address _user, address _action)\\n        external\\n        view\\n        returns (bytes32);\\n}\\n\\ninterface IERC20 {\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\"\r\n    },\r\n    \"contracts/mainnet/connectors/gelato/aave-services/protection/events.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ncontract Events {\\n    event LogSubmitProtection(\\n        address indexed dsa,\\n        address indexed action,\\n        uint256 wantedHealthFactor,\\n        uint256 minimumHealthFactor,\\n        bool isPermanent\\n    );\\n    event LogUpdateProtection(\\n        address indexed dsa,\\n        address indexed action,\\n        uint256 wantedHealthFactor,\\n        uint256 minimumHealthFactor,\\n        bool isPermanent\\n    );\\n    event LogCancelProtection(address indexed dsa, address indexed action);\\n    event LogCancelAndRevoke(address indexed dsa, address indexed action);\\n}\"\r\n    },\r\n    \"contracts/mainnet/connectors/gelato/aave-services/protection/helpers.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport {\\n    LendingPoolInterface,\\n    AaveServicesInterface,\\n    IERC20\\n} from \\\"./interface.sol\\\";\\n\\nabstract contract Helpers {\\n    // solhint-disable-next-line const-name-snakecase\\n    LendingPoolInterface internal constant _lendingPool =\\n        LendingPoolInterface(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9);\\n\\n    // solhint-disable-next-line const-name-snakecase\\n    AaveServicesInterface internal constant _aaveServices =\\n        AaveServicesInterface(0xE3d373c78803C1d22cE96bdC43d47542835bBF42);\\n\\n    // solhint-disable-next-line const-name-snakecase\\n    address internal constant _protectionAction =\\n        0xD2579361F3C402938841774ECc1acdd51d3a4345;\\n\\n    function _submitProtection(\\n        uint256 _wantedHealthFactor,\\n        uint256 _minimumHealthFactor,\\n        bool _isPermanent\\n    ) internal {\\n        _giveAllowance();\\n\\n        _aaveServices.submitTask(\\n            _protectionAction,\\n            abi.encode(\\n                _wantedHealthFactor,\\n                _minimumHealthFactor,\\n                address(this)\\n            ),\\n            _isPermanent\\n        );\\n    }\\n\\n    function _updateProtection(\\n        uint256 _wantedHealthFactor,\\n        uint256 _minimumHealthFactor,\\n        bool _isPermanent\\n    ) internal {\\n        _giveAllowance();\\n\\n        _aaveServices.updateTask(\\n            _protectionAction,\\n            abi.encode(\\n                _wantedHealthFactor,\\n                _minimumHealthFactor,\\n                address(this)\\n            ),\\n            _isPermanent\\n        );\\n    }\\n\\n    function _cancelProtection() internal {\\n        _aaveServices.cancelTask(_protectionAction);\\n    }\\n\\n    function _giveAllowance() internal {\\n        address[] memory aTokenList = _getATokenList();\\n        for (uint256 i = 0; i < aTokenList.length; i++) {\\n            if (\\n                !(IERC20(aTokenList[i]).allowance(\\n                    address(this),\\n                    _protectionAction\\n                ) == type(uint256).max)\\n            ) {\\n                IERC20(aTokenList[i]).approve(\\n                    _protectionAction,\\n                    type(uint256).max\\n                );\\n            }\\n        }\\n    }\\n\\n    function _revokeAllowance() internal {\\n        address[] memory aTokenList = _getATokenList();\\n        for (uint256 i = 0; i < aTokenList.length; i++) {\\n            if (\\n                !(IERC20(aTokenList[i]).allowance(\\n                    address(this),\\n                    _protectionAction\\n                ) == 0)\\n            ) {\\n                IERC20(aTokenList[i]).approve(_protectionAction, 0);\\n            }\\n        }\\n    }\\n\\n    function _getATokenList()\\n        internal\\n        view\\n        returns (address[] memory aTokenList)\\n    {\\n        address[] memory underlyingsList = _lendingPool.getReservesList();\\n        aTokenList = new address[](underlyingsList.length);\\n        for (uint256 i = 0; i < underlyingsList.length; i++) {\\n            aTokenList[i] = (_lendingPool.getReserveData(underlyingsList[i]))\\n                .aTokenAddress;\\n        }\\n    }\\n\\n    function _dsaHasProtection() internal view returns (bool) {\\n        return\\n            _aaveServices.taskByUsersAction(address(this), _protectionAction) !=\\n            bytes32(0);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dsa\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"action\",\"type\":\"address\"}],\"name\":\"LogCancelAndRevoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dsa\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"action\",\"type\":\"address\"}],\"name\":\"LogCancelProtection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dsa\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"action\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantedHealthFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumHealthFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPermanent\",\"type\":\"bool\"}],\"name\":\"LogSubmitProtection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dsa\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"action\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantedHealthFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumHealthFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPermanent\",\"type\":\"bool\"}],\"name\":\"LogUpdateProtection\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelAndRevoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelProtection\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantedHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPermanent\",\"type\":\"bool\"}],\"name\":\"submitProtection\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantedHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumHealthFactor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPermanent\",\"type\":\"bool\"}],\"name\":\"updateProtection\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"GAaveProtectionMainnetConnector","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}