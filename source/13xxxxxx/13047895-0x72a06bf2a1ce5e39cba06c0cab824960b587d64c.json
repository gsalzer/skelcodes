{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/registration/Registration.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IMX.sol\\\";\\n\\ncontract Registration {\\n    IMX public imx;\\n\\n    constructor(IMX _imx) {\\n        imx = _imx;\\n    }\\n\\n    function registerAndDeposit(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        uint256 vaultId\\n    ) external payable {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        // the standard way to write this is: imx.deposit.value(msg.value)(starkKey, assetType, vaultId);\\n        // but the Solidity compiler hates the overloading of deposit + the use of .value()\\n        (bool success, ) = address(imx).call{value: msg.value}(\\n            abi.encodeWithSignature(\\n                \\\"deposit(uint256,uint256,uint256)\\\",\\n                starkKey,\\n                assetType,\\n                vaultId\\n            )\\n        );\\n        require(success, \\\"Deposit Failed\\\");\\n    }\\n\\n    function registerAndDeposit(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        uint256 vaultId,\\n        uint256 quantizedAmount\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.deposit(starkKey, assetType, vaultId, quantizedAmount);\\n    }\\n\\n    function registerAndDepositNft(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        uint256 vaultId,\\n        uint256 tokenId\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.depositNft(starkKey, assetType, vaultId, tokenId);\\n    }\\n\\n    function registerAndWithdraw(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.withdraw(starkKey, assetType);\\n    }\\n\\n    function registerAndWithdrawTo(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        address recipient\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.withdrawTo(starkKey, assetType, recipient);\\n    }\\n\\n    function registerAndWithdrawNft(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        uint256 tokenId\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.withdrawNft(starkKey, assetType, tokenId);\\n    }\\n\\n    function registerAndWithdrawNftTo(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        uint256 tokenId,\\n        address recipient\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.withdrawNftTo(starkKey, assetType, tokenId, recipient);\\n    }\\n\\n    function regsiterAndWithdrawAndMint(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature,\\n        uint256 assetType,\\n        bytes calldata mintingBlob\\n    ) external {\\n        imx.registerUser(ethKey, starkKey, signature);\\n        imx.withdrawAndMint(starkKey, assetType, mintingBlob);\\n    }\\n\\n    function isRegistered(uint256 starkKey) public view returns (bool) {\\n        return imx.getEthKey(starkKey) != address(0);\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/registration/IMX.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IMX {\\n    function getEthKey(uint256 starkKey) external view returns (address);\\n\\n    function registerUser(\\n        address ethKey,\\n        uint256 starkKey,\\n        bytes calldata signature\\n    ) external;\\n\\n    function deposit(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        uint256 vaultId\\n    ) external payable;\\n\\n    function deposit(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        uint256 vaultId,\\n        uint256 quantizedAmount\\n    ) external;\\n\\n    function depositNft(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        uint256 vaultId,\\n        uint256 tokenId\\n    ) external;\\n\\n    function withdraw(uint256 starkKey, uint256 assetType) external;\\n\\n    function withdrawTo(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        address recipient\\n    ) external;\\n\\n    function withdrawNft(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        uint256 tokenId\\n    ) external;\\n\\n    function withdrawNftTo(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        uint256 tokenId,\\n        address recipient\\n    ) external;\\n\\n    function withdrawAndMint(\\n        uint256 starkKey,\\n        uint256 assetType,\\n        bytes calldata mintingBlob\\n    ) external;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IMX\",\"name\":\"_imx\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"imx\",\"outputs\":[{\"internalType\":\"contract IMX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"registerAndDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantizedAmount\",\"type\":\"uint256\"}],\"name\":\"registerAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"registerAndDepositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"}],\"name\":\"registerAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"registerAndWithdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"registerAndWithdrawNftTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"registerAndWithdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethKey\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"assetType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"mintingBlob\",\"type\":\"bytes\"}],\"name\":\"regsiterAndWithdrawAndMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Registration","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005fdcca53617f4d2b9134b29090c87d01058e27e9","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}