{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.1;\r\n\r\ncontract Blackhole {\r\n    \r\n    address public previousWinner;\r\n    address public feeTo;\r\n    address public currentLeader;\r\n    uint256 public currentBet;//amount of current bet in wei\r\n    uint256 public lastBet;//time of last bet in seconds\r\n    bool public currentGame;\r\n\r\n    event NewBet(uint256 amount, address newLeader);\r\n    event NewGameStarted(uint256 amount, address creator);\r\n    event Winrar(uint256 amount, address winner);\r\n    constructor() {\r\n        previousWinner = msg.sender;\r\n        feeTo = msg.sender;\r\n    }\r\n\r\n    modifier onlyPreviousWinner() {\r\n        require(msg.sender == previousWinner, \"You aren't the previous winner\");\r\n        _;\r\n    }\r\n\r\n    function setFeeTo(address destination) public onlyPreviousWinner {\r\n        feeTo = destination;\r\n    }\r\n\r\n    function nextMinimumBet() public view returns(uint256) {\r\n        if (currentGame) {\r\n            return (currentBet / 10) + currentBet;\r\n        } else {\r\n            return 100;\r\n        }\r\n    }\r\n\r\n    function bet() public payable {\r\n        require(msg.value >= nextMinimumBet(), \"bet more\");\r\n        if (!currentGame) {\r\n            currentGame = true;\r\n            emit NewGameStarted(msg.value, msg.sender);\r\n        } else {\r\n            payable(feeTo).transfer(msg.value / 1000);\r\n        }\r\n        currentBet = msg.value;\r\n        lastBet = block.timestamp;\r\n        currentLeader = msg.sender;\r\n        emit NewBet(msg.value, msg.sender);\r\n    }\r\n\r\n    function win() public {\r\n        require(block.timestamp >= lastBet + 2 days, \"must be leader for 48 hours to collect\");\r\n        require(msg.sender == currentLeader);\r\n        emit Winrar(address(this).balance, msg.sender);\r\n        payable(msg.sender).transfer(address(this).balance);\r\n        currentGame = false;\r\n        currentBet = 0;\r\n        previousWinner = msg.sender;\r\n        feeTo = msg.sender;\r\n    }\r\n    \r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLeader\",\"type\":\"address\"}],\"name\":\"NewBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewGameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"Winrar\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentLeader\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMinimumBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previousWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"win\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Blackhole","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://84355e4ac5af1bbe6cba8bbae8c2a954754e166fb90c6127eb115095b96215c2"}]}