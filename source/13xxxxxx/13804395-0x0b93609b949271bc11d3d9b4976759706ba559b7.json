{"status":"1","message":"OK","result":[{"SourceCode":"{\"StrategyBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\ninterface LosslessController {\\n    function admin() external returns(address);\\n\\n    function isAddressProtected(address token, address protectedAddress) external view returns (bool);\\n}\\n\\ninterface Guardian {\\n    function protectionAdmin(address token) external returns (address);\\n\\n    function setProtectedAddress(address token, address guardedAddress) external;\\n\\n    function removeProtectedAddresses(address token, address protectedAddress) external;\\n}\\n\\nabstract contract StrategyBase {\\n    Guardian public guardian;\\n    LosslessController public controller;\\n\\n    // --- EVENTS ---\\n\\n    event GuardianSet(address indexed newGuardian);\\n    event Paused(address indexed token, address indexed protectedAddress);\\n    event Unpaused(address indexed token, address indexed protectedAddress);\\n\\n    constructor(Guardian _guardian, LosslessController _controller) {\\n        guardian = _guardian;\\n        controller = _controller;\\n    }\\n\\n    // --- MODIFIERS ---\\n\\n    modifier onlyProtectionAdmin(address token) {\\n        require(msg.sender == guardian.protectionAdmin(token), \\\"LOSSLESS: Not protection admin\\\");\\n        _;\\n    }\\n\\n    // --- METHODS ---\\n\\n    // @dev In case guardian is changed, this allows not to redeploy strategy and just update it.\\n    function setGuardian(Guardian newGuardian) external {\\n        require(msg.sender == controller.admin(), \\\"LOSSLESS: Not lossless admin\\\");\\n        guardian = newGuardian;\\n        emit GuardianSet(address(newGuardian));\\n    }\\n}\"},\"TreasuryProtectionStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.0;\\n\\nimport \\\"./StrategyBase.sol\\\";\\n\\ncontract TreasuryProtectionStrategy is StrategyBase {\\n    mapping(address =\\u003e Protection) private protectedAddresses;\\n\\n    struct Whitelist {\\n        mapping(address =\\u003e bool) whitelist;\\n    }\\n\\n    struct Protection {\\n        mapping(address =\\u003e Whitelist) protection; \\n    }\\n\\n    event WhitelistAddresses(address token, address protectedAddress, address[] whitelist, bool state);\\n    event RemovedWhitelistAddresses(address token, address[] addressesToRemove);\\n\\n    constructor(Guardian _guardian, LosslessController _controller) StrategyBase(_guardian, _controller) {}\\n\\n    // --- VIEWS ---\\n\\n    function isAddressWhitelisted(address token, address protectedAddress, address whitelistedAddress) public view returns(bool) {\\n        return protectedAddresses[token].protection[protectedAddress].whitelist[whitelistedAddress];\\n    }\\n\\n    // @dev Called by controller to check if transfer is allowed to happen.\\n    function isTransferAllowed(address token, address sender, address recipient, uint256 amount) external view {\\n        require(isAddressWhitelisted(token, sender, recipient), \\\"LOSSLESS: not whitelisted\\\");\\n    }\\n\\n    // --- METHODS ---\\n\\n    // @dev Called by project owners. Sets a whitelist for protected address.\\n    function setProtectedAddress(address token, address protectedAddress, address[] calldata whitelist) external onlyProtectionAdmin(token) {\\n        setWhitelistState(token, protectedAddress, whitelist, true);\\n        guardian.setProtectedAddress(token, protectedAddress);\\n    }\\n\\n    // @dev Called by project owners. Adds or removes addresses for the whitelist of the protected address.\\n    function setWhitelistState(address token, address protectedAddress, address[] calldata addresses, bool state) public onlyProtectionAdmin(token) {\\n        for(uint8 i = 0; i \\u003c addresses.length; i++) {\\n            protectedAddresses[token].protection[protectedAddress].whitelist[addresses[i]] = state;\\n        }\\n        emit WhitelistAddresses(token, protectedAddress, addresses, state);\\n    }\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract Guardian\",\"name\":\"_guardian\",\"type\":\"address\"},{\"internalType\":\"contract LosslessController\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"GuardianSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addressesToRemove\",\"type\":\"address[]\"}],\"name\":\"RemovedWhitelistAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"whitelist\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"WhitelistAddresses\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract LosslessController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"contract Guardian\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"whitelistedAddress\",\"type\":\"address\"}],\"name\":\"isAddressWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isTransferAllowed\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Guardian\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"setGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"whitelist\",\"type\":\"address[]\"}],\"name\":\"setProtectedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protectedAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setWhitelistState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TreasuryProtectionStrategy","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000077736d218d05cb3d122107e12def22d5e69e2908000000000000000000000000e91d7cebce484070fc70777cb04f7e2efae31db4","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e8d77b58d0aac986f899a8ef9677a15703d534161550a85eeec5d19915c8840a"}]}