{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ninterface ERC721 {\r\n    function ownerOf(uint256 tokenId) external returns(address);\r\n}\r\n\r\ninterface ERC20{\r\n   function balanceOf(address _add) external view returns(uint256);\r\n   function transfer(address _to,uint256 _value) external returns (bool success);\r\n\r\n}\r\n\r\ncontract distribute{\r\n    \r\n    address private owner;\r\n    ERC721 LOOT;\r\n    ERC20 LOOTMOON;\r\n    uint256 public claimableAmount = 2000*10**18;\r\n    mapping (uint256 => bool) public LOOTUsed;\r\n    \r\n    constructor(address _add1, address _add2) public{\r\n        LOOT = ERC721(_add1);\r\n        LOOTMOON = ERC20(_add2);\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function claim(uint256 tokenId) public {\r\n        address LOOTOwner = LOOT.ownerOf(tokenId);\r\n        require(msg.sender == LOOTOwner);\r\n        require(LOOTUsed[tokenId] == false);\r\n        LOOTUsed[tokenId] = true;\r\n        LOOTMOON.transfer(msg.sender,claimableAmount);\r\n    }\r\n    \r\n    function withdraw(address _to) external{\r\n        require(msg.sender == owner);\r\n        uint256 withdrwaAmount = LOOTMOON.balanceOf(address(this));\r\n        LOOTMOON.transfer(_to, withdrwaAmount);\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_add2\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LOOTUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"claimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"distribute","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000ff9c1b15b16263c61d017ee9f65c50e4ae0113d7000000000000000000000000094e70046b6e1ff6385888c5c698281559dc38b3","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://453a22f29d76c7a65a5b9a131216aa700ee3bf4e070201bafd9167879fb68792"}]}