{"status":"1","message":"OK","result":[{"SourceCode":"// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/spell.sol\n\npragma solidity >=0.6.12;\n\n////// src/spell.sol\n/**\n *Submitted for verification at Etherscan.io on 2021-09-24\n*/\n\n// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/spell.sol\n\n/* pragma solidity >=0.6.12; */\n\n////// src/spell.sol\n// Copyright (C) 2020 Centrifuge\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n/* pragma solidity >=0.6.12; */\n\ninterface AuthLike {\n    function rely(address) external;\n    function deny(address) external;\n    function wards(address) external returns(uint);\n}\n\ninterface TinlakeRootLike {\n    function relyContract(address, address) external;\n    function denyContract(address, address) external;\n}\n\ninterface FileLike {\n    function file(bytes32, uint) external;\n    function file(bytes32, address) external;\n}\n\ninterface DependLike {\n    function depend(bytes32, address) external;\n}\n\ninterface MigrationLike {\n        function migrate(address) external;\n}\n\ninterface SpellMemberlistLike {\n    function updateMember(address, uint) external;\n}\n\n// spell to swap the clerk contract in NS2 deployment\ncontract TinlakeSpell {\n\n    bool public done;\n    string constant public description = \"Tinlake GigPool spell\";\n\n    // MAINNET ADDRESSES\n    // The contracts in this list should correspond to a tinlake deployment\n    // https://github.com/centrifuge/tinlake-pool-config/blob/master/mainnet-production.json\n\n    address constant public ROOT = 0x53b2d22d07E069a3b132BfeaaD275b10273d381E;\n    address constant public CLERK_OLD = 0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd;\n    address constant public COORDINATOR = 0x22a1caca2EE82e9cE7Ef900FD961891b66deB7cA;\n    address constant public RESERVE = 0x1f5Fa2E665609CE4953C65CE532Ac8B47EC97cD5;\n    address constant public SENIOR_TRANCHE = 0x3f06DB6334435fF4150e14aD69F6280BF8E8dA64;\n    address constant public SENIOR_MEMBERLIST = 0x5B5CFD6E45F1407ABCb4BFD9947aBea1EA6649dA;\n    address constant public SENIOR_TOKEN = 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0;\n    address constant public ASSESSOR = 0x83E2369A33104120746B589Cc90180ed776fFb91;\n    address constant public MGR = 0x2474F297214E5d96Ba4C81986A9F0e5C260f445D;\n    address constant public VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\n    address constant public JUG = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;\n    address constant public SPOTTER = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;\n    address constant public CLERK = 0xfE27bAA63592CCF1E09550fc489342b5817388B5;\n    address constant public POOL_ADMIN = 0xd7fb14d5C1259a47d46D156E74a9c3B69a147b4A;\n\n    uint256 constant ONE = 10**27;\n    address self;\n    \n    function cast() public {\n        require(!done, \"spell-already-cast\");\n        done = true;\n        execute();\n    }\n\n    function execute() internal {\n       TinlakeRootLike root = TinlakeRootLike(address(ROOT));\n       self = address(this);\n       // permissions \n       root.relyContract(CLERK, self); // required to file riskGroups & change discountRate\n       root.relyContract(CLERK_OLD, self); // required to change the interestRates for loans according to new riskGroups\n       root.relyContract(SENIOR_TRANCHE, self);\n       root.relyContract(SENIOR_TOKEN, self);\n       root.relyContract(SENIOR_TRANCHE, self);\n       root.relyContract(SENIOR_MEMBERLIST, self);\n       root.relyContract(POOL_ADMIN, self);\n       root.relyContract(ASSESSOR, self);\n       root.relyContract(COORDINATOR, self);\n       root.relyContract(RESERVE, self);\n       root.relyContract(MGR, self);\n       \n       migrateClerk();\n     }  \n\n     function migrateClerk() internal {\n        // migrate state\n        MigrationLike(CLERK).migrate(CLERK_OLD);\n    \n        // dependencies\n        DependLike(CLERK).depend(\"assessor\", ASSESSOR);\n        DependLike(CLERK).depend(\"mgr\", MGR);\n        DependLike(CLERK).depend(\"coordinator\", COORDINATOR);\n        DependLike(CLERK).depend(\"reserve\", RESERVE); \n        DependLike(CLERK).depend(\"tranche\", SENIOR_TRANCHE);\n        DependLike(CLERK).depend(\"collateral\", SENIOR_TOKEN);\n        DependLike(CLERK).depend(\"spotter\", SPOTTER);\n        DependLike(CLERK).depend(\"vat\", VAT);\n        DependLike(CLERK).depend(\"jug\", JUG);\n\n        // permissions\n        AuthLike(CLERK).rely(RESERVE);\n        AuthLike(CLERK).rely(POOL_ADMIN);\n        AuthLike(SENIOR_TRANCHE).rely(CLERK);\n        AuthLike(RESERVE).rely(CLERK);\n        AuthLike(ASSESSOR).rely(CLERK);\n        AuthLike(MGR).rely(CLERK);\n\n        FileLike(MGR).file(\"owner\", CLERK);\n\n        DependLike(ASSESSOR).depend(\"clerk\", CLERK); \n        DependLike(RESERVE).depend(\"lending\", CLERK);\n        DependLike(POOL_ADMIN).depend(\"lending\", CLERK);\n       \n        // restricted token setup\n        SpellMemberlistLike(SENIOR_MEMBERLIST).updateMember(CLERK, uint(-1));\n\n        // remove old clerk\n        AuthLike(SENIOR_TRANCHE).deny(CLERK_OLD);\n        AuthLike(RESERVE).deny(CLERK_OLD);\n        AuthLike(ASSESSOR).deny(CLERK_OLD);\n        AuthLike(MGR).deny(CLERK_OLD);\n    }\n}\n","ABI":"[{\"inputs\":[],\"name\":\"ASSESSOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLERK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLERK_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COORDINATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JUG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SENIOR_MEMBERLIST\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SENIOR_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SENIOR_TRANCHE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOTTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TinlakeSpell","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}