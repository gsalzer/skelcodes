{"status":"1","message":"OK","result":[{"SourceCode":"//  SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MetaAvatar{\r\n\r\n  mapping(address=>string) public metadatas;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\r\n    event URIChange(address indexed _owner, string newUri);\r\n\r\n    function balanceOf(address _owner) external pure returns (uint256){\r\n      return 1;\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId) public pure returns (address){\r\n      return address(uint160(_tokenId));\r\n    }\r\n\r\n    function idOf(address _address) public pure returns (uint256){\r\n    return uint256(uint160(_address));\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool){\r\n      return interfaceID == 0x80ac58cd || interfaceID == 0x5b5e139f;\r\n    }\r\n    function name() external pure returns (string memory){\r\n      return \"MetaAvatar\";\r\n    }\r\n\r\n    function symbol() external pure returns (string memory){\r\n      return \"AVATAR\";\r\n    }\r\n\r\n    function tokenURIAddress(address _address) public view returns (string memory){\r\n      require(bytes(metadatas[_address]).length != 0, \"Avatar URI not set for address\");\r\n      return metadatas[_address];\r\n    }\r\n    function tokenURI(uint256 _tokenId) external view returns (string memory){\r\n      return tokenURIAddress(ownerOf(_tokenId));\r\n    }\r\n\r\n    function setTokenURI(string calldata _tokenUri) external {\r\n      if(bytes(metadatas[msg.sender]).length == 0){\r\n        emit Transfer(address(0), msg.sender, idOf(msg.sender));\r\n      }\r\n      metadatas[msg.sender] = _tokenUri;\r\n      emit URIChange(msg.sender, _tokenUri);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"URIChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"idOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"metadatas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenUri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"tokenURIAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MetaAvatar","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://038bbca14b7a9444b453b5fa3e73d25653bef24dcf139265ac7eb7b89b3960a5"}]}