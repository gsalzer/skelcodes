{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.7.3;\r\n\r\ncontract BridgeDeposit {\r\n    address private owner;\r\n    uint256 private maxDepositAmount;\r\n    uint256 private maxBalance;\r\n    bool private canReceiveDeposit;\r\n\r\n    constructor(\r\n        uint256 _maxDepositAmount,\r\n        uint256 _maxBalance,\r\n        bool _canReceiveDeposit\r\n    ) {\r\n        owner = msg.sender;\r\n        maxDepositAmount = _maxDepositAmount;\r\n        maxBalance = _maxBalance;\r\n        canReceiveDeposit = _canReceiveDeposit;\r\n        emit OwnerSet(address(0), msg.sender);\r\n        emit MaxDepositAmountSet(0, _maxDepositAmount);\r\n        emit MaxBalanceSet(0, _maxBalance);\r\n        emit CanReceiveDepositSet(_canReceiveDeposit);\r\n    }\r\n\r\n    // Send the contract's balance to the owner\r\n    function withdrawBalance() public isOwner {\r\n        uint256 balance = address(this).balance;\r\n        payable(owner).transfer(balance);\r\n        emit BalanceWithdrawn(owner, balance);\r\n    }\r\n\r\n    function destroy() public isOwner {\r\n        emit Destructed(owner, address(this).balance);\r\n        selfdestruct(payable(owner));\r\n    }\r\n\r\n    // Receive function which reverts if amount > maxDepositAmount and canReceiveDeposit = false\r\n    receive() external payable isLowerThanMaxDepositAmount canReceive isLowerThanMaxBalance {\r\n        emit EtherReceived(msg.sender, msg.value);\r\n    }\r\n\r\n    // Setters\r\n    function setMaxAmount(uint256 _maxDepositAmount) public isOwner {\r\n        emit MaxDepositAmountSet(maxDepositAmount, _maxDepositAmount);\r\n        maxDepositAmount = _maxDepositAmount;\r\n    }\r\n\r\n    function setOwner(address newOwner) public isOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function setCanReceiveDeposit(bool _canReceiveDeposit) public isOwner {\r\n        emit CanReceiveDepositSet(_canReceiveDeposit);\r\n        canReceiveDeposit = _canReceiveDeposit;\r\n    }\r\n\r\n    function setMaxBalance(uint256 _maxBalance) public isOwner {\r\n        emit MaxBalanceSet(maxBalance, _maxBalance);\r\n        maxBalance = _maxBalance;\r\n    }\r\n\r\n    // Getters\r\n    function getMaxDepositAmount() external view returns (uint256) {\r\n        return maxDepositAmount;\r\n    }\r\n\r\n    function getMaxBalance() external view returns (uint256) {\r\n        return maxBalance;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    function getCanReceiveDeposit() external view returns (bool) {\r\n        return canReceiveDeposit;\r\n    }\r\n\r\n    // Modifiers\r\n    modifier isLowerThanMaxDepositAmount() {\r\n        require(msg.value <= maxDepositAmount, \"Deposit amount is too big\");\r\n        _;\r\n    }\r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n    modifier canReceive() {\r\n        require(canReceiveDeposit == true, \"Contract is not allowed to receive ether\");\r\n        _;\r\n    }\r\n    modifier isLowerThanMaxBalance() {\r\n        require(address(this).balance <= maxBalance, \"Contract reached the max balance allowed\");\r\n        _;\r\n    }\r\n\r\n    // Events\r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    event MaxDepositAmountSet(uint256 previousAmount, uint256 newAmount);\r\n    event CanReceiveDepositSet(bool canReceiveDeposit);\r\n    event MaxBalanceSet(uint256 previousBalance, uint256 newBalance);\r\n    event BalanceWithdrawn(address indexed owner, uint256 balance);\r\n    event EtherReceived(address indexed emitter, uint256 amount);\r\n    event Destructed(address indexed owner, uint256 amount);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDepositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxBalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_canReceiveDeposit\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canReceiveDeposit\",\"type\":\"bool\"}],\"name\":\"CanReceiveDepositSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Destructed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"MaxBalanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MaxDepositAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCanReceiveDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_canReceiveDeposit\",\"type\":\"bool\"}],\"name\":\"setCanReceiveDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDepositAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBalance\",\"type\":\"uint256\"}],\"name\":\"setMaxBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"BridgeDeposit","CompilerVersion":"v0.7.3+commit.9bfce1f6","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000470de4df8200000000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000000000000000001","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8f210d4c91df9deab33e806b1f8bebc8ca250889c81b63a2974a0e3aa503dca7"}]}