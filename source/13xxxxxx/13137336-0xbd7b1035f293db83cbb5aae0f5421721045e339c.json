{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.5.9;\r\n\r\nlibrary SafeMath\r\n{\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    \t{\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent ChangeOwner(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n  \t\r\n  \tconstructor() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n  \t\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n  \t{\r\n    \trequire(_to != owner);\r\n    \trequire(_to != address(0x0));\r\n\r\n        address from = owner;\r\n      \towner = _to;\r\n  \t    \r\n      \temit ChangeOwner(from, _to);\r\n  \t}\r\n}\r\n\r\ncontract ERC20Interface\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    function totalSupply() view public returns (uint _supply);\r\n    function balanceOf( address _who ) public view returns (uint _value);\r\n    function transfer( address _to, uint _value) public returns (bool _success);\r\n    function approve( address _spender, uint _value ) public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\r\n}\r\n\r\ncontract NKGENToken is ERC20Interface, OwnerHelper\r\n{\r\n    using SafeMath for uint;\r\n    \r\n    string public name;\r\n    uint public decimals;\r\n    string public symbol;\r\n    \r\n    uint constant private E18 = 1000000000000000000;\r\n    \r\n    // Total                                  100,000,000\r\n    uint constant public maxTotalSupply     = 100000000 * E18;\r\n\r\n    // Marketing                              30,000,000 (30%)\r\n    uint constant public maxMarketSupply    = 30000000 * E18;\r\n\r\n    // User Reward                            25,000,000 (25%)\r\n    uint constant public maxUserSupply      = 25000000 * E18;\r\n\r\n    // Platform Admin                         10,000,000 (10%)\r\n    uint constant public maxPlatformAdmin   = 10000000 * E18;\r\n\r\n    // Platform Maintenance and Repairment    10,000,000 (10%)\r\n    uint constant public maxPlatformMain    = 10000000 * E18;\r\n\r\n    // Platform Research and Development      10,000,000 (10%)\r\n    uint constant public maxPlatformDev     = 10000000 * E18;\r\n\r\n    // Contingency                            10,000,000 (10%)\r\n    uint constant public maxContingency     = 10000000 * E18;   \r\n\r\n    // Development Team                       5,000,000 (5%)\r\n    uint constant public maxDevTeam         = 5000000 * E18;   \r\n        \r\n\r\n    uint public totalTokenSupply;\r\n\r\n    uint public tokenIssuedMarket;\r\n    uint public tokenIssuedUserReward;\r\n    uint public tokenIssuedPlatformAdmin;\r\n    uint public tokenIssuedPlatformMain;\r\n    uint public tokenIssuedPlatformDev;\r\n    uint public tokenIssuedContingency;\r\n    uint public tokenIssuedDevTeam;     \r\n    \r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n      \r\n    bool public tokenLock = false;\r\n\r\n    event MarketIssue(address indexed _to, uint _tokens);\r\n    event UserRewardIssue(address indexed _to, uint _tokens);\r\n    event PlatformAdminIssue(address indexed _to, uint _tokens);\r\n    event PlatformMainIssue(address indexed _to, uint _tokens);\r\n    event PlatformDevIssue(address indexed _to, uint _tokens);\r\n    event ContingencyIssue(address indexed _to, uint _tokens);\r\n    event DevTeamIssue(address indexed _to, uint _tokens);\r\n\r\n    \r\n    constructor() public\r\n    {\r\n        name        = \"NKGEN\";\r\n        decimals    = 18;\r\n        symbol      = \"NKGEN\";\r\n        \r\n        totalTokenSupply = 0;\r\n        balances[owner] = totalTokenSupply;\r\n\r\n        tokenIssuedMarket         = 0;\r\n        tokenIssuedUserReward     = 0;\r\n        tokenIssuedPlatformAdmin  = 0;\r\n        tokenIssuedPlatformMain   = 0;\r\n        tokenIssuedPlatformDev    = 0;\r\n        tokenIssuedContingency    = 0;\r\n        tokenIssuedDevTeam        = 0;\r\n        \r\n        require(maxTotalSupply == maxMarketSupply + maxUserSupply + maxPlatformAdmin  + maxPlatformMain + maxPlatformDev + maxContingency + maxDevTeam);\r\n    }\r\n\r\n    function totalSupply() view public returns (uint) \r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n    \r\n    function balanceOf(address _who) view public returns (uint) \r\n    {\r\n        return balances[_who];\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        approvals[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true; \r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) view public returns (uint) \r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n        \r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function marketIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedMarket == 0);\r\n        \r\n        uint tokens = maxMarketSupply;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedMarket = tokenIssuedMarket.add(tokens);\r\n        \r\n        emit MarketIssue(_to, tokens);\r\n    }   \r\n\r\n    function userRewardIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedUserReward == 0);\r\n        \r\n        uint tokens = maxUserSupply;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedUserReward = tokenIssuedUserReward.add(tokens);\r\n        \r\n        emit UserRewardIssue(_to, tokens);\r\n    }\r\n\r\n    function platfromAdminIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedPlatformAdmin == 0);\r\n        \r\n        uint tokens = maxPlatformAdmin;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedPlatformAdmin = tokenIssuedPlatformAdmin.add(tokens);\r\n        \r\n        emit PlatformAdminIssue(_to, tokens);\r\n    }\r\n\r\n    function platformMainIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedPlatformMain == 0);\r\n        \r\n        uint tokens = maxPlatformMain;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedPlatformMain = tokenIssuedPlatformMain.add(tokens);\r\n        \r\n        emit PlatformMainIssue(_to, tokens);\r\n    }\r\n\r\n    function platformDevIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedPlatformDev == 0);\r\n        \r\n        uint tokens = maxPlatformDev;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedPlatformDev = tokenIssuedPlatformDev.add(tokens);\r\n        \r\n        emit PlatformDevIssue(_to, tokens);\r\n    }\r\n    \r\n    function contingencyIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedContingency == 0);\r\n        \r\n        uint tokens = maxContingency;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedContingency = tokenIssuedContingency.add(tokens);\r\n        \r\n        emit ContingencyIssue(_to, tokens);\r\n    }\r\n\r\n    function devTeamIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedDevTeam == 0);\r\n        \r\n        uint tokens = maxDevTeam;\r\n\r\n        balances[_to] = balances[_to].add(tokens);\r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedDevTeam = tokenIssuedDevTeam.add(tokens);\r\n        \r\n        emit DevTeamIssue(_to, tokens);\r\n    }\r\n    \r\n\r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == owner)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function setTokenUnlock() onlyOwner public\r\n    {\r\n        require(tokenLock == true);        \r\n        tokenLock = false;\r\n    }\r\n    \r\n    function setTokenLock() onlyOwner public\r\n    {\r\n        require(tokenLock == false);\r\n        tokenLock = true;\r\n    }\r\n    \r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) onlyOwner public returns (bool success)\r\n    {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n    \r\n    function withdrawTokens(address _contract, uint _value) onlyOwner public\r\n    {\r\n\r\n        if(_contract == address(0x0))\r\n        {\r\n            uint eth = _value.mul(10 ** decimals);\r\n            msg.sender.transfer(eth);\r\n        }\r\n        else\r\n        {\r\n            uint tokens = _value.mul(10 ** decimals);\r\n            ERC20Interface(_contract).transfer(msg.sender, tokens);\r\n            \r\n            emit Transfer(address(0x0), msg.sender, tokens);\r\n        }\r\n    }\r\n\r\n    function close() onlyOwner public\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxUserSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"platfromAdminIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxContingency\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMarketSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMarket\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"userRewardIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPlatformAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDevTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"platformDevIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPlatformMain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedDevTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"platformMainIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedUserReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPlatformAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPlatformDev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedContingency\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"contingencyIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"marketIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPlatformDev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"devTeamIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPlatformMain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MarketIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"UserRewardIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"PlatformAdminIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"PlatformMainIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"PlatformDevIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"ContingencyIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"DevTeamIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NKGENToken","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://34925c67c0676fc63983bd97b361c2cb65e102a26e897b3c806f2953364b35f3"}]}