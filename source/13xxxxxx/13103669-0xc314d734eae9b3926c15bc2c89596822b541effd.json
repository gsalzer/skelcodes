{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\nabstract contract EtherRock {\r\n    function buyRock (uint rockNumber) virtual public payable;\r\n    function sellRock (uint rockNumber, uint price) virtual public;\r\n    function giftRock (uint rockNumber, address receiver) virtual public;\r\n}\r\n\r\ncontract RockMinter {\r\n  EtherRock rocks = EtherRock(0x37504AE0282f5f334ED29b4548646f887977b7cC);\r\n\r\n  function buy(uint256 id) public  {\r\n    rocks.buyRock(id);\r\n    rocks.sellRock(id, type(uint256).max);\r\n    rocks.giftRock(id, msg.sender);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RockMinter","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c8e1e2a32f7f0d0923298c2de68ae468868147abb8c617e9b65c912d0fc28508"}]}