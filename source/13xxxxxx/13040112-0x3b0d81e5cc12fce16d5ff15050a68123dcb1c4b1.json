{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Zones.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity =0.7.6;\\npragma abicoder v2;\\n\\n\\ninterface IEthMap {\\n  function buyZone(uint zoneId) external payable returns (bool success);\\n  function sellZone(uint zoneId, uint amount) external returns (bool success);\\n  function transferZone(uint zoneId, address recipient) external returns (bool success);\\n  function computeInitialPrice(uint zoneId) external view returns (uint price);\\n  function getZone(uint zoneId) external view returns (uint id, address owner, uint sellPrice);\\n  function getBalance() external view returns (uint amount);\\n  function withdraw() external returns (bool success);\\n  function transferContractOwnership(address newOwner) external returns (bool success);\\n}\\n\\n\\ncontract ZoneMap {\\n  IEthMap public constant map = IEthMap(0xB6bbf89c3DbBa20Cb4d5cABAa4A386ACbbAb455e);\\n\\n  struct Zone {\\n    uint id;\\n    address owner;\\n    uint sellPrice;\\n  }\\n\\n  function getAllZones() external view returns (Zone[] memory zones) {\\n    zones = new Zone[](178);\\n    for (uint256 i; i < 178; i++) {\\n      (uint id, address owner, uint sellPrice) = map.getZone(i);\\n      zones[i] = Zone(id, owner, sellPrice);\\n    }\\n  }\\n\\n  function getZonesForSale() external view returns (Zone[] memory zones) {\\n    zones = new Zone[](178);\\n    uint256 n;\\n    for (uint256 i; i < 178; i++) {\\n      (uint id, address owner, uint sellPrice) = map.getZone(i + 1);\\n      if (sellPrice > 0) {\\n        zones[n++] = Zone(id, owner, sellPrice);\\n      }\\n    }\\n    assembly { mstore(zones, n) }\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"name\":\"getAllZones\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct ZoneMap.Zone[]\",\"name\":\"zones\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZonesForSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct ZoneMap.Zone[]\",\"name\":\"zones\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"map\",\"outputs\":[{\"internalType\":\"contract IEthMap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ZoneMap","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}