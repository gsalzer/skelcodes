{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n██████╗░██╗░██████╗██████╗░███████╗███╗░░██╗░██████╗███████╗██████╗░\r\n██╔══██╗██║██╔════╝██╔══██╗██╔════╝████╗░██║██╔════╝██╔════╝██╔══██╗\r\n██║░░██║██║╚█████╗░██████╔╝█████╗░░██╔██╗██║╚█████╗░█████╗░░██████╔╝\r\n██║░░██║██║░╚═══██╗██╔═══╝░██╔══╝░░██║╚████║░╚═══██╗██╔══╝░░██╔══██╗\r\n██████╔╝██║██████╔╝██║░░░░░███████╗██║░╚███║██████╔╝███████╗██║░░██║\r\n╚═════╝░╚═╝╚═════╝░╚═╝░░░░░╚══════╝╚═╝░░╚══╝╚═════╝░╚══════╝╚═╝░░╚═╝\r\n\r\nby Conductive Research \r\n\r\nWe bring together everything that’s required to build token utility\r\n\r\nWork with us 👉 https://www.conductiveresearch.com\r\n\r\nFollow us on twitter: @0xConductive\r\n\r\n*/\r\n\r\npragma solidity ^0.4.25;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract Dispenser {\r\n    function dispenseEther(address[] recipients, uint256[] values) external payable {\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            recipients[i].transfer(values[i]);\r\n        uint256 balance = address(this).balance;\r\n        if (balance > 0)\r\n            msg.sender.transfer(balance);\r\n    }\r\n\r\n    function dispenseToken(IERC20 token, address[] recipients, uint256[] values) external {\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            total += values[i];\r\n        require(token.transferFrom(msg.sender, address(this), total));\r\n        for (i = 0; i < recipients.length; i++)\r\n            require(token.transfer(recipients[i], values[i]));\r\n    }\r\n\r\n    function dispenseTokenSimple(IERC20 token, address[] recipients, uint256[] values) external {\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            require(token.transferFrom(msg.sender, recipients[i], values[i]));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"dispenseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"dispenseEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"dispenseTokenSimple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Dispenser","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://455357d69a3f2be760d8517d6c1ef8e59659fe163235ff0f64e9018f7eedd667"}]}