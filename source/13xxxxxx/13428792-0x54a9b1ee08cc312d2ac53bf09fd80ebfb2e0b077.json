{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\n\r\ninterface IERC20 {\r\n   function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n   function approve(address spender,uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IUniswap {\r\n  function swapExactTokensForTokens(uint256 amountIn,uint256 amountOutMin,address[] calldata path,address to,uint256 deadline) external returns (uint256[] memory amounts);\r\n}\r\n\r\ncontract swapper {\r\n    IUniswap uniswap;\r\n\r\n    address private constant router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n\r\n    constructor() {\r\n        uniswap = IUniswap(router);\r\n    }\r\n\r\n    function swap(uint256 amountIn, uint256 amountOutMin) external {\r\n        address[] memory path = new address[](2);\r\n        path[0] = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\r\n        path[1] = 0x054D64b73d3D8A21Af3D764eFd76bCaA774f3Bb2;\r\n\r\n        require(IERC20(path[0]).approve(router,amountIn), 'approve failed1');\r\n        require(IERC20(path[0]).transferFrom(msg.sender,address(this),amountIn), 'transferFrom failed1');\r\n\r\n        uniswap.swapExactTokensForTokens(amountIn, amountOutMin, path, msg.sender, block.timestamp+300);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"swapper","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4fb97e50bbefdc39c8aa27f538f03beff137f7467d0f07c356c788115c3f9145"}]}