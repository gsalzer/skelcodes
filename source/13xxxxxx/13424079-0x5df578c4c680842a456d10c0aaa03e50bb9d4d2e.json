{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\n\r\ninterface IRouter {\r\n    function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);\r\n}\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address from, address to, uint value) external;\r\n    function approve(address to, uint value) external returns (bool);\r\n\r\n}\r\n\r\ncontract Swapper {\r\n    address private router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n\r\n    function swap(uint256 amountOutMin, address[] calldata path, uint256 amountIn, uint256 deadline) external {\r\n        IERC20(path[0]).transferFrom(msg.sender, address(this), amountIn);\r\n        IERC20(path[0]).approve(router, amountIn);\r\n        IRouter(router).swapExactTokensForTokens(amountIn, amountOutMin, path, msg.sender, deadline);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Swapper","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://eed825837e8e5b850a1372b05ea25f117861b2a8758b68211b0521cecdb7ca8c"}]}