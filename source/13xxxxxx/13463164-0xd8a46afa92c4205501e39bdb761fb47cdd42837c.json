{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/producers/auction/MirrorDutchAuctionProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.6;\\n\\n/**\\n * @title MirrorDutchAuctionProxy\\n * @author MirrorXYZ\\n */\\ncontract MirrorDutchAuctionProxy {\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @notice Stores implementation logic.\\n     * @param implementation - the implementation holds the logic for all proxies\\n     * @param initializationData - initialization call\\n     */\\n    constructor(address implementation, bytes memory initializationData) {\\n        // Delegatecall into the relayer, supplying initialization calldata.\\n        (bool ok, ) = implementation.delegatecall(initializationData);\\n\\n        // Revert and include revert data if delegatecall to implementation reverts.\\n        if (!ok) {\\n            assembly {\\n                returndatacopy(0, 0, returndatasize())\\n                revert(0, returndatasize())\\n            }\\n        }\\n\\n        assembly {\\n            sstore(_IMPLEMENTATION_SLOT, implementation)\\n        }\\n    }\\n\\n    /**\\n     * @notice When any function is called on this contract, we delegate to\\n     * the logic contract stored in the implementation storage slot.\\n     */\\n    fallback() external payable {\\n        assembly {\\n            let ptr := mload(0x40)\\n            calldatacopy(ptr, 0, calldatasize())\\n            let result := delegatecall(\\n                gas(),\\n                sload(_IMPLEMENTATION_SLOT),\\n                ptr,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let size := returndatasize()\\n            returndatacopy(ptr, 0, size)\\n\\n            switch result\\n            case 0 {\\n                revert(ptr, size)\\n            }\\n            default {\\n                return(ptr, size)\\n            }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializationData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"MirrorDutchAuctionProxy","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"2000","ConstructorArguments":"0000000000000000000000009ae96b2ef72cd6b671f4450157f289124ce5bc02000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a4fb4e61e9000000000000000000000000942cbea64876ff0b2e23c0712b37dc0091804e9c00000000000000000000000021a93be569666527dae0fdbfbe7715299dec1202000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000942cbea64876ff0b2e23c0712b37dc0091804e9c00000000000000000000000050912b1546fc0021788c3f1da4a637a5bf9294bf0000000000000000000000007f5df5e75c738b6e09bc242c62944fd56dafb18c000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000013fbe85edc90000000000000000000000000000000000000000000000000000011c37937e08000000000000000000000000000000000000000000000000000000f8b0a10e47000000000000000000000000000000000000000000000000000000d529ae9e86000000000000000000000000000000000000000000000000000000b1a2bc2ec50000000000000000000000000000000000000000000000000000008e1bc9bf040000000000000000000000000000000000000000000000000000006a94d74f43000000000000000000000000000000000000000000000000000000470de4df820000000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"1","Implementation":"0x9ae96b2ef72cd6b671f4450157f289124ce5bc02","SwarmSource":""}]}