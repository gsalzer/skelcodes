{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.11;\r\n\r\ninterface IEnsRegistry {\r\n  function resolver(bytes32 node) external view returns (address);\r\n\r\n  function owner(bytes32 node) external view returns (address);\r\n}\r\n\r\ninterface IEnsResolver {\r\n  function addr(bytes32 node) external view returns (address);\r\n}\r\n\r\ninterface IStringSplit {\r\n  function splitStringByDeliminator(\r\n    string memory input,\r\n    string memory deliminator\r\n  ) external view returns (string[] memory);\r\n}\r\n\r\nlibrary EnsHelper {\r\n  address public constant registryAddress =\r\n    0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e;\r\n  address private constant splitStringAddress =\r\n    0x1C0EeEF670d82498F7547062Aac7eE2143eC52ff;\r\n\r\n  function resolvedAddressByNamehash(bytes32 namehash)\r\n    public\r\n    view\r\n    returns (address resolvedAddress)\r\n  {\r\n    address resolverAddress = resolverAddressByNamehash(namehash);\r\n    resolvedAddress = IEnsResolver(resolverAddress).addr(namehash);\r\n  }\r\n\r\n  function resolvedAddressByName(string memory name)\r\n    public\r\n    view\r\n    returns (address resolvedAddress)\r\n  {\r\n    bytes32 namehash = namehashByName(name);\r\n    resolvedAddress = resolvedAddressByNamehash(namehash);\r\n  }\r\n\r\n  function resolverAddressByNamehash(bytes32 namehash)\r\n    public\r\n    view\r\n    returns (address resolverAddress)\r\n  {\r\n    resolverAddress = IEnsRegistry(registryAddress).resolver(namehash);\r\n  }\r\n\r\n  function resolverAddressByName(string memory name)\r\n    public\r\n    view\r\n    returns (address resolverAddress)\r\n  {\r\n    bytes32 namehash = namehashByName(name);\r\n    resolverAddress = resolverAddressByNamehash(namehash);\r\n  }\r\n\r\n  function namehashByName(string memory name)\r\n    public\r\n    view\r\n    returns (bytes32 namehash)\r\n  {\r\n    string[] memory parts = IStringSplit(splitStringAddress)\r\n      .splitStringByDeliminator(name, \".\");\r\n    for (uint256 partIdx = parts.length - 1; partIdx >= 0; partIdx--) {\r\n      string memory part = parts[partIdx];\r\n      namehash = keccak256(\r\n        abi.encodePacked(namehash, keccak256(abi.encodePacked(bytes(part))))\r\n      );\r\n      if (partIdx == 0) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function ownerAddressByNamehash(bytes32 namehash)\r\n    public\r\n    view\r\n    returns (address ownerAddress)\r\n  {\r\n    ownerAddress = IEnsRegistry(registryAddress).owner(namehash);\r\n  }\r\n\r\n  function ownerAddressByName(string memory name)\r\n    public\r\n    view\r\n    returns (address ownerAddress)\r\n  {\r\n    bytes32 namehash = namehashByName(name);\r\n    ownerAddress = IEnsRegistry(registryAddress).owner(namehash);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"namehashByName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ownerAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"name\":\"ownerAddressByNamehash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"resolvedAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resolvedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"name\":\"resolvedAddressByNamehash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resolvedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"resolverAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resolverAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"name\":\"resolverAddressByNamehash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resolverAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EnsHelper","CompilerVersion":"v0.8.11+commit.d7f03943","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b5482e96bf3f4d2712e8e65945185241959404ee4b4676fc662c6bd44bb2eb05"}]}