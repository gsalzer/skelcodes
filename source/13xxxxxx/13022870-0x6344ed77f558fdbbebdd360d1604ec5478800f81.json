{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"berlin\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/Proxy/Auth.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\nimport {IAuthority} from './interfaces/IAuthority.sol';\\n\\ncontract Auth {\\n    IAuthority public authority;\\n    address public owner;\\n\\n    error Unauthorized();\\n\\n    event LogSetAuthority(address indexed authority);\\n    event LogSetOwner(address indexed owner);\\n\\n    constructor() {\\n        owner = msg.sender;\\n        emit LogSetOwner(msg.sender);\\n    }\\n\\n    function setOwner(address owner_) public auth {\\n        owner = owner_;\\n        emit LogSetOwner(owner);\\n    }\\n\\n    function setAuthority(address authority_) public auth {\\n        authority = IAuthority(authority_);\\n        emit LogSetAuthority(authority_);\\n    }\\n\\n    modifier auth() {\\n        if (!isAuthorized(msg.sender, msg.sig)) {\\n            revert Unauthorized();\\n        }\\n        _;\\n    }\\n\\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\\n        if (src == address(this)) {\\n            return true;\\n        } else if (src == owner) {\\n            return true;\\n        } else if (address(authority) == address(0)) {\\n            return false;\\n        } else {\\n            return authority.canCall(src, address(this), sig);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/Proxy/Proxy.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\nimport {IProxyCache} from './interfaces/IProxyCache.sol';\\nimport {Auth} from './Auth.sol';\\n\\ncontract Proxy is Auth {\\n    IProxyCache public cache;\\n\\n    event WriteToCache(address target);\\n\\n    error ZeroTarget();\\n    error SetCacheError();\\n    error Unsuccessful();\\n\\n    constructor(address _cache) Auth() {\\n        setCache(_cache);\\n    }\\n\\n    function setCache(address _cache) public auth {\\n        if (_cache == address(0)) {\\n            revert ZeroTarget();\\n        }\\n        cache = IProxyCache(_cache);\\n    }\\n\\n    function execute(bytes calldata _code, bytes calldata _data) public payable {\\n        address target = cache.read(_code);\\n        if (target == address(0)) {\\n            target = cache.write(_code);\\n            emit WriteToCache(target);\\n        }\\n        execute(target, _data);\\n    }\\n\\n    function execute(address _target, bytes memory _data) public payable auth {\\n        if (_target == address(0)) {\\n            revert ZeroTarget();\\n        }\\n        (bool success, ) = _target.delegatecall(_data);\\n        if (!success) {\\n            revert Unsuccessful();\\n        }\\n    }\\n\\n    function executeCall(\\n        address _target,\\n        uint256 _amount,\\n        bytes memory _data\\n    ) public payable auth {\\n        (bool success, ) = _target.call{value: _amount}(_data);\\n        if (!success) {\\n            revert Unsuccessful();\\n        }\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\"\r\n    },\r\n    \"contracts/Proxy/interfaces/IAuthority.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\ninterface IAuthority {\\n    function canCall(\\n        address src,\\n        address dst,\\n        bytes4 sig\\n    ) external view returns (bool);\\n}\\n\"\r\n    },\r\n    \"contracts/Proxy/interfaces/IProxyCache.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.6;\\n\\ninterface IProxyCache {\\n    function read(bytes memory _code) external view returns (address);\\n\\n    function write(bytes memory _code) external returns (address target);\\n}\\n\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cache\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SetCacheError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unsuccessful\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroTarget\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"WriteToCache\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cache\",\"outputs\":[{\"internalType\":\"contract IProxyCache\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cache\",\"type\":\"address\"}],\"name\":\"setCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Proxy","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000271293c67e2d3140a0e9381eff1f9b01e07b0795","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":""}]}