{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ControllerProxy.sol\": {\r\n      \"content\": \"//██████╗  █████╗ ██╗      █████╗ ██████╗ ██╗███╗   ██╗\\n//██╔══██╗██╔══██╗██║     ██╔══██╗██╔══██╗██║████╗  ██║\\n//██████╔╝███████║██║     ███████║██║  ██║██║██╔██╗ ██║\\n//██╔═══╝ ██╔══██║██║     ██╔══██║██║  ██║██║██║╚██╗██║\\n//██║     ██║  ██║███████╗██║  ██║██████╔╝██║██║ ╚████║\\n//╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═══╝\\n                                                     \\n\\npragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\nimport \\\"./utils/Errors.sol\\\";\\nimport \\\"./ControllerStorage.sol\\\";\\n\\n/** @title Paladin Controller contract  */\\n/// @author Paladin\\ncontract ControllerProxy is ControllerStorage {\\n\\n    event NewPendingImplementation(address oldPendingImplementation, address newPendingImplementation);\\n\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    constructor(){\\n        admin = msg.sender;\\n    }\\n\\n    /**\\n     * @dev Proposes the address of a new Implementation (the new Controller contract)\\n     */\\n    function proposeImplementation(address newPendingImplementation) public adminOnly {\\n\\n        address oldPendingImplementation = pendingImplementation;\\n\\n        pendingImplementation = newPendingImplementation;\\n\\n        emit NewPendingImplementation(oldPendingImplementation, newPendingImplementation);\\n    }\\n\\n    /**\\n     * @dev Accepts the Pending Implementation as new Current Implementation\\n     * Only callable by the Pending Implementation contract\\n     */\\n    function acceptImplementation() public returns(bool) {\\n        require(msg.sender == pendingImplementation || pendingImplementation == address(0), Errors.CALLER_NOT_IMPLEMENTATION);\\n\\n        address oldImplementation = currentImplementation;\\n        address oldPendingImplementation = pendingImplementation;\\n\\n        currentImplementation = pendingImplementation;\\n        pendingImplementation = address(0);\\n\\n        emit NewImplementation(oldImplementation, currentImplementation);\\n        emit NewPendingImplementation(oldPendingImplementation, pendingImplementation);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Delegates execution to an implementation contract.\\n     * It returns to the external caller whatever the implementation returns\\n     * or forwards reverts.\\n     */\\n    fallback() external payable {\\n        // delegate all other functions to current implementation\\n        (bool success, ) = currentImplementation.delegatecall(msg.data);\\n\\n        assembly {\\n              let free_mem_ptr := mload(0x40)\\n              returndatacopy(free_mem_ptr, 0, returndatasize())\\n\\n              switch success\\n              case 0 { revert(free_mem_ptr, returndatasize()) }\\n              default { return(free_mem_ptr, returndatasize()) }\\n        }\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/utils/Errors.sol\": {\r\n      \"content\": \"//██████╗  █████╗ ██╗      █████╗ ██████╗ ██╗███╗   ██╗\\n//██╔══██╗██╔══██╗██║     ██╔══██╗██╔══██╗██║████╗  ██║\\n//██████╔╝███████║██║     ███████║██║  ██║██║██╔██╗ ██║\\n//██╔═══╝ ██╔══██║██║     ██╔══██║██║  ██║██║██║╚██╗██║\\n//██║     ██║  ██║███████╗██║  ██║██████╔╝██║██║ ╚████║\\n//╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═══╝\\n                                                     \\n\\npragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\nlibrary Errors {\\n    // Admin error\\n    string public constant CALLER_NOT_ADMIN = '1'; // 'The caller must be the admin'\\n    string public constant CALLER_NOT_CONTROLLER = '29'; // 'The caller must be the admin or the controller'\\n    string public constant CALLER_NOT_ALLOWED_POOL = '30';  // 'The caller must be a palPool listed in the controller'\\n    string public constant CALLER_NOT_MINTER = '31';\\n    string public constant CALLER_NOT_IMPLEMENTATION = '35'; // 'The caller must be the pending Implementation'\\n\\n    // ERC20 type errors\\n    string public constant FAIL_TRANSFER = '2';\\n    string public constant FAIL_TRANSFER_FROM = '3';\\n    string public constant BALANCE_TOO_LOW = '4';\\n    string public constant ALLOWANCE_TOO_LOW = '5';\\n    string public constant SELF_TRANSFER = '6';\\n\\n    // PalPool errors\\n    string public constant INSUFFICIENT_CASH = '9';\\n    string public constant INSUFFICIENT_BALANCE = '10';\\n    string public constant FAIL_DEPOSIT = '11';\\n    string public constant FAIL_LOAN_INITIATE = '12';\\n    string public constant FAIL_BORROW = '13';\\n    string public constant ZERO_BORROW = '27';\\n    string public constant BORROW_INSUFFICIENT_FEES = '23';\\n    string public constant LOAN_CLOSED = '14';\\n    string public constant NOT_LOAN_OWNER = '15';\\n    string public constant LOAN_OWNER = '16';\\n    string public constant FAIL_LOAN_EXPAND = '17';\\n    string public constant NOT_KILLABLE = '18';\\n    string public constant RESERVE_FUNDS_INSUFFICIENT = '19';\\n    string public constant FAIL_MINT = '20';\\n    string public constant FAIL_BURN = '21';\\n    string public constant FAIL_WITHDRAW = '24';\\n    string public constant FAIL_CLOSE_BORROW = '25';\\n    string public constant FAIL_KILL_BORROW = '26';\\n    string public constant ZERO_ADDRESS = '22';\\n    string public constant INVALID_PARAMETERS = '28'; \\n    string public constant FAIL_LOAN_DELEGATEE_CHANGE = '32';\\n    string public constant FAIL_LOAN_TOKEN_BURN = '33';\\n    string public constant FEES_ACCRUED_INSUFFICIENT = '34';\\n\\n\\n    //Controller errors\\n    string public constant LIST_SIZES_NOT_EQUAL = '36';\\n    string public constant POOL_LIST_ALREADY_SET = '37';\\n    string public constant POOL_ALREADY_LISTED = '38';\\n    string public constant POOL_NOT_LISTED = '39';\\n    string public constant CALLER_NOT_POOL = '40';\\n    string public constant REWARDS_CASH_TOO_LOW = '41';\\n    string public constant FAIL_BECOME_IMPLEMENTATION = '42';\\n    string public constant INSUFFICIENT_DEPOSITED = '43';\\n    string public constant NOT_CLAIMABLE = '44';\\n    string public constant LOCKED = '45';\\n}\"\r\n    },\r\n    \"contracts/ControllerStorage.sol\": {\r\n      \"content\": \"//██████╗  █████╗ ██╗      █████╗ ██████╗ ██╗███╗   ██╗\\n//██╔══██╗██╔══██╗██║     ██╔══██╗██╔══██╗██║████╗  ██║\\n//██████╔╝███████║██║     ███████║██║  ██║██║██╔██╗ ██║\\n//██╔═══╝ ██╔══██║██║     ██╔══██║██║  ██║██║██║╚██╗██║\\n//██║     ██║  ██║███████╗██║  ██║██████╔╝██║██║ ╚████║\\n//╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═══╝\\n                                                     \\n\\npragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\nimport \\\"./utils/Admin.sol\\\";\\n\\n/** @title Paladin Controller contract  */\\n/// @author Paladin\\ncontract ControllerStorage is Admin {\\n\\n    /** @notice Layout for the Proxy contract */\\n    address public currentImplementation;\\n    address public pendingImplementation;\\n\\n    /** @notice List of current active palToken Pools */\\n    address[] public palTokens;\\n    address[] public palPools;\\n    mapping(address => address) public palTokenToPalPool;\\n\\n    bool internal initialized;\\n\\n    /** @notice Struct with current SupplyIndex for a Pool, and the block of the last update */\\n    struct PoolRewardsState {\\n        uint224 index;\\n        uint32 blockNumber;\\n    }\\n\\n    /** @notice Initial index for Rewards */\\n    uint224 public constant initialRewardsIndex = 1e36;\\n\\n    address public rewardTokenAddress; // PAL token address to put here\\n\\n    /** @notice State of the Rewards for each Pool */\\n    mapping(address => PoolRewardsState) public supplyRewardState;\\n\\n    /** @notice Amount of reward tokens to distribute each block */\\n    mapping(address => uint) public supplySpeeds;\\n\\n    /** @notice Last reward index for each Pool for each user */\\n    /** PalPool => User => Index */\\n    mapping(address => mapping(address => uint)) public supplierRewardIndex;\\n\\n    /** @notice Deposited amounts by user for each palToken (indexed by corresponding PalPool address) */\\n    /** PalPool => User => Amount */\\n    mapping(address => mapping(address => uint)) public supplierDeposits;\\n\\n    /** @notice Total amount of each palToken deposited (indexed by corresponding PalPool address) */\\n    /** PalPool => Total Amount */\\n    mapping(address => uint) public totalSupplierDeposits;\\n\\n    /** @notice Ratio to distribute Borrow Rewards */\\n    mapping(address => uint) public borrowRatios; // scaled 1e18\\n\\n    /** @notice Ratio for each PalLoan (set at PalLoan creation) */\\n    mapping(address => uint) public loansBorrowRatios; // scaled 1e18\\n\\n    /** @notice Amount of reward Tokens accrued by the user, and claimable */\\n    mapping(address => uint) public accruedRewards;\\n\\n    /** @notice Is Auto Borrow Rewards is activated for the PalPool  */\\n    mapping(address => bool) public autoBorrowRewards;\\n\\n    /** @notice Was PalLoan Borrow Rewards distributed & claimed */\\n    mapping(address => bool) public isLoanRewardClaimed;\\n\\n    /** @notice Block at which Borrow Rewards Ratio where set for the PalPool (if Ratio is put back to 0, this block number is set back to 0 too) */\\n    /** So PalLoan started when no Borrow Rewards where set do not receive rewards */\\n    /** PalPool => Block Number */\\n    mapping(address => uint) public borrowRewardsStartBlock;\\n\\n    /** @dev Prevent reentry in some functions */\\n    bool internal locked;\\n\\n    /*\\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n    !!!!!!!!!!!!!!!!!! ALWAYS PUT NEW STORAGE AT THE BOTTOM !!!!!!!!!!!!!!!!!!\\n    !!!!!!!!! WE DON'T WANT COLLISION WHEN SWITCHING IMPLEMENTATIONS !!!!!!!!!\\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n    */\\n\\n\\n}\"\r\n    },\r\n    \"contracts/utils/Admin.sol\": {\r\n      \"content\": \"pragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\n\\n/** @title Admin contract  */\\n/// @author Paladin\\ncontract Admin {\\n\\n    /** @notice (Admin) Event when the contract admin is updated */\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /** @dev Admin address for this contract */\\n    address payable internal admin;\\n    \\n    modifier adminOnly() {\\n        //allows only the admin of this contract to call the function\\n        require(msg.sender == admin, '1');\\n        _;\\n    }\\n\\n        /**\\n    * @notice Set a new Admin\\n    * @dev Changes the address for the admin parameter\\n    * @param _newAdmin address of the new Controller Admin\\n    */\\n    function setNewAdmin(address payable _newAdmin) external adminOnly {\\n        address _oldAdmin = admin;\\n        admin = _newAdmin;\\n\\n        emit NewAdmin(_oldAdmin, _newAdmin);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 25000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingImplementation\",\"type\":\"address\"}],\"name\":\"NewPendingImplementation\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accruedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoBorrowRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowRatios\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowRewardsStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialRewardsIndex\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"\",\"type\":\"uint224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLoanRewardClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loansBorrowRatios\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"palPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"palTokenToPalPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"palTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingImplementation\",\"type\":\"address\"}],\"name\":\"proposeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setNewAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplierDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplierRewardIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyRewardState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplySpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalSupplierDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ControllerProxy","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"25000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"1","Implementation":"0xd67900988770d98e06bdd9805eaec5831ba6fe0f","SwarmSource":""}]}