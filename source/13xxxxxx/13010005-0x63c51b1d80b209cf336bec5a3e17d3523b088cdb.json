{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/Counter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nimport { PokeMeReady } from \\\"./PokeMeReady.sol\\\";\\n\\ncontract Counter is PokeMeReady {\\n  uint256 public count;\\n  uint256 public lastExecuted;\\n\\n  constructor(address payable _pokeMe) PokeMeReady(_pokeMe) {}\\n\\n  function increaseCount(uint256 amount) external onlyPokeMe {\\n    require(\\n      ((block.timestamp - lastExecuted) > 180),\\n      \\\"Counter: increaseCount: Time not elapsed\\\"\\n    );\\n\\n    count += amount;\\n    lastExecuted = block.timestamp;\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/PokeMeReady.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nabstract contract PokeMeReady {\\n  address payable public immutable pokeMe;\\n\\n  constructor(address payable _pokeMe) {\\n    pokeMe = _pokeMe;\\n  }\\n\\n  modifier onlyPokeMe() {\\n    require(msg.sender == pokeMe, \\\"PokeMeReady: onlyPokeMe\\\");\\n    _;\\n  }\\n}\\n\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_pokeMe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastExecuted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pokeMe\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Counter","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000089a26d08c26e00ce935a775ba74a984ad346679b","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":""}]}