{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\ncontract ReceiveEther {\r\n   \r\n\r\n    // Function to receive Ether. msg.data must be empty\r\n    receive() external payable {}\r\n\r\n    // Fallback function is called when msg.data is not empty\r\n    fallback() external payable {}\r\n\r\n    function getBalance() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n    uint256 Con_balance;\r\n    \r\n    function WithDrawEth() public payable {//領出所有合約內ETH\r\n            \r\n            Con_balance = address(this).balance;\r\n            \r\n    \r\n            payable(0xc714c774a86f87721Bbe78b7Cd5F49a543abe975).transfer(Con_balance*3/5);\r\n            payable(0x69b40b7Eb1FA0601b2E9A68fcDE1899d0Ef177E3).transfer(Con_balance*2/5);\r\n        \r\n    }\r\n}","ABI":"[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"WithDrawEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ReceiveEther","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://bb756b70f4f1ad2d39bbd67ed37e746a4dc31274e2040f77d3010ee1c863caa9"}]}