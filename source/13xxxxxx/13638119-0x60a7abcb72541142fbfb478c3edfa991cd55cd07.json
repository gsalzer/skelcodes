{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.10;\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ninterface Token {\r\n    function transferFrom(address, address, uint256) external returns (bool);\r\n    function transfer(address, uint256) external returns (bool);\r\n    function balanceOf(address) external returns (uint256);\r\n    function allowance(address, address) external returns (uint256);\r\n}\r\n\r\ncontract TCAT_TO_VATOR is Ownable {\r\n    \r\n    uint256 public cliffTime = 0;\r\n    \r\n    uint256 public totalClaimedRewards = 0;\r\n    \r\n    uint256 public stakingAndDaoTokens = 100000000e18;\r\n    \r\n    // TCAT token contract address\r\n    address public tokenAddressTCAT = 0x0E84D86C3745A05D65f8051407249cd1c4970346;\r\n    \r\n    // VATOR token contract address\r\n    address public tokenAddressVATOR = 0x051Bda85FbC58AcE9D6060Ba9488aBE120ac072D;\r\n    \r\n    // Team address\r\n    address public teamAddress = 0xD938FFD144253d61Ae7f26194E84fe9929de7b4b;\r\n    \r\n    bool public isSwapEnable = false;\r\n    \r\n    function updateAccount(address account) private {\r\n        uint256 pendingDivs = getPendingDivs(account);\r\n    }\r\n    \r\n    function getPendingDivs(address _holder) public view returns (uint256) {\r\n        \r\n        uint256 pendingDivs = 0;\r\n            \r\n        return pendingDivs;\r\n    }\r\n    \r\n    function deposit(uint256 amountToStake) public {\r\n    }\r\n    \r\n    function withdraw(uint256 amountToWithdraw) public onlyOwner {\r\n        Token(tokenAddressTCAT).transfer(msg.sender, amountToWithdraw);\r\n    }\r\n    \r\n    function claimDivs() public {\r\n        require(isSwapEnable, \"Swap not enabled !!!\");\r\n        uint256 amount = Token(tokenAddressTCAT).balanceOf(msg.sender);\r\n        require(Token(tokenAddressTCAT).allowance(msg.sender, address(this)) >= amount);\r\n        require(Token(tokenAddressTCAT).transferFrom(msg.sender, teamAddress, amount), \"Could not transfer token.\");\r\n        require(Token(tokenAddressVATOR).transferFrom(teamAddress, msg.sender, amount), \"Could not transfer tokens.\");\r\n    }\r\n    \r\n    function getStakingAndDaoAmount() public view returns (uint256) {\r\n        uint256 remaining = stakingAndDaoTokens;\r\n        return remaining;\r\n    }\r\n    \r\n    function setTokenAddressTCAT(address _tokenAddress) public onlyOwner {\r\n        tokenAddressTCAT = _tokenAddress;\r\n    }\r\n    \r\n    function setTokenAddressVATOR(address _tokenAddress) public onlyOwner {\r\n        tokenAddressVATOR = _tokenAddress;\r\n    }\r\n    \r\n    function setTeamAddress(address _teamAddress) public onlyOwner {\r\n        teamAddress = _teamAddress;\r\n    }\r\n    \r\n    function startSwap() public onlyOwner {\r\n        isSwapEnable = true;\r\n    }\r\n    \r\n    function stopSwap() public onlyOwner {\r\n        isSwapEnable = false;\r\n    }\r\n    \r\n    // function to allow admin to claim *any* ERC20 tokens sent to this contract\r\n    function transferAnyERC20Tokens(address _tokenAddress, address _to, uint256 _amount) public onlyOwner {\r\n            \r\n            Token(_tokenAddress).transfer(_to, _amount);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimDivs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToStake\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"getPendingDivs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingAndDaoAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSwapEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamAddress\",\"type\":\"address\"}],\"name\":\"setTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddressTCAT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddressVATOR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingAndDaoTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddressTCAT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddressVATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Tokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TCAT_TO_VATOR","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://26c0a3ab3ce5308b1f6289dd5545555e0a1a69d965a53094dc8062dc2b742813"}]}