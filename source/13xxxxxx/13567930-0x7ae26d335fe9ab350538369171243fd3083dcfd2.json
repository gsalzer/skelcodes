{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/tokens/multichain/stnd_multichain_proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Apache-2.0\\n\\n/**\\n *Submitted for verification at polygonscan.com on 2021-08-12\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n\\n// File: contracts/lib/Proxy/IERCProxy.sol\\n\\npragma solidity 0.6.12;\\n\\ninterface IERCProxy {\\n    function proxyType() external pure returns (uint256 proxyTypeId);\\n\\n    function implementation() external view returns (address codeAddr);\\n}\\n\\n// File: contracts/lib/Proxy/Proxy.sol\\n\\npragma solidity 0.6.12;\\n\\nabstract contract Proxy is IERCProxy {\\n    function delegatedFwd(address _dst, bytes memory _calldata) internal {\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let result := delegatecall(\\n                sub(gas(), 10000),\\n                _dst,\\n                add(_calldata, 0x20),\\n                mload(_calldata),\\n                0,\\n                0\\n            )\\n            let size := returndatasize()\\n\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, size)\\n\\n            // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\\n            // if the call returned error data, forward it\\n            switch result\\n                case 0 {\\n                    revert(ptr, size)\\n                }\\n                default {\\n                    return(ptr, size)\\n                }\\n        }\\n    }\\n\\n    function proxyType()\\n        external\\n        virtual\\n        override\\n        pure\\n        returns (uint256 proxyTypeId)\\n    {\\n        // Upgradeable proxy\\n        proxyTypeId = 2;\\n    }\\n\\n    function implementation() external virtual override view returns (address);\\n}\\n\\n// File: contracts/lib/Proxy/UpgradableProxy.sol\\n\\npragma solidity 0.6.12;\\n\\ncontract UpgradableProxy is Proxy {\\n    event ProxyUpdated(address indexed _new, address indexed _old);\\n    event ProxyOwnerUpdate(address _new, address _old);\\n\\n    bytes32 public constant IMPLEMENTATION_SLOT = keccak256(\\n        \\\"multichain.network.proxy.implementation\\\"\\n    );\\n    bytes32 public constant OWNER_SLOT = keccak256(\\\"multichain.network.proxy.owner\\\");\\n\\n    constructor(address _proxyTo) public {\\n        setProxyOwner(msg.sender);\\n        setImplementation(_proxyTo);\\n    }\\n\\n    fallback() external payable {\\n        delegatedFwd(loadImplementation(), msg.data);\\n    }\\n\\n    receive() external payable {\\n        delegatedFwd(loadImplementation(), msg.data);\\n    }\\n\\n    modifier onlyProxyOwner() {\\n        require(loadProxyOwner() == msg.sender, \\\"NOT_OWNER\\\");\\n        _;\\n    }\\n\\n    function proxyOwner() external view returns (address) {\\n        return loadProxyOwner();\\n    }\\n\\n    function loadProxyOwner() internal view returns (address) {\\n        address _owner;\\n        bytes32 position = OWNER_SLOT;\\n        assembly {\\n            _owner := sload(position)\\n        }\\n        return _owner;\\n    }\\n\\n    function implementation() external override view returns (address) {\\n        return loadImplementation();\\n    }\\n\\n    function loadImplementation() internal view returns (address) {\\n        address _impl;\\n        bytes32 position = IMPLEMENTATION_SLOT;\\n        assembly {\\n            _impl := sload(position)\\n        }\\n        return _impl;\\n    }\\n\\n    function transferProxyOwnership(address newOwner) public onlyProxyOwner {\\n        require(newOwner != address(0), \\\"ZERO_ADDRESS\\\");\\n        emit ProxyOwnerUpdate(newOwner, loadProxyOwner());\\n        setProxyOwner(newOwner);\\n    }\\n\\n    function setProxyOwner(address newOwner) private {\\n        bytes32 position = OWNER_SLOT;\\n        assembly {\\n            sstore(position, newOwner)\\n        }\\n    }\\n\\n    function updateImplementation(address _newProxyTo) public onlyProxyOwner {\\n        require(_newProxyTo != address(0x0), \\\"INVALID_PROXY_ADDRESS\\\");\\n        require(\\n            isContract(_newProxyTo),\\n            \\\"DESTINATION_ADDRESS_IS_NOT_A_CONTRACT\\\"\\n        );\\n\\n        emit ProxyUpdated(_newProxyTo, loadImplementation());\\n\\n        setImplementation(_newProxyTo);\\n    }\\n\\n    function updateAndCall(address _newProxyTo, bytes memory data)\\n        public\\n        payable\\n        onlyProxyOwner\\n    {\\n        updateImplementation(_newProxyTo);\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returnData) = address(this).call{\\n            value: msg.value\\n        }(data);\\n        require(success, string(returnData));\\n    }\\n\\n    function setImplementation(address _newProxyTo) private {\\n        bytes32 position = IMPLEMENTATION_SLOT;\\n        assembly {\\n            sstore(position, _newProxyTo)\\n        }\\n    }\\n\\n    function isContract(address _target) internal view returns (bool) {\\n        if (_target == address(0)) {\\n            return false;\\n        }\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(_target)\\n        }\\n        return size > 0;\\n    }\\n}\\n\\n// File: contracts/UChildERC20Proxy.sol\\n\\npragma solidity 0.6.12;\\n\\ncontract UChildERC20Proxy is UpgradableProxy {\\n    constructor(address _proxyTo) public UpgradableProxy(_proxyTo) {}\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 65866\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"}],\"name\":\"ProxyOwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"}],\"name\":\"ProxyUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proxyTypeId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProxyTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"updateAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProxyTo\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"UChildERC20Proxy","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"65866","ConstructorArguments":"0000000000000000000000006ff5a740b0a3313db778c99604036fcde7b8b741","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}