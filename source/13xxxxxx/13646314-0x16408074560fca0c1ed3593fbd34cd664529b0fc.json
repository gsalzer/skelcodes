{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/CorruptionsWiltedRoseDeviationWriter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity^0.8.0;\\n\\ninterface ICorruptionsDataMapper {\\n    function setValue(uint256 mapIndex, uint256 key, uint256 value) external;\\n}\\n\\ninterface ICorruptions {\\n    function ownerOf(uint256 tokenID) external returns (address);\\n    function insight(uint256 tokenID) external view returns (uint256);\\n}\\n\\ncontract CorruptionsWiltedRoseDeviationWriter {\\n    address public owner;\\n    uint256 public count;\\n    bool public enabled;\\n    \\n    constructor() {\\n        owner = msg.sender;\\n        enabled = false;\\n    }\\n    \\n    function setEnabled(bool isEnabled) public {\\n        require(msg.sender == owner, \\\"Writer: not owner\\\");\\n        enabled = isEnabled;\\n    }\\n    \\n    function DEVIATE___CORRUPTION_WILL_BE_LOCKED_PERMANENTLY_AND_NO_LONGER_GAIN_INSIGHT(uint256 tokenId, string memory ack) public {\\n        // Deviated corruptions render differently but are *permanently* destabilized and will no longer gain insight\\n        //\\n        // This is OPTIONAL\\n        // This is PERMANENT\\n        // This is IRREVERSIBLE\\n        // This is NOT A PUZZLE PIECE OR KEY\\n        //\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        // THERE IS NOTHING THAT COMES AFTER A CORRUPTION DEVIATES\\n        \\n        require(enabled || msg.sender == owner, \\\"Writer: not enabled\\\");\\n        // I_HAVE_READ_THE_DISCLAIMER_AND_ACKNOWLEDGE\\n        require(keccak256(bytes(ack)) == bytes32(hex\\\"98f083d894dad4ec49f86c8deae933e9e51a46d20f726170c3460fa6c80077f4\\\"), \\\"Writer: not acknowledged\\\");\\n        require(ICorruptions(0x5BDf397bB2912859Dbd8011F320a222f79A28d2E).ownerOf(tokenId) == msg.sender, \\\"Writer: corruption not owned\\\");\\n        require(ICorruptions(0x5BDf397bB2912859Dbd8011F320a222f79A28d2E).insight(tokenId) >= 4, \\\"Writer: insight too low\\\");\\n        require(count < 64, \\\"Writer: no remaining inscriptions\\\");\\n        count++;\\n        ICorruptionsDataMapper(0x7A96d95a787524a27a4df36b64a96910a2fDCF5B).setValue(0, tokenId, 1);\\n    }\\n\\n    function drawCanvas(uint256 tokenId, uint256 amount) public pure returns (string[32] memory) {\\n        tokenId; // unused\\n        amount; // unused\\n        string[32] memory canvas;\\n\\n        canvas[0] =  \\\"...............................\\\";\\n        canvas[1] =  \\\"...............................\\\";\\n        canvas[2] =  \\\"...............................\\\";\\n        canvas[3] =  \\\"...............................\\\";\\n        canvas[4] =  \\\"...............................\\\";\\n        canvas[5] =  \\\"...............................\\\";\\n        canvas[6] =  \\\"........#######................\\\";\\n        canvas[7] =  \\\"......##########...............\\\";\\n        canvas[8] =  \\\".....#####...#########.........\\\";\\n        canvas[9] =  \\\"....####.......#####8888.......\\\";\\n        canvas[10] = \\\"....####......###888888888.....\\\";\\n        canvas[11] = \\\"....####......8888888888888....\\\";\\n        canvas[12] = \\\"....####......88888888888888...\\\";\\n        canvas[13] = \\\".....######...88888888888888...\\\";\\n        canvas[14] = \\\"....#######...88888888888888...\\\";\\n        canvas[15] = \\\"..###########..888888888888....\\\";\\n        canvas[16] = \\\"..############..88888888888....\\\";\\n        canvas[17] = \\\"..############...888888888.....\\\";\\n        canvas[18] = \\\"....###########..88888.........\\\";\\n        canvas[19] = \\\"....###########..88............\\\";\\n        canvas[20] = \\\".......#####...................\\\";\\n        canvas[21] = \\\"........#####..................\\\";\\n        canvas[22] = \\\".........####..................\\\";\\n        canvas[23] = \\\".........####..................\\\";\\n        canvas[24] = \\\"..........##...................\\\";\\n        canvas[25] = \\\"...............................\\\";\\n        canvas[26] = \\\"...............................\\\";\\n        canvas[27] = \\\"...............................\\\";\\n        canvas[28] = \\\"...............................\\\";\\n        canvas[29] = \\\"...............................\\\";\\n        canvas[30] = \\\"...............................\\\";\\n\\n        return canvas;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ack\",\"type\":\"string\"}],\"name\":\"DEVIATE___CORRUPTION_WILL_BE_LOCKED_PERMANENTLY_AND_NO_LONGER_GAIN_INSIGHT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"drawCanvas\",\"outputs\":[{\"internalType\":\"string[32]\",\"name\":\"\",\"type\":\"string[32]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CorruptionsWiltedRoseDeviationWriter","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}