{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/libraries/BridgeBeams.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/// BridgeBeams.sol\\n/// @title BEAMS token helper functions\\n/// @author artbridge.eth\\n/// @dev Library assists requirement checks across contracts\\nlibrary BridgeBeams {\\n  struct Project {\\n    uint256 id;\\n    string name;\\n    string artist;\\n    string description;\\n    string website;\\n    uint256 supply;\\n    uint256 maxSupply;\\n    uint256 startBlock;\\n  }\\n\\n  struct ProjectState {\\n    bool initialized;\\n    bool mintable;\\n    bool released;\\n    uint256 remaining;\\n  }\\n\\n  struct ReserveParameters {\\n    uint256 maxMintPerInvocation;\\n    uint256 reservedMints;\\n    bytes32 reserveRoot;\\n  }\\n\\n  /// @param _project Target project struct\\n  /// @return Project state struct derived from given input\\n  function projectState(Project memory _project)\\n    external\\n    view\\n    returns (BridgeBeams.ProjectState memory)\\n  {\\n    return\\n      ProjectState({\\n        initialized: isInitialized(_project),\\n        mintable: isMintable(_project),\\n        released: isReleased(_project),\\n        remaining: _project.maxSupply - _project.supply\\n      });\\n  }\\n\\n  /// @param _project Target project struct\\n  /// @return True if project has required initial parameters, false if not\\n  function isInitialized(Project memory _project) internal pure returns (bool) {\\n    if (\\n      bytes(_project.artist).length == 0 ||\\n      bytes(_project.description).length == 0\\n    ) {\\n      return false;\\n    }\\n    return true;\\n  }\\n\\n  /// @param _project Target project struct\\n  /// @return True if project is past mint start block, false if not\\n  function isReleased(Project memory _project) internal view returns (bool) {\\n    return _project.startBlock > 0 && _project.startBlock <= block.number;\\n  }\\n\\n  /// @param _project Target project struct\\n  /// @return True if project is available for public mint, false if not\\n  function isMintable(Project memory _project) internal view returns (bool) {\\n    if (!isInitialized(_project)) {\\n      return false;\\n    }\\n    return isReleased(_project) && _project.supply < _project.maxSupply;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"artist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct BridgeBeams.Project\",\"name\":\"_project\",\"type\":\"tuple\"}],\"name\":\"projectState\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"internalType\":\"struct BridgeBeams.ProjectState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BridgeBeams","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}