{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\ninterface I{\r\n    function getRewards(address a,uint rewToClaim) external returns(bool);\r\n    function balanceOf(address) external view returns(uint);\r\n    function genesisBlock() external view returns(uint);\r\n}\r\n//first implementation, most is off-chain\r\ncontract PosterRewards {\r\n\tbool private fubuki;\r\n\taddress private oracle;\r\n\taddress private deployer;\r\n\tstruct Poster {uint128 amount; uint128 lastClaim;}\r\n\tmapping (address => Poster) public posters;\r\n\r\n\tfunction init() public {\r\n\t\trequire(fubuki==false);\r\n\t\tfubuki=true; //no reason\r\n\t\tdeployer = 0x5C8403A2617aca5C86946E32E14148776E37f72A;\r\n\t\toracle = 0x5C8403A2617aca5C86946E32E14148776E37f72A;//to change, after giving the oracle different address\r\n\t}\r\n\r\n\tfunction updatePosters(address[] memory r, uint[] memory amounts) external{//add recipients\r\n\t\trequire(msg.sender == oracle);\r\n\t\tfor(uint i = 0;i<r.length;i++) {posters[r[i]].amount += uint128(amounts[i]);}\r\n\t}\r\n\r\n\tfunction getRewards(uint amount)external{\r\n\t\tuint genesisBlock = I(0x31A188024FcD6E462aBF157F879Fb7da37D6AB2f).genesisBlock();\r\n\t\tif(amount>1000e18){amount=1000e18;}\r\n\t\trequire(posters[msg.sender].amount>=amount&&posters[msg.sender].lastClaim+1e5<block.number&&genesisBlock != 0);\r\n\t\tuint withd = 9e24 - I(0xEd7C1848FA90E6CDA4faAC7F61752857461af284).balanceOf(0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3);// balanceOf(treasury)\r\n\t\tuint allowed = (block.number - genesisBlock)*84e15 - withd;//only 20% of all emission max. with this additional limit, overflow in treasury is not an issue even before the upgrade\r\n\t\tif (allowed>=amount){\r\n\t\t\tposters[msg.sender].amount-=uint128(amount);\r\n\t\t\tposters[msg.sender].lastClaim=uint128(block.number);\r\n\t\t\tbool success = I(0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3).getRewards(msg.sender, amount); require(success == true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setOracle(address a) public {require(msg.sender==deployer); oracle = a;}\r\n\r\n\tfunction getOracleGas(uint amount) public {\r\n\t\tuint genesisBlock = I(0x31A188024FcD6E462aBF157F879Fb7da37D6AB2f).genesisBlock();\r\n\t\trequire(msg.sender==oracle&&genesisBlock != 0);\r\n\t\tuint withd = 9e24 - I(0xEd7C1848FA90E6CDA4faAC7F61752857461af284).balanceOf(0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3);// balanceOf(treasury)\r\n\t\tuint allowed = (block.number - genesisBlock)*14e15 - withd;//max ~3.33% of all emission, in case of dumb gas prices and low let price\r\n\t\tif (allowed>=amount){\r\n\t\t\tbool success = I(0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3).getRewards(msg.sender, amount); require(success == true);\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getOracleGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"posters\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastClaim\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"r\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"updatePosters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PosterRewards","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8b7e89beeeee9971aa22cd38e492789d7bf40a128c6353a7b71da7561740aac8"}]}