{"status":"1","message":"OK","result":[{"SourceCode":"{\"PerlinNoise.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/**\\n * @notice An implementation of Perlin Noise that uses 16 bit fixed point arithmetic.\\n */\\nlibrary PerlinNoise {\\n\\n\\t/**\\n\\t * @notice Computes the noise value for a 2D point.\\n\\t *\\n\\t * @param x the x coordinate.\\n\\t * @param y the y coordinate.\\n\\t *\\n\\t * @dev This function should be kept public. Inlining the bytecode for this function\\n\\t *      into other functions could explode its compiled size because of how `ftable`\\n\\t *      and `ptable` were written.\\n\\t */\\n\\tfunction noise2d(int256 x, int256 y) public pure returns (int256) {\\n\\t\\tint256 temp = ptable(x \\u003e\\u003e 16 \\u0026 0xff /* Unit square X */);\\n\\n\\t\\tint256 a = ptable((temp \\u003e\\u003e 8  ) + (y \\u003e\\u003e 16 \\u0026 0xff /* Unit square Y */));\\n\\t\\tint256 b = ptable((temp \\u0026 0xff) + (y \\u003e\\u003e 16 \\u0026 0xff                    ));\\n\\n\\t\\tx \\u0026= 0xffff; // Square relative X\\n\\t\\ty \\u0026= 0xffff; // Square relative Y\\n\\n\\t\\tint256 u = fade(x);\\n\\n\\t\\tint256 c = lerp(u, grad2(a \\u003e\\u003e 8  , x, y        ), grad2(b \\u003e\\u003e 8  , x-0x10000, y        ));\\n\\t\\tint256 d = lerp(u, grad2(a \\u0026 0xff, x, y-0x10000), grad2(b \\u0026 0xff, x-0x10000, y-0x10000));\\n\\n\\t\\treturn lerp(fade(y), c, d);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Computes the noise value for a 3D point.\\n\\t *\\n\\t * @param x the x coordinate.\\n\\t * @param y the y coordinate.\\n\\t * @param z the z coordinate.\\n\\t *\\n\\t * @dev This function should be kept public. Inlining the bytecode for this function\\n\\t *      into other functions could explode its compiled size because of how `ftable`\\n\\t *      and `ptable` were written.\\n\\t */\\n\\tfunction noise3d(int256 x, int256 y, int256 z) public pure returns (int256) {\\n\\t\\tint256[7] memory scratch = [\\n\\t\\t\\tx \\u003e\\u003e 16 \\u0026 0xff,  // Unit cube X\\n\\t\\t\\ty \\u003e\\u003e 16 \\u0026 0xff,  // Unit cube Y\\n\\t\\t\\tz \\u003e\\u003e 16 \\u0026 0xff,  // Unit cube Z\\n\\t\\t\\t0, 0, 0, 0\\n\\t\\t];\\n\\n\\t\\tx \\u0026= 0xffff; // Cube relative X\\n\\t\\ty \\u0026= 0xffff; // Cube relative Y\\n\\t\\tz \\u0026= 0xffff; // Cube relative Z\\n\\n\\t\\t// Temporary variables used for intermediate calculations.\\n\\t\\tint256 u;\\n\\t\\tint256 v;\\n\\n\\t\\tv = ptable(scratch[0]);\\n\\n\\t\\tu = ptable((v \\u003e\\u003e 8  ) + scratch[1]);\\n\\t\\tv = ptable((v \\u0026 0xff) + scratch[1]);\\n\\n\\t\\tscratch[3] = ptable((u \\u003e\\u003e 8  ) + scratch[2]);\\n\\t\\tscratch[4] = ptable((u \\u0026 0xff) + scratch[2]);\\n\\t\\tscratch[5] = ptable((v \\u003e\\u003e 8  ) + scratch[2]);\\n\\t\\tscratch[6] = ptable((v \\u0026 0xff) + scratch[2]);\\n\\n\\t\\tint256 a;\\n\\t\\tint256 b;\\n\\t\\tint256 c;\\n\\n\\t\\tu = fade(x);\\n\\t\\tv = fade(y);\\n\\n\\t\\ta = lerp(u, grad3(scratch[3] \\u003e\\u003e 8, x, y        , z), grad3(scratch[5] \\u003e\\u003e 8, x-0x10000, y        , z));\\n\\t\\tb = lerp(u, grad3(scratch[4] \\u003e\\u003e 8, x, y-0x10000, z), grad3(scratch[6] \\u003e\\u003e 8, x-0x10000, y-0x10000, z));\\n\\t\\tc = lerp(v, a, b);\\n\\n\\t\\ta = lerp(u, grad3(scratch[3] \\u0026 0xff, x, y        , z-0x10000), grad3(scratch[5] \\u0026 0xff, x-0x10000, y        , z-0x10000));\\n\\t\\tb = lerp(u, grad3(scratch[4] \\u0026 0xff, x, y-0x10000, z-0x10000), grad3(scratch[6] \\u0026 0xff, x-0x10000, y-0x10000, z-0x10000));\\n\\n\\t\\treturn lerp(fade(z), c, lerp(v, a, b));\\n\\t}\\n\\n\\t/**\\n\\t * @notice Computes the linear interpolation between two values, `a` and `b`, using fixed point arithmetic.\\n\\t *\\n\\t * @param t the time value of the equation.\\n\\t * @param a the lower point.\\n\\t * @param b the upper point.\\n\\t */\\n\\tfunction lerp(int256 t, int256 a, int256 b) internal pure returns (int256) {\\n\\t\\treturn a + (t * (b - a) \\u003e\\u003e 12);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Applies the fade function to a value.\\n\\t *\\n\\t * @param t the time value of the equation.\\n\\t *\\n\\t * @dev The polynomial for this function is: 6t^4-15t^4+10t^3.\\n\\t */\\n\\tfunction fade(int256 t) internal pure returns (int256) {\\n\\t\\tint256 n = ftable(t \\u003e\\u003e 8);\\n\\n\\t\\t// Lerp between the two points grabbed from the fade table.\\n\\t\\t(int256 lower, int256 upper) = (n \\u003e\\u003e 12, n \\u0026 0xfff);\\n\\t\\treturn lower + ((t \\u0026 0xff) * (upper - lower) \\u003e\\u003e 8);\\n\\t}\\n\\n\\t/**\\n\\t  * @notice Computes the gradient value for a 2D point.\\n\\t  *\\n\\t  * @param h the hash value to use for picking the vector.\\n\\t  * @param x the x coordinate of the point.\\n\\t  * @param y the y coordinate of the point.\\n\\t  */\\n\\tfunction grad2(int256 h, int256 x, int256 y) internal pure returns (int256) {\\n\\t\\th \\u0026= 3;\\n\\n\\t\\tint256 u;\\n\\t\\tif (h \\u0026 0x1 == 0) {\\n\\t\\t\\tu = x;\\n\\t\\t} else {\\n\\t\\t\\tu = -x;\\n\\t\\t}\\n\\n\\t\\tint256 v;\\n\\t\\tif (h \\u003c 2) {\\n\\t\\t\\tv = y;\\n\\t\\t} else {\\n\\t\\t\\tv = -y;\\n\\t\\t}\\n\\n\\t\\treturn u + v;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Computes the gradient value for a 3D point.\\n\\t *\\n\\t * @param h the hash value to use for picking the vector.\\n\\t * @param x the x coordinate of the point.\\n\\t * @param y the y coordinate of the point.\\n\\t * @param z the z coordinate of the point.\\n\\t */\\n\\tfunction grad3(int256 h, int256 x, int256 y, int256 z) internal pure returns (int256) {\\n\\t\\th \\u0026= 0xf;\\n\\n\\t\\tint256 u;\\n\\t\\tif (h \\u003c 8) {\\n\\t\\t\\tu = x;\\n\\t\\t} else {\\n\\t\\t\\tu = y;\\n\\t\\t}\\n\\n\\t\\tint256 v;\\n\\t\\tif (h \\u003c 4) {\\n\\t\\t\\tv = y;\\n\\t\\t} else if (h == 12 || h == 14) {\\n\\t\\t\\tv = x;\\n\\t\\t} else {\\n\\t\\t\\tv = z;\\n\\t\\t}\\n\\n\\t\\tif ((h \\u0026 0x1) != 0) {\\n\\t\\t\\tu = -u;\\n\\t\\t}\\n\\n\\t\\tif ((h \\u0026 0x2) != 0) {\\n\\t\\t\\tv = -v;\\n\\t\\t}\\n\\n\\t\\treturn u + v;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Gets a subsequent values in the permutation table at an index. The values are encoded\\n\\t *         into a single 24 bit integer with the  value at the specified index being the most\\n\\t *         significant 12 bits and the subsequent value being the least significant 12 bits.\\n\\t *\\n\\t * @param i the index in the permutation table.\\n\\t *\\n\\t * @dev The values from the table are mapped out into a binary tree for faster lookups.\\n\\t *      Looking up any value in the table in this implementation is is O(8), in\\n\\t *      the implementation of sequential if statements it is O(255).\\n\\t *\\n\\t * @dev The body of this function is autogenerated. Check out the \\u0027gen-ptable\\u0027 script.\\n\\t */\\n\\tfunction ptable(int256 i) internal pure returns (int256) {\\n\\t\\ti \\u0026= 0xff;\\n\\n\\t\\tif (i \\u003c= 127) {\\n\\t\\t\\tif (i \\u003c= 63) {\\n\\t\\t\\t\\tif (i \\u003c= 31) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 15) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 7) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 3) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 0) { return 38816; } else { return 41097; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 2) { return 35163; } else { return 23386; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 5) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 4) { return 23055; } else { return 3971; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 6) { return 33549; } else { return 3529; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 11) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 9) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 8) { return 51551; } else { return 24416; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 10) { return 24629; } else { return 13762; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 13) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 12) { return 49897; } else { return 59655; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 14) { return 2017; } else { return 57740; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 23) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 19) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 17) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 16) { return 35876; } else { return 9319; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 18) { return 26398; } else { return 7749; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 21) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 20) { return 17806; } else { return 36360; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 22) { return 2147; } else { return 25381; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 27) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 25) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 24) { return 9712; } else { return 61461; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 26) { return 5386; } else { return 2583; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 29) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 28) { return 6078; } else { return 48646; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 30) { return 1684; } else { return 38135; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 47) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 39) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 35) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 33) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 32) { return 63352; } else { return 30954; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 34) { return 59979; } else { return 19200; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 37) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 36) { return 26; } else { return 6853; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 38) { return 50494; } else { return 15966; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 43) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 41) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 40) { return 24316; } else { return 64731; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 42) { return 56267; } else { return 52085; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 45) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 44) { return 29987; } else { return 8971; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 46) { return 2848; } else { return 8249; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 55) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 51) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 49) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 48) { return 14769; } else { return 45345; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 50) { return 8536; } else { return 22765; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 53) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 52) { return 60821; } else { return 38200; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 54) { return 14423; } else { return 22446; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 59) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 57) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 56) { return 44564; } else { return 5245; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 58) { return 32136; } else { return 34987; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 61) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 60) { return 43944; } else { return 43076; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 62) { return 17583; } else { return 44874; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (i \\u003c= 95) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 79) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 71) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 67) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 65) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 64) { return 19109; } else { return 42311; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 66) { return 18310; } else { return 34443; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 69) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 68) { return 35632; } else { return 12315; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 70) { return 7078; } else { return 42573; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 75) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 73) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 72) { return 19858; } else { return 37534; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 74) { return 40679; } else { return 59219; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 77) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 76) { return 21359; } else { return 28645; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 78) { return 58746; } else { return 31292; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 87) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 83) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 81) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 80) { return 15571; } else { return 54149; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 82) { return 34278; } else { return 59100; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 85) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 84) { return 56425; } else { return 26972; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 86) { return 23593; } else { return 10551; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 91) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 89) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 88) { return 14126; } else { return 12021; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 90) { return 62760; } else { return 10484; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 93) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 92) { return 62566; } else { return 26255; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 94) { return 36662; } else { return 13889; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 111) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 103) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 99) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 97) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 96) { return 16665; } else { return 6463; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 98) { return 16289; } else { return 41217; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 101) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 100) { return 472; } else { return 55376; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 102) { return 20553; } else { return 18897; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 107) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 105) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 104) { return 53580; } else { return 19588; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 106) { return 33979; } else { return 48080; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 109) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 108) { return 53337; } else { return 22802; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 110) { return 4777; } else { return 43464; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 119) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 115) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 113) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 112) { return 51396; } else { return 50311; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 114) { return 34690; } else { return 33396; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 117) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 116) { return 29884; } else { return 48287; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 118) { return 40790; } else { return 22180; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 123) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 121) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 120) { return 42084; } else { return 25709; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 122) { return 28102; } else { return 50861; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 125) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 124) { return 44474; } else { return 47619; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 126) { return 832; } else { return 16436; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif (i \\u003c= 191) {\\n\\t\\t\\t\\tif (i \\u003c= 159) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 143) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 135) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 131) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 129) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 128) { return 13529; } else { return 55778; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 130) { return 58106; } else { return 64124; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 133) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 132) { return 31867; } else { return 31493; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 134) { return 1482; } else { return 51750; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 139) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 137) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 136) { return 9875; } else { return 37750; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 138) { return 30334; } else { return 32511; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 141) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 140) { return 65362; } else { return 21077; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 142) { return 21972; } else { return 54479; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 151) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 147) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 145) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 144) { return 53198; } else { return 52795; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 146) { return 15331; } else { return 58159; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 149) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 148) { return 12048; } else { return 4154; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 150) { return 14865; } else { return 4534; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 155) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 153) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 152) { return 46781; } else { return 48412; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 154) { return 7210; } else { return 10975; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 157) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 156) { return 57271; } else { return 47018; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 158) { return 43733; } else { return 54647; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 175) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 167) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 163) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 161) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 160) { return 30712; } else { return 63640; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 162) { return 38914; } else { return 556; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 165) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 164) { return 11418; } else { return 39587; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 166) { return 41798; } else { return 18141; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 171) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 169) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 168) { return 56729; } else { return 39269; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 170) { return 26011; } else { return 39847; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 173) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 172) { return 42795; } else { return 11180; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 174) { return 44041; } else { return 2433; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 183) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 179) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 177) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 176) { return 33046; } else { return 5671; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 178) { return 10237; } else { return 64787; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 181) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 180) { return 4962; } else { return 25196; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 182) { return 27758; } else { return 28239; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 187) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 185) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 184) { return 20337; } else { return 29152; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 186) { return 57576; } else { return 59570; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 189) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 188) { return 45753; } else { return 47472; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 190) { return 28776; } else { return 26842; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (i \\u003c= 223) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 207) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 199) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 195) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 193) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 192) { return 56054; } else { return 63073; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 194) { return 25060; } else { return 58619; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 197) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 196) { return 64290; } else { return 8946; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 198) { return 62145; } else { return 49646; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 203) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 201) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 200) { return 61138; } else { return 53904; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 202) { return 36876; } else { return 3263; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 205) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 204) { return 49075; } else { return 45986; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 206) { return 41713; } else { return 61777; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 215) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 211) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 209) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 208) { return 20787; } else { return 13201; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 210) { return 37355; } else { return 60409; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 213) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 212) { return 63758; } else { return 3823; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 214) { return 61291; } else { return 27441; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 219) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 217) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 216) { return 12736; } else { return 49366; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 218) { return 54815; } else { return 8117; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 221) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 220) { return 46535; } else { return 51050; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 222) { return 27293; } else { return 40376; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 239) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 231) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 227) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 225) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 224) { return 47188; } else { return 21708; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 226) { return 52400; } else { return 45171; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 229) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 228) { return 29561; } else { return 31026; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 230) { return 12845; } else { return 11647; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 235) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 233) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 232) { return 32516; } else { return 1174; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 234) { return 38654; } else { return 65162; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 237) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 236) { return 35564; } else { return 60621; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 238) { return 52573; } else { return 24030; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 247) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 243) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 241) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 240) { return 56946; } else { return 29251; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 242) { return 17181; } else { return 7448; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 245) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 244) { return 6216; } else { return 18675; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 246) { return 62349; } else { return 36224; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 251) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 249) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 248) { return 32963; } else { return 49998; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 250) { return 20034; } else { return 17111; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 253) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 252) { return 55101; } else { return 15772; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 254) { return 40116; } else { return 46231; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\n\\t/**\\n\\t * @notice Gets subsequent values in the fade table at an index. The values are encoded\\n\\t *         into a single 16 bit integer with the value at the specified index being the most\\n\\t *         significant 8 bits and the subsequent value being the least significant 8 bits.\\n\\t *\\n\\t * @param i the index in the fade table.\\n\\t *\\n\\t * @dev The values from the table are mapped out into a binary tree for faster lookups.\\n\\t *      Looking up any value in the table in this implementation is is O(8), in\\n\\t *      the implementation of sequential if statements it is O(256).\\n\\t *\\n\\t * @dev The body of this function is autogenerated. Check out the \\u0027gen-ftable\\u0027 script.\\n\\t */\\n\\tfunction ftable(int256 i) internal pure returns (int256) {\\n\\t\\tif (i \\u003c= 127) {\\n\\t\\t\\tif (i \\u003c= 63) {\\n\\t\\t\\t\\tif (i \\u003c= 31) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 15) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 7) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 3) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 0) { return 0; } else { return 0; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 2) { return 0; } else { return 0; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 5) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 4) { return 0; } else { return 0; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 6) { return 0; } else { return 1; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 11) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 9) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 8) { return 4097; } else { return 4098; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 10) { return 8195; } else { return 12291; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 13) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 12) { return 12292; } else { return 16390; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 14) { return 24583; } else { return 28681; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 23) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 19) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 17) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 16) { return 36874; } else { return 40972; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 18) { return 49166; } else { return 57361; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 21) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 20) { return 69651; } else { return 77846; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 22) { return 90137; } else { return 102429; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 27) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 25) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 24) { return 118816; } else { return 131108; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 26) { return 147496; } else { return 163885; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 29) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 28) { return 184369; } else { return 200758; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 30) { return 221244; } else { return 245825; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 47) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 39) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 35) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 33) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 32) { return 266311; } else { return 290893; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 34) { return 315476; } else { return 344155; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 37) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 36) { return 372834; } else { return 401513; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 38) { return 430193; } else { return 462969; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 43) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 41) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 40) { return 495746; } else { return 532619; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 42) { return 569492; } else { return 606366; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 45) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 44) { return 647335; } else { return 684210; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 46) { return 729276; } else { return 770247; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 55) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 51) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 49) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 48) { return 815315; } else { return 864478; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 50) { return 909546; } else { return 958711; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 53) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 52) { return 1011971; } else { return 1061137; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 54) { return 1118494; } else { return 1171756; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 59) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 57) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 56) { return 1229114; } else { return 1286473; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 58) { return 1347928; } else { return 1409383; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 61) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 60) { return 1470838; } else { return 1532294; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 62) { return 1597847; } else { return 1667496; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (i \\u003c= 95) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 79) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 71) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 67) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 65) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 64) { return 1737145; } else { return 1806794; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 66) { return 1876444; } else { return 1950190; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 69) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 68) { return 2023936; } else { return 2097683; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 70) { return 2175526; } else { return 2253370; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 75) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 73) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 72) { return 2335309; } else { return 2413153; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 74) { return 2495094; } else { return 2581131; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 77) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 76) { return 2667168; } else { return 2753205; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 78) { return 2839243; } else { return 2929377; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 87) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 83) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 81) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 80) { return 3019511; } else { return 3109646; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 82) { return 3203877; } else { return 3298108; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 85) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 84) { return 3392339; } else { return 3486571; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 86) { return 3584899; } else { return 3683227; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 91) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 89) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 88) { return 3781556; } else { return 3883981; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 90) { return 3986406; } else { return 4088831; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 93) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 92) { return 4191257; } else { return 4297778; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 94) { return 4400204; } else { return 4506727; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 111) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 103) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 99) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 97) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 96) { return 4617345; } else { return 4723868; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 98) { return 4834487; } else { return 4945106; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 101) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 100) { return 5055725; } else { return 5166345; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 102) { return 5281060; } else { return 5391680; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 107) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 105) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 104) { return 5506396; } else { return 5621112; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 106) { return 5735829; } else { return 5854641; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 109) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 108) { return 5969358; } else { return 6088171; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 110) { return 6206983; } else { return 6321700; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 119) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 115) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 113) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 112) { return 6440514; } else { return 6563423; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 114) { return 6682236; } else { return 6801050; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 117) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 116) { return 6923959; } else { return 7042773; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 118) { return 7165682; } else { return 7284496; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 123) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 121) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 120) { return 7407406; } else { return 7530316; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 122) { return 7653226; } else { return 7776136; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 125) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 124) { return 7899046; } else { return 8021956; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 126) { return 8144866; } else { return 8267776; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif (i \\u003c= 191) {\\n\\t\\t\\t\\tif (i \\u003c= 159) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 143) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 135) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 131) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 129) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 128) { return 8390685; } else { return 8509499; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 130) { return 8632409; } else { return 8755319; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 133) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 132) { return 8878229; } else { return 9001139; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 134) { return 9124049; } else { return 9246959; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 139) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 137) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 136) { return 9369869; } else { return 9492778; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 138) { return 9611592; } else { return 9734501; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 141) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 140) { return 9853315; } else { return 9976224; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 142) { return 10095037; } else { return 10213851; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 151) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 147) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 145) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 144) { return 10336760; } else { return 10455572; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 146) { return 10570289; } else { return 10689102; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 149) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 148) { return 10807914; } else { return 10922631; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 150) { return 11041443; } else { return 11156159; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 155) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 153) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 152) { return 11270875; } else { return 11385590; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 154) { return 11496210; } else { return 11610925; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 157) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 156) { return 11721544; } else { return 11832163; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 158) { return 11942782; } else { return 12053400; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 175) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 167) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 163) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 161) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 160) { return 12159923; } else { return 12270541; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 162) { return 12377062; } else { return 12479488; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 165) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 164) { return 12586009; } else { return 12688434; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 166) { return 12790859; } else { return 12893284; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 171) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 169) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 168) { return 12995708; } else { return 13094036; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 170) { return 13192364; } else { return 13290691; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 173) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 172) { return 13384922; } else { return 13479153; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 174) { return 13573384; } else { return 13667614; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 183) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 179) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 177) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 176) { return 13757748; } else { return 13847882; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 178) { return 13938015; } else { return 14024052; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 181) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 180) { return 14110089; } else { return 14196126; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 182) { return 14282162; } else { return 14364101; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 187) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 185) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 184) { return 14441945; } else { return 14523884; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 186) { return 14601727; } else { return 14679569; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 189) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 188) { return 14753315; } else { return 14827061; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 190) { return 14900806; } else { return 14970456; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (i \\u003c= 223) {\\n\\t\\t\\t\\t\\tif (i \\u003c= 207) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 199) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 195) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 193) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 192) { return 15044200; } else { return 15109753; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 194) { return 15179401; } else { return 15244952; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 197) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 196) { return 15306407; } else { return 15367862; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 198) { return 15429317; } else { return 15490771; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 203) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 201) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 200) { return 15548129; } else { return 15605486; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 202) { return 15658748; } else { return 15716104; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 205) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 204) { return 15765269; } else { return 15818529; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 206) { return 15867692; } else { return 15912760; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 215) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 211) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 209) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 208) { return 15961923; } else { return 16006989; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 210) { return 16047960; } else { return 16093025; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 213) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 212) { return 16129899; } else { return 16170868; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 214) { return 16207741; } else { return 16244614; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 219) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 217) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 216) { return 16281486; } else { return 16314262; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 218) { return 16347037; } else { return 16375716; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 221) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 220) { return 16404395; } else { return 16433074; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 222) { return 16461752; } else { return 16486334; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (i \\u003c= 239) {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 231) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 227) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 225) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 224) { return 16510915; } else { return 16531401; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 226) { return 16555982; } else { return 16576466; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 229) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 228) { return 16592855; } else { return 16613339; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 230) { return 16629727; } else { return 16646114; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 235) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 233) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 232) { return 16658406; } else { return 16674793; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 234) { return 16687084; } else { return 16699374; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 237) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 236) { return 16707569; } else { return 16719859; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 238) { return 16728053; } else { return 16736246; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tif (i \\u003c= 247) {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 243) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 241) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 240) { return 16740344; } else { return 16748537; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 242) { return 16752635; } else { return 16760828; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 245) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 244) { return 16764924; } else { return 16764925; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 246) { return 16769022; } else { return 16773118; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 251) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 249) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 248) { return 16773119; } else { return 16777215; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 250) { return 16777215; } else { return 16777215; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (i \\u003c= 253) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 252) { return 16777215; } else { return 16777215; }\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (i == 254) { return 16777215; } else { return 16777215; }\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\"},\"ThreadGlyphs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/*\\n.___..             ..__ .      .     \\n  |  |_ ._. _  _. _|[ __|  .._ |_  __\\n  |  [ )[  (/,(_](_][_./|\\\\_|[_)[ )_) \\nThreadGlyphs             ._||        \\nCollect customizable line art NFTs, all completely decentralized and generated by the Ethereum blockchain.\\n\\nWebsite: https://threadglyphs.com/\\nCreated by sol_dev\\n\\n*/\\n\\nimport \\\"./PerlinNoise.sol\\\";\\n\\ninterface Receiver {\\n\\tfunction onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external returns (bytes4);\\n}\\n\\ncontract Metadata {\\n\\tstring public name = \\\"ThreadGlyphs\\\";\\n\\tstring public symbol = unicode\\\"⩬\\\";\\n\\tfunction contractURI() external pure returns (string memory) {\\n\\t\\treturn \\\"https://api.threadglyphs.com/metadata\\\";\\n\\t}\\n\\tfunction baseTokenURI() public pure returns (string memory) {\\n\\t\\treturn \\\"https://api.threadglyphs.com/glyph/metadata/\\\";\\n\\t}\\n\\tfunction tokenURI(uint256 _tokenId) external pure returns (string memory) {\\n\\t\\tbytes memory _base = bytes(baseTokenURI());\\n\\t\\tuint256 _digits = 1;\\n\\t\\tuint256 _n = _tokenId;\\n\\t\\twhile (_n \\u003e 9) {\\n\\t\\t\\t_n /= 10;\\n\\t\\t\\t_digits++;\\n\\t\\t}\\n\\t\\tbytes memory _uri = new bytes(_base.length + _digits);\\n\\t\\tfor (uint256 i = 0; i \\u003c _uri.length; i++) {\\n\\t\\t\\tif (i \\u003c _base.length) {\\n\\t\\t\\t\\t_uri[i] = _base[i];\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tuint256 _dec = (_tokenId / (10**(_uri.length - i - 1))) % 10;\\n\\t\\t\\t\\t_uri[i] = bytes1(uint8(_dec) + 48);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn string(_uri);\\n\\t}\\n}\\n\\n\\ncontract ThreadGlyphs {\\n\\n\\tuint256 constant public MAX_SUPPLY = 512;\\n\\tuint256 constant public MINT_COST = 0.25 ether;\\n\\tuint256 constant private SIZE = 10000;\\n\\tuint256 constant private STEP = 80;\\n\\tuint256 constant private STROKE = 32;\\n\\tuint256 constant private X_PADDING = 1000;\\n\\tuint256 constant private Y_PADDING = 1600;\\n\\tint256 constant private SCALAR = 2**16;\\n\\n\\tstruct User {\\n\\t\\tuint256 balance;\\n\\t\\tmapping(uint256 =\\u003e uint256) list;\\n\\t\\tmapping(address =\\u003e bool) approved;\\n\\t\\tmapping(uint256 =\\u003e uint256) indexOf;\\n\\t}\\n\\n\\tstruct Token {\\n\\t\\taddress owner;\\n\\t\\taddress approved;\\n\\t\\tbytes32 seed;\\n\\t\\tbytes3 color1;\\n\\t\\tbytes3 color2;\\n\\t}\\n\\n\\tstruct Info {\\n\\t\\tuint256 totalSupply;\\n\\t\\tmapping(uint256 =\\u003e Token) list;\\n\\t\\tmapping(address =\\u003e User) users;\\n\\t\\tMetadata metadata;\\n\\t\\taddress owner;\\n\\t}\\n\\tInfo private info;\\n\\n\\tmapping(bytes4 =\\u003e bool) public supportsInterface;\\n\\n\\tevent Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\tevent Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\tevent ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n\\tevent Mint(address indexed owner, uint256 indexed tokenId, bytes32 seed);\\n\\tevent Recolor(address indexed owner, uint256 indexed tokenId, bytes3 color, bool isColor1);\\n\\n\\n\\tmodifier _onlyOwner() {\\n\\t\\trequire(msg.sender == owner());\\n\\t\\t_;\\n\\t}\\n\\n\\n\\tconstructor() {\\n\\t\\tinfo.metadata = new Metadata();\\n\\t\\tinfo.owner = msg.sender;\\n\\t\\tsupportsInterface[0x01ffc9a7] = true; // ERC-165\\n\\t\\tsupportsInterface[0x80ac58cd] = true; // ERC-721\\n\\t\\tsupportsInterface[0x5b5e139f] = true; // Metadata\\n\\t\\tsupportsInterface[0x780e9d63] = true; // Enumerable\\n\\n\\t\\tfor (uint256 i = 0; i \\u003c 10; i++) {\\n\\t\\t\\t_mint();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setOwner(address _owner) external _onlyOwner {\\n\\t\\tinfo.owner = _owner;\\n\\t}\\n\\n\\tfunction setMetadata(Metadata _metadata) external _onlyOwner {\\n\\t\\tinfo.metadata = _metadata;\\n\\t}\\n\\n\\tfunction ownerWithdraw() external _onlyOwner {\\n\\t\\tuint256 _balance = address(this).balance;\\n\\t\\trequire(_balance \\u003e 0);\\n\\t\\tpayable(msg.sender).transfer(_balance);\\n\\t}\\n\\n\\t\\n\\treceive() external payable {\\n\\t\\tmintMany(msg.value / MINT_COST);\\n\\t}\\n\\t\\n\\tfunction mint() external payable {\\n\\t\\tmintMany(1);\\n\\t}\\n\\n\\tfunction mintMany(uint256 _tokens) public payable {\\n\\t\\trequire(_tokens \\u003e 0);\\n\\t\\tuint256 _cost = _tokens * MINT_COST;\\n\\t\\trequire(msg.value \\u003e= _cost);\\n\\t\\tfor (uint256 i = 0; i \\u003c _tokens; i++) {\\n\\t\\t\\t_mint();\\n\\t\\t}\\n\\t\\tif (msg.value \\u003e _cost) {\\n\\t\\t\\tpayable(msg.sender).transfer(msg.value - _cost);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunction setColor1(uint256 _tokenId, bytes3 _color) external {\\n\\t\\trequire(msg.sender == ownerOf(_tokenId));\\n\\t\\tinfo.list[_tokenId].color1 = _color;\\n\\t\\temit Recolor(msg.sender, _tokenId, _color, true);\\n\\t}\\n\\t\\n\\tfunction setColor2(uint256 _tokenId, bytes3 _color) external {\\n\\t\\trequire(msg.sender == ownerOf(_tokenId));\\n\\t\\tinfo.list[_tokenId].color2 = _color;\\n\\t\\temit Recolor(msg.sender, _tokenId, _color, false);\\n\\t}\\n\\t\\n\\tfunction approve(address _approved, uint256 _tokenId) external {\\n\\t\\trequire(msg.sender == ownerOf(_tokenId));\\n\\t\\tinfo.list[_tokenId].approved = _approved;\\n\\t\\temit Approval(msg.sender, _approved, _tokenId);\\n\\t}\\n\\n\\tfunction setApprovalForAll(address _operator, bool _approved) external {\\n\\t\\tinfo.users[msg.sender].approved[_operator] = _approved;\\n\\t\\temit ApprovalForAll(msg.sender, _operator, _approved);\\n\\t}\\n\\n\\tfunction transferFrom(address _from, address _to, uint256 _tokenId) external {\\n\\t\\t_transfer(_from, _to, _tokenId);\\n\\t}\\n\\n\\tfunction safeTransferFrom(address _from, address _to, uint256 _tokenId) external {\\n\\t\\tsafeTransferFrom(_from, _to, _tokenId, \\\"\\\");\\n\\t}\\n\\n\\tfunction safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory _data) public {\\n\\t\\t_transfer(_from, _to, _tokenId);\\n\\t\\tuint32 _size;\\n\\t\\tassembly {\\n\\t\\t\\t_size := extcodesize(_to)\\n\\t\\t}\\n\\t\\tif (_size \\u003e 0) {\\n\\t\\t\\trequire(Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data) == 0x150b7a02);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction name() external view returns (string memory) {\\n\\t\\treturn info.metadata.name();\\n\\t}\\n\\n\\tfunction symbol() external view returns (string memory) {\\n\\t\\treturn info.metadata.symbol();\\n\\t}\\n\\n\\tfunction contractURI() external view returns (string memory) {\\n\\t\\treturn info.metadata.contractURI();\\n\\t}\\n\\n\\tfunction baseTokenURI() external view returns (string memory) {\\n\\t\\treturn info.metadata.baseTokenURI();\\n\\t}\\n\\n\\tfunction tokenURI(uint256 _tokenId) external view returns (string memory) {\\n\\t\\treturn info.metadata.tokenURI(_tokenId);\\n\\t}\\n\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn info.owner;\\n\\t}\\n\\n\\tfunction totalSupply() public view returns (uint256) {\\n\\t\\treturn info.totalSupply;\\n\\t}\\n\\n\\tfunction balanceOf(address _owner) public view returns (uint256) {\\n\\t\\treturn info.users[_owner].balance;\\n\\t}\\n\\n\\tfunction ownerOf(uint256 _tokenId) public view returns (address) {\\n\\t\\trequire(_tokenId \\u003c totalSupply());\\n\\t\\treturn info.list[_tokenId].owner;\\n\\t}\\n\\n\\tfunction getApproved(uint256 _tokenId) public view returns (address) {\\n\\t\\trequire(_tokenId \\u003c totalSupply());\\n\\t\\treturn info.list[_tokenId].approved;\\n\\t}\\n\\n\\tfunction isApprovedForAll(address _owner, address _operator) public view returns (bool) {\\n\\t\\treturn info.users[_owner].approved[_operator];\\n\\t}\\n\\n\\tfunction getSeed(uint256 _tokenId) public view returns (bytes32) {\\n\\t\\trequire(_tokenId \\u003c totalSupply());\\n\\t\\treturn info.list[_tokenId].seed;\\n\\t}\\n\\n\\tfunction getColor1(uint256 _tokenId) public view returns (bytes3) {\\n\\t\\trequire(_tokenId \\u003c totalSupply());\\n\\t\\treturn info.list[_tokenId].color1;\\n\\t}\\n\\n\\tfunction getColor2(uint256 _tokenId) public view returns (bytes3) {\\n\\t\\trequire(_tokenId \\u003c totalSupply());\\n\\t\\treturn info.list[_tokenId].color2;\\n\\t}\\n\\n\\tfunction tokenByIndex(uint256 _index) public view returns (uint256) {\\n\\t\\trequire(_index \\u003c totalSupply());\\n\\t\\treturn _index;\\n\\t}\\n\\n\\tfunction tokenOfOwnerByIndex(address _owner, uint256 _index) public view returns (uint256) {\\n\\t\\trequire(_index \\u003c balanceOf(_owner));\\n\\t\\treturn info.users[_owner].list[_index];\\n\\t}\\n\\n\\tfunction getSVG(uint256 _tokenId) external view returns (string memory svg) {\\n\\t\\tstring memory _size = _uint2str(SIZE);\\n\\t\\tsvg = string(abi.encodePacked(\\\"\\u003csvg xmlns=\\u0027http://www.w3.org/2000/svg\\u0027 version=\\u00271.1\\u0027 width=\\u0027\\\", _size, \\\"\\u0027 height=\\u0027\\\", _size, \\\"\\u0027 viewBox=\\u00270 0 \\\", _size, \\\" \\\", _size, \\\"\\u0027\\u003e\\\"));\\n\\t\\t(bool[2] memory _bools, uint256[6] memory _ints) = getSettingsCompressed(getSeed(_tokenId));\\n\\t\\tsvg = string(abi.encodePacked(svg, \\\"\\u003crect width=\\u0027100%\\u0027 height=\\u0027100%\\u0027 fill=\\u0027\\\", _bools[0] ? \\\"#040404\\\" : \\\"#fbfbfb\\\", \\\"\\u0027 /\\u003e\\u003cg fill=\\u0027none\\u0027 stroke-width=\\u0027\\\", _uint2str(STROKE), \\\"\\u0027 stroke-linecap=\\u0027round\\u0027\\u003e\\\"));\\n\\t\\tfor (uint256 i = 0; i \\u003c _ints[4]; i++) {\\n\\t\\t\\tstring memory _path = \\\"\\u003cpath d=\\u0027\\\";\\n\\t\\t\\tfor (uint256 j = 0; j \\u003c= (SIZE - 2 * X_PADDING) / STEP; j++) {\\n\\t\\t\\t\\tuint256 x = X_PADDING + j * STEP;\\n\\t\\t\\t\\tuint256 y = Y_PADDING + (SIZE - 2 * Y_PADDING) * i / (_ints[4] - 1);\\n\\t\\t\\t\\ty = uint256(int256(y) + PerlinNoise.noise2d(int256(_ints[0] + x * uint256(SCALAR) / _ints[2]), int256(_ints[1] + y * uint256(SCALAR) / _ints[3])) * int256(Y_PADDING) / SCALAR);\\n\\t\\t\\t\\t_path = string(abi.encodePacked(_path, j == 0 ? \\\"M\\\" : \\\"L\\\", _uint2str(_bools[1] ? y : x), \\\" \\\", _uint2str(_bools[1] ? x : y)));\\n\\t\\t\\t}\\n\\t\\t\\tbytes3 _col = getColor1(_tokenId);\\n\\t\\t\\tif ((_ints[5] == 1 \\u0026\\u0026 i % 2 == 1) || (_ints[5] == 2 \\u0026\\u0026 i \\u003e= _ints[4] / 2)) {\\n\\t\\t\\t\\t_col = getColor2(_tokenId);\\n\\t\\t\\t} else if (_ints[5] == 3) {\\n\\t\\t\\t\\t_col = _collerp(_col, getColor2(_tokenId), i, _ints[4] - 1);\\n\\t\\t\\t}\\n\\t\\t\\t_path = string(abi.encodePacked(_path, \\\"\\u0027 stroke=\\u0027\\\", _col2str(_col), \\\"\\u0027\\u003e\\u003c/path\\u003e\\\"));\\n\\t\\t\\tsvg = string(abi.encodePacked(svg, _path));\\n\\t\\t}\\n\\t\\tsvg = string(abi.encodePacked(svg, \\\"\\u003c/g\\u003e\\u003c/svg\\u003e\\\"));\\n\\t}\\n\\n\\tfunction getTokenSettings(uint256 _tokenId) external view returns (bool inverted, bool vertical, uint256 xPos, uint256 yPos, uint256 xZoom, uint256 yZoom, uint256 lines, uint256 mode) {\\n\\t\\t(inverted, vertical, xPos, yPos, xZoom, yZoom, lines, mode) = getSettings(getSeed(_tokenId));\\n\\t}\\n\\n\\tfunction getSettings(bytes32 _seed) public pure returns (bool inverted, bool vertical, uint256 xPos, uint256 yPos, uint256 xZoom, uint256 yZoom, uint256 lines, uint256 mode) {\\n\\t\\tbytes32 _rand = keccak256(abi.encodePacked(\\\"ThreadGlyph:\\\", _seed));\\n\\t\\tinverted = uint256(_rand) % 5 == 0;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\tvertical = uint256(_rand) % 25 == 0;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\txPos = uint256(_rand) % 2**16;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\tyPos = uint256(_rand) % 2**16;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\txZoom = 3200 + uint256(_rand) % 1800;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\tyZoom = xZoom - 500 + uint256(_rand) % 500;\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\tlines = 12 + 2 * (10 - _sqrt(uint256(_rand) % 101));\\n\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\tif (uint256(_rand) % 8 == 0) {\\n\\t\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\t\\tif (uint256(_rand) % 4 == 0) {\\n\\t\\t\\t\\t_rand = keccak256(abi.encodePacked(_rand));\\n\\t\\t\\t\\tif (uint256(_rand) % 4 == 0) {\\n\\t\\t\\t\\t\\tmode = 3;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmode = 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmode = 1;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tmode = 0;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getSettingsCompressed(bytes32 _seed) public pure returns (bool[2] memory bools, uint256[6] memory ints) {\\n\\t\\t(bools[0], bools[1], ints[0], ints[1], ints[2], ints[3], ints[4], ints[5]) = getSettings(_seed);\\n\\t}\\n\\n\\tfunction getGlyph(uint256 _tokenId) public view returns (address tokenOwner, address approved, bytes32 seed, bytes3 color1, bytes3 color2) {\\n\\t\\treturn (ownerOf(_tokenId), getApproved(_tokenId), getSeed(_tokenId), getColor1(_tokenId), getColor2(_tokenId));\\n\\t}\\n\\n\\tfunction getGlyphs(uint256[] memory _tokenIds) public view returns (address[] memory owners, address[] memory approveds, bytes32[] memory seeds, bytes3[] memory color1s, bytes3[] memory color2s) {\\n\\t\\tuint256 _length = _tokenIds.length;\\n\\t\\towners = new address[](_length);\\n\\t\\tapproveds = new address[](_length);\\n\\t\\tseeds = new bytes32[](_length);\\n\\t\\tcolor1s = new bytes3[](_length);\\n\\t\\tcolor2s = new bytes3[](_length);\\n\\t\\tfor (uint256 i = 0; i \\u003c _length; i++) {\\n\\t\\t\\t(owners[i], approveds[i], seeds[i], color1s[i], color2s[i]) = getGlyph(_tokenIds[i]);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getGlyphsTable(uint256 _limit, uint256 _page, bool _isAsc) public view returns (uint256[] memory tokenIds, address[] memory owners, address[] memory approveds, bytes32[] memory seeds, bytes3[] memory color1s, bytes3[] memory color2s, uint256 totalGlyphs, uint256 totalPages) {\\n\\t\\trequire(_limit \\u003e 0);\\n\\t\\ttotalGlyphs = totalSupply();\\n\\n\\t\\tif (totalGlyphs \\u003e 0) {\\n\\t\\t\\ttotalPages = (totalGlyphs / _limit) + (totalGlyphs % _limit == 0 ? 0 : 1);\\n\\t\\t\\trequire(_page \\u003c totalPages);\\n\\n\\t\\t\\tuint256 _offset = _limit * _page;\\n\\t\\t\\tif (_page == totalPages - 1 \\u0026\\u0026 totalGlyphs % _limit != 0) {\\n\\t\\t\\t\\t_limit = totalGlyphs % _limit;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttokenIds = new uint256[](_limit);\\n\\t\\t\\tfor (uint256 i = 0; i \\u003c _limit; i++) {\\n\\t\\t\\t\\ttokenIds[i] = tokenByIndex(_isAsc ? _offset + i : totalGlyphs - _offset - i - 1);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\ttotalPages = 0;\\n\\t\\t\\ttokenIds = new uint256[](0);\\n\\t\\t}\\n\\t\\t(owners, approveds, seeds, color1s, color2s) = getGlyphs(tokenIds);\\n\\t}\\n\\n\\tfunction getOwnerGlyphsTable(address _owner, uint256 _limit, uint256 _page, bool _isAsc) public view returns (uint256[] memory tokenIds, address[] memory approveds, bytes32[] memory seeds, bytes3[] memory color1s, bytes3[] memory color2s, uint256 totalGlyphs, uint256 totalPages) {\\n\\t\\trequire(_limit \\u003e 0);\\n\\t\\ttotalGlyphs = balanceOf(_owner);\\n\\n\\t\\tif (totalGlyphs \\u003e 0) {\\n\\t\\t\\ttotalPages = (totalGlyphs / _limit) + (totalGlyphs % _limit == 0 ? 0 : 1);\\n\\t\\t\\trequire(_page \\u003c totalPages);\\n\\n\\t\\t\\tuint256 _offset = _limit * _page;\\n\\t\\t\\tif (_page == totalPages - 1 \\u0026\\u0026 totalGlyphs % _limit != 0) {\\n\\t\\t\\t\\t_limit = totalGlyphs % _limit;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttokenIds = new uint256[](_limit);\\n\\t\\t\\tfor (uint256 i = 0; i \\u003c _limit; i++) {\\n\\t\\t\\t\\ttokenIds[i] = tokenOfOwnerByIndex(_owner, _isAsc ? _offset + i : totalGlyphs - _offset - i - 1);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\ttotalPages = 0;\\n\\t\\t\\ttokenIds = new uint256[](0);\\n\\t\\t}\\n\\t\\t( , approveds, seeds, color1s, color2s) = getGlyphs(tokenIds);\\n\\t}\\n\\n\\tfunction allInfoFor(address _owner) external view returns (uint256 supply, uint256 ownerBalance) {\\n\\t\\treturn (totalSupply(), balanceOf(_owner));\\n\\t}\\n\\n\\n\\tfunction _mint() internal {\\n\\t\\trequire(msg.sender == tx.origin);\\n\\t\\trequire(totalSupply() \\u003c MAX_SUPPLY);\\n\\t\\tuint256 _tokenId = info.totalSupply++;\\n\\t\\tToken storage _newToken = info.list[_tokenId];\\n\\t\\t_newToken.owner = msg.sender;\\n\\t\\tbytes32 _seed = keccak256(abi.encodePacked(_tokenId, msg.sender, blockhash(block.number - 1), gasleft()));\\n\\t\\t_newToken.seed = _seed;\\n\\t\\t(bool _inverted, , , , , , , ) = getSettings(_seed);\\n\\t\\t_newToken.color1 = _inverted ? bytes3(0xffffff) : bytes3(0x000000);\\n\\t\\t_newToken.color2 = _inverted ? bytes3(0x66dd66) : bytes3(0xdd4444);\\n\\t\\tuint256 _index = info.users[msg.sender].balance++;\\n\\t\\tinfo.users[msg.sender].indexOf[_tokenId] = _index + 1;\\n\\t\\tinfo.users[msg.sender].list[_index] = _tokenId;\\n\\t\\temit Transfer(address(0x0), msg.sender, _tokenId);\\n\\t\\temit Mint(msg.sender, _tokenId, _seed);\\n\\t}\\n\\t\\n\\tfunction _transfer(address _from, address _to, uint256 _tokenId) internal {\\n\\t\\taddress _owner = ownerOf(_tokenId);\\n\\t\\taddress _approved = getApproved(_tokenId);\\n\\t\\trequire(_from == _owner);\\n\\t\\trequire(msg.sender == _owner || msg.sender == _approved || isApprovedForAll(_owner, msg.sender));\\n\\n\\t\\tinfo.list[_tokenId].owner = _to;\\n\\t\\tif (_approved != address(0x0)) {\\n\\t\\t\\tinfo.list[_tokenId].approved = address(0x0);\\n\\t\\t\\temit Approval(address(0x0), address(0x0), _tokenId);\\n\\t\\t}\\n\\n\\t\\tuint256 _index = info.users[_from].indexOf[_tokenId] - 1;\\n\\t\\tuint256 _moved = info.users[_from].list[info.users[_from].balance - 1];\\n\\t\\tinfo.users[_from].list[_index] = _moved;\\n\\t\\tinfo.users[_from].indexOf[_moved] = _index + 1;\\n\\t\\tinfo.users[_from].balance--;\\n\\t\\tdelete info.users[_from].indexOf[_tokenId];\\n\\t\\tuint256 _newIndex = info.users[_to].balance++;\\n\\t\\tinfo.users[_to].indexOf[_tokenId] = _newIndex + 1;\\n\\t\\tinfo.users[_to].list[_newIndex] = _tokenId;\\n\\t\\temit Transfer(_from, _to, _tokenId);\\n\\t}\\n\\n\\n\\tfunction _uint2str(uint256 _value) internal pure returns (string memory) {\\n\\t\\tuint256 _digits = 1;\\n\\t\\tuint256 _n = _value;\\n\\t\\twhile (_n \\u003e 9) {\\n\\t\\t\\t_n /= 10;\\n\\t\\t\\t_digits++;\\n\\t\\t}\\n\\t\\tbytes memory _out = new bytes(_digits);\\n\\t\\tfor (uint256 i = 0; i \\u003c _out.length; i++) {\\n\\t\\t\\tuint256 _dec = (_value / (10**(_out.length - i - 1))) % 10;\\n\\t\\t\\t_out[i] = bytes1(uint8(_dec) + 48);\\n\\t\\t}\\n\\t\\treturn string(_out);\\n\\t}\\n\\n\\tfunction _col2str(bytes3 _color) internal pure returns (string memory) {\\n\\t\\tbytes memory _out = new bytes(7);\\n\\t\\tfor (uint256 i = 0; i \\u003c _out.length; i++) {\\n\\t\\t\\tif (i == 0) {\\n\\t\\t\\t\\t_out[i] = bytes1(uint8(35));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tuint8 _hex = uint8(uint24(_color \\u003e\\u003e (4 * (_out.length - i - 1))) \\u0026 15);\\n\\t\\t\\t\\t_out[i] = bytes1(_hex + (_hex \\u003e 9 ? 87 : 48));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn string(_out);\\n\\t}\\n\\n\\tfunction _collerp(bytes3 _color1, bytes3 _color2, uint256 _current, uint256 _limit) public pure returns (bytes3 col) {\\n\\t\\trequire(_current \\u003c= _limit);\\n\\t\\tfor (uint256 i = 0; i \\u003c 3; i++) {\\n\\t\\t\\tuint8 _c1 = uint8(uint24(_color1) \\u003e\\u003e (8 * i));\\n\\t\\t\\tuint8 _c2 = uint8(uint24(_color2) \\u003e\\u003e (8 * i));\\n\\t\\t\\tuint8 _diff;\\n\\t\\t\\tuint8 _new;\\n\\t\\t\\tif (_c2 == _c1) {\\n\\t\\t\\t\\t_new = _c1;\\n\\t\\t\\t} else if (_c2 \\u003e _c1) {\\n\\t\\t\\t\\t_diff = _c2 - _c1;\\n\\t\\t\\t\\t_new = uint8(_c1 + _diff * _current / _limit);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t_diff = _c1 - _c2;\\n\\t\\t\\t\\t_new = uint8(_c2 + _diff * (_limit - _current) / _limit);\\n\\t\\t\\t}\\n\\t\\t\\tcol |= bytes3(uint24(_new) \\u003c\\u003c uint24(8 * i));\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _sqrt(uint256 _n) internal pure returns (uint256 result) {\\n\\t\\tuint256 _tmp = (_n + 1) / 2;\\n\\t\\tresult = _n;\\n\\t\\twhile (_tmp \\u003c result) {\\n\\t\\t\\tresult = _tmp;\\n\\t\\t\\t_tmp = (_n / _tmp + _tmp) / 2;\\n\\t\\t}\\n\\t}\\n}\\n\"}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes3\",\"name\":\"color\",\"type\":\"bytes3\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isColor1\",\"type\":\"bool\"}],\"name\":\"Recolor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes3\",\"name\":\"_color1\",\"type\":\"bytes3\"},{\"internalType\":\"bytes3\",\"name\":\"_color2\",\"type\":\"bytes3\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"_collerp\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"col\",\"type\":\"bytes3\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getColor1\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getColor2\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getGlyph\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"},{\"internalType\":\"bytes3\",\"name\":\"color1\",\"type\":\"bytes3\"},{\"internalType\":\"bytes3\",\"name\":\"color2\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"getGlyphs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"approveds\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"seeds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color1s\",\"type\":\"bytes3[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color2s\",\"type\":\"bytes3[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAsc\",\"type\":\"bool\"}],\"name\":\"getGlyphsTable\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"approveds\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"seeds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color1s\",\"type\":\"bytes3[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color2s\",\"type\":\"bytes3[]\"},{\"internalType\":\"uint256\",\"name\":\"totalGlyphs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPages\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_page\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isAsc\",\"type\":\"bool\"}],\"name\":\"getOwnerGlyphsTable\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"approveds\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"seeds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color1s\",\"type\":\"bytes3[]\"},{\"internalType\":\"bytes3[]\",\"name\":\"color2s\",\"type\":\"bytes3[]\"},{\"internalType\":\"uint256\",\"name\":\"totalGlyphs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPages\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"getSettings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"inverted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vertical\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"xPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xZoom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yZoom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lines\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"getSettingsCompressed\",\"outputs\":[{\"internalType\":\"bool[2]\",\"name\":\"bools\",\"type\":\"bool[2]\"},{\"internalType\":\"uint256[6]\",\"name\":\"ints\",\"type\":\"uint256[6]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenSettings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"inverted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vertical\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"xPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xZoom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yZoom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lines\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"mintMany\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes3\",\"name\":\"_color\",\"type\":\"bytes3\"}],\"name\":\"setColor1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes3\",\"name\":\"_color\",\"type\":\"bytes3\"}],\"name\":\"setColor2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Metadata\",\"name\":\"_metadata\",\"type\":\"address\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ThreadGlyphs","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"PerlinNoise:a922f3079bc09e90998247bc8fdb639f9e0c66e1","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d9444f88d9f34a3ba83d6802aa640bf8c61cdd028ceff707ef43dcb5be3ec82b"}]}