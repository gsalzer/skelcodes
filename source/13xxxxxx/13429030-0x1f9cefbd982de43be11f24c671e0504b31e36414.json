{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/validators/RangePropertyValidator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IPropertyValidator.sol\\\";\\n\\ncontract RangePropertyValidator is IPropertyValidator {\\n    function checkBrokerAsset(uint256 tokenId, bytes calldata propertyData)\\n        external\\n        pure\\n        override\\n    {\\n        (uint256 tokenIdLowerBound, uint256 tokenIdUpperBound) = abi.decode(\\n            propertyData,\\n            (uint256, uint256)\\n        );\\n        require(\\n            tokenIdLowerBound <= tokenId && tokenId <= tokenIdUpperBound,\\n            \\\"Token id out of range\\\"\\n        );\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/validators/IPropertyValidator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\ninterface IPropertyValidator {\\n    /// @dev Checks that the given asset data satisfies the properties encoded in `propertyData`.\\n    ///      Should revert if the asset does not satisfy the specified properties.\\n    /// @param tokenId The ERC721 tokenId of the asset to check.\\n    /// @param propertyData Encoded properties or auxiliary data needed to perform the check.\\n    function checkBrokerAsset(uint256 tokenId, bytes calldata propertyData)\\n        external\\n        view;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"propertyData\",\"type\":\"bytes\"}],\"name\":\"checkBrokerAsset\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"RangePropertyValidator","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}