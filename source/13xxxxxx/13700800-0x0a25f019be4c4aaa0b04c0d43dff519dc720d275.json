{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/memory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.7.6;\\n\\n/**\\n * @title StakeAllMemory.\\n * @dev Store Data For Cast Function.\\n */\\n\\ncontract StakeAllMemory {\\n    // Memory Bytes (Smart Account Address => Storage ID => Bytes).\\n    mapping(address => mapping(uint256 => bytes32)) internal mbytes; // Use it to store execute data and delete in the same transaction\\n    // Memory Uint (Smart Account Address => Storage ID => Uint).\\n    mapping(address => mapping(uint256 => uint256)) internal muint; // Use it to store execute data and delete in the same transaction\\n    // Memory Address (Smart Account Address => Storage ID => Address).\\n    mapping(address => mapping(uint256 => address)) internal maddr; // Use it to store execute data and delete in the same transaction\\n\\n    /**\\n     * @dev Store Bytes.\\n     * @param _id Storage ID.\\n     * @param _byte bytes data to store.\\n     */\\n    function setBytes(uint256 _id, bytes32 _byte) public {\\n        mbytes[msg.sender][_id] = _byte;\\n    }\\n\\n    /**\\n     * @dev Get Stored Bytes.\\n     * @param _id Storage ID.\\n     */\\n    function getBytes(uint256 _id) public returns (bytes32 _byte) {\\n        _byte = mbytes[msg.sender][_id];\\n        delete mbytes[msg.sender][_id];\\n    }\\n\\n    /**\\n     * @dev Store Uint.\\n     * @param _id Storage ID.\\n     * @param _num uint data to store.\\n     */\\n    function setUint(uint256 _id, uint256 _num) public {\\n        muint[msg.sender][_id] = _num;\\n    }\\n\\n    /**\\n     * @dev Get Stored Uint.\\n     * @param _id Storage ID.\\n     */\\n    function getUint(uint256 _id) public returns (uint256 _num) {\\n        _num = muint[msg.sender][_id];\\n        delete muint[msg.sender][_id];\\n    }\\n\\n    /**\\n     * @dev Store Address.\\n     * @param _id Storage ID.\\n     * @param _addr Address data to store.\\n     */\\n    function setAddr(uint256 _id, address _addr) public {\\n        maddr[msg.sender][_id] = _addr;\\n    }\\n\\n    /**\\n     * @dev Get Stored Address.\\n     * @param _id Storage ID.\\n     */\\n    function getAddr(uint256 _id) public returns (address _addr) {\\n        _addr = maddr[msg.sender][_id];\\n        delete maddr[msg.sender][_id];\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_byte\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_byte\",\"type\":\"bytes32\"}],\"name\":\"setBytes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"StakeAllMemory","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}