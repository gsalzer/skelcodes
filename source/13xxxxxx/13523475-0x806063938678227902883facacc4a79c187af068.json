{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n           (Bob-a-pult\r\n          /\r\n         /\r\n        / \\ ||\r\n      ( )======( )\r\n\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface INFT {\r\n    function mint(uint256 _nbTokens) external payable;\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function getPrice() external view returns (uint256);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n}\r\n\r\ncontract Bobapult {\r\n    address private _owner;\r\n    INFT private nft1 = INFT(0xD00D1e06a2680E02919f4F5c5EC5dC45d67bB0b5);\r\n\r\n    function setOwner(address bob) public onlyOwner {\r\n        _owner = bob;\r\n    }\r\n\r\n    function setMainNFT(address nft) public onlyOwner {\r\n        nft1 = INFT(nft);\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes memory\r\n    ) public virtual returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function mintCatapultBob(address to) external payable onlyOwner {\r\n        uint256 price = nft1.getPrice();\r\n        uint256 amount = msg.value / price;\r\n        require(amount > 0 && msg.value >= amount * price, \"Not enough money\");\r\n        uint256 startIdx = nft1.totalSupply();\r\n        uint256 endCount = startIdx + amount;\r\n        nft1.mint{value: amount * price}(amount);\r\n        for (uint256 i = startIdx; i < endCount; i++) {\r\n            nft1.transferFrom(address(this), to, i);\r\n        }\r\n    }\r\n\r\n    function withdrawTo(address to) public onlyOwner {\r\n        uint256 _balance = address(this).balance;\r\n        require(payable(to).send(_balance));\r\n    }\r\n\r\n    function withdrawTokenTo(\r\n        address to,\r\n        address token,\r\n        uint256 param\r\n    ) public onlyOwner {\r\n        INFT(token).transferFrom(address(this), to, param);\r\n    }\r\n\r\n    function deposit() external payable {}\r\n\r\n    fallback() external payable {}\r\n\r\n    receive() external payable {}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintCatapultBob\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"setMainNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bob\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"param\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Bobapult","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"1337","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://31ab712408c8b247700f85a9095db6d28513467e49ab6ded64c7f10b45ba8be7"}]}