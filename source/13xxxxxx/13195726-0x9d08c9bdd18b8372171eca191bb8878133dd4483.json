{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IERC20{\r\n    string public symbol;\r\n    string public name;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract TimelockExtend {\r\n    // using SafeERC20 for IERC20;\r\n\r\n    // ERC20 basic token contract being held\r\n    IERC20 private _token;\r\n\r\n    // beneficiary of tokens after they are released\r\n    address private _beneficiary;\r\n\r\n    // timestamp when token release is enabled\r\n    uint256 private _releaseTime;\r\n    uint private _deployeTime;\r\n\r\n    uint private part1Time = 777600;\r\n    uint private Part1Qty = 50000000000000000000000000;\r\n    bool private part1Statue = true;\r\n    \r\n    uint256 private releaseCount = 0; // \r\n    uint private releaseQty = 4500000000000000000000000;\r\n    uint private stepTime = 2592000;\r\n\r\n\r\n    constructor (IERC20 token, address beneficiary, uint256 releaseTime) public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(releaseTime > block.timestamp, 'release time is before');\r\n        _token = token;\r\n        _beneficiary = beneficiary;\r\n        _deployeTime = block.timestamp;\r\n        _releaseTime = releaseTime;\r\n    }\r\n\r\n    /**\r\n     * @return the token being held.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the beneficiary of the tokens.\r\n     */\r\n    function beneficiary() public view returns (address) {\r\n        return (_beneficiary);\r\n    }\r\n\r\n    /**\r\n     * @return the time when the tokens are released.\r\n     */\r\n    function releaseTime() public view returns (uint256,uint256) {\r\n        return (_releaseTime, _deployeTime);\r\n    }\r\n    \r\n    /**\r\n     * @return the time when the tokens are released.\r\n     */\r\n    function getReleaseCount() public view returns (uint256) {\r\n        return releaseCount;\r\n    }\r\n    \r\n    /**\r\n     * @return this contract balance\r\n     */\r\n    function balance() public view returns (uint) {\r\n        \r\n        return _token.balanceOf(address(this));\r\n    }\r\n    \r\n    /**\r\n     * @notice Transfers tokens held by timelock to beneficiary.\r\n     */\r\n    function releasePartOne() public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(block.timestamp >= _deployeTime + part1Time, 'before release time');\r\n        require(_token.balanceOf(address(this)) > 0, 'release done');\r\n        require(part1Statue == true, 'release done');\r\n        \r\n        _token.transfer(_beneficiary, Part1Qty);\r\n        \r\n        part1Statue = false;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers tokens held by timelock to beneficiary.\r\n     */\r\n    function release() public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(block.timestamp >= _releaseTime + (stepTime * releaseCount), 'before release time');\r\n        \r\n        uint thisBalance = _token.balanceOf(address(this));\r\n        require(thisBalance > 0, 'release done');\r\n        \r\n        if (thisBalance>=releaseQty) {\r\n        \r\n            _token.transfer(_beneficiary, releaseQty);\r\n        } else {\r\n            \r\n            _token.transfer(_beneficiary, thisBalance);\r\n        }\r\n\r\n        releaseCount++;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReleaseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releasePartOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TimelockExtend","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c6b70abab6dd7c671af884bad1cffd599c5c40e20000000000000000000000001ed7f2b7c61524ef24cd87566599bfd86565140b000000000000000000000000000000000000000000000000000000006161bc80","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8d7ea1033658abb41289bdd883ecb384239ce259bb9fde8b4ea6b3ce34c7754b"}]}