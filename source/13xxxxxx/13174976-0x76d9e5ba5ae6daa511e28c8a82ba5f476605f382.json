{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\n\r\ncontract EthPayment{\r\n    \r\n    //OWNER STUFF\r\n    address owner;\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    uint256 constant COST = 40000000000000000;\r\n    \r\n    uint256 MINT_STATUS = 0;\r\n    \r\n    function getStatus() public view returns(uint256 status){\r\n        return MINT_STATUS;\r\n    }\r\n    \r\n    function setStatus(uint256 status) public onlyOwner{\r\n        MINT_STATUS = status;\r\n    }\r\n    \r\n    uint256 constant TOTAL = 10000;\r\n    \r\n    function totalSupply() public view returns(uint256 total){\r\n        return CURRENT_MINT;\r\n    }\r\n    \r\n    uint256 CURRENT_MINT = 0;\r\n    \r\n    uint256 constant RESERVES = 52;\r\n    \r\n    uint256 constant WALLET_MAX = 10;\r\n    \r\n    mapping(address => uint256) totals;\r\n    \r\n\r\n    event Minted(address frm, uint256 amount);\r\n    \r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function balanceOf(address add) public view returns(uint256 res){\r\n        return totals[add];\r\n    }\r\n    \r\n    function mint(uint256 amount) public payable{\r\n        require(((msg.value >= amount * COST) || msg.sender == owner) && MINT_STATUS > 0 && amount > 0 && (totals[msg.sender] + amount <= WALLET_MAX || msg.sender == owner) && CURRENT_MINT + amount <= TOTAL);\r\n        \r\n        totals[msg.sender] += amount;\r\n        CURRENT_MINT += amount;\r\n        \r\n        emit Minted(msg.sender, amount);\r\n    }\r\n    \r\n    \r\n    function payout () public onlyOwner {\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"frm\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"setStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EthPayment","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1d604b52c7f1bf216b9db729541fba81d221bb050ad125fc9013e70cb11409da"}]}