{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.0\r\n\"\"\"\r\n@title Curve Factory Owner Proxy\r\n@author Curve Finance\r\n@license MIT\r\n@notice Allows DAO ownership of `Factory` and it's deployed pools\r\n\"\"\"\r\n\r\ninterface Curve:\r\n    def ramp_A(_future_A: uint256, _future_time: uint256): nonpayable\r\n    def stop_ramp_A(): nonpayable\r\n\r\ninterface Gauge:\r\n    def set_killed(_is_killed: bool): nonpayable\r\n    def add_reward(_reward_token: address, _distributor: address): nonpayable\r\n    def set_reward_distributor(_reward_token: address, _distributor: address): nonpayable\r\n\r\ninterface Factory:\r\n    def add_base_pool(\r\n        _base_pool: address,\r\n        _fee_receiver: address,\r\n        _asset_type: uint256,\r\n        _implementations: address[10],\r\n    ): nonpayable\r\n    def set_metapool_implementations(\r\n        _base_pool: address,\r\n        _implementations: address[10],\r\n    ): nonpayable\r\n    def set_plain_implementations(\r\n        _n_coins: uint256,\r\n        _implementations: address[10],\r\n    ): nonpayable\r\n    def set_gauge_implementation(_gauge_implementation: address): nonpayable\r\n    def set_fee_receiver(_base_pool: address, _fee_receiver: address): nonpayable\r\n    def commit_transfer_ownership(addr: address): nonpayable\r\n    def accept_transfer_ownership(): nonpayable\r\n    def set_manager(_manager: address): nonpayable\r\n\r\n\r\nevent CommitAdmins:\r\n    ownership_admin: address\r\n    parameter_admin: address\r\n    emergency_admin: address\r\n\r\nevent ApplyAdmins:\r\n    ownership_admin: address\r\n    parameter_admin: address\r\n    emergency_admin: address\r\n\r\nownership_admin: public(address)\r\nparameter_admin: public(address)\r\nemergency_admin: public(address)\r\n\r\nfuture_ownership_admin: public(address)\r\nfuture_parameter_admin: public(address)\r\nfuture_emergency_admin: public(address)\r\n\r\ngauge_manager: public(address)\r\n\r\n\r\n@external\r\ndef __init__(\r\n    _ownership_admin: address,\r\n    _parameter_admin: address,\r\n    _emergency_admin: address,\r\n    _gauge_manager: address\r\n):\r\n    self.ownership_admin = _ownership_admin\r\n    self.parameter_admin = _parameter_admin\r\n    self.emergency_admin = _emergency_admin\r\n    self.gauge_manager = _gauge_manager\r\n\r\n\r\n@external\r\ndef commit_set_admins(_o_admin: address, _p_admin: address, _e_admin: address):\r\n    \"\"\"\r\n    @notice Set ownership admin to `_o_admin`, parameter admin to `_p_admin` and emergency admin to `_e_admin`\r\n    @param _o_admin Ownership admin\r\n    @param _p_admin Parameter admin\r\n    @param _e_admin Emergency admin\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    self.future_ownership_admin = _o_admin\r\n    self.future_parameter_admin = _p_admin\r\n    self.future_emergency_admin = _e_admin\r\n\r\n    log CommitAdmins(_o_admin, _p_admin, _e_admin)\r\n\r\n\r\n@external\r\ndef apply_set_admins():\r\n    \"\"\"\r\n    @notice Apply the effects of `commit_set_admins`\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    _o_admin: address = self.future_ownership_admin\r\n    _p_admin: address = self.future_parameter_admin\r\n    _e_admin: address = self.future_emergency_admin\r\n    self.ownership_admin = _o_admin\r\n    self.parameter_admin = _p_admin\r\n    self.emergency_admin = _e_admin\r\n\r\n    log ApplyAdmins(_o_admin, _p_admin, _e_admin)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef ramp_A(_pool: address, _future_A: uint256, _future_time: uint256):\r\n    \"\"\"\r\n    @notice Start gradually increasing A of `_pool` reaching `_future_A` at `_future_time` time\r\n    @param _pool Pool address\r\n    @param _future_A Future A\r\n    @param _future_time Future time\r\n    \"\"\"\r\n    assert msg.sender == self.parameter_admin, \"Access denied\"\r\n    Curve(_pool).ramp_A(_future_A, _future_time)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef stop_ramp_A(_pool: address):\r\n    \"\"\"\r\n    @notice Stop gradually increasing A of `_pool`\r\n    @param _pool Pool address\r\n    \"\"\"\r\n    assert msg.sender in [self.parameter_admin, self.emergency_admin], \"Access denied\"\r\n    Curve(_pool).stop_ramp_A()\r\n\r\n\r\n@external\r\ndef add_base_pool(\r\n    _target: address,\r\n    _base_pool: address,\r\n    _fee_receiver: address,\r\n    _asset_type: uint256,\r\n    _implementations: address[10],\r\n):\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    Factory(_target).add_base_pool(_base_pool, _fee_receiver, _asset_type, _implementations)\r\n\r\n\r\n@external\r\ndef set_metapool_implementations(\r\n    _target: address,\r\n    _base_pool: address,\r\n    _implementations: address[10],\r\n):\r\n    \"\"\"\r\n    @notice Set implementation contracts for a metapool\r\n    @dev Only callable by admin\r\n    @param _base_pool Pool address to add\r\n    @param _implementations Implementation address to use when deploying metapools\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    Factory(_target).set_metapool_implementations(_base_pool, _implementations)\r\n\r\n\r\n@external\r\ndef set_plain_implementations(\r\n    _target: address,\r\n    _n_coins: uint256,\r\n    _implementations: address[10],\r\n):\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    Factory(_target).set_plain_implementations(_n_coins, _implementations)\r\n\r\n\r\n@external\r\ndef set_gauge_implementation(_target: address, _gauge_implementation: address):\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    Factory(_target).set_gauge_implementation(_gauge_implementation)\r\n\r\n\r\n@external\r\ndef set_fee_receiver(_target: address, _base_pool: address, _fee_receiver: address):\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    Factory(_target).set_fee_receiver(_base_pool, _fee_receiver)\r\n\r\n\r\n@external\r\ndef set_factory_manager(_target: address, _manager: address):\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin], \"Access denied\"\r\n    Factory(_target).set_manager(_manager)\r\n\r\n\r\n@external\r\ndef set_gauge_manager(_manager: address):\r\n    \"\"\"\r\n    @notice Set the manager\r\n    @dev Callable by the admin or existing manager\r\n    @param _manager Manager address\r\n    \"\"\"\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin, self.gauge_manager], \"Access denied\"\r\n\r\n    self.gauge_manager = _manager\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(_target: address, _new_admin: address):\r\n    \"\"\"\r\n    @notice Transfer ownership of `_target` to `_new_admin`\r\n    @param _target `Factory` deployment address\r\n    @param _new_admin New admin address\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin  # dev: admin only\r\n\r\n    Factory(_target).commit_transfer_ownership(_new_admin)\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership(_target: address):\r\n    \"\"\"\r\n    @notice Accept a pending ownership transfer\r\n    @param _target `Factory` deployment address\r\n    \"\"\"\r\n    Factory(_target).accept_transfer_ownership()\r\n\r\n\r\n@external\r\ndef set_killed(_gauge: address, _is_killed: bool):\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin]\r\n    Gauge(_gauge).set_killed(_is_killed)\r\n\r\n\r\n@external\r\ndef add_reward(_gauge: address, _reward_token: address, _distributor: address):\r\n    assert msg.sender in [self.ownership_admin, self.gauge_manager]\r\n    Gauge(_gauge).add_reward(_reward_token, _distributor)\r\n\r\n\r\n@external\r\ndef set_reward_distributor(_gauge: address, _reward_token: address, _distributor: address):\r\n    assert msg.sender in [self.ownership_admin, self.gauge_manager]\r\n    Gauge(_gauge).set_reward_distributor(_reward_token, _distributor)","ABI":"[{\"name\":\"CommitAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"parameter_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"parameter_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_ownership_admin\",\"type\":\"address\"},{\"name\":\"_parameter_admin\",\"type\":\"address\"},{\"name\":\"_emergency_admin\",\"type\":\"address\"},{\"name\":\"_gauge_manager\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_set_admins\",\"inputs\":[{\"name\":\"_o_admin\",\"type\":\"address\"},{\"name\":\"_p_admin\",\"type\":\"address\"},{\"name\":\"_e_admin\",\"type\":\"address\"}],\"outputs\":[],\"gas\":110403},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"apply_set_admins\",\"inputs\":[],\"outputs\":[],\"gas\":116295},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"ramp_A\",\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"},{\"name\":\"_future_A\",\"type\":\"uint256\"},{\"name\":\"_future_time\",\"type\":\"uint256\"}],\"outputs\":[],\"gas\":65004},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"stop_ramp_A\",\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"}],\"outputs\":[],\"gas\":67501},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"add_base_pool\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_base_pool\",\"type\":\"address\"},{\"name\":\"_fee_receiver\",\"type\":\"address\"},{\"name\":\"_asset_type\",\"type\":\"uint256\"},{\"name\":\"_implementations\",\"type\":\"address[10]\"}],\"outputs\":[],\"gas\":9938},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_metapool_implementations\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_base_pool\",\"type\":\"address\"},{\"name\":\"_implementations\",\"type\":\"address[10]\"}],\"outputs\":[],\"gas\":9781},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_plain_implementations\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_n_coins\",\"type\":\"uint256\"},{\"name\":\"_implementations\",\"type\":\"address[10]\"}],\"outputs\":[],\"gas\":9654},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_gauge_implementation\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_gauge_implementation\",\"type\":\"address\"}],\"outputs\":[],\"gas\":8066},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_fee_receiver\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_base_pool\",\"type\":\"address\"},{\"name\":\"_fee_receiver\",\"type\":\"address\"}],\"outputs\":[],\"gas\":8265},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_factory_manager\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_manager\",\"type\":\"address\"}],\"outputs\":[],\"gas\":10677},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_gauge_manager\",\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"outputs\":[],\"gas\":42817},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_new_admin\",\"type\":\"address\"}],\"outputs\":[],\"gas\":8136},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"outputs\":[],\"gas\":5741},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_killed\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_is_killed\",\"type\":\"bool\"}],\"outputs\":[],\"gas\":10741},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"add_reward\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_reward_token\",\"type\":\"address\"},{\"name\":\"_distributor\",\"type\":\"address\"}],\"outputs\":[],\"gas\":10940},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_reward_distributor\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_reward_token\",\"type\":\"address\"},{\"name\":\"_distributor\",\"type\":\"address\"}],\"outputs\":[],\"gas\":10970},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3006},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"parameter_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3036},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3066},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3096},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_parameter_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3126},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3156},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"gauge_manager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3186}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.3.0","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000040907540d8a6c65c637785e8f8b742ae6b0b99680000000000000000000000004eeb3ba4f221ca16ed4a0cc7254e2e32df948c5f000000000000000000000000467947ee34af926cf1dcac093870f613c96b1e0c0000000000000000000000007eeac6cddbd1d0b8af061742d41877d7f707289a","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}