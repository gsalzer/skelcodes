{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/AddressRegistry.sol\": {\r\n      \"content\": \"//██████╗  █████╗ ██╗      █████╗ ██████╗ ██╗███╗   ██╗\\n//██╔══██╗██╔══██╗██║     ██╔══██╗██╔══██╗██║████╗  ██║\\n//██████╔╝███████║██║     ███████║██║  ██║██║██╔██╗ ██║\\n//██╔═══╝ ██╔══██║██║     ██╔══██║██║  ██║██║██║╚██╗██║\\n//██║     ██║  ██║███████╗██║  ██║██████╔╝██║██║ ╚████║\\n//╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝╚═╝  ╚═══╝\\n                                                     \\n\\npragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\n\\nimport \\\"./utils/Admin.sol\\\";\\n\\n/** @title Paladin AddressRegistry  */\\n/// @author Paladin\\ncontract AddressRegistry is Admin {\\n\\n    address private controller;\\n\\n    address private loanToken;\\n\\n    //underlying -> palPool\\n    mapping(address => address) private palPools;\\n\\n    //underlying -> palToken\\n    mapping(address => address) private palTokens;\\n\\n    //palPool -> palToken\\n    mapping(address => address) private palTokensByPool;\\n\\n\\n\\n    constructor(\\n        address _controller,\\n        address _loanToken,\\n        address[] memory _underlyings,\\n        address[] memory _pools,\\n        address[] memory _tokens\\n    ) {\\n        admin = msg.sender;\\n\\n        controller = _controller;\\n        loanToken = _loanToken;\\n\\n        for(uint i = 0; i < _pools.length; i++){\\n            palPools[_underlyings[i]] = _pools[i];\\n            palTokens[_underlyings[i]] = _tokens[i];\\n            palTokensByPool[_pools[i]] = _tokens[i];\\n        }\\n    }\\n\\n\\n    /**\\n    * @notice Get the Paladin controller address\\n    * @return address : address of the controller\\n    */\\n    function getController() external view returns(address){\\n        return controller;\\n    }\\n\\n    /**\\n    * @notice Get the PalLoanToken contract address\\n    * @return address : address of the PalLoanToken contract\\n    */\\n    function getPalLoanToken() external view returns(address){\\n        return loanToken;\\n    }\\n\\n    /**\\n    * @notice Return the PalPool linked to a given ERC20 token\\n    * @param _underlying Address of the ERC20 underlying for the PalPool\\n    * @return address : address of the PalPool\\n    */\\n    function getPool(address _underlying) external view returns(address){\\n        return palPools[_underlying];\\n    }\\n\\n    /**\\n    * @notice Return the PalToken linked to a given ERC20 token\\n    * @param _underlying Address of the ERC20 underlying for the PalToken\\n    * @return address : address of the PalToken\\n    */\\n    function getToken(address _underlying) external view returns(address){\\n        return palTokens[_underlying];\\n    }\\n\\n    /**\\n    * @notice Return the PalToken linked to a given PalPool\\n    * @param _pool Address of the PalToken linked to the PalPool\\n    * @return address : address of the PalToken\\n    */\\n    function getTokenByPool(address _pool) external view returns(address){\\n        return palTokensByPool[_pool];\\n    }\\n\\n    /**\\n    * @notice Update the Paladin Controller address\\n    * @param _newAddress Address of the new Controller\\n    */\\n    function _setController(address _newAddress) external adminOnly {\\n        controller = _newAddress;\\n    }\\n\\n    /**\\n    * @notice Add a new Pool to the Registry\\n    * @dev Admin fucntion : Add a new PalPool & PalToken in the registry\\n    * @param _underlying Pool underlying ERC20 address\\n    * @param _pool PalPool address\\n    * @param _token PalToken address\\n    */\\n    function _setPool(address _underlying, address _pool, address _token) external adminOnly {\\n        palPools[_underlying] = _pool;\\n        palTokens[_underlying] = _token;\\n        palTokensByPool[_pool] = _token;\\n    }\\n\\n}\"\r\n    },\r\n    \"contracts/utils/Admin.sol\": {\r\n      \"content\": \"pragma solidity ^0.7.6;\\n//SPDX-License-Identifier: MIT\\n\\n\\n/** @title Admin contract  */\\n/// @author Paladin\\ncontract Admin {\\n\\n    /** @notice (Admin) Event when the contract admin is updated */\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /** @dev Admin address for this contract */\\n    address payable internal admin;\\n    \\n    modifier adminOnly() {\\n        //allows only the admin of this contract to call the function\\n        require(msg.sender == admin, '1');\\n        _;\\n    }\\n\\n        /**\\n    * @notice Set a new Admin\\n    * @dev Changes the address for the admin parameter\\n    * @param _newAdmin address of the new Controller Admin\\n    */\\n    function setNewAdmin(address payable _newAdmin) external adminOnly {\\n        address _oldAdmin = admin;\\n        admin = _newAdmin;\\n\\n        emit NewAdmin(_oldAdmin, _newAdmin);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 25000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_loanToken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_underlyings\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"_setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"_setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPalLoanToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getTokenByPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setNewAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AddressRegistry","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"25000","ConstructorArguments":"000000000000000000000000bbfa3b05b2dae65fb4c05ec7f1598793a4bc062300000000000000000000000055da1cbd77b1c3b2d8bfe0f5fdf63d684b49f8a500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000c00e94cb662c3520282e6f5717214004a7f268880000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae90000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5000000000000000000000000000000000000000000000000000000000000000400000000000000000000000050be5fe4de4efc3a0adac65872548369720554230000000000000000000000007835d976516f82ca8a3ed2942c4c6f9c4e44bb74000000000000000000000000414b947b37ee7e716ab11c72979f6d002417233e000000000000000000000000cdc3dd86c99b58749de0f697dfc1abe4be22216d00000000000000000000000000000000000000000000000000000000000000040000000000000000000000008f5c4486fd172a63f6e7f51902bb37cd5cd010b40000000000000000000000007ffad0da714f4595fc9c48fe789d76b9137d72450000000000000000000000009757b78e2c72e3192786597b80c90ec9bf78570600000000000000000000000024e79e946dea5482212c38aab2d0782f04cdb0e0","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}