{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.4;\r\n\r\n// import \"./PegExchanger.sol\";\r\n\r\ncontract PegExchangerDripper {\r\n\r\n    IERC20 public constant TRIBE = IERC20(0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B);\r\n    address public constant CORE = 0x8d5ED43dCa8C2F7dFB20CF7b53CC7E593635d7b9;\r\n    address public constant PEG_EXCHANGER = 0xc09BB5ECf865e6f69Fe62A43c27f036A426909f7;\r\n    \r\n    uint256 public constant THRESHOLD = 5_000_000e18; // 5M TRIBE cutoff for dripping\r\n    uint256 public constant DRIP_AMOUNT = 20_000_000e18; // drip 20M TRIBE\r\n \r\n    function drip() external {\r\n        require(!PegExchanger(PEG_EXCHANGER).isExpired(), \"expired\"); // ensure pegExchanger live\r\n        require(TRIBE.balanceOf(PEG_EXCHANGER) <= THRESHOLD, \"over threshold\"); // ensure under drip threshold\r\n        TRIBE.transfer(PEG_EXCHANGER, DRIP_AMOUNT);\r\n    }\r\n\r\n    function isEligible() external view returns (bool) {\r\n        return !PegExchanger(PEG_EXCHANGER).isExpired() && TRIBE.balanceOf(PEG_EXCHANGER) <= THRESHOLD;\r\n    }\r\n\r\n    function recover() external {\r\n        require(PegExchanger(PEG_EXCHANGER).isExpired(), \"still live\"); // ensure pegExchanger is expired\r\n        TRIBE.transfer(CORE, TRIBE.balanceOf(address(this))); // transfer everything back to treasury\r\n    }\r\n}\r\n\r\ninterface PegExchanger {\r\n    function isExpired() external view returns (bool);\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address to, uint amount) external returns(bool);\r\n}","ABI":"[{\"inputs\":[],\"name\":\"CORE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DRIP_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PEG_EXCHANGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRIBE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PegExchangerDripper","CompilerVersion":"v0.8.10+commit.fc410830","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1e1ebf5c2d8b5083419a4059642ced2f9668767983842213831516fc64791e05"}]}