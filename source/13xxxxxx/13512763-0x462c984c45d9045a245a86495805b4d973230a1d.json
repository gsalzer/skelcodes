{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity >=0.7.0 <0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ninterface ISharesTimeLock {\r\n    function depositByMonths(uint256 amount, uint256 months, address receiver) external;\r\n}\r\n\r\ncontract Incetivizer {\r\n    \r\n    uint256 constant MONTHS = 36;\r\n    address public immutable multisig = address(0x6458A23B020f489651f2777Bd849ddEd34DfCcd2);\r\n    address public immutable DOUGH = address(0xad32A8e6220741182940c5aBF610bDE99E737b2D);\r\n    address public immutable veDOUGH = address(0xE6136F2e90EeEA7280AE5a0a8e6F48Fb222AF945);\r\n    address public immutable sharesTimelock = address(0x6Bd0D8c8aD8D3F1f97810d5Cc57E9296db73DC45);\r\n\r\n    modifier onlyMultisig() {\r\n        require(msg.sender == multisig, \"Not multisig\");\r\n        _;\r\n    }\r\n    \r\n    function incetivizeHARD(address[] calldata recipients, uint256[] calldata values) external onlyMultisig {\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            total += values[i];\r\n            \r\n        require(IERC20(DOUGH).transferFrom(multisig, address(this), total));\r\n        \r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            ISharesTimeLock(sharesTimelock).depositByMonths(values[i], MONTHS, recipients[i]);\r\n    }\r\n    \r\n    function withdrawStuckFunds(address _token, address _receiver, uint256 _amount) public onlyMultisig {\r\n        if (_token == 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE) {\r\n            payable(_receiver).transfer(_amount);\r\n        } else {\r\n            IERC20(_token).transfer(multisig, _amount);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"DOUGH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"incetivizeHARD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTimelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veDOUGH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStuckFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Incetivizer","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://622f21e76cd9ecce6716dc2827d230b35a526a035cac0f50b7bc92e759203a27"}]}