{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface erc20 {\r\n    function approve(address, uint) external returns (bool);\r\n    function transfer(address, uint) external returns (bool);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\ninterface cy20 {\r\n    function redeemUnderlying(uint) external returns (uint);\r\n    function mint(uint) external returns (uint);\r\n    function borrow(uint) external returns (uint);\r\n    function repayBorrow(uint) external returns (uint);\r\n}\r\n\r\ninterface registry {\r\n    function cy(address) external view returns (address);\r\n    function price(address) external view returns (uint);\r\n}\r\n\r\ncontract ibAMM {\r\n    \r\n    erc20 constant eurs = erc20(0xdB25f211AB05b1c97D595516F45794528a807ad8);\r\n    erc20 constant ibeur = erc20(0x96E61422b6A9bA0e068B6c5ADd4fFaBC6a4aae27);\r\n    \r\n    cy20 constant cy_eurs = cy20(0xA8caeA564811af0e92b1E044f3eDd18Fa9a73E4F);\r\n    cy20 constant ib_eur = cy20(0x00e5c0774A5F065c285068170b20393925C84BF3);\r\n    \r\n    uint constant decimals = 10**(18-2);\r\n    \r\n    bool public breaker = false;\r\n    \r\n    constructor() {\r\n        erc20(eurs).approve(address(cy_eurs), type(uint).max);\r\n        erc20(ibeur).approve(address(ib_eur), type(uint).max);\r\n    }\r\n    \r\n    function buy(uint amount) external returns (bool) {\r\n        _safeTransferFrom(address(eurs), msg.sender, address(this), amount);\r\n        require(cy_eurs.mint(amount) == 0, \"ib: supply failed\");\r\n        uint _out = amount*decimals;\r\n        require(ib_eur.borrow(_out) == 0, 'ib: borrow failed');\r\n        _safeTransfer(address(ibeur), msg.sender, _out);\r\n        return true;\r\n    }\r\n    \r\n    function sell(uint amount) external returns (bool) {\r\n        uint _out = amount / decimals;\r\n        _safeTransferFrom(address(ibeur), msg.sender, address(this), amount);\r\n        require(cy_eurs.redeemUnderlying(_out) == 0, \"ib: supply failed\");\r\n        require(ib_eur.repayBorrow(amount) == 0, 'ib: repay failed');\r\n        _safeTransfer(address(eurs), msg.sender, _out);\r\n        return true;\r\n    }\r\n\r\n    function _safeTransfer(address token, address to, uint256 value) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(erc20.transfer.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\r\n    }\r\n\r\n    function _safeTransferFrom(address token, address from, address to, uint256 value) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(erc20.transferFrom.selector, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"breaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ibAMM","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f01c39fa6b3158ded525530c3f6121b2362353e51f4cd41c659fe7b4ff01b0c9"}]}