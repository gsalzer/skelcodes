{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Gen1FreeMinter.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: NONE\\npragma solidity ^0.8.7;\\n\\ncontract NFTContract {\\n    function restrictedMint(address, uint256) public {}\\n    function ownerOf(uint256 tokenId) external view returns (address owner) {}\\n}\\n\\n// Contract to give free mints to owners of first 256 goofballs\\ncontract Gen1FreeMinter {\\n    NFTContract private delegate;\\n    // yay our first drop exactly fits in one EVM variable    \\n    uint256 mintsUsed;\\n\\n    constructor(address nftContract) {\\n        delegate = NFTContract(nftContract);\\n        mintsUsed = 0;\\n    }\\n\\n    function freeMintFor(uint256[] memory id) public {\\n        // check that these ids haven't been used yet\\n        uint256 newState = mintsUsed;\\n        for (uint256 i = 0; i < id.length; i++) {\\n            require(id[i] >= 1 && id[i] <= 256, \\\"id out of range\\\");\\n\\n            uint256 mask = (1 << (id[i] - 1));\\n            require((newState & mask) == 0, \\\"free mint already used\\\");\\n            newState = (newState | mask);\\n            // check that the sender actually owns this id\\n            require(delegate.ownerOf(id[i]) == msg.sender, \\\"id not owned\\\");\\n        }\\n\\n        mintsUsed = newState;\\n\\n        // award free mints\\n        delegate.restrictedMint(msg.sender, id.length);\\n    }\\n\\n    function isMintUsed(uint256 id) public view returns (bool) {\\n        require(id >= 1 && id <= 256, \\\"id out of range\\\");\\n        uint256 mask = (1 << (id - 1));\\n        return (mintsUsed & mask) != 0;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"id\",\"type\":\"uint256[]\"}],\"name\":\"freeMintFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isMintUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Gen1FreeMinter","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"1","Runs":"1000","ConstructorArguments":"000000000000000000000000f1987f66553460a4f0730ce17484f5a9a2e883a6","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}