{"status":"1","message":"OK","result":[{"SourceCode":"// File: RockHelper.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract EtherRock {\r\n    function buyRock (uint rockNumber) virtual public payable;\r\n    function sellRock (uint rockNumber, uint price) virtual public;\r\n    function giftRock (uint rockNumber, address receiver) virtual public;\r\n    function rocks(uint rockNumber) virtual public view returns (address, bool, uint, uint);\r\n}\r\n\r\nabstract contract Wrapper {\r\n    function wrap(uint256 id) virtual public;\r\n    function createWarden() virtual public;\r\n    function wardens(address owner) virtual public view returns (address);\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual;\r\n}\r\n\r\ncontract RockHelper {\r\n  EtherRock rocks = EtherRock(0x37504AE0282f5f334ED29b4548646f887977b7cC);\r\n  Wrapper wrapper = Wrapper(0x39b780E8062CE299ab60ed3D48F447e97511a2eD);\r\n  address public warden;\r\n  \r\n  mapping (uint256 => address) public owners;\r\n  \r\n  constructor() {\r\n    wrapper.createWarden(); \r\n    warden = wrapper.wardens(address(this));\r\n  }\r\n  \r\n  function register(uint256 id) public {\r\n    (address owner,,,) = rocks.rocks(id);\r\n    require(id > 99 && id < 10000);\r\n    require(owner != warden);\r\n    require(owner != address(wrapper));\r\n    owners[id] = owner;\r\n  }\r\n  \r\n  function registerMany(uint256[] memory ids) public {\r\n    for (uint256 i = 0; i < ids.length; i++) {\r\n      register(ids[i]); \r\n    }\r\n  }\r\n  \r\n  function wrap(uint256 id) public {\r\n    address owner = owners[id];\r\n    require(owner != address(0));\r\n    wrapper.wrap(id);\r\n    wrapper.transferFrom(address(this), owner, id);\r\n  }\r\n  \r\n  function wrapMany(uint256[] memory ids) public {\r\n    for (uint256 i = 0; i < ids.length; i++) {\r\n      wrap(ids[i]); \r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"registerMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"warden\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"wrapMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RockHelper","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://94be0d5424957fabe2a3007a5c43b24e2d6eb5eedd6b8d93ad29e933c4345ed5"}]}