{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"DebtLockerInitializer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity =0.8.7;\\n\\ninterface IMapleGlobalsLike {\\n\\n   function isValidCollateralAsset(address asset_) external view returns (bool isValid_);\\n\\n   function isValidLiquidityAsset(address asset_) external view returns (bool isValid_);\\n\\n}\\n\\ninterface IMapleLoanLike {\\n\\n    function collateralAsset() external view returns (address collateralAsset_);\\n\\n    function fundsAsset() external view returns (address fundsAsset_);\\n\\n    function principalRequested() external view returns (uint256 principalRequested_);\\n\\n}\\n\\ninterface IPoolFactoryLike {\\n\\n    function globals() external pure returns (address globals_);\\n\\n}\\n\\ninterface IPoolLike {\\n\\n    function superFactory() external view returns (address superFactory_);\\n\\n}\\n\\n/// @title DebtLockerInitializer is intended to initialize the storage of a DebtLocker proxy.\\ninterface IDebtLockerInitializer {\\n\\n    function encodeArguments(address loan_, address pool_) external pure returns (bytes memory encodedArguments_);\\n\\n    function decodeArguments(bytes calldata encodedArguments_) external pure returns (address loan_, address pool_);\\n\\n}\\n\\n/// @title DebtLockerStorage maps the storage layout of a DebtLocker.\\ncontract DebtLockerStorage {\\n\\n    address internal _liquidator;\\n    address internal _loan;\\n    address internal _pool;\\n\\n    bool internal _repossessed;\\n\\n    uint256 internal _allowedSlippage;\\n    uint256 internal _amountRecovered;\\n    uint256 internal _fundsToCapture;\\n    uint256 internal _minRatio;\\n    uint256 internal _principalRemainingAtLastClaim;\\n\\n}\\n\\n/// @title DebtLockerInitializer is intended to initialize the storage of a DebtLocker proxy.\\ncontract DebtLockerInitializer is IDebtLockerInitializer, DebtLockerStorage {\\n\\n    function encodeArguments(address loan_, address pool_) external pure override returns (bytes memory encodedArguments_) {\\n        return abi.encode(loan_, pool_);\\n    }\\n\\n    function decodeArguments(bytes calldata encodedArguments_) public pure override returns (address loan_, address pool_) {\\n        ( loan_, pool_ ) = abi.decode(encodedArguments_, (address, address));\\n    }\\n\\n    fallback() external {\\n        ( address loan_, address pool_ ) = decodeArguments(msg.data);\\n\\n        IMapleGlobalsLike globals = IMapleGlobalsLike(IPoolFactoryLike(IPoolLike(pool_).superFactory()).globals());\\n\\n        require(globals.isValidCollateralAsset(IMapleLoanLike(loan_).collateralAsset()), \\\"DL:I:INVALID_COLLATERAL_ASSET\\\");\\n        require(globals.isValidLiquidityAsset(IMapleLoanLike(loan_).fundsAsset()),       \\\"DL:I:INVALID_FUNDS_ASSET\\\");\\n\\n        _loan = loan_;\\n        _pool = pool_;\\n\\n        _principalRemainingAtLastClaim = IMapleLoanLike(loan_).principalRequested();\\n    }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedArguments_\",\"type\":\"bytes\"}],\"name\":\"decodeArguments\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"loan_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"loan_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"}],\"name\":\"encodeArguments\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedArguments_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"DebtLockerInitializer","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"none"}]}