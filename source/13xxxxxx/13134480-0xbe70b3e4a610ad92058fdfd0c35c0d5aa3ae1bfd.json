{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/hashGenerator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract hashGenerator {\\r\\n\\r\\n    /**\\r\\n     * Each hash uses python hashLib to generate sha256 hash of each face of Mars Cube.\\r\\n     * Resultant provenance hash is generated using keccak256 onchain.\\r\\n     *\\r\\n     * The order of the hash follows the naming order for tokenId. E,A,B,D,C,F. each face with 1024 plots.\\r\\n     * token 0-1024 are in face E, the next 1024 face A, and so on.\\r\\n     */\\r\\n\\r\\n    string a = '7fdea2cc474b869ecb2282a7ecbf281aa83951ba921358d1eaef06ba49e1ce45';\\r\\n    string b = '23eaf503065314271a4008e8eff08c543b3d2fa2eec15ec9629fe84b75e62232';\\r\\n    string c = '5f1e04adb56035960c009b96d8651808ff5d91fb5ecc92634c3b1092ee7b5263';\\r\\n    string d = '8ee7f810690e5e16dd7cb0b7ba2e4c6ef0350784a3662ea1a8a262cc94ae4124';\\r\\n    string e = '62d39e9b5a2726cc0fdd44c6424b5af811e59e53441d28b2042c41c142ddaefc';\\r\\n    string f = '1824f3f022aa2639052ba487215fc2837df18ccaad2e0382c58ceb85ac97d10a';\\r\\n\\r\\n    function getHash() public view returns(bytes32) {\\r\\n        return bytes32(\\r\\n            keccak256(\\r\\n                abi.encode(e,a,b,d,c,f)\\r\\n                )\\r\\n                );\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"hashGenerator","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}