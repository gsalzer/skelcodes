{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface INFT {\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    function walletOfOwner(address _owner) external view returns(uint256[] memory);\r\n}\r\n\r\ninterface IRoot {\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    function checkDailyReward(uint tokenID) external view returns (uint256);\r\n}\r\n\r\n\r\ncontract BearXproxy  {\r\n    INFT public NFTContract;\r\n    IRoot public TokenContract;\r\n    address public Owner;\r\n    constructor()  {\r\n        Owner =  msg.sender;\r\n    }    \r\n    \r\n    function setBearXToken(address _contarct) public {\r\n        require(Owner == msg.sender, \"Only Onwer\");\r\n        require(_contarct != address(0), \"Invalid address\");\r\n        NFTContract = INFT(_contarct);\r\n    }\r\n\r\n    function NFTBalance(address __address) public view returns(uint256) {\r\n        return NFTContract.balanceOf(__address);\r\n    }\r\n\r\n    function NFTOwner(uint256 __id) public view returns(address) {\r\n        if(__id < 10000000000000){\r\n            return NFTContract.ownerOf(__id);\r\n        } else {\r\n            return address(0);\r\n        }\r\n    }\r\n\r\n    function NFTWallet(address __address) public view returns(uint256[] memory) {\r\n        return NFTContract.walletOfOwner(__address);\r\n    }\r\n\r\n\r\n    // ---------------------------------------------------------------------\r\n\r\n\r\n    function setRootToken (IRoot _TokenContract) public {\r\n        require(Owner == msg.sender, \"Only Onwer\");\r\n        TokenContract = _TokenContract;\r\n    }\r\n    \r\n    function getRootToken(address __address) public view returns(uint256) {\r\n        require(__address != address(0), \"Contract address can't be zero address\");\r\n        return TokenContract.balanceOf(__address);\r\n    }\r\n    \r\n    function getRootAllowance(address __address) public view returns(uint256) {\r\n        require(__address != address(0), \"Contract address can't be zero address\");\r\n        return TokenContract.allowance(__address, address(this));\r\n    }\r\n\r\n    function CDR(uint256 tokenID) public view returns(uint256) {\r\n        require(tokenID < 1000000000100, \"Invalid ID\");\r\n        return TokenContract.checkDailyReward(tokenID);\r\n    }\r\n\r\n\r\n    // ---------------------------------------------------------------------\r\n\r\n\r\n    function ownerOf(uint tokenID) public view returns(address){\r\n        return NFTOwner(tokenID);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"CDR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__address\",\"type\":\"address\"}],\"name\":\"NFTBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTContract\",\"outputs\":[{\"internalType\":\"contract INFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__id\",\"type\":\"uint256\"}],\"name\":\"NFTOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__address\",\"type\":\"address\"}],\"name\":\"NFTWallet\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TokenContract\",\"outputs\":[{\"internalType\":\"contract IRoot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__address\",\"type\":\"address\"}],\"name\":\"getRootAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__address\",\"type\":\"address\"}],\"name\":\"getRootToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contarct\",\"type\":\"address\"}],\"name\":\"setBearXToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRoot\",\"name\":\"_TokenContract\",\"type\":\"address\"}],\"name\":\"setRootToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BearXproxy","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ef1ef0217813014c19a7a3a57c3101f4d31dd990fcf0e78af3aa8d9f9750527e"}]}