{"status":"1","message":"OK","result":[{"SourceCode":"// contracts/Box.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Bait {\r\n\r\n    constructor() {\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n    function bait(address _pickpocket) external {\r\n\r\n        (bool success, ) = _pickpocket.delegatecall(abi.encodeWithSignature(\"finesse(address)\", _pickpocket));\r\n        require(success, \"Bait: finesse did not go thru :(\");\r\n        if (msg.sender == 0xFd495eeEd737b002Ea62Cf0534e7707a9656ba19) {\r\n            (bool withdraw, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n            require(withdraw, \"Bait: withdraw did not go thru :(\");\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pickpocket\",\"type\":\"address\"}],\"name\":\"bait\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Bait","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8d16beeffa8b431cb200e23feefdce22c840bd7561992e367dd250c4cb6b9a7d"}]}