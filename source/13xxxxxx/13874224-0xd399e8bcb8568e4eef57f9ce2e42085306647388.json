{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\n/*---------------------------------------\r\nHedge USD (USDH)\r\nStable coin / Protocol Hedge Stable Finance\r\nSite: https://www.hedge.to\r\n-----------------------------------------*/\r\n\r\n\r\npragma solidity ^0.8.9;  // latest version\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256); \r\n\r\n    function balanceOf(address tokenOwner)\r\n        external\r\n        view\r\n        returns (uint256 balance);\r\n\r\n    function allowance(address tokenOwner, address spender)\r\n        external\r\n        view\r\n        returns (uint256 remaining);\r\n\r\n    function transfer(address to, uint256 tokens) external returns (bool success);\r\n\r\n    function approve(address spender, uint256 tokens)\r\n        external\r\n        returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokens\r\n    ) external returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(\r\n        address indexed tokenOwner,\r\n        address indexed spender,\r\n        uint256 tokens\r\n    );\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe Math Library\r\n// ----------------------------------------------------------------------------\r\ncontract SafeMath {\r\n    function safeAdd(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n\r\n    function safeMul(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n\r\n    function safeDiv(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract ERC20Token is IERC20, SafeMath {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals; // 18 decimals\r\n\r\n    uint256 public _totalSupply;\r\n    address public _owner;\r\n    address public _admin;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    constructor() {\r\n        name = \"Hedge USD\";\r\n        symbol = \"USDH\";\r\n        decimals = 18;\r\n        _totalSupply = 701408733 * 10**18;\r\n\r\n        _admin = 0x67dAd0E0Cd05612cC4A06B3c11eBAdD167e7c0C4; // admin account\r\n        \r\n        //_owner = msg.sender; // a record of the contract owner's address\r\n        _owner = _admin;\r\n\r\n        //balances[msg.sender] = _totalSupply;\r\n        balances[_admin] = _totalSupply;\r\n\r\n        //emit Transfer(address(0), msg.sender, _totalSupply);\r\n        emit Transfer(address(0), _admin, _totalSupply);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        // modifier - owner verification\r\n        require(_owner == msg.sender, \"ERC20: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;  // returns the address of the contract owner\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply - balances[address(0)];\r\n    }\r\n\r\n\r\n    /*\r\n    \"balanceOf\" function - returns the number of tokens belonging to the address (account).\r\n    \r\n    \"tokenOwner\" - token owner\r\n    */\r\n    function balanceOf(address tokenOwner)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 balance)\r\n    {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    /*\r\n    \"allowance\" function - The ERC-20 standard allows an address to give permission \r\n    to another address to receive tokens from it. This getter returns the remaining number \r\n    of tokens that are allowed to be spent on behalf of the owner. This function is a getter\r\n    and does not change the state of the contract\r\n    \r\n    \"tokenOwner\" - token owner\r\n    \"spender\" - spender of tokens\r\n    */\r\n    function allowance(address tokenOwner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 remaining)\r\n    {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    /*\r\n    \"approve\" function - sets the amount of allowance that is allowed \r\n    to be transferred from the balance of function caller\r\n    \r\n    \"spender\" - spender\r\n    \"tokens\" - amount of tokens\r\n    */\r\n    function approve(address spender, uint256 tokens)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        allowed[msg.sender][spender] = tokens;\r\n\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    /*\r\n    \"transfer\" function - moves tokens from the account \r\n    of one user that called the function to another account\r\n    \r\n    \"to\" - to where to transfer tokens\r\n    \"tokens\" - amount of tokens\r\n    */\r\n    function transfer(address to, uint256 tokens)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n \r\n    /*\r\n    \"transferFrom\" function - moves tokens from certain account \r\n    of one account that was given into the function to another \r\n    \r\n    \"from\" - from where to transfer tokens\r\n    \"to\" - to where to transfer tokens\r\n    \"tokens\" - amount of tokens\r\n    */\r\n    function transferFrom( \r\n        address from,\r\n        address to,\r\n        uint256 tokens\r\n    ) public override returns (bool success) {\r\n\r\n        balances[from] = safeSub(balances[from], tokens);\r\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    /* \r\n    \"burn\" function (only owner) - function for reduction\r\n    amount of total supply\r\n    \r\n    This function can only be called by contract owner,\r\n    \"onlyOwner()\" - this will be secured by this modifer\r\n\r\n    \"_value\" - amount of tokens to be burned\r\n    */\r\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(_value <= balances[msg.sender], \"ERC20: small balances\");\r\n\r\n        balances[msg.sender] = balances[msg.sender] - _value;\r\n        _totalSupply = _totalSupply - _value;\r\n\r\n        emit Transfer(msg.sender, address(0), _value);\r\n        return true;\r\n    }\r\n\r\n    /* \r\n    \"expand\" function (only owner) - function for adding\r\n    more tokens in total supply\r\n    \r\n    This function can only be called by contract owner,\r\n    \"onlyOwner()\" - this will be secured by this modifer\r\n\r\n    \"_value\" - amount of tokens to be add\r\n    */\r\n    function expand(uint256 _value) public onlyOwner returns (bool success) {\r\n        \r\n\r\n        balances[msg.sender] = balances[msg.sender] + _value;\r\n        _totalSupply = _totalSupply + _value;\r\n\r\n        emit Transfer(msg.sender, address(0), _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"expand\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ERC20Token","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0532e6b0c406bce8184334b7d2310b726e0e6f5edb1e9958baa78afa4e47ce4c"}]}