{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.6;\n\n\n\n// Part: IBetaConfig\n\ninterface IBetaConfig {\n  /// @dev Returns the risk level for the given asset.\n  function getRiskLevel(address token) external view returns (uint);\n\n  /// @dev Returns the rate of interest collected to be distributed to the protocol reserve.\n  function reserveRate() external view returns (uint);\n\n  /// @dev Returns the beneficiary to receive a portion interest rate for the protocol.\n  function reserveBeneficiary() external view returns (address);\n\n  /// @dev Returns the ratio of which the given token consider for collateral value.\n  function getCollFactor(address token) external view returns (uint);\n\n  /// @dev Returns the max amount of collateral to accept globally.\n  function getCollMaxAmount(address token) external view returns (uint);\n\n  /// @dev Returns max ltv of collateral / debt to allow a new position.\n  function getSafetyLTV(address token) external view returns (uint);\n\n  /// @dev Returns max ltv of collateral / debt to liquidate a position of the given token.\n  function getLiquidationLTV(address token) external view returns (uint);\n\n  /// @dev Returns the bonus incentive reward factor for liquidators.\n  function getKillBountyRate(address token) external view returns (uint);\n}\n\n// File: BetaConfig.sol\n\ncontract BetaConfig is IBetaConfig {\n  struct RiskConfig {\n    uint64 safetyLTV;\n    uint64 liquidationLTV;\n    uint64 killBountyRate;\n  }\n\n  event SetGovernor(address governor);\n  event SetPendingGovernor(address pendingGovernor);\n  event SetCollInfo(address indexed token, uint factor, uint maxAmount);\n  event SetRiskLevel(address indexed token, uint level);\n  event SetRiskConfig(\n    uint indexed level,\n    uint64 safetyLTV,\n    uint64 liquidationLTV,\n    uint64 killBountyRate\n  );\n  event SetReserveInfo(address indexed beneficiary, uint rate);\n\n  address public governor;\n  address public pendingGovernor;\n  address public override reserveBeneficiary;\n  uint public override reserveRate;\n\n  mapping(address => uint) public cFactors; // collateral factors\n  mapping(address => uint) public cMaxAmounts; // collateral max amounts\n  mapping(address => uint) public rLevels; // risk levels\n  mapping(uint => RiskConfig) public rConfigs; // risk configurations\n\n  constructor(address _reserveBeneficiary, uint _reserveRate) {\n    governor = msg.sender;\n    emit SetGovernor(msg.sender);\n    setReserveInfo(_reserveBeneficiary, _reserveRate);\n  }\n\n  /// @dev Sets the next governor, which will be in effect when they accept.\n  /// @param _pendingGovernor The next governor address.\n  function setPendingGovernor(address _pendingGovernor) external {\n    require(msg.sender == governor, 'setPendingGovernor/not-governor');\n    pendingGovernor = _pendingGovernor;\n    emit SetPendingGovernor(_pendingGovernor);\n  }\n\n  /// @dev Accepts to become the next governor. Must only be called by the pending governor.\n  function acceptGovernor() external {\n    require(msg.sender == pendingGovernor, 'acceptGovernor/not-pending-governor');\n    pendingGovernor = address(0);\n    governor = msg.sender;\n    emit SetGovernor(msg.sender);\n  }\n\n  /// @dev Updates collateral information of the given tokens.\n  function setCollInfos(\n    address[] calldata tokens,\n    uint[] calldata factors,\n    uint[] calldata maxAmounts\n  ) external {\n    require(msg.sender == governor, 'setCollInfos/not-governor');\n    require(tokens.length == factors.length, 'setCollInfos/bad-length');\n    require(tokens.length == maxAmounts.length, 'setCollInfos/bad-length');\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      require(factors[idx] <= 1e18, 'setCollInfos/bad-factor-value');\n      require(maxAmounts[idx] > 0, 'setCollInfos/bad-max-amount-value');\n      cFactors[tokens[idx]] = factors[idx];\n      cMaxAmounts[tokens[idx]] = maxAmounts[idx];\n      emit SetCollInfo(tokens[idx], factors[idx], maxAmounts[idx]);\n    }\n  }\n\n  /// @dev Sets the risk levels of the given tokens.\n  function setRiskLevels(address[] calldata tokens, uint[] calldata levels) external {\n    require(msg.sender == governor, 'setRiskLevels/not-governor');\n    require(tokens.length == levels.length, 'setRiskLevels/bad-length');\n    for (uint idx = 0; idx < tokens.length; idx++) {\n      rLevels[tokens[idx]] = levels[idx];\n      emit SetRiskLevel(tokens[idx], levels[idx]);\n    }\n  }\n\n  /// @dev Sets the risk configurations of the given levels.\n  function setRiskConfigs(uint[] calldata levels, RiskConfig[] calldata configs) external {\n    require(msg.sender == governor, 'setRiskConfigs/not-governor');\n    require(levels.length == configs.length, 'setRiskConfigs/bad-length');\n    for (uint idx = 0; idx < levels.length; idx++) {\n      require(configs[idx].safetyLTV <= 1e18, 'setRiskConfigs/bad-safety-ltv');\n      require(configs[idx].liquidationLTV <= 1e18, 'setRiskConfigs/bad-liquidation-ltv');\n      require(\n        configs[idx].safetyLTV < configs[idx].liquidationLTV,\n        'setRiskConfigs/inconsistent-ltv-values'\n      );\n      require(configs[idx].killBountyRate <= 1e18, 'setRiskConfigs/bad-kill-reward-factor');\n      rConfigs[levels[idx]] = configs[idx];\n      emit SetRiskConfig(\n        levels[idx],\n        configs[idx].safetyLTV,\n        configs[idx].liquidationLTV,\n        configs[idx].killBountyRate\n      );\n    }\n  }\n\n  /// @dev Sets the global reserve information.\n  function setReserveInfo(address _reserveBeneficiary, uint _reserveRate) public {\n    require(msg.sender == governor, 'setReserveInfo/not-governor');\n    require(_reserveRate < 1e18, 'setReserveInfo/bad-rate');\n    require(_reserveBeneficiary != address(0), 'setReserveInfo/bad-beneficiary');\n    reserveBeneficiary = _reserveBeneficiary;\n    reserveRate = _reserveRate;\n    emit SetReserveInfo(_reserveBeneficiary, _reserveRate);\n  }\n\n  /// @dev Returns the collateral factor of the given token. Must be greater than zero.\n  function getCollFactor(address _token) external view override returns (uint) {\n    uint factor = cFactors[_token];\n    require(factor > 0, 'getCollFactor/no-collateral-factor');\n    return factor;\n  }\n\n  /// @dev Returns the collateral max amount of the given token. Must be greater than zero.\n  function getCollMaxAmount(address _token) external view override returns (uint) {\n    uint maxAmount = cMaxAmounts[_token];\n    require(maxAmount > 0, 'getCollFactor/no-collateral-max-amount');\n    return maxAmount;\n  }\n\n  /// @dev Returns the risk level of the given token. Zero is the default value of all tokens.\n  function getRiskLevel(address _token) public view override returns (uint) {\n    uint level = rLevels[_token];\n    require(level != type(uint).max, 'getRiskLevel/bad-risk-level');\n    return level;\n  }\n\n  /// @dev Returns the safety LTV of the given token. Must be greater than zero.\n  function getSafetyLTV(address _token) external view override returns (uint) {\n    uint ltv = rConfigs[getRiskLevel(_token)].safetyLTV;\n    require(ltv > 0, 'getSafetyLTV/no-ltv');\n    return ltv;\n  }\n\n  /// @dev Returns the liquidation LTV of the given token. Must be greater than zero.\n  function getLiquidationLTV(address _token) external view override returns (uint) {\n    uint ltv = rConfigs[getRiskLevel(_token)].liquidationLTV;\n    require(ltv > 0, 'getLiquidationLTV/no-ltv');\n    return ltv;\n  }\n\n  /// @dev Returns the kill bounty rate of the given token. Must be greater than zero.\n  function getKillBountyRate(address _token) external view override returns (uint) {\n    uint rate = rConfigs[getRiskLevel(_token)].killBountyRate;\n    require(rate > 0, 'getKillBountyRate/no-rate');\n    return rate;\n  }\n}\n","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reserveRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"SetCollInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"SetGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingGovernor\",\"type\":\"address\"}],\"name\":\"SetPendingGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"SetReserveInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"safetyLTV\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"liquidationLTV\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"killBountyRate\",\"type\":\"uint64\"}],\"name\":\"SetRiskConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"SetRiskLevel\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cFactors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cMaxAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCollFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCollMaxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getKillBountyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLiquidationLTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRiskLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSafetyLTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rConfigs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"safetyLTV\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationLTV\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"killBountyRate\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rLevels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"factors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmounts\",\"type\":\"uint256[]\"}],\"name\":\"setCollInfos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pendingGovernor\",\"type\":\"address\"}],\"name\":\"setPendingGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reserveRate\",\"type\":\"uint256\"}],\"name\":\"setReserveInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"levels\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"safetyLTV\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationLTV\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"killBountyRate\",\"type\":\"uint64\"}],\"internalType\":\"struct BetaConfig.RiskConfig[]\",\"name\":\"configs\",\"type\":\"tuple[]\"}],\"name\":\"setRiskConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"levels\",\"type\":\"uint256[]\"}],\"name\":\"setRiskLevels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BetaConfig","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000038a466b5c0f1d09918fc8e795945bf3ad32d008000000000000000000000000000000000000000000000000002c68af0bb140000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}