{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/PassthroughETH.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ninterface IPCVDepositBalances {\\r\\n    \\r\\n    // ----------- Getters -----------\\r\\n    \\r\\n    /// @notice gets the effective balance of \\\"balanceReportedIn\\\" token if the deposit were fully withdrawn\\r\\n    function balance() external view returns (uint256);\\r\\n\\r\\n    /// @notice gets the token address in which this deposit returns its balance\\r\\n    function balanceReportedIn() external view returns (address);\\r\\n\\r\\n    /// @notice gets the resistant token balance and protocol owned fei of this deposit\\r\\n    function resistantBalanceAndFei() external view returns (uint256, uint256);\\r\\n}\\r\\n\\r\\n/// @title a PCV Deposit interface\\r\\n/// @author Fei Protocol\\r\\ninterface IPCVDeposit is IPCVDepositBalances {\\r\\n    // ----------- Events -----------\\r\\n    event Deposit(address indexed _from, uint256 _amount);\\r\\n\\r\\n    event Withdrawal(\\r\\n        address indexed _caller,\\r\\n        address indexed _to,\\r\\n        uint256 _amount\\r\\n    );\\r\\n\\r\\n    event WithdrawERC20(\\r\\n        address indexed _caller,\\r\\n        address indexed _token,\\r\\n        address indexed _to,\\r\\n        uint256 _amount\\r\\n    );\\r\\n\\r\\n    event WithdrawETH(\\r\\n        address indexed _caller,\\r\\n        address indexed _to,\\r\\n        uint256 _amount\\r\\n    );\\r\\n\\r\\n    // ----------- State changing api -----------\\r\\n\\r\\n    function deposit() external;\\r\\n\\r\\n    // ----------- PCV Controller only state changing api -----------\\r\\n\\r\\n    function withdraw(address to, uint256 amount) external;\\r\\n    function withdrawERC20(address token, address to, uint256 amount) external;\\r\\n    function withdrawETH(address payable to, uint256 amount) external;\\r\\n}\\r\\n\\r\\ncontract AavePassthroughETH {\\r\\n    address payable constant target = payable(0x5B86887e171bAE0C2C826e87E34Df8D558C079B9);\\r\\n    function deposit(uint256 _amount) external payable {\\r\\n        (bool success, ) = target.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n        IPCVDeposit(target).deposit();\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract CompoundPassthroughETH {\\r\\n    address payable constant target = payable(0x4fCB1435fD42CE7ce7Af3cB2e98289F79d2962b3);\\r\\n    function deposit(uint256 _amount) external payable {\\r\\n        (bool success, ) = target.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n        IPCVDeposit(target).deposit();\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"AavePassthroughETH","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}