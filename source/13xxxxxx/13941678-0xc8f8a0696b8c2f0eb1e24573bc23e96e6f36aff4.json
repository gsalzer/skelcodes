{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/LootLibrarium.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\n\\n/*\\n┬  ┌─┐┌─┐┌┬┐\\n│  │ ││ │ │ \\n┴─┘└─┘└─┘ ┴ \\n┬  ┬┌┐ ┬─┐┌─┐┬─┐┬┬ ┬┌┬┐\\n│  │├┴┐├┬┘├─┤├┬┘││ ││││\\n┴─┘┴└─┘┴└─┴ ┴┴└─┴└─┘┴ ┴\\n\\nAn unofficial collection of passages and recordings\\nthat attempt to detail one incarnation of the\\ndecentralized Lootverse.\\n\\nPUBLIC DOMAIN. Use in any way that you want. \\nFeel free to remix, reuse, or ignore entirely.\\n*/\\n\\npragma solidity^0.8.1;\\n\\ncontract LootLibrarium {\\n    event Record(string indexed topic, string indexed content);\\n    event Revoke(string indexed topic);\\n    \\n    address public owner;\\n    \\n    constructor() {\\n        owner = msg.sender;\\n    }\\n    \\n    function record(string memory topic, string memory content) public {\\n        // records a topic\\n        // if a topic is re-recorded it should be treated as an edit or update\\n        require(msg.sender == owner, \\\"LootLibrarium: not owner\\\");\\n        emit Record(topic, content);\\n    }\\n\\n    function revoke(string memory topic) public {\\n        // revokes a topic, should be treated as a delete\\n        require(msg.sender == owner, \\\"LootLibrarium: not owner\\\");\\n        emit Revoke(topic);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"Record\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LootLibrarium","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}