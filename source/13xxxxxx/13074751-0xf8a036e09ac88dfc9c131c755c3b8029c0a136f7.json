{"status":"1","message":"OK","result":[{"SourceCode":"// File contracts/IAMB.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\ninterface IAMB {\r\n    function requireToPassMessage(address _contract, bytes calldata _data, uint256 _gas) external returns (bytes32);\r\n    function messageSender() external view returns (address);\r\n    function maxGasPerTx() external view returns (uint256);\r\n    function messageSourceChainId() external view returns (bytes32);\r\n    function messageId() external view returns (bytes32);\r\n}\r\n\r\n\r\n// File contracts/IPOH.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\ninterface IPOH {\r\n    function isRegistered(address _submissionID) external view returns (bool);\r\n}\r\n\r\n\r\n// File contracts/POHBridge.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\ninterface IHomePOH {\r\n    function updateProfile(address _human, bool _isRegistered) external;\r\n    function submitHash(bytes32 _dataHash) external;\r\n}\r\n\r\ncontract POHBridge {\r\n    \r\n    IAMB public amb;\r\n    address public homePOH;\r\n    IPOH public poh;\r\n\r\n    constructor(IPOH _poh, IAMB _amb, address _homePOH) public {\r\n        poh = _poh;\r\n        amb = _amb;\r\n        homePOH = _homePOH;\r\n    }\r\n    \r\n    function updateProfile(address _human) external {\r\n        bool isRegistered = poh.isRegistered(_human);\r\n        bytes4 functionSelector = IHomePOH(0).updateProfile.selector;\r\n        bytes memory data = abi.encodeWithSelector(functionSelector, _human, isRegistered);\r\n        amb.requireToPassMessage(homePOH, data, amb.maxGasPerTx());\r\n    }\r\n    \r\n    function updateBatch(address[] calldata _humans) external {\r\n        IPOH _poh = poh;\r\n        uint batchSize = _humans.length;\r\n        bool[] memory isRegistered = new bool[](batchSize);\r\n        for (uint i = 0; i < batchSize; i++) {\r\n            isRegistered[i] = _poh.isRegistered(_humans[i]);\r\n        }\r\n\r\n        bytes32 dataHash = keccak256(abi.encodePacked(_humans, isRegistered));\r\n        bytes4 functionSelector = IHomePOH(0).submitHash.selector;\r\n        bytes memory data = abi.encodeWithSelector(functionSelector, dataHash);\r\n        amb.requireToPassMessage(homePOH, data, amb.maxGasPerTx());\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IPOH\",\"name\":\"_poh\",\"type\":\"address\"},{\"internalType\":\"contract IAMB\",\"name\":\"_amb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_homePOH\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"amb\",\"outputs\":[{\"internalType\":\"contract IAMB\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"homePOH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poh\",\"outputs\":[{\"internalType\":\"contract IPOH\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_humans\",\"type\":\"address[]\"}],\"name\":\"updateBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_human\",\"type\":\"address\"}],\"name\":\"updateProfile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"POHBridge","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c5e9ddebb09cd64dfacab4011a0d5cedaf7c9bdb0000000000000000000000004c36d2919e407f0cc2ee3c993ccf8ac26d9ce64e0000000000000000000000004023395c3bb30cb6288d4ed722369c2a510d377a","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://e9d042585e78e129d1604f3ba9d72f314fb6b66cdeb97014c6b77385a9de148a"}]}