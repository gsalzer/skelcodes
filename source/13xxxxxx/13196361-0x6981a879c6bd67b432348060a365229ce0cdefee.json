{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IERC20{\r\n    string public symbol;\r\n    string public name;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract timelockTeam {\r\n    // using SafeERC20 for IERC20;\r\n\r\n    // ERC20 basic token contract being held\r\n    IERC20 private _token;\r\n\r\n    // beneficiary of tokens after they are released\r\n    address private _beneficiary_m;\r\n    address private _beneficiary_s;\r\n\r\n    // timestamp when token release is enabled\r\n    uint256 private _releaseTime;\r\n    \r\n    uint256 private releaseCount = 0;\r\n    uint private releaseQty = 6250000000000000000000000;\r\n    uint private stepTime = 2592000;\r\n\r\n    constructor (IERC20 token, address beneficiary_m, address beneficiary_s, uint256 releaseTime) public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(releaseTime > block.timestamp, 'release time is before');\r\n        _token = token;\r\n        _beneficiary_m = beneficiary_m;\r\n        _beneficiary_s = beneficiary_s;\r\n        _releaseTime = releaseTime;\r\n    }\r\n\r\n    /**\r\n     * @return the token being held.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the beneficiary of the tokens.\r\n     */\r\n    function beneficiary() public view returns (address,address) {\r\n        return (_beneficiary_m, _beneficiary_s);\r\n    }\r\n\r\n    /**\r\n     * @return the time when the tokens are released.\r\n     */\r\n    function releaseTime() public view returns (uint256) {\r\n        return _releaseTime;\r\n    }\r\n    \r\n    /**\r\n     * @return the time when the tokens are released.\r\n     */\r\n    function getReleaseCount() public view returns (uint256) {\r\n        return releaseCount;\r\n    }\r\n    \r\n    /**\r\n     * @return this contract balance\r\n     */\r\n    function balance() public view returns (uint) {\r\n        \r\n        return _token.balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers tokens held by timelock to beneficiary.\r\n     */\r\n    function release() public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(block.timestamp >= _releaseTime + (stepTime * releaseCount), 'before release time');\r\n        \r\n        uint thisBalance = _token.balanceOf(address(this));\r\n        require(thisBalance > 0, 'release done');\r\n        \r\n        uint currRlease = releaseQty;\r\n        if (thisBalance<releaseQty) {\r\n            currRlease = thisBalance;\r\n        }\r\n        \r\n        uint amount1 = (currRlease * 80) / 100;\r\n        uint amount2 = (currRlease * 20) / 100;\r\n        _token.transfer(_beneficiary_m, amount1);\r\n        _token.transfer(_beneficiary_s, amount2);\r\n        \r\n        releaseCount++;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_m\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_s\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReleaseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"timelockTeam","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c6b70abab6dd7c671af884bad1cffd599c5c40e2000000000000000000000000e904a1fb7b9a2c7151ff15146005cb8b30819c540000000000000000000000002e29304769e5fdd0bf4f6eb3174afa6a08b5ac750000000000000000000000000000000000000000000000000000000064fc9680","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a19fe772e9b63f79eb1e858ebd37faea08676c657bc2221657bba916fd910fa5"}]}