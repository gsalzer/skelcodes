{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/D/Dokumente/GitVScode/thedac-github/Token-Generation/contracts/IFO/ClaimAggregator.sol\": {\r\n      \"content\": \"pragma solidity 0.8.0;\\r\\n\\r\\ninterface Sale {\\r\\n    function viewUserOfferingAmount(address _account) view external returns(uint256);\\r\\n}\\r\\n\\r\\ninterface Token {\\r\\n    function transfer(address _to, uint256 _amount) external returns(bool);\\r\\n}\\r\\n\\r\\ncontract ClaimAggregator {\\r\\n\\r\\n    Token constant MGH = Token(0x8765b1A0eb57ca49bE7EACD35b24A574D0203656);\\r\\n    Sale constant add1 = Sale(0x14d9178cdf1cB3F156Da2AcC5b0F2b8D9828028a);\\r\\n    Sale constant add2 = Sale(0x1F3972f87581C0ea59E0483e14253Ee3afC0889C);\\r\\n    Sale constant add3 = Sale(0xcF4BC9cA41064E7B47Bce84fec4E1BCD59fbe3C7);\\r\\n\\r\\n    mapping(address => bool) private hasHarvested;\\r\\n\\r\\n    event Harvest(address indexed account, uint256 amount);\\r\\n\\r\\n    function harvest() public {\\r\\n        require(hasHarvested[msg.sender] == false);\\r\\n        hasHarvested[msg.sender] = true;\\r\\n        uint256 amount = calculateAmount(msg.sender);\\r\\n        require(MGH.transfer(msg.sender, amount));\\r\\n        emit Harvest(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function calculateAmount(address _account) private view returns(uint256) {\\r\\n        return add1.viewUserOfferingAmount(_account) +\\r\\n               add2.viewUserOfferingAmount(_account) +\\r\\n               add3.viewUserOfferingAmount(_account);\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ClaimAggregator","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}