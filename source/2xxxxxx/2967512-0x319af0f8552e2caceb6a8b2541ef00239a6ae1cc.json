{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\n/* \r\n    There is a limit of how much gas can be spent in a single block. This limit is flexible, but it is quite hard to increase it. \r\n    This means that every single function in your contract should stay below a certain amount of gas in all (reasonable) situations.\r\n    This applies to anything that uses loops.\r\n\r\n    https://blog.ethereum.org/2016/06/10/smart-contract-security/\r\n\r\n    Looper is a public utility which can be used to put a limit on loops, so that they stay within the gas limit\r\n*/\r\n\r\ncontract Looper {\r\n\r\nfunction maximumNumberOfLoops(uint _costSansLoops, uint _loopCost) public constant returns (uint loopLimit) {\r\n    uint gasLimit = getGasLimit();\r\n    uint gasForLoops = gasLimit - _costSansLoops;\r\n    return loopLimit = getLoopLimit(gasForLoops, _loopCost);\r\n}\r\n\r\nfunction canDoLoop(uint _costSansLoops, uint _loopCost, uint _numberOfLoops) public constant returns (bool) {\r\n    uint loopLimit = maximumNumberOfLoops(_costSansLoops, _loopCost);\r\n    if(_numberOfLoops < loopLimit) return true;\r\n    return false;\r\n}\r\n\r\nfunction getGasLimit() internal constant returns (uint) {\r\n    uint gasLimit;\r\n\r\n    assembly {\r\n        gasLimit := gaslimit\r\n    }\r\n    return gasLimit;\r\n}\r\n\r\nfunction getLoopLimit(uint _gasForLoops, uint _loopCost) internal constant returns (uint) {\r\n    uint loopLimit = _gasForLoops / _loopCost;\r\n    return loopLimit;\r\n}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_costSansLoops\",\"type\":\"uint256\"},{\"name\":\"_loopCost\",\"type\":\"uint256\"},{\"name\":\"_numberOfLoops\",\"type\":\"uint256\"}],\"name\":\"canDoLoop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_costSansLoops\",\"type\":\"uint256\"},{\"name\":\"_loopCost\",\"type\":\"uint256\"}],\"name\":\"maximumNumberOfLoops\",\"outputs\":[{\"name\":\"loopLimit\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"Looper","CompilerVersion":"v0.4.6+commit.2dabbdf0","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}