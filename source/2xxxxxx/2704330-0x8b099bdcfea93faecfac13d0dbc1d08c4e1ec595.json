{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.5;\r\n// testing\r\ncontract HelpMeSave { \r\n   //wallet that forces me to save, until i have reached my goal\r\n   address public owner; //me\r\n   \r\n   //Construct\r\n   function MyTestWallet7(){\r\n       owner = msg.sender;   // store owner\r\n   }\r\n   \r\n    function deposit() public payable{}\r\n    function() payable {deposit();}\r\n    \r\n    // I can only use this once I have reached my goal   \r\n    function withdraw () public noone_else { \r\n\r\n         uint256 withdraw_amt = this.balance;\r\n         \r\n         if (msg.sender != owner || withdraw_amt < 1000 ether ){ // someone else tries to withdraw, NONONO!!!\r\n             withdraw_amt = 0;                     // or target savings not reached\r\n         }\r\n         \r\n         msg.sender.send(withdraw_amt); // ok send it back to me\r\n         \r\n   }\r\n\r\n    modifier noone_else() {\r\n        if (msg.sender == owner) \r\n            _;\r\n    }\r\n\r\n    // copied from sample contract - recovery procedure:\r\n    \r\n    // give _password to nextOfKin so they can access your funds if something happens\r\n    //     (password hint: bd of c1)\r\n    function recovery (string _password, address _return_addr) returns (uint256) {\r\n       //calculate a hash from the password, and if it matches, return to address provided\r\n       if ( uint256(sha3(_return_addr)) % 100000000000000 == 94865382827780 ){\r\n                selfdestruct (_return_addr);\r\n       }\r\n       return uint256(sha3(_return_addr)) % 100000000000000;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_password\",\"type\":\"string\"},{\"name\":\"_return_addr\",\"type\":\"address\"}],\"name\":\"recovery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MyTestWallet7\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"HelpMeSave","CompilerVersion":"v0.4.5+commit.b318366e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}