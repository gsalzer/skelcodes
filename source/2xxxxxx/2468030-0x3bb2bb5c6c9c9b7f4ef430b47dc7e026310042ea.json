{"status":"1","message":"OK","result":[{"SourceCode":"//! Registry contract.\r\n//! By Gav Wood (Ethcore), 2016.\r\n//! Released under the Apache Licence 2.\r\n\r\n// From Owned.sol\r\ncontract Owned {\r\n    modifier only_owner { if (msg.sender != owner) return; _ }\r\n    \r\n    event NewOwner(address indexed old, address indexed current);\r\n    \r\n    function setOwner(address _new) only_owner { NewOwner(owner, _new); owner = _new; }\r\n    \r\n    address public owner = msg.sender;\r\n}\r\n\r\ncontract Registry is Owned {\r\n    struct Entry {\r\n        address owner;\r\n        address reverse;\r\n        mapping (string => bytes32) data;\r\n    }\r\n    \r\n    event Drained(uint amount);\r\n    event FeeChanged(uint amount);\r\n    event Reserved(bytes32 indexed name, address indexed owner);\r\n    event Transferred(bytes32 indexed name, address indexed oldOwner, address indexed newOwner);\r\n    event Dropped(bytes32 indexed name, address indexed owner);\r\n    event DataChanged(bytes32 indexed name, address indexed owner, string indexed key, string plainKey);\r\n    event ReverseProposed(string indexed name, address indexed reverse);\r\n    event ReverseConfirmed(string indexed name, address indexed reverse);\r\n    event ReverseRemoved(string indexed name, address indexed reverse);\r\n\r\n    modifier when_unreserved(bytes32 _name) { if (entries[_name].owner != 0) return; _ }\r\n    modifier only_owner_of(bytes32 _name) { if (entries[_name].owner != msg.sender) return; _ }\r\n    modifier when_proposed(string _name) { if (entries[sha3(_name)].reverse != msg.sender) return; _ }\r\n    modifier when_fee_paid { if (msg.value < fee) return; _ }\r\n\r\n    function reserve(bytes32 _name) when_unreserved(_name) when_fee_paid returns (bool success) {\r\n        entries[_name].owner = msg.sender;\r\n        Reserved(_name, msg.sender);\r\n        return true;\r\n    }\r\n    function transfer(bytes32 _name, address _to) only_owner_of(_name) returns (bool success) {\r\n        entries[_name].owner = _to;\r\n        Transferred(_name, msg.sender, _to);\r\n        return true;\r\n    }\r\n    function drop(bytes32 _name) only_owner_of(_name) returns (bool success) {\r\n        delete entries[_name];\r\n        Dropped(_name, msg.sender);\r\n        return true;\r\n    }\r\n    \r\n    function set(bytes32 _name, string _key, bytes32 _value) only_owner_of(_name) returns (bool success) {\r\n        entries[_name].data[_key] = _value;\r\n        DataChanged(_name, msg.sender, _key, _key);\r\n        return true;\r\n    }\r\n    function setAddress(bytes32 _name, string _key, address _value) only_owner_of(_name) returns (bool success) {\r\n        entries[_name].data[_key] = bytes32(_value);\r\n        DataChanged(_name, msg.sender, _key, _key);\r\n        return true;\r\n    }\r\n    function setUint(bytes32 _name, string _key, uint _value) only_owner_of(_name) returns (bool success) {\r\n        entries[_name].data[_key] = bytes32(_value);\r\n        DataChanged(_name, msg.sender, _key, _key);\r\n        return true;\r\n    }\r\n    \r\n    function reserved(bytes32 _name) constant returns (bool reserved) {\r\n        return entries[_name].owner != 0;\r\n    } \r\n    function get\r\n    (bytes32 _name, string _key) constant returns (bytes32) {\r\n        return entries[_name].data[_key];\r\n    }\r\n    function getAddress(bytes32 _name, string _key) constant returns (address) {\r\n        return address(entries[_name].data[_key]);\r\n    }\r\n    function getUint(bytes32 _name, string _key) constant returns (uint) {\r\n        return uint(entries[_name].data[_key]);\r\n    }\r\n    \r\n    function proposeReverse(string _name, address _who) only_owner_of(sha3(_name)) returns (bool success) {\r\n        var sha3Name = sha3(_name);\r\n        if (entries[sha3Name].reverse != 0 && sha3(reverse[entries[sha3Name].reverse]) == sha3Name) {\r\n            delete reverse[entries[sha3Name].reverse];\r\n            ReverseRemoved(_name, entries[sha3Name].reverse);\r\n        }\r\n        entries[sha3Name].reverse = _who;\r\n        ReverseProposed(_name, _who);\r\n        return true;\r\n    }\r\n    \r\n    function confirmReverse(string _name) when_proposed(_name) returns (bool success) {\r\n        reverse[msg.sender] = _name;\r\n        ReverseConfirmed(_name, msg.sender);\r\n        return true;\r\n    }\r\n    \r\n    function removeReverse() {\r\n        ReverseRemoved(reverse[msg.sender], msg.sender);\r\n        delete entries[sha3(reverse[msg.sender])].reverse;\r\n        delete reverse[msg.sender];\r\n    }\r\n    \r\n    function setFee(uint _amount) only_owner {\r\n        fee = _amount;\r\n        FeeChanged(_amount);\r\n    }\r\n    \r\n    function drain() only_owner {\r\n        Drained(this.balance);\r\n        if (!msg.sender.send(this.balance)) throw;\r\n    }\r\n    \r\n    mapping (bytes32 => Entry) entries;\r\n    mapping (address => string) public reverse;\r\n    \r\n    uint public fee = 1 ether;\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"confirmReverse\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"set\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"drop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserved\",\"outputs\":[{\"name\":\"reserved\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"proposeReverse\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"reverse\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeReverse\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Drained\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Reserved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Dropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"plainKey\",\"type\":\"string\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"reverse\",\"type\":\"address\"}],\"name\":\"ReverseProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"reverse\",\"type\":\"address\"}],\"name\":\"ReverseConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"reverse\",\"type\":\"address\"}],\"name\":\"ReverseRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"current\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"}]","ContractName":"Registry","CompilerVersion":"v0.3.6+commit.3fc68da","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}