{"status":"1","message":"OK","result":[{"SourceCode":"contract StakeProver {\r\n\r\n    struct info_pair {\r\n        address publisher;\r\n        uint stake; // how much was in the account at the time of transaction\r\n        uint burned; // you can optionally burn Ether by sending it when calling the publish function\r\n        uint timestamp;\r\n    }\r\n\r\n    mapping(bytes32 => info_pair) public hash_db;\r\n\r\n    function publish(bytes32 hashed_val) {\r\n        if (hash_db[hashed_val].publisher != address(0)) {\r\n            // You can only publish the message once\r\n            throw;\r\n        }\r\n        hash_db[hashed_val].publisher = msg.sender;\r\n        hash_db[hashed_val].stake = msg.sender.balance;\r\n        hash_db[hashed_val].burned = msg.value;\r\n        hash_db[hashed_val].timestamp = now;\r\n    }\r\n\r\n   function get_publisher(bytes32 hashed_val) constant returns (address) {\r\n        return hash_db[hashed_val].publisher;\r\n    }\r\n\r\n    function get_stake(bytes32 hashed_val) constant returns (uint) {\r\n        return hash_db[hashed_val].stake;\r\n    }\r\n\r\n    function get_timestamp(bytes32 hashed_val) constant returns (uint) {\r\n        return hash_db[hashed_val].timestamp;\r\n    }\r\n\r\n    function get_burned(bytes32 hashed_val) constant returns (uint) {\r\n        return hash_db[hashed_val].burned;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hash_db\",\"outputs\":[{\"name\":\"publisher\",\"type\":\"address\"},{\"name\":\"stake\",\"type\":\"uint256\"},{\"name\":\"burned\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hashed_val\",\"type\":\"bytes32\"}],\"name\":\"get_publisher\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashed_val\",\"type\":\"bytes32\"}],\"name\":\"publish\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hashed_val\",\"type\":\"bytes32\"}],\"name\":\"get_timestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hashed_val\",\"type\":\"bytes32\"}],\"name\":\"get_burned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hashed_val\",\"type\":\"bytes32\"}],\"name\":\"get_stake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"}]","ContractName":"StakeProver","CompilerVersion":"v0.3.5-2016-08-08-c3ed550","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}