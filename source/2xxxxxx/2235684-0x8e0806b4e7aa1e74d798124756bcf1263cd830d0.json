{"status":"1","message":"OK","result":[{"SourceCode":"contract Vow {\r\n\r\n   struct Customer{\r\n        uint ref;\r\n        uint balance;\r\n    }\r\n\r\n    struct Vow {\r\n        address vower;\r\n        address oracle;\r\n        uint funds;\r\n        uint payoff;\r\n        uint deposits;\r\n        uint taar;\r\n        mapping (address => Customer) customers;\r\n\r\n    }\r\n    mapping (uint => Vow) vows;\r\n    \r\n    \r\n    uint numVows;\r\n    uint public numRef;\r\n    \r\n    event depositFlag (address addr, uint amount, uint ref);\r\n    event withdrawFlag (address addr, uint amount, uint balance);\r\n    event newVowIdFlag (address addr, uint vowID, uint payoff);\r\n    \r\n    function newvow(uint payoff, address oracle) returns (uint vowID) {\r\n        vowID = numVows++;\r\n        Vow v = vows[vowID];\r\n        v.vower = msg.sender;\r\n        v.funds = msg.value;\r\n        v.payoff= payoff;\r\n        v.oracle = oracle;\r\n        v.taar = 0;\r\n        v.deposits = 0;\r\n        newVowIdFlag(v.vower, vowID, v.payoff);\r\n        return vowID;\r\n    }\r\n    \r\n    function deposit(uint vowID) returns (bool res) {\r\n       \r\n        if (msg.value == 0){\r\n            return false;\r\n        }\r\n        vows[vowID].deposits += msg.value;\r\n        Customer c = vows[vowID].customers[msg.sender];\r\n        c.balance += msg.value;\r\n        c.ref = numRef++;\r\n        depositFlag(msg.sender, c.balance, c.ref);\r\n        return true;\r\n    }\r\n\r\n    function withdraw(uint amount, address beneficiary, uint vowID) returns (bool res) {\r\n        \r\n        if (msg.sender != vows[vowID].oracle)\r\n            return false;\r\n        if (wc.balance < amount || amount == 0)\r\n            return false;\r\n        Customer wc = vows[vowID].customers[beneficiary];\r\n        wc.balance -= amount;\r\n        beneficiary.send(amount);\r\n        withdrawFlag(beneficiary, amount, wc.balance);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"payoff\",\"type\":\"uint256\"},{\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"newvow\",\"outputs\":[{\"name\":\"vowID\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numRef\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"vowID\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"res\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"vowID\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"res\",\"type\":\"bool\"}],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ref\",\"type\":\"uint256\"}],\"name\":\"depositFlag\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"withdrawFlag\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"vowID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"payoff\",\"type\":\"uint256\"}],\"name\":\"newVowIdFlag\",\"type\":\"event\"}]","ContractName":"Vow","CompilerVersion":"v0.3.5+commit.5f97274","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}