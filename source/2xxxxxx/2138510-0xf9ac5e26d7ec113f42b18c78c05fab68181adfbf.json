{"status":"1","message":"OK","result":[{"SourceCode":"// The contract that allows DTH that held DAO at a contract address to\r\n// authorize an enduser-account to do the withdrawal for them\r\n//\r\n// License: BSD3\r\n\r\ncontract WHAuthorizeAddress {\r\n\r\n    modifier noEther() {if (msg.value > 0) throw; _}\r\n\r\n    event Authorize(address indexed dthContract, address indexed authorizedAddress);\r\n\r\n    /// @notice Authorizes a regular account to act on behalf of a contract\r\n    /// @param _authorizedAddress The address of the regular account that will\r\n    ///                           act on behalf of the msg.sender contract.\r\n    function authorizeAddress(address _authorizedAddress) noEther() {\r\n\r\n        // sender must be a contract and _authorizedAddress must be a user account\r\n        if  (getCodeSize(msg.sender) == 0 || getCodeSize(_authorizedAddress) > 0) {\r\n            throw;\r\n        }\r\n\r\n        Authorize(msg.sender, _authorizedAddress);\r\n    }\r\n\r\n    function() {\r\n        throw;\r\n    }\r\n\r\n    function getCodeSize(address _addr) constant internal returns(uint _size) {\r\n        assembly {\r\n            _size := extcodesize(_addr)\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_authorizedAddress\",\"type\":\"address\"}],\"name\":\"authorizeAddress\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dthContract\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"authorizedAddress\",\"type\":\"address\"}],\"name\":\"Authorize\",\"type\":\"event\"}]","ContractName":"WHAuthorizeAddress","CompilerVersion":"v0.3.6-2016-08-24-e20afc7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}