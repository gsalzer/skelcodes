{"status":"1","message":"OK","result":[{"SourceCode":"contract AmIOnTheFork {\r\n    function forked() constant returns(bool);\r\n}\r\n\r\ncontract Owned{\r\n\r\n    //Address of owner\r\n    address Owner;\r\n\r\n    //Add modifier\r\n    modifier OnlyOwner{\r\n        if(msg.sender != Owner){\r\n            throw;\r\n        }\r\n        _\r\n    }\r\n\r\n    //Contruction function\r\n    function Owned(){\r\n        Owner = msg.sender;\r\n    }\r\n\r\n}\r\n\r\n//Ethereum Safely Transfer Contract\r\n//https://github.com/etcrelay/ether-transfer\r\ncontract EtherTransfer is Owned{\r\n\r\n    //\"If you are good at something, never do it for free\" - Joker\r\n    //Fee is 0.1% (it's mean you send 1 ETH fee is 0.001 ETH)\r\n    //Notice Fee is not include transaction fee\r\n    uint constant Fee = 1;\r\n    uint constant Decs = 1000;\r\n\r\n    bool public IsEthereum = false; \r\n\r\n    //Events log\r\n    event ETHTransfer(address indexed From,address indexed To, uint Value);\r\n    event ETCReturn(address indexed Return, uint Value);\r\n\r\n    event ETCTransfer(address indexed From,address indexed To, uint Value);\r\n    event ETHReturn(address indexed Return, uint Value);\r\n    \r\n    //Is Vitalik Buterin on the Fork ? >_<\r\n    AmIOnTheFork IsHeOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);\r\n\r\n    //Construction function\r\n    function EtherTransfer(){\r\n        IsEthereum = IsHeOnTheFork.forked();\r\n    }\r\n\r\n    //Only send ETH\r\n    function SendETH(address ETHAddress) returns(bool){\r\n        uint Value = msg.value - (msg.value*Fee/Decs);\r\n        //It is forked chain ETH\r\n        if(IsEthereum && ETHAddress.send(Value)){\r\n            ETHTransfer(msg.sender, ETHAddress, Value);\r\n            return true;\r\n        }else if(!IsEthereum && msg.sender.send(msg.value)){\r\n            ETCReturn(msg.sender, msg.value);\r\n            return true;\r\n        }\r\n        //No ETC is trapped\r\n        throw;\r\n    }\r\n\r\n    //Only send ETC\r\n    function SendETC(address ETCAddress) returns(bool){\r\n        uint Value = msg.value - (msg.value*Fee/Decs);\r\n        //It is non-forked chain ETC\r\n        if(!IsEthereum && ETCAddress.send(Value)){\r\n            ETCTransfer(msg.sender, ETCAddress, Value);\r\n            return true;\r\n        } else if(IsEthereum && msg.sender.send(msg.value)){\r\n            ETHReturn(msg.sender, msg.value);\r\n            return true;\r\n        }\r\n        //No ETH is trapped\r\n        throw;\r\n    }\r\n\r\n    //Protect user from ETC/ETH trapped\r\n    function (){\r\n        throw;\r\n    }\r\n\r\n    //I get rich lol, ez\r\n    function WithDraw() OnlyOwner returns(bool){\r\n        if(this.balance > 0 && Owner.send(this.balance)){\r\n            return true;\r\n        }\r\n        throw;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"WithDraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ETHAddress\",\"type\":\"address\"}],\"name\":\"SendETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsEthereum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ETCAddress\",\"type\":\"address\"}],\"name\":\"SendETC\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"From\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"To\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"ETHTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Return\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"ETCReturn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"From\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"To\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"ETCTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Return\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"ETHReturn\",\"type\":\"event\"}]","ContractName":"EtherTransfer","CompilerVersion":"v0.3.5-2016-06-10-5f97274","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}