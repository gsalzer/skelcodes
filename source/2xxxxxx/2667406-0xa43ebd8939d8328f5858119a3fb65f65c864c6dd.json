{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n/*\r\n* This is a contract for debloating the state\r\n* @author mhswende\r\n**/\r\ncontract Sweeper\r\n{\r\n    //Solidity implentation\r\n    function sol_clean(uint256 s, uint i){\r\n        uint x = s;\r\n        address b = 0;\r\n        for(uint c=0 ; c < i ; c++){\r\n            x = x+s;\r\n            b = address(x/0x1000000000000000000000000);\r\n            b.send(0);\r\n\r\n        }\r\n    }\r\n    //Asm implementation\r\n    function asm_clean(uint s, uint i)\r\n    {\r\n\r\n        assembly{\r\n            let seed := calldataload(4)//4 if we're using a named function\r\n            let iterations := calldataload(36)\r\n            let target :=seed\r\n        \r\n        loop:\r\n            target := add(target,seed)\r\n            pop(call(0,div(target,0x1000000000000000000000000),0,0,0,0,0))\r\n            iterations := sub(iterations,1) \r\n            jumpi(loop, iterations)\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"sol_clean\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"s\",\"type\":\"uint256\"},{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"asm_clean\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]","ContractName":"Sweeper","CompilerVersion":"v0.4.4+commit.4633f3de","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}