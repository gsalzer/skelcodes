{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n// ## Mattew - a contract for increasing \"whaleth\"\r\n// README: https://github.com/rolandkofler/mattew\r\n// MIT LICENSE 2016 Roland Kofler, thanks to Crul for testing\r\n\r\ncontract Mattew {\r\n    address whale;\r\n    uint256 stake;\r\n    uint256 blockheight;\r\n    uint256 constant PERIOD = 200; //60 * 10 /14; //BLOCKS_PER_DAY;\r\n    uint constant DELTA = 0.1 ether;\r\n    \r\n    event MattewWon(string msg, address winner, uint value,  uint blocknumber);\r\n    event StakeIncreased(string msg, address staker, uint value, uint blocknumber);\r\n    \r\n    function Mattew(){\r\n        setFacts();\r\n    }\r\n    \r\n    function setFacts() private {\r\n        stake = msg.value;\r\n        blockheight = block.number;\r\n        whale = msg.sender;\r\n    }\r\n    \r\n    /// The rich get richer, the whale get whaler\r\n    function () payable{\r\n        if (block.number - PERIOD > blockheight){\r\n            bool isSuccess = whale.send(stake);\r\n            MattewWon(\"Mattew won (mattew, stake, blockheight)\", whale, stake, block.number);\r\n            setFacts();\r\n            // selfdestruct(whale); People with Ethereum Foundation are ok with it.\r\n            return;\r\n            \r\n        }else{\r\n            \r\n            if (msg.value < stake + DELTA) throw;\r\n            bool isOtherSuccess = msg.sender.send(stake);\r\n            setFacts();\r\n            StakeIncreased(\"stake increased (whale, stake, blockheight)\", whale, stake, blockheight);\r\n        }\r\n    }\r\n    \r\n    \r\n    function getStake() public constant returns(uint){\r\n        return stake;\r\n    }\r\n    \r\n    function getBlocksTillMattew() public constant returns(uint){\r\n        if (blockheight + PERIOD > block.number)\r\n            return blockheight + PERIOD - block.number;\r\n        else\r\n            return 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBlocksTillMattew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"blocknumber\",\"type\":\"uint256\"}],\"name\":\"MattewWon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"blocknumber\",\"type\":\"uint256\"}],\"name\":\"StakeIncreased\",\"type\":\"event\"}]","ContractName":"Mattew","CompilerVersion":"v0.4.5-nightly.2016.11.16+commit.c8116918","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}