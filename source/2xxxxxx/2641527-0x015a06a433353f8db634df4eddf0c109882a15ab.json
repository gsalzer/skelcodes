{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\ncontract PixelMap {\r\n    address creator;\r\n    struct Tile {\r\n        address owner;\r\n        string image;\r\n        string url;\r\n        uint price;\r\n    }\r\n    mapping (uint => Tile) public tiles;\r\n    event TileUpdated(uint location);\r\n\r\n    // Original Tile Owner\r\n    function PixelMap() {creator = msg.sender;}\r\n\r\n    // Get Tile information at X,Y position.\r\n    function getTile(uint location) returns (address, string, string, uint) {\r\n        return (tiles[location].owner,\r\n                tiles[location].image,\r\n                tiles[location].url,\r\n                tiles[location].price);\r\n    }\r\n\r\n    // Purchase an unclaimed Tile for 2 Eth.\r\n    function buyTile(uint location) payable {\r\n        if (location > 3969) {throw;}\r\n        uint price = tiles[location].price;\r\n        address owner;\r\n\r\n        // Make sure person doesn't already own tile.\r\n        if (tiles[location].owner == msg.sender) {\r\n            throw;\r\n        }\r\n\r\n        // If Unowned by the Bank, sell for 2Eth.\r\n        if (tiles[location].owner == 0x0) {\r\n            price = 2000000000000000000;\r\n            owner = creator;\r\n        }\r\n        else {\r\n            owner = tiles[location].owner;\r\n        }\r\n        // If the tile isn't for sale, don't sell it!\r\n        if (price == 0) {\r\n            throw;\r\n        }\r\n\r\n        // Pay for Tile.\r\n        if (msg.value != price) {\r\n            throw;\r\n        }\r\n        if (owner.send(price)) {\r\n            tiles[location].owner = msg.sender;\r\n            tiles[location].price = 0; // Set Price to 0.\r\n            TileUpdated(location);\r\n        }\r\n        else {throw;}\r\n    }\r\n\r\n    // Set an already owned Tile to whatever you'd like.\r\n    function setTile(uint location, string image, string url, uint price) {\r\n        if (tiles[location].owner != msg.sender) {throw;} // Pixel not owned by you!\r\n        else {\r\n            tiles[location].image = image;\r\n            tiles[location].url = url;\r\n            tiles[location].price = price;\r\n            TileUpdated(location);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiles\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"location\",\"type\":\"uint256\"}],\"name\":\"buyTile\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"location\",\"type\":\"uint256\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTile\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"location\",\"type\":\"uint256\"}],\"name\":\"getTile\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"location\",\"type\":\"uint256\"}],\"name\":\"TileUpdated\",\"type\":\"event\"}]","ContractName":"PixelMap","CompilerVersion":"v0.4.2+commit.af6afb04","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}