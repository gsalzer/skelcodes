{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract Store {\r\n    address[] owners;\r\n    mapping(address => uint) ownerBalances;\r\n\r\n    function Store(address[] _owners) {\r\n        owners = _owners;\r\n    }\r\n    \r\n    function deposit() payable {\r\n        uint ownerShare = msg.value / owners.length;\r\n        ownerBalances[owners[0]] += msg.value % owners.length;\r\n        \r\n        for (uint i = 0; i < owners.length; i++) {\r\n            ownerBalances[owners[i]] += ownerShare;\r\n        }\r\n    }\r\n    \r\n    function payout() returns (uint) {\r\n        uint amount = ownerBalances[msg.sender];\r\n        ownerBalances[msg.sender] = 0;\r\n\r\n        if (msg.sender.send(amount)) {\r\n            return amount;\r\n        } else {\r\n            ownerBalances[msg.sender] = amount;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"payout\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"}],\"type\":\"constructor\"}]","ContractName":"Store","CompilerVersion":"v0.4.2+commit.af6afb04","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}