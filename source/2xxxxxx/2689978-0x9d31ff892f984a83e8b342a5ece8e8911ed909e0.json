{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.5;\r\n\r\ncontract A_Free_Ether_A_Day { \r\n\r\n   // \r\n   //  Claim your special ether NOW!\r\n   //\r\n   // // only while stocks last! //\r\n   //\r\n   //  But make sure you understand, read and test the code before using it. I am not refunding any \"swallowed\" funds, I keep those >:)\r\n   //  (e.g. make sure you send funds to the right function!)\r\n   //\r\n     \r\n    address the_stupid_guy;                     // thats me\r\n    uint256 public minimum_cash_proof_amount;   // to prove you are a true \"Ether-ian\"\r\n    \r\n    // The Contract Builder\r\n    \r\n    function A_Free_Ether_A_Day()  { // create the contract\r\n\r\n             the_stupid_guy = msg.sender;  \r\n             minimum_cash_proof_amount = 100 ether;\r\n\r\n    }\r\n    \r\n    // ************************************************************************************** //\r\n    //   show_me_the_money ()    This function allows you to claim your special bonus ether.\r\n    //\r\n    //   Send any amount > minimum_cash_proof_amount to this function, and receive a special bonus ether back.\r\n\t//\r\n    //   You can also call this function from a client by pasting the following transaction data in the data field:\r\n    //   0xc567e43a\r\n    //\r\n\t// ************************************************************************************** //\r\n    \r\n    function show_me_the_money ()  payable  returns (uint256)  {\r\n        \r\n        // ==> You have to show me that you already have some ether, as I am not giving any ether to non-ether-ians\r\n    \r\n        if ( msg.value < minimum_cash_proof_amount ) throw; // nope, you don't have the cash.. go get some ether first\r\n\r\n        uint256 received_amount = msg.value;    // remember what you have sent\r\n        uint256 bonus = 1 ether;                // the bonus ether\r\n        uint256 payout;                         // total payout back to you, calculated below\r\n        \r\n        if (the_stupid_guy == msg.sender){    // doesnt work for the_stupid_guy (thats me)\r\n            bonus = 0;\r\n            received_amount = 0; \r\n            // nothing for the_stupid_guy\r\n        }\r\n        \r\n        // calculate payout/bonus and send back to sender\r\n\t\t\r\n        bool success;\r\n        \r\n        payout = received_amount + bonus; // calculate total payout\r\n        \r\n        if (payout > this.balance) throw; // nope, I dont have enough to give you a free ether, so roll back the lot\r\n        \r\n        success = msg.sender.send(payout); \r\n        \r\n        if (!success) throw;\r\n\r\n        return payout;\r\n    }\r\n    \r\n\t//\r\n\t// for when I get bored paying bonus ether:\r\n\t//\r\n    function Good_Bye_World(){\r\n\t\r\n        if ( msg.sender != the_stupid_guy ) throw;\r\n        selfdestruct(the_stupid_guy); \r\n\t\t\r\n    }\r\n    \r\n   // I may increase the cash proof amount lateron, so make sure you check the global variable minimum_cash_proof_amount\r\n   //     ==> but don't worry, if you dont send enough, it just rolls back the transaction via a throw\r\n\r\n    function Update_Cash_Proof_amount(uint256 new_cash_limit){\r\n        if ( msg.sender != the_stupid_guy ) throw;\r\n        minimum_cash_proof_amount = new_cash_limit;\r\n    }\r\n        \r\n    function () payable {}  // catch all. dont send to that or your ether is gonigone\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Good_Bye_World\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimum_cash_proof_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_cash_limit\",\"type\":\"uint256\"}],\"name\":\"Update_Cash_Proof_amount\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"show_me_the_money\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"A_Free_Ether_A_Day","CompilerVersion":"v0.4.5+commit.b318366e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}