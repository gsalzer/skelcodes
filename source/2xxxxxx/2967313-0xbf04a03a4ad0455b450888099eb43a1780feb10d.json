{"status":"1","message":"OK","result":[{"SourceCode":"/* \r\n   Deposits are managed by a separate contract. Withdraws are manual, and can be automated \r\n   with the \"Account\" contracts. Manual withdrawals are since The DAO recommended as best practice for \r\n   security of Solidity based Smart Contracts,\r\n   \r\n   https://blog.ethereum.org/2016/06/19/thinking-smart-contract-security/\r\n   \r\n   http://ethereum.stackexchange.com/questions/6204/writing-secure-smart-contracts-in-solidity\r\n*/\r\n\r\ncontract DepositGovernance { function registrationVote(address _registrant, uint _amount) {} }\r\n\r\ncontract RegistrationDeposits {\r\n    \r\n    DepositGovernance public governance;\r\n    address registrationContract;\r\n    \r\n    mapping(address => uint256) deposit;\r\n    \r\n    function RegistrationDeposits(address _depositGovernance, address _registrationContract) {\r\n        governance = DepositGovernance(_depositGovernance);\r\n        registrationContract = _registrationContract;\r\n    }\r\n    \r\n    function register(address _registrant) payable external {\r\n        if(msg.sender != registrationContract) throw;\r\n        deposit[_registrant] = msg.value;\r\n        governance.registrationVote(_registrant, msg.value);\r\n    }\r\n    \r\n    function withdrawDeposit() public {\r\n        if(deposit[msg.sender] == 0) throw;\r\n        if(!msg.sender.send(deposit[msg.sender])) throw;\r\n        deposit[msg.sender] = 0;\r\n    }\r\n}\r\n\r\ncontract Factory {\r\n    \r\n    function newDepositContract(address _depositGovernance, address _registrationContract) returns (address) {\r\n        return new RegistrationDeposits(_depositGovernance, _registrationContract);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_depositGovernance\",\"type\":\"address\"},{\"name\":\"_registrationContract\",\"type\":\"address\"}],\"name\":\"newDepositContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"Factory","CompilerVersion":"v0.4.6+commit.2dabbdf0","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}