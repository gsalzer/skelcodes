{"status":"1","message":"OK","result":[{"SourceCode":"contract AmIOnTheFork {\r\n    function forked() constant returns(bool);\r\n}\r\n\r\ncontract LedgerSplitSingle {\r\n    // Fork oracle to use\r\n    AmIOnTheFork amIOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);\r\n\r\n    // Splits the funds on a single chain\r\n    function split(bool forked, address target) returns(bool) {\r\n        if (amIOnTheFork.forked() && forked && target.send(msg.value)) {\r\n            return true;\r\n        } \r\n        else\r\n        if (!amIOnTheFork.forked() && !forked && target.send(msg.value)) {\r\n            return true;\r\n        } \r\n        throw; // don't accept value transfer, otherwise it would be trapped.\r\n    }\r\n\r\n    // Reject value transfers.\r\n    function() {\r\n        throw;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"forked\",\"type\":\"bool\"},{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"split\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]","ContractName":"LedgerSplitSingle","CompilerVersion":"v0.3.5-2016-07-21-6610add","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}