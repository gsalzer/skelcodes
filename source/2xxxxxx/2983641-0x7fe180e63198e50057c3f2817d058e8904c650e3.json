{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\ncontract Conference {  // can be killed, so the owner gets sent the money in the end\r\n\r\n\taddress public organizer;\r\n\tmapping (address => uint) public registrantsPaid;\r\n\tuint public numRegistrants;\r\n\tuint public quota;\r\n\r\n\tevent Deposit(address _from, uint _amount); // so you can log the event\r\n\tevent Refund(address _to, uint _amount); // so you can log the event\r\n\r\n\tfunction Conference() {\r\n\t\torganizer = msg.sender;\t\t\r\n\t\tquota = 100;\r\n\t\tnumRegistrants = 0;\r\n\t}\r\n\r\n\tfunction buyTicket() public {\r\n\t\tif (numRegistrants >= quota) { \r\n\t\t\tthrow; // throw ensures funds will be returned\r\n\t\t}\r\n\t\tregistrantsPaid[msg.sender] = msg.value;\r\n\t\tnumRegistrants++;\r\n\t\tDeposit(msg.sender, msg.value);\r\n\t}\r\n\r\n\tfunction changeQuota(uint newquota) public {\r\n\t\tif (msg.sender != organizer) { return; }\r\n\t\tquota = newquota;\r\n\t}\r\n\r\n\tfunction refundTicket(address recipient, uint amount) public {\r\n\t\tif (msg.sender != organizer) { return; }\r\n\t\tif (registrantsPaid[recipient] == amount) { \r\n\t\t\taddress myAddress = this;\r\n\t\t\tif (myAddress.balance >= amount) { \r\n\t\t\t\t(recipient.send(amount));\r\n\t\t\t\tRefund(recipient, amount);\r\n\t\t\t\tregistrantsPaid[recipient] = 0;\r\n\t\t\t\tnumRegistrants--;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction destroy() {\r\n\t\tif (msg.sender == organizer) { // without this funds could be locked in the contract forever!\r\n\t\t\tsuicide(organizer);\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"registrantsPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"organizer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refundTicket\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newquota\",\"type\":\"uint256\"}],\"name\":\"changeQuota\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quota\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numRegistrants\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTicket\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"}]","ContractName":"Conference","CompilerVersion":"v0.4.6+commit.2dabbdf0","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}