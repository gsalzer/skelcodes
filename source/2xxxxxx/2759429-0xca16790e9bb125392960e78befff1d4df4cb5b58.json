{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.5;\r\n\r\n/*\r\n * This is an example gambling contract that works without any ABI interface.\r\n * The entire game logic is invoked by calling the fallback function which\r\n * is triggered, e.g. upon receiving a transaction at the contract address\r\n * without any data sent along. The contract is attackable in a number of ways:\r\n * - as soon as someone paid in Ether and starts the game, register with a\r\n *   large number of addresses to spam the player list and most likely win.\r\n * - blockhash as source of entropy is attackable by miners\r\n * - probably further exploits\r\n * This only serves as a minimalistic example of how to gamble on Ethereum\r\n * Author: S.C. Buergel for Validity Labs AG\r\n */\r\n\r\ncontract dgame {\r\n  uint registerDuration;\r\n  uint endRegisterTime;\r\n  address[] players;\r\n  string debug;\r\n\r\n  // constructor sets default registration duration to 180s\r\n  function dgame() {\r\n    registerDuration = 180;\r\n  }\r\n\r\n  // fallback function is used to register players and pay winner\r\n  function () payable {\r\n    if (players.length == 0)\r\n      endRegisterTime = now + registerDuration;\r\n    if (now > endRegisterTime && players.length > 0) {\r\n      // find index of winner (take blockhash as source of entropy -> exploitable!)\r\n      uint winner = uint(block.blockhash(block.number - 1)) % players.length;\r\n      \r\n      // pay winner all Ether that we have\r\n      // ignore if winner rejects prize\r\n      // in that case Ether will be added to prize of the next game\r\n      players[winner].send(this.balance);\r\n      \r\n      // delete all players to allow for a next game\r\n      delete players;\r\n    }\r\n    else\r\n      players.push(msg.sender);\r\n  }\r\n  \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"dgame","CompilerVersion":"v0.4.6+commit.2dabbdf0","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}