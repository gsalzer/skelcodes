{"status":"1","message":"OK","result":[{"SourceCode":"contract FivePercent \r\n{\r\n  \tstruct Participant \r\n\t{\r\n      \t\taddress etherAddress;\r\n      \t\tuint amount;\r\n\t}\r\n \tParticipant[] private participants;\r\n  \t\r\n\tuint private payoutIdx = 0;\r\n  \tuint private balance = 0;\r\n\tuint private factor =105; //105% payout\r\n    \t//Fallback function\r\n        function() \r\n\t{\r\n\t        init();\r\n    \t}\r\n  \r\n        //init function run on fallback\r\n   \tfunction init() private\r\n\t{\r\n\t        //Ensures only tx with value between min. 10 finney (0.01 ether) and max. 10 ether are processed \r\n    \t\tif (msg.value < 10 finney) \r\n\t\t{\r\n        \t\tmsg.sender.send(msg.value);\r\n        \t\treturn;\r\n    \t\t}\r\n\t\tuint amount;\r\n\t\tif (msg.value > 10 ether) \r\n\t\t{\r\n\t\t\tmsg.sender.send(msg.value - 10 ether);\t\r\n\t\t\tamount = 10 ether;\r\n                }\r\n\t\telse \r\n\t\t{\r\n\t\t\tamount = msg.value;\r\n\t\t}\r\n\t  \t// add a new participant to array\r\n    \t\tuint idx = participants.length;\r\n    \t\tparticipants.length += 1;\r\n    \t\tparticipants[idx].etherAddress = msg.sender;\r\n    \t\tparticipants[idx].amount = amount ;\r\n\t\t// update contract balance\r\n       \t\tbalance += amount ;\r\n \t\t// while there are enough ether on the balance we can pay out to an earlier participant\r\n    \t\twhile (balance > factor*participants[payoutIdx].amount / 100 ) \r\n\t\t{\r\n\t\t\tuint transactionAmount = factor* participants[payoutIdx].amount / 100;\r\n      \t\t\tparticipants[payoutIdx].etherAddress.send(transactionAmount);\r\n\t\t\tbalance -= transactionAmount;\r\n      \t\t\tpayoutIdx += 1;\r\n    \t\t}\r\n  \t}\r\n \r\n\tfunction Infos() constant returns (uint BalanceInFinney, uint Participants, uint PayOutIndex,uint NextPayout, string info) \r\n\t{\r\n        \tBalanceInFinney = balance / 1 finney;\r\n        \tPayOutIndex=payoutIdx;\r\n\t\tParticipants=participants.length;\r\n\t\tNextPayout =factor*participants[payoutIdx].amount / 1 finney;\r\n\t\tNextPayout=NextPayout /100;\r\n\t\tinfo = 'All amounts in Finney (1 Ether = 1000 Finney)';\r\n    \t}\r\n\r\n\tfunction participantDetails(uint nr) constant returns (address Address, uint PayinInFinney, uint PayoutInFinney, string PaidOut)\r\n    \t{\r\n\t\tPaidOut='N.A.';\r\n\t\tAddress=0;\r\n\t\tPayinInFinney=0;\r\n\t\tPayoutInFinney=0;\r\n        \tif (nr < participants.length) {\r\n            \tAddress = participants[nr].etherAddress;\r\n\r\n            \tPayinInFinney = participants[nr].amount / 1 finney;\r\n\t\tPayoutInFinney= factor*PayinInFinney/100;\r\n\t\tPaidOut='no';\r\n\t\tif (nr<payoutIdx){PaidOut='yes';}\t\t\r\n\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"Infos\",\"outputs\":[{\"name\":\"BalanceInFinney\",\"type\":\"uint256\"},{\"name\":\"Participants\",\"type\":\"uint256\"},{\"name\":\"PayOutIndex\",\"type\":\"uint256\"},{\"name\":\"NextPayout\",\"type\":\"uint256\"},{\"name\":\"info\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nr\",\"type\":\"uint256\"}],\"name\":\"participantDetails\",\"outputs\":[{\"name\":\"Address\",\"type\":\"address\"},{\"name\":\"PayinInFinney\",\"type\":\"uint256\"},{\"name\":\"PayoutInFinney\",\"type\":\"uint256\"},{\"name\":\"PaidOut\",\"type\":\"string\"}],\"type\":\"function\"}]","ContractName":"FivePercent","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}