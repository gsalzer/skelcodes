{"status":"1","message":"OK","result":[{"SourceCode":"contract MultiAsset {\r\n    function isCreated(bytes32 _symbol) constant returns(bool);\r\n    function owner(bytes32 _symbol) constant returns(address);\r\n    function totalSupply(bytes32 _symbol) constant returns(uint);\r\n    function balanceOf(address _holder, bytes32 _symbol) constant returns(uint);\r\n    function transfer(address _to, uint _value, bytes32 _symbol) returns(bool);\r\n    function proxyTransferWithReference(address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);\r\n    function proxyTransferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool);\r\n    function proxyApprove(address _spender, uint _value, bytes32 _symbol) returns(bool);\r\n    function allowance(address _from, address _spender, bytes32 _symbol) constant returns(uint);\r\n    function transferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);\r\n    function transferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) returns(bool);\r\n    function proxyTransferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference) returns(bool);\r\n    function proxyTransferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) returns(bool);\r\n    function proxySetCosignerAddress(address _address, bytes32 _symbol) returns(bool);\r\n}\r\n\r\ncontract Safe {\r\n    // Should always be placed as first modifier!\r\n    modifier noValue {\r\n        if (msg.value > 0) {\r\n            // Internal Out Of Gas/Throw: revert this transaction too;\r\n            // Call Stack Depth Limit reached: revert this transaction too;\r\n            // Recursive Call: safe, no any changes applied yet, we are inside of modifier.\r\n            _safeSend(msg.sender, msg.value);\r\n        }\r\n        _\r\n    }\r\n\r\n    modifier onlyHuman {\r\n        if (_isHuman()) {\r\n            _\r\n        }\r\n    }\r\n\r\n    modifier noCallback {\r\n        if (!isCall) {\r\n            _\r\n        }\r\n    }\r\n\r\n    modifier immutable(address _address) {\r\n        if (_address == 0) {\r\n            _\r\n        }\r\n    }\r\n\r\n    address stackDepthLib;\r\n    function setupStackDepthLib(address _stackDepthLib) immutable(address(stackDepthLib)) returns(bool) {\r\n        stackDepthLib = _stackDepthLib;\r\n        return true;\r\n    }\r\n\r\n    modifier requireStackDepth(uint16 _depth) {\r\n        if (stackDepthLib == 0x0) {\r\n            throw;\r\n        }\r\n        if (_depth > 1023) {\r\n            throw;\r\n        }\r\n        if (!stackDepthLib.delegatecall(0x32921690, stackDepthLib, _depth)) {\r\n            throw;\r\n        }\r\n        _\r\n    }\r\n\r\n    // Must not be used inside the functions that have noValue() modifier!\r\n    function _safeFalse() internal noValue() returns(bool) {\r\n        return false;\r\n    }\r\n\r\n    function _safeSend(address _to, uint _value) internal {\r\n        if (!_unsafeSend(_to, _value)) {\r\n            throw;\r\n        }\r\n    }\r\n\r\n    function _unsafeSend(address _to, uint _value) internal returns(bool) {\r\n        return _to.call.value(_value)();\r\n    }\r\n\r\n    function _isContract() constant internal returns(bool) {\r\n        return msg.sender != tx.origin;\r\n    }\r\n\r\n    function _isHuman() constant internal returns(bool) {\r\n        return !_isContract();\r\n    }\r\n\r\n    bool private isCall = false;\r\n    function _setupNoCallback() internal {\r\n        isCall = true;\r\n    }\r\n\r\n    function _finishNoCallback() internal {\r\n        isCall = false;\r\n    }\r\n}\r\n\r\ncontract KUNA_SHARES is Safe {\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approve(address indexed from, address indexed spender, uint value);\r\n\r\n    MultiAsset public multiAsset;\r\n    bytes32 public symbol;\r\n\r\n    function init(address _multiAsset, bytes32 _symbol) noValue() immutable(address(multiAsset)) returns(bool) {\r\n        MultiAsset ma = MultiAsset(_multiAsset);\r\n        if (!ma.isCreated(_symbol)) {\r\n            return false;\r\n        }\r\n        multiAsset = ma;\r\n        symbol = _symbol;\r\n        return true;\r\n    }\r\n\r\n    modifier onlyMultiAsset() {\r\n        if (msg.sender == address(multiAsset)) {\r\n            _\r\n        }\r\n    }\r\n\r\n    function totalSupply() constant returns(uint) {\r\n        return multiAsset.totalSupply(symbol);\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns(uint) {\r\n        return multiAsset.balanceOf(_owner, symbol);\r\n    }\r\n\r\n    function allowance(address _from, address _spender) constant returns(uint) {\r\n        return multiAsset.allowance(_from, _spender, symbol);\r\n    }\r\n\r\n    function transfer(address _to, uint _value) returns(bool) {\r\n        return __transferWithReference(_to, _value, \"\");\r\n    }\r\n\r\n    function transferWithReference(address _to, uint _value, string _reference) returns(bool) {\r\n        return __transferWithReference(_to, _value, _reference);\r\n    }\r\n\r\n    function __transferWithReference(address _to, uint _value, string _reference) private noValue() returns(bool) {\r\n        return _isHuman() ?\r\n            multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference) :\r\n            multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference);\r\n    }\r\n\r\n    function transferToICAP(bytes32 _icap, uint _value) returns(bool) {\r\n        return __transferToICAPWithReference(_icap, _value, \"\");\r\n    }\r\n\r\n    function transferToICAPWithReference(bytes32 _icap, uint _value, string _reference) returns(bool) {\r\n        return __transferToICAPWithReference(_icap, _value, _reference);\r\n    }\r\n\r\n    function __transferToICAPWithReference(bytes32 _icap, uint _value, string _reference) private noValue() returns(bool) {\r\n        return _isHuman() ?\r\n            multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference) :\r\n            multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) returns(bool) {\r\n        return __transferFromWithReference(_from, _to, _value, \"\");\r\n    }\r\n\r\n    function transferFromWithReference(address _from, address _to, uint _value, string _reference) returns(bool) {\r\n        return __transferFromWithReference(_from, _to, _value, _reference);\r\n    }\r\n\r\n    function __transferFromWithReference(address _from, address _to, uint _value, string _reference) private noValue() onlyHuman() returns(bool) {\r\n        return multiAsset.proxyTransferFromWithReference(_from, _to, _value, symbol, _reference);\r\n    }\r\n\r\n    function transferFromToICAP(address _from, bytes32 _icap, uint _value) returns(bool) {\r\n        return __transferFromToICAPWithReference(_from, _icap, _value, \"\");\r\n    }\r\n\r\n    function transferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) returns(bool) {\r\n        return __transferFromToICAPWithReference(_from, _icap, _value, _reference);\r\n    }\r\n\r\n    function __transferFromToICAPWithReference(address _from, bytes32 _icap, uint _value, string _reference) private noValue() onlyHuman() returns(bool) {\r\n        return multiAsset.proxyTransferFromToICAPWithReference(_from, _icap, _value, _reference);\r\n    }\r\n\r\n    function approve(address _spender, uint _value) noValue() onlyHuman() returns(bool) {\r\n        return multiAsset.proxyApprove(_spender, _value, symbol);\r\n    }\r\n\r\n    function setCosignerAddress(address _cosigner) noValue() onlyHuman() returns(bool) {\r\n        return multiAsset.proxySetCosignerAddress(_cosigner, symbol);\r\n    }\r\n\r\n    function emitTransfer(address _from, address _to, uint _value) onlyMultiAsset() {\r\n        Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function emitApprove(address _from, address _spender, uint _value) onlyMultiAsset() {\r\n        Approve(_from, _spender, _value);\r\n    }\r\n\r\n    function sendToOwner() noValue() returns(bool) {\r\n        address owner = multiAsset.owner(symbol);\r\n        uint balance = this.balance;\r\n        bool success = true;\r\n        if (balance > 0) {\r\n            success = _unsafeSend(owner, balance);\r\n        }\r\n        return multiAsset.transfer(owner, balanceOf(owner), symbol) && success;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"multiAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stackDepthLib\",\"type\":\"address\"}],\"name\":\"setupStackDepthLib\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"emitApprove\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"emitTransfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_multiAsset\",\"type\":\"address\"},{\"name\":\"_symbol\",\"type\":\"bytes32\"}],\"name\":\"init\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"transferFromWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icap\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferToICAP\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icap\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"transferToICAPWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cosigner\",\"type\":\"address\"}],\"name\":\"setCosignerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_icap\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"transferFromToICAPWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_icap\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromToICAP\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"transferWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"}]","ContractName":"KUNA_SHARES","CompilerVersion":"v0.3.5-2016-08-08-c3ed550","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}