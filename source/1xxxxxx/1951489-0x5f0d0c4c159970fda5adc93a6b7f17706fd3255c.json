{"status":"1","message":"OK","result":[{"SourceCode":"contract AmIOnTheFork {\r\n    function forked() constant returns(bool);\r\n}\r\n\r\ncontract SellETCSafely {\r\n    // fork oracle to use\r\n    AmIOnTheFork amIOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);\r\n    \r\n    // recipient of the 1 % fee on the ETC side\r\n    address feeRecipient = 0x46a1e8814af10Ef6F1a8449dA0EC72a59B29EA54;\r\n    \r\n    function split(address ethDestination, address etcDestination) {\r\n        if (amIOnTheFork.forked()) {\r\n            // The following happens on the forked chain:\r\n            // 100 % is forwarded to the provided destination for ETH\r\n            ethDestination.call.value(msg.value);\r\n        } else {\r\n            // The following happens on the classic chain:\r\n            // 1 % is forwarded to the fee recipient\r\n            // 99 % is forwarded to the provided destination for ETC\r\n            uint fee = msg.value / 100;\r\n            feeRecipient.send(fee);\r\n            etcDestination.call.value(msg.value - fee)();\r\n        }\r\n    }\r\n    \r\n    function () {\r\n        throw;  // do not accept value transfers\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ethDestination\",\"type\":\"address\"},{\"name\":\"etcDestination\",\"type\":\"address\"}],\"name\":\"split\",\"outputs\":[],\"type\":\"function\"}]","ContractName":"SellETCSafely","CompilerVersion":"v0.3.5-2016-07-21-6610add","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}