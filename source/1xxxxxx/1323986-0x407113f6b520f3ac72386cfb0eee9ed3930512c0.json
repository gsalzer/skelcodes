{"status":"1","message":"OK","result":[{"SourceCode":"contract WavesPresale {\r\n    address public owner;\r\n    \r\n    struct Sale\r\n    {\r\n        uint amount;\r\n        uint date;\r\n    }\r\n\r\n    mapping (bytes16 => Sale) public sales;\r\n    uint32 public numberOfSales;\r\n    uint public totalTokens;\r\n\r\n    function WavesPresale() {\r\n        owner = msg.sender;\r\n        numberOfSales = 0;\r\n    }\r\n\r\n    function changeOwner(address newOwner) {\r\n        if (msg.sender != owner) return;\r\n\r\n        owner = newOwner;\r\n    }\r\n\r\n    function newSale(bytes16 txidHash, uint amount, uint timestamp) {\r\n        if (msg.sender != owner) return;\r\n\r\n        if (sales[txidHash].date == 0) {\r\n            sales[txidHash] = Sale({\r\n                    amount: amount,\r\n                    date: timestamp\r\n                });\r\n            numberOfSales += 1;\r\n            totalTokens += amount;\r\n        } else {\r\n            throw;\r\n        }\r\n    }\r\n\r\n    function getSaleDate(bytes16 txidHash) constant returns (uint, uint) {\r\n    \treturn (sales[txidHash].amount, sales[txidHash].date);\r\n    }\r\n\r\n    function () {\r\n        // This function gets executed if a\r\n        // transaction with invalid data is sent to\r\n        // the contract or just ether without data.\r\n        // We revert the send so that no-one\r\n        // accidentally loses money when using the\r\n        // contract.\r\n        throw;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"txidHash\",\"type\":\"bytes16\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"newSale\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfSales\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes16\"}],\"name\":\"sales\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"txidHash\",\"type\":\"bytes16\"}],\"name\":\"getSaleDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"WavesPresale","CompilerVersion":"v0.2.0-2016-01-13-d2f18c7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}