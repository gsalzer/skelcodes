{"status":"1","message":"OK","result":[{"SourceCode":"// Wallet contract that operates only in \"right\" branch.\r\ncontract BranchWallet {\r\n  // Owner of the wallet\r\n  address public owner;\r\n    \r\n  // Is set to true if and only if we are currently in the \"right\" branch of\r\n  // the blockchain, i.e. the branch this wallet is operating in.\r\n  bool public isRightBranch;\r\n\r\n  // Instantiate the contract.\r\n  //\r\n  // @param owner owner of the contract\r\n  // @isRightBranch whether we are currently in the \"right\" branch\r\n  function BranchWallet (address _owner, bool _isRightBranch) {\r\n    owner = _owner;\r\n    isRightBranch = _isRightBranch;\r\n  }\r\n\r\n  // Only accept money in \"right\" branch.\r\n  function () {\r\n    if (!isRightBranch) throw;\r\n  }\r\n\r\n  // Execute a transaction using money from this wallet.\r\n  //\r\n  // @param to transaction destination\r\n  // @param value transaction value\r\n  // @param data transaction data\r\n  function send (address _to, uint _value) {\r\n    if (!isRightBranch) throw;\r\n    if (msg.sender != owner) throw;\r\n    if (!_to.send (_value)) throw;\r\n  }\r\n\r\n  // Execute a transaction using money from this wallet.\r\n  //\r\n  // @param to transaction destination\r\n  // @param value transaction value\r\n  // @param data transaction data\r\n  function execute (address _to, uint _value, bytes _data) {\r\n    if (!isRightBranch) throw;\r\n    if (msg.sender != owner) throw;\r\n    if (!_to.call.value (_value)(_data)) throw;\r\n  }\r\n}\r\n\r\n// Simple smart contract that allows anyone to tell where we are currently in the\r\n// \"right\" branch of blockchain.\r\ncontract BranchSender {\r\n  // Is set to true if and only if we are currently in the \"right\" branch of\r\n  // the blockchain.\r\n  bool public isRightBranch;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isRightBranch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_isRightBranch\",\"type\":\"bool\"}],\"type\":\"constructor\"}]","ContractName":"BranchWallet","CompilerVersion":"v0.3.5+commit.5f97274","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000009713F4507C619564797328Bf35B370dd5fA8d210000000000000000000000000000000000000000000000000000000000000001","Library":"","SwarmSource":""}]}