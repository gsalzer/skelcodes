{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n  live: 0x89d64bc7e46bdc49a89652ae9bb167418cbad62e\r\nmorden: 0xe379e36671acbcc87ec7b760c07e6e45a1294944\r\n  solc: v0.3.1-2016-04-12-3ad5e82 (optimization)\r\n*/\r\n\r\ncontract tokenRecipient {\r\n    function receiveApproval(address _from, uint256 _value, address _token);\r\n}\r\n\r\ncontract Token {\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function totalSupply() constant returns (uint256 supply);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function approveAndCall(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n}\r\n\r\ncontract SafeAddSub {\r\n    function safeToAdd(uint a, uint b) internal returns (bool) {\r\n        return (a + b > a);\r\n    }\r\n\r\n    function safeToSubtract(uint a, uint b) internal returns (bool) {\r\n        return (a >= b);\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal returns (uint256) {\r\n        if (!safeToAdd(a, b)) throw;\r\n        return a + b;\r\n    }\r\n\r\n    function safeSubtract(uint a, uint b) internal returns (uint256) {\r\n        if (!safeToSubtract(a, b)) throw;\r\n        return a - b;\r\n    }\r\n}\r\n\r\ncontract EthToken is Token, SafeAddSub {\r\n    string public constant name = \"Ether Token Proxy\";\r\n    string public constant symbol = \"ETH\";\r\n    uint8   public constant decimals = 18;\r\n    uint256 public constant baseUnit = 10**18;\r\n    \r\n    mapping (address => uint256) _balanceOf;\r\n    mapping (address => mapping (address => uint256)) _allowance;\r\n\r\n    event Deposit(address indexed owner, uint256 amount);\r\n    event Withdrawal(address indexed owner, uint256 amount);\r\n\r\n    function totalSupply() constant returns (uint256 supply) {\r\n        return this.balance;\r\n    }\r\n    \r\n    function () {\r\n        deposit();\r\n    }\r\n    \r\n    function deposit() {\r\n        _balanceOf[msg.sender] = safeAdd(_balanceOf[msg.sender], msg.value);\r\n        Deposit(msg.sender, msg.value);\r\n    }\r\n    \r\n    function redeem() {\r\n        withdraw(_balanceOf[msg.sender]);\r\n    }\r\n    \r\n    function withdraw(uint256 _value) returns (bool success) {\r\n        _balanceOf[msg.sender] = safeSubtract(_balanceOf[msg.sender], _value);\r\n        if (!msg.sender.send(_value)) {\r\n            if (!msg.sender.call.gas(msg.gas).value(_value)()) throw;\r\n        }\r\n        Withdrawal(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return _balanceOf[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (_to == address(this) || _to == 0) {\r\n            return withdraw(_value);\r\n        } else {\r\n            _balanceOf[msg.sender] = safeSubtract(_balanceOf[msg.sender], _value);\r\n            _balanceOf[_to] = safeAdd(_balanceOf[_to], _value);\r\n            Transfer(msg.sender, _to, _value);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (!safeToSubtract(_allowance[_from][msg.sender], _value)) throw;\r\n        if (_to == address(this) || _to == 0) {\r\n            if (!transferFrom(_from, msg.sender, _value)) throw;\r\n            withdraw(_value);\r\n        } else {\r\n            _balanceOf[_from] = safeSubtract(_balanceOf[_from], _value);\r\n            _balanceOf[_to] = safeAdd(_balanceOf[_to], _value);\r\n            _allowance[_from][msg.sender] = safeSubtract(_allowance[_from][msg.sender], _value);\r\n            Transfer(_from, _to, _value);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        _allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approveAndCall(address _spender, uint256 _value) returns (bool success) {\r\n        if (approve(_spender, _value)) {\r\n            tokenRecipient(_spender).receiveApproval(msg.sender, _value, this);\r\n            return true;\r\n        }\r\n        throw;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return _allowance[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EthToken","CompilerVersion":"v0.3.1-2016-04-12-3ad5e82","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}