{"status":"1","message":"OK","result":[{"SourceCode":"contract squareRootPonzi {\r\n    \r\n    struct MasterCalculators {\r\n        \r\n        address ethereumAddress;\r\n        string name;\r\n        uint squareRoot;\r\n        \r\n    }\r\n    MasterCalculators[] public masterCalculator;\r\n    \r\n    uint public calculatedTo = 0;\r\n    \r\n    \r\n    function() {\r\n        \r\n        if (msg.value == 1 finney) {\r\n            \r\n            if (this.balance > 2 finney) {\r\n            \r\n                uint index = masterCalculator.length + 1;\r\n                masterCalculator[index].ethereumAddress = msg.sender;\r\n                masterCalculator[index].name = \"masterly calculated: \";\r\n                calculatedTo += 100 ether; // which is a shorter way to the number 100,000,000,000,000,000,000 or 1e+20\r\n                masterCalculator[index].squareRoot = CalculateSqrt(calculatedTo);\r\n                \r\n                if (masterCalculator.length > 3) {\r\n                \r\n                    uint to = masterCalculator.length - 3;\r\n                    masterCalculator[to].ethereumAddress.send(2 finney);\r\n                    \r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    function CalculateSqrt(uint x) internal returns (uint y) {\r\n        \r\n        uint z = (x + 1) / 2;\r\n        y = x;\r\n        while (z < y) {\r\n            y = z;\r\n            z = (x / z + z) / 2;\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    function sqrt(uint x) returns (uint) {\r\n        \r\n        if (x > masterCalculator.length + 1) return 0;\r\n        else return masterCalculator[x].squareRoot;\r\n        \r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"masterCalculator\",\"outputs\":[{\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"squareRoot\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculatedTo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"}]","ContractName":"squareRootPonzi","CompilerVersion":"v0.3.1-2016-04-12-3ad5e82","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}