{"status":"1","message":"OK","result":[{"SourceCode":"contract AmIOnTheFork {\r\n    bool public forked = false;\r\n    address constant darkDAO = 0x304a554a310c7e546dfe434669c62820b7d83490;\r\n    // Check the fork condition during creation of the contract.\r\n    // This function should be called between block 1920000 and 1921200.\r\n    // Approximately between 2016-07-20 12:00:00 UTC and 2016-07-20 17:00:00 UTC.\r\n    // After that the status will be locked in.\r\n    function update() {\r\n        if (block.number >= 1920000 && block.number <= 1921200) {\r\n            forked = darkDAO.balance < 3600000 ether;\r\n        }\r\n    }\r\n    function() {\r\n        throw;\r\n    }\r\n}\r\ncontract ReplaySafeSplit {\r\n    // Fork oracle to use\r\n    AmIOnTheFork amIOnTheFork = AmIOnTheFork(0x2bd2326c993dfaef84f696526064ff22eba5b362);\r\n\r\n    // Splits the funds into 2 addresses\r\n    function split(address targetFork, address targetNoFork) returns(bool) {\r\n        if (amIOnTheFork.forked() && targetFork.send(msg.value)) {\r\n            return true;\r\n        } else if (!amIOnTheFork.forked() && targetNoFork.send(msg.value)) {\r\n            return true;\r\n        }\r\n        throw;\r\n    }\r\n\r\n    // Reject value transfers.\r\n    function() {\r\n        throw;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"targetFork\",\"type\":\"address\"},{\"name\":\"targetNoFork\",\"type\":\"address\"}],\"name\":\"split\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]","ContractName":"ReplaySafeSplit","CompilerVersion":"v0.3.5-2016-07-19-427deb4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}