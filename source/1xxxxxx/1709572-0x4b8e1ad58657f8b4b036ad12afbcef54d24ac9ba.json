{"status":"1","message":"OK","result":[{"SourceCode":"contract BasicSign {\r\n\r\n    event Created(\r\n        address indexed from,\r\n        uint256 id\r\n    );\r\n    event Signed(\r\n        address indexed from,\r\n        uint256 docId,\r\n        uint8 singId,\r\n        bytes16 signType,\r\n        bytes sign\r\n    );\r\n\r\n    address owner;\r\n    mapping (uint256 => Document) public documents;\r\n\r\n    struct Document {\r\n        address organizer;\r\n        Sign[] signs;\r\n    }\r\n\r\n    struct Sign {\r\n        address signer;\r\n        bytes16 signType;\r\n        bytes   sign;\r\n    }\r\n\r\n    function SimpleSign() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function createDocument(uint256 nonce) returns (uint256 docId) {\r\n        docId = generateId(nonce);\r\n        if (documents[docId].organizer != 0) throw;\r\n        documents[docId].organizer = msg.sender;\r\n        Created(msg.sender, docId);\r\n    }\r\n\r\n    function removeDocument(uint256 docId) {\r\n        Document doc = documents[docId];\r\n        if (doc.organizer != msg.sender) throw;\r\n        delete documents[docId];\r\n    }\r\n\r\n    function addSignature(uint256 docId, bytes16 _type, bytes _sign) {\r\n        Document doc = documents[docId];\r\n        if (doc.organizer != msg.sender) throw;\r\n        if (doc.signs.length >= 0xFF) throw;\r\n        uint idx = doc.signs.push(Sign(msg.sender, _type, _sign));\r\n        Signed(msg.sender, docId, uint8(idx), _type, _sign);\r\n    }\r\n\r\n    function getDocumentDetails(uint256 docId) returns (address organizer, uint count) {\r\n        Document doc = documents[docId];\r\n        organizer = doc.organizer;\r\n        count = doc.signs.length;\r\n    }\r\n\r\n    function getSignsCount(uint256 docId) returns (uint) {\r\n        return documents[docId].signs.length;\r\n    }\r\n\r\n    function getSignDetails(uint256 docId, uint8 signId) returns (address, bytes16) {\r\n        Document doc = documents[docId];\r\n        Sign s = doc.signs[signId];\r\n        return (s.signer, s.signType);\r\n    }\r\n\r\n    function getSignData(uint256 docId, uint8 signId) returns (bytes) {\r\n        Document doc = documents[docId];\r\n        Sign s = doc.signs[signId];\r\n        return s.sign;\r\n    }\r\n\r\n    function generateId(uint256 nonce) returns (uint256) {\r\n        return uint256(sha3(msg.sender, nonce));\r\n    }\r\n\r\n    function () {\r\n        throw;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"}],\"name\":\"getSignsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"},{\"name\":\"signId\",\"type\":\"uint8\"}],\"name\":\"getSignData\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"bytes16\"},{\"name\":\"_sign\",\"type\":\"bytes\"}],\"name\":\"addSignature\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SimpleSign\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"generateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"}],\"name\":\"getDocumentDetails\",\"outputs\":[{\"name\":\"organizer\",\"type\":\"address\"},{\"name\":\"count\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"},{\"name\":\"signId\",\"type\":\"uint8\"}],\"name\":\"getSignDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes16\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"documents\",\"outputs\":[{\"name\":\"organizer\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docId\",\"type\":\"uint256\"}],\"name\":\"removeDocument\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"createDocument\",\"outputs\":[{\"name\":\"docId\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"docId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"singId\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"signType\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"sign\",\"type\":\"bytes\"}],\"name\":\"Signed\",\"type\":\"event\"}]","ContractName":"BasicSign","CompilerVersion":"v0.3.5-2016-06-14-371690f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}