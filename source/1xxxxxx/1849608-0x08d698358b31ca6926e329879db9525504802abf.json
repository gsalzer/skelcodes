{"status":"1","message":"OK","result":[{"SourceCode":"contract DaoChallenge\r\n{\r\n\tmodifier noEther() {if (msg.value > 0) throw; _}\r\n\r\n\tmodifier onlyOwner() {if (owner != msg.sender) throw; _}\r\n\r\n\tevent notifySellToken(uint256 n, address buyer);\r\n\tevent notifyRefundToken(uint256 n, address tokenHolder);\r\n\tevent notifyTranferToken(uint256 n, address sender, address recipient);\r\n\tevent notifyTerminate(uint256 finalBalance);\r\n\r\n\t/* This creates an array with all balances */\r\n  mapping (address => uint256) public tokenBalanceOf;\r\n\r\n\tuint256 constant tokenPrice = 1000000000000000; // 1 finney\r\n\r\n\t// Owner of the challenge; a real DAO doesn't an owner.\r\n\taddress owner;\r\n\r\n\tfunction DaoChallenge () {\r\n\t\towner = msg.sender; // Owner of the challenge. Don't use this in a real DAO.\r\n\t}\r\n\r\n\tfunction () {\r\n\t\taddress sender = msg.sender;\r\n\t\tuint256 amount = msg.value;\r\n\r\n\t\t// No fractional tokens:\r\n\t\tif (amount % tokenPrice != 0) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t\ttokenBalanceOf[sender] += amount / tokenPrice;\r\n\t\tnotifySellToken(amount, sender);\r\n\t}\r\n\r\n\t// This uses call.value()() rather than send(), but only sends to msg.sender\r\n\tfunction withdrawEtherOrThrow(uint256 amount) {\r\n\t\tbool result = msg.sender.call.value(amount)();\r\n\t\tif (!result) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refund() noEther {\r\n\t\taddress sender = msg.sender;\r\n\t\tuint256 tokenBalance = tokenBalanceOf[sender];\r\n\t\tif (tokenBalance == 0) { throw; }\r\n\t\ttokenBalanceOf[sender] = 0;\r\n\t\twithdrawEtherOrThrow(tokenBalance * tokenPrice);\r\n\t\tnotifyRefundToken(tokenBalance, sender);\r\n\t}\r\n\r\n\tfunction transfer(address recipient, uint256 tokens) noEther {\r\n\t\taddress sender = msg.sender;\r\n\r\n\t\tif (tokenBalanceOf[sender] < tokens) throw;\r\n\t\tif (tokenBalanceOf[recipient] + tokens < tokenBalanceOf[recipient]) throw; // Check for overflows\r\n\t\ttokenBalanceOf[sender] -= tokens;\r\n\t\ttokenBalanceOf[recipient] += tokens;\r\n\t\tnotifyTranferToken(tokens, sender, recipient);\r\n\t}\r\n\r\n\t// The owner of the challenge can terminate it. Don't use this in a real DAO.\r\n\tfunction terminate() noEther onlyOwner {\r\n\t\tnotifyTerminate(this.balance);\r\n\t\tsuicide(owner);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEtherOrThrow\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"n\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"notifySellToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"n\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"notifyRefundToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"n\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"notifyTranferToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"finalBalance\",\"type\":\"uint256\"}],\"name\":\"notifyTerminate\",\"type\":\"event\"}]","ContractName":"DaoChallenge","CompilerVersion":"v0.3.5-2016-07-01-48238c9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}