{"status":"1","message":"OK","result":[{"SourceCode":"contract Ethereum_doubler\r\n{\r\n\r\nstring[8] hexComparison;\t\t\t\t\t\t\t//declares global variables\r\nstring hexcomparisonchr;\r\nstring A;\r\nuint8 i;\r\nuint8 lotteryticket;\r\naddress creator;\r\nint lastgainloss;\r\nstring lastresult;\r\nuint lastblocknumberused;\r\nbytes32 lastblockhashused;\r\nuint8 hashLastNumber;\r\naddress player;\r\nuint8 result; \r\nuint128 wager; \r\nuint8 lowOrHigh; // 0=low, 2=high, 4=kill, 6=n.a.\r\nuint8 HashtoLowOrHigh;//hash modified to low or high 0=low, 2=high, 7= 0 or F\r\n \r\n\r\n   function  Ethereum_doubler() private \r\n    { \r\n        creator = msg.sender; \t\t\t\t\t\t\t\t\r\n    }\r\n\r\n  function Set_your_game_number(string Set_your_game_number_L_or_H)\t\t\t//sets game number\r\n {\tresult=0;\r\n    \tA=Set_your_game_number_L_or_H ;\r\n     \tuint128 wager = uint128(msg.value); \r\n\tcomparisonchr(A);\r\n\tinputToDigit(i);\r\n\tcheckHash();\r\n\tchangeHashtoLowOrHigh(hashLastNumber);\r\n \tcheckBet();\r\n\treturnmoneycreator(result,wager);\r\n}\r\n\r\n \r\n\r\n    function comparisonchr(string A) private\t\t\t\t\t//changes string input to uint\r\n    {    hexComparison= [\"L\", \"l\", \"H\", \"h\", \"K\",\"N.A.\",\"dummy\",\"0 or F\"];\r\n\tfor (i = 0; i < 6; i ++) \r\n{\r\n\r\n\thexcomparisonchr=hexComparison[i];\r\n\r\n    \r\n\r\n\tbytes memory a = bytes(hexcomparisonchr);\r\n \tbytes memory b = bytes(A);\r\n        \r\n          \r\n        \r\n          if (a[0]==b[0])\r\n              return ;\r\n\r\n}}\r\n\r\nfunction inputToDigit(uint i) private\r\n{\r\nif(i==0 || i==1)\r\n{lowOrHigh=0;\r\nreturn;}\r\nelse if (i==2 ||i==3)\r\n{lowOrHigh=2;\r\nreturn;}\r\nelse if (i==4)\r\n{lowOrHigh=4;\r\nreturn;}\r\nelse if (i==6)\r\n{lowOrHigh=6;}\r\nreturn;}\r\n\r\n\tfunction checkHash() private\r\n{\r\n   \tlastblocknumberused = (block.number-1)  ;\t\t\t\t//Last available blockhash is in the previous block\r\n    \tlastblockhashused = block.blockhash(lastblocknumberused);\t\t//Cheks the last available blockhash\r\n\r\n    \t\r\n    \thashLastNumber=uint8(lastblockhashused & 0xf);\t\t\t\t//Changes blockhash's last number to base ten\r\n}\r\n\r\n\tfunction changeHashtoLowOrHigh(uint  hashLastNumber) private\r\n{\r\n\tif (hashLastNumber>0 && hashLastNumber<8)\r\n\t{HashtoLowOrHigh=0;\r\n\treturn;}\r\n\telse if (hashLastNumber>7 && hashLastNumber<15)\r\n\t{HashtoLowOrHigh=2;\r\n\treturn;}\r\n\telse\r\n\t{HashtoLowOrHigh=7;\r\n\tlastresult = \"0 or F, house wins\";\r\n\treturn;}//result= 0 or F, house wins\r\n\t\r\n \r\n\t \r\n}\r\n\r\n \r\n\r\n\tfunction checkBet() private\r\n\r\n { \r\n\tlotteryticket=lowOrHigh;\r\n\tplayer=msg.sender;\r\n        \r\n                \r\n    \r\n  \t\t  \r\n    \tif(msg.value > (this.balance/4))\t\t\t\t\t// maximum bet is game balance/4\r\n    \t{\r\n    \t\tlastresult = \"Bet is too large. Maximum bet is the game balance/4.\";\r\n    \t\tlastgainloss = 0;\r\n    \t\tmsg.sender.send(msg.value); // return bet\r\n    \t\treturn;\r\n    \t}\r\n\telse if(msg.value <100000000000000000)\t\t\t\t\t// minimum bet is 0.1 eth\r\n    \t{\r\n    \t\tlastresult = \"Minimum bet is 0.1 eth\";\r\n    \t\tlastgainloss = 0;\r\n    \t\tmsg.sender.send(msg.value); // return bet\r\n    \t\treturn;\r\n\r\n\t}\r\n    \telse if (msg.value == 0)\r\n    \t{\r\n    \t\tlastresult = \"Bet was zero\";\r\n    \t\tlastgainloss = 0;\r\n    \t\t// nothing wagered, nothing returned\r\n    \t\treturn;\r\n    \t}\r\n    \t\t\r\n    \tuint128 wager = uint128(msg.value);          \t\t\t\t// limiting to uint128 guarantees that conversion to int256 will stay positive\r\n    \t\r\n \r\n\r\n   \t if(lotteryticket==6)\t\t\t\t\t\t\t//Checks that input is L or H \r\n\t{\r\n\tlastresult = \"give a character L or H \";\r\n\tmsg.sender.send(msg.value);\r\n\tlastgainloss=0;\r\n\t\r\n\treturn;\r\n\t}\r\n\r\n\telse if (lotteryticket==4 && msg.sender == creator)\t\t\t//Creator can kill contract. Contract does not hold players money.\r\n\t{\r\n\t\tsuicide(creator);} \r\n\r\n\telse if(lotteryticket != HashtoLowOrHigh)\r\n\t{\r\n\t    \tlastgainloss = int(wager) * -1;\r\n\t    \tlastresult = \"Loss\";\r\n\t    \tresult=1;\r\n\t    \t\t\t\t\t\t\t\t\t// Player lost. Return nothing.\r\n\t    \treturn;\r\n\t}\r\n\t    else if(lotteryticket==HashtoLowOrHigh)\r\n\t{\r\n\t    \tlastgainloss =(2*wager);\r\n\t    \tlastresult = \"Win!\";\r\n\t    \tmsg.sender.send(wager * 2); \r\n\t\treturn;\t\t\t \t\t\t\t\t// Player won. Return bet and winnings.\r\n\t} \t\r\n    }\r\n\r\n\tfunction returnmoneycreator(uint8 result,uint128 wager) private\t\t//If game has over 50 eth, contract will send all additional eth to owner\r\n\t{\r\n\tif (result==1&&this.balance>50000000000000000000)\r\n\t{creator.send(wager);\r\n\treturn; \r\n\t}\r\n \r\n\telse if\r\n\t(\r\n\tresult==1&&this.balance>20000000000000000000)\t\t\t\t//If game has over 20 eth, contract will send Å“ of any additional eth to owner\r\n\t{creator.send(wager/2);\r\n\treturn; }\r\n\t}\r\n \r\n/**********\r\nfunctions below give information about the game in Ethereum Wallet\r\n **********/\r\n \r\n \tfunction Results_of_the_last_round() constant returns (string last_result,string Last_player_s_lottery_ticket,address last_player,string The_right_lottery_number,int Player_s_gain_or_Loss_in_Wei,string info)\r\n    { \r\n   \tlast_player=player;\t\r\n\tLast_player_s_lottery_ticket=hexcomparisonchr;\r\n\tThe_right_lottery_number=hexComparison[HashtoLowOrHigh];\r\n\tlast_result=lastresult;\r\n\tPlayer_s_gain_or_Loss_in_Wei=lastgainloss;\r\n\tinfo = \"The right lottery number is decided by the last character of the most recent blockhash available during the game. 1-7 =Low, 8-e =High. One Eth is 10**18 Wei.\";\r\n\t\r\n \r\n    }\r\n\r\n \tfunction Last_block_number_and_blockhash_used() constant returns (uint last_blocknumber_used,bytes32 last_blockhash_used)\r\n    {\r\n        last_blocknumber_used=lastblocknumberused;\r\n\tlast_blockhash_used=lastblockhashused;\r\n\r\n\r\n    }\r\n    \r\n   \r\n\tfunction Game_balance_in_Ethers() constant returns (uint balance, string info)\r\n    { \r\n        info = \"Game balance is shown in full Ethers\";\r\n    \tbalance=(this.balance/10**18);\r\n\r\n    }\r\n    \r\n   \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"Set_your_game_number_L_or_H\",\"type\":\"string\"}],\"name\":\"Set_your_game_number\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Last_block_number_and_blockhash_used\",\"outputs\":[{\"name\":\"last_blocknumber_used\",\"type\":\"uint256\"},{\"name\":\"last_blockhash_used\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Results_of_the_last_round\",\"outputs\":[{\"name\":\"last_result\",\"type\":\"string\"},{\"name\":\"Last_player_s_lottery_ticket\",\"type\":\"string\"},{\"name\":\"last_player\",\"type\":\"address\"},{\"name\":\"The_right_lottery_number\",\"type\":\"string\"},{\"name\":\"Player_s_gain_or_Loss_in_Wei\",\"type\":\"int256\"},{\"name\":\"info\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Game_balance_in_Ethers\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"info\",\"type\":\"string\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Ethereum_doubler","CompilerVersion":"v0.3.1-2016-03-31-c492d9b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}