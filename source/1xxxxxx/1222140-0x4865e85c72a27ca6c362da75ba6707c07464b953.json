{"status":"1","message":"OK","result":[{"SourceCode":"//***********************************TREASURE CHEST GAME\r\n//\r\n//\r\n//  Hello player, this is a Treasure Chest game, every player that deposit's here will get a guaranteed 6% payout of their balance after somebody after him deposits!\r\n//  Every 30th investor receives 18% instead of 6%, that is the jackpot spot that pays 3x more, invest quickly ,and you can earn a passive income right now!\r\n//\r\n//  This contract is bug-tested, and it has none, feel comfortable to analyse the code yourself, it's open source and transparent!\r\n//  Enjoy this game, and earn Ethereum now!\r\n//\r\n//  Copyright  Â©  2016  David Weissman from NZ\r\n//\r\n//***********************************START\r\ncontract TreasureChest {\r\n\r\n  struct InvestorArray {\r\n      address etherAddress;\r\n      uint amount;\r\n  }\r\n\r\n  InvestorArray[] public investors;\r\n\r\n//********************************************PUBLIC VARIABLES\r\n\r\n  uint public investors_needed_until_jackpot=0;\r\n  uint public totalplayers=0;\r\n  uint public fees=0;\r\n  uint public balance = 0;\r\n  uint public totaldeposited=0;\r\n  uint public totalpaidout=0;\r\n\r\n  address public owner;\r\n\r\n  // simple single-sig function modifier\r\n  modifier onlyowner { if (msg.sender == owner) _ }\r\n\r\n//********************************************INIT\r\n\r\n  function TreasureChest() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n//********************************************TRIGGER\r\n\r\n  function() {\r\n    enter();\r\n  }\r\n  \r\n//********************************************ENTER\r\n\r\n  function enter() {\r\n    if (msg.value < 50 finney) {\r\n        msg.sender.send(msg.value);\r\n        return;\r\n    }\r\n\t\r\n    uint amount=msg.value;\r\n\r\n\r\n    // add a new participant to the system and calculate total players\r\n    uint tot_pl = investors.length;\r\n    totalplayers=tot_pl+1;\r\n    investors_needed_until_jackpot=30-(totalplayers % 30);\r\n    investors.length += 1;\r\n    investors[tot_pl].etherAddress = msg.sender;\r\n    investors[tot_pl].amount = amount;\r\n\r\n\r\n\r\n    // collect fees and update contract balance and deposited amount\r\n      fees  = amount / 15;             // 6.666% fee to the owner\r\n      balance += amount;               // balance update\r\n      totaldeposited+=amount;       //update deposited amount\r\n\r\n    // pay out fees to the owner\r\n     if (fees != 0) \r\n     {\r\n     \tif(balance>fees)\r\n\t{\r\n      \towner.send(fees);\r\n      \tbalance -= fees;                 //balance update\r\n\ttotalpaidout+=fees;          //update paid out amount\r\n\t}\r\n     }\r\n \r\n\r\n   //loop variables\r\n    uint payout;\r\n    uint nr=0;\r\n\t\r\n    while (balance > investors[nr].amount * 6/100 && nr<tot_pl)  //exit condition to avoid infinite loop\r\n    { \r\n     \r\n     if(nr%30==0 &&  balance > investors[nr].amount * 18/100)\r\n     {\r\n      payout = investors[nr].amount * 18/100;                        //calculate pay out\r\n      investors[nr].etherAddress.send(payout);                      //send pay out to participant\r\n      balance -= investors[nr].amount * 18/100;                      //balance update\r\n      totalpaidout += investors[nr].amount * 18/100;               //update paid out amount\r\n      }\r\n     else\r\n     {\r\n      payout = investors[nr].amount *6/100;                           //calculate pay out\r\n      investors[nr].etherAddress.send(payout);                        //send pay out to participant\r\n      balance -= investors[nr].amount *6/100;                         //balance update\r\n      totalpaidout += investors[nr].amount *6/100;                 //update paid out amount\r\n      }\r\n      \r\n      nr += 1;                                                                         //go to next participant\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n//********************************************NEW OWNER\r\n\r\n  function setOwner(address new_owner) onlyowner {\r\n      owner = new_owner;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalplayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"etherAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalpaidout\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investors_needed_until_jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totaldeposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"TreasureChest","CompilerVersion":"v0.2.2-2016-03-10-34d714f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}