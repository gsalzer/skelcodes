{"status":"1","message":"OK","result":[{"SourceCode":"contract etherlist_top {\r\n\r\n  // www.etherlist.top\r\n  \r\n  struct Participant {\r\n      address etherAddress;\r\n      uint amount;\r\n\t  uint paid;\r\n\t  uint lastPayment;\r\n  }\r\n\r\n  Participant[] public participants;\r\n\r\n  uint public payoutIdx = 0;\r\n  uint public collectedFees;\r\n  uint public balance;\r\n  uint public lastTimestamp = block.timestamp;\r\n  uint public rand_num = block.timestamp % participants.length;\r\n\r\n  address public owner;\r\n\r\n  modifier onlyowner { if (msg.sender == owner) _ }\r\n\r\n  function etherlist_top() {\r\n    owner = msg.sender;\r\n\tbalance = 0;\r\n\tcollectedFees = 0;\r\n  }\r\n\r\n  function() {\r\n    enter();\r\n  }\r\n  \r\n  function enter() {\r\n\r\n  if(msg.value > 5000000000000000000){\r\n    msg.sender.send(msg.value);\r\n    return;\r\n  }\r\n\t   collectedFees += msg.value / 20;\r\n\t   balance += (msg.value - (msg.value / 20));\r\n\t   lastTimestamp = block.timestamp;\r\n\t   rand_num = (((lastTimestamp+balance) % participants.length) * block.difficulty + msg.value) % participants.length;\r\n\t   \r\n\t   uint i = 0;\r\n\t   uint i2 = rand_num;\r\n\t   while(i < participants.length){\r\n\t     if(balance > 0){\r\n\t\tif(participants.length - participants[i2].lastPayment > 3 || participants[i2].lastPayment == 0)\r\n\t\t if(participants[i2].amount >= balance){\r\n\t\t   participants[i2].etherAddress.send(balance);\r\n\t\t   participants[i2].paid += balance;\r\n\t\t   participants[i2].lastPayment = participants.length +1;\r\n\t\t   balance = 0;\r\n\t\t   }\r\n\t\t   else{\r\n\t\t   participants[i2].etherAddress.send(participants[i2].amount);\r\n\t\t   balance -= participants[i2].amount;  \r\n\t\t   participants[i2].paid += participants[i2].amount;\r\n\t\t   participants[i2].lastPayment = participants.length +1;\r\n\t\t   }\r\n\t\t }\r\n\t\t else\r\n\t\t   break;\r\n\t\t\r\n\t\t i2 += rand_num + 1;\r\n\t\t if(i2 > participants.length)\r\n\t\t    i2 = i2 % participants.length;\t   \r\n\t     i += 1;\r\n\t   }\r\n\r\n\t   uint idx = participants.length;\r\n       participants.length += 1;\r\n       participants[idx].amount = msg.value;\r\n\t   participants[idx].etherAddress = msg.sender;\r\n\t   participants[idx].paid = 0;\r\n\t   participants[idx].lastPayment = 0;\r\n\t   \r\n       return;\r\n  }\r\n\r\n  function collectFees() onlyowner {\r\n      if (collectedFees == 0) return;\r\n\r\n      owner.send(collectedFees);\r\n      collectedFees = 0;\r\n  }\r\n  \r\n\r\n  function setOwner(address _owner) onlyowner {\r\n      owner = _owner;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"name\":\"etherAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"paid\",\"type\":\"uint256\"},{\"name\":\"lastPayment\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rand_num\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutIdx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"etherlist_top","CompilerVersion":"v0.2.2-2016-02-22-8339330","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}