{"status":"1","message":"OK","result":[{"SourceCode":"//Simple Msg XChange Registrar (does not provide validateion!)\r\ncontract Message {\r\n\taddress public registrar;\t\r\n\taddress public from;\r\n\taddress public to;\r\n\tstring public hash_msg;\r\n\tstring public hash_ack;\r\n\tuint256 public timestamp_msg;\r\n\tuint256 public timestamp_ack;\r\n\t\r\n\t\r\n\tfunction Message(address _registrar,address _from,address _to,string _hash_msg) {\r\n\t\tregistrar=_registrar;\r\n\t\tfrom=_from;\r\n\t\tto=_to;\r\n\t\thash_msg=_hash_msg;\r\n\t\ttimestamp_msg=now;\r\n\t}\r\n\t\r\n\tfunction ack(string _hash) {\r\n\t\tif(msg.sender!=to) throw;\r\n\t\tif(timestamp_ack>0) throw;\r\n\t\thash_ack=_hash;\r\n\t\ttimestamp_ack=now;\t\t\r\n\t}\r\n\t\r\n\tfunction() {\r\n\t\tif(msg.value>0) {\r\n\t\t\tif(msg.sender==from) {\t\t\t\r\n\t\t\t\tto.send(msg.value);\r\n\t\t\t} else {\r\n\t\t\t\tfrom.send(msg.value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\ncontract Registrar\r\n{\r\n\taddress public registrar;\t\t\r\n\t\r\n\tuint256 public fee_registration;\r\n\tuint256 public fee_msg;\r\n\tuint256 public cnt_registrations;\r\n\t\r\n\tstruct Registration {\r\n\t\taddress adr;\r\n\t\tstring hash;\r\n\t\tstring gnid;\r\n\t}\t\r\n\t\r\n\tmapping(address=>Registration) public regadr;\t\r\n\tmapping(address=>Message[]) public msgs;\r\n\tmapping(address=>Message[]) public sent;\r\n\tmapping(address=>bool) public preregister;\t\r\n\t\r\n\tRegistration[] public regs;\r\n\t\r\n\tfunction Registrar() {\r\n\t\tregistrar=msg.sender;\r\n\t}\r\n\t\r\n\tfunction register(string hash) {\r\n\t\tupdateRegistration(hash,'');\t\t\r\n\t}\r\n\t\r\n\tfunction unregister() {\r\n\t\tdelete regadr[msg.sender];\r\n\t}\r\n\t\r\n\tfunction updateRegistration(string hash,string gnid) {\t\t\r\n\t\tif((msg.value>=fee_registration)||(preregister[msg.sender])) {\t\t\t\r\n\t\t\tregadr[msg.sender]=Registration(msg.sender,hash,gnid);\r\n\t\t\tregs.push(regadr[msg.sender]);\r\n\t\t\tif(fee_registration>0) registrar.send(this.balance);\r\n\t\t\tpreregister[msg.sender]=false;\r\n\t\t\tcnt_registrations++;\r\n\t\t} else throw;\r\n\t}\r\n\t\r\n\tfunction preRegister(address preReg) {\r\n\t\tif(msg.sender!=registrar) throw;\r\n\t\tpreReg.send(msg.value);\t\t\r\n\t\tpreregister[preReg]=true;\r\n\t}\r\n\t\r\n\tfunction getMsgs() returns (Message[]) {\r\n\t\treturn msgs[msg.sender];\t\r\n\t}\r\n\t\r\n\tfunction setRegistrationPrice(uint256 price) {\r\n\t\tif(msg.sender!=registrar) throw;\r\n\t\tfee_registration=price;\r\n\t}\r\n\t\r\n\tfunction setMsgPrice(uint256 price) {\r\n\t\tif(msg.sender!=registrar) throw;\r\n\t\tfee_msg=price;\r\n\t}\r\n\t\r\n\tfunction sendMsg(address to,string hash) {\r\n\t\tif(msg.value>=fee_msg) {\t\r\n\t\t\t    Message m = new  Message(this,msg.sender,to,hash);\r\n\t\t\t\tmsgs[to].push(m);\t\r\n\t\t\t    sent[msg.sender].push(m);\r\n\t\t\tif(fee_msg>0) registrar.send(this.balance);\r\n\t\t} else throw;\t\t\r\n\t}\r\n\t\r\n\tfunction ackMsg(uint256 msgid,string hash) {\r\n\t\tMessage message =Message(msgs[msg.sender][msgid]);\r\n\t\tmessage.ack(hash);\r\n\t}\r\n\t\r\n\tfunction() {\r\n\t\tif(msg.value>0) {\r\n\t\t\tregistrar.send(msg.value);\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"preregister\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"msgs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMsgs\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"preReg\",\"type\":\"address\"}],\"name\":\"preRegister\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"gnid\",\"type\":\"string\"}],\"name\":\"updateRegistration\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee_registration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setMsgPrice\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"regadr\",\"outputs\":[{\"name\":\"adr\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"gnid\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"msgid\",\"type\":\"uint256\"},{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"ackMsg\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee_msg\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"regs\",\"outputs\":[{\"name\":\"adr\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"gnid\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setRegistrationPrice\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unregister\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cnt_registrations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Registrar","CompilerVersion":"v0.3.5-2016-07-01-48238c9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}