{"status":"1","message":"OK","result":[{"SourceCode":"contract CryptoHill {\r\n    \r\n  address admin;\r\n  address leader;\r\n  bytes32 leaderHash;\r\n  bytes32 difficulty;\r\n  bytes32 difficultyWorldRecord;\r\n  uint fallenLeaders;\r\n  uint startingTime;\r\n  uint gameLength;\r\n  string leaderMessage;\r\n  string defaultLeaderMessage;\r\n  \r\n  event Begin(string log);\r\n  event Leader(string log, address newLeader, bytes32 newHash);\r\n  event GameOver(string log);\r\n  event Winner (string log, address winner);\r\n  event NoWinner (string log);\r\n  event WorldRecord (string log, bytes32 DifficultyRecord, address RecordHolder);\r\n  \r\n  function CryptoHill(){ \r\n      \r\n    //Admin Backdoor\r\n    admin = msg.sender;\r\n\r\n    //Starting Time\r\n    startingTime = block.timestamp;\r\n    \r\n    //Game Length (TODO: Change to 1 weeks)\r\n    gameLength = 1 weeks;\r\n\r\n    //Initial seed for the first challenge. This should always be in rotation afterward.\r\n    leaderHash = sha3(\"09F911029D74E35BD84156C5635688C0\");\r\n\r\n    //First leader is the creator of the contract\r\n    leader = msg.sender;\r\n\r\n    //The placeholder leader message\r\n    defaultLeaderMessage = \"If you're this weeks leader, you own this field. Write a message here.\";\r\n    leaderMessage = defaultLeaderMessage;\r\n    \r\n    //This difficulty starts as easy as possible. Any XOR will be less, to start.\r\n    difficulty = leaderHash;\r\n    \r\n    //Seed the world record\r\n    difficultyWorldRecord = leaderHash;\r\n    \r\n    //Counter for successful collisions this week.\r\n    fallenLeaders = 0;\r\n\r\n    Begin(\"Collide the most bits of the leader's hash to replace the leader. Leader will win any bounty at the end of the week.\");\r\n\r\n  }\r\n  \r\n  function reset() private{\r\n      \r\n      //Make the hash unpredictable.\r\n      leaderHash = sha3(block.timestamp);\r\n      \r\n      //Reset the leader message\r\n      leaderMessage = defaultLeaderMessage;\r\n      difficulty = leaderHash;\r\n      leader = admin;\r\n      fallenLeaders = 0;\r\n  }\r\n  \r\n  function checkDate() private returns (bool success) {\r\n      \r\n      //Are we one week beyond the last game? TODO change time for mainnet\r\n      if (block.timestamp > (startingTime + gameLength)) {\r\n          \r\n          //If so, log winner. If the admin \"wins\", it's because no one else won.\r\n          if(leader != admin){\r\n            Winner(\"Victory! Game will be reset to end in 1 week (in block time).\", leader);\r\n            leader.send(this.balance);\r\n          }else NoWinner(\"No winner! Game will be reset to end in 1 week (in block time).\");\r\n\r\n          startingTime = block.timestamp;\r\n\r\n          //Reset\r\n          reset();\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  function overthrow(string challengeData) returns (bool success){\r\n        \r\n        //Create hash from player data sent to contract\r\n        var challengeHash = sha3(challengeData);\r\n\r\n        //Check One: Submission too late, reset game w/ new hash\r\n        if(checkDate())\r\n            return false;\r\n        \r\n        //Check Two: Cheating - of course last hash will collide!\r\n        if(challengeHash == leaderHash)\r\n            return false;\r\n\r\n        //Check Three: Core gaming logic favoring collisions of MSB\r\n        if((challengeHash ^ leaderHash) > difficulty)\r\n          return false;\r\n\r\n        //If player survived the checks, they've overcome difficulty level and beat the leader.\r\n        //Update the difficulty. This makes the game progressively harder through the week.\r\n        difficulty = (challengeHash ^ leaderHash);\r\n        \r\n        //Did they set a record?\r\n        challengeWorldRecord(difficulty);\r\n        \r\n        //We have a new Leader\r\n        leader = msg.sender;\r\n        \r\n        //The winning hash is our new hash. This undoes any work being done by competition!\r\n        leaderHash = challengeHash;\r\n        \r\n        //Announce our new victor. Congratulations!    \r\n        Leader(\"New leader! This is their address, and the new hash to collide.\", leader, leaderHash);\r\n        \r\n        //Keep track of how many new leaders we've had this week.\r\n        fallenLeaders++;\r\n        \r\n        return true;\r\n  }\r\n  \r\n  function challengeWorldRecord (bytes32 difficultyChallenge) private {\r\n      if(difficultyChallenge < difficultyWorldRecord) {\r\n        difficultyWorldRecord = difficultyChallenge;\r\n        WorldRecord(\"A record setting collision occcured!\", difficultyWorldRecord, msg.sender);\r\n      }\r\n  }\r\n  \r\n  function changeLeaderMessage(string newMessage){\r\n        //The leader gets to talk all kinds of shit. If abuse, might remove.\r\n        if(msg.sender == leader)\r\n            leaderMessage = newMessage;\r\n  }\r\n  \r\n  //The following functions designed for mist UI\r\n  function currentLeader() constant returns (address CurrentLeaderAddress){\r\n      return leader;\r\n  }\r\n  function Difficulty() constant returns (bytes32 XorMustBeLessThan){\r\n      return difficulty;\r\n  }\r\n  function LeaderHash() constant returns (bytes32 leadingHash){\r\n      return leaderHash;\r\n  }\r\n  function LeaderMessage() constant returns (string MessageOfTheDay){\r\n      return leaderMessage;\r\n  }\r\n  function FallenLeaders() constant returns (uint Victors){\r\n      return fallenLeaders;\r\n  }\r\n  function GameEnds() constant returns (uint EndingTime){\r\n      return startingTime + gameLength;\r\n  }\r\n\r\n  function kill(){\r\n      if (msg.sender == admin){\r\n        GameOver(\"The Crypto Hill has ended.\");\r\n        selfdestruct(admin);\r\n      }\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newMessage\",\"type\":\"string\"}],\"name\":\"changeLeaderMessage\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"challengeData\",\"type\":\"string\"}],\"name\":\"overthrow\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Difficulty\",\"outputs\":[{\"name\":\"XorMustBeLessThan\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FallenLeaders\",\"outputs\":[{\"name\":\"Victors\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LeaderMessage\",\"outputs\":[{\"name\":\"MessageOfTheDay\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentLeader\",\"outputs\":[{\"name\":\"CurrentLeaderAddress\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GameEnds\",\"outputs\":[{\"name\":\"EndingTime\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LeaderHash\",\"outputs\":[{\"name\":\"leadingHash\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"}],\"name\":\"Begin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"newLeader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newHash\",\"type\":\"bytes32\"}],\"name\":\"Leader\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"Winner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"}],\"name\":\"NoWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"log\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"DifficultyRecord\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"RecordHolder\",\"type\":\"address\"}],\"name\":\"WorldRecord\",\"type\":\"event\"}]","ContractName":"CryptoHill","CompilerVersion":"v0.3.2-2016-05-06-9e36bdd","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}