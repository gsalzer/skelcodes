{"status":"1","message":"OK","result":[{"SourceCode":"/* \r\nMicroDAO V0.0.2 - <me@thorsten-zoerner.com>\r\n===========================================================\r\nSimplified DAO allowing to do initial funding.\r\n- Funders are able to specify how long to keep funds in.\r\n- If funding is not closed by this time fundes returned\r\n- Close funding is a manual taken by the director\r\n\r\nSingle Director\r\n- Has the possibility to file SpendingRequest\r\n- allowed to change fundamental parameters\r\n- allowed to move directorship forward\r\n- deadman switch prevents lost DAO.\r\n\r\nEach Spending needs to be approved by share holders (Vote)\r\n- spendings have a time to vote\r\n- spendings require to be executed in a given number of days\r\n\r\n- Checked for recursive withdraw bug (DAO Hack) \r\n*/\r\n\r\ncontract SpendingRequest {\r\n\tstring public name=\"SpendingRequest 4 MicroDAO\";\r\n\t address public creator;\r\n\t string public description;\r\n\t uint256 public request_until;\r\n\t uint256 public vote_until;\r\n\t\t\r\n\t option[] public  options;\r\n \t address public dao;\r\n\t mapping(address=>bool) public voted;\r\n\t bool public voting_started;\r\n\t bool public executed;\r\n\t address public result_payto;\r\n\t uint256 public result_amount;\r\n\t uint256 public result_votes;\r\n\t\r\n\tstruct option {\r\n\t\tstring description;\r\n\t\taddress payout_to;\r\n\t\tuint256 eth_amount;\t\t\r\n\t\tuint256 votes_pro;\r\n\t\tuint256 votes_veto;\r\n\t}\r\n\t\r\n\tfunction SpendingRequest () {\r\n\t\tcreator=msg.sender;\r\n\t}\r\n\t\r\n\tfunction setDescription(string _description) {\r\n\t\tif(voting_started) throw;\r\n\t\tdescription=_description;\t\t\r\n\t}\r\n\t\r\n\tfunction setDAO(address _dao) {\r\n\t\tif(msg.sender!=creator) throw;\r\n\t\tif(voting_started) throw;\r\n \t\tif(dao!=0) throw;\r\n\t\tMicroDAO d = MicroDAO(_dao);\r\n\t\tif(d.balanceOf(creator)<1) throw;\r\n\t\tdao=_dao;\t\t\r\n\t}\r\n\t\r\n\tfunction execute(){\r\n\t\tif(vote_until>now) return;\r\n\t\tif(request_until<now) return;\r\n\t\tif((msg.sender!=dao)&&(msg.sender!=creator)) throw;\r\n\t\tfor(var i=0;i<options.length;i++) {\r\n\t\t\tif(options[i].votes_pro-options[i].votes_veto>result_votes) {\r\n\t\t\t\tresult_payto=options[i].payout_to;\r\n\t\t\t\tresult_amount=options[i].eth_amount;\r\n\t\t\t\tif(options[i].votes_veto>options[i].votes_pro) result_votes=0; else \r\n\t\t\t\tresult_votes=options[i].votes_pro-options[i].votes_veto;\r\n\t\t\t}\r\n\t\t}\r\n\t\texecuted=true;\t\t\r\n\t}\r\n\t\r\n\tfunction vote(uint256 option,bool veto) {\t\t\r\n\t\tif(voted[msg.sender]) throw;\r\n\t\tif(now<vote_until) throw;\r\n\t\tvoting_started=true;\r\n\t\tMicroDAO d = MicroDAO(dao);\r\n\t\tif(!veto) options[option].votes_pro+=d.balanceOf(msg.sender);\telse options[option].votes_veto+=d.balanceOf(msg.sender);\r\n\t\t\r\n\t\td.blockTransfer(msg.sender,vote_until);\r\n\t}\r\n\tfunction setRequestUntil(uint8 days_from_now) {\r\n\t\tif(msg.sender!=creator) throw;\r\n\t\tif(voting_started) throw;\r\n\t\trequest_until=now+(86400*days_from_now);\t\t\r\n\t}\r\n\tfunction setVotetUntil(uint8 days_from_now) {\r\n\t\tif(msg.sender!=creator) throw;\r\n\t\tif(voting_started) throw;\r\n\t\tvote_until=now+(86400*days_from_now);\t\t\r\n\t}\r\n\tfunction addOption(string _description,address _payout_to,uint256 _amount) {\r\n\t\tif(msg.sender!=creator) throw;\r\n\t\tif(voting_started) throw;\r\n\t\toptions.push(option(_description,_payout_to,_amount,0,0));\r\n\t}\t\r\n}\r\ncontract MicroDAO\r\n{\r\n\tstring public directorNode;\r\n\taddress public director;\r\n\tstring public directorName;\r\n\tstring public directorJurisdication;\r\n\tbool public initialFunding;\t\r\n\tuint256 public sharesRaised;\r\n\tuint public lockInDays;\t\r\n\tstring public name =\"MicroDAO\";\r\n\tstring public symbol =\"E/\";\r\n\tuint256 public fundingGoal;\r\n\tuint256 public balanceFinney;\r\n\tuint256 public directorLockUntil;\r\n\tuint256 public directorLockDays;\r\n\tuint256 public directorTransferShareRequired;\r\n\tmapping (address => uint256) public balanceOf;\t\t\r\n\tmapping (address => uint256) public fundsExpire;\r\n\tmapping (address => uint256) public blockedtransfer;\r\n\t\r\n\t\r\n\taddress[] public funders;\r\n\tSpendingRequest[]  public allowances;\r\n\tstruct booking {\r\n\t\tuint256 time;\r\n\t\tuint256 funding;\r\n\t\tuint256 spending;\r\n\t\taddress counterpart;\r\n\t\tstring text;\r\n\t}\r\n\tbooking[] public bookings;\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\t\r\n\tfunction MicroDAO() {\r\n\t\tinitialFunding=true;\r\n\t\tdirector=msg.sender;\t\r\n\t\tdirectorLockUntil=now+(86400*30);\t\t\r\n\t}\r\n\tfunction setDirectorNode(string node) {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tdirectorNode=node;\r\n\t\tdirectorLockUntil=now+(86400*directorLockDays);\r\n\t} \r\n\t\r\n\tfunction blockTransfer(address a,uint256 until) {\r\n\t\tbool found=false;\r\n\t\tfor(var i=0;((i<allowances.length)&&(found==false));i++) {\r\n\t\t\tif(allowances[i]==msg.sender) found=true;\r\n\t\t}\r\n\t\tif(found) {\r\n\t\t\tif(blockedtransfer[a]>until) {\r\n\t\t\t\tblockedtransfer[a]=until;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction setDirectorLock(uint256 number_of_days,uint256 requiredShares) {\r\n\t\tif(msg.sender!=director) throw; \r\n\t\tif(requiredShares>sharesRaised) throw;\r\n\t\tif(number_of_days>365) number_of_days=365;\r\n\t\t\r\n\t\t\r\n\t\tdirectorLockDays=number_of_days;\r\n\t\tdirectorTransferShareRequired=requiredShares;\r\n\t}\r\n\t\r\n\tfunction transferDirector(address director) {\r\n\t\t// Dead Director check ...\t\t\r\n\t\tif(msg.sender==director) {\r\n\t\t\tdirector=director;\r\n\t\t\tdirectorName=\"\";\r\n\t\t\tdirectorJurisdication=\"\";\r\n\t\t\tinitialFunding=true;\r\n\t\t} else if((now>directorLockUntil)&&(balanceOf[msg.sender]>directorTransferShareRequired)) {\r\n\t\t\tdirector=msg.sender;\r\n\t\t\tdirectorName=\"\";\r\n\t\t\tdirectorJurisdication=\"\";\r\n\t\t\tinitialFunding=true;\r\n\t\t}\r\n\t}\r\n\tfunction setdirectorName(string name) {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tif(!initialFunding) throw;\r\n\t\tdirectorName=name;\r\n\t}\r\n\t\r\n\tfunction setFundingGoal(uint256 goal) {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tfundingGoal=goal;\r\n\t}\r\n\t\r\n\tfunction setInitialLockinDays(uint number_of_days) {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tlockInDays=number_of_days;\r\n\t}\r\n\t\r\n\t\r\n\tfunction setJurisdication(string juri) {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tif(!initialFunding) throw;\r\n\t\tdirectorJurisdication=juri;\r\n\t}\r\n\t\r\n\tfunction addSpendingRequest(address spendingRequest) {\r\n\t\tif(msg.sender!=director) throw;\t\r\n\t\tSpendingRequest s = SpendingRequest(spendingRequest);\t\t\r\n\t\tif(s.executed()) throw;\r\n\t\tif(s.vote_until()<now) throw; \r\n\t\tallowances.push(s);\t\t\r\n\t}\r\n\t\r\n\tfunction executeSpendingRequests() {\r\n\t\tfor(var i=0;i<allowances.length;i++) {\r\n\t\t\tSpendingRequest s =SpendingRequest(allowances[i]);\r\n\t\t\tif(!s.executed()) {\r\n\t\t\t\tif((s.vote_until()<now)&&(s.request_until()>now)) {\r\n\t\t\t\t\ts.execute();\r\n\t\t\t\t\tdirectorLockUntil=now+(86400*directorLockDays);\r\n\t\t\t\t\tif(s.result_amount()>0) {\r\n\t\t\t\t\t\tif(s.result_payto()!=0) {\r\n\t\t\t\t\t\t\ts.result_payto().send(s.result_amount()*1 ether);\r\n\t\t\t\t\t\t\tbookings.push(booking(now,0,s.result_amount()*1 ether,s.result_payto(),\"Executed SpendingRequest\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction myFundsExpireIn(uint256 number_of_days) {\r\n\t\tvar exp=now+(86400*number_of_days);\r\n\t\tif(exp>fundsExpire[msg.sender]) fundsExpire[msg.sender]=exp; else throw;\r\n\t}\r\n\t\t\r\n\tfunction closeFunding() {\r\n\t\tif(msg.sender!=director) throw;\r\n\t\tinitialFunding=false;\t\t\r\n\t\tcheckExpiredfunds();\t\t\r\n\t}\r\n\t\r\n\tfunction checkExpiredfunds() {\r\n\t\tif(!initialFunding) return;\r\n\t\tfor(var i=0;i<funders.length;i++) {\r\n\t\t\tif((fundsExpire[funders[i]]>0)&&((fundsExpire[funders[i]]<now))) {\r\n\t\t\t\tvar amount=balanceOf[funders[i]]*1 finney;\t\t\t\t\r\n\t\t\t\tTransfer(funders[i],this,balanceOf[funders[i]]);\r\n\t\t\t\tsharesRaised-=balanceOf[funders[i]];\r\n\t\t\t\tbalanceOf[funders[i]]=0;\r\n\t\t\t\tfunders[i].send(amount);\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) {\r\n\t\tif(blockedtransfer[msg.sender]>now) throw;\r\n\t\tif (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n        balanceOf[msg.sender] -= _value;                     // Subtract from the sender\r\n        balanceOf[_to] += _value;                            // Add the same to the recipient\r\n\t\tif(balanceOf[_to]==0) {\r\n\t\t\tfunders.push(_to);\r\n\t\t}\r\n        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n    }\r\n\t\r\n\tfunction() {\t\r\n\t\t var funding_type=\"Incomming\";\t\t\t\r\n\t\t\tvar finneys=msg.value/1 finney;\r\n\t\t\tif(initialFunding) {\r\n\t\t\t\t\r\n\t\t\t\tif(balanceOf[msg.sender]==0) {\r\n\t\t\t\t\tfunders.push(msg.sender);\r\n\t\t\t\t}\t\t\r\n\t\t\t\tif(msg.value<100 finney) throw;\r\n\t\t\t\t\r\n\t\t\t\tfundsExpire[msg.sender]=now+(lockInDays*86400);\r\n\t\t\t\tbalanceOf[msg.sender]+=finneys;\r\n\t\t\t\tTransfer(this,msg.sender,finneys);\r\n\t\t\t\tsharesRaised+=finneys;\r\n\t\t\t\tfunding_type=\"Initial Funding\";\r\n\t\t\t}\r\n\t\t\tbookings.push(booking(now,msg.value,0,msg.sender,funding_type));\r\n\t\t\tbalanceFinney=this.balance/1 finney;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"executeSpendingRequests\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number_of_days\",\"type\":\"uint256\"},{\"name\":\"requiredShares\",\"type\":\"uint256\"}],\"name\":\"setDirectorLock\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bookings\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"funding\",\"type\":\"uint256\"},{\"name\":\"spending\",\"type\":\"uint256\"},{\"name\":\"counterpart\",\"type\":\"address\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeFunding\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"string\"}],\"name\":\"setDirectorNode\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorJurisdication\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"},{\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"blockTransfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkExpiredfunds\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blockedtransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"goal\",\"type\":\"uint256\"}],\"name\":\"setFundingGoal\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorNode\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"director\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowances\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorLockDays\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundsExpire\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number_of_days\",\"type\":\"uint256\"}],\"name\":\"myFundsExpireIn\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sharesRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorLockUntil\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceFinney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"juri\",\"type\":\"string\"}],\"name\":\"setJurisdication\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setdirectorName\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number_of_days\",\"type\":\"uint256\"}],\"name\":\"setInitialLockinDays\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorTransferShareRequired\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spendingRequest\",\"type\":\"address\"}],\"name\":\"addSpendingRequest\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"director\",\"type\":\"address\"}],\"name\":\"transferDirector\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockInDays\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"MicroDAO","CompilerVersion":"v0.3.1-2016-04-13-9137506","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}