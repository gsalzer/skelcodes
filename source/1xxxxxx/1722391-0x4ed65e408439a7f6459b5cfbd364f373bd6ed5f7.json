{"status":"1","message":"OK","result":[{"SourceCode":"contract PRNG_Challenge {\r\n\r\n    // PRIVATE VARIABLES\r\n    address private admin;\r\n    uint256 private constant min_value = 100 finney; // 0.1 ETH\r\n    \r\n    // PUBLIC VARIABLES\r\n    uint256 public constant lucky_number = 108435827775939881852079940206236050880764931249577763315065068000725104274235;\r\n    uint256 public last_number;\r\n    uint256 public attempts;\r\n    address public winner;\r\n    \r\n    // EVENTS\r\n    event Attempt(address Participant, uint256 Number);\r\n    event Winner(address Winner_Address, uint256 Amount);\r\n\r\n    // CONSTRUCTOR\r\n    function PRNG_Challenge()\r\n        private\r\n    {\r\n        admin = msg.sender;\r\n        last_number = 0;\r\n        attempts = 0;\r\n        winner = 0;\r\n    }\r\n\r\n    // MODIFIERS\r\n    modifier only_min_value() {\r\n        if (msg.value < min_value) throw;\r\n        _\r\n    }\r\n    modifier only_no_value() {\r\n        if (msg.value != 0)  throw;\r\n        _\r\n    }\r\n    modifier only_admin() {\r\n        if (msg.sender != admin) throw;\r\n        _\r\n    }\r\n    modifier not_killed() {\r\n        if (winner != 0) throw;\r\n        _\r\n    }\r\n    \r\n    // CHALLENGE\r\n    function challenge()\r\n        private\r\n    {\r\n        address participant = msg.sender;\r\n        uint64 shift_32 = uint64(4294967296); // Shift by 32 bit\r\n        uint32 hash32 = uint32(sha3(msg.value,participant,participant.balance,block.blockhash(block.number-1),block.timestamp,block.number)); // Entropy\r\n        uint64 hash64 = uint64(hash32)*shift_32 + uint32(sha3(hash32));\r\n        uint96 hash96 = uint96(hash64)*shift_32 + uint32(sha3(hash64));\r\n        uint128 hash128 = uint128(hash96)*shift_32 + uint32(sha3(hash96));\r\n        uint160 hash160 = uint160(hash128)*shift_32 + uint32(sha3(hash128));\r\n        uint192 hash192 = uint192(hash160)*shift_32 + uint32(sha3(hash160));\r\n        uint224 hash224 = uint224(hash192)*shift_32 + uint32(sha3(hash192));\r\n        uint256 hash256 = uint256(hash224)*shift_32 + uint32(sha3(hash224));\r\n        if (hash256 == lucky_number) {\r\n            Winner(participant, this.balance);\r\n            if (!participant.send(this.balance)) throw;\r\n            winner = participant;\r\n        }\r\n        last_number = hash256;\r\n        attempts++;\r\n        Attempt(participant, last_number);\r\n    }\r\n    \r\n    // KILL\r\n    function admin_kill()\r\n        public\r\n        not_killed()\r\n        only_admin()\r\n        only_no_value()\r\n    {\r\n        if (!admin.send(this.balance)) throw;\r\n        winner = admin;\r\n    }\r\n    \r\n    // DEFAULT FUNCTION\r\n    function()\r\n        public\r\n        not_killed()\r\n        only_min_value()\r\n    {\r\n        challenge();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lucky_number\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attempts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_number\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"admin_kill\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Participant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Number\",\"type\":\"uint256\"}],\"name\":\"Attempt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Winner_Address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"Winner\",\"type\":\"event\"}]","ContractName":"PRNG_Challenge","CompilerVersion":"v0.3.5-2016-06-14-371690f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}