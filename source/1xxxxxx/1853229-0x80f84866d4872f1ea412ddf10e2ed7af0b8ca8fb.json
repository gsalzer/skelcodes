{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nThis smartcontract used to store documents text on the Ethereum blockchain\r\nand to get the document by document's hash (sha256).\r\n\r\n*/\r\n\r\ncontract ProofOfExistence{\r\n\r\n    /* ---- Public variables: */\r\n    string public created;\r\n    address public manager; // account that adds info to this smartcontract\r\n    uint256 public docIndex;   // record's numbers and number of records\r\n\r\n    mapping (uint256 => Doc) public indexedDocs; // docIndex => Doc\r\n    // to get Doc obj call ProofOfExistence.indexedDocs(docIndex);\r\n\r\n    mapping (bytes32 => Doc) public sha256Docs; // docHash => Doc\r\n    // to get Doc obj call ProofOfExistence.docs(docHash);\r\n    mapping (bytes32 => Doc) public sha3Docs; // docHash => Doc\r\n    // to get Doc obj call ProofOfExistence.docs(docHash);\r\n\r\n\r\n    /* ---- Stored document structure: */\r\n\r\n    struct Doc {\r\n        uint256 docIndex; // .............................................1\r\n        string publisher; // publisher's email............................2\r\n        uint256 publishedOnUnixTime; // block timestamp (block.timestamp).3\r\n        uint256 publishedInBlockNumber; // block.number...................4\r\n        string docText; // text of the document...........................5\r\n        bytes32 sha256Hash; // ...........................................6\r\n        bytes32 sha3Hash; // .............................................7\r\n    }\r\n\r\n    /* ---- Constructor: */\r\n\r\n    function ProofOfExistence(){\r\n        manager = msg.sender;\r\n        created = \"cryptonomica.net\";\r\n    }\r\n\r\n    /* ---- Event:  */\r\n    // This generates a public event on the blockchain that will notify clients.\r\n    // In 'Mist' SmartContract page enable 'Watch contract events'\r\n    event DocumentAdded(uint256 docIndex,\r\n                        string publisher,\r\n                        uint256 publishedOnUnixTime);\r\n\r\n\r\n    /* ----- Main method: */\r\n\r\n    function addDoc(\r\n                    string _publisher,\r\n                    string _docText) returns (bytes32) {\r\n        // authorization\r\n        if (msg.sender != manager){\r\n            // throw;\r\n            return sha3(\"not authorized\"); //\r\n            // <- is 'bytes32' too:\r\n            // \"0x8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1\"\r\n        }\r\n\r\n        // chech if exists\r\n        if (sha256Docs[sha256(_docText)].docIndex > 0){\r\n            // throw;\r\n            return sha3(\"text already exists\"); //\r\n            // <- is 'bytes32' too:\r\n            // \"0xd42b321cfeadc9593d0a28c4d013aaad8e8c68fc8e0450aa419a130a53175137\"\r\n        }\r\n        // document number\r\n        docIndex = docIndex + 1;\r\n        // add document data:\r\n        indexedDocs[docIndex] = Doc(docIndex,\r\n                                    _publisher,\r\n                                    now,\r\n                                    block.number,\r\n                                    _docText,\r\n                                    sha256(_docText),\r\n                                    sha3(_docText)\r\n                                    );\r\n        sha256Docs[sha256(_docText)] = indexedDocs[docIndex];\r\n        sha3Docs[sha3(_docText)]   = indexedDocs[docIndex];\r\n        // add event\r\n        DocumentAdded(indexedDocs[docIndex].docIndex,\r\n                      indexedDocs[docIndex].publisher,\r\n                      indexedDocs[docIndex].publishedOnUnixTime\r\n                      );\r\n        // return sha3 of the stored document\r\n        // (sha3 is better for in web3.js)\r\n        return indexedDocs[docIndex].sha3Hash;\r\n    }\r\n\r\n    /* ---- Utilities: */\r\n\r\n    function () {\r\n        // This function gets executed if a\r\n        // transaction with invalid data is sent to\r\n        // the contract or just ether without data.\r\n        // We revert the send so that no-one\r\n        // accidentally loses money when using the\r\n        // contract.\r\n        throw;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"created\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sha3Docs\",\"outputs\":[{\"name\":\"docIndex\",\"type\":\"uint256\"},{\"name\":\"publisher\",\"type\":\"string\"},{\"name\":\"publishedOnUnixTime\",\"type\":\"uint256\"},{\"name\":\"publishedInBlockNumber\",\"type\":\"uint256\"},{\"name\":\"docText\",\"type\":\"string\"},{\"name\":\"sha256Hash\",\"type\":\"bytes32\"},{\"name\":\"sha3Hash\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"docIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexedDocs\",\"outputs\":[{\"name\":\"docIndex\",\"type\":\"uint256\"},{\"name\":\"publisher\",\"type\":\"string\"},{\"name\":\"publishedOnUnixTime\",\"type\":\"uint256\"},{\"name\":\"publishedInBlockNumber\",\"type\":\"uint256\"},{\"name\":\"docText\",\"type\":\"string\"},{\"name\":\"sha256Hash\",\"type\":\"bytes32\"},{\"name\":\"sha3Hash\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sha256Docs\",\"outputs\":[{\"name\":\"docIndex\",\"type\":\"uint256\"},{\"name\":\"publisher\",\"type\":\"string\"},{\"name\":\"publishedOnUnixTime\",\"type\":\"uint256\"},{\"name\":\"publishedInBlockNumber\",\"type\":\"uint256\"},{\"name\":\"docText\",\"type\":\"string\"},{\"name\":\"sha256Hash\",\"type\":\"bytes32\"},{\"name\":\"sha3Hash\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_publisher\",\"type\":\"string\"},{\"name\":\"_docText\",\"type\":\"string\"}],\"name\":\"addDoc\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"docIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"publisher\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"publishedOnUnixTime\",\"type\":\"uint256\"}],\"name\":\"DocumentAdded\",\"type\":\"event\"}]","ContractName":"ProofOfExistence","CompilerVersion":"v0.3.5-2016-07-01-48238c9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}