{"status":"1","message":"OK","result":[{"SourceCode":"contract mortal {\r\n    address private owner;\r\n    /* this function is executed at initialization and sets the owner of the contract */\r\n    function mortal() { owner = msg.sender; }\r\n    /* Function to recover the funds on the contract */\r\n    function kill() { if (msg.sender == owner) selfdestruct(owner); }\r\n}\r\n\r\ncontract EtherPennySlots is mortal {\r\n    address private hotAccount = 0xD837ACd68e7dd0A0a9F03d72623d5CE5180e3bB8;\r\n    address public lastWinner;\r\n    address[]  private currentTicketHolders;\r\n    \r\n    function placeWager() {\r\n       if (msg.value > 0 finney && msg.value < 51 finney) {\r\n            uint i = 0;\r\n            for (i = 0; i < msg.value; i++){\r\n                currentTicketHolders.length++;\r\n                currentTicketHolders[currentTicketHolders.length-1] = msg.sender; \r\n            }\r\n                       \r\n            if (this.balance >= 601 finney) {\r\n                uint nr_tickets = currentTicketHolders.length;\r\n                uint randomTicket = block.number % nr_tickets;\r\n                address randomEntry = currentTicketHolders[randomTicket];\r\n                if (hotAccount.send(100 finney) && randomEntry.send(500 finney)) {\r\n                    lastWinner = randomEntry;\r\n                    currentTicketHolders.length = 0;\r\n                }\r\n            } \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"placeWager\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"}]","ContractName":"EtherPennySlots","CompilerVersion":"v0.3.5-2016-06-27-2ccfea8","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}