{"status":"1","message":"OK","result":[{"SourceCode":"// Last is me! Lottery paying the last player\r\n//\r\n// git: https://github.com/lastisme/lastisme.github.io/\r\n// url: http://lastis.me\r\n\r\ncontract owned {\r\n  address public owner;\r\n\r\n  function owned() {\r\n    owner = msg.sender;\r\n  }\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) throw;\r\n    _\r\n  }\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract LastIsMe is owned {\r\n  event TicketBought(address _from);\r\n  event WinnerPayedTicketBought(address _winner, address _from);\r\n\r\n  //constant once constructed\r\n  uint public blocks;\r\n  uint public price;\r\n  ///////////////////////////\r\n\r\n  //semi-constant, tweakable with limits after creation\r\n  uint public houseFee;      // THOUSANDTHS\r\n  uint public houseFeeVal;   // houseFee/1000 * price\r\n  uint public refFeeVal;     // half of the house fee val\r\n\r\n  uint public lotteryFee;    // THOUSANDTHS\r\n  uint public lotteryFeeVal; // lotteryFee/1000 * price\r\n\r\n  address public leftLottery;\r\n  address public rightLottery;\r\n  //////////////////////////////////////////////////\r\n\r\n  uint constant MAX_HOUSE_FEE_THOUSANDTHS   = 20;\r\n  uint constant MAX_LOTTERY_FEE_THOUSANDTHS = 40;\r\n\r\n  address public lastPlayer;\r\n  uint    public lastBlock;\r\n  uint    public totalWinnings;\r\n  uint    public jackpot;\r\n  uint    public startedAt;\r\n\r\n  struct Winners {\r\n    address winner;\r\n    uint jackpot;\r\n    uint timestamp;\r\n  }\r\n  Winners[] public winners;\r\n\r\n\r\n\r\n  function LastIsMe(uint _priceParam, uint _blocksParam) {\r\n    if(_priceParam==0 || _blocksParam==0) throw;\r\n    price  = _priceParam;\r\n    blocks = _blocksParam;\r\n    setHouseFee(10);\r\n    setLotteryFee(40);\r\n    totalWinnings = 0;\r\n    jackpot = 0;\r\n  }\r\n\r\n  function buyTicket(address _ref) {\r\n    if( msg.value >= price ) { //ticket bought\r\n\r\n      if( msg.value > price ) {\r\n        msg.sender.send(msg.value-price);  //payed more than required => refund\r\n      }\r\n\r\n      if( remaining() == 0 && lastPlayer != 0x0 ) {  //last player was the winner!\r\n        WinnerPayedTicketBought(lastPlayer,msg.sender);\r\n        winners[winners.length++] = Winners(lastPlayer, jackpot, block.timestamp);\r\n        lastPlayer.send(jackpot);\r\n        totalWinnings=totalWinnings+jackpot;\r\n        startedAt  = block.timestamp;\r\n        lastPlayer = msg.sender;\r\n        lastBlock  = block.number;\r\n        jackpot    = this.balance;\r\n        //I am not paying fee and other lotteries fee if I am the lottery re-starter\r\n      } else {\r\n        TicketBought(msg.sender);\r\n        if(lastPlayer==0x0)   //very first ticket\r\n          startedAt = block.timestamp;\r\n\r\n        lastPlayer = msg.sender;\r\n        lastBlock  = block.number;\r\n\r\n        if(houseFeeVal>0) {  //house fee could be zero\r\n          if(_ref==0x0) {\r\n            owner.send(houseFeeVal);\r\n          } else {\r\n            owner.send(refFeeVal);\r\n            _ref.send(refFeeVal);\r\n          }\r\n        }\r\n\r\n        if(leftLottery!=0x0 && lotteryFeeVal>0)\r\n          leftLottery.send(lotteryFeeVal);\r\n        if(rightLottery!=0x0 && lotteryFeeVal>0)\r\n          rightLottery.send(lotteryFeeVal);\r\n\r\n        jackpot = this.balance;\r\n      }\r\n    }\r\n  }\r\n\r\n  function () {\r\n    buyTicket(0x0);\r\n  }\r\n\r\n  function finance() {\r\n  }\r\n\r\n  function allData() constant returns (uint _balance, address _lastPlayer, uint _lastBlock, uint _blockNumber, uint _totalWinners, uint _jackpot, uint _price, uint _blocks, uint _houseFee, uint _lotteryFee, address _leftLottery, address _rightLottery, uint _totalWinnings, uint _startedAt) {\r\n    return (this.balance, lastPlayer, lastBlock, block.number, winners.length, jackpot, price, blocks, houseFee, lotteryFee, leftLottery, rightLottery, totalWinnings, startedAt);\r\n  }\r\n\r\n  function baseData() constant returns (uint _balance, address _lastPlayer, uint _lastBlock, uint _blockNumber, uint _totalWinners, uint _jackpot, uint _price, uint _blocks, uint _totalWinnings, uint _startedAt) {\r\n    return (this.balance, lastPlayer, lastBlock, block.number, winners.length, jackpot, price, blocks, totalWinnings, startedAt);\r\n  }\r\n\r\n  function elapsed() constant returns (uint) {\r\n    return block.number - lastBlock;  //>=0\r\n  }\r\n\r\n  function remaining() constant returns (uint) {\r\n    var e=elapsed();\r\n    if(blocks>e)\r\n      return blocks - elapsed() ;\r\n    else\r\n      return 0;\r\n  }\r\n\r\n  function totalWinners() constant returns (uint) {\r\n    return winners.length;\r\n  }\r\n\r\n  function updateLeftLottery( address _newValue) onlyOwner {\r\n    leftLottery=_newValue;\r\n  }\r\n\r\n  function updateRightLottery( address _newValue) onlyOwner {\r\n    rightLottery=_newValue;\r\n  }\r\n\r\n  function setLotteryFee(uint _newValue) onlyOwner {\r\n    if( _newValue > MAX_LOTTERY_FEE_THOUSANDTHS ) throw;\r\n    lotteryFee    = _newValue;\r\n    var aThousand = price/1000;\r\n    lotteryFeeVal = aThousand*lotteryFee;\r\n  }\r\n\r\n  function setHouseFee(uint _newValue) onlyOwner {\r\n    if( _newValue > MAX_HOUSE_FEE_THOUSANDTHS ) throw;\r\n    houseFee      = _newValue;\r\n    var aThousand = price/1000;\r\n    houseFeeVal   = aThousand*houseFee;\r\n    refFeeVal     = houseFeeVal / 2;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"houseFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"address\"}],\"name\":\"updateLeftLottery\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"houseFeeVal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"elapsed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finance\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseData\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"},{\"name\":\"_lastPlayer\",\"type\":\"address\"},{\"name\":\"_lastBlock\",\"type\":\"uint256\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"name\":\"_totalWinners\",\"type\":\"uint256\"},{\"name\":\"_jackpot\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_blocks\",\"type\":\"uint256\"},{\"name\":\"_totalWinnings\",\"type\":\"uint256\"},{\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"setLotteryFee\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"setHouseFee\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotteryFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blocks\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"jackpot\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ref\",\"type\":\"address\"}],\"name\":\"buyTicket\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"leftLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotteryFeeVal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"address\"}],\"name\":\"updateRightLottery\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWinnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allData\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"},{\"name\":\"_lastPlayer\",\"type\":\"address\"},{\"name\":\"_lastBlock\",\"type\":\"uint256\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"name\":\"_totalWinners\",\"type\":\"uint256\"},{\"name\":\"_jackpot\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_blocks\",\"type\":\"uint256\"},{\"name\":\"_houseFee\",\"type\":\"uint256\"},{\"name\":\"_lotteryFee\",\"type\":\"uint256\"},{\"name\":\"_leftLottery\",\"type\":\"address\"},{\"name\":\"_rightLottery\",\"type\":\"address\"},{\"name\":\"_totalWinnings\",\"type\":\"uint256\"},{\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWinners\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rightLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refFeeVal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"_priceParam\",\"type\":\"uint256\"},{\"name\":\"_blocksParam\",\"type\":\"uint256\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"TicketBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"WinnerPayedTicketBought\",\"type\":\"event\"}]","ContractName":"LastIsMe","CompilerVersion":"v0.3.2-2016-05-01-bee80f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000000000078","Library":"","SwarmSource":""}]}