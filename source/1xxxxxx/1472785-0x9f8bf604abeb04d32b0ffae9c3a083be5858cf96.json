{"status":"1","message":"OK","result":[{"SourceCode":"contract GameOfThrones {\r\n    address public trueGods;\r\n    // King's Jester\r\n    address public jester;\r\n    // Record the last collection time\r\n    uint public lastCollection;\r\n    // Record the last fell time\r\n    uint public lastFell;\r\n    // Record king life\r\n    uint public onThrone;\r\n    uint public kingCost;\r\n    // Piggy Bank Amount\r\n    uint public piggyBank;\r\n    // Collected Fee Amount\r\n    uint public godBank;\r\n    uint public jesterBank;\r\n    uint public kingBank;\r\n\r\n    // Track the citizens who helped to arm race\r\n    address[] public citizensAddresses;\r\n    uint[] public citizensAmounts;\r\n    uint32 public totalCitizens;\r\n    uint32 public lastCitizenPaid;\r\n    // The mad king establishes the government\r\n    address public madKing;\r\n    // Record how many times the castle had fell\r\n    uint32 public round;\r\n    // Amount already paid back in this round\r\n    uint public amountAlreadyPaidBack;\r\n    // Amount invested in this round\r\n    uint public amountInvested;\r\n\r\n    uint constant TWENTY_FOUR_HOURS = 60 * 60 * 24;\r\n    uint constant PEACE_PERIOD = 60 * 60 * 240;\r\n\r\n    function GameOfThrones() {\r\n        // Define the first castle\r\n        trueGods = msg.sender;\r\n        madKing = msg.sender;\r\n        jester = msg.sender;\r\n        lastFell = block.timestamp;\r\n        lastCollection = block.timestamp;\r\n        onThrone = block.timestamp;\r\n        kingCost = 1 ether;\r\n        amountAlreadyPaidBack = 0;\r\n        amountInvested = 0;\r\n        totalCitizens = 0;\r\n    }\r\n\r\n    function protectKingdom() returns(bool) {\r\n        uint amount = msg.value;\r\n        // Check if the minimum amount if reached\r\n        if (amount < 10 finney) {\r\n            msg.sender.send(msg.value);\r\n            return false;\r\n        }\r\n        // If the amount received is more than 100 ETH return the difference\r\n        if (amount > 100 ether) {\r\n            msg.sender.send(msg.value - 100 ether);\r\n            amount = 100 ether;\r\n        }\r\n\r\n        // Check if the Castle has fell\r\n        if (lastCollection + TWENTY_FOUR_HOURS < block.timestamp) {\r\n            // Send the Piggy Bank to the last 3 citizens\r\n            // If there is no one who contributed this last 24 hours, no action needed\r\n            if (totalCitizens == 1) {\r\n                // If there is only one Citizen who contributed, he gets the full Pigg Bank\r\n                citizensAddresses[citizensAddresses.length - 1].send(piggyBank * 95 / 100);\r\n            } else if (totalCitizens == 2) {\r\n                // If only 2 citizens contributed\r\n                citizensAddresses[citizensAddresses.length - 1].send(piggyBank * 60 / 100);\r\n                citizensAddresses[citizensAddresses.length - 2].send(piggyBank * 35 / 100);\r\n            } else if (totalCitizens >= 3) {\r\n                // If there is 3 or more citizens who contributed\r\n                citizensAddresses[citizensAddresses.length - 1].send(piggyBank * 50 / 100);\r\n                citizensAddresses[citizensAddresses.length - 2].send(piggyBank * 30 / 100);\r\n                citizensAddresses[citizensAddresses.length - 3].send(piggyBank * 15 / 100);\r\n            }\r\n\r\n            godBank += piggyBank * 5 / 100;\r\n            // Define the new Piggy Bank\r\n            piggyBank = 0;\r\n\r\n            // Define the new Castle\r\n            jester = msg.sender;\r\n\r\n            lastFell = block.timestamp;\r\n            citizensAddresses.push(msg.sender);\r\n            citizensAmounts.push(amount * 110 / 100);\r\n            totalCitizens += 1;\r\n            investInTheSystem(amount);\r\n            godAutomaticCollectFee();\r\n            // 95% goes to the Piggy Bank\r\n            piggyBank += amount * 90 / 100;\r\n\r\n            round += 1;\r\n        } else {\r\n            if (lastFell + TWENTY_FOUR_HOURS * 2 >= block.timestamp) {\r\n                citizensAddresses.push(msg.sender);\r\n                citizensAmounts.push(amount * 130 / 100);\r\n            } else {\r\n                citizensAddresses.push(msg.sender);\r\n                citizensAmounts.push(amount * 110 / 100);\r\n            }\r\n            totalCitizens += 1;\r\n            investInTheSystem(amount);\r\n\r\n            while (citizensAmounts[lastCitizenPaid] < (address(this).balance - piggyBank - godBank - kingBank - jesterBank) && lastCitizenPaid <= totalCitizens) {\r\n                citizensAddresses[lastCitizenPaid].send(citizensAmounts[lastCitizenPaid]);\r\n                amountAlreadyPaidBack += citizensAmounts[lastCitizenPaid];\r\n                lastCitizenPaid += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    // fallback function\r\n    function() internal {\r\n        protectKingdom();\r\n    }\r\n\r\n    function investInTheSystem(uint amount) internal {\r\n        // The Castle is still up\r\n        lastCollection = block.timestamp;\r\n        amountInvested += amount;\r\n        // The Jetster takes 5%\r\n        jesterBank += amount * 5 / 100;\r\n        // The mad king takes 5%\r\n        kingBank += amount * 5 / 100;\r\n        // 5% goes to the Piggy Bank\r\n        piggyBank += (amount * 5 / 100);\r\n\r\n        kingAutomaticCollectFee();\r\n        jesterAutomaticCollectFee();\r\n    }\r\n\r\n    // When the mad king decides to give his seat to someone else\r\n    // the king cost will be reset to 1 ether\r\n    function abdicate() {\r\n        if (msg.sender == madKing && msg.sender != trueGods) {\r\n            madKing.send(kingBank);\r\n            if (piggyBank > kingCost * 40 / 100) {\r\n                madKing.send(kingCost * 40 / 100);\r\n                piggyBank -= kingCost * 40 / 100;\r\n            }\r\n            else {\r\n                madKing.send(piggyBank);\r\n                piggyBank = 0;\r\n            }\r\n\r\n            madKing = trueGods;\r\n            kingCost = 1 ether;\r\n        }\r\n    }\r\n\r\n    function murder() {\r\n        uint amount = 100 finney;\r\n        if (msg.value >= amount && msg.sender != jester) {\r\n            // return jester\r\n            jester.send(jesterBank);\r\n            jesterBank = 0;\r\n\r\n            jester = msg.sender;\r\n            msg.sender.send(msg.value - amount);\r\n            investInTheSystem(amount);\r\n        } else {\r\n            throw;\r\n        }\r\n    }\r\n\r\n    // Anyone can usurpation the kingship\r\n    function usurpation() {\r\n        uint amount = msg.value;\r\n        // Add more money for king usurpation cost\r\n        if (msg.sender == madKing) {\r\n            investInTheSystem(amount);\r\n            kingCost += amount;\r\n        } else {\r\n            if (onThrone + PEACE_PERIOD <= block.timestamp && amount >= kingCost * 150 / 100) {\r\n                // return the fees to before king\r\n                madKing.send(kingBank);\r\n                // offer sacrifices to the Gods\r\n                godBank += amount * 5 / 100;\r\n                // new king\r\n                kingCost = amount;\r\n                madKing = msg.sender;\r\n                onThrone = block.timestamp;\r\n                investInTheSystem(amount);\r\n            } else {\r\n                throw;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When the king decides to collect his fees\r\n    function collectFee() {\r\n        if (msg.sender == trueGods) {\r\n            trueGods.send(godBank);\r\n        }\r\n    }\r\n\r\n    function godAutomaticCollectFee() internal {\r\n        if (godBank >= 1 ether) {\r\n          trueGods.send(godBank);\r\n          godBank = 0;\r\n        }\r\n    }\r\n\r\n    function kingAutomaticCollectFee() internal {\r\n        if (kingBank >= 100 finney) {\r\n          madKing.send(kingBank);\r\n          kingBank = 0;\r\n        }\r\n    }\r\n\r\n    function jesterAutomaticCollectFee() internal {\r\n        if (jesterBank >= 100 finney) {\r\n          jester.send(jesterBank);\r\n          jesterBank = 0;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"godBank\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"protectKingdom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastFell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"abdicate\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kingCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"madKing\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jesterBank\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizensAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kingBank\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"piggyBank\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastCollection\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCitizens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"usurpation\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizensAmounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFee\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastCitizenPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountInvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jester\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountAlreadyPaidBack\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trueGods\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onThrone\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"murder\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"GameOfThrones","CompilerVersion":"v0.3.1-2016-03-31-c67926c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}