{"status":"1","message":"OK","result":[{"SourceCode":"contract euroteambet {\r\n\r\n\tstruct team {\r\n\t\tstring teamName;\r\n\t\tmapping(address => uint) bet;\r\n\t\tuint totalBet;\r\n\t}\r\n\r\n\tteam[] public euroTeams;\r\n\r\n\tbool winningTeamDefined;\r\n\tuint winningTeam;\r\n\r\n\t/** Bets close at the opening day of the EuroCup: 10 June 2016 **/\r\n\tuint startCompetitionTime;\r\n\r\n\t/**  Overall amount bet **/\r\n\tuint public globalBet;\r\n\r\n\t/** Define the creator and fees collected **/\r\n\taddress creator;\r\n\tuint feeCollected;\r\n\r\n\t/**\r\n\t* Constructor: Defines team and creator\r\n\t*/\r\n\tfunction euroteambet() {\r\n\t\t// Define the Teams\r\n\t\tteam memory toCreate;\r\n\t\t// Post a dummy team to ensure the actual range is from 1 to 24 and not 0 to 23.\r\n\t\ttoCreate.teamName = '';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Albania';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Austria';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Belgium';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Croatia';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Czech Republic';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'England';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'France';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Germany';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Hungary';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Iceland';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Italy';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Nothern Ireland';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Poland';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Portugal';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Republic of Ireland';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Romania';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Russia';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Slovakia';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Spain';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Sweden';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Switzerland';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Turkey';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Ukraine';\r\n\t\teuroTeams.push(toCreate);\r\n\t\ttoCreate.teamName = 'Wales';\r\n\t\teuroTeams.push(toCreate);\r\n\r\n\t\tcreator = msg.sender;\r\n\r\n\t\twinningTeamDefined = false;\r\n\r\n\t\t// Euro Cup starts in 4 days\r\n\t\tstartCompetitionTime = block.timestamp + (60 * 60 * 24) * 4;\r\n\r\n\t}\r\n\r\n\r\n\tevent BetFromTransaction(address indexed from, uint value);\r\n\tevent CollectFromTransaction(address indexed from, uint value);\t\r\n\tevent BetClosedNoWinningTeam(address indexed from, uint value);\t\r\n\t/**\r\n\t * Catch-All Function: Un case of transaction received going though a Contract Function\r\n\t * 1: Check if bets are still open\r\n\t * 2: Check if the bet is more than 0.1 ETH\r\n\t * 3: Divided by 1000000000000000 to have an integer (0.016 Eth to 16) and call betOnATeam\r\n\t *    If the EeasyBet value is not correct (possible value 1 to 24), it will be throw in BetOnAteam function\r\n\t * 4: Check if the winning team as been defined    \r\n\t */\r\n\tfunction () {\r\n\t\tif (startCompetitionTime >= block.timestamp) {\r\n\t\t\tif (msg.value >= 100 finney) {\r\n\t\t\t\tBetFromTransaction(msg.sender, msg.value);\r\n\t\t\t\tbetOnATeam((msg.value % 100 finney) / 1000000000000000);\r\n\t\t\t} else {\r\n\t\t\t\tmsg.sender.send(msg.value);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else if (winningTeamDefined == true) {\r\n\t\t\tCollectFromTransaction(msg.sender, msg.value);\r\n\t\t\tcollectEarnings();\r\n\t\t} else {\r\n\t\t\tBetClosedNoWinningTeam(msg.sender, msg.value);\r\n\t\t\tif(msg.value > 0){\r\n\t\t\t\tmsg.sender.send(msg.value);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used to defined the winner of the Tournament\r\n\t * 1: The winning team is updated \r\n\t * 2: All amount invested are gathered in globalBet\r\n\t * 3: All balances of the winning team updated proportionally to the amount invested\r\n\t *\r\n\t * param      {uint  teamWinningName  The identifier of the team winning\r\n\t */\r\n\tfunction setWinner(uint teamWinningID) {\r\n\t\t// Check if the sender is the creator and if the tournament has ended\r\n\t\tif (msg.sender == creator) {\r\n\t\t\twinningTeam = teamWinningID;\r\n\t\t\twinningTeamDefined = true;\r\n\t\t} else {\r\n\t\t\tif(msg.value > 0){\r\n\t\t\t\tmsg.sender.send(msg.value);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tevent BetOnATeam(address indexed from, uint indexed id, uint value);\r\n\t/**\r\n\t * Used to bet on the winner of the Tournament\r\n\t * 1: Check if bets are still open\r\n\t * 2: Check if the bet is more than 0.1 ETH\r\n\t * 3: Check if the id of the team is correct (possible value 1 to 24)\r\n\t * param      {uint}  id      The identifier of the team to bet on\r\n\t */\r\n\tfunction betOnATeam(uint id) {\r\n\t\tif (startCompetitionTime >= block.timestamp && msg.value >= 100 finney && id >= 1 && id <= 24) {\r\n\r\n\t\t\tuint amount = msg.value;\r\n\r\n\t\t\t// Collect 3% Fee\r\n\t\t\tfeeCollected += (amount * 3 / 100);\r\n\t\t\tamount -= (amount * 3 / 100);\r\n\r\n\t\t\tBetOnATeam(msg.sender, id, amount);\r\n\r\n\t\t\teuroTeams[id].bet[msg.sender] += amount;\r\n\t\t\teuroTeams[id].totalBet += amount;\r\n\t\t\tglobalBet += amount;\r\n\t\t} else {\r\n\t\t\tif(msg.value > 0){\r\n\t\t\t\tmsg.sender.send(msg.value);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Check earnings for a specific address\r\n\t* \r\n\t* param      address  toCheck  Address to check its earnings \r\n\t* return     uint   Amount earned\r\n\t*/\r\n\tfunction checkEarnings(address toCheck) returns (uint) {\r\n\t\tif(msg.value > 0){\r\n\t\t\tmsg.sender.send(msg.value);\r\n\t\t}\r\n\r\n\t\tif (winningTeamDefined == true) {\r\n\t\t\treturn (globalBet * (euroTeams[winningTeam].bet[toCheck] / euroTeams[winningTeam].totalBet));\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Only allowed the withdrawals of the fund once the Winning team is updated\r\n\t */\r\n\tfunction collectEarnings() {\r\n\t\tif(msg.value > 0){\r\n\t\t\tmsg.sender.send(msg.value);\r\n\t\t}\r\n\t\tif (winningTeamDefined == true) {\r\n\t\t\tuint earnings = (globalBet * (euroTeams[winningTeam].bet[msg.sender] / euroTeams[winningTeam].totalBet));\r\n\t\t\tmsg.sender.send(earnings);\r\n\t\t\teuroTeams[winningTeam].bet[msg.sender] = 0;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Allow the creator of the game to send balance\r\n\t* \r\n\t* param      address  toSend  Address to receive its earnings \r\n\t*/\r\n\tfunction sendEarnings(address toSend) {\r\n\t\tif(msg.value > 0){\r\n\t\t\tmsg.sender.send(msg.value);\r\n\t\t}\r\n\t\tif (msg.sender == creator && winningTeamDefined == true) {\r\n\t\t\tuint earnings = (globalBet * (euroTeams[winningTeam].bet[toSend] / euroTeams[winningTeam].totalBet));\r\n\t\t\ttoSend.send(earnings);\r\n\t\t\teuroTeams[winningTeam].bet[toSend] = 0;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Allow the creator to collect the 3% Fee\r\n\t*/\r\n\tfunction collectFee() {\r\n\t\tmsg.sender.send(msg.value);\r\n\t\tif (msg.sender == creator) {\r\n\t\t\tcreator.send(feeCollected);\r\n\t\t\tfeeCollected = 0;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"teamWinningID\",\"type\":\"uint256\"}],\"name\":\"setWinner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"euroTeams\",\"outputs\":[{\"name\":\"teamName\",\"type\":\"string\"},{\"name\":\"totalBet\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toSend\",\"type\":\"address\"}],\"name\":\"sendEarnings\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectEarnings\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFee\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toCheck\",\"type\":\"address\"}],\"name\":\"checkEarnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"betOnATeam\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BetFromTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CollectFromTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BetClosedNoWinningTeam\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BetOnATeam\",\"type\":\"event\"}]","ContractName":"euroteambet","CompilerVersion":"v0.3.1-2016-04-13-9137506","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}