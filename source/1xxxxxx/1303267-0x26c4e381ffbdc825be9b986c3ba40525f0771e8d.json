{"status":"1","message":"OK","result":[{"SourceCode":"//***********************************Coinflip\r\n//\r\n// This is a simple coin flip game. You flip HEADS, you Win! You flip TAILS you Lose!\r\n// Each outcome has a 50% chance of happening. You win the entire house bankroll if you win! You lose your deposit if you lose.\r\n//\r\n//  Minimum Deposit: 100 finney!\r\n//\r\n//  Good Luck and Have Fun!\r\n//\r\n//\r\n//\r\n// THIS IS AN ATTACHMENT OF THE ETHVENTURES BUSINESS: 0xEe462A6717f17C57C826F1ad9b4d3813495296C9 \r\n//\r\n//***********************************START\r\ncontract Coinflip {\r\n\r\n  struct gamblerarray {\r\n      address etherAddress;\r\n      uint amount;\r\n  }\r\n\r\n//********************************************PUBLIC VARIABLES\r\n  \r\n  gamblerarray[] public gamblerlist;\r\n  uint public Total_Players=0;\r\n  uint public FeeRate=2;\r\n  uint public Bankroll = 0;\r\n  uint public Total_Deposits=0;\r\n  uint public Total_Payouts=0;\r\n  string public Outcome=\"NULL\";\r\n  uint public MinDeposit=100 finney;\r\n\r\n  address public owner;\r\n  uint Fees=0;\r\n\r\n//********************************************INIT\r\n\r\n  function Coinflip() {\r\n    owner = 0xEe462A6717f17C57C826F1ad9b4d3813495296C9;  //this contract is an attachment to EthVentures\r\n  }\r\n\r\n//********************************************TRIGGER\r\n\r\n  function() {\r\n    enter();\r\n  }\r\n  \r\n//********************************************ENTER\r\n\r\n  function enter() {\r\n    if (msg.value >10 finney) {\r\n\r\n    uint amount=msg.value;\r\n    uint payout;\r\n\r\n\r\n    // add a new participant to the system and calculate total players\r\n    uint list_length = gamblerlist.length;\r\n    Total_Players=list_length+1;\r\n    gamblerlist.length += 1;\r\n    gamblerlist[list_length].etherAddress = msg.sender;\r\n    gamblerlist[list_length].amount = amount;\r\n\r\n\r\n    // set payout variables\r\n     Total_Deposits+=amount;       \t//update deposited amount\r\n\t    \r\n      Fees   =amount * FeeRate/100;    // fee to the owner\r\n      amount-=amount * FeeRate/100;\r\n\t    \r\n      Bankroll += amount;     //  to the balance\r\n\r\n//********************************EthVenturesFinal Fee Plugin\r\n    // payout fees to the owner\r\n     if (Fees != 0) \r\n     {\r\n\tuint minimal= 1990 finney;\r\n\tif(Fees<minimal)\r\n\t{\r\n      \towner.send(Fees);\t\t//send fee to owner\r\n\tTotal_Payouts+=Fees;        //update paid out amount\r\n\t}\r\n\telse\r\n\t{\r\n\tuint Times= Fees/minimal;\r\n\r\n\tfor(uint i=0; i<Times;i++)   // send the fees out in packets compatible to EthVentures dividend function\r\n\tif(Fees>0)\r\n\t{\r\n\towner.send(minimal);\t\t//send fee to owner\r\n\tTotal_Payouts+=Fees;        //update paid out amount\r\n\tFees-=minimal;\r\n\t}\r\n\t}\r\n     }\r\n//********************************End Plugin     \r\n \r\n    if (msg.value >= MinDeposit && Bankroll > 0) \r\n\t\t{\r\n\t\t\t\t\t// Best Binary Random Number Generator in Ethereum!\r\n\t\t\tif( (uint(sha3(gamblerlist[list_length].etherAddress,list_length))+uint(sha3(msg.gas))) % 2==0 ) \t//if the hashed length of your address combined with the gas hash is even, \r\n\t\t\t{ \t\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t//which is a 50% chance, then you get paid out all balance!\r\n\t\t\tgamblerlist[list_length].etherAddress.send(Bankroll);        //send pay out to participant\r\n\t\t\tTotal_Payouts += Bankroll;               \t\t\t\t\t//update paid out amount\r\n\t\t\tBankroll = 0;                      \t\t\t\t\t\t//bankroll update\r\n\t\t\tOutcome=\"HEADS\";\r\n\t\t\t}\r\n\t\t\telse Outcome=\"TAILS\";\r\n\t\t}\r\n\t\telse Outcome=\"Error, the coin wasn't flipped, try again!\";\r\n\t\r\n\t\r\n    }\r\n        //enter function ends\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MinDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblerlist\",\"outputs\":[{\"name\":\"etherAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Total_Payouts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Total_Players\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Outcome\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FeeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Total_Deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Bankroll\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Coinflip","CompilerVersion":"v0.2.2-2016-03-10-34d714f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}