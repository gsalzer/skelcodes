{"status":"1","message":"OK","result":[{"SourceCode":"contract BTCRelay {\r\n    function getBlockHeader(int blockHash) returns (bytes32[3]);\r\n    function getLastBlockHeight() returns (int);\r\n    function getBlockchainHead() returns (int);\r\n    function getFeeAmount(int blockHash) returns (int);\r\n}\r\n\r\n\r\ncontract BlockhashFetch {\r\n\r\n  BTCRelay relay;\r\n  mapping(int => int) blockHashes; //Cache blockhashes\r\n\r\n  function BlockhashFetch(address _relay){\r\n    relay = BTCRelay(_relay);\r\n  }\r\n\r\n\r\n  function getPrevHash(int currentHash) returns (int parentHash, uint fee){\r\n\r\n    if(blockHashes[currentHash] != 0) return (blockHashes[currentHash], 0);\r\n\r\n    fee = uint(relay.getFeeAmount(currentHash));\r\n\r\n    if(fee > this.balance) return (0,0);\r\n    bytes32 head = relay.getBlockHeader.value(fee)(currentHash)[2];\r\n    bytes32 temp;\r\n\r\n    assembly {\r\n        let x := mload(0x40)\r\n        mstore(x,head)\r\n        temp := mload(add(x,0x04))\r\n    }\r\n\r\n    for(int i; i<32; i++){\r\n      parentHash = parentHash | int(temp[uint(i)]) * (0x100**i);\r\n    }\r\n\r\n    blockHashes[currentHash] = int(parentHash);\r\n  }\r\n\r\n  function getBlockHash (int blockHeight) returns (bytes32, uint totalFee){\r\n    int highestBlock = relay.getLastBlockHeight();\r\n    int currentHash = relay.getBlockchainHead();\r\n    if(blockHeight > highestBlock) return (0x0, 0);\r\n\r\n    for(int i; i < highestBlock - blockHeight; i++){\r\n      if(currentHash == 0) return (0x0,totalFee);\r\n      uint fee;\r\n      (currentHash, fee) = getPrevHash(currentHash);\r\n      totalFee += fee;\r\n    }\r\n\r\n    return (bytes32(currentHash), totalFee);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"blockHeight\",\"type\":\"int256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"totalFee\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"currentHash\",\"type\":\"int256\"}],\"name\":\"getPrevHash\",\"outputs\":[{\"name\":\"parentHash\",\"type\":\"int256\"},{\"name\":\"fee\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[{\"name\":\"_relay\",\"type\":\"address\"}],\"type\":\"constructor\"}]","ContractName":"BlockhashFetch","CompilerVersion":"v0.3.5-2016-06-20-9da08ac","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000041f274c0023f83391de4e0733c609df5a124c3d4","Library":"","SwarmSource":""}]}