{"status":"1","message":"OK","result":[{"SourceCode":"// TESTING CONTRACT\r\n\r\ncontract Dividend {\r\n\r\nstruct Contributor{\r\n    address addr;\r\n    uint contribution;\r\n    uint profit;\r\n}\r\nContributor[] public contributors;\r\n\r\nuint public unprocessedProfits = 0;\r\nuint public totalContributors = 0;\r\nuint public totalContributions = 0;\r\nuint public totalProfit = 0;\r\nuint public totalSUM = 0;\r\naddress public deployer;\r\naddress public profitAddr;\r\n\r\n\r\nmodifier execute {\r\n    if (msg.sender == deployer)\r\n        _ \r\n}\r\n\r\n\r\nfunction Dividend() {\r\n    deployer = msg.sender;\r\n    profitAddr = deployer;\r\n}\r\n\r\n\r\nfunction() {\r\n    Enter();\r\n}\r\n\r\n\r\nfunction Enter() {\r\n\r\nif (msg.sender == profitAddr) {\r\n\r\nunprocessedProfits = msg.value;\r\n\r\n}\r\nelse {\r\n\r\nif (unprocessedProfits != 0) {\r\n\r\n    uint profit;\r\n    uint profitAmount = unprocessedProfits;\r\n    uint contriTotal;\r\n    totalProfit += profitAmount;\r\n    \r\n    if (contributors.length != 0 && profitAmount != 0) {\r\n        for (uint proi = 0; proi < contributors.length; proi++) {\r\n                contriTotal = contributors[proi].contribution + contributors[proi].profit;\r\n                profit = profitAmount * contriTotal / totalSUM;\r\n                contributors[proi].profit += profit;\r\n        }\r\n    }\r\n    totalSUM += profitAmount;\r\n    \r\n}\r\n\r\nuint contri = msg.value;\r\nbool recontri = false;\r\ntotalContributions += contri;\r\ntotalSUM += contri;\r\n\r\nfor (uint recoi = 0; recoi < contributors.length; recoi++) {\r\n    if (msg.sender == contributors[recoi].addr) {\r\n        contributors[recoi].contribution += contri;\r\n        recontri = true;\r\n        break;\r\n    }\r\n}\r\n\r\nif (recontri == false) {\r\n    totalContributors = contributors.length + 1;\r\n    contributors.length += 1;\r\n    contributors[contributors.length - 1].addr = msg.sender;\r\n    contributors[contributors.length - 1].contribution = contri;\r\n    contributors[contributors.length - 1].profit = 0;\r\n}\r\n}\r\n\r\n}\r\n\r\n\r\nfunction PayOut(uint ContibutorNumber) {\r\n    \r\n    if (msg.sender == contributors[ContibutorNumber].addr) {\r\n        uint cProfit = contributors[ContibutorNumber].profit;\r\n        if (cProfit != 0) {\r\n            contributors[ContibutorNumber].addr.send(cProfit);\r\n            contributors[ContibutorNumber].profit = 0;\r\n            totalProfit -= cProfit;\r\n            totalSUM -= cProfit;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction TestContract() execute {\r\n    deployer.send(this.balance);\r\n}\r\n\r\n\r\nfunction SetProfitAddr (address _newAddr) execute {\r\n    profitAddr = _newAddr;\r\n}\r\n\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ContibutorNumber\",\"type\":\"uint256\"}],\"name\":\"PayOut\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"TestContract\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Enter\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"SetProfitAddr\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSUM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributors\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"contribution\",\"type\":\"uint256\"},{\"name\":\"profit\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"profitAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unprocessedProfits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"Dividend","CompilerVersion":"v0.3.1-2016-04-07-054bc2a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}