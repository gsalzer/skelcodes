{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n}\r\n\r\ninterface AddressRegistry {\r\n    function getAddr(string name) external view returns(address);\r\n}\r\n\r\ninterface Kyber {\r\n    function trade(\r\n        address src,\r\n        uint srcAmount,\r\n        address dest,\r\n        address destAddress,\r\n        uint maxDestAmount,\r\n        uint minConversionRate,\r\n        address walletId\r\n    ) external payable returns (uint);\r\n\r\n    function getExpectedRate(\r\n        address src,\r\n        address dest,\r\n        uint srcQty\r\n    ) external view returns (uint, uint);\r\n}\r\n\r\n\r\ncontract Registry {\r\n    address public addressRegistry;\r\n    modifier onlyAdmin() {\r\n        require(\r\n            msg.sender == getAddress(\"admin\"),\r\n            \"Permission Denied\"\r\n        );\r\n        _;\r\n    }\r\n    function getAddress(string name) internal view returns(address) {\r\n        AddressRegistry addrReg = AddressRegistry(addressRegistry);\r\n        return addrReg.getAddr(name);\r\n    }\r\n}\r\n\r\n\r\ncontract Trade is Registry {\r\n\r\n    event KyberTrade(\r\n        address src,\r\n        uint srcAmt,\r\n        address dest,\r\n        uint destAmt,\r\n        address beneficiary,\r\n        uint minConversionRate,\r\n        address affiliate\r\n    );\r\n\r\n    function approveDAIKyber() public {\r\n        IERC20 tokenFunctions = IERC20(getAddress(\"dai\"));\r\n        tokenFunctions.approve(getAddress(\"kyber\"), 2**255);\r\n    }\r\n\r\n    function expectedETH(uint srcDAI) public view returns (uint, uint) {\r\n        Kyber kyberFunctions = Kyber(getAddress(\"kyber\"));\r\n        return kyberFunctions.getExpectedRate(getAddress(\"dai\"), getAddress(\"eth\"), srcDAI);\r\n    }\r\n\r\n    function dai2eth(uint srcDAI) public payable returns (uint destAmt) {\r\n        address src = getAddress(\"dai\");\r\n        address dest = getAddress(\"eth\");\r\n        uint minConversionRate;\r\n        (, minConversionRate) = expectedETH(srcDAI);\r\n\r\n        // Interacting with Kyber Proxy Contract\r\n        Kyber kyberFunctions = Kyber(getAddress(\"kyber\"));\r\n        destAmt = kyberFunctions.trade.value(msg.value)(\r\n            src,\r\n            srcDAI,\r\n            dest,\r\n            msg.sender,\r\n            2**255,\r\n            minConversionRate,\r\n            getAddress(\"admin\")\r\n        );\r\n\r\n        emit KyberTrade(\r\n            src, srcDAI, dest, destAmt, msg.sender, minConversionRate, getAddress(\"admin\")\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract DAI2ETH is Trade {\r\n\r\n    constructor(address rAddr) public {\r\n        addressRegistry = rAddr;\r\n        approveDAIKyber();\r\n    }\r\n\r\n    function () public payable {}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"srcDAI\",\"type\":\"uint256\"}],\"name\":\"expectedETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"approveDAIKyber\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"srcDAI\",\"type\":\"uint256\"}],\"name\":\"dai2eth\",\"outputs\":[{\"name\":\"destAmt\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"rAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"srcAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"destAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"minConversionRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affiliate\",\"type\":\"address\"}],\"name\":\"KyberTrade\",\"type\":\"event\"}]","ContractName":"DAI2ETH","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e16d035b8e76303237b9660b3c9c94c1a86aab47","Library":"","SwarmSource":"bzzr://cabe12844d2e47ec068b6f1ab3ec8380be8715c0a3cebf979ce2199ec31a5594"}]}