{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * (E)t)h)e)x) Superprize Contract \r\n *  This smart-contract is the part of Ethex Lottery fair game.\r\n *  See latest version at https://github.com/ethex-bet/ethex-lottery \r\n *  http://ethex.bet\r\n */\r\n \r\n contract EthexSuperprize {\r\n    struct Payout {\r\n        uint256 index;\r\n        uint256 amount;\r\n        uint256 block;\r\n        address payable winnerAddress;\r\n        bytes16 betId;\r\n    }\r\n     \r\n    Payout[] public payouts;\r\n     \r\n    address payable private owner;\r\n    address public lotoAddress;\r\n    address payable public newVersionAddress;\r\n    EthexSuperprize previousContract;\r\n    uint256 public hold;\r\n    \r\n    event Superprize (\r\n        uint256 index,\r\n        uint256 amount,\r\n        address winner,\r\n        bytes16 betId,\r\n        byte state\r\n    );\r\n    \r\n    uint8 constant PARTS = 6;\r\n    uint256 constant PRECISION = 1 ether;\r\n    uint256 constant MONTHLY = 150000;\r\n     \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n     \r\n     modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function() external payable { }\r\n    \r\n    function initSuperprize(address payable winner, bytes16 betId) external {\r\n        require(msg.sender == lotoAddress);\r\n        uint256 amount = address(this).balance - hold;\r\n        hold = address(this).balance;\r\n        uint256 sum;\r\n        uint256 temp;\r\n        for (uint256 i = 1; i < PARTS; i++) {\r\n            temp = amount * PRECISION * (i - 1 + 10) / 75 / PRECISION;\r\n            sum += temp;\r\n            payouts.push(Payout(i, temp, block.number + i * MONTHLY, winner, betId));\r\n        }\r\n        payouts.push(Payout(PARTS, amount - sum, block.number + PARTS * MONTHLY, winner, betId));\r\n        emit Superprize(0, amount, winner, betId, 0);\r\n    }\r\n    \r\n    function paySuperprize() external onlyOwner {\r\n        if (payouts.length == 0)\r\n            return;\r\n        Payout[] memory payoutArray = new Payout[](payouts.length);\r\n        uint i = payouts.length;\r\n        while (i > 0) {\r\n            i--;\r\n            if (payouts[i].block <= block.number) {\r\n                emit Superprize(payouts[i].index, payouts[i].amount, payouts[i].winnerAddress, payouts[i].betId, 0x01);\r\n                hold -= payouts[i].amount;\r\n            }\r\n            payoutArray[i] = payouts[i];\r\n            payouts.pop();\r\n        }\r\n        for (i = 0; i < payoutArray.length; i++)\r\n            if (payoutArray[i].block > block.number)\r\n                payouts.push(payoutArray[i]);\r\n        for (i = 0; i < payoutArray.length; i++)\r\n            if (payoutArray[i].block <= block.number)\r\n                payoutArray[i].winnerAddress.transfer(payoutArray[i].amount);\r\n    }\r\n     \r\n    function setOldVersion(address payable oldAddress) external onlyOwner {\r\n        previousContract = EthexSuperprize(oldAddress);\r\n        lotoAddress = previousContract.lotoAddress();\r\n        hold = previousContract.hold();\r\n        uint256 index;\r\n        uint256 amount;\r\n        uint256 betBlock;\r\n        address payable winner;\r\n        bytes16 betId;\r\n        for (uint i = 0; i < previousContract.getPayoutsCount(); i++) {\r\n            (index, amount, betBlock, winner, betId) = previousContract.payouts(i);\r\n            payouts.push(Payout(index, amount, betBlock, winner, betId));\r\n        }\r\n        previousContract.migrate();\r\n    }\r\n    \r\n    function setNewVersion(address payable newVersion) external onlyOwner {\r\n        newVersionAddress = newVersion;\r\n    }\r\n    \r\n    function setLoto(address loto) external onlyOwner {\r\n        lotoAddress = loto;\r\n    }\r\n    \r\n    function migrate() external {\r\n        require(msg.sender == owner || msg.sender == newVersionAddress);\r\n        require(newVersionAddress != address(0));\r\n        newVersionAddress.transfer(address(this).balance);\r\n    }   \r\n\r\n    function getPayoutsCount() view public returns (uint256) {\r\n        return payouts.length;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"hold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPayoutsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payouts\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"block\",\"type\":\"uint256\"},{\"name\":\"winnerAddress\",\"type\":\"address\"},{\"name\":\"betId\",\"type\":\"bytes16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"betId\",\"type\":\"bytes16\"}],\"name\":\"initSuperprize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newVersion\",\"type\":\"address\"}],\"name\":\"setNewVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"paySuperprize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"setOldVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"loto\",\"type\":\"address\"}],\"name\":\"setLoto\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newVersionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"betId\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bytes1\"}],\"name\":\"Superprize\",\"type\":\"event\"}]","ContractName":"EthexSuperprize","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://531433762cf07025368b790c3e5518f9e49cf09732871b0ab63a47574bb88e67"}]}