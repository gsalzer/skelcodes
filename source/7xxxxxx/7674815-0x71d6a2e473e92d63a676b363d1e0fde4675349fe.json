{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\n\r\n// Send more than 1 ETH for 1002 Vokens, and get unused ETH refund automatically.\r\n//   Use the current voken price of Voken Public-Sale.\r\n//\r\n// Conditions:\r\n//   1. You have no Voken yet.\r\n//   2. You are not in the whitelist yet.\r\n//   3. Send more than 1 ETH (for balance verification).\r\n//\r\n// More info:\r\n//   https://vision.network\r\n//   https://voken.io\r\n//\r\n// Contact us:\r\n//   support@vision.network\r\n//   support@voken.io\r\n\r\n\r\n/**\r\n * @title SafeMath for uint256\r\n * @dev Unsigned math operations with safety checks that revert on error.\r\n */\r\nlibrary SafeMath256 {\r\n    /**\r\n     * @dev Adds two unsigned integers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Integer division of two unsigned integers truncating the quotient,\r\n     * reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n     * reverts when dividing by zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n */\r\ncontract Ownable {\r\n    address private _owner;\r\n    address payable internal _receiver;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ReceiverChanged(address indexed previousReceiver, address indexed newReceiver);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract\r\n     * to the sender account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        _receiver = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @return The address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        require(newOwner != address(0));\r\n        address __previousOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(__previousOwner, newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Change receiver.\r\n     */\r\n    function changeReceiver(address payable newReceiver) external onlyOwner {\r\n        require(newReceiver != address(0));\r\n        address __previousReceiver = _receiver;\r\n        _receiver = newReceiver;\r\n        emit ReceiverChanged(__previousReceiver, newReceiver);\r\n    }\r\n\r\n    /**\r\n     * @dev Rescue compatible ERC20 Token\r\n     *\r\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\r\n     * @param receiver The address of the receiver\r\n     * @param amount uint256\r\n     */\r\n    function rescueTokens(address tokenAddr, address receiver, uint256 amount) external onlyOwner {\r\n        IERC20 _token = IERC20(tokenAddr);\r\n        require(receiver != address(0));\r\n        uint256 balance = _token.balanceOf(address(this));\r\n        require(balance >= amount);\r\n\r\n        assert(_token.transfer(receiver, amount));\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw ether\r\n     */\r\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\r\n        require(to != address(0));\r\n        uint256 balance = address(this).balance;\r\n        require(balance >= amount);\r\n\r\n        to.transfer(amount);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n    bool private _paused;\r\n\r\n    event Paused(address account);\r\n    event Unpaused(address account);\r\n\r\n    constructor () internal {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @return Returns true if the contract is paused, false otherwise.\r\n     */\r\n    function paused() public view returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!_paused, \"Paused.\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by a pauser to pause, triggers stopped state.\r\n     */\r\n    function setPaused(bool state) external onlyOwner {\r\n        if (_paused && !state) {\r\n            _paused = false;\r\n            emit Unpaused(msg.sender);\r\n        } else if (!_paused && state) {\r\n            _paused = true;\r\n            emit Paused(msg.sender);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://eips.ethereum.org/EIPS/eip-20\r\n */\r\ninterface IERC20 {\r\n    function balanceOf(address owner) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n}\r\n\r\n\r\n/**\r\n * @title Voken interface\r\n */\r\ninterface IVoken {\r\n    function balanceOf(address owner) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function inWhitelist(address account) external view returns (bool);\r\n}\r\n\r\n\r\n/**\r\n * @title Voken Public-Sale interface\r\n */\r\ninterface IVokenPublicSale {\r\n    function status() external view returns (uint256 auditEtherPrice,\r\n                                             uint16 stage,\r\n                                             uint16 season,\r\n                                             uint256 vokenUsdPrice,\r\n                                             uint256 currentTopSalesRatio,\r\n                                             uint256 txs,\r\n                                             uint256 vokenTxs,\r\n                                             uint256 vokenBonusTxs,\r\n                                             uint256 vokenWhitelistTxs,\r\n                                             uint256 vokenIssued,\r\n                                             uint256 vokenBonus,\r\n                                             uint256 vokenWhitelist);\r\n}\r\n\r\n\r\n/**\r\n * @title Get 1002 Voken\r\n */\r\ncontract Get1002Voken is Ownable, Pausable {\r\n    using SafeMath256 for uint256;\r\n\r\n    IVoken public VOKEN = IVoken(0x82070415FEe803f94Ce5617Be1878503e58F0a6a);\r\n    IVokenPublicSale public VOKEN_PUBLIC_SALE = IVokenPublicSale(0xAC873993E43A5AF7B39aB4A5a50ce1FbDb7191D3);\r\n\r\n    uint256 private WEI_MIN = 1 ether;\r\n    uint256 private VOKEN_PER_TXN = 1002000000; // 1002.000000 Voken\r\n\r\n    uint256 private _txs;\r\n    \r\n    mapping (address => bool) _alreadyGot;\r\n\r\n    event Tx(uint256 etherPrice, uint256 vokdnUsdPrice, uint256 weiUsed);\r\n\r\n    /**\r\n     * @dev Transaction counter\r\n     */\r\n    function txs() public view returns (uint256) {\r\n        return _txs;\r\n    }\r\n\r\n    /**\r\n     * @dev Get 1002 Voken and ETH refund.\r\n     */\r\n    function () external payable whenNotPaused {\r\n        require(msg.value >= WEI_MIN);\r\n        require(VOKEN.balanceOf(address(this)) >= VOKEN_PER_TXN);\r\n        require(VOKEN.balanceOf(msg.sender) == 0);\r\n        require(!VOKEN.inWhitelist(msg.sender));\r\n        require(!_alreadyGot[msg.sender]);\r\n\r\n        uint256 __etherPrice;\r\n        uint256 __vokenUsdPrice;\r\n        (__etherPrice, , , __vokenUsdPrice, , , , , , , ,) = VOKEN_PUBLIC_SALE.status();\r\n\r\n        require(__etherPrice > 0);\r\n\r\n        uint256 __usd = VOKEN_PER_TXN.mul(__vokenUsdPrice).div(1000000);\r\n        uint256 __wei = __usd.mul(1 ether).div(__etherPrice);\r\n\r\n        require(msg.value >= __wei);\r\n\r\n        if (msg.value > __wei) {\r\n            msg.sender.transfer(msg.value.sub(__wei));\r\n            _receiver.transfer(__wei);\r\n        }\r\n\r\n        _txs = _txs.add(1);\r\n        _alreadyGot[msg.sender] = true;\r\n        emit Tx(__etherPrice, __vokenUsdPrice, __wei);\r\n\r\n        assert(VOKEN.transfer(msg.sender, VOKEN_PER_TXN));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"txs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VOKEN_PUBLIC_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"etherPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"vokdnUsdPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"weiUsed\",\"type\":\"uint256\"}],\"name\":\"Tx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousReceiver\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"ReceiverChanged\",\"type\":\"event\"}]","ContractName":"Get1002Voken","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e02f81912a71ad264f5954210231b401e1ba4046872f56ada5e822a553911521"}]}