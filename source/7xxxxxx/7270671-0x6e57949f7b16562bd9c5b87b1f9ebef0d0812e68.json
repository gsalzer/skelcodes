{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\ncontract FiatContract {\r\n\r\n    mapping(uint => Token) public tokens;\r\n\r\n    address payable public sender;\r\n    address public creator;\r\n\r\n    event NewPrice(uint id, string token);\r\n    event DeletePrice(uint id);\r\n    event UpdatedPrice(uint id);\r\n    event RequestUpdate(uint id);\r\n    event Donation(address from);\r\n\r\n    struct Token {\r\n        string name;\r\n        uint256 eth;\r\n        uint256 usd;\r\n        uint256 eur;\r\n        uint256 mxn;\r\n        uint timestamp;\r\n    }\r\n\r\n    // initialize function\r\n    constructor(address payable _sender)public {\r\n        creator = msg.sender;\r\n        sender = _sender; //here can hardcode the address of account in server\r\n    }\r\n\r\n    // returns the Token struct\r\n    function getToken(uint _id) internal view returns  (Token memory) {\r\n        return  tokens[_id];\r\n    }\r\n\r\n    // returns rate price of coin related to ETH.\r\n    function ETH(uint _id) public view returns  (uint256) {\r\n        return tokens[_id].eth;\r\n    }\r\n\r\n    // returns 0.01 value in United States Dollar\r\n    function USD(uint _id) public view returns (uint256) {\r\n        return tokens[_id].usd;\r\n    }\r\n\r\n    // returns 0.01 value in Euro\r\n    function EUR(uint _id) public view returns (uint256) {\r\n        return tokens[_id].eur;\r\n    }\r\n\r\n    // returns 0.01 value in Mexican pesos\r\n    function MXN(uint _id) public view returns (uint256) {\r\n        return tokens[_id].mxn;\r\n    }\r\n\r\n    // returns block when price was updated last\r\n    function updatedAt(uint _id)public view returns (uint) {\r\n        return tokens[_id].timestamp;\r\n    }\r\n\r\n    // update market rates in USD, EURO, and MXN for a specific coin\r\n    function update(uint id, string calldata _token, uint256 eth, uint256 usd, uint256 eur, uint256 mxn) external {\r\n        require(msg.sender==sender);\r\n        tokens[id] = Token(_token, eth, usd, eur, mxn, now);\r\n        emit NewPrice(id, _token);\r\n    }\r\n    /**\r\n     * 1 criptocrew= $30,000 MXN\r\n     * 1 criptocrew =~ $1,500 USD\r\n     * 1 criptocrew =~ $1,390 EUR \r\n     * 1 criptocrew =~ 15 ETH\r\n     */\r\n\r\n    // delete a token from the contract\r\n    function deleteToken(uint id) public {\r\n        require(msg.sender==creator);\r\n        emit DeletePrice(id);\r\n        delete tokens[id];\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator)public{\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n\r\n    // change sender address\r\n    function changeSender(address payable _sender)public{\r\n        require(msg.sender==creator);\r\n        sender = _sender;\r\n    }\r\n\r\n\r\n    // default function so this contract can accept ETH with low gas limits.\r\n    function() external payable {\r\n\r\n    }\r\n\r\n    // public function for requesting an updated price from server\r\n    // using this function requires a payment of $0.35 USD\r\n    function requestUpdate(uint id) external payable {\r\n        uint256 weiAmount = tokens[0].usd * 35;\r\n        require(msg.value >= weiAmount);\r\n        sender.transfer(address(this).balance);\r\n        emit RequestUpdate(id);\r\n    }\r\n\r\n    // donation function that get forwarded to the contract updater\r\n    function donate() external payable {\r\n        require(msg.value >= 0);\r\n        sender.transfer(address(this).balance);\r\n        emit Donation(msg.sender);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"USD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"string\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"usd\",\"type\":\"uint256\"},{\"name\":\"eur\",\"type\":\"uint256\"},{\"name\":\"mxn\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"usd\",\"type\":\"uint256\"},{\"name\":\"eur\",\"type\":\"uint256\"},{\"name\":\"mxn\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"MXN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"changeSender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"requestUpdate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"updatedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"EUR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"string\"}],\"name\":\"NewPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"DeletePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"UpdatedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"RequestUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Donation\",\"type\":\"event\"}]","ContractName":"FiatContract","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://15636772dd81c1a203413e71a12c77c2e25f60499d6e1664728207c60b72fc5f"}]}