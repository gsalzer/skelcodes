{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.23;\r\n\r\ncontract Math {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, \"add overflow\");\r\n    }\r\n    \r\n    function sub(uint x, uint y) internal pure returns(uint z) {\r\n        require((z = x - y) <= x, \"sub underflow\");\r\n    }\r\n}\r\n\r\ncontract Owable {\r\n    \r\n    address private owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier isOwable() {\r\n        require(owner == msg.sender, \"not owner\");\r\n        _;\r\n    }\r\n    \r\n    function changeOwner(address _newOwner) public isOwable {\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\ncontract Stop is Owable {\r\n    \r\n    bool public stopped;\r\n    \r\n    modifier isRun() {\r\n        require(!stopped, \"stopping\");\r\n        _;                                                                                                                                                               \r\n    }\r\n    \r\n    function stop() public isOwable {\r\n        stopped = true;\r\n    }\r\n    \r\n    function start() public isOwable {\r\n        stopped = false;\r\n    }\r\n}\r\n\r\ncontract SupplyController is Owable {\r\n    \r\n    mapping (address => bool) private controllers;\r\n    address[] private controllerList;\r\n        \r\n    modifier isController() {\r\n        require(controllers[msg.sender], \"Not a controller\");\r\n        _;\r\n    }\r\n    \r\n    function setSupplyController(address _newController) public isOwable returns (bool) {\r\n        require(!controllers[_newController], \"Already is a controller\");\r\n        controllers[_newController] = true;\r\n        controllerList.push(_newController);\r\n        return true;\r\n    }\r\n    \r\n    function getControllerList() public view isOwable returns (address[] memory) {\r\n        return controllerList;\r\n    }\r\n    \r\n    function deleteSupplyController(address _controller) public isOwable returns (bool) {\r\n        require(controllers[_controller], \"Not a controller\");\r\n        controllers[_controller] = false;\r\n        deleteControllerFromList(_controller);\r\n        return true;\r\n    }\r\n\r\n    function deleteControllerFromList(address _controller) private {\r\n        uint length = controllerList.length;\r\n        address[] memory newControllerList = new address[](length - 1);\r\n        uint8 j = 0;\r\n        for (uint i = 0; i < length; i++) {\r\n            if (controllerList[i] != _controller) {\r\n                newControllerList[j] = controllerList[i];\r\n                j++;\r\n            }\r\n        }\r\n        controllerList = newControllerList;\r\n    }\r\n}\r\n\r\ncontract QuickCash is Math, Stop, SupplyController {\r\n    \r\n    uint256 internal supply;\r\n    string public constant name = \"QuickCash\";\r\n    string public constant symbol = \"QC\";\r\n    uint8 public constant decimals = 18;\r\n    \r\n    address internal income;\r\n    \r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) approvals;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n    event Loan(address indexed _receive, uint256 _value);\r\n    event Repay(address indexed _from, uint256 _value);\r\n    \r\n    modifier isIncome() {\r\n        require(msg.sender == income, \"Invalid income\");\r\n        _;\r\n    }\r\n\r\n    function getIncome() public view isOwable returns (address) {\r\n        return income;\r\n    }\r\n\r\n    function setIncome(address _newIncome) public isRun isOwable returns (bool) {\r\n        income = _newIncome;\r\n        return true;\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return supply;\r\n    }\r\n    \r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public isRun returns (bool) {\r\n        return transferFrom(msg.sender, _to, _value);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public isRun returns (bool) {\r\n        require(_to != address(0));\r\n        if (_from != msg.sender && approvals[_from][msg.sender] != uint(-1)) {\r\n            approvals[_from][msg.sender] = sub(approvals[_from][msg.sender], _value);\r\n        }\r\n        balances[_from] = sub(balances[_from], _value);\r\n        balances[_to] = add(balances[_to], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) public isRun returns (bool) {\r\n        require(_spender != address(0));\r\n        approvals[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public view isRun returns (uint256) {\r\n        return approvals[_owner][_spender];\r\n    }\r\n    \r\n    function loan(address _account, uint256 _value, uint256 _charge) public isRun isController returns (bool) {\r\n        require(_account != address(0));\r\n        uint256 loanNum = _value;\r\n        if (income != address(0)) {\r\n            balances[income] = add(balances[income], _charge);\r\n            loanNum = sub(_value, _charge);\r\n        }\r\n        balances[_account] = add(balances[_account], loanNum);\r\n        supply = add(supply, _value);\r\n        emit Loan(_account, loanNum);\r\n        return true;\r\n    }\r\n    \r\n    function repay(uint256 _value, uint256 _charge) public isRun returns (bool) {\r\n        require(msg.sender != address(0));\r\n        balances[msg.sender] = sub(balances[msg.sender], _value);\r\n        uint256 burnNum = _value;\r\n        if (income != address(0)) {\r\n            balances[income] = add(balances[income], _charge);\r\n            burnNum = sub(_value, _charge);\r\n        }\r\n        supply = sub(supply, burnNum);\r\n        emit Repay(msg.sender, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_charge\",\"type\":\"uint256\"}],\"name\":\"loan\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"setSupplyController\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"deleteSupplyController\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getControllerList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newIncome\",\"type\":\"address\"}],\"name\":\"setIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_charge\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_receive\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Loan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"}]","ContractName":"QuickCash","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fd34dcfa27436e0a54b2f7802fd230a53d8b5a3f1aee4727fdfaba6651b40104"}]}