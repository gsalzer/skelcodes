{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ncontract Signidice {\r\n\r\n    function generateLuck(bytes memory _RSASign, uint256 _min, uint256 _max) public pure returns (bytes32 luck) {\r\n\r\n        uint256 delta = (_max - _min + 1);\r\n\r\n        uint256 lucky = uint256(keccak256(_RSASign));\r\n\r\n        while (lucky >= (2 ** (256 - 1) / delta) * delta) {\r\n            lucky = uint256(keccak256(abi.encodePacked(lucky)));\r\n        }\r\n\r\n        lucky = (lucky % (delta)) + _min;\r\n\r\n        return bytes32(lucky);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_RSASign\",\"type\":\"bytes\"},{\"name\":\"_min\",\"type\":\"uint256\"},{\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"generateLuck\",\"outputs\":[{\"name\":\"luck\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"Signidice","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d776c083513a1539b5d588fc33c08c5dd80e7468873ed9db2e905d0f63aff745"}]}