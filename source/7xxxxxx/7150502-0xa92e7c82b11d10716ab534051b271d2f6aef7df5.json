{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title AraProxy\r\n * @dev Gives the possibility to delegate any call to a foreign implementation.\r\n */\r\ncontract AraProxy {\r\n\r\n  bytes32 private constant registryPosition_ = keccak256(\"io.ara.proxy.registry\");\r\n  bytes32 private constant implementationPosition_ = keccak256(\"io.ara.proxy.implementation\");\r\n\r\n  modifier restricted() {\r\n    bytes32 registryPosition = registryPosition_;\r\n    address registryAddress;\r\n    assembly {\r\n      registryAddress := sload(registryPosition)\r\n    }\r\n    require(\r\n      msg.sender == registryAddress,\r\n      \"Only the AraRegistry can upgrade this proxy.\"\r\n    );\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev the constructor sets the AraRegistry address\r\n  */\r\n  constructor(address _registryAddress, address _implementationAddress) public {\r\n    bytes32 registryPosition = registryPosition_;\r\n    bytes32 implementationPosition = implementationPosition_;\r\n    assembly {\r\n      sstore(registryPosition, _registryAddress)\r\n      sstore(implementationPosition, _implementationAddress)\r\n    }\r\n  }\r\n\r\n  function setImplementation(address _newImplementation) public restricted {\r\n    require(_newImplementation != address(0));\r\n    bytes32 implementationPosition = implementationPosition_;\r\n    assembly {\r\n      sstore(implementationPosition, _newImplementation)\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @dev Fallback function allowing to perform a delegatecall to the given implementation.\r\n  * This function will return whatever the implementation call returns\r\n  */\r\n  function () payable public {\r\n    bytes32 implementationPosition = implementationPosition_;\r\n    address _impl;\r\n    assembly {\r\n      _impl := sload(implementationPosition)\r\n    }\r\n\r\n    assembly {\r\n      let ptr := mload(0x40)\r\n      calldatacopy(ptr, 0, calldatasize)\r\n      let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\r\n      let size := returndatasize\r\n      returndatacopy(ptr, 0, size)\r\n\r\n      switch result\r\n      case 0 { revert(ptr, size) }\r\n      default { return(ptr, size) }\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registryAddress\",\"type\":\"address\"},{\"name\":\"_implementationAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"AraProxy","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f8314584346fc84e96b36113784f6b562e5b01af000000000000000000000000B8ca408AfF631b65021850cD7eBf8EAC7f3c0312","Library":"","SwarmSource":"bzzr://05642ac97894b238b61c8ffa819c5dc691441cccd53318629232345ba3846b4a"}]}