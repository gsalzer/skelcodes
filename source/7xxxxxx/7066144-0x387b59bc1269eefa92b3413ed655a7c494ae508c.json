{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\ncontract ERC721 {\r\n   string constant private tokenName = \"ENCRYPTOART\";\r\n   string constant private tokenSymbol = \"ENA\";\r\n   uint256 constant private totalTokens = 10000000000;\r\n   mapping(address => uint) private balances;\r\n   mapping(uint256 => address) private tokenOwners;\r\n   mapping(uint256 => bool) private tokenExists;\r\n   mapping(address => mapping (address => uint256)) private allowed;\r\n   mapping(address => mapping(uint256 => uint256)) private ownerTokens;\r\n   \r\n   mapping(uint256 => string) tokenLinks;\r\n   function name() public constant returns (string){\r\n       return tokenName;\r\n   }\r\n   function symbol() public constant returns (string) {\r\n       return tokenSymbol;\r\n   }\r\n   function totalSupply() public constant returns (uint256){\r\n       return totalTokens;\r\n   }\r\n   function balanceOf(address _owner) constant returns (uint){\r\n       return balances[_owner];\r\n   }\r\n   function ownerOf(uint256 _tokenId) constant returns (address){\r\n       require(tokenExists[_tokenId]);\r\n       return tokenOwners[_tokenId];\r\n   }\r\n   function approve(address _to, uint256 _tokenId){\r\n       require(msg.sender == ownerOf(_tokenId));\r\n       require(msg.sender != _to);\r\n       allowed[msg.sender][_to] = _tokenId;\r\n       Approval(msg.sender, _to, _tokenId);\r\n   }\r\n   function takeOwnership(uint256 _tokenId){\r\n       require(tokenExists[_tokenId]);\r\n       address oldOwner = ownerOf(_tokenId);\r\n       address newOwner = msg.sender;\r\n       require(newOwner != oldOwner);\r\n       require(allowed[oldOwner][newOwner] == _tokenId);\r\n       balances[oldOwner] -= 1;\r\n       tokenOwners[_tokenId] = newOwner;\r\n       balances[oldOwner] += 1;\r\n       Transfer(oldOwner, newOwner, _tokenId);\r\n   }\r\n   function transfer(address _to, uint256 _tokenId){\r\n       address currentOwner = msg.sender;\r\n       address newOwner = _to;\r\n       require(tokenExists[_tokenId]);\r\n       require(currentOwner == ownerOf(_tokenId));\r\n       require(currentOwner != newOwner);\r\n       require(newOwner != address(0));\r\n       require(allowed[currentOwner][newOwner] == _tokenId);\r\n       balances[currentOwner] -= 1;\r\n       tokenOwners[_tokenId] = newOwner;\r\n       balances[newOwner] += 1;\r\n       Transfer(currentOwner, newOwner, _tokenId);\r\n   }\r\n   function tokenOfOwnerByIndex(address _owner, uint256 _index) constant returns (uint tokenId){\r\n       return ownerTokens[_owner][_index];\r\n   }\r\n   function tokenMetadata(uint256 _tokenId) constant returns (string infoUrl){\r\n       return tokenLinks[_tokenId];\r\n   }\r\n   event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n   event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"name\":\"infoUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ERC721","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fc7925de523f9d2d4153ff4f0bca911592a6ef566107ccc896018607924c5efc"}]}