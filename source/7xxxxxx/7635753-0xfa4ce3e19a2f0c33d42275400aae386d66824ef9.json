{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ninterface tokenRecipient\r\n{\r\n\tfunction receiveApproval (address _from, uint256 _value, address _token, bytes calldata _extraData) external;\r\n}\r\n\r\nlibrary safemath\r\n{\r\n\tfunction mul (uint256 _a, uint256 _b) internal pure returns (uint256)\r\n\t{\r\n\t\tif (_a == 0) return 0;\r\n\r\n\t\tuint256 c = _a * _b;\r\n\t\trequire (c / _a == _b);\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div (uint256 _a, uint256 _b) internal pure returns (uint256)\r\n\t{\r\n\t\trequire (_b > 0);\r\n\t\tuint256 c = _a / _b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub (uint256 _a, uint256 _b) internal pure returns (uint256)\r\n\t{\r\n\t\trequire (_b <= _a);\r\n\t\tuint256 c = _a - _b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add (uint256 _a, uint256 _b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = _a + _b;\r\n\t\trequire (c >= _a);\r\n\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract wishcoin\r\n{\r\n\tusing safemath for uint;\r\n\r\n\tstring\tpublic name = \"A Wish Coin\";\r\n\tstring\tpublic symbol = \"WISH\";\r\n\tuint8\tpublic decimals = 0;\r\n\r\n\taddress\tpublic owner = address (0);\r\n\r\n\tuint256\tpublic price = 1 finney;\r\n\tuint256\tpublic tokenPrice = 1 finney;\r\n\tuint256\tpublic commission = 500;\r\n\tuint256 public minlimit = 1 szabo;\r\n\tuint256\tpublic tokens_on_sale = 5000000000;\r\n\r\n\tuint256\tpublic totalSupply = 0;\r\n\tuint256\tpublic freeTokens = 2500000000;\r\n\tuint256\tpublic tokensPerPrice = 100;\r\n\r\n\twish_t\t[] public wish;\r\n\tuint256\tpublic count = 0;\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\tmapping (address => mapping (address => uint256)) public allowance;\r\n\r\n\tbool\tpublic active = true;\r\n\tbool\tprivate blocked = false;\r\n\r\n\tmodifier blockedby {require (blocked == false); blocked = true; _; blocked = false;}\r\n\tmodifier owneronly {require (msg.sender == owner); _;}\r\n\r\n\tevent DesireCreated (uint256 Index, address Desirous, string Description, uint256 Limit);\r\n\tevent DesireDeleted (uint256 Index);\r\n\tevent DesireModified (uint256 Index);\r\n\tevent DesireSupported (uint256 Index, address Grantor, uint256 Value);\r\n\r\n\tevent TokenSalePriceChanged (uint256 Price);\r\n\tevent ActiveStateChanged (bool IsActive);\r\n\r\n\tevent Transfer (address indexed From, address indexed To, uint256 Value);\r\n\tevent Approval (address indexed Owner, address indexed Spender, uint256 Value);\r\n\tevent Burn (address indexed From, uint256 Value);\r\n\r\n\tconstructor () public\r\n\t{\r\n\t\towner = msg.sender;\r\n\r\n\t\twish.push (wish_t (address (0), \"\", \"\", 0, 0));\r\n\r\n\t\tcount ++;\r\n\t}\r\n\r\n\tfunction changeOptions (uint256 price_value, uint256 commission_value, uint256 limits) public owneronly blockedby\r\n\t{\r\n\t\tif (price != price_value) price = price_value;\r\n\t\tif (commission != commission_value) commission = commission_value;\r\n\t\tif (minlimit != limits) minlimit = limits;\r\n\t}\r\n\r\n\tfunction changeTokenPrice (uint256 value) public owneronly blockedby\r\n\t{\r\n\t\tif (tokenPrice != value)\r\n\t\t{\r\n\t\t\ttokenPrice = value;\r\n\r\n\t\t\temit TokenSalePriceChanged (value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setActiveState (bool value) public owneronly blockedby\r\n\t{\r\n\t\tif (active != value)\r\n\t\t{\r\n\t\t\tactive = value;\r\n\r\n\t\t\temit ActiveStateChanged (value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addDesire (string memory title, string memory description, uint256 limit) public payable blockedby\r\n\t{\r\n\t\trequire (msg.value >= price && !is_contract (msg.sender) && active == true);\r\n\r\n\t\tif (limit > 0 && limit < minlimit) revert ();\r\n\r\n\t\tuint256 index = wish.push (wish_t (msg.sender, title, description, limit, 0)).sub (1);\r\n\r\n\t\tcount ++;\r\n\r\n\t\tif (msg.value > price) address (uint160 (msg.sender)).transfer (msg.value.sub (price));\r\n\r\n\t\taddress (uint160 (owner)).transfer (price);\r\n\r\n\t\tif (freeTokens > 0)\r\n\t\t{\r\n\t\t\tbalanceOf [msg.sender] = balanceOf [msg.sender].add (tokensPerPrice);\r\n\t\t\tfreeTokens = freeTokens.sub (tokensPerPrice);\r\n\t\t\ttokens_on_sale = tokens_on_sale.sub (tokensPerPrice);\r\n\t\t\ttotalSupply = totalSupply.add (tokensPerPrice);\r\n\r\n\t\t\temit Transfer (address (this), msg.sender, tokensPerPrice);\r\n\t\t}\r\n\t\telse if (tokens_on_sale > 0)\r\n\t\t{\r\n\t\t\tuint256 tokens = 0;\r\n\r\n\t\t\tif (tokenPrice > 0)\r\n\t\t\t{\r\n\t\t\t    tokens = price.div (tokenPrice);\r\n\r\n\t\t\t    if (tokens > tokens_on_sale) tokens = tokens_on_sale;\r\n\r\n                if (tokens > 0)\r\n                {\r\n        \t\t\ttokens_on_sale = tokens_on_sale.sub (tokens);\r\n        \t\t\ttotalSupply = totalSupply.add (tokens);\r\n\r\n        \t\t\temit Transfer (address (this), msg.sender, tokens);\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\temit DesireCreated (index, msg.sender, description, limit);\r\n\t}\r\n\r\n\tfunction deleteDesire (uint256 index) public blockedby\r\n\t{\r\n\t\trequire (count > 0 && index < count && (wish [index].desirous == msg.sender || msg.sender == owner) && active == true);\r\n\r\n\t\twish [index].desirous = address (0);\r\n\r\n\t\temit DesireDeleted (index);\r\n\t}\r\n\r\n\tfunction modifyDesire (uint256 index, string memory title, string memory description, uint256 limit) public blockedby\r\n\t{\r\n\t\trequire (count > 0 && index < count && (wish [index].desirous == msg.sender || msg.sender == owner) && active == true);\r\n\r\n\t\twish [index].title = title;\r\n\t\twish [index].description = description;\r\n\t\twish [index].limit = limit;\r\n\r\n\t\temit DesireModified (index);\r\n\t}\r\n\r\n\tfunction supportDesire (uint256 index) public payable blockedby\r\n\t{\r\n\t\trequire (count > 0 && index < count && msg.value > 0 && wish [index].desirous != address (0) && active == true);\r\n\r\n\t\tif (wish [index].limit > 0 && wish [index].total >= wish [index].limit) revert ();\r\n\r\n\t\tuint256 amount = 0;\r\n\t\tuint256 commis = 0;\r\n\t\tuint256 retval = 0;\r\n\r\n\t\tif (wish [index].limit > 0) amount = wish [index].limit.sub (wish [index].total);\r\n\t\telse amount = msg.value;\r\n\r\n\t\tif (amount > msg.value) amount = msg.value;\r\n\r\n\t\tif (msg.value > amount) address (uint160 (msg.sender)).transfer (msg.value.sub (amount));\r\n\r\n\t\tcommis = amount.mul (commission).div (10000);\r\n\t\tretval = amount.sub (commis);\r\n\r\n\t\taddress (uint160 (owner)).transfer (commis);\r\n\t\taddress (uint160 (wish [index].desirous)).transfer (retval);\r\n\r\n\t\twish [index].total = wish [index].total.add (amount);\r\n\r\n\t\tuint256 tokens = 0;\r\n\r\n\t\tif (freeTokens > 0)\r\n\t\t{\r\n\t\t    if (price > 0) tokens = amount.div (price).mul (tokensPerPrice);\r\n\t\t    else tokens = tokensPerPrice;\r\n\r\n\t\t    if (tokens > freeTokens) tokens = freeTokens;\r\n\r\n\t\t\tbalanceOf [msg.sender] = balanceOf [msg.sender].add (tokens);\r\n\t\t\tfreeTokens = freeTokens.sub (tokens);\r\n\t\t\ttokens_on_sale = tokens_on_sale.sub (tokens);\r\n\t\t\ttotalSupply = totalSupply.add (tokens);\r\n\r\n\t\t\temit Transfer (address (this), msg.sender, tokens);\r\n\t\t}\r\n\t\telse if (tokens_on_sale > 0)\r\n\t\t{\r\n\t\t\tif (tokenPrice > 0)\r\n\t\t\t{\r\n\t\t\t    tokens = amount.div (tokenPrice).mul (tokenPrice);\r\n\r\n    \t\t\tif (tokens > tokens_on_sale) tokens = tokens_on_sale;\r\n\r\n                if (tokens > 0)\r\n                {\r\n        \t\t\ttokens_on_sale = tokens_on_sale.sub (tokens);\r\n        \t\t\ttotalSupply = totalSupply.add (tokens);\r\n\r\n        \t\t\temit Transfer (address (this), msg.sender, tokens);\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\temit DesireSupported (index, msg.sender, amount);\r\n\t}\r\n\r\n\tfunction transfer (address to, uint256 value) public blockedby returns (bool success)\r\n\t{\r\n\t\ttransferring (msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom (address from, address to, uint256 value) public blockedby returns (bool success)\r\n    {\r\n        require (value <= allowance [from][msg.sender]);\r\n\r\n        allowance [from][msg.sender] = allowance [from][msg.sender].sub (value);\r\n        transferring (from, to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve (address spender, uint256 value) public blockedby returns (bool success)\r\n    {\r\n\t    require (active == true);\r\n\r\n        allowance [msg.sender][spender] = value;\r\n\r\n        emit Approval (msg.sender, spender, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall (address spender, uint256 value, bytes memory extra) public blockedby returns (bool success)\r\n    {\r\n\t    require (active == true);\r\n\r\n        tokenRecipient spenders = tokenRecipient (spender);\r\n\r\n        if (approve (spender, value))\r\n        {\r\n            spenders.receiveApproval (msg.sender, value, address (this), extra);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function burn (uint256 value) public blockedby returns (bool success)\r\n    {\r\n\t    require (active == true);\r\n\r\n        require (balanceOf [msg.sender] >= value);\r\n\r\n        balanceOf [msg.sender] = balanceOf [msg.sender].sub (value);\r\n        totalSupply = totalSupply.sub (value);\r\n\r\n        emit Burn (msg.sender, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function burnFrom (address from, uint256 value) public blockedby returns (bool success)\r\n    {\r\n\t    require (active == true);\r\n\r\n        require (balanceOf [from] >= value && value <= allowance [from][msg.sender]);\r\n\r\n        balanceOf [from] = balanceOf [from].sub (value);\r\n        allowance [from][msg.sender] = allowance [from][msg.sender].sub (value);\r\n        totalSupply = totalSupply.sub (value);\r\n\r\n        emit Burn (from, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function () external payable blockedby\r\n    {\r\n\t    require (freeTokens == 0 && tokens_on_sale > 0 && msg.value >= tokenPrice && active == true);\r\n\r\n\t    uint256 tokens = msg.value.div (tokenPrice);\r\n\t    uint256 amount = tokens.mul (tokenPrice);\r\n\r\n\t    if (msg.value > amount) address (uint160 (msg.sender)).transfer (msg.value.sub (amount));\r\n\r\n\t    balanceOf [msg.sender] = balanceOf [msg.sender].add (tokens);\r\n\t    tokens_on_sale = tokens_on_sale.sub (tokens);\r\n\t    totalSupply = totalSupply.add (tokens);\r\n\r\n\t    address (uint160 (owner)).transfer (msg.value.sub (amount));\r\n\r\n\t    emit Transfer (address (this), msg.sender, tokens);\r\n    }\r\n\r\n\tfunction transferring (address from, address to, uint value) internal\r\n\t{\r\n        require (to != address (0x0) && balanceOf [from] >= value && balanceOf [to].add (value) >= balanceOf [to] && active == true);\r\n\r\n        uint previousBalances = balanceOf [from].add (balanceOf [to]);\r\n\r\n        balanceOf [from] = balanceOf [from].sub (value);\r\n        balanceOf [to] = balanceOf [to].add (value);\r\n\r\n        emit Transfer (from, to, value);\r\n\r\n        assert (balanceOf [from].add (balanceOf [to]) == previousBalances);\r\n    }\r\n\r\n\tfunction is_contract (address _address) internal view returns (bool)\r\n\t{\r\n\t\tuint codeLength;\r\n\r\n\t\tif (_address == address (0)) return false;\r\n\r\n\t\tassembly {codeLength := extcodesize (_address)}\r\n\r\n\t\tif (codeLength > 0) return true;\r\n\t\telse return false;\r\n\t}\r\n\r\n\tstruct wish_t\r\n\t{\r\n\t\taddress\tdesirous;\r\n\t\tstring\ttitle;\r\n\t\tstring\tdescription;\r\n\t\tuint256\tlimit;\r\n\t\tuint256\ttotal;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wish\",\"outputs\":[{\"name\":\"desirous\",\"type\":\"address\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"uint256\"},{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"addDesire\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"modifyDesire\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minlimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokens_on_sale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price_value\",\"type\":\"uint256\"},{\"name\":\"commission_value\",\"type\":\"uint256\"},{\"name\":\"limits\",\"type\":\"uint256\"}],\"name\":\"changeOptions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"deleteDesire\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"supportDesire\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setActiveState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"extra\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commission\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"changeTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Desirous\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Limit\",\"type\":\"uint256\"}],\"name\":\"DesireCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Index\",\"type\":\"uint256\"}],\"name\":\"DesireDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Index\",\"type\":\"uint256\"}],\"name\":\"DesireModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Grantor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"DesireSupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"TokenSalePriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"IsActive\",\"type\":\"bool\"}],\"name\":\"ActiveStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"From\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"To\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"Spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"From\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"wishcoin","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a79f0535e2593a68fc42c82147438fbe9f907655ec4761685fc845d2ba86d97c"}]}