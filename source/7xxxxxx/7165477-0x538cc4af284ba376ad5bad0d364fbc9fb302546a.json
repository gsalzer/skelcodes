{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n * Ether PornStars Smart Contract.  Copyright © 2016–2019.\r\n * <admin@etherpornstars.com>\r\n */\r\n\r\npragma solidity ^0.5.2;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds two unsigned integers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n     * reverts when dividing by zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract EtherPornStars is Ownable {\r\n  using SafeMath for uint256;\r\n  address payable public ownerAddress;\r\n  bool public commFree;\r\n  uint customComm;\r\n  uint vidComm;\r\n  uint tipComm;\r\n    // Boundaries for messages\r\n  uint8 constant playerMessageMaxLength = 64;\r\n  mapping(address => userAccount) public user;\r\n  mapping (uint => address payable) public star;\r\n  mapping (uint => uint) public referrer;\r\n  event VideoBought(uint _buyerId, uint _videoId, uint _value, uint _refstarId);\r\n  event Funded(uint _buyerId, uint _starId, string _message, uint _value, uint _refstarId);\r\n  event Tipped(uint _buyerId, uint _starId, uint _value);\r\n  event PrivateShow(uint _buyerId, uint _starId, uint _value);\r\n  event SubscriptionBought(uint _buyerId, uint _starId, uint _tier, uint _value);\r\n  event StoreItemBought(uint _buyerId, uint _starId, uint _itemId, uint _value, uint _refstarId);\r\n  event CustomVidBought(uint _buyerId, uint _starId,  uint _cid, uint _value);\r\n  event PremiumBought(uint _buyerId, uint _value);\r\n  struct userAccount {\r\n    uint[] vidsOwned;\r\n    uint[3][] subscriptions;\r\n    uint epsPremium;\r\n  }\r\n  \r\n  constructor() public {\r\n      commFree = true;\r\n      customComm = 10;\r\n      vidComm = 10;\r\n      tipComm = 5;\r\n      ownerAddress = msg.sender;\r\n  }\r\n\r\n  function tipStar(uint _buyerId, uint _starId) public payable {\r\n      require(msg.value >= 10000000000000000);\r\n      uint _commission = msg.value.div(tipComm);\r\n      uint _starShare = msg.value-_commission;\r\n      address payable starAddress = star[_starId];\r\n      require(starAddress != address(0));\r\n      starAddress.transfer(_starShare);\r\n      ownerAddress.transfer(_commission);\r\n      emit Tipped(_buyerId, _starId, msg.value);\r\n  }\r\n  \r\n    function fundStar(uint _buyerId, uint _starId, string memory _message) public payable {\r\n      bytes memory _messageBytes = bytes(_message);\r\n      require(msg.value >= 10000000000000000);\r\n      require(_messageBytes.length <= playerMessageMaxLength, \"Too long\");\r\n      uint _commission = msg.value.div(tipComm);\r\n      address payable _referrerAddress;\r\n      uint _referralShare;\r\n      if (referrer[_starId] != 0) {\r\n          _referrerAddress = star[referrer[_starId]];\r\n          _referralShare = msg.value.div(5);\r\n      }\r\n      uint _starShare = msg.value - _commission - _referralShare;\r\n      address payable _starAddress = star[_starId];\r\n      require(_starAddress != address(0));\r\n      _starAddress.transfer(_starShare);\r\n      _referrerAddress.transfer(_referralShare);\r\n      ownerAddress.transfer(_commission);\r\n      emit Funded(_buyerId, _starId, _message, msg.value, referrer[_starId]);\r\n  }\r\n  \r\n    function buyPrivateShow(uint _buyerId, uint _starId) public payable {\r\n      require(msg.value >= 10000000000000000);\r\n      uint _commission = msg.value.div(vidComm);\r\n      uint _starShare = msg.value-_commission;\r\n      address payable starAddress = star[_starId];\r\n      require(starAddress != address(0));\r\n      starAddress.transfer(_starShare);\r\n      ownerAddress.transfer(_commission);\r\n      emit PrivateShow(_buyerId, _starId, msg.value);\r\n  }\r\n  \r\n  function buySub(uint _buyerId, uint _starId, uint _tier) public payable {\r\n    require(msg.value >= 10000000000000000);\r\n    require(_tier > 0 && _buyerId > 0);\r\n    uint _commission = msg.value.div(vidComm);\r\n    uint _starShare = msg.value-_commission;\r\n    address payable _starAddress = star[_starId];\r\n    require(_starAddress != address(0));\r\n    _starAddress.transfer(_starShare);\r\n    ownerAddress.transfer(_commission);\r\n    user[msg.sender].subscriptions.push([_starId,_tier, msg.value]);\r\n    emit SubscriptionBought(_buyerId, _starId, _tier, msg.value);\r\n  }\r\n  \r\n  function buyVid(uint _buyerId, uint _videoId, uint _starId) public payable {\r\n    require(msg.value >= 10000000000000000);\r\n    uint _commission = msg.value.div(vidComm);\r\n    if(commFree){\r\n        _commission = 0;\r\n    }\r\n    address payable _referrerAddress;\r\n    uint _referralShare;\r\n    if (referrer[_starId] != 0) {\r\n          _referrerAddress = star[referrer[_starId]];\r\n          _referralShare = msg.value.div(5);\r\n      }\r\n    uint _starShare = msg.value- _commission - _referralShare;\r\n    address payable _starAddress = star[_starId];\r\n    require(_starAddress != address(0));\r\n    _starAddress.transfer(_starShare);\r\n    _referrerAddress.transfer(_referralShare);\r\n    ownerAddress.transfer(_commission);\r\n    user[msg.sender].vidsOwned.push(_videoId);\r\n    emit VideoBought(_buyerId, _videoId, msg.value, referrer[_starId]);\r\n  }\r\n\r\n  function buyStoreItem(uint _buyerId, uint _itemId, uint _starId) public payable {\r\n    require(msg.value >= 10000000000000000);\r\n    require(_itemId > 0 && _buyerId > 0);\r\n    uint _commission = msg.value.div(vidComm);\r\n    if(commFree){\r\n        _commission = 0;\r\n    }\r\n    uint _referralShare;\r\n    address payable _referrerAddress;\r\n    if (referrer[_starId] != 0) {\r\n          _referrerAddress = star[referrer[_starId]];\r\n          _referralShare = msg.value.div(5);\r\n      }\r\n    uint _starShare = msg.value- _commission-_referralShare;\r\n    address payable _starAddress = star[_starId];\r\n    require(_starAddress != address(0));\r\n    _starAddress.transfer(_starShare);\r\n    _referrerAddress.transfer(_referralShare);\r\n    ownerAddress.transfer(_commission);\r\n    emit StoreItemBought(_buyerId, _starId, _itemId,  msg.value, referrer[_starId]);\r\n  }\r\n  \r\n  function buyPremium(uint _buyerId) public payable {\r\n    require(msg.value >= 10000000000000000);\r\n    ownerAddress.transfer(msg.value);\r\n    emit PremiumBought(_buyerId, msg.value);\r\n  }\r\n  \r\n    function buyCustomVid(uint _buyerId, uint _starId, uint _cid) public payable {\r\n    require(msg.value >= 10000000000000000);\r\n    uint _commission = msg.value.div(customComm);\r\n    if(commFree){\r\n        _commission = 0;\r\n    }\r\n    uint _starShare = msg.value - _commission;\r\n    address payable _starAddress = star[_starId];\r\n    require(_starAddress != address(0));\r\n    _starAddress.transfer(_starShare);\r\n    ownerAddress.transfer(_commission);\r\n    emit CustomVidBought(_buyerId, _starId, _cid, msg.value);\r\n  }\r\n  \r\n  function addStar(uint _starId, address payable _starAddress) public onlyOwner {\r\n    star[_starId] = _starAddress;\r\n  }\r\n\r\n  function addReferrer(uint _starId, uint _referrerId) public onlyOwner {\r\n    referrer[_starId] = _referrerId;\r\n  }\r\n  \r\n  function commission(bool _commFree, uint _customcomm, uint _vidcomm, uint _tipcomm) public onlyOwner {\r\n    commFree = _commFree;\r\n    customComm = _customcomm;\r\n    vidComm = _vidcomm;\r\n    tipComm = _tipcomm;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"},{\"name\":\"_cid\",\"type\":\"uint256\"}],\"name\":\"buyCustomVid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"}],\"name\":\"buyStoreItem\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_videoId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"}],\"name\":\"buyVid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_starId\",\"type\":\"uint256\"},{\"name\":\"_referrerId\",\"type\":\"uint256\"}],\"name\":\"addReferrer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"}],\"name\":\"buyPremium\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"}],\"name\":\"buyPrivateShow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"},{\"name\":\"_tier\",\"type\":\"uint256\"}],\"name\":\"buySub\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_commFree\",\"type\":\"bool\"},{\"name\":\"_customcomm\",\"type\":\"uint256\"},{\"name\":\"_vidcomm\",\"type\":\"uint256\"},{\"name\":\"_tipcomm\",\"type\":\"uint256\"}],\"name\":\"commission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"}],\"name\":\"tipStar\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_starId\",\"type\":\"uint256\"},{\"name\":\"_starAddress\",\"type\":\"address\"}],\"name\":\"addStar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"name\":\"epsPremium\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"star\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"referrer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commFree\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"name\":\"_starId\",\"type\":\"uint256\"},{\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"fundStar\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_videoId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_refstarId\",\"type\":\"uint256\"}],\"name\":\"VideoBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_refstarId\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Tipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"PrivateShow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_tier\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"SubscriptionBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_refstarId\",\"type\":\"uint256\"}],\"name\":\"StoreItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_starId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_cid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CustomVidBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"PremiumBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"EtherPornStars","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://11d586403a2b35324a346a5602c68a58ab452fd23471cca8fb6c010c8da998a4"}]}