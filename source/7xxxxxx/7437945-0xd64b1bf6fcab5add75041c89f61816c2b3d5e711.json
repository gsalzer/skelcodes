{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, reverts on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, reverts on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary Address {\r\n\r\n  /**\r\n   * Returns whether the target address is a contract\r\n   * @dev This function will return false if invoked during the constructor of a contract,\r\n   * as the code is not actually created until after the constructor finishes.\r\n   * @param account address of the account to check\r\n   * @return whether the target address is a contract\r\n   */\r\n  function isContract(address account) internal view returns (bool) {\r\n    uint256 size;\r\n    // XXX Currently there is no better way to check if there is a contract in an address\r\n    // than to check the size of the code at that address.\r\n    // See https://ethereum.stackexchange.com/a/14016/36603\r\n    // for more details about how this works.\r\n    // TODO Check this again before the Serenity release, because all addresses will be\r\n    // contracts then.\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly { size := extcodesize(account) }\r\n    return size > 0;\r\n  }\r\n\r\n}\r\n\r\n\r\ninterface IOrbsGuardians {\r\n\r\n    event GuardianRegistered(address indexed guardian);\r\n    event GuardianLeft(address indexed guardian);\r\n    event GuardianUpdated(address indexed guardian);\r\n\r\n    /// @dev register a new guardian. You will need to transfer registrationDepositWei amount of ether.\r\n    /// @param name string The name of the guardian\r\n    /// @param website string The website of the guardian\r\n    function register(string name, string website) external payable;\r\n\r\n    /// @dev update guardian details. only msg.sender can update it's own guardian details.\r\n    /// @param name string The name of the guardian\r\n    /// @param website string The website of the guardianfunction update(string name, string website) external;\r\n    function update(string name, string website) external;\r\n\r\n    /// @dev Delete the guardian and take back the locked ether. only msg.sender can leave.\r\n    function leave() external;\r\n\r\n    /// @dev Returns if the address belongs to a guardian\r\n    /// @param guardian address the guardian address\r\n    function isGuardian(address guardian) external view returns (bool);\r\n\r\n    /// @dev Returns name and website for  a specific guardian.\r\n    /// @param guardian address the guardian address\r\n    function getGuardianData(address guardian)\r\n        external\r\n        view\r\n        returns (string name, string website);\r\n\r\n    /// @dev Returns in which block the guardian registered, and in which block it was last updated.\r\n    /// @param guardian address the guardian address\r\n    function getRegistrationBlockNumber(address guardian)\r\n        external\r\n        view\r\n        returns (uint registeredOn, uint lastUpdatedOn);\r\n\r\n    /// @dev Returns an array of guardians.\r\n    /// @param offset uint offset from which to start getting guardians from the array\r\n    /// @param limit uint limit of guardians to be returned.\r\n    function getGuardians(uint offset, uint limit)\r\n        external\r\n        view\r\n        returns (address[]);\r\n\r\n    /// @dev Similar to getGuardians, but returns addresses represented as byte20.\r\n    /// @param offset uint offset from which to start getting guardians from the array\r\n    /// @param limit uint limit of guardians to be returned.\r\n    function getGuardiansBytes20(uint offset, uint limit)\r\n        external\r\n        view\r\n        returns (bytes20[]);\r\n}\r\n\r\n\r\ncontract OrbsGuardians is IOrbsGuardians {\r\n    using SafeMath for uint256;\r\n\r\n    struct GuardianData {\r\n        string name;\r\n        string website;\r\n        uint index;\r\n        uint registeredOnBlock;\r\n        uint lastUpdatedOnBlock;\r\n        uint registeredOn;\r\n    }\r\n\r\n    // The version of the current Guardian smart contract.\r\n    uint public constant VERSION = 1;\r\n\r\n    // Amount of Ether in Wei need to be locked when registering - this will be set to 1.\r\n    uint public registrationDepositWei;\r\n    // The amount of time needed to wait until a guardian can leave and get registrationDepositWei_\r\n    uint public registrationMinTime;\r\n\r\n    // Iterable array to get a list of all guardians\r\n    address[] internal guardians;\r\n\r\n    // Mapping between address and the guardian data.\r\n    mapping(address => GuardianData) internal guardiansData;\r\n\r\n    /// @dev Check that the caller is a guardian.\r\n    modifier onlyGuardian() {\r\n        require(isGuardian(msg.sender), \"You must be a registered guardian\");\r\n        _;\r\n    }\r\n\r\n    /// @dev Check that the caller is not a contract.\r\n    modifier onlyEOA() {\r\n        require(!Address.isContract(msg.sender),\"Only EOA may register as Guardian\");\r\n        _;\r\n    }\r\n\r\n    /// @dev Constructor that initializes the amount of ether needed to lock when registering. This will be set to 1.\r\n    /// @param registrationDepositWei_ uint the amount of ether needed to lock when registering.\r\n    /// @param registrationMinTime_ uint the amount of time needed to wait until a guardian can leave and get registrationDepositWei_\r\n    constructor(uint registrationDepositWei_, uint registrationMinTime_) public {\r\n        require(registrationDepositWei_ > 0, \"registrationDepositWei_ must be positive\");\r\n\r\n        registrationMinTime = registrationMinTime_;\r\n        registrationDepositWei = registrationDepositWei_;\r\n    }\r\n\r\n    /// @dev register a new guardian. You will need to transfer registrationDepositWei amount of ether.\r\n    /// @param name string The name of the guardian\r\n    /// @param website string The website of the guardian\r\n    function register(string name, string website)\r\n        external\r\n        payable\r\n        onlyEOA\r\n    {\r\n        address sender = msg.sender;\r\n        require(bytes(name).length > 0, \"Please provide a valid name\");\r\n        require(bytes(website).length > 0, \"Please provide a valid website\");\r\n        require(!isGuardian(sender), \"Cannot be a guardian\");\r\n        require(msg.value == registrationDepositWei, \"Please provide the exact registration deposit\");\r\n\r\n        uint index = guardians.length;\r\n        guardians.push(sender);\r\n        guardiansData[sender] = GuardianData({\r\n            name: name,\r\n            website: website,\r\n            index: index ,\r\n            registeredOnBlock: block.number,\r\n            lastUpdatedOnBlock: block.number,\r\n            registeredOn: now\r\n        });\r\n\r\n        emit GuardianRegistered(sender);\r\n    }\r\n\r\n    /// @dev update guardian details. only msg.sender can update it's own guardian details.\r\n    /// @param name string The name of the guardian\r\n    /// @param website string The website of the guardian\r\n    function update(string name, string website)\r\n        external\r\n        onlyGuardian\r\n        onlyEOA\r\n    {\r\n        address sender = msg.sender;\r\n        require(bytes(name).length > 0, \"Please provide a valid name\");\r\n        require(bytes(website).length > 0, \"Please provide a valid website\");\r\n\r\n\r\n        guardiansData[sender].name = name;\r\n        guardiansData[sender].website = website;\r\n        guardiansData[sender].lastUpdatedOnBlock = block.number;\r\n\r\n        emit GuardianUpdated(sender);\r\n    }\r\n\r\n    /// @dev Delete the guardian and take back the locked ether. only msg.sender can leave.\r\n    function leave() external onlyGuardian onlyEOA {\r\n        address sender = msg.sender;\r\n        require(now >= guardiansData[sender].registeredOn.add(registrationMinTime), \"Minimal guardian time didnt pass\");\r\n\r\n        uint i = guardiansData[sender].index;\r\n\r\n        assert(guardians[i] == sender); // Will consume all available gas.\r\n\r\n        // Replace with last element and remove from end\r\n        guardians[i] = guardians[guardians.length - 1]; // Switch with last\r\n        guardiansData[guardians[i]].index = i; // Update it's lookup index\r\n        guardians.length--; // Remove the last one\r\n\r\n        // Clear data\r\n        delete guardiansData[sender];\r\n\r\n        // Refund deposit\r\n        sender.transfer(registrationDepositWei);\r\n\r\n        emit GuardianLeft(sender);\r\n    }\r\n\r\n    /// @dev Similar to getGuardians, but returns addresses represented as byte20.\r\n    /// @param offset uint offset from which to start getting guardians from the array\r\n    /// @param limit uint limit of guardians to be returned.\r\n    function getGuardiansBytes20(uint offset, uint limit)\r\n        external\r\n        view\r\n        returns (bytes20[])\r\n    {\r\n        address[] memory guardianAddresses = getGuardians(offset, limit);\r\n        uint guardianAddressesLength = guardianAddresses.length;\r\n\r\n        bytes20[] memory result = new bytes20[](guardianAddressesLength);\r\n\r\n        for (uint i = 0; i < guardianAddressesLength; i++) {\r\n            result[i] = bytes20(guardianAddresses[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /// @dev Returns in which block the guardian registered, and in which block it was last updated.\r\n    /// @param guardian address the guardian address\r\n    function getRegistrationBlockNumber(address guardian)\r\n        external\r\n        view\r\n        returns (uint registeredOn, uint lastUpdatedOn)\r\n    {\r\n        require(isGuardian(guardian), \"Please provide a listed Guardian\");\r\n\r\n        GuardianData storage entry = guardiansData[guardian];\r\n        registeredOn = entry.registeredOnBlock;\r\n        lastUpdatedOn = entry.lastUpdatedOnBlock;\r\n    }\r\n\r\n    /// @dev Returns an array of guardians.\r\n    /// @param offset uint offset from which to start getting guardians from the array\r\n    /// @param limit uint limit of guardians to be returned.\r\n    function getGuardians(uint offset, uint limit)\r\n        public\r\n        view\r\n        returns (address[] memory)\r\n    {\r\n        if (offset >= guardians.length) { // offset out of bounds\r\n            return new address[](0);\r\n        }\r\n\r\n        if (offset.add(limit) > guardians.length) { // clip limit to array size\r\n            limit = guardians.length.sub(offset);\r\n        }\r\n\r\n        address[] memory result = new address[](limit);\r\n\r\n        uint resultLength = result.length;\r\n        for (uint i = 0; i < resultLength; i++) {\r\n            result[i] = guardians[offset.add(i)];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /// @dev Returns name and website for  a specific guardian.\r\n    /// @param guardian address the guardian address\r\n    function getGuardianData(address guardian)\r\n        public\r\n        view\r\n        returns (string memory name, string memory website)\r\n    {\r\n        require(isGuardian(guardian), \"Please provide a listed Guardian\");\r\n        name = guardiansData[guardian].name;\r\n        website = guardiansData[guardian].website;\r\n    }\r\n\r\n    /// @dev Returns if the address belongs to a guardian\r\n    /// @param guardian address the guardian address\r\n    function isGuardian(address guardian) public view returns (bool) {\r\n        return guardiansData[guardian].registeredOnBlock > 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"isGuardian\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrationDepositWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"website\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getGuardianData\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"website\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getGuardiansBytes20\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes20[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"getRegistrationBlockNumber\",\"outputs\":[{\"name\":\"registeredOn\",\"type\":\"uint256\"},{\"name\":\"lastUpdatedOn\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"leave\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getGuardians\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"website\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrationMinTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"registrationDepositWei_\",\"type\":\"uint256\"},{\"name\":\"registrationMinTime_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"GuardianRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"GuardianLeft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"GuardianUpdated\",\"type\":\"event\"}]","ContractName":"OrbsGuardians","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000127500","Library":"","SwarmSource":"bzzr://80562670b557590e5c027e329b5ec78f539881504e4a1407fde02e1054d0c6c7"}]}