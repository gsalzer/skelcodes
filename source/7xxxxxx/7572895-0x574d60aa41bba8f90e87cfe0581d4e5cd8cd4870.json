{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * (E)t)h)e)x) Jackpot Contract \r\n *  This smart-contract is the part of Ethex Lottery fair game.\r\n *  See latest version at https://github.com/ethex-bet/ethex-contracts \r\n *  http://ethex.bet\r\n */\r\n\r\ncontract EthexJackpot {\r\n    mapping(uint256 => address payable) public tickets;\r\n    uint256 public numberEnd;\r\n    uint256 public firstNumber;\r\n    uint256 public dailyAmount;\r\n    uint256 public weeklyAmount;\r\n    uint256 public monthlyAmount;\r\n    uint256 public seasonalAmount;\r\n    bool public dailyProcessed;\r\n    bool public weeklyProcessed;\r\n    bool public monthlyProcessed;\r\n    bool public seasonalProcessed;\r\n    address payable private owner;\r\n    address public lotoAddress;\r\n    address payable public newVersionAddress;\r\n    EthexJackpot previousContract;\r\n    uint256 public dailyNumberStartPrev;\r\n    uint256 public weeklyNumberStartPrev;\r\n    uint256 public monthlyNumberStartPrev;\r\n    uint256 public seasonalNumberStartPrev;\r\n    uint256 public dailyStart;\r\n    uint256 public weeklyStart;\r\n    uint256 public monthlyStart;\r\n    uint256 public seasonalStart;\r\n    uint256 public dailyEnd;\r\n    uint256 public weeklyEnd;\r\n    uint256 public monthlyEnd;\r\n    uint256 public seasonalEnd;\r\n    uint256 public dailyNumberStart;\r\n    uint256 public weeklyNumberStart;\r\n    uint256 public monthlyNumberStart;\r\n    uint256 public seasonalNumberStart;\r\n    uint256 public dailyNumberEndPrev;\r\n    uint256 public weeklyNumberEndPrev;\r\n    uint256 public monthlyNumberEndPrev;\r\n    uint256 public seasonalNumberEndPrev;\r\n    \r\n    event Jackpot (\r\n        uint256 number,\r\n        uint256 count,\r\n        uint256 amount,\r\n        byte jackpotType\r\n    );\r\n    \r\n    event Ticket (\r\n        bytes16 indexed id,\r\n        uint256 number\r\n    );\r\n    \r\n    event SuperPrize (\r\n        uint256 amount,\r\n        address winner\r\n    );\r\n    \r\n    uint256 constant DAILY = 5000;\r\n    uint256 constant WEEKLY = 35000;\r\n    uint256 constant MONTHLY = 150000;\r\n    uint256 constant SEASONAL = 450000;\r\n    uint256 constant PRECISION = 1 ether;\r\n    uint256 constant DAILY_PART = 84;\r\n    uint256 constant WEEKLY_PART = 12;\r\n    uint256 constant MONTHLY_PART = 3;\r\n    \r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function() external payable { }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwnerOrNewVersion {\r\n        require(msg.sender == owner || msg.sender == newVersionAddress);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyLoto {\r\n        require(msg.sender == lotoAddress, \"Loto only\");\r\n        _;\r\n    }\r\n    \r\n    function migrate() external onlyOwnerOrNewVersion {\r\n        newVersionAddress.transfer(address(this).balance);\r\n    }\r\n\r\n    function registerTicket(bytes16 id, address payable gamer) external onlyLoto {\r\n        uint256 number = numberEnd + 1;\r\n        if (block.number >= dailyEnd) {\r\n            setDaily();\r\n            dailyNumberStart = number;\r\n        }\r\n        else\r\n            if (dailyNumberStart == dailyNumberStartPrev)\r\n                dailyNumberStart = number;\r\n        if (block.number >= weeklyEnd) {\r\n            setWeekly();\r\n            weeklyNumberStart = number;\r\n        }\r\n        else\r\n            if (weeklyNumberStart == weeklyNumberStartPrev)\r\n                weeklyNumberStart = number;\r\n        if (block.number >= monthlyEnd) {\r\n            setMonthly();\r\n            monthlyNumberStart = number;\r\n        }\r\n        else\r\n            if (monthlyNumberStart == monthlyNumberStartPrev)\r\n                monthlyNumberStart = number;\r\n        if (block.number >= seasonalEnd) {\r\n            setSeasonal();\r\n            seasonalNumberStart = number;\r\n        }\r\n        else\r\n            if (seasonalNumberStart == seasonalNumberStartPrev)\r\n                seasonalNumberStart = number;\r\n        numberEnd = number;\r\n        tickets[number] = gamer;\r\n        emit Ticket(id, number);\r\n    }\r\n    \r\n    function setLoto(address loto) external onlyOwner {\r\n        lotoAddress = loto;\r\n    }\r\n    \r\n    function setNewVersion(address payable newVersion) external onlyOwner {\r\n        newVersionAddress = newVersion;\r\n    }\r\n    \r\n    function payIn() external payable {\r\n        uint256 distributedAmount = dailyAmount + weeklyAmount + monthlyAmount + seasonalAmount;\r\n        if (distributedAmount < address(this).balance) {\r\n            uint256 amount = (address(this).balance - distributedAmount) / 4;\r\n            dailyAmount += amount;\r\n            weeklyAmount += amount;\r\n            monthlyAmount += amount;\r\n            seasonalAmount += amount;\r\n        }\r\n    }\r\n    \r\n    function settleJackpot() external {\r\n        if (block.number >= dailyEnd)\r\n            setDaily();\r\n        if (block.number >= weeklyEnd)\r\n            setWeekly();\r\n        if (block.number >= monthlyEnd)\r\n            setMonthly();\r\n        if (block.number >= seasonalEnd)\r\n            setSeasonal();\r\n        \r\n        if (block.number == dailyStart || (dailyStart < block.number - 256))\r\n            return;\r\n        \r\n        uint48 modulo = uint48(bytes6(blockhash(dailyStart) << 29));\r\n        \r\n        uint256 dailyPayAmount;\r\n        uint256 weeklyPayAmount;\r\n        uint256 monthlyPayAmount;\r\n        uint256 seasonalPayAmount;\r\n        uint256 dailyWin;\r\n        uint256 weeklyWin;\r\n        uint256 monthlyWin;\r\n        uint256 seasonalWin;\r\n        if (dailyProcessed == false) {\r\n            dailyPayAmount = dailyAmount * PRECISION / DAILY_PART / PRECISION;\r\n            dailyAmount -= dailyPayAmount;\r\n            dailyProcessed = true;\r\n            dailyWin = getNumber(dailyNumberStartPrev, dailyNumberEndPrev, modulo);\r\n            emit Jackpot(dailyWin, dailyNumberEndPrev - dailyNumberStartPrev + 1, dailyPayAmount, 0x01);\r\n        }\r\n        if (weeklyProcessed == false) {\r\n            weeklyPayAmount = weeklyAmount * PRECISION / WEEKLY_PART / PRECISION;\r\n            weeklyAmount -= weeklyPayAmount;\r\n            weeklyProcessed = true;\r\n            weeklyWin = getNumber(weeklyNumberStartPrev, weeklyNumberEndPrev, modulo);\r\n            emit Jackpot(weeklyWin, weeklyNumberEndPrev - weeklyNumberStartPrev + 1, weeklyPayAmount, 0x02);\r\n        }\r\n        if (monthlyProcessed == false) {\r\n            monthlyPayAmount = monthlyAmount * PRECISION / MONTHLY_PART / PRECISION;\r\n            monthlyAmount -= monthlyPayAmount;\r\n            monthlyProcessed = true;\r\n            monthlyWin = getNumber(monthlyNumberStartPrev, monthlyNumberEndPrev, modulo);\r\n            emit Jackpot(monthlyWin, monthlyNumberEndPrev - monthlyNumberStartPrev + 1, monthlyPayAmount, 0x04);\r\n        }\r\n        if (seasonalProcessed == false) {\r\n            seasonalPayAmount = seasonalAmount;\r\n            seasonalAmount -= seasonalPayAmount;\r\n            seasonalProcessed = true;\r\n            seasonalWin = getNumber(seasonalNumberStartPrev, seasonalNumberEndPrev, modulo);\r\n            emit Jackpot(seasonalWin, seasonalNumberEndPrev - seasonalNumberStartPrev + 1, seasonalPayAmount, 0x08);\r\n        }\r\n        if (dailyPayAmount > 0)\r\n            tickets[dailyWin].transfer(dailyPayAmount);\r\n        if (weeklyPayAmount > 0)\r\n            tickets[weeklyWin].transfer(weeklyPayAmount);\r\n        if (monthlyPayAmount > 0)\r\n            tickets[monthlyWin].transfer(monthlyPayAmount);\r\n        if (seasonalPayAmount > 0)\r\n            tickets[seasonalWin].transfer(seasonalPayAmount);\r\n    }\r\n    \r\n    function settleSuperPrize(address payable winner) external onlyLoto {\r\n        uint256 superPrizeAmount = dailyAmount + weeklyAmount + monthlyAmount + seasonalAmount;\r\n        emit SuperPrize(superPrizeAmount, winner);\r\n        winner.transfer(superPrizeAmount);\r\n    }\r\n    \r\n    function loadTickets(address payable[] calldata addresses, uint256[] calldata numbers) external {\r\n        for (uint i = 0; i < addresses.length; i++)\r\n            tickets[numbers[i]] = addresses[i];\r\n    }\r\n    \r\n    function setOldVersion(\r\n        address payable oldAddress,\r\n        uint256 dailyNumberStartPrevIn,\r\n        uint256 weeklyNumberStartPrevIn,\r\n        uint256 monthlyNumberStartPrevIn,\r\n        uint256 seasonalNumberStartPrevIn,\r\n        uint256 dailyNumberStartIn,\r\n        uint256 weeklyNumberStartIn,\r\n        uint256 monthlyNumberStartIn,\r\n        uint256 seasonalNumberStartIn,\r\n        uint256 dailyNumberEndPrevIn,\r\n        uint256 weeklyNumberEndPrevIn, \r\n        uint256 monthlyNumberEndPrevIn,\r\n        uint256 seasonalNumberEndPrevIn\r\n    ) external onlyOwner {\r\n        previousContract = EthexJackpot(oldAddress);\r\n        firstNumber = 1;//previousContract.numberEnd;        \r\n        dailyStart = block.number / DAILY * DAILY;\r\n        dailyEnd = dailyStart + DAILY;\r\n        dailyProcessed = true;\r\n        weeklyStart = block.number / WEEKLY * WEEKLY;\r\n        weeklyEnd = weeklyStart + WEEKLY;\r\n        weeklyProcessed = true;\r\n        monthlyStart = block.number / MONTHLY * MONTHLY;\r\n        monthlyEnd = monthlyStart + MONTHLY;\r\n        monthlyProcessed = true;\r\n        seasonalStart = block.number / SEASONAL * SEASONAL;\r\n        seasonalEnd = seasonalStart + SEASONAL;\r\n        seasonalProcessed = true;\r\n        dailyNumberStartPrev = dailyNumberStartPrevIn;\r\n        weeklyNumberStartPrev = weeklyNumberStartPrevIn;\r\n        monthlyNumberStartPrev = monthlyNumberStartPrevIn;\r\n        seasonalNumberStartPrev = seasonalNumberStartPrevIn;\r\n        dailyNumberStart = dailyNumberStartIn;\r\n        weeklyNumberStart = weeklyNumberStartIn;\r\n        monthlyNumberStart = monthlyNumberStartIn;\r\n        seasonalNumberStart = seasonalNumberStartIn;\r\n        dailyNumberEndPrev = dailyNumberEndPrevIn;\r\n        weeklyNumberEndPrev = weeklyNumberEndPrevIn;\r\n        monthlyNumberEndPrev = monthlyNumberEndPrevIn;\r\n        seasonalNumberEndPrev = seasonalNumberEndPrevIn;\r\n        numberEnd = previousContract.numberEnd();\r\n        dailyAmount = previousContract.dailyAmount();\r\n        weeklyAmount = previousContract.weeklyAmount();\r\n        monthlyAmount = previousContract.monthlyAmount();\r\n        seasonalAmount = previousContract.seasonalAmount() + 19599522250000000000;\r\n    }\r\n    \r\n    function getAddress(uint256 number) public returns (address payable) {\r\n        if (number <= firstNumber)\r\n            return previousContract.getAddress(number);\r\n        return tickets[number];\r\n    }\r\n    \r\n    function setDaily() private {\r\n        dailyProcessed = dailyNumberEndPrev == numberEnd;\r\n        dailyStart = dailyEnd;\r\n        dailyEnd = dailyStart + DAILY;\r\n        dailyNumberStartPrev = dailyNumberStart;\r\n        dailyNumberEndPrev = numberEnd;\r\n    }\r\n    \r\n    function setWeekly() private {\r\n        weeklyProcessed = weeklyNumberEndPrev == numberEnd;\r\n        weeklyStart = weeklyEnd;\r\n        weeklyEnd = weeklyStart + WEEKLY;\r\n        weeklyNumberStartPrev = weeklyNumberStart;\r\n        weeklyNumberEndPrev = numberEnd;\r\n    }\r\n    \r\n    function setMonthly() private {\r\n        monthlyProcessed = monthlyNumberEndPrev == numberEnd;\r\n        monthlyStart = monthlyEnd;\r\n        monthlyEnd = monthlyStart + MONTHLY;\r\n        monthlyNumberStartPrev = monthlyNumberStart;\r\n        monthlyNumberEndPrev = numberEnd;\r\n    }\r\n    \r\n    function setSeasonal() private {\r\n        seasonalProcessed = seasonalNumberEndPrev == numberEnd;\r\n        seasonalStart = seasonalEnd;\r\n        seasonalEnd = seasonalStart + SEASONAL;\r\n        seasonalNumberStartPrev = seasonalNumberStart;\r\n        seasonalNumberEndPrev = numberEnd;\r\n    }\r\n    \r\n    function getNumber(uint256 startNumber, uint256 endNumber, uint48 modulo) pure private returns (uint256) {\r\n        return startNumber + modulo % (endNumber - startNumber + 1);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numberEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAddress\",\"type\":\"address\"},{\"name\":\"dailyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberStartPrevIn\",\"type\":\"uint256\"},{\"name\":\"dailyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberStartIn\",\"type\":\"uint256\"},{\"name\":\"dailyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"weeklyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"monthlyNumberEndPrevIn\",\"type\":\"uint256\"},{\"name\":\"seasonalNumberEndPrevIn\",\"type\":\"uint256\"}],\"name\":\"setOldVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newVersion\",\"type\":\"address\"}],\"name\":\"setNewVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"numbers\",\"type\":\"uint256[]\"}],\"name\":\"loadTickets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberStartPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lotoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyNumberEndPrev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleJackpot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyProcessed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"monthlyEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes16\"},{\"name\":\"gamer\",\"type\":\"address\"}],\"name\":\"registerTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weeklyAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"loto\",\"type\":\"address\"}],\"name\":\"setLoto\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newVersionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"settleSuperPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyNumberStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seasonalAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payIn\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpotType\",\"type\":\"bytes1\"}],\"name\":\"Jackpot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"Ticket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"SuperPrize\",\"type\":\"event\"}]","ContractName":"EthexJackpot","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d435eedf908bea369625dccbdb5e2bfa80f353c7fdb8a2e6e2e74edeffe3fb04"}]}