{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n*所發行數字牡丹（即BitPeony），其最終解釋權為Bitcaps.club所有，並保留所有修改權利。\r\n*本專項衍生之營運政策、交易模式等資訊，其最新修訂版本，詳見官網（http://www.bitcaps.club/）正式公告。官網擁有上述公告之最終解釋權，並保留所有修改權利。\r\n*/\r\n\r\n/**\r\n*Abstract contract for the full ERC 20 Token standard\r\n*https://github.com/ethereum/EIPs/issues/20\r\n*/\r\npragma solidity ^0.4.13;\r\n\r\n/**\r\n* @title ERC20Basic\r\n* @dev Simpler version of ERC20 interface\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n* @dev simple own functions\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n  * This contract only defines a modifier but does not use it\r\n  * it will be used in derived contracts.\r\n  * The function body is inserted where the special symbol\r\n  * \"_;\" in the definition of a modifier appears.\r\n  * This means that if the owner calls this function, the\r\n  * function is executed and otherwise, an exception is  thrown.\r\n  */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n  * @param newOwner The address to transfer ownership to.\r\n  */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\n/**\r\n* @title Basic token\r\n* @dev Basic version of ERC20 Standard\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract PeonyToken is Ownable, ERC20 {\r\n  using SafeMath for uint256;\r\n  string public version;\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public decimals;\r\n  address public peony;\r\n  mapping(address => mapping (address => uint256)) allowed;\r\n  mapping(address => uint256) balances;\r\n  uint256 public totalSupply;\r\n  uint256 public totalSupplyLimit;\r\n\r\n\r\n  /**\r\n  * @dev Basic version of ERC20 Standard\r\n  * @dev see https://github.com/ethereum/EIPs/issues/20\r\n  * This function is executed once in the initial stage.\r\n  */\r\n  function PeonyToken(\r\n    string _version,\r\n    uint256 initialSupply,\r\n    uint256 totalSupplyLimit_,\r\n    string tokenName,\r\n    uint8 decimalUnits,\r\n    string tokenSymbol\r\n    ) {\r\n    require(totalSupplyLimit_ == 0 || totalSupplyLimit_ >= initialSupply);\r\n    version = _version;\r\n    balances[msg.sender] = initialSupply;\r\n    totalSupply = initialSupply;\r\n    totalSupplyLimit = totalSupplyLimit_;\r\n    name = tokenName;\r\n    symbol = tokenSymbol;\r\n    decimals = decimalUnits;\r\n  }\r\n\r\n  /**\r\n  * This contract only defines a modifier but does not use it\r\n  * it will be used in derived contracts.\r\n  * The function body is inserted where the special symbol\r\n  * \"_;\" in the definition of a modifier appears.\r\n  * This means that if the owner calls this function, the\r\n  * function is executed and otherwise, an exception is  thrown.\r\n  */\r\n  modifier isPeonyContract() {\r\n    require(peony != 0x0);\r\n    require(msg.sender == peony);\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * This contract only defines a modifier but does not use it\r\n  * it will be used in derived contracts.\r\n  * The function body is inserted where the special symbol\r\n  * \"_;\" in the definition of a modifier appears.\r\n  * This means that if the owner calls this function, the\r\n  * function is executed and otherwise, an exception is  thrown.\r\n  */\r\n  modifier isOwnerOrPeonyContract() {\r\n    require(msg.sender != address(0) && (msg.sender == peony || msg.sender == owner));\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @notice produce `amount` of tokens to `_owner`\r\n  * @param amount The amount of tokens to produce\r\n  * @return Whether or not producing was successful\r\n  */\r\n  function produce(uint256 amount) isPeonyContract returns (bool) {\r\n    require(totalSupplyLimit == 0 || totalSupply.add(amount) <= totalSupplyLimit);\r\n\r\n    balances[owner] = balances[owner].add(amount);\r\n    totalSupply = totalSupply.add(amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @notice consume digital artwork tokens for changing physical artwork\r\n  * @param amount consume token amount\r\n  */\r\n  function consume(uint256 amount) isPeonyContract returns (bool) {\r\n    require(balances[owner].sub(amount) >= 0);\r\n    require(totalSupply.sub(amount) >= 0);\r\n    balances[owner] = balances[owner].sub(amount);\r\n    totalSupply = totalSupply.sub(amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @notice Set address of Peony contract.\r\n  * @param _address the address of Peony contract\r\n  */\r\n  function setPeonyAddress(address _address) onlyOwner returns (bool) {\r\n    require(_address != 0x0);\r\n\r\n    peony = _address;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * Implements ERC 20 Token standard:https://github.com/ethereum/EIPs/issues/20\r\n  * @notice send `_value` token to `_to`\r\n  * @param _to The address of the recipient\r\n  * @param _value The amount of token to be transferred\r\n  * @return Whether the transfer was successful or not\r\n  */\r\n  function transfer(address _to, uint256 _value) returns (bool) {\r\n    require(_to != address(0));\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n\r\n    Transfer(msg.sender, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Transfer tokens from one address to another\r\n  * @param _from address The address which you want to send tokens from\r\n  * @param _to address The address which you want to transfer to\r\n  * @param _value uint256 the amount of tokens to be transferred\r\n  */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    Transfer(_from, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n  * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n  * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n  * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n  * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n  * @param _spender The address which will spend the funds.\r\n  * @param _value The amount of tokens to be spent.\r\n  */\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n  * @param _owner address The address which owns the funds.\r\n  * @param _spender address The address which will spend the funds.\r\n  * @return A uint256 specifying the amount of tokens still available for the spender.\r\n  */\r\n  function allowance(address _owner, address _spender) public constant returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  /**\r\n  * @notice return total amount of tokens uint256 public totalSupply;\r\n  * @param _owner The address from which the balance will be retrieved\r\n  * @return The balance\r\n  */\r\n  function balanceOf(address _owner) constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n}\r\n\r\n/**\r\n*Math operations with safety checks\r\n*/\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"consume\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"produce\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setPeonyAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peony\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"totalSupplyLimit_\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PeonyToken","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000003e800000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000005312e302e300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008676473684b59554700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055054443132000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://f415d6a105d6fded08beeca3cd6686e94e47364992f33e0582007b076dbcaa51"}]}