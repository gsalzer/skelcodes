{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// Sample fixed supply token contract\r\n// Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\r\n// ----------------------------------------------------------------------------------------------\r\n\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\ncontract ERC20Interface {\r\n\r\n    uint256 public totalSupply;\r\n    // 获取其他地址的余额\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n\r\n    // 向其他地址发送token\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    // 从一个地址想另一个地址发送余额\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    //允许_spender从你的账户转出_value的余额，调用多次会覆盖可用量。某些DEX功能需要此功能\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n    // 返回_spender仍然允许从_owner退出的余额数量\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    // token转移完成后出发\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    // approve(address _spender, uint256 _value)调用后触发\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n//继承接口后的实例\r\ncontract PDAToken is ERC20Interface {\r\n\r\n    string public name = \"Parking Digital Alliance Token\";                   //名称，例如\"My test token\"\r\n    uint8 public decimals = 18;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.\r\n    string public symbol = \"PDAT\";               //token简称,like MTT\r\n    //发行量\r\n    uint private initAmount = 134000000;\r\n\r\n    // 智能合约的所有者\r\n    address public owner;\r\n\r\n    // 每个账户的余额\r\n    mapping(address => uint256) balances;\r\n\r\n    // 帐户的所有者批准将金额转入另一个帐户。从上面的说明我们可以得知allowed[被转移的账户][转移钱的账户]\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n\r\n\r\n    // 构造函数\r\n    constructor() public {\r\n\r\n        totalSupply = initAmount * 10 ** uint256(decimals);\r\n        // 设置初始总量\r\n        balances[msg.sender] = totalSupply;\r\n\r\n    }\r\n\r\n\r\n    // 特定账户的余额\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    // 转移余额到其他账户\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        //默认totalSupply 不会超过最大值 (2^256 - 1).\r\n        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常\r\n        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\r\n        require(_to != address (0x0));\r\n        balances[msg.sender] -= _value;\r\n        //从消息发送者账户中减去token数量_value\r\n        balances[_to] += _value;\r\n        //往接收账户增加token数量_value\r\n        emit Transfer(msg.sender, _to, _value);\r\n        //触发转币交易事件\r\n        return true;\r\n    }\r\n\r\n\r\n    //从一个账户转移到另一个账户，前提是需要有允许转移的余额\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns\r\n    (bool success) {\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;\r\n        //接收账户增加token数量_value\r\n        balances[_from] -= _value;\r\n        //支出账户_from减去token数量_value\r\n        allowed[_from][msg.sender] -= _value;\r\n        //消息发送者可以从账户_from中转出的数量减少_value\r\n        emit Transfer(_from, _to, _value);\r\n        //触发转币交易事件\r\n        return true;\r\n    }\r\n\r\n\r\n    //允许账户从当前用户转移余额到那个账户，多次调用会覆盖\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    //返回被允许转移的余额数量\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"PDAToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://61963dda3237ecfd4f5fd5bc4d05044cb87706e12a6733e3610e607bd5f0d16c"}]}