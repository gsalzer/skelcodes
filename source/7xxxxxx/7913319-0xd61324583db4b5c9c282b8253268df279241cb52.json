{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract MerkleIO {\r\n    address public owner = msg.sender;\r\n    mapping(bytes32 => uint256) public hashes; // hash => timestamp\r\n    \r\n    event Hashed(bytes32 indexed hash, uint256 timestamp); // logit\r\n    \r\n    function store(bytes32 hash) external { // store hash\r\n        assert(msg.sender == owner);\r\n    \r\n        hashes[hash] = block.timestamp;\r\n        \r\n        emit Hashed(hash, block.timestamp);\r\n    }\r\n    \r\n    function changeOwner(address ownerNew) external {\r\n        assert(msg.sender == owner);\r\n        \r\n        owner = ownerNew;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ownerNew\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Hashed\",\"type\":\"event\"}]","ContractName":"MerkleIO","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://448c0738d939491747d02a5f57f2dd29c4d21d04acf1a476db70558ec4d210ce"}]}