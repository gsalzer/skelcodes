{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.5;\r\n\r\ncontract IERC20 {\r\n    function transfer(address to, uint256 value) public returns (bool) {}\r\n}\r\n\r\ncontract Auction {\r\n\r\n  uint256 public REWARD_PER_WIN = 625000000;\r\n  uint256 public CREATOR_REWARD = 6250000;\r\n  address public CREATOR_ADDRESS;\r\n  address public GTT_ADDRESS;\r\n\r\n  address public currWinner;   // winner\r\n  uint256 public currHighest;  // highest bet\r\n  uint256 public lastHighest;  // last highest bet\r\n  uint256 public lastAuctionStart;\r\n\r\n  constructor() public {\r\n    CREATOR_ADDRESS = msg.sender;\r\n    lastAuctionStart = block.number;\r\n    currWinner = address(this);\r\n  }\r\n\r\n  // can only be called once\r\n  function setTokenAddress(address _gttAddress) public {\r\n    if (GTT_ADDRESS == address(0)) {\r\n      GTT_ADDRESS = _gttAddress;\r\n    }\r\n  }\r\n\r\n  function play() public payable {\r\n    uint256 currentBlock = block.number;\r\n\r\n    // pay out last block's winnings\r\n    if (lastAuctionStart < currentBlock - 50) {\r\n      payOut();\r\n\r\n      // reset state for new auction\r\n      lastAuctionStart = currentBlock;\r\n      currWinner = address(this);\r\n      lastHighest = currHighest;\r\n      currHighest = 0;\r\n    }\r\n\r\n    // log winning tx\r\n    if (msg.sender.balance > currHighest) {\r\n      currHighest = msg.sender.balance;\r\n      currWinner = msg.sender;\r\n    }\r\n  }\r\n\r\n  function payOut() internal {\r\n    IERC20(GTT_ADDRESS).transfer(currWinner, REWARD_PER_WIN);\r\n    IERC20(GTT_ADDRESS).transfer(CREATOR_ADDRESS, CREATOR_REWARD);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_gttAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATOR_REWARD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GTT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currHighest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REWARD_PER_WIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastAuctionStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastHighest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATOR_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Auction","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8a3f47f77b17f29fd250bf6bfd14319dc0d7393329c300328e5e587afcb41a9c"}]}