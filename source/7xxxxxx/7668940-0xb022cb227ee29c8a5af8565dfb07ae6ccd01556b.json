{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ERC20 is IERC20, SafeMath ,Ownable {\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint public startTime;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowed;\r\n\r\n    uint256 private _totalSupply;\r\n    \r\n    event UserAdedd(uint vestedAmount,uint vestingDuration,uint vestingPercentage,uint releasedAmount,string vesterType,uint tokenUsed,uint startTime,uint month);\r\n    \r\n    constructor() public {\r\n         \r\n         name = \"Hartanah Dcom Token\";\r\n         symbol = \"HADT\";\r\n         decimals = 10;\r\n         startTime = now;\r\n         _totalSupply = 10000000000000000000;\r\n         _balances[msg.sender] = _totalSupply;\r\n         \r\n     }\r\n    \r\n    struct User {\r\n        uint vestedAmount;\r\n        uint vestingDuration;\r\n        uint vestingPercentage;\r\n        uint releasedAmount;\r\n        string vesterType;\r\n        uint tokenUsed;\r\n        uint startTime;\r\n        uint vestingMonth;\r\n    }\r\n    \r\n    mapping(address => User) vestInfo;\r\n    mapping(string => address) addressMap;\r\n    \r\n    modifier checkReleasable(uint value) {\r\n        address sender = msg.sender;\r\n        \r\n        if(vestInfo[sender].vestedAmount == 0 || sender == owner()) {\r\n            _;\r\n        }\r\n        else{\r\n            if(keccak256(abi.encodePacked(vestInfo[sender].vesterType)) == keccak256(abi.encodePacked(\"Public Sales\"))) {\r\n                uint current = ((now - vestInfo[sender].startTime)/31536000)+1;\r\n                if(vestInfo[sender].vestingMonth < current && current <= vestInfo[sender].vestingDuration) {\r\n                        vestInfo[sender].releasedAmount = (vestInfo[sender].vestedAmount);\r\n                        vestInfo[sender].vestingMonth++;\r\n                }\r\n            }\r\n            else{\r\n                uint current = ((now - vestInfo[sender].startTime)/2592000)+1;\r\n                    if(vestInfo[sender].vestingMonth < current && current <= vestInfo[sender].vestingDuration) {\r\n                        vestInfo[sender].releasedAmount = (vestInfo[sender].vestedAmount/vestInfo[sender].vestingDuration) * current;\r\n                        vestInfo[sender].vestingMonth++;\r\n                    }\r\n            }\r\n            require((vestInfo[sender].releasedAmount - vestInfo[sender].tokenUsed) >= value);\r\n            _;\r\n        }\r\n        \r\n    } \r\n    \r\n    function addUser(address _account,uint _vestingDuration,uint _vestingPercentage,string memory _vesterType) public onlyOwner {\r\n      uint vestedAmount;\r\n      uint releasedAmount;\r\n      if(keccak256(abi.encodePacked(_vesterType)) == keccak256(abi.encodePacked(\"Public Sales\"))) {\r\n         vestedAmount = (_totalSupply * _vestingPercentage)/100;\r\n         releasedAmount = vestedAmount/3;\r\n      }else{\r\n         vestedAmount = (_totalSupply * _vestingPercentage)/100;\r\n         releasedAmount = vestedAmount/_vestingDuration;\r\n      }\r\n      addressMap[_vesterType] = _account;\r\n      vestInfo[_account] = User(vestedAmount,_vestingDuration,_vestingPercentage,releasedAmount,_vesterType,0,now,1);\r\n      _transfer(owner(),_account,vestedAmount);\r\n      emit UserAdedd(vestedAmount,_vestingDuration,_vestingPercentage,releasedAmount,_vesterType,0,now,1);\r\n    }\r\n  \r\n    function getReleasedAmount(address _account) public view returns(uint){\r\n        \r\n      uint release = vestInfo[_account].releasedAmount;\r\n      if(keccak256(abi.encodePacked(vestInfo[_account].vesterType)) == keccak256(abi.encodePacked(\"Public Sales\"))) {\r\n          uint current = ((now - vestInfo[_account].startTime)/31536000)+1;\r\n                if(vestInfo[_account].vestingMonth < current && current <= vestInfo[_account].vestingDuration) {\r\n                        release = (vestInfo[_account].vestedAmount);\r\n                }\r\n      }else {\r\n          uint time = ((now - vestInfo[_account].startTime)/2592000)+1;\r\n                if((vestInfo[_account].vestingMonth < time) && (time <= vestInfo[_account].vestingDuration)) {\r\n                       release = (vestInfo[_account].vestedAmount/vestInfo[_account].vestingDuration) * time;\r\n                }\r\n       }\r\n        return(release);\r\n    }\r\n  \r\n    function FoundersVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Founders\"];\r\n      return vestInfo[account].vestedAmount;\r\n    } \r\n    \r\n    function ManagementVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Management\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function TechnologistVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Technologist\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function LegalAndFinanceVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Legal & Finance\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function MarketingVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Marketing\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function PublicSalesVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Public Sales\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function AirdropVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Airdrop\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function PromotionVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Promotion\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n    \r\n    function RewardsVestedAmount() public view returns(uint){\r\n      address account = addressMap[\"Rewards\"];\r\n      return vestInfo[account].vestedAmount;\r\n    }\r\n\r\n    function FoundersReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Founders\"];\r\n      return getReleasedAmount(account);\r\n    } \r\n    \r\n    function ManagementReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Management\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function TechnologistReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Technologist\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function LegalAndFinanceReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Legal & Finance\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function MarketingReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Marketing\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function PublicSalesReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Public Sales\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function AirdropReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Airdrop\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function PromotionReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Promotion\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function RewardsReleasedAmount() public view returns(uint){\r\n      address account = addressMap[\"Rewards\"];\r\n      return getReleasedAmount(account);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        return _balances[owner];\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public checkReleasable(value) returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        _transfer(from, to, value);\r\n        _approve(from, msg.sender, sub(_allowed[from][msg.sender],value));\r\n        return true;\r\n    }\r\n     \r\n    function _transfer(address from, address to, uint256 value) internal  {\r\n        require(to != address(0));\r\n\r\n        _balances[from] = sub(_balances[from],value);\r\n        _balances[to] = add(_balances[to],value);\r\n        vestInfo[from].tokenUsed = vestInfo[from].tokenUsed + value;\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        require(spender != address(0));\r\n        require(owner != address(0));\r\n\r\n        _allowed[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PublicSalesVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AirdropVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LegalAndFinanceReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PublicSalesReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TechnologistReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FoundersReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TechnologistVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MarketingReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MarketingVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_vestingDuration\",\"type\":\"uint256\"},{\"name\":\"_vestingPercentage\",\"type\":\"uint256\"},{\"name\":\"_vesterType\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ManagementVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ManagementReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LegalAndFinanceVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PromotionReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardsVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AirdropReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FoundersVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardsReleasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PromotionVestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"vestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"vestingPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"vesterType\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"tokenUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"month\",\"type\":\"uint256\"}],\"name\":\"UserAdedd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ERC20","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://37303cca3d6f6962383ffaf19397fe723d236c17fc09d78bd6552c3e4e4423e8"}]}