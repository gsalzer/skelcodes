{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\ncontract Token {\r\n    bytes32 public standard;\r\n    bytes32 public name;\r\n    bytes32 public symbol;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n    bool public allowTransactions;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract task\r\n {\r\n    address public adminaddr; \r\n    address public useraddr; \r\n    address public owner;\r\n    mapping (address => mapping(address => uint256)) public dep_token;\r\n    mapping (address => uint256) public dep_ETH;\r\n\r\n    function task() public\r\n    {\r\n         adminaddr = msg.sender; \r\n    }\r\n    \r\n        modifier onlyOwner() {\r\n       // require(msg.sender == owner, \"Must be owner\");\r\n        _;\r\n    }\r\n    \r\n    function safeAdd(uint crtbal, uint depbal) public  returns (uint) \r\n    {\r\n        uint totalbal = crtbal + depbal;\r\n        return totalbal;\r\n    }\r\n    \r\n    function safeSub(uint crtbal, uint depbal) public  returns (uint) \r\n    {\r\n        uint totalbal = crtbal - depbal;\r\n        return totalbal;\r\n    }\r\n        \r\n    function balanceOf(address token,address user) public  returns(uint256)            // show bal of perticular token in user add\r\n    {\r\n        return Token(token).balanceOf(user);\r\n    }\r\n\r\n    \r\n    \r\n    function transfer(address token, uint256 tokens)public payable                         // deposit perticular token balance to contract address (site address), can depoit multiple token   \r\n    {\r\n       // Token(token).approve.value(msg.sender)(address(this),tokens);\r\n        if(Token(token).approve(address(this),tokens))\r\n        {\r\n            dep_token[msg.sender][token] = safeAdd(dep_token[msg.sender][token], tokens);\r\n            Token(token).transferFrom(msg.sender,address(this), tokens);\r\n        }\r\n    }\r\n    \r\n    function token_withdraw(address token, address to, uint256 tokens)public payable                    // withdraw perticular token balance from contract to user    \r\n    {\r\n        if(adminaddr==msg.sender)\r\n        {  \r\n            dep_token[msg.sender][token] = safeSub(dep_token[msg.sender][token] , tokens) ;   \r\n            Token(token).transfer(to, tokens);\r\n        }\r\n    }\r\n    \r\n     function admin_token_withdraw(address token, address to, uint256 tokens)public payable  // withdraw perticular token balance from contract to user    \r\n    {\r\n        if(adminaddr==msg.sender)\r\n        {                                                              // here only admin can withdraw token                    \r\n            if(dep_token[msg.sender][token]>=tokens) \r\n            {\r\n                dep_token[msg.sender][token] = safeSub(dep_token[msg.sender][token] , tokens) ;   \r\n                Token(token).transfer(to, tokens);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function tok_bal_contract(address token) public view returns(uint256)                       // show balance of contract address\r\n    {\r\n        return Token(token).balanceOf(address(this));\r\n    }\r\n    \r\n \r\n    function depositETH() payable external                                                      // this function deposit eth in contract address\r\n    { \r\n        \r\n    }\r\n    \r\n    function withdrawETH(address  to, uint256 value) public payable returns (bool)                            // this will withdraw eth from contract  to address(to)\r\n    {\r\n             to.transfer(value);\r\n             return true;\r\n    }\r\n \r\n    function admin_withdrawETH(address  to, uint256 value) public payable returns (bool)  // this will withdraw eth from contract  to address(to)\r\n    {\r\n        \r\n        if(adminaddr==msg.sender)\r\n        {                                                               // only admin can withdraw ETH from user\r\n                 to.transfer(value);\r\n                 return true;\r\n    \r\n         }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tok_bal_contract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"admin_token_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"token_withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"useraddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dep_ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"admin_withdrawETH\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"crtbal\",\"type\":\"uint256\"},{\"name\":\"depbal\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"task","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://914c3f5ba6750ae080231d55efe3988fca9f0b5e3a9f568ff1fcb17badccc841"}]}