{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ninterface token {\r\nfunction transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract TXMsale{\r\naddress public beneficiary;\r\nuint public fundingGoal;\r\nuint public amountRaised;\r\nuint public deadline;\r\nuint public priceT1;\r\nuint public priceT2;\r\nuint public priceT3;\r\nuint public priceT4;\r\nuint public startDate;\r\ntoken public tokenReward;\r\nmapping(address => uint256) public balanceOf;\r\nbool fundingGoalReached = false;\r\nbool crowdsaleClosed = false;\r\n\r\nevent GoalReached(address recipient, uint totalAmountRaised);\r\nevent FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n/**\r\n* Constructor function\r\n*\r\n* Setup the owner\r\n*/\r\nconstructor() public {\r\naddress ifSuccessfulSendTo = 0xb2769a802438C39f01C700D718Aea13754C7D378;\r\nuint fundingGoalInEthers = 1544;\r\nuint durationInMinutes = 220320;\r\nuint weiCostOfEachToken = 308000000000000;\r\naddress addressOfTokenUsedAsReward = 0x7199dd4615c4e1e7b9b07ac07740bdbce3df6c88;\r\n\r\nbeneficiary = ifSuccessfulSendTo;\r\nfundingGoal = fundingGoalInEthers * 1 ether;\r\ndeadline = now + durationInMinutes * 1 minutes;\r\npriceT1 = weiCostOfEachToken;\r\npriceT2 = weiCostOfEachToken + 38500000000000;\r\npriceT3 = weiCostOfEachToken + 77000000000000;\r\ntokenReward = token(addressOfTokenUsedAsReward);\r\n\r\nstartDate = now;\r\n}\r\n\r\n\r\n/**\r\n* Fallback function\r\n*\r\n* The function without name is the default function that is called whenever anyone sends funds to a contract\r\n*/\r\nfunction () payable public {\r\nrequire(!crowdsaleClosed);\r\nuint amount = msg.value;\r\nbalanceOf[msg.sender] += amount;\r\namountRaised += amount;\r\n\r\nuint price = priceT1;\r\nif (startDate + 30 days <= now)\r\nprice = priceT2;\r\nelse if (startDate + 37 days <= now)\r\nprice = priceT3;\r\n\r\ntokenReward.transfer(msg.sender, amount / price * 1 ether);\r\nemit FundTransfer(msg.sender, amount, true);\r\n\r\n}\r\n\r\nmodifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n/**\r\n* Check if goal was reached\r\n*\r\n* Checks if the goal or time limit has been reached and ends the campaign\r\n*/\r\nfunction checkGoalReached() public afterDeadline {\r\nif (amountRaised >= fundingGoal){\r\nfundingGoalReached = true;\r\nemit GoalReached(beneficiary, amountRaised);\r\n}\r\ncrowdsaleClosed = true;\r\n}\r\n\r\n\r\n/**\r\n* Withdraw the funds\r\n*\r\n* Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n* sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n* the amount they contributed.\r\n*/\r\nfunction safeWithdrawal() public afterDeadline {\r\nif (!fundingGoalReached) {\r\nuint amount = balanceOf[msg.sender];\r\nbalanceOf[msg.sender] = 0;\r\nif (amount > 0) {\r\nif (msg.sender.send(amount)) {\r\nemit FundTransfer(msg.sender, amount, false);\r\n} else {\r\nbalanceOf[msg.sender] = amount;\r\n}\r\n}\r\n}\r\n\r\nif (fundingGoalReached && beneficiary == msg.sender) {\r\nif (beneficiary.send(amountRaised)) {\r\nemit FundTransfer(beneficiary, amountRaised, false);\r\n} else {\r\n//If we fail to send the funds to beneficiary, unlock funders balance\r\nfundingGoalReached = false;\r\n}\r\n}\r\n}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceT2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceT1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceT4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceT3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"TXMsale","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fe754007fe6f73ae2eb16e6d0652dc84623819fec7590a8adc27791d1eb22504"}]}