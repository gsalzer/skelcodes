{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity =0.5.1;\r\n\r\ncontract Pmes {\r\n\r\n    address public owner;\r\n    uint256 public nextCid = 1;\r\n\r\n    struct Content {\r\n        string cus;\r\n        string description;\r\n        address owner;\r\n        uint256 readPrice;\r\n        uint256 writePrice;\r\n    }\r\n    mapping(uint256 => string[]) public reviews;\r\n    enum OfferStatus {Cancelled, Rejected, Opened, Accepted}\r\n    struct Offer {\r\n        uint256 id;\r\n        string buyerAccessString;\r\n        string sellerPublicKey;\r\n        string sellerAccessString;\r\n        OfferStatus status;\r\n        uint256 cid;\r\n        address buyerId;\r\n        uint256 offerType;\r\n        uint256 price;\r\n    }\r\n\r\n    mapping(uint256 => Content) public contents;\r\n    mapping(string => uint256)  CusToCid;\r\n    function getCid(string memory cus) public view returns (uint256) {\r\n        return CusToCid[cus];\r\n    }\r\n\r\n    uint256 public nextOfferId = 1;\r\n    mapping(uint256 => Offer) public offers;\r\n    mapping(uint256 => mapping(address => uint256)) public CidBuyerIdToOfferId;\r\n\r\n    mapping(uint256 => uint256[]) public CidToOfferIds;\r\n    mapping(address => uint256[]) public BuyerIdToOfferIds;\r\n\r\n    // Access level mapping [address]\r\n    // 0 - access denied\r\n    // 1 - can edit existing content\r\n    // 2 - can add content\r\n    // 3 - can saleAccess\r\n    // 4 - can changeOwner\r\n    // 5 - can setAccessLevel\r\n    mapping(address => uint256) public publishersMap;\r\n\r\n    event postContent(uint256); // makeCid\r\n    event postOffer(uint256, uint256, uint256, address); // makeOffer\r\n    event acceptOffer(uint256); // sellContent, changeOwner\r\n    event postReview(); // newReview\r\n\r\n    constructor() public\r\n    {\r\n        // to prevent repeated calls\r\n        require (owner == address(0x0));\r\n        // set owner address\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setAccessLevel(\r\n        address publisherAddress,\r\n        uint256 accessLevel\r\n    )\r\n        public\r\n        minAccessLevel(5)\r\n    {\r\n        publishersMap[publisherAddress] = accessLevel;\r\n    }\r\n\r\n    function makeCid(\r\n        string memory cus,\r\n        address ownerId,\r\n        string memory description,\r\n        uint256 readPrice,\r\n        uint256 writePrice\r\n    )\r\n        public\r\n        minAccessLevel(2)\r\n        returns (uint256)\r\n    {\r\n        // To prevent create already exist\r\n        uint256 cid = CusToCid[cus];\r\n        require(cid == 0, \"Content already uploaded\");\r\n\r\n        cid = nextCid++;\r\n        CusToCid[cus] = cid;\r\n\r\n        contents[cid] = Content(cus, description, ownerId, readPrice, writePrice);\r\n        emit postContent(cid);\r\n\r\n        return cid;\r\n    }\r\n\r\n    function setReadPrice(uint256 cid, uint256 price) public minAccessLevel(1) {\r\n        require(cid > 0 && cid < nextCid);\r\n        contents[cid].readPrice = price;\r\n    }\r\n\r\n    function setWritePrice(uint256 cid, uint256 price) public minAccessLevel(1) {\r\n        require(cid > 0 && cid < nextCid);\r\n        contents[cid].writePrice = price;\r\n    }\r\n\r\n    function addReview(uint256 cid, address buyerId, string memory review) public minAccessLevel(1) {\r\n        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];\r\n        require(offerId != 0);\r\n        require(offers[offerId].status == OfferStatus.Accepted);\r\n\r\n        reviews[cid].push(review);\r\n        emit postReview();\r\n    }\r\n\r\n    function setDescription(uint256 cid, string memory description) public minAccessLevel(1) {\r\n        require(cid > 0 && cid < nextCid);\r\n        contents[cid].description = description;\r\n    }\r\n\r\n    function changeOwner(\r\n        uint256 cid,\r\n        address buyerId,\r\n        string memory sellerPublicKey,\r\n        string memory sellerAccessString\r\n    )\r\n        public\r\n        minAccessLevel(4)\r\n    {\r\n        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];\r\n        require(offers[offerId].status == OfferStatus.Opened);\r\n        contents[cid].owner = buyerId;\r\n        offers[offerId].sellerAccessString = sellerAccessString;\r\n        offers[offerId].sellerPublicKey = sellerPublicKey;\r\n        offers[offerId].status = OfferStatus.Accepted;\r\n        emit acceptOffer(cid);\r\n    }\r\n\r\n    function sellContent(\r\n        uint256 cid,\r\n        address buyerId,\r\n        string memory sellerPublicKey,\r\n        string memory sellerAccessString\r\n    )\r\n        public\r\n        minAccessLevel(3)\r\n    {\r\n        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];\r\n        require(offers[offerId].status == OfferStatus.Opened);\r\n        offers[offerId].sellerAccessString = sellerAccessString;\r\n        offers[offerId].sellerPublicKey = sellerPublicKey;\r\n        offers[offerId].status = OfferStatus.Accepted;\r\n        emit acceptOffer(cid);\r\n    }\r\n\r\n    function makeOffer(\r\n        uint256 cid,\r\n        address buyerId,\r\n        uint256 offerType,\r\n        uint256 price,\r\n        string memory buyerAccessString\r\n    )\r\n        public\r\n        minAccessLevel(2)\r\n    {\r\n        require(cid > 0 && cid < nextCid, \"Wrong cid\");\r\n        // require(CidBuyerIdToOfferId[cid][buyerId] == 0, \"\");\r\n        require(\r\n            offers[CidBuyerIdToOfferId[cid][buyerId]].status != OfferStatus.Accepted &&\r\n            offers[CidBuyerIdToOfferId[cid][buyerId]].status != OfferStatus.Opened,\r\n            \"Offer already exist\"\r\n        );\r\n\r\n        offers[nextOfferId] = Offer(\r\n            offers[CidBuyerIdToOfferId[cid][buyerId]].id + 1,\r\n            buyerAccessString, \r\n            \"none\", \r\n            \"none\", \r\n            OfferStatus.Opened, \r\n            cid, \r\n            buyerId, \r\n            offerType, \r\n            price\r\n        );\r\n\r\n        CidBuyerIdToOfferId[cid][buyerId] = nextOfferId;\r\n\r\n        CidToOfferIds[cid].push(nextOfferId);\r\n        BuyerIdToOfferIds[buyerId].push(nextOfferId);\r\n\r\n        emit postOffer(cid, offerType, price, buyerId);\r\n        \r\n        nextOfferId++;\r\n    }\r\n\r\n    function cancelOffer(uint256 cid, address buyerId) public minAccessLevel(2) {\r\n        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];\r\n        require(offers[offerId].status == OfferStatus.Opened);\r\n        offers[offerId].status = OfferStatus.Cancelled;\r\n    }\r\n\r\n    function rejectOffer(uint256 cid, address buyerId) public minAccessLevel(2) {\r\n        uint256 offerId = CidBuyerIdToOfferId[cid][buyerId];\r\n        require(offers[offerId].status == OfferStatus.Opened);\r\n        offers[offerId].status = OfferStatus.Rejected;\r\n    }\r\n\r\n    modifier minAccessLevel(uint256 level) {\r\n        if(msg.sender != owner) {\r\n            require(publishersMap[msg.sender] >= level);\r\n        }\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"setDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cus\",\"type\":\"string\"}],\"name\":\"getCid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"publisherAddress\",\"type\":\"address\"},{\"name\":\"accessLevel\",\"type\":\"uint256\"}],\"name\":\"setAccessLevel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"publishersMap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"CidBuyerIdToOfferId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"},{\"name\":\"review\",\"type\":\"string\"}],\"name\":\"addReview\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CidToOfferIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextOfferId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"},{\"name\":\"offerType\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"buyerAccessString\",\"type\":\"string\"}],\"name\":\"makeOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"},{\"name\":\"sellerPublicKey\",\"type\":\"string\"},{\"name\":\"sellerAccessString\",\"type\":\"string\"}],\"name\":\"sellContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"buyerAccessString\",\"type\":\"string\"},{\"name\":\"sellerPublicKey\",\"type\":\"string\"},{\"name\":\"sellerAccessString\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"},{\"name\":\"offerType\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cus\",\"type\":\"string\"},{\"name\":\"ownerId\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"readPrice\",\"type\":\"uint256\"},{\"name\":\"writePrice\",\"type\":\"uint256\"}],\"name\":\"makeCid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setReadPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"BuyerIdToOfferIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reviews\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contents\",\"outputs\":[{\"name\":\"cus\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"readPrice\",\"type\":\"uint256\"},{\"name\":\"writePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"},{\"name\":\"sellerPublicKey\",\"type\":\"string\"},{\"name\":\"sellerAccessString\",\"type\":\"string\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setWritePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextCid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cid\",\"type\":\"uint256\"},{\"name\":\"buyerId\",\"type\":\"address\"}],\"name\":\"rejectOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postContent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"postOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"postReview\",\"type\":\"event\"}]","ContractName":"Pmes","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b3897dc559a397e70ba82856d616c94af8f1ab7bde81446440f51eff4bab7b8a"}]}