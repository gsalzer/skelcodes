{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\npragma experimental \"v0.5.0\";\r\n/******************************************************************************\\\r\n* Author: Nick Mudge, nick@mokens.io\r\n* Mokens\r\n* Copyright (c) 2018\r\n*\r\n* Permissions using bits from a uint256\r\n/******************************************************************************/\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//Storage contracts\r\n////////////\r\n//Some delegate contracts are listed with storage contracts they inherit.\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//Mokens\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage0 {\r\n    // funcId => delegate contract\r\n    mapping(bytes4 => address) internal delegates;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenUpdates\r\n//MokenOwner\r\n//QueryMokenDelegates\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage1 is Storage0 {\r\n    address internal contractOwner;\r\n    bytes[] internal funcSignatures;\r\n    // signature => index+1\r\n    mapping(bytes => uint256) internal funcSignatureToIndex;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokensSupportsInterfaces\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage2 is Storage1 {\r\n    mapping(bytes4 => bool) internal supportedInterfaces;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenRootOwnerOf\r\n//MokenERC721Metadata\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage3 is Storage2 {\r\n    struct Moken {\r\n        string name;\r\n        uint256 data;\r\n        uint256 parentTokenId;\r\n    }\r\n    //tokenId => moken\r\n    mapping(uint256 => Moken) internal mokens;\r\n    uint256 internal mokensLength;\r\n    // child address => child tokenId => tokenId+1\r\n    mapping(address => mapping(uint256 => uint256)) internal childTokenOwner;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC721Enumerable\r\n//MokenLinkHash\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage4 is Storage3 {\r\n    // root token owner address => (tokenId => approved address)\r\n    mapping(address => mapping(uint256 => address)) internal rootOwnerAndTokenIdToApprovedAddress;\r\n    // token owner => (operator address => bool)\r\n    mapping(address => mapping(address => bool)) internal tokenOwnerToOperators;\r\n    // Mapping from owner to list of owned token IDs\r\n    mapping(address => uint32[]) internal ownedTokens;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC998ERC721TopDown\r\n//MokenERC998ERC721TopDownBatch\r\n//MokenERC721\r\n//MokenERC721Batch\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage5 is Storage4 {\r\n    // tokenId => (child address => array of child tokens)\r\n    mapping(uint256 => mapping(address => uint256[])) internal childTokens;\r\n    // tokenId => (child address => (child token => child index)\r\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256))) internal childTokenIndex;\r\n    // tokenId => (child address => contract index)\r\n    mapping(uint256 => mapping(address => uint256)) internal childContractIndex;\r\n    // tokenId => child contract\r\n    mapping(uint256 => address[]) internal childContracts;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC998ERC20TopDown\r\n//MokenStateChange\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage6 is Storage5 {\r\n    // tokenId => token contract\r\n    mapping(uint256 => address[]) internal erc20Contracts;\r\n    // tokenId => (token contract => token contract index)\r\n    mapping(uint256 => mapping(address => uint256)) erc20ContractIndex;\r\n    // tokenId => (token contract => balance)\r\n    mapping(uint256 => mapping(address => uint256)) internal erc20Balances;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenERC998ERC721BottomUp\r\n//MokenERC998ERC721BottomUpBatch\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage7 is Storage6 {\r\n    // parent address => (parent tokenId => array of child tokenIds)\r\n    mapping(address => mapping(uint256 => uint32[])) internal parentToChildTokenIds;\r\n    // tokenId => position in childTokens array\r\n    mapping(uint256 => uint256) internal tokenIdToChildTokenIdsIndex;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n//MokenMinting\r\n//MokenMintContractManagement\r\n//MokenEras\r\n//QueryMokenData\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage8 is Storage7 {\r\n    // index => category\r\n    mapping(uint256 => bytes32) internal categories;\r\n    uint256 internal categoryLength;\r\n    // category => index+1\r\n    mapping(bytes32 => uint256) internal categoryIndex;\r\n    uint256 internal mintPriceOffset; // = 0 szabo;\r\n    uint256 internal mintStepPrice; // = 500 szabo;\r\n    uint256 internal mintPriceBuffer; // = 5000 szabo;\r\n    address[] internal permissionsList;\r\n    // Order is from right to left\r\n    // 0 bit is permission to give permission\r\n    // 1 bit is permission to mint\r\n    mapping(address => uint256) internal permissions;\r\n    //moken name => tokenId+1\r\n    mapping(string => uint256) internal tokenByName_;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// MokenCredit\r\n///////////////////////////////////////////////////////////////////////////////////\r\ncontract Storage9 is Storage8 {\r\n    // molder => wei\r\n    mapping(address => uint256) internal credit;\r\n\r\n    // categoryIndex >> mint price\r\n    mapping(uint256 => uint256) internal categoryMintPrice;\r\n}\r\n\r\ncontract MokenPermissions is Storage9 {\r\n\r\n    function addPermission(address _address, uint256 _position) external {\r\n        if(msg.sender != contractOwner) {\r\n            require(permissions[msg.sender] & 1 == 1, \"Not contract owner and does not have permission.\");\r\n        }\r\n        require(_position < 256, \"_position greater than 255\");\r\n        uint256 addressPermissions = permissions[_address];\r\n        permissions[_address] = addressPermissions | (1 << _position);\r\n        if(addressPermissions == 0) {\r\n            permissionsList.push(_address);\r\n        }\r\n    }\r\n\r\n    function setPermissions(address _address, uint256 _newPermissions) external {\r\n        if(msg.sender != contractOwner) {\r\n            require(permissions[msg.sender] & 1 == 1, \"Not contract owner and does not have permission.\");\r\n        }\r\n        uint256 oldPermissions = permissions[_address];\r\n        permissions[_address] = _newPermissions;\r\n        if(oldPermissions == 0) {\r\n            if(_newPermissions > 0) {\r\n                permissionsList.push(_address);\r\n            }\r\n        }\r\n        else if(_newPermissions == 0) {\r\n            removeAddressIfNoPermissions(_address);\r\n        }\r\n    }\r\n\r\n    function getPermissions(address _address) external view returns (uint256){\r\n        return permissions[_address];\r\n    }\r\n\r\n    function getPermissionAddresses() external view returns (address[]) {\r\n        return permissionsList;\r\n    }\r\n\r\n    function removePermission(address _address, uint256 _position) external {\r\n        if(msg.sender != contractOwner) {\r\n            require(permissions[msg.sender] & 1 == 1, \"Not contract owner and does not have permission.\");\r\n        }\r\n        require(_position < 256, \"_position greater than 255\");\r\n        uint256 addressPermissions = permissions[_address];\r\n        if(addressPermissions == 0) {\r\n            return;\r\n        }\r\n        addressPermissions = addressPermissions & ~(1 << _position);\r\n        permissions[_address] = addressPermissions;\r\n        if(addressPermissions == 0) {\r\n            removeAddressIfNoPermissions(_address);\r\n        }\r\n    }\r\n\r\n    function removeAddressIfNoPermissions(address _address) internal {\r\n        uint256 length = permissionsList.length;\r\n        for(uint256 i; i < length; i++) {\r\n            if(permissionsList[i] == _address) {\r\n                permissionsList[i] = permissionsList[length-1];\r\n                permissionsList.length--;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPermissions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"addPermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPermissionAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_newPermissions\",\"type\":\"uint256\"}],\"name\":\"setPermissions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"removePermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MokenPermissions","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"999","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://80344659c9ed24db88c4f6f41b22c5bcd46c7c42e86e3b0776c6bc92e6b22ef2"}]}