{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface IPrizeCalculator {\r\n    function calculatePrizeAmount(uint _predictionTotalTokens, uint _winOutputTotalTokens, uint _forecastTokens)\r\n        pure\r\n        external\r\n        returns (uint);\r\n}\r\n\r\ncontract PrizeCalculator is IPrizeCalculator {\r\n    using SafeMath for uint;\r\n     \r\n    function calculatePrizeAmount(uint _distributeTotalTokens, uint _collectedTotalTokens, uint _contributionTokens)        \r\n        public\r\n        pure\r\n        returns (uint)\r\n    {\r\n        require (_distributeTotalTokens > 0, \"Not valid 1 param\");\r\n        require (_collectedTotalTokens > 0, \"Not valid 2 param\");\r\n        require (_contributionTokens > 0, \"Not valid  3 param\");\r\n        \r\n        uint returnValue = 0;\r\n        \r\n        returnValue = _contributionTokens.mul(_distributeTotalTokens).div(_collectedTotalTokens);\r\n        \r\n        return returnValue;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_distributeTotalTokens\",\"type\":\"uint256\"},{\"name\":\"_collectedTotalTokens\",\"type\":\"uint256\"},{\"name\":\"_contributionTokens\",\"type\":\"uint256\"}],\"name\":\"calculatePrizeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"PrizeCalculator","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5927a5fa156a797409958d98f36b316f342efb84acfca977447a7da3fe2ccc41"}]}