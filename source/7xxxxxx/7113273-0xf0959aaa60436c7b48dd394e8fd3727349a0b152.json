{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract ERC20 {\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\n\r\ncontract RocketsICO is owned {\r\n    using SafeMath for uint;\r\n    bool public ICOOpening = true;\r\n    uint256 public USD;\r\n    uint256 public ICORate = 1;\r\n    uint256 public ICOBonus = 0;\r\n    address public ROK = 0xca2660F10ec310DF91f3597574634A7E51d717FC;\r\n\r\n    function updateUSD(uint256 usd) onlyOwner public {\r\n        USD = usd;\r\n    }\r\n\r\n    function updateRate(uint256 rate, uint256 bonus) onlyOwner public {\r\n        ICORate = rate;\r\n        ICOBonus = bonus;\r\n    }\r\n\r\n    function updateOpen(bool opening) onlyOwner public{\r\n        ICOOpening = opening;\r\n    }\r\n\r\n    constructor() public {\r\n    }\r\n\r\n    function() public payable {\r\n        buy();\r\n    }\r\n\r\n    function getAmountToBuy(uint256 ethAmount) public view returns (uint256){\r\n        uint256 tokensToBuy;\r\n        tokensToBuy = ethAmount.mul(USD).mul(ICORate);\r\n        if(ICOBonus > 0){\r\n            uint256 bonusAmount;\r\n            bonusAmount = tokensToBuy.div(100).mul(ICOBonus);\r\n            tokensToBuy = tokensToBuy.add(bonusAmount);\r\n        }\r\n        return tokensToBuy;\r\n    }\r\n\r\n    function buy() public payable {\r\n        require(ICOOpening == true);\r\n        uint256 tokensToBuy;\r\n        uint256 ethAmount = msg.value;\r\n        tokensToBuy = ethAmount.mul(USD).mul(ICORate);\r\n        if(ICOBonus > 0){\r\n            uint256 bonusAmount;\r\n            bonusAmount = tokensToBuy.div(100).mul(ICOBonus);\r\n            tokensToBuy = tokensToBuy.add(bonusAmount);\r\n        }\r\n        ERC20(ROK).transfer(msg.sender, tokensToBuy);\r\n    }\r\n\r\n    function withdrawROK(uint256 amount, address sendTo) onlyOwner public {\r\n        ERC20(ROK).transfer(sendTo, amount);\r\n    }\r\n\r\n    function withdrawEther(uint256 amount, address sendTo) onlyOwner public {\r\n        address(sendTo).transfer(amount);\r\n    }\r\n\r\n    function withdrawToken(ERC20 token, uint256 amount, address sendTo) onlyOwner public {\r\n        require(token.transfer(sendTo, amount));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"usd\",\"type\":\"uint256\"}],\"name\":\"updateUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOOpening\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"opening\",\"type\":\"bool\"}],\"name\":\"updateOpen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawROK\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICORate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getAmountToBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROK\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"RocketsICO","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3cdb452cb43d25e2915bc466fb7f51e84c5b128041291b15d4555fcae3e4c6d8"}]}