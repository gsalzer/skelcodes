{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ncontract WhoWillDieFirstInGoTs8 {\r\n    \r\n    uint8 public constant Withdraw = 0;\r\n    uint8 public constant firstHero = 1;\r\n    uint8 public constant lastHero = 38;\r\n    uint8 public constant ArraySize = lastHero + 1;\r\n/*\r\nEuronGreyjoy = 1;\r\nCerseiLannister = 2;\r\nLordVarys = 3;\r\nJorahMormont = 4;\r\nBericDondarrion = 5;\r\nMelisandre = 6;\r\nJaimeLannister = 7;\r\nTheHound = 8;\r\nDaenerysTargaryen = 9;\r\nGreyWorm = 10;\r\nTheonGreyjoy = 11;\r\nTyrionLannister = 12;\r\nPodrickPayne = 14;\r\nBrienneOfTarth = 15;\r\nBronnOfTheBlackwater = 16;\r\nAryaStark = 17;\r\nJonSnow = 18;\r\nGendry = 19;\r\nBranStark = 20;\r\nGilly = 21;\r\nSamwellTarly = 22;\r\nSansaStark = 13;\r\nYaraGreyjoy = 23;\r\nDrogon = 24;\r\nEddisonTollett = 25;\r\nEdmureTully = 26;\r\nGregorClegane = 27;\r\nHotPie = 28;\r\nLyannaMormont = 29;\r\nRhaegal = 30;\r\nRobinArryn = 31;\r\nDavosSeaworth = 32;\r\nYohnRoyce = 33;\r\nMissandei = 34;\r\nTheNightKing = 35;\r\nTormundGiantsbane = 36;\r\nDaarioNaharis = 37;\r\nJaqunHâ€™ghar = 38;\r\n*/\r\n    mapping(address => bool) sith;\r\n    mapping(address => uint256[ArraySize]) public bets;\r\n    uint256[ArraySize] public betAmount;\r\n    uint256[ArraySize] public playerCount;\r\n    uint256 public resultWin = 0;\r\n    uint256 public winRatio;\r\n    uint256 constant minBet = 0.001 ether;\r\n    uint256 constant RR = 100000000000000;\r\n    uint256 sithCount;\r\n    uint256 public likeDAPP;\r\n    bool public endBetting = false;\r\n    bool public startPayment = false;\r\n    bool public onPause = false;\r\n    address payable Martin;\r\n    address payable George;\r\n    \r\n    event Bet(address indexed _who, uint8 _hero, uint256 amount);\r\n    \r\n    modifier onlySiths {\r\n        require(sith[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    constructor(address payable _M, address payable _G) public {\r\n        Martin = _M;\r\n        George = _G;\r\n        sith[msg.sender] = true;\r\n        sithCount++;\r\n    }\r\n\r\n    function like() external {\r\n        likeDAPP++;\r\n    }\r\n\r\n    function dislike() external {\r\n        if (likeDAPP > 0) {\r\n            likeDAPP--;\r\n        }\r\n    }\r\n\r\n    function setBet(uint8 _hero) external payable {\r\n        require(onPause == false);\r\n        require(msg.value >= minBet);\r\n        require(endBetting == false);\r\n        require(_hero >= firstHero || _hero <= lastHero);\r\n        if (bets[msg.sender][_hero] == 0) {\r\n            playerCount[_hero]++;\r\n        }\r\n        bets[msg.sender][_hero] += msg.value;\r\n        betAmount[_hero] += msg.value;\r\n        emit Bet(msg.sender, _hero, msg.value);\r\n\r\n    }\r\n\r\n    function getProfit(address payable _winer) external {\r\n        require(startPayment == true);\r\n        if (resultWin == Withdraw) {\r\n            uint256 retValue;\r\n            for(uint256 i = firstHero; i <= lastHero; i++) {\r\n                uint256 bet = bets[_winer][i];\r\n                if (bet > 0) {\r\n                    bets[_winer][i] = 0;\r\n                    retValue += bet;\r\n                }\r\n            }\r\n            if (retValue > 0) {\r\n                _winer.transfer(retValue); \r\n            }\r\n            return;\r\n        } else {\r\n            uint256 winersBet = bets[_winer][resultWin];\r\n            require(winersBet > 0);\r\n            bets[_winer][resultWin] = 0;\r\n            playerCount[resultWin]--;\r\n            _winer.transfer(winersBet + winersBet * winRatio / RR);\r\n        }\r\n    }\r\n\r\n    function getStatistics() external view returns (uint256[2 * ArraySize] memory) {\r\n        uint256[2 * ArraySize] memory output;\r\n        for(uint256 i = firstHero; i <= lastHero; i++) {\r\n            output[i] = betAmount[i];\r\n            output[i + ArraySize] = playerCount[i];\r\n        }\r\n        return output;\r\n    }\r\n\r\n    function getPlayerStatistics(address _player) external view returns (uint256[ArraySize] memory) {\r\n        uint256[ArraySize] memory output;\r\n        for(uint256 i = firstHero; i <= lastHero; i++) {\r\n            output[i] = bets[_player][i];\r\n        }\r\n        return output;\r\n    }\r\n    \r\n    function endBetPeriod() external onlySiths {\r\n        endBetting = true;\r\n    }\r\n\r\n    function setResult(uint32 _result) external onlySiths {\r\n        require(_result >=  firstHero || _result <= lastHero);\r\n        require(startPayment == false);\r\n        if (betAmount[_result] == 0) {\r\n            startWithdraw();\r\n            return;\r\n        }\r\n        uint256 donation = (address(this).balance - betAmount[_result]) / 10;\r\n        Martin.transfer(donation / 2);\r\n        George.transfer(donation / 2);\r\n        uint256 totalBets = (address(this).balance - betAmount[_result]);\r\n        winRatio = totalBets * RR / betAmount[_result];\r\n        resultWin = _result;\r\n        startPayment = true;\r\n        if (endBetting != true) {\r\n            endBetting = true;\r\n        }\r\n    }\r\n\r\n    function startWithdraw() public onlySiths {\r\n        require(startPayment == false);\r\n        startPayment = true;\r\n        if (endBetting != true) {\r\n            endBetting = true;\r\n        }\r\n        if (resultWin != Withdraw) {\r\n            resultWin = Withdraw;\r\n        }\r\n    }\r\n\r\n    function pauseOn() external onlySiths {\r\n        onPause = true;\r\n    }\r\n\r\n    function pauseOff() external onlySiths {\r\n        onPause = false;\r\n    }\r\n\r\n    function clearBlockchain() external {\r\n        require(startPayment && endBetting);\r\n        if (resultWin == Withdraw) {\r\n            require(address(this).balance < minBet);\r\n            selfdestruct(msg.sender);\r\n        } else {\r\n            require(playerCount[resultWin] == 0);\r\n            selfdestruct(msg.sender);\r\n        }\r\n    }\r\n\r\n    function addSith(address _sith) external onlySiths {\r\n        sith[_sith] = true;\r\n        sithCount++;\r\n    }\r\n\r\n    function delSith(address _sith) external onlySiths {\r\n        require(sithCount >= 2);\r\n        sith[_sith] = false;\r\n        sithCount--;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"onPause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_result\",\"type\":\"uint32\"}],\"name\":\"setResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStatistics\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[78]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ArraySize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseOn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastHero\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endBetPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sith\",\"type\":\"address\"}],\"name\":\"addSith\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"resultWin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBetting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hero\",\"type\":\"uint8\"}],\"name\":\"setBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"like\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearBlockchain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_winer\",\"type\":\"address\"}],\"name\":\"getProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"likeDAPP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getPlayerStatistics\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[39]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseOff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"dislike\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sith\",\"type\":\"address\"}],\"name\":\"delSith\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstHero\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"betAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_M\",\"type\":\"address\"},{\"name\":\"_G\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_hero\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bet\",\"type\":\"event\"}]","ContractName":"WhoWillDieFirstInGoTs8","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000be4a75b568d05131c3005f98182e20c2f0a851030000000000000000000000002f90cc66f0fd87ed3ca63fe5a254f4b6aa293368","Library":"","SwarmSource":"bzzr://beb74f1c2041fc0cffc5b72d0eca8bc6297d98baddfbbbd9682abcd2b8083b9b"}]}