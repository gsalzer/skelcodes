{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.5;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two unsigned integers, reverts on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two unsigned integers, reverts on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n    * reverts when dividing by zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract IERC20 {\r\n    function transfer(address to, uint256 value) public returns (bool) {}\r\n}\r\n\r\ncontract CurrentKing {\r\n  using SafeMath for uint256;\r\n\r\n  // initialize\r\n  uint256 public REWARD_PER_WIN = 10000000;\r\n  uint256 public CREATOR_REWARD = 100000;\r\n  address public CREATOR_ADDRESS;\r\n  address public GTT_ADDRESS;\r\n\r\n  // game state params\r\n  uint256 public lastPaidBlock;\r\n  address public currentKing;\r\n\r\n  constructor() public {\r\n    CREATOR_ADDRESS = msg.sender;\r\n    lastPaidBlock = block.number;\r\n    currentKing = address(this);\r\n  }\r\n\r\n  // can only be called once\r\n  function setTokenAddress(address _gttAddress) public {\r\n    if (GTT_ADDRESS == address(0)) {\r\n      GTT_ADDRESS = _gttAddress;\r\n    }\r\n  }\r\n\r\n  function play() public {\r\n    uint256 currentBlock = block.number;\r\n\r\n    // pay old king\r\n    if (currentBlock != lastPaidBlock) {\r\n      payOut(currentBlock);\r\n\r\n      // reinitialize\r\n      lastPaidBlock = currentBlock;\r\n    }\r\n\r\n    // set new king\r\n    currentKing = msg.sender;\r\n  }\r\n\r\n  function payOut(uint256 _currentBlock) internal {\r\n    // calculate multiplier (# of unclaimed blocks)\r\n    uint256 numBlocksToPayout = _currentBlock.sub(lastPaidBlock);\r\n\r\n    IERC20(GTT_ADDRESS).transfer(currentKing, REWARD_PER_WIN.mul(numBlocksToPayout));\r\n    IERC20(GTT_ADDRESS).transfer(CREATOR_ADDRESS, CREATOR_REWARD.mul(numBlocksToPayout));\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_gttAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATOR_REWARD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GTT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REWARD_PER_WIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CREATOR_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentKing\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPaidBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CurrentKing","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://42223416303c35184b54249ff4b27f45a9d86d2bc04bc8367739869bbd88edca"}]}