{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\ncontract zBetForFun {\r\n\taddress payable gadrOwner;\r\n\tuint32 gnLastContestID = 0;\r\n\tuint32 gnLastWagerID = 0;\r\n\tuint gnTotalYesBets = 0;\r\n\tuint gnTotalNoBets = 0;\r\n\tuint gnTotalFees = 0;\r\n\r\n\tstruct clsContest {\r\n\t\tuint nSeconds_Created;\r\n\t\tstring sDescription;\r\n\t\tstring sShortDescription;\r\n\t\tuint nSeconds_Expiration;\r\n\t\tuint8 nFee;\r\n\t\tuint nTotal_Yes;\r\n\t\tuint nTotal_No;\r\n\t\tuint nSeconds_Resolved;\r\n\t\tint8 n8Result_NYP;\r\n\t\tuint nTotal_Winners;\r\n\t\tuint nTotal_Losers;\r\n\t}\r\n\r\n\tstruct clsWager {\r\n\t\tuint nSeconds_Created;\r\n\t\taddress adrPlayer;\r\n\t\tuint nBetAmount;\r\n\t\tint8 n8ChoiceNY;\r\n\t\tuint nSeconds_Paid;\r\n\t\tint8 n8LWP;\r\n\t\tuint nFeeCharged;\r\n\t\tuint nPaymentAmount;\r\n\t}\r\n\r\n\tstruct clsUser {\r\n\t\tuint nBalance;\r\n\t\tuint nSeconds_LastWithdrawal;\r\n\t}\r\n\r\n\tmapping(uint32 => clsContest) gmapContests;\r\n\tmapping (uint32 => mapping (uint32 => clsWager)) gmapWagers;\r\n\tmapping(address => clsUser) gmapUsers;\r\n\r\n\tconstructor() public { gadrOwner = msg.sender; }\r\n\r\n\tmodifier onlyByOwner()\r\n\t{\r\n\t\trequire(\r\n\t\t\tmsg.sender == gadrOwner, \"Sender not authorized.\"\r\n\t\t);\r\n\t\t_;\r\n\t}\r\n\r\n\tevent Pending_Bets(address indexed Player, uint Player_Balance, string Contest, bytes3 Player_Choice, uint Player_Bet, uint Total_Yes, uint Total_No, uint Total_Both, uint Fee_Percent);\r\n\tevent Finalized_Bets(address indexed Player, uint Player_Balance, string Contest, bytes3 Contest_Result, bytes3 Player_Choice, bytes4 Player_Result, uint Player_Bet, uint Total_Winners, uint Total_Losers, uint Total_Bets, uint Fee_Percent, uint Fee_Charged, uint Player_Paid);\r\n\tevent Withdrawals (address indexed Player, uint Withdrawal_Amount);\r\n\r\n\tfunction zKill() onlyByOwner() external {selfdestruct (gadrOwner);}\r\n\t\r\n\tfunction zEventLog_Pending_Bets() private {\r\n\t\temit Pending_Bets(msg.sender,\r\n\t\t\tgmapUsers[msg.sender].nBalance,\r\n\t\t\tgmapContests[gnLastContestID].sShortDescription, \r\n\t\t\tzYesNoToBytes(gmapWagers[gnLastContestID][gnLastWagerID].n8ChoiceNY),\r\n\t\t\tgmapWagers[gnLastContestID][gnLastWagerID].nBetAmount,\r\n\t\t\tgnTotalYesBets,\r\n\t\t\tgnTotalNoBets,\r\n\t\t\tgnTotalYesBets + gnTotalNoBets, \r\n\t\t\tuint(gmapContests[gnLastContestID].nFee) * 10000000000000000);\r\n\t}\r\n\r\n\tfunction zYesNoToBytes(int8 nYesNo) private pure returns (bytes3 b3YesNo) {\r\n\t\tb3YesNo = \"No\";\r\n\t\tif (nYesNo == 1) {\r\n\t\t\tb3YesNo = \"Yes\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction zEventLog_Finalized_Bets(uint32 i) private {\r\n\t\temit Finalized_Bets(gmapWagers[gnLastContestID][i].adrPlayer,\r\n\t\t\tgmapUsers[gmapWagers[gnLastContestID][i].adrPlayer].nBalance,\r\n\t\t\tgmapContests[gnLastContestID].sShortDescription,\r\n\t\t\tzYesNoTieToBytes(gmapContests[gnLastContestID].n8Result_NYP), \r\n\t\t\tzYesNoToBytes(gmapWagers[gnLastContestID][i].n8ChoiceNY), \r\n\t\t\tzYesNoPushToBytes(gmapWagers[gnLastContestID][i].n8LWP),\r\n\t\t\tgmapWagers[gnLastContestID][i].nBetAmount,\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Winners,\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Losers,\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Winners + gmapContests[gnLastContestID].nTotal_Losers,\r\n\t\t\tuint(gmapContests[gnLastContestID].nFee) * 10000000000000000,\r\n\t\t\tgmapWagers[gnLastContestID][i].nFeeCharged,\r\n\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount);\r\n\t}\r\n\r\n\tfunction zYesNoPushToBytes(int8 nYesNoPush) private pure returns (bytes4 b4YesNoPush) {\r\n\t\tb4YesNoPush = \"Lost\";\r\n\t\tif (nYesNoPush == 1) {\r\n\t\t\tb4YesNoPush = \"Won\";\r\n\t\t}\r\n\t\tif (nYesNoPush == 2) {\r\n\t\t\tb4YesNoPush = \"Push\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction zYesNoTieToBytes(int8 nYesNoTie) private pure returns (bytes3 b3YesNoTie) {\r\n\t\tb3YesNoTie = \"No\";\r\n\t\tif (nYesNoTie == 1) {\r\n\t\t\tb3YesNoTie = \"Yes\";\r\n\t\t}\r\n\t\tif (nYesNoTie == 2) {\r\n\t\t\tb3YesNoTie = \"Tie\";\r\n\t\t}\r\n\t\treturn b3YesNoTie;\r\n\t}\r\n\r\n\tfunction zEventLog_Withdrawals(uint nWithdrawal_Amount) private {\r\n\t\temit Withdrawals(msg.sender, nWithdrawal_Amount);\r\n\t}\r\n\r\n\t\r\n\tfunction zGetGlobals() external onlyByOwner() view returns (address adrOwner, uint32 nLastContestID, uint32 nLastWagerID, uint nTotalYesBets, uint nTotalNoBets, uint nTotalFees) {\r\n\t\tadrOwner = gadrOwner;\r\n\t\tnLastContestID = gnLastContestID;\r\n\t\tnLastWagerID = gnLastWagerID;\r\n\t\tnTotalYesBets = gnTotalYesBets;\r\n\t\tnTotalNoBets = gnTotalNoBets;\r\n\t\tnTotalFees = gnTotalFees;\r\n\t}\r\n\r\n\tfunction zAddWager (int8 n8ChoiceNY) external payable {\r\n\t\trequire(msg.value > 0 && block.timestamp < gmapContests[gnLastContestID].nSeconds_Expiration);\r\n\t\tgnLastWagerID++;\r\n\t\tgmapWagers[gnLastContestID][gnLastWagerID].nSeconds_Created = block.timestamp;\r\n\t\tgmapWagers[gnLastContestID][gnLastWagerID].adrPlayer = msg.sender;\r\n\t\tgmapWagers[gnLastContestID][gnLastWagerID].nBetAmount = msg.value;\r\n\t\tgmapWagers[gnLastContestID][gnLastWagerID].n8ChoiceNY = n8ChoiceNY;\r\n\t\tif (n8ChoiceNY == 1) {\r\n\t\t\tgnTotalYesBets += msg.value;\r\n\t\t} else {\r\n\t\t\tgnTotalNoBets += msg.value;\r\n\t\t}\r\n\t\tzEventLog_Pending_Bets();\r\n\t}\r\n\r\n\tfunction zGetOneWager_1(uint32 nContestID, uint32 nWagerID) external onlyByOwner() view returns (\r\n\t\tuint nSeconds_Created,\r\n\t\taddress adrPlayer,\r\n\t\tint8 n8ChoiceNY,\r\n\t\tuint nBetAmount,\r\n\t\tuint nTotalYesBets,\r\n\t\tuint nTotalNoBets) {\r\n\t\tnSeconds_Created = gmapWagers[nContestID][nWagerID].nSeconds_Created;\r\n\t\tadrPlayer = gmapWagers[nContestID][nWagerID].adrPlayer;\r\n\t\tn8ChoiceNY = gmapWagers[nContestID][nWagerID].n8ChoiceNY;\r\n\t\tnBetAmount = gmapWagers[nContestID][nWagerID].nBetAmount;\r\n\t\tnTotalYesBets = gnTotalYesBets;\r\n\t\tnTotalNoBets = gnTotalNoBets;\r\n\t}\r\n\r\n\tfunction zGetOneWager_2(uint32 nContestID, uint32 nWagerID) external onlyByOwner() view returns (\r\n\t\tint8 n8LWP,\r\n\t\tuint nSeconds_Paid,\r\n\t\tuint nPaymentAmount,\r\n\t\tuint nFeeCharged) {\r\n\t\tn8LWP = gmapWagers[nContestID][nWagerID].n8LWP;\r\n\t\tnSeconds_Paid = gmapWagers[nContestID][nWagerID].nSeconds_Paid;\r\n\t\tnPaymentAmount = gmapWagers[nContestID][nWagerID].nPaymentAmount;\r\n\t\tnFeeCharged = gmapWagers[nContestID][nWagerID].nFeeCharged;\r\n\t}\r\n\r\n\tfunction zGetAllWagers_1 (uint32 nContestID) external onlyByOwner() view returns (uint[] memory anSeconds_Created, address[] memory aadrPlayer, int8[] memory an8ChoiceNY, uint[] memory anBetAmount) {\r\n\t\tanSeconds_Created = new uint[](gnLastWagerID+1);\r\n\t\taadrPlayer = new address[](gnLastWagerID+1);\r\n\t\tan8ChoiceNY = new int8[](gnLastWagerID+1);\r\n\t\tanBetAmount = new uint[](gnLastWagerID+1);\r\n\r\n\t\tfor (uint32 i = 1; i <= gnLastWagerID; i++) {\r\n\t\t\tclsWager memory objWager = gmapWagers[nContestID][i];\r\n\t\t\tanSeconds_Created[i] = objWager.nSeconds_Created;\r\n\t\t\taadrPlayer[i] = objWager.adrPlayer;\r\n\t\t\tan8ChoiceNY[i] = objWager.n8ChoiceNY;\r\n\t\t\tanBetAmount[i] = objWager.nBetAmount;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction zGetAllWagers_2 (uint32 nContestID) external onlyByOwner() view returns (int8[] memory an8LWP, uint[] memory anSeconds_Paid, uint[] memory anPaymentAmount, uint[] memory anFeeCharged) {\r\n\t\tan8LWP = new int8[](gnLastWagerID+1);\r\n\t\tanSeconds_Paid = new uint[](gnLastWagerID+1);\r\n\t\tanPaymentAmount = new uint[](gnLastWagerID+1);\r\n\t\tanFeeCharged = new uint[](gnLastWagerID+1);\r\n\r\n\t\tfor (uint32 i = 1; i <= gnLastWagerID; i++) {\r\n\t\t\tclsWager memory objWager = gmapWagers[nContestID][i];\r\n\t\t\tan8LWP[i] = objWager.n8LWP;\r\n\t\t\tanSeconds_Paid[i] = objWager.nSeconds_Paid;\r\n\t\t\tanPaymentAmount[i] = objWager.nPaymentAmount;\r\n\t\t\tanFeeCharged[i] = objWager.nFeeCharged;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction zAddContest(string calldata sDescription, string calldata sShortDescription, uint32 nSeconds_Expiration, uint8 nFee) external onlyByOwner() {\r\n\t\tgnLastContestID++;\r\n\t\tgnLastWagerID = 0;\r\n\t\tgnTotalYesBets = 0;\r\n\t\tgnTotalNoBets = 0;\r\n\t\tgmapContests[gnLastContestID].nSeconds_Created = block.timestamp;\r\n\t\tgmapContests[gnLastContestID].sDescription = sDescription;\r\n\t\tgmapContests[gnLastContestID].sShortDescription = sShortDescription;\r\n\t\tgmapContests[gnLastContestID].nSeconds_Expiration = nSeconds_Expiration;\r\n\t\tgmapContests[gnLastContestID].nFee = nFee;\r\n\t}\r\n\r\n\tfunction zGetOneContest_1(uint32 nContestID) external onlyByOwner() view returns (\r\n\t\tuint nSeconds_Created,\r\n\t\tstring memory sDescription,\r\n\t\tstring memory sShortDescription,\r\n\t\tuint nSeconds_Expiration,\r\n\t\tuint nSeconds_Resolved,\r\n\t\tint8 n8Result_NYP) {\r\n\t\tnSeconds_Created = gmapContests[nContestID].nSeconds_Created;\r\n\t\tsDescription = gmapContests[nContestID].sDescription;\r\n\t\tsShortDescription = gmapContests[nContestID].sShortDescription;\r\n\t\tnSeconds_Expiration = gmapContests[nContestID].nSeconds_Expiration;\r\n\t\tnSeconds_Resolved = gmapContests[nContestID].nSeconds_Resolved;\r\n\t\tn8Result_NYP = gmapContests[nContestID].n8Result_NYP;\r\n\t}\r\n\r\n\tfunction zGetOneContest_2(uint32 nContestID) external onlyByOwner() view returns (\r\n\t\tuint nTotal_Yes,\r\n\t\tuint nTotal_No,\r\n\t\tuint nTotal_Winners,\r\n\t\tuint nTotal_Losers,\r\n\t\tuint nFee) {\r\n\t\tnTotal_Yes = gmapContests[nContestID].nTotal_Yes;\r\n\t\tnTotal_No = gmapContests[nContestID].nTotal_No;\r\n\t\tnTotal_Winners = gmapContests[nContestID].nTotal_Winners;\r\n\t\tnTotal_Losers = gmapContests[nContestID].nTotal_Losers;\r\n\t\tnFee = gmapContests[nContestID].nFee;\r\n\t}\r\n\r\n\tfunction zGetAllContests_1 () external onlyByOwner() view returns (uint[] memory anSeconds_Created, uint[] memory anSeconds_Expiration, uint[] memory anSeconds_Resolved, int8[] memory an8Result_NYP) {\r\n\t\tanSeconds_Created = new uint[](gnLastContestID+1);\r\n\t\tanSeconds_Expiration = new uint[](gnLastContestID+1);\r\n\t\tanSeconds_Resolved = new uint[](gnLastContestID+1);\r\n\t\tan8Result_NYP = new int8[](gnLastContestID+1);\r\n\r\n\t\tfor (uint32 i = 1; i <= gnLastContestID; i++) {\r\n\t\t\tclsContest memory objContest = gmapContests[i];\r\n\t\t\tanSeconds_Created[i] = objContest.nSeconds_Created;\r\n\t\t\tanSeconds_Expiration[i] = objContest.nSeconds_Expiration;\r\n\t\t\tanSeconds_Resolved[i] = objContest.nSeconds_Resolved;\r\n\t\t\tan8Result_NYP[i]= objContest.n8Result_NYP;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction zGetAllContests_2 () external onlyByOwner() view returns (uint[] memory anTotal_Yes, uint[] memory anTotal_No, uint[] memory anTotal_Winners, uint[] memory anTotal_Losers, uint[] memory anFee) {\r\n\t\tanTotal_Yes = new uint[](gnLastContestID+1);\r\n\t\tanTotal_No = new uint[](gnLastContestID+1);\r\n\t\tanTotal_Winners = new uint[](gnLastContestID+1);\r\n\t\tanTotal_Losers = new uint[](gnLastContestID+1);\r\n\t\tanFee = new uint[](gnLastContestID+1);\r\n\r\n\t\tfor (uint32 i = 1; i <= gnLastContestID; i++) {\r\n\t\t\tclsContest memory objContest = gmapContests[i];\r\n\t\t\tanTotal_Yes[i] = objContest.nTotal_Yes;\r\n\t\t\tanTotal_No[i] = objContest.nTotal_No;\r\n\t\t\tanTotal_Winners[i] = objContest.nTotal_Winners;\r\n\t\t\tanTotal_Losers[i] = objContest.nTotal_Losers;\r\n\t\t\tanFee[i]= objContest.nFee;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction zSetContestResult(int8 n8Result_NYP) external onlyByOwner() {\r\n\t\trequire(gmapContests[gnLastContestID].nSeconds_Resolved == 0);\r\n\t\tuint nRemainingTotalLosses;\r\n\t\tuint32 i;\r\n\t\tclsWager memory objWager;\r\n\t\tuint8 nFee_LargePerc = 100 - gmapContests[gnLastContestID].nFee;\r\n\t\tuint8 nFee_SmallPerc = gmapContests[gnLastContestID].nFee;\r\n\t\tgmapContests[gnLastContestID].n8Result_NYP = n8Result_NYP;\r\n\t\tgmapContests[gnLastContestID].nTotal_Yes = gnTotalYesBets;\r\n\t\tgmapContests[gnLastContestID].nTotal_No = gnTotalNoBets;\r\n\t\tgmapContests[gnLastContestID].nSeconds_Resolved = block.timestamp;\r\n\r\n\t\tif (n8Result_NYP == 1) {\r\n\t\t\tnRemainingTotalLosses = gnTotalNoBets;\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Winners = gnTotalYesBets;\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Losers = gnTotalNoBets;\r\n\t\t} else {\r\n\t\t\tnRemainingTotalLosses = gnTotalYesBets;\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Winners = gnTotalNoBets;\r\n\t\t\tgmapContests[gnLastContestID].nTotal_Losers = gnTotalYesBets;\r\n\t\t}\r\n\r\n\t\tif (n8Result_NYP == 2) {\r\n\t\t\tfor (i = 1; i <= gnLastWagerID; i++) {\r\n\t\t\t\tgmapWagers[gnLastContestID][i].nSeconds_Paid = block.timestamp;\r\n\t\t\t\tgmapWagers[gnLastContestID][i].n8LWP = 2;\r\n\t\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount = gmapWagers[gnLastContestID][i].nBetAmount;\r\n\t\t\t\tgmapUsers[gmapWagers[gnLastContestID][i].adrPlayer].nBalance += gmapWagers[gnLastContestID][i].nBetAmount;\r\n\t\t\t\tgmapContests[gnLastContestID].nTotal_Winners = 0;\r\n\t\t\t\tgmapContests[gnLastContestID].nTotal_Losers = 0;\r\n\t\t\t}\t\r\n\t\t} else {\r\n// Process Winners\r\n\t\t\tfor (i = 1; i <= gnLastWagerID; i++) {\r\n\t\t\t\tgmapWagers[gnLastContestID][i].nSeconds_Paid = block.timestamp;\r\n\t\t\t\tobjWager = gmapWagers[gnLastContestID][i];\r\n\t\t\t\tif (objWager.n8ChoiceNY == n8Result_NYP) {\r\n\t\t\t\t\tgmapWagers[gnLastContestID][i].n8LWP = 1;\r\n\t\t\t\t\tif (nRemainingTotalLosses <= objWager.nBetAmount) {\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount = objWager.nBetAmount + (nRemainingTotalLosses * nFee_LargePerc / 100);\r\n\t\t\t\t\t\tgnTotalFees += nRemainingTotalLosses * nFee_SmallPerc / 100;\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nFeeCharged = nRemainingTotalLosses * nFee_SmallPerc / 100;\r\n\t\t\t\t\t\tnRemainingTotalLosses = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount = objWager.nBetAmount + (objWager.nBetAmount * nFee_LargePerc / 100);\r\n\t\t\t\t\t\tgnTotalFees += objWager.nBetAmount * nFee_SmallPerc / 100;\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nFeeCharged = objWager.nBetAmount * nFee_SmallPerc / 100;\r\n\t\t\t\t\t\tnRemainingTotalLosses -= objWager.nBetAmount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n// Process Losers\r\n\t\t\tfor (i = gnLastWagerID; i > 0; i--) {\r\n\t\t\t\tobjWager = gmapWagers[gnLastContestID][i];\r\n\t\t\t\tif (objWager.n8ChoiceNY != n8Result_NYP) {\r\n\t\t\t\t\tif (nRemainingTotalLosses <= objWager.nBetAmount) {\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount = nRemainingTotalLosses;\r\n\t\t\t\t\t\tnRemainingTotalLosses = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgmapWagers[gnLastContestID][i].nPaymentAmount = objWager.nBetAmount;\r\n\t\t\t\t\t\tnRemainingTotalLosses -= objWager.nBetAmount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgmapUsers[gmapWagers[gnLastContestID][i].adrPlayer].nBalance += gmapWagers[gnLastContestID][i].nPaymentAmount;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i = 1; i <= gnLastWagerID; i++) {\r\n\t\t\tzEventLog_Finalized_Bets(i);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction zGetOneUser(address adrUserAddress) external onlyByOwner() view returns (\r\n\t\tuint nBalance,\r\n\t\tuint nSeconds_LastWithdrawal) {\r\n\t\tnBalance = gmapUsers[adrUserAddress].nBalance;\r\n\t\tnSeconds_LastWithdrawal = gmapUsers[adrUserAddress].nSeconds_LastWithdrawal;\r\n\t}\r\n\r\n\tfunction zUserWithdrawal() external {\r\n\t\trequire(gmapUsers[msg.sender].nBalance > 0);\r\n\t\tuint nBalance = gmapUsers[msg.sender].nBalance;\r\n\t\tgmapUsers[msg.sender].nBalance = 0;\r\n\t\tmsg.sender.transfer(nBalance);\r\n\t\tzEventLog_Withdrawals(nBalance);\r\n\t}\r\n\r\n\tfunction zFeesWithdrawal() external onlyByOwner() {\r\n\t\trequire(gnTotalFees > 0);\r\n\t\tuint nFees = gnTotalFees;\r\n\t\tgnTotalFees = 0;\r\n\t\tmsg.sender.transfer(nFees);\r\n\t}\r\n\r\n\tfunction zGetContestDescription() external view returns (string memory sDescription) {\r\n\t\tif (block.timestamp >= gmapContests[gnLastContestID].nSeconds_Expiration) {\r\n\t\t\tsDescription = \"The last contest has expired, so do not place a bet at this time.~nPlease check back often for a new contest.\";\r\n\t\t} else {\r\n\t\t\tsDescription = gmapContests[gnLastContestID].sDescription;\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"zFeesWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"}],\"name\":\"zGetAllWagers_1\",\"outputs\":[{\"name\":\"anSeconds_Created\",\"type\":\"uint256[]\"},{\"name\":\"aadrPlayer\",\"type\":\"address[]\"},{\"name\":\"an8ChoiceNY\",\"type\":\"int8[]\"},{\"name\":\"anBetAmount\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"adrUserAddress\",\"type\":\"address\"}],\"name\":\"zGetOneUser\",\"outputs\":[{\"name\":\"nBalance\",\"type\":\"uint256\"},{\"name\":\"nSeconds_LastWithdrawal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetAllContests_1\",\"outputs\":[{\"name\":\"anSeconds_Created\",\"type\":\"uint256[]\"},{\"name\":\"anSeconds_Expiration\",\"type\":\"uint256[]\"},{\"name\":\"anSeconds_Resolved\",\"type\":\"uint256[]\"},{\"name\":\"an8Result_NYP\",\"type\":\"int8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"},{\"name\":\"nWagerID\",\"type\":\"uint32\"}],\"name\":\"zGetOneWager_2\",\"outputs\":[{\"name\":\"n8LWP\",\"type\":\"int8\"},{\"name\":\"nSeconds_Paid\",\"type\":\"uint256\"},{\"name\":\"nPaymentAmount\",\"type\":\"uint256\"},{\"name\":\"nFeeCharged\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetGlobals\",\"outputs\":[{\"name\":\"adrOwner\",\"type\":\"address\"},{\"name\":\"nLastContestID\",\"type\":\"uint32\"},{\"name\":\"nLastWagerID\",\"type\":\"uint32\"},{\"name\":\"nTotalYesBets\",\"type\":\"uint256\"},{\"name\":\"nTotalNoBets\",\"type\":\"uint256\"},{\"name\":\"nTotalFees\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zUserWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"}],\"name\":\"zGetAllWagers_2\",\"outputs\":[{\"name\":\"an8LWP\",\"type\":\"int8[]\"},{\"name\":\"anSeconds_Paid\",\"type\":\"uint256[]\"},{\"name\":\"anPaymentAmount\",\"type\":\"uint256[]\"},{\"name\":\"anFeeCharged\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetAllContests_2\",\"outputs\":[{\"name\":\"anTotal_Yes\",\"type\":\"uint256[]\"},{\"name\":\"anTotal_No\",\"type\":\"uint256[]\"},{\"name\":\"anTotal_Winners\",\"type\":\"uint256[]\"},{\"name\":\"anTotal_Losers\",\"type\":\"uint256[]\"},{\"name\":\"anFee\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n8Result_NYP\",\"type\":\"int8\"}],\"name\":\"zSetContestResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n8ChoiceNY\",\"type\":\"int8\"}],\"name\":\"zAddWager\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sDescription\",\"type\":\"string\"},{\"name\":\"sShortDescription\",\"type\":\"string\"},{\"name\":\"nSeconds_Expiration\",\"type\":\"uint32\"},{\"name\":\"nFee\",\"type\":\"uint8\"}],\"name\":\"zAddContest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"}],\"name\":\"zGetOneContest_1\",\"outputs\":[{\"name\":\"nSeconds_Created\",\"type\":\"uint256\"},{\"name\":\"sDescription\",\"type\":\"string\"},{\"name\":\"sShortDescription\",\"type\":\"string\"},{\"name\":\"nSeconds_Expiration\",\"type\":\"uint256\"},{\"name\":\"nSeconds_Resolved\",\"type\":\"uint256\"},{\"name\":\"n8Result_NYP\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"}],\"name\":\"zGetOneContest_2\",\"outputs\":[{\"name\":\"nTotal_Yes\",\"type\":\"uint256\"},{\"name\":\"nTotal_No\",\"type\":\"uint256\"},{\"name\":\"nTotal_Winners\",\"type\":\"uint256\"},{\"name\":\"nTotal_Losers\",\"type\":\"uint256\"},{\"name\":\"nFee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetContestDescription\",\"outputs\":[{\"name\":\"sDescription\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nContestID\",\"type\":\"uint32\"},{\"name\":\"nWagerID\",\"type\":\"uint32\"}],\"name\":\"zGetOneWager_1\",\"outputs\":[{\"name\":\"nSeconds_Created\",\"type\":\"uint256\"},{\"name\":\"adrPlayer\",\"type\":\"address\"},{\"name\":\"n8ChoiceNY\",\"type\":\"int8\"},{\"name\":\"nBetAmount\",\"type\":\"uint256\"},{\"name\":\"nTotalYesBets\",\"type\":\"uint256\"},{\"name\":\"nTotalNoBets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zKill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Player_Balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Contest\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Player_Choice\",\"type\":\"bytes3\"},{\"indexed\":false,\"name\":\"Player_Bet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_Yes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_No\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_Both\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Fee_Percent\",\"type\":\"uint256\"}],\"name\":\"Pending_Bets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Player_Balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Contest\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"Contest_Result\",\"type\":\"bytes3\"},{\"indexed\":false,\"name\":\"Player_Choice\",\"type\":\"bytes3\"},{\"indexed\":false,\"name\":\"Player_Result\",\"type\":\"bytes4\"},{\"indexed\":false,\"name\":\"Player_Bet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_Winners\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_Losers\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Total_Bets\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Fee_Percent\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Fee_Charged\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Player_Paid\",\"type\":\"uint256\"}],\"name\":\"Finalized_Bets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Withdrawal_Amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawals\",\"type\":\"event\"}]","ContractName":"zBetForFun","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ee504d1ec1982700ccac9c164fb11764b5fc0a715f17898dc7cb0ae24fc27028"}]}