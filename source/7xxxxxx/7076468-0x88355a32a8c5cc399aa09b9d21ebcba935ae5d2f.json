{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\ncontract SafeMath {\r\n    function safeSub(uint a, uint b) internal pure returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeSub(int a, int b) internal pure returns (int) {\r\n        if (b < 0) assert(a - b > a);\r\n        else assert(a - b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        assert(c >= a && c >= b);\r\n        return c;\r\n    }\r\n\r\n    function safeMul(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Token {\r\n    function transfer(address receiver, uint amount) public returns (bool) {\r\n        (receiver);\r\n        (amount);\r\n        return false;\r\n    }\r\n\r\n    function balanceOf(address holder) public view returns (uint) {\r\n        (holder);\r\n        return 0;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        (_spender);\r\n        (_value);\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\ncontract Casino {\r\n    function deposit(address _receiver, uint _amount, bool _chargeGas) public;\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public receiver;\r\n    mapping (address => bool) public moderator;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyModerator {\r\n        require(moderator[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin {\r\n        require(moderator[msg.sender] || msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() internal {\r\n        owner = msg.sender;\r\n        receiver = msg.sender;\r\n    }\r\n\r\n    function setOwner(address _address) public onlyOwner {\r\n        owner = _address;\r\n    }\r\n\r\n    function setReceiver(address _address) public onlyAdmin {\r\n        receiver = _address;\r\n    }\r\n\r\n    function addModerator(address _address) public onlyOwner {\r\n        moderator[_address] = true;\r\n    }\r\n\r\n    function removeModerator(address _address) public onlyOwner {\r\n        moderator[_address] = false;\r\n    }\r\n}\r\n\r\n\r\ncontract RequiringAuthorization is Owned {\r\n    mapping(address => bool) public authorized;\r\n\r\n    modifier onlyAuthorized {\r\n        require(authorized[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    constructor() internal {\r\n        authorized[msg.sender] = true;\r\n    }\r\n\r\n    function authorize(address _address) public onlyAdmin {\r\n        authorized[_address] = true;\r\n    }\r\n\r\n    function deauthorize(address _address) public onlyAdmin {\r\n        authorized[_address] = false;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract Pausable is Owned {\r\n    bool public paused = false;\r\n\r\n    event Paused(bool _paused);\r\n\r\n    modifier onlyPaused {\r\n        require(paused == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyActive {\r\n        require(paused == false);\r\n        _;\r\n    }\r\n\r\n    function pause() public onlyActive onlyAdmin {\r\n        paused = true;\r\n    }\r\n\r\n    function activate() public onlyPaused onlyOwner {\r\n        paused = false;\r\n    }\r\n}\r\n\r\n\r\ncontract BankWallet is Pausable, RequiringAuthorization, SafeMath {\r\n    address public edgelessToken;\r\n    address public edgelessCasino;\r\n\r\n    uint public maxFundAmount = 0.22 ether;\r\n\r\n    event Withdrawal(address _token, uint _amount);\r\n    event Deposit(address _receiver, uint _amount);\r\n    event Fund(address _receiver, uint _amount);\r\n\r\n    constructor(address _token, address _casino) public {\r\n        edgelessToken = _token;\r\n        edgelessCasino = _casino;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function () public payable {}\r\n\r\n    function withdraw(address _token, uint _amount) public onlyAdmin returns (bool _success) {\r\n        _success = false;\r\n        if (_token == address (0)) {\r\n            uint weiAmount = _amount;\r\n            if (weiAmount > address(this).balance) {\r\n                return false;\r\n            }\r\n            _success = receiver.send(weiAmount);\r\n        } else {\r\n            Token __token = Token(_token);\r\n            uint amount = _amount;\r\n            if (amount > __token.balanceOf(this)) {\r\n                return false;\r\n            }\r\n            _success = __token.transfer(receiver, amount);\r\n        }\r\n\r\n        if (_success) {\r\n            emit Withdrawal(_token, _amount);\r\n        }\r\n    }\r\n\r\n    function approve(uint _amount) public onlyAuthorized {\r\n        _approveForCasino(edgelessCasino, _amount);\r\n    }\r\n\r\n    function deposit(address _address, uint _amount, bool _chargeGas) public onlyAuthorized {\r\n        Casino __casino = Casino(edgelessCasino);\r\n        __casino.deposit(_address, _amount, _chargeGas);\r\n        emit Deposit(_address, _amount);\r\n    }\r\n\r\n    function fund(address _address, uint _amount) public onlyAuthorized returns (bool _success) {\r\n        require(_amount <= maxFundAmount);\r\n        _success = _address.send(_amount);\r\n        if (_success) {\r\n            emit Fund(_address, _amount);\r\n        }\r\n    }\r\n\r\n    function setCasinoContract(address _casino) public onlyAdmin {\r\n        edgelessCasino = _casino;\r\n        _approveForCasino(_casino, 1000000000);\r\n    }\r\n\r\n    function setMaxFundAmount(uint _amount) public onlyAdmin {\r\n        maxFundAmount = _amount;\r\n    }\r\n\r\n    function _approveForCasino(address _address, uint _amount) internal returns (bool _success) {\r\n        Token __token = Token(edgelessToken);\r\n        _success = __token.approve(_address, _amount);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"edgelessToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_chargeGas\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxFundAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_casino\",\"type\":\"address\"}],\"name\":\"setCasinoContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxFundAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"edgelessCasino\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_casino\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Fund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"}]","ContractName":"BankWallet","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000801f67ec764459f9ec3cb9d6b998547f2de6ed3f000000000000000000000000764280456ae178591e037e36b01f69a52d9327a7","Library":"","SwarmSource":"bzzr://ce5019c189843777793aa0702ff8f8f7c7886faf12322e5c3c672ea0e2f26f60"}]}