{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @return the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @return the number of decimals of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract TokenOracle {\r\n    function fetch(ERC20[] calldata tokens) external view returns(\r\n        uint8[] memory decimals,\r\n        string[] memory symbols,\r\n        string[] memory names\r\n    ) {\r\n        decimals = new uint8[](tokens.length);\r\n        symbols = new string[](tokens.length);\r\n        names = new string[](tokens.length);\r\n        uint256 i = 0;\r\n        for(i; i<tokens.length; i++) {\r\n            decimals[i] = tokens[i].decimals();\r\n            symbols[i] = tokens[i].symbol();\r\n            names[i] = tokens[i].name();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"fetch\",\"outputs\":[{\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"name\":\"symbols\",\"type\":\"string[]\"},{\"name\":\"names\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TokenOracle","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8d601de1425adcd1256b198a07f3d0f140d1d247cd0880e428d272f290793cf0"}]}