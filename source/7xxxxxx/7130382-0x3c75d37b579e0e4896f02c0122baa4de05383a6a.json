{"status":"1","message":"OK","result":[{"SourceCode":"// hevm: flattened sources of contracts/Alchemist.sol\r\npragma solidity ^0.4.24;\r\n\r\n////// contracts/openzeppelin/IERC20.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n////// contracts/Alchemist.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/* import \"./openzeppelin/IERC20.sol\"; */\r\n\r\ncontract Alchemist {\r\n    address public LEAD;\r\n    address public GOLD;\r\n\r\n    constructor(address _lead, address _gold) public {\r\n        LEAD = _lead;\r\n        GOLD = _gold;\r\n    }\r\n\r\n    function transmute(uint _mass) external {\r\n        require(\r\n            IERC20(LEAD).transferFrom(msg.sender, address(this), _mass),\r\n            \"LEAD transfer failed\"\r\n        );\r\n        require(\r\n            IERC20(GOLD).transfer(msg.sender, _mass),\r\n            \"GOLD transfer failed\"\r\n        );\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_mass\",\"type\":\"uint256\"}],\"name\":\"transmute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GOLD\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LEAD\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_lead\",\"type\":\"address\"},{\"name\":\"_gold\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Alchemist","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000beb9ef514a379b997e0798fdcc901ee474b6d9a1000000000000000000000000ec67005c4e498ec7f55e092bd1d35cbc47c91892","Library":"","SwarmSource":"bzzr://ac8300992563d91b0008ff91c369dc4552ea3f4579440a5dee669c3320c891ff"}]}