{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\n\r\n\r\n contract simpleToken {\r\n     address public beneficiary;\r\n     string public standard = 'https://mshk.top';\r\n     string public name;    \r\n     string public symbol;  \r\n     uint8 public decimals = 8;  \r\n     uint256 public totalSupply = 10000000000000; \r\n     /* This creates an array with all balances */\r\n     mapping (address => uint256) public balanceOf;\r\n\r\n     event Transfer(address indexed from, address indexed to, uint256 value);  \r\n\r\n  \r\n     constructor(string memory tokenName, string memory  tokenSymbol) public {\r\n         name = tokenName;\r\n         symbol = tokenSymbol;\r\n        \r\n         beneficiary = msg.sender;\r\n         balanceOf[msg.sender] = totalSupply;\r\n         emit Transfer(msg.sender, msg.sender, totalSupply);\r\n     }\r\n\r\n     modifier onlyOwner() { require(msg.sender == beneficiary); _; }\r\n\r\n     function transfer(address _to, uint256 _value) public{\r\n       require(balanceOf[msg.sender] >= _value);\r\n      \r\n       balanceOf[msg.sender] -= _value;\r\n\r\n     \r\n       balanceOf[_to] += _value;\r\n\r\n      \r\n       emit Transfer(msg.sender, _to, _value);\r\n     }\r\n\r\n     function issue(address _to, uint256 _amount) public onlyOwner(){\r\n         require(balanceOf[beneficiary] >= _amount);\r\n        \r\n         balanceOf[beneficiary] -= _amount;\r\n         balanceOf[_to] += _amount;\r\n        \r\n         emit Transfer(beneficiary, _to, _amount);\r\n     }\r\n  }\r\n\r\n\r\ncontract Crowdsale is simpleToken {\r\n    uint public amountRaised; \r\n    uint public price;  \r\n    uint256 public counterForTokenId = 0;\r\n    mapping(address => uint256) public balanceInEthAtCrowdsale; \r\n \r\n    event FundTransfer(address _backer, uint _amount, bool _isContribution);    \r\n\r\n    event SetPrice(address _beneficiary, uint _price);\r\n    \r\n    event AddSupplyAmount(string msg, uint _amount);\r\n  \r\n    constructor(\r\n        string memory tokenName,\r\n        string memory tokenSymbol\r\n    ) public simpleToken(tokenName, tokenSymbol){\r\n        price = 2 finney; //1?以太?可以? 500 ?代?\r\n    }\r\n \r\n    function internalIssue(address _to, uint256 _amount) private{\r\n     require(balanceOf[beneficiary] >= _amount);\r\n    \r\n     balanceOf[beneficiary] -= _amount;\r\n     balanceOf[_to] += _amount;\r\n   \r\n     emit Transfer(beneficiary, _to, _amount);\r\n    }\r\n  \r\n    function () external payable {\r\n\r\n        uint amount = msg.value;\r\n     \r\n        balanceInEthAtCrowdsale[msg.sender] += amount;\r\n        \r\n        amountRaised += amount;\r\n\r\n        internalIssue(msg.sender, amount / price * 10 ** uint256(decimals));\r\n        emit FundTransfer(msg.sender, amount, true);\r\n       \r\n        counterForTokenId = counterForTokenId + 1;\r\n        \r\n    }\r\n\r\n   \r\n    function safeWithdrawal() public onlyOwner(){\r\n       \r\n        msg.sender.transfer(amountRaised);\r\n\r\n        emit FundTransfer(msg.sender, amountRaised, false);\r\n        amountRaised = 0;\r\n    }\r\n    \r\n    function setPrice (uint price_in_finney) public onlyOwner(){\r\n        price = price_in_finney * 1 finney;\r\n        emit SetPrice(msg.sender, price);\r\n    }\r\n    \r\n    function addSupplyAmount (uint256 amount) public onlyOwner(){\r\n        totalSupply = totalSupply + amount; \r\n        balanceOf[msg.sender] += amount;\r\n\r\n       \r\n        emit Transfer(msg.sender, msg.sender , amount);\r\n        emit AddSupplyAmount('Add Supply Amount', amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceInEthAtCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"counterForTokenId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price_in_finney\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addSupplyAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AddSupplyAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000009416c6c50617373476f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034150540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://e1e331219d0a922193fcddb93096477978db2f7b3e288095b36de735687b7d59"}]}