{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.4;\r\ncontract Ownable {\r\n  address payable public owner;\r\n  event OwnershipTransferred(address indexed previousOwner,address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {owner = msg.sender;}\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address payable _newOwner) public onlyOwner {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\ncontract FrenchIco_Coprorate is Ownable {\r\n    \r\n    bool internal PauseAllContracts= false;\r\n    uint public maxAmount;\r\n    mapping(address => uint) internal role;\r\n    \r\n    event WhitelistedAddress(address addr, uint _role);\r\n\r\n/** GENERAL STOPPABLE\r\n  * All the Project are stoppable by the Company\r\n  **/\r\n \r\n    function GeneralPause() onlyOwner external {\r\n        if (PauseAllContracts==false) {PauseAllContracts=true;}\r\n        else {PauseAllContracts=false;}\r\n    }\r\n    \r\n    function setupMaxAmount(uint _maxAmount) onlyOwner external {\r\n        maxAmount = _maxAmount;\r\n    }\r\n\r\n\r\n/** ROLE ATTRIBUTION\r\n     * @ Not registred = 0\r\n     * @ STANDARD = 1\r\n     * @ PREMIUM = 2\r\n     * @ PREMIUM PRO = 3\r\n      */   \r\n   \r\n    function RoleSetup(address addr, uint _role) onlyOwner public {\r\n         role[addr]= _role;\r\n         emit WhitelistedAddress(addr, _role);\r\n      }\r\n      \r\n    function newMember() public payable {\r\n         require (role[msg.sender]==0,\"user has to be new\");\r\n         role[msg.sender]= 1;\r\n         owner.transfer(msg.value);\r\n         emit WhitelistedAddress(msg.sender, 1);\r\n      }\r\n      \r\n/** USABLE BY EXTERNAL CONTRACT*/ \r\n\t     \r\n    function isGeneralPaused() external view returns (bool) {return PauseAllContracts;}\r\n    function GetRole(address addr) external view returns (uint) {return role[addr];}\r\n    function GetWallet_FRENCHICO() external view returns (address) {return owner;}\r\n    function GetMaxAmount() external view returns (uint) {return maxAmount;}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"newMember\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"uint256\"}],\"name\":\"RoleSetup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setupMaxAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"GetRole\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"GeneralPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMaxAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isGeneralPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetWallet_FRENCHICO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_role\",\"type\":\"uint256\"}],\"name\":\"WhitelistedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"FrenchIco_Coprorate","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://506c0262ea8850102965fb8ff1785249ec00f99a2b980d7f91404c1a65f58390"}]}