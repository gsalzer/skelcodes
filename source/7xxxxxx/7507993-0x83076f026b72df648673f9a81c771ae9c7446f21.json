{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.5;\r\n\r\n\r\ncontract Ownable {\r\n    \r\n    mapping(address => bool) internal owner;\r\n    \r\n    event AddedOwner(address newOwner);\r\n    event RemovedOwner(address removedOwner);\r\n\r\n    constructor () public {\r\n        owner[msg.sender] = true;\r\n    }\r\n\r\n    modifier ownerOnly() {\r\n        require(owner[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    function ownerAdd(address _newOwner) ownerOnly public {\r\n        require(_newOwner != address(0));\r\n        owner[_newOwner] = true;\r\n        \r\n        emit AddedOwner(_newOwner);\r\n    }\r\n\r\n    function ownerRemove(address _toRemove) ownerOnly public {\r\n        require(_toRemove != address(0));\r\n        require(_toRemove != msg.sender);\r\n        //owner[_toRemove] = false;\r\n        delete owner[_toRemove];\r\n        \r\n        emit RemovedOwner(_toRemove);\r\n    }\r\n}\r\n\r\n\r\ncontract RunOnChain is Ownable {\r\n\r\n\r\n    struct Mensuration {\r\n        string Longitude;\r\n        string Latitude;\r\n        string Elevatio;\r\n        uint256 GpsDatetime;\r\n        uint256 DeviceDatetime;\r\n    }\r\n    \r\n    mapping (uint256 => mapping (uint256 => Mensuration[])) internal Mensurations;\r\n    \r\n    \r\n    constructor () public Ownable() { }\r\n    \r\n    \r\n    function insertMensuration(uint256 eventId, uint256 runnerId, string memory gpsLongitude, string memory gpsLatitude, string memory gpsElevation, uint256 gpsDatetime, uint256 deviceDatetime) public ownerOnly() returns (bool) \r\n    {\r\n        require(eventId>0 && runnerId>0 && bytes(gpsLongitude).length>0 && bytes(gpsLatitude).length>0 && bytes(gpsElevation).length>0 && gpsDatetime>0 && deviceDatetime>0);\r\n        \r\n        Mensuration memory mensuTemp;\r\n        mensuTemp.Longitude = gpsLongitude;\r\n        mensuTemp.Latitude = gpsLatitude;\r\n        mensuTemp.Elevatio = gpsElevation;\r\n        mensuTemp.GpsDatetime = gpsDatetime;\r\n        mensuTemp.DeviceDatetime = deviceDatetime;\r\n        \r\n        Mensurations[eventId][runnerId].push(mensuTemp);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    \r\n    function getInfo(uint256 eventId, uint256 runnerId) public ownerOnly() view returns (string memory)\r\n    {\r\n        require(eventId >0 && runnerId>0);\r\n        \r\n        string memory ret = \"{\";\r\n        uint256 arrayLength = Mensurations[eventId][runnerId].length;\r\n        \r\n        ret = string(abi.encodePacked(ret, '\"EventId\": \"', uint2str(eventId), '\", '));\r\n        ret = string(abi.encodePacked(ret, '\"RunnerId\": \"', uint2str(runnerId), '\", '));\r\n        \r\n        ret = string(abi.encodePacked(ret, '\"Mensurations\": ['));\r\n        for (uint i=0; i<arrayLength; i++)\r\n        {\r\n            ret = string(abi.encodePacked(ret, '{'));\r\n            ret = string(abi.encodePacked(ret, '\"GpsLongitude\": \"', Mensurations[eventId][runnerId][i].Longitude, '\", '));\r\n            ret = string(abi.encodePacked(ret, '\"GpsLatitude\": \"', Mensurations[eventId][runnerId][i].Latitude, '\", '));\r\n            ret = string(abi.encodePacked(ret, '\"GpsElevation\": \"', Mensurations[eventId][runnerId][i].Elevatio, '\"'));\r\n            ret = string(abi.encodePacked(ret, '\"GpsDatetime\": \"', uint2str(Mensurations[eventId][runnerId][i].GpsDatetime), '\"'));\r\n            ret = string(abi.encodePacked(ret, '\"DeviceDatetime\": \"', uint2str(Mensurations[eventId][runnerId][i].DeviceDatetime), '\"'));\r\n            ret = string(abi.encodePacked(ret, '}'));\r\n            \r\n            if(i<arrayLength-1 && arrayLength>1)\r\n                ret = string(abi.encodePacked(ret, ', '));\r\n        }\r\n        ret = string(abi.encodePacked(ret, \"]\"));\r\n    \r\n        ret = string(abi.encodePacked(ret, \"}\"));\r\n                \r\n        \r\n        return ret;\r\n    }\r\n    \r\n    function kill() public ownerOnly()  returns (bool)\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    \r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString)\r\n    {\r\n        if (_i == 0) { return \"0\"; }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) { len++; j /= 10; }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) { bstr[k--] = byte(uint8(48 + _i % 10)); _i /= 10; }\r\n        return string(bstr);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ownerAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eventId\",\"type\":\"uint256\"},{\"name\":\"runnerId\",\"type\":\"uint256\"}],\"name\":\"getInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"eventId\",\"type\":\"uint256\"},{\"name\":\"runnerId\",\"type\":\"uint256\"},{\"name\":\"gpsLongitude\",\"type\":\"string\"},{\"name\":\"gpsLatitude\",\"type\":\"string\"},{\"name\":\"gpsElevation\",\"type\":\"string\"},{\"name\":\"gpsDatetime\",\"type\":\"uint256\"},{\"name\":\"deviceDatetime\",\"type\":\"uint256\"}],\"name\":\"insertMensuration\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toRemove\",\"type\":\"address\"}],\"name\":\"ownerRemove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"AddedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"removedOwner\",\"type\":\"address\"}],\"name\":\"RemovedOwner\",\"type\":\"event\"}]","ContractName":"RunOnChain","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0d5131f9f819ee02a5cb8646d836c70667e977fd324fdfb0eb4498c7a175659b"}]}