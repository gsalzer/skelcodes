{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >= 0.4.24 < 0.6.0;\r\n\r\n\r\n/**\r\n * @title ONBT token - Issued by OnBIT.\r\n */\r\n\r\n\r\n/**\r\n * @title ERC20 Standard Interface\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Token implementation\r\n */\r\ncontract ONBT is IERC20 {\r\n    string public name = \"OnBIT Token\";\r\n    string public symbol = \"ONBT\";\r\n    uint8 public decimals = 18;\r\n    \r\n    uint256 exAmount;\r\n    uint256 reserveAmount;\r\n    \r\n    uint256 _totalSupply;\r\n    mapping(address => uint256) balances;\r\n\r\n    address public owner;\r\n    address public reserve;\r\n\r\n    modifier isOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        reserve   = 0x5BDd983b96AC7337e976f60229898Ae816fe2c47;\r\n\r\n        exAmount        = toWei(4650000000);   // 4,650,000,000\r\n        reserveAmount   = toWei(350000000);    //   350,000,000\r\n        _totalSupply    = toWei(5000000000);   // 5,000,000,000\r\n\r\n        require(_totalSupply == exAmount + reserveAmount );\r\n        \r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, balances[owner]);\r\n        \r\n        transfer(reserve, reserveAmount);\r\n        require(balances[owner] == exAmount);\r\n    }\r\n    \r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address who) public view returns (uint256) {\r\n        return balances[who];\r\n    }\r\n    \r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(msg.sender != to);\r\n\r\n        require(to != owner);\r\n        require(value > 0);\r\n        \r\n        require( balances[msg.sender] >= value );\r\n        require( balances[to] + value >= balances[to] );    // prevent overflow\r\n\r\n        if(msg.sender == reserve) {\r\n            require(now >= 1587600000);     // 350M lock to 2020-04-23\r\n        }\r\n\r\n        if (to == address(0) || to == address(0x1) || to == address(0xdead)) {\r\n             _totalSupply -= value;\r\n        }\r\n\r\n\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function burnCoins(uint256 value) public {\r\n        require(msg.sender != owner);   // owner can't burn any coin\r\n        require(balances[msg.sender] >= value);\r\n        require(_totalSupply >= value);\r\n        \r\n        balances[msg.sender] -= value;\r\n        _totalSupply -= value;\r\n\r\n        emit Transfer(msg.sender, address(0), value);\r\n    }\r\n\r\n    function balanceOfOwner() public view returns (uint256) {\r\n        return balances[owner];\r\n    }\r\n    \r\n    /** @dev private function\r\n     */\r\n\r\n    function toWei(uint256 value) private constant returns (uint256) {\r\n        return value * (10 ** uint256(decimals));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"ONBT","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ee04ace333c7f76e3cf9c6ecc0f158d9d58613120b2f620ec327acac6caef2a6"}]}