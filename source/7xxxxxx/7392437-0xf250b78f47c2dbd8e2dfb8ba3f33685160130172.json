{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract Whitelisting is Ownable {\r\n    mapping(address => bool) public isInvestorApproved;\r\n    mapping(address => bool) public isInvestorPaymentApproved;\r\n\r\n    event Approved(address indexed investor);\r\n    event Disapproved(address indexed investor);\r\n\r\n    event PaymentApproved(address indexed investor);\r\n    event PaymentDisapproved(address indexed investor);\r\n\r\n\r\n    //Token distribution approval (KYC results)\r\n    function approveInvestor(address toApprove) public onlyOwner {\r\n        isInvestorApproved[toApprove] = true;\r\n        emit Approved(toApprove);\r\n    }\r\n\r\n    function approveInvestorsInBulk(address[] calldata toApprove) external onlyOwner {\r\n        for (uint i=0; i<toApprove.length; i++) {\r\n            isInvestorApproved[toApprove[i]] = true;\r\n            emit Approved(toApprove[i]);\r\n        }\r\n    }\r\n\r\n    function disapproveInvestor(address toDisapprove) public onlyOwner {\r\n        delete isInvestorApproved[toDisapprove];\r\n        emit Disapproved(toDisapprove);\r\n    }\r\n\r\n    function disapproveInvestorsInBulk(address[] calldata toDisapprove) external onlyOwner {\r\n        for (uint i=0; i<toDisapprove.length; i++) {\r\n            delete isInvestorApproved[toDisapprove[i]];\r\n            emit Disapproved(toDisapprove[i]);\r\n        }\r\n    }\r\n\r\n    //Investor payment approval (For private sale)\r\n    function approveInvestorPayment(address toApprove) public onlyOwner {\r\n        isInvestorPaymentApproved[toApprove] = true;\r\n        emit PaymentApproved(toApprove);\r\n    }\r\n\r\n    function approveInvestorsPaymentInBulk(address[] calldata toApprove) external onlyOwner {\r\n        for (uint i=0; i<toApprove.length; i++) {\r\n            isInvestorPaymentApproved[toApprove[i]] = true;\r\n            emit PaymentApproved(toApprove[i]);\r\n        }\r\n    }\r\n\r\n    function disapproveInvestorapproveInvestorPayment(address toDisapprove) public onlyOwner {\r\n        delete isInvestorPaymentApproved[toDisapprove];\r\n        emit PaymentDisapproved(toDisapprove);\r\n    }\r\n\r\n    function disapproveInvestorsPaymentInBulk(address[] calldata toDisapprove) external onlyOwner {\r\n        for (uint i=0; i<toDisapprove.length; i++) {\r\n            delete isInvestorPaymentApproved[toDisapprove[i]];\r\n            emit PaymentDisapproved(toDisapprove[i]);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"toDisapprove\",\"type\":\"address\"}],\"name\":\"disapproveInvestorapproveInvestorPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toDisapprove\",\"type\":\"address\"}],\"name\":\"disapproveInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toDisapprove\",\"type\":\"address[]\"}],\"name\":\"disapproveInvestorsInBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toApprove\",\"type\":\"address\"}],\"name\":\"approveInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInvestorPaymentApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toApprove\",\"type\":\"address[]\"}],\"name\":\"approveInvestorsPaymentInBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInvestorApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toDisapprove\",\"type\":\"address[]\"}],\"name\":\"disapproveInvestorsPaymentInBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toApprove\",\"type\":\"address\"}],\"name\":\"approveInvestorPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toApprove\",\"type\":\"address[]\"}],\"name\":\"approveInvestorsInBulk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"Disapproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"PaymentApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"PaymentDisapproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Whitelisting","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://45257738498e5d1e6dee894930fac1df6eb977676e2890c55fa7fc1913b27fb3"}]}