{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) { \r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n  \r\ncontract owned {\r\n\r\n    address public manager;\r\n\r\n    constructor() public{\r\n        manager = msg.sender;\r\n    }\r\n \r\n    modifier onlymanager{\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n\r\n    function transferownership(address _new_manager) public onlymanager {\r\n        manager = _new_manager;\r\n    }\r\n}\r\n\r\ninterface master{\r\n     function owner_slave(uint _index) external view returns(address);\r\n     function owner_slave_amount()external view returns(uint);\r\n}\r\n \r\n\r\n\r\ninterface controller{\r\n    function controlMintoken(uint8 _index, address target, uint mintedAmount) external;\r\n    function controlBurntoken(uint8 _index, address target, uint burnedAmount) external;\r\n    function controlSearchBoxCount(uint8 _boxIndex, address target)external view returns (uint);\r\n    function controlSearchCount(uint8 _boxIndex, uint8 _materialIndex, address target)external view returns (uint);\r\n    function controlPetCount(uint8 _boxIndex, uint8 _materialIndex, address target)external view returns (uint);\r\n}\r\n\r\ncontract personCall is owned{ \r\n    \r\n    address public master_address;\r\n    address public BoxFactory_address =0x8842511f9eaaa75904017ff8ca26ba03ee2ddfa0;\r\n    address public MaterialFactory_address =0x65844f2e98495b6c8780f689c5d13bb7f4975d65;\r\n    address public PetFactory_address;\r\n    \r\n    address[] public dungeons; \r\n\r\n    function checkSlave() public view returns(bool){ \r\n        uint length = master(master_address).owner_slave_amount();\r\n        for(uint i=1;i<=length;i++){\r\n             address slave = master(master_address).owner_slave(i);\r\n             if(msg.sender == slave){\r\n                 return true;\r\n             }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function checkDungeons() public view returns(bool){ \r\n        for(uint i=0;i<dungeons.length;i++){\r\n             if(msg.sender == dungeons[i]){\r\n                 return true;\r\n             }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    \r\n    \r\n    function callTreasureMin(uint8 index,address target, uint mintedAmount) public {    \r\n         require(checkSlave() || checkDungeons());\r\n         controller mintokener = controller(BoxFactory_address);\r\n   \r\n         mintokener.controlMintoken(index, target, mintedAmount);\r\n    }\r\n\r\n \r\n    function callTreasureBurn(uint8 index, uint burnedAmount) public{       \r\n        controller burnTokenr = controller(BoxFactory_address);\r\n        burnTokenr.controlBurntoken(index, msg.sender, burnedAmount);\r\n    }\r\n    \r\n    \r\n    function showBoxAmount(uint8 _boxIndex) public view returns (uint){         \r\n        controller showBoxer = controller(BoxFactory_address);\r\n        return showBoxer.controlSearchBoxCount(_boxIndex,msg.sender);\r\n    }\r\n    \r\n    function showMaterialAmount(uint8 _boxIndex, uint8 _materialIndex) public view returns (uint){   \r\n        controller showMaterialer = controller(MaterialFactory_address);\r\n        return showMaterialer.controlSearchCount(_boxIndex,_materialIndex,msg.sender);\r\n    }\r\n    \r\n    function showPetAmount(uint8 _boxIndex, uint8 _materialIndex) public view returns (uint){   \r\n        controller showPeter = controller(PetFactory_address);\r\n        return showPeter.controlPetCount(_boxIndex,_materialIndex,msg.sender);\r\n    }\r\n    \r\n    \r\n    \r\n    function push_dungeons(address _dungeons_address) public onlymanager{               \r\n        dungeons.push(_dungeons_address);\r\n    }\r\n    \r\n    function change_dungeons_address(uint index,address _dungeons_address) public onlymanager{    \r\n        dungeons[index] = _dungeons_address;\r\n    }\r\n    \r\n    function set_master_address(address _master_address) public onlymanager{        \r\n        master_address = _master_address;\r\n    }\r\n    \r\n    function set_BoxFactory_address(address _BoxFactory_address) public onlymanager{        \r\n        BoxFactory_address = _BoxFactory_address;\r\n    }\r\n    \r\n    function set_MatFactory_address(address _MaterialFactory_address) public onlymanager{        \r\n        MaterialFactory_address = _MaterialFactory_address;\r\n    }\r\n    \r\n    function set_PetFactory_address(address _PetFactory_address) public onlymanager{        \r\n        PetFactory_address = _PetFactory_address;\r\n    }\r\n    \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"}],\"name\":\"showBoxAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"_dungeons_address\",\"type\":\"address\"}],\"name\":\"change_dungeons_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PetFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_BoxFactory_address\",\"type\":\"address\"}],\"name\":\"set_BoxFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_MaterialFactory_address\",\"type\":\"address\"}],\"name\":\"set_MatFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkDungeons\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dungeons_address\",\"type\":\"address\"}],\"name\":\"push_dungeons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dungeons\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaterialFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"callTreasureMin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BoxFactory_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_PetFactory_address\",\"type\":\"address\"}],\"name\":\"set_PetFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkSlave\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"},{\"name\":\"_materialIndex\",\"type\":\"uint8\"}],\"name\":\"showMaterialAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master_address\",\"type\":\"address\"}],\"name\":\"set_master_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_manager\",\"type\":\"address\"}],\"name\":\"transferownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_boxIndex\",\"type\":\"uint8\"},{\"name\":\"_materialIndex\",\"type\":\"uint8\"}],\"name\":\"showPetAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"name\":\"callTreasureBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"personCall","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://88bbbd489507b1bb87eca57f2ef15a7ec5d9450c6c40705bc25db36e0d45836e"}]}