{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract AxieCore{\r\n  function getAxie(\r\n    uint256 _axieId\r\n  )\r\n    external\r\n    view\r\n    returns (uint256 /* _genes */, uint256 /* _bornAt */);\r\n}\r\ncontract GetStats{\r\n  struct Type{\r\n    uint hp;\r\n    uint speed;\r\n    uint skill;\r\n    uint morale;\r\n    uint attack;\r\n    uint defense;\r\n    uint accuracy;\r\n  }\r\n  mapping(uint => Type) internal typeMap;\r\n  mapping(uint => Type) internal bonusMap;\r\n  uint[] internal masks;\r\n  AxieCore internal axie=AxieCore(0xF5b0A3eFB8e8E4c201e2A935F110eAaF3FFEcb8d); //0xC2093A90a4046B7F347c84f512651e6977BD11a0);\r\n  constructor() public{\r\n    //Beast\r\n    typeMap[0]=Type({hp: 2, speed: 3, skill: 2, morale: 5, attack: 3, defense: 2, accuracy: 5});\r\n    bonusMap[0]=Type({hp: 0, speed: 1, skill: 0, morale: 3, attack: 0, defense: 0, accuracy: 0});\r\n    //Bug\r\n    typeMap[1]=Type({hp: 3, speed: 2, skill: 3, morale: 4, attack: 2, defense: 3, accuracy: 5});\r\n    bonusMap[1]=Type({hp: 1, speed: 0, skill: 0, morale: 3, attack: 0, defense: 0, accuracy: 0});\r\n    //Bird\r\n    typeMap[2]=Type({hp: 1, speed: 5, skill: 3, morale: 3, attack: 5, defense: 1, accuracy: 4});\r\n    bonusMap[2]=Type({hp: 0, speed: 3, skill: 0, morale: 1, attack: 0, defense: 0, accuracy: 0});\r\n    //Plant\r\n    typeMap[3]=Type({hp: 5, speed: 2, skill: 2, morale: 3, attack: 2, defense: 5, accuracy: 3});\r\n    bonusMap[3]=Type({hp: 3, speed: 0, skill: 0, morale: 1, attack: 0, defense: 0, accuracy: 0});\r\n    //Aquatic\r\n    typeMap[4]=Type({hp: 4, speed: 4, skill: 3, morale: 1, attack: 5, defense: 3, accuracy: 2});\r\n    bonusMap[4]=Type({hp: 1, speed: 3, skill: 0, morale: 0, attack: 0, defense: 0, accuracy: 0});\r\n    //Reptile\r\n    typeMap[5]=Type({hp: 4, speed: 3, skill: 2, morale: 3, attack: 3, defense: 4, accuracy: 3});\r\n    bonusMap[5]=Type({hp: 3, speed: 1, skill: 0, morale: 0, attack: 0, defense: 0, accuracy: 0});\r\n\r\n    masks=new uint[](6);\r\n    masks[0]=uint(0X3C0000000000000000000000000000000000000000000000);//eyes\r\n    masks[1]=uint(0X3C00000000000000000000000000000000000000);//mouth\r\n    masks[2]=uint(0X3C000000000000000000000000000000);//ears\r\n    masks[3]=uint(0X3C0000000000000000000000);//horn\r\n    masks[4]=uint(0x3C00000000000000);//back\r\n    masks[5]=uint(0x3C000000);//tail\r\n  }\r\n  function getStats(uint id) public view returns (uint,uint,uint,uint){\r\n    var (_genes,_bornAt) = axie.getAxie(id);\r\n    return computeStatsFromGene(_genes);\r\n  }\r\n  function computeStatsFromGene(uint gene) public view returns(uint,uint,uint,uint){\r\n    uint base=uint(gene & 0xF000000000000000000000000000000000000000000000000000000000000000) >> 252;\r\n    uint hp=23+4*typeMap[base].hp;\r\n    uint speed=23+4*typeMap[base].speed;\r\n    uint skill=23+4*typeMap[base].skill;\r\n    uint morale=23+4*typeMap[base].morale;\r\n    uint partType;\r\n    for(uint8 i=0;i<6;i++){\r\n      partType=uint(gene & masks[i]) >> (186-32*i);\r\n      hp+=bonusMap[partType].hp;\r\n      speed+=bonusMap[partType].speed;\r\n      skill+=bonusMap[partType].skill;\r\n      morale+=bonusMap[partType].morale;\r\n    }\r\n    return(hp,speed,skill,morale);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStats\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gene\",\"type\":\"uint256\"}],\"name\":\"computeStatsFromGene\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"GetStats","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cd90e6f33fe1110487bafeb1ddc526b80750ebd0dd30d7f3505e355b3889b4ec"}]}