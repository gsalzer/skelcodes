{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n//LNSB token can be swapped with LNX when LNX ends its sale. \r\n//LNSB token has 1:1 ratio with LNX token\r\n//total number of LNSB is 2,625,000 = 2,500,000(regular sale amount) + 125,000(bonus sale amount)\r\n//LNSB token is bound to transaction hash ( 0x15c8982c85033ef01fe55abefd5f5544b9960777ffd80d178bf9839cfccc814c ) and transaction hash (0x52f28919791119b2a9fcef828618f4e9df3302ae596f997902503d47ef940cd7 )\r\n//transfer of regular sale amount = 0x15c8982c85033ef01fe55abefd5f5544b9960777ffd80d178bf9839cfccc814c\r\n//transfer of bonus sale amount = 0x52f28919791119b2a9fcef828618f4e9df3302ae596f997902503d47ef940cd7\r\n//bound LNX token is owned by seedblock( 0xbCaA9Fb04aBBCD5C39f7681028bdbd597E0d12fD ) until LINIX ends its sale. \r\n//if \"Owner_master\" of LNSB token is not equal to \"Owner_master\" of LNX token, the certain token cannot be swapped with LNX token.\r\n\r\nlibrary SafeMath{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    \t{\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\ncontract Ownable\r\n{\r\n  \taddress public Owner_master;\r\n  \taddress public Owner_creator;\r\n  \taddress public Owner_manager;\r\n\r\n  \tevent ChangeOwner_master(address indexed _from, address indexed _to);\r\n  \tevent ChangeOwner_creator(address indexed _from, address indexed _to);\r\n  \tevent ChangeOwner_manager(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner_master{ \r\n          require(msg.sender == Owner_master);\t_; \t}\r\n  \tmodifier onlyOwner_creator{ \r\n          require(msg.sender == Owner_creator); _; }\r\n  \tmodifier onlyOwner_manager{ \r\n          require(msg.sender == Owner_manager); _; }\r\n  \tconstructor() public { \r\n          Owner_master = msg.sender; }\r\n  \t\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    function transferOwnership_master(address _to) onlyOwner_master public{\r\n        \trequire(_to != Owner_master);\r\n        \trequire(_to != Owner_creator);\r\n        \trequire(_to != Owner_manager);\r\n        \trequire(_to != address(0x0));\r\n\r\n\t\taddress from = Owner_master;\r\n  \t    \tOwner_master = _to;\r\n  \t    \r\n  \t    \temit ChangeOwner_master(from, _to);}\r\n\r\n  \tfunction transferOwner_creator(address _to) onlyOwner_master public{\r\n\t        require(_to != Owner_master);\r\n        \trequire(_to != Owner_creator);\r\n        \trequire(_to != Owner_manager);\r\n\t        require(_to != address(0x0));\r\n\r\n\t\taddress from = Owner_creator;        \r\n\t    \tOwner_creator = _to;\r\n        \r\n    \t\temit ChangeOwner_creator(from, _to);}\r\n\r\n  \tfunction transferOwner_manager(address _to) onlyOwner_master public{\r\n\t        require(_to != Owner_master);\r\n\t        require(_to != Owner_creator);\r\n        \trequire(_to != Owner_manager);\r\n\t        require(_to != address(0x0));\r\n        \t\r\n\t\taddress from = Owner_manager;\r\n    \t\tOwner_manager = _to;\r\n        \r\n\t    \temit ChangeOwner_manager(from, _to);}\r\n}\r\n\r\ncontract Helper\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    function totalSupply() view public returns (uint _supply);\r\n    function balanceOf( address _who ) public view returns (uint _value);\r\n    function transfer( address _to, uint _value) public returns (bool _success);\r\n    function approve( address _spender, uint _value ) public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\r\n}\r\n\r\ncontract LINIX_Seedblock is Helper, Ownable\r\n{\r\n    using SafeMath for uint;\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    \r\n    uint constant private zeroAfterDecimal = 10**18;\r\n    \r\n    uint constant public maxSupply             = 2625000 * zeroAfterDecimal;\r\n    \r\n    uint constant public maxSupply_SeedBlock        =   2625000 * zeroAfterDecimal;\r\n\r\n    \r\n    uint public issueToken_Total;\r\n    \r\n    uint public issueToken_SeedBlock;\r\n    \r\n    uint public burnTokenAmount;\r\n    \r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n\r\n    bool public tokenLock = true;\r\n    bool public saleTime = true;\r\n    uint public endSaleTime = 0;\r\n    \r\n    event Burn(address indexed _from, uint _value);\r\n    \r\n    event Issue_SeedBlock(address indexed _to, uint _tokens);\r\n    \r\n    event TokenUnLock(address indexed _to, uint _tokens);\r\n\r\n    \r\n    constructor() public\r\n    {\r\n        name        = \"LNXSB\";\r\n        decimals    = 18;\r\n        symbol      = \"LNSB\";\r\n        \r\n        issueToken_Total      = 0;\r\n        \r\n        issueToken_SeedBlock     = 0;\r\n\r\n        \r\n        require(maxSupply == maxSupply_SeedBlock);\r\n\r\n    }\r\n    \r\n    // ERC - 20 Interface -----\r\n\r\n    function totalSupply() view public returns (uint) {\r\n        return issueToken_Total;}\r\n    \r\n    function balanceOf(address _who) view public returns (uint) {\r\n        uint balance = balances[_who];\r\n        \r\n        return balance;}\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool) {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;}\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool){\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        approvals[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true; }\r\n    \r\n    function allowance(address _owner, address _spender) view public returns (uint) {\r\n        return approvals[_owner][_spender];}\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n        \r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;}\r\n    \r\n    // -----\r\n    \r\n    // Issue Function -----\r\n\r\n\r\n    function issue_noVesting_Public(address _to, uint _value) onlyOwner_creator public\r\n    {\r\n        uint tokens = _value * zeroAfterDecimal;\r\n        require(maxSupply_SeedBlock >= issueToken_SeedBlock.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        issueToken_Total = issueToken_Total.add(tokens);\r\n        issueToken_SeedBlock = issueToken_SeedBlock.add(tokens);\r\n        \r\n        emit Issue_SeedBlock(_to, tokens);\r\n    }    \r\n    \r\n       // Lock Function -----\r\n    \r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == Owner_manager)\r\n        {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    function setTokenUnlock() onlyOwner_manager public\r\n    {\r\n        require(tokenLock == true);\r\n        require(saleTime == false);\r\n        \r\n        tokenLock = false;\r\n    }\r\n    \r\n    function setTokenLock() onlyOwner_manager public\r\n    {\r\n        require(tokenLock == false);\r\n        \r\n        tokenLock = true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // ETC / Burn Function -----\r\n    \r\n    function () payable external\r\n    {\r\n        revert();\r\n    }\r\n    \r\n    function endSale() onlyOwner_manager public\r\n    {\r\n        require(saleTime == true);\r\n        \r\n        saleTime = false;\r\n        \r\n        uint time = now;\r\n        \r\n        endSaleTime = time;\r\n        \r\n    }\r\n    \r\n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner_manager public\r\n    {\r\n\r\n        if(_contract == address(0x0))\r\n        {\r\n            uint eth = _value.mul(10 ** _decimals);\r\n            msg.sender.transfer(eth);\r\n        }\r\n        else\r\n        {\r\n            uint tokens = _value.mul(10 ** _decimals);\r\n            Helper(_contract).transfer(msg.sender, tokens);\r\n            \r\n            emit Transfer(address(0x0), msg.sender, tokens);\r\n        }\r\n    }\r\n    \r\n    function burnToken(uint _value) onlyOwner_manager public\r\n    {\r\n        uint tokens = _value * zeroAfterDecimal;\r\n        \r\n        require(balances[msg.sender] >= tokens);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        \r\n        burnTokenAmount = burnTokenAmount.add(tokens);\r\n        issueToken_Total = issueToken_Total.sub(tokens);\r\n        \r\n        emit Burn(msg.sender, tokens);\r\n    }\r\n    \r\n    function close() onlyOwner_master public\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    // -----\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_creator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply_SeedBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership_master\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner_creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueToken_Total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"issue_noVesting_Public\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwner_manager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Issue_SeedBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_master\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_creator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner_manager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LINIX_Seedblock","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://abfa36568be779c89306868881a59c74ae2ea0ebc4c6460b9eb67b1f5d96bdcb"}]}