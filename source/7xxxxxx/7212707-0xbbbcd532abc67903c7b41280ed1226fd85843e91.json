{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *  The Consumer Contract Wallet\r\n *  Copyright (C) 2018 The Contract Wallet Company Limited\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n\r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n */\r\n\r\npragma solidity ^0.4.25;\r\n\r\n/// @title The Controller interface provides access to an external list of controllers.\r\ninterface IController {\r\n    function isController(address) external view returns (bool);\r\n}\r\n\r\n/// @title Controller stores a list of controller addresses that can be used for authentication in other contracts.\r\ncontract Controller is IController {\r\n    event AddedController(address _sender, address _controller);\r\n    event RemovedController(address _sender, address _controller);\r\n\r\n    mapping (address => bool) private _isController;\r\n    uint private _controllerCount;\r\n\r\n    /// @dev Constructor initializes the list of controllers with the provided address.\r\n    /// @param _account address to add to the list of controllers.\r\n    constructor(address _account) public {\r\n        _addController(_account);\r\n    }\r\n\r\n    /// @dev Checks if message sender is a controller.\r\n    modifier onlyController() {\r\n        require(isController(msg.sender), \"sender is not a controller\");\r\n        _;\r\n    }\r\n\r\n    /// @dev Add a new controller to the list of controllers.\r\n    /// @param _account address to add to the list of controllers.\r\n    function addController(address _account) external onlyController {\r\n        _addController(_account);\r\n    }\r\n\r\n    /// @dev Remove a controller from the list of controllers.\r\n    /// @param _account address to remove from the list of controllers.\r\n    function removeController(address _account) external onlyController {\r\n        _removeController(_account);\r\n    }\r\n\r\n    /// @return true if the provided account is a controller.\r\n    function isController(address _account) public view returns (bool) {\r\n        return _isController[_account];\r\n    }\r\n\r\n    /// @return the current number of controllers.\r\n    function controllerCount() public view returns (uint) {\r\n        return _controllerCount;\r\n    }\r\n\r\n    /// @dev Internal-only function that adds a new controller.\r\n    function _addController(address _account) internal {\r\n        require(!_isController[_account], \"provided account is already a controller\");\r\n        _isController[_account] = true;\r\n        _controllerCount++;\r\n        emit AddedController(msg.sender, _account);\r\n    }\r\n\r\n    /// @dev Internal-only function that removes an existing controller.\r\n    function _removeController(address _account) internal {\r\n        require(_isController[_account], \"provided account is not a controller\");\r\n        require(_controllerCount > 1, \"cannot remove the last controller\");\r\n        _isController[_account] = false;\r\n        _controllerCount--;\r\n        emit RemovedController(msg.sender, _account);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"controllerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"AddedController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"RemovedController\",\"type\":\"event\"}]","ContractName":"Controller","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004d96a329d37fe41c89f4f4fc185ba7b5a1de6078","Library":"","SwarmSource":"bzzr://c96020e23dcee2222178455c38bbb26342d9d672dc5dab3fb608f161dbcb415c"}]}