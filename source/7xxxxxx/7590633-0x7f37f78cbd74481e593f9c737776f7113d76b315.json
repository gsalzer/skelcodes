{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Token {\r\n    function balanceOf(address) public view returns (uint);\r\n}\r\n\r\n\r\ncontract BalanceChecker {\r\n\r\n    function tokenBalance(address user, address token) public view returns (uint) {\r\n        // check if token is actually a contract\r\n        uint256 tokenCode;\r\n        assembly { tokenCode := extcodesize(token) } // contract code size\r\n\r\n        // is it a contract and does it implement balanceOf\r\n        if (tokenCode > 0 && token.call(bytes4(0x70a08231), user)) {\r\n            return Token(token).balanceOf(user);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function balances(address user, address[] tokens) external view returns (uint[]) {\r\n        uint[] memory addrBalances = new uint[](tokens.length);\r\n\r\n        for(uint i = 0; i < tokens.length; i++) {\r\n            addrBalances[i] = tokenBalance(user, tokens[i]);\r\n        }\r\n        return addrBalances;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BalanceChecker","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d431490e91fedb511b1533f21c2c0258cc968d5ee4ed72ea36608bea41a521cf"}]}