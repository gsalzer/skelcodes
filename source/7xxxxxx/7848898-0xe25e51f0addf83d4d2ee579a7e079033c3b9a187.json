{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.4;\r\n \r\ncontract IMigrationContract {\r\n    function migrate(address addr, uint256 nas) public returns (bool success);\r\n}\r\n \r\ncontract SafeMath {\r\n    function safeAdd(uint256 x, uint256 y) internal returns(uint256) {\r\n        uint256 z = x + y;\r\n        assert((z >= x) && (z >= y));\r\n        return z;\r\n    }\r\n \r\n    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {\r\n        assert(x >= y);\r\n        uint256 z = x - y;\r\n        return z;\r\n    }\r\n \r\n    function safeMult(uint256 x, uint256 y) internal returns(uint256) {\r\n        uint256 z = x * y;\r\n        assert((x == 0)||(z/x == y));\r\n        return z;\r\n    }\r\n \r\n}\r\n \r\ncontract Token is SafeMath {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n \r\n \r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n \r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n\t\t\tif ((balances[_to] + _value) <= balances[_to]) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tbalances[msg.sender] = safeSubtract(balances[msg.sender], _value);\r\n\t\t\t\tbalances[_to] = safeAdd(balances[_to], _value);\r\n\t\t\t\temit Transfer(msg.sender, _to, _value);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t\tif (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0 && (balances[_to] + _value) > balances[_to]) {\r\n            balances[_to] = safeAdd(_value, balances[_to]);\r\n            balances[_from] = safeSubtract(balances[_from], _value);\r\n            allowed[_from][msg.sender] = safeSubtract(allowed[_from][msg.sender], _value);\r\n            emit Transfer(_from, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n \r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract OBNToken is StandardToken {\r\n \r\n    // metadata \r\n    string  public constant name = \"Optimal Bargain Nebulae\";\r\n    string  public constant symbol = \"OBN\";\r\n    uint256 public constant decimals = 18;\r\n    string  public version = \"1.0\";\r\n \r\n    // contracts\r\n    address payable public ethFundDeposit;  // Address to withdraw ETH to\r\n    address public newContractAddr;         // New address for updated contract\r\n       \r\n    uint256 public tokenMigrated = 0;     // total number of migrated token\r\n \r\n    // events\r\n    event IncreaseSupply(uint256 _value);\r\n    event DecreaseSupply(uint256 _value);\r\n    event Migrate(address indexed _to, uint256 _value);\r\n \r\n    // transfer token with coin\r\n    function formatDecimals(uint256 _value) internal returns (uint256 ) {\r\n\t\tuint256 value = safeMult(_value, 10 ** decimals);\r\n        return value;\r\n    }\r\n \r\n    // constructor\r\n     constructor(\r\n        address payable _ethFundDeposit,\r\n\t\tuint256 _totalCoin) public \r\n    {\r\n        ethFundDeposit = _ethFundDeposit;             \r\n\t\t\r\n        totalSupply = formatDecimals(_totalCoin);\r\n\t\tbalances[ethFundDeposit] = totalSupply;\r\n    }\r\n\r\n    modifier isOwner()  { require(msg.sender == ethFundDeposit); _; }\r\n \r\n    /// Token overshoot\r\n    function increaseSupply (uint256 _value) isOwner external {\r\n\t\trequire(_value > 0);\r\n        uint256 value = formatDecimals(_value);\r\n\t\trequire(totalSupply + value > totalSupply);\r\n        totalSupply = safeAdd(totalSupply, value);\r\n\t\tbalances[ethFundDeposit] = safeAdd(balances[ethFundDeposit], value);\r\n        emit IncreaseSupply(_value);\r\n    }\r\n \r\n    /// decrease TotalSupply from owner\r\n    function decreaseSupply (uint256 _value) isOwner external {\r\n\t\trequire(_value > 0);\r\n        uint256 value = formatDecimals(_value);\r\n\t\trequire(value <= balances[ethFundDeposit]);\r\n        require(value  <= totalSupply);\r\n\t\t\r\n\t\ttotalSupply = safeSubtract(totalSupply, value);\r\n\t\tbalances[ethFundDeposit] = safeSubtract(balances[ethFundDeposit], value);\r\n\t\t\r\n        emit DecreaseSupply(_value);\r\n    }\r\n \r\n    /// Store the new address of the contract\r\n    function setMigrateContract(address _newContractAddr) isOwner external {\r\n        require(_newContractAddr != newContractAddr);\r\n        newContractAddr = _newContractAddr;\r\n    }\r\n\t\r\n\t/// Migrate contract to given address\r\n    function migrate() external {\r\n        require(newContractAddr != address(0x0));\r\n \r\n        uint256 tokens = balances[msg.sender];\r\n        require(tokens != 0);\r\n \r\n        balances[msg.sender] = 0;\r\n        tokenMigrated = safeAdd(tokenMigrated, tokens);\r\n \r\n        IMigrationContract newContract = IMigrationContract(newContractAddr);\r\n        if(!newContract.migrate(msg.sender, tokens))\r\n\t\t\trevert(\"New contract migrates failed.\"); \r\n        emit Migrate(msg.sender, tokens);               // log it\r\n    }\r\n \r\n    /// Set new owner's address\r\n    function changeOwner(address payable _newFundDeposit) isOwner external {\r\n        require(_newFundDeposit != address(0x0));\r\n        ethFundDeposit = _newFundDeposit;\r\n    }\r\n\t\r\n\t/// transfer balance to owner\r\n\tfunction withdrawEther() isOwner external returns (bool success){\r\n\t\trequire(address(this).balance != 0);\r\n        return ethFundDeposit.send(address(this).balance);\r\n\t}\r\n\t\r\n\t/// can accept ether\r\n\tfunction() payable external{\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newContractAddr\",\"type\":\"address\"}],\"name\":\"setMigrateContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundDeposit\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethFundDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethFundDeposit\",\"type\":\"address\"},{\"name\":\"_totalCoin\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"IncreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"DecreaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"OBNToken","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000011d622b05ba8aa29e4eb6aea7bf9222277432c6000000000000000000000000000000000000000000000000000000002540be400","Library":"","SwarmSource":"bzzr://968cd21d25fab4ab33d73b3a0b48e7d92f2a51c9c9c5f2ee0fe7da745c99725b"}]}