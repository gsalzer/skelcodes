{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Source Code first verified at https://etherscan.io on Monday, April 15, 2019\r\n (UTC) */\r\n\r\npragma solidity ^0.5.8;\r\n\r\ncontract ERC20Interface {\r\n    function balanceOf(address from) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool);\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function burn(uint256 amount) public;\r\n}\r\n\r\n\r\ncontract UsernameRegistry {\r\n\r\nevent Register(address indexed _owner, bytes32 _name, bytes32 _userId);\r\n\r\nERC20Interface public manaToken;\r\nuint256 public price = 100000000000000000000;\r\nmapping (bytes32 => address) nameToAddress;\r\nmapping (bytes32 => address) userIdToAddress;\r\nmapping (address => bytes32) public name;\r\naddress public owner;\r\n\r\nconstructor(ERC20Interface _mana) public {\r\n    manaToken = _mana;\r\n    owner = msg.sender;\r\n}\r\n\r\nmodifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n}\r\n\r\nfunction registerUsername(address _targetAddress, bytes32 _name, bytes32 _userId) onlyOwner external {\r\n    _requireBalance();\r\n    require(isNameAvailable(_name), \"The name was already taken\");\r\n    require(isUserIdAvailable(_userId), \"The userId already has a name\");\r\n    \r\n    manaToken.transferFrom(_targetAddress, address(this), price);\r\n    manaToken.burn(price);\r\n\r\n    nameToAddress[_name] = _targetAddress;\r\n    userIdToAddress[_userId] = _targetAddress;\r\n    name[_targetAddress] = _name;\r\n\r\n    emit Register(_targetAddress, _userId, _name);\r\n}\r\n\r\nfunction isNameAvailable(bytes32 _name) public view returns (bool) {\r\n    return nameToAddress[_name] == address(0);\r\n}\r\nfunction isUserIdAvailable(bytes32 _name) public view returns (bool) {\r\n    return userIdToAddress[_name] == address(0);\r\n}\r\n\r\n// Lack of security (set only owner)\r\nfunction setPrice(uint256 _price) onlyOwner public {\r\n    price = _price;\r\n}\r\n\r\nfunction _requireBalance() internal view {\r\n    require(\r\n        manaToken.balanceOf(msg.sender) >= price,\r\n        \"Insufficient funds\"\r\n    );\r\n    require(\r\n        manaToken.allowance(msg.sender, address(this)) >= price,\r\n        \"The contract is not authorized to use MANA on sender behalf\"\r\n    );        \r\n}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"isNameAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_userId\",\"type\":\"bytes32\"}],\"name\":\"registerUsername\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manaToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"isUserIdAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_mana\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_userId\",\"type\":\"bytes32\"}],\"name\":\"Register\",\"type\":\"event\"}]","ContractName":"UsernameRegistry","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000f5d2fb29fb7d3cfee444a200298f468908cc942","Library":"","SwarmSource":"bzzr://0270878109c69d12847b741ee55c008d614dd697c62125578615a9590a127ad7"}]}