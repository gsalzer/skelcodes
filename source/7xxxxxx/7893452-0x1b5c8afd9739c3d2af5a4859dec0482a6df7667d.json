{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract HomesCoin is ERC20Interface {\r\n\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;\r\n    uint price;\r\n    \r\n    address owner;\r\n\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor() public {\r\n        symbol = \"HOMt0\";\r\n        name = \"HomesCoin_test0\";\r\n        decimals = 18;\r\n        _totalSupply = 1000000 * 10**uint(decimals);\r\n        owner = msg.sender;\r\n        balances[owner] = _totalSupply;\r\n        price=100;\r\n        emit Transfer(owner, address(0), _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        require(to!=address(0));\r\n        require(tokens<=balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender] - tokens;\r\n        balances[to] = balances[to] + tokens;\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        require(to!=address(0));\r\n        require(balances[from]>=tokens);\r\n        require(allowed[from][msg.sender]>=tokens);\r\n        balances[from] = balances[from] - tokens;\r\n        allowed[from][msg.sender] = allowed[from][msg.sender] - tokens;\r\n        balances[to] = balances[to] + tokens;\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    function mint(address target, uint amt) public{\r\n        require(msg.sender==owner);\r\n        balances[target] += amt;\r\n        emit Transfer(target, address(0), amt);\r\n    }\r\n    function burn(uint amt) public{\r\n        require(msg.sender==owner);\r\n        require(balances[owner]>=amt);\r\n        balances[owner]-=amt;\r\n    }\r\n    \r\n    function destroy() public {\r\n        require(msg.sender==owner);\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    event HomeSaleEvent(uint64 houseid, uint8 day, uint8 month, uint16 year, uint64 price100, string source);\r\n    \r\n    mapping(uint64=>string) public addresses;\r\n    mapping(uint64=>uint32) public sqfts;\r\n    mapping(uint64=>uint8) public bedrooms;\r\n    mapping(uint64=>uint8) public bathrooms;\r\n    mapping(uint64=>uint8) public house_type;\r\n    mapping(uint64=>uint16) public year_built;\r\n    mapping(uint64=>uint32) public lot_size;\r\n    mapping(uint64=>uint64) public parcel_num;\r\n    mapping(uint64=>uint32) public zipcode;\r\n    \r\n    uint64 public num_houses = 0;\r\n    \r\n    function makeEvent(uint64 houseid, uint8 day, uint8 month, uint16 year, uint64 price100, string memory source) public{\r\n        require(msg.sender==owner);\r\n        emit HomeSaleEvent(houseid,day,month,year, price100, source);\r\n    }\r\n    function addHouse(string memory adr, uint32 sqft, uint8 bedroom,uint8 bathroom,uint8 h_type, uint16 yr_built, uint32 lotsize, uint64 parcel, uint32 zip) public{\r\n        require(msg.sender==owner);\r\n        require(bytes(adr).length<128);\r\n        addresses[num_houses] = adr;\r\n        sqfts[num_houses]=sqft;\r\n        bedrooms[num_houses]=bedroom;\r\n        bathrooms[num_houses]=bathroom;\r\n        house_type[num_houses]=h_type;\r\n        year_built[num_houses]=yr_built;\r\n        lot_size[num_houses] = lotsize;\r\n        parcel_num[num_houses] = parcel;\r\n        zipcode[num_houses] = zip;\r\n        num_houses++;\r\n    }\r\n    function resetHouseParams(uint64 num_house, uint32 sqft, uint8 bedroom,uint8 bathroom,uint8 h_type, uint16 yr_built, uint32 lotsize, uint64 parcel, uint32 zip) public{\r\n        require(msg.sender==owner);\r\n        sqfts[num_house]=sqft;\r\n        bedrooms[num_house]=bedroom;\r\n        bathrooms[num_house]=bathroom;\r\n        house_type[num_house]=h_type;\r\n        year_built[num_house]=yr_built;\r\n        lot_size[num_house] = lotsize;\r\n        parcel_num[num_house] = parcel;\r\n        zipcode[num_house] = zip;\r\n    }\r\n    \r\n    event DonationEvent(address sender, uint value);\r\n    \r\n    function ()external payable{\r\n        emit DonationEvent(msg.sender,msg.value);\r\n    }\r\n    \r\n    function buy(uint tokens)public payable{\r\n        require(tokens>=100000); // prevents buying and selling absurdly small amounts to cheat the contract arithmetic\r\n        require(msg.value>=price*tokens/100);\r\n        require(allowed[owner][address(0)]>=tokens);\r\n        require(balances[owner]>=tokens);\r\n        require(msg.sender!=owner);\r\n        allowed[owner][address(0)]-=tokens;\r\n        balances[owner]-=tokens;\r\n        balances[msg.sender]+=tokens;\r\n        msg.sender.transfer(msg.value-price*tokens);\r\n    }\r\n    \r\n    function sell(uint tokens)public{\r\n        require(tokens>100000); // prevents buying and selling absurdly small amounts to cheat the contract arithmetic\r\n        require(balances[msg.sender]>=tokens);\r\n        require(address(this).balance>price*tokens/100);\r\n        require(msg.sender!=owner);\r\n        allowed[owner][address(0)]+=tokens;\r\n        balances[owner]+=tokens;\r\n        balances[msg.sender]-=tokens;\r\n        msg.sender.transfer(price*tokens);\r\n    }\r\n    \r\n    function setPrice(uint newPrice) public{\r\n        require(msg.sender==owner);\r\n        price = newPrice;\r\n    }\r\n    \r\n    function collect(uint amount) public{\r\n        require(msg.sender==owner);\r\n        require(address(this).balance>=amount+1 ether);\r\n        msg.sender.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"houseid\",\"type\":\"uint64\"},{\"name\":\"day\",\"type\":\"uint8\"},{\"name\":\"month\",\"type\":\"uint8\"},{\"name\":\"year\",\"type\":\"uint16\"},{\"name\":\"price100\",\"type\":\"uint64\"},{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"makeEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"bathrooms\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adr\",\"type\":\"string\"},{\"name\":\"sqft\",\"type\":\"uint32\"},{\"name\":\"bedroom\",\"type\":\"uint8\"},{\"name\":\"bathroom\",\"type\":\"uint8\"},{\"name\":\"h_type\",\"type\":\"uint8\"},{\"name\":\"yr_built\",\"type\":\"uint16\"},{\"name\":\"lotsize\",\"type\":\"uint32\"},{\"name\":\"parcel\",\"type\":\"uint64\"},{\"name\":\"zip\",\"type\":\"uint32\"}],\"name\":\"addHouse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"lot_size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"bedrooms\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"year_built\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"num_houses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"parcel_num\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"zipcode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"sqfts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num_house\",\"type\":\"uint64\"},{\"name\":\"sqft\",\"type\":\"uint32\"},{\"name\":\"bedroom\",\"type\":\"uint8\"},{\"name\":\"bathroom\",\"type\":\"uint8\"},{\"name\":\"h_type\",\"type\":\"uint8\"},{\"name\":\"yr_built\",\"type\":\"uint16\"},{\"name\":\"lotsize\",\"type\":\"uint32\"},{\"name\":\"parcel\",\"type\":\"uint64\"},{\"name\":\"zip\",\"type\":\"uint32\"}],\"name\":\"resetHouseParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"house_type\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"houseid\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"day\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"month\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"year\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"price100\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"source\",\"type\":\"string\"}],\"name\":\"HomeSaleEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DonationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"HomesCoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8f11565e3eb90c309acf5e02288cae421d68b37cf6e6a28040bad4cab3d04421"}]}