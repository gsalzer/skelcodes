{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\n/**\r\n * Copy right (c) Donex UG (haftungsbeschraenkt)\r\n * All rights reserved\r\n * Version 0.2.1 (BETA)\r\n */\r\n\r\ncontract Withdraw {\r\n\r\n    function amountCreator\r\n    (\r\n        bool makerLong,\r\n        uint256 stakeMemory,\r\n        uint256 settlementPrice,\r\n        uint256 strikePrice,\r\n        uint256 totalStakeCounterparties\r\n    )\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        uint256 profit;\r\n        // Long wins:\r\n        if (settlementPrice > strikePrice)\r\n        {\r\n            profit = ((settlementPrice * totalStakeCounterparties * 2) / strikePrice) - (totalStakeCounterparties * 2);\r\n            if (profit > totalStakeCounterparties)\r\n                profit = totalStakeCounterparties;\r\n            if (makerLong)\r\n            {\r\n                if (profit > (totalStakeCounterparties * 995) / 1000)\r\n                    profit = (totalStakeCounterparties * 995) / 1000;\r\n                return stakeMemory + profit;\r\n            }\r\n            else\r\n            {\r\n                return stakeMemory - profit;\r\n            }\r\n        }\r\n        // Short wins:\r\n        else\r\n        {\r\n            profit = (totalStakeCounterparties * 2) - ((settlementPrice * totalStakeCounterparties * 2) / strikePrice);\r\n            if (profit > totalStakeCounterparties)\r\n                profit = totalStakeCounterparties;\r\n            if (makerLong)\r\n            {\r\n                return stakeMemory - profit;\r\n            }\r\n            else\r\n            {\r\n                if (profit > (totalStakeCounterparties * 995) / 1000)\r\n                    profit = (totalStakeCounterparties * 995) / 1000;\r\n                return stakeMemory + profit;\r\n            }\r\n        }\r\n    }\r\n\r\n    function amountCounterparty\r\n    (\r\n        bool makerLong,\r\n        uint256 stakeMemory,\r\n        uint256 settlementPrice,\r\n        uint256 strikePrice\r\n    )\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        uint256 profit;\r\n        // Long wins:\r\n        if (settlementPrice > strikePrice)\r\n        {\r\n            profit = ((settlementPrice * stakeMemory * 2) / strikePrice) - (stakeMemory * 2);\r\n            if (profit > stakeMemory)\r\n                profit = stakeMemory;\r\n            if (!makerLong)\r\n            {\r\n                return (stakeMemory + profit) - (stakeMemory / 200);\r\n            }\r\n            else\r\n            {\r\n                if (profit < (stakeMemory * 995) / 1000)\r\n                {\r\n                    if ((stakeMemory - profit) - (stakeMemory / 200) > 0)\r\n                        return (stakeMemory - profit) - (stakeMemory / 200) - 1;  // Compensate possible rounding errors\r\n                }\r\n            }\r\n        }\r\n        // Short wins:\r\n        else\r\n        {\r\n            profit = (stakeMemory * 2) - ((settlementPrice * stakeMemory * 2) / strikePrice);\r\n            if (profit > stakeMemory)\r\n                profit = stakeMemory;\r\n            if (!makerLong)\r\n            {\r\n                if (profit < (stakeMemory * 995) / 1000)\r\n                {\r\n                    if ((stakeMemory - profit) - (stakeMemory / 200) > 0)\r\n                        return (stakeMemory - profit) - (stakeMemory / 200) - 1;  // Compensate possible rounding errors\r\n                }\r\n            }\r\n            else\r\n            {\r\n                return (stakeMemory + profit) - (stakeMemory / 200);\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"makerLong\",\"type\":\"bool\"},{\"name\":\"stakeMemory\",\"type\":\"uint256\"},{\"name\":\"settlementPrice\",\"type\":\"uint256\"},{\"name\":\"strikePrice\",\"type\":\"uint256\"},{\"name\":\"totalStakeCounterparties\",\"type\":\"uint256\"}],\"name\":\"amountCreator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"makerLong\",\"type\":\"bool\"},{\"name\":\"stakeMemory\",\"type\":\"uint256\"},{\"name\":\"settlementPrice\",\"type\":\"uint256\"},{\"name\":\"strikePrice\",\"type\":\"uint256\"}],\"name\":\"amountCounterparty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"Withdraw","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d4f4e84efb9fb671041ad9b4b0dc6ca7ea455aebb3668f2fa93c235c2bd3e7eb"}]}