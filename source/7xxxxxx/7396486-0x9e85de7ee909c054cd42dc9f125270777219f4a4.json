{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two unsigned integers, reverts on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two unsigned integers, reverts on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n    * reverts when dividing by zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable\r\n{\r\n    bool private stopped;\r\n    address private _owner;\r\n    address private _master;\r\n\r\n    event Stopped();\r\n    event Started();\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);\r\n\r\n    constructor () internal\r\n    {\r\n        stopped = false;\r\n        _owner = msg.sender;\r\n        _master = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n        emit MasterRoleTransferred(address(0), _master);\r\n    }\r\n\r\n    function owner() public view returns (address)\r\n    {\r\n        return _owner;\r\n    }\r\n\r\n    function master() public view returns (address)\r\n    {\r\n        return _master;\r\n    }\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    modifier onlyMaster()\r\n    {\r\n        require(isMaster() || isOwner());\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhenNotStopped()\r\n    {\r\n        require(!isStopped());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool)\r\n    {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function isMaster() public view returns (bool)\r\n    {\r\n        return msg.sender == _master;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external onlyOwner\r\n    {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function transferMasterRole(address newMaster) external onlyOwner\r\n    {\r\n        _transferMasterRole(newMaster);\r\n    }\r\n\r\n    function isStopped() public view returns (bool)\r\n    {\r\n        return stopped;\r\n    }\r\n\r\n    function stop() public onlyOwner\r\n    {\r\n        _stop();\r\n    }\r\n\r\n    function start() public onlyOwner\r\n    {\r\n        _start();\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal\r\n    {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function _transferMasterRole(address newMaster) internal\r\n    {\r\n        require(newMaster != address(0));\r\n        emit MasterRoleTransferred(_master, newMaster);\r\n        _master = newMaster;\r\n    }\r\n\r\n    function _stop() internal\r\n    {\r\n        emit Stopped();\r\n        stopped = true;\r\n    }\r\n\r\n    function _start() internal\r\n    {\r\n        emit Started();\r\n        stopped = false;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BaseToken is IERC20, Ownable\r\n{\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping ( address => uint256 )) public approvals;\r\n\r\n    uint256 public totalTokenSupply;\r\n\r\n    function totalSupply() view external returns (uint256)\r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n\r\n    function balanceOf(address _who) view external returns (uint256)\r\n    {\r\n        return balances[_who];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) external onlyWhenNotStopped returns (bool)\r\n    {\r\n        require(balances[msg.sender] >= _value);\r\n        require(_to != address(0));\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) external onlyWhenNotStopped returns (bool)\r\n    {\r\n        require(balances[msg.sender] >= _value);\r\n\r\n        approvals[msg.sender][_spender] = _value;\r\n\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) view external returns (uint256)\r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) external onlyWhenNotStopped returns (bool)\r\n    {\r\n        require(_from != address(0));\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n\r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract CreetToken is BaseToken\r\n{\r\n    using SafeMath for uint256;\r\n\r\n    string public name;\r\n    uint256 public decimals;\r\n    string public symbol;\r\n\r\n    uint256 constant private E18 = 1000000000000000000;\r\n    uint256 constant private MAX_TOKEN_SUPPLY = 5000000000;\r\n\r\n    event Deposit(address indexed from, address to, uint256 value);\r\n    event ReferralDrop(address indexed from, address indexed to1, uint256 value1, address indexed to2, uint256 value2);\r\n\r\n    constructor() public\r\n    {\r\n        name        = 'Creet';\r\n        decimals    = 18;\r\n        symbol      = 'CREET';\r\n\r\n        totalTokenSupply = MAX_TOKEN_SUPPLY * E18;\r\n\r\n        balances[msg.sender] = totalTokenSupply;\r\n    }\r\n\r\n    function deposit(address _to, uint256 _value) external returns (bool)\r\n    {\r\n        require(balances[msg.sender] >= _value);\r\n        require(_to != address(0));\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        emit Deposit(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function referralDrop2(address _to, uint256 _value, address _sale, uint256 _fee) external onlyWhenNotStopped returns (bool)\r\n    {\r\n        require(balances[msg.sender] >= _value + _fee);\r\n        require(_to != address(0));\r\n        require(_sale != address(0));\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value + _fee);\r\n        balances[_to] = balances[_to].add(_value);\r\n        balances[_sale] = balances[_sale].add(_fee);\r\n\r\n        emit ReferralDrop(msg.sender, _to, _value, address(0), 0);\r\n\r\n        return true;\r\n    }\r\n\r\n    function referralDrop3(address _to1, uint256 _value1, address _to2, uint256 _value2, address _sale, uint256 _fee) external onlyWhenNotStopped returns (bool)\r\n    {\r\n        require(balances[msg.sender] >= _value1 + _value2 + _fee);\r\n        require(_to1 != address(0));\r\n        require(_to2 != address(0));\r\n        require(_sale != address(0));\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value1 + _value2 + _fee);\r\n        balances[_to1] = balances[_to1].add(_value1);\r\n        balances[_to2] = balances[_to2].add(_value2);\r\n        balances[_sale] = balances[_sale].add(_fee);\r\n\r\n        emit ReferralDrop(msg.sender, _to1, _value1, _to2, _value2);\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_sale\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"referralDrop2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMaster\",\"type\":\"address\"}],\"name\":\"transferMasterRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to1\",\"type\":\"address\"},{\"name\":\"_value1\",\"type\":\"uint256\"},{\"name\":\"_to2\",\"type\":\"address\"},{\"name\":\"_value2\",\"type\":\"uint256\"},{\"name\":\"_sale\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"referralDrop3\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value1\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value2\",\"type\":\"uint256\"}],\"name\":\"ReferralDrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Started\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousMaster\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newMaster\",\"type\":\"address\"}],\"name\":\"MasterRoleTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CreetToken","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://83c08b66468a9c84bb84403eaf7dfac870d62a892ae5826abdfe61d2e9d0ba65"}]}