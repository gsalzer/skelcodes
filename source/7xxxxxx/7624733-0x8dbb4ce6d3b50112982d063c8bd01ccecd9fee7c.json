{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IOwnable {\r\n\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerChanged(address _oldOwner, address _newOwner);\r\n\r\n    function changeOwner(address _newOwner) public;\r\n    function acceptOwnership() public;\r\n}\r\n\r\ncontract IVerificationList is IOwnable {\r\n\r\n    event Accept(address _address);\r\n    event Reject(address _address);\r\n    event SendToCheck(address _address);\r\n    event RemoveFromList(address _address);\r\n    \r\n    function isAccepted(address _address) public view returns (bool);\r\n    function isRejected(address _address) public view returns (bool);\r\n    function isOnCheck(address _address) public view returns (bool);\r\n    function isInList(address _address) public view returns (bool);\r\n    function isNotInList(address _address) public view returns (bool);\r\n    function isAcceptedOrNotInList(address _address) public view returns (bool);\r\n    function getState(address _address) public view returns (uint8);\r\n    \r\n    function accept(address _address) public;\r\n    function reject(address _address) public;\r\n    function toCheck(address _address) public;\r\n    function remove(address _address) public;\r\n}\r\n\r\ncontract Ownable is IOwnable {\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnerChanged(address(0), owner);\r\n    }\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerChanged(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract VerificationList is IVerificationList, Ownable {\r\n\r\n    enum States { NOT_IN_LIST, ON_CHECK, ACCEPTED, REJECTED }\r\n\r\n    mapping (address => States) private states;\r\n\r\n    modifier inList(address _address) {\r\n        require(isInList(_address));\r\n        _;\r\n    }\r\n\r\n    function isAccepted(address _address) public view returns (bool) {\r\n        return states[_address] == States.ACCEPTED;\r\n    }\r\n\r\n    function isRejected(address _address) public view returns (bool) {\r\n        return states[_address] == States.REJECTED;\r\n    }\r\n\r\n    function isOnCheck(address _address) public view returns (bool) {\r\n        return states[_address] == States.ON_CHECK;\r\n    }\r\n\r\n    function isInList(address _address) public view returns (bool) {\r\n        return states[_address] != States.NOT_IN_LIST;\r\n    }\r\n    \r\n    function isNotInList(address _address) public view returns (bool) {\r\n        return states[_address] == States.NOT_IN_LIST;\r\n    }\r\n\r\n    function isAcceptedOrNotInList(address _address) public view returns (bool) {\r\n        return states[_address] == States.NOT_IN_LIST || states[_address] == States.ACCEPTED;\r\n    }\r\n    \r\n    function getState(address _address) public view returns (uint8) {\r\n        return uint8(states[_address]);\r\n    }\r\n\r\n    function accept(address _address) public onlyOwner inList(_address) {\r\n        if (isAccepted(_address)) return;\r\n        states[_address] = States.ACCEPTED;\r\n        emit Accept(_address);\r\n    }\r\n\r\n    function reject(address _address) public onlyOwner inList(_address) {\r\n        if (isRejected(_address)) return;\r\n        states[_address] = States.REJECTED;\r\n        emit Reject(_address);\r\n    }\r\n\r\n    function toCheck(address _address) public onlyOwner {\r\n        if (isOnCheck(_address)) return;\r\n        states[_address] = States.ON_CHECK;\r\n        emit SendToCheck(_address);\r\n    }\r\n\r\n    function remove(address _address) public onlyOwner {\r\n        if (isNotInList(_address)) return;\r\n        states[_address] = States.NOT_IN_LIST;\r\n        emit RemoveFromList(_address);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"toCheck\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isNotInList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRejected\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"reject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAcceptedOrNotInList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAccepted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOnCheck\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isInList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Accept\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Reject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SendToCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"RemoveFromList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"VerificationList","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9aa78a77a4d6bda2d059cb43eb48f951174400c12e198c53753cc4fead7b8c6b"}]}