{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n\r\n/// @title SafeMath\r\n/// @dev Math operations with safety checks that throw on error\r\nlibrary SafeMath {\r\n\r\n    /// @dev Multiply two numbers, throw on overflow.\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /// @dev Substract two numbers, throw on overflow (i.e. if subtrahend is greater than minuend).\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /// @dev Add two numbers, throw on overflow.\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/// @title Ownable\r\n/// @dev Provide a modifier that permits only a single user to call the function\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /// @dev Set the original `owner` of the contract to the sender account.\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /// @dev Require that the modified function is only called by `owner`\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /// @dev Allow `owner` to transfer control of the contract to `newOwner`.\r\n    /// @param newOwner The address to transfer ownership to.\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n/// @notice Abstract contract for vesting schedule\r\n/// @notice Implementations must provide vestedPercent()\r\ncontract Schedule is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    /// The timestamp of the start of vesting\r\n    uint256 public tokenReleaseDate;\r\n\r\n    /// The timestamp of the vesting release interval\r\n    uint256 public releaseInterval = 30 days;\r\n\r\n    constructor(uint256 _tokenReleaseDate) public {\r\n        tokenReleaseDate = _tokenReleaseDate;\r\n    }\r\n\r\n    /// @notice Update the date that PLG trading unlocks\r\n    /// @param newReleaseDate The new PLG release timestamp\r\n    function setTokenReleaseDate(uint256 newReleaseDate) public onlyOwner {\r\n        tokenReleaseDate = newReleaseDate;\r\n    }\r\n\r\n    /// @notice Calculates the percent of tokens that may be claimed at this time\r\n    /// @return Number of tokens vested\r\n    function vestedPercent() public view returns (uint256);\r\n\r\n    /// @notice Helper for calculating the time of a specific release\r\n    /// @param intervals The number of interval periods to calculate a release date for\r\n    /// @return The timestamp of the release date\r\n    function getReleaseTime(uint256 intervals) public view returns (uint256) {\r\n        return tokenReleaseDate.add(releaseInterval.mul(intervals));\r\n    }\r\n}\r\n\r\n/// @title Schedule50\r\n/// @notice Vesting schedule where 40% are released on `tokenReleaseDate` and\r\n/// @notice  10% more vests per `releaseInterval`\r\ncontract Schedule50 is Schedule {\r\n\r\n    constructor(uint256 _tokenReleaseDate) Schedule(_tokenReleaseDate) public {\r\n    }\r\n\r\n    /// @notice Calculates the percent of tokens that may be claimed at this time\r\n    /// @return Number of tokens vested\r\n    function vestedPercent() public view returns (uint256) {\r\n        uint256 percentReleased = 0;\r\n\r\n        if(now < tokenReleaseDate) {\r\n            percentReleased = 0;\r\n\r\n        } else if(now >= getReleaseTime(6)) {\r\n            percentReleased = 100;\r\n\r\n        } else if(now >= getReleaseTime(5)) {\r\n            percentReleased = 90;\r\n\r\n        } else if(now >= getReleaseTime(4)) {\r\n            percentReleased = 80;\r\n\r\n        } else if(now >= getReleaseTime(3)) {\r\n            percentReleased = 70;\r\n\r\n        } else if(now >= getReleaseTime(2)) {\r\n            percentReleased = 60;\r\n\r\n        } else if(now >= getReleaseTime(1)) {\r\n            percentReleased = 50;\r\n\r\n        } else {\r\n            percentReleased = 40;\r\n        }\r\n        return percentReleased;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokenReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseInterval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"intervals\",\"type\":\"uint256\"}],\"name\":\"getReleaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestedPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newReleaseDate\",\"type\":\"uint256\"}],\"name\":\"setTokenReleaseDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenReleaseDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Schedule50","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005ca15480","Library":"","SwarmSource":"bzzr://a9d6376c274b70809732d1ef7d0a4d54a8a0fdb4b9b8fd3bbe2e37d9988a373e"}]}