{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ninterface tokenRecipient { \r\n    function receiveApproval(address _from, uint256 _value, bytes _extraData) external;\r\n}\r\n\r\n// TODO: 未严密测试\r\n\r\ncontract TronGameGlobalPayToken\r\n{\r\n    address owner; \r\n    bool public canBurn;\r\n    bool public canApproveCall;\r\n    uint8 public decimals = 6;\r\n    uint256 public totalSupply = 2000000000 * (10 ** uint256(decimals));\r\n    string public name = \"TronGameGlobalPayToken\";\r\n    string public symbol = \"GTP\";\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping(address => uint256)) allowed;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Burn(address indexed _from, uint256 _value);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        canBurn = false;\r\n        canApproveCall = false;\r\n        balances[owner] = totalSupply;\r\n    }\r\n\r\n    function setCanBurn(bool _val) external {\r\n        require(msg.sender == owner);\r\n        require(_val != canBurn);\r\n        canBurn = _val;\r\n    }\r\n\r\n    function setCanApproveCall(bool _val) external {\r\n        require(msg.sender == owner);\r\n        require(_val != canApproveCall);\r\n        canApproveCall = _val;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external {\r\n        require(msg.sender == owner);\r\n        require(_newOwner != address(0) && _newOwner != owner);\r\n        owner = _newOwner;\r\n    }\r\n\r\n    function balanceOf(address _owner) external view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) external view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool) {\r\n        require(_value <= allowed[_from][msg.sender]);\r\n        allowed[_from][msg.sender] -= _value;\r\n        return _transfer(_from, _to, _value);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) external returns (bool) {\r\n        return _transfer(msg.sender, _to, _value);     \r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal returns (bool) {\r\n        require(_to != address(0));\r\n        uint256 oldFromVal = balances[_from];\r\n        require(_value > 0 && oldFromVal >= _value);\r\n        uint256 oldToVal = balances[_to];\r\n        uint256 newToVal = oldToVal + _value;\r\n        require(newToVal > oldToVal);\r\n        uint256 newFromVal = oldFromVal - _value;\r\n        balances[_from] = newFromVal;\r\n        balances[_to] = newToVal;\r\n\r\n        assert((oldFromVal + oldToVal) == (newFromVal + newToVal));\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _value) \r\n        external \r\n        returns (bool success) \r\n    {\r\n        require(canBurn == true);\r\n        uint256 oldBalance = balances[msg.sender];\r\n        require(oldBalance >= _value && totalSupply > _value);\r\n        balances[msg.sender] = oldBalance - _value;\r\n        totalSupply = totalSupply - _value;                                \r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n        external\r\n        returns (bool success) \r\n    {\r\n        require(canApproveCall == true);\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"bool\"}],\"name\":\"setCanApproveCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"bool\"}],\"name\":\"setCanBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canApproveCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"TronGameGlobalPayToken","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d85d6f04535cfb05ed78ed9bc0242e74d3ecb660f1e4a9f5c04a6dc7ae02b366"}]}