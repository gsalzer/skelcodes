{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.3;\r\n\r\n// counter.market smart contracts:\r\n//  1) Proxy (this one) - delegatecalls into current exchange code, maintains storage of exchange state\r\n//  2) Registry - stores information on the latest exchange contract version and user approvals\r\n//  3) Treasury - takes custody of funds, moves them between token accounts, authorizing exchange code via Registry\r\n\r\n// Getting current code address is the only thing Proxy needs from Registry.\r\ninterface RegistryInterface {\r\n    function getExchangeContract() external view returns (address);\r\n}\r\n\r\n// Counter contracts are deployed at predefined addresses which can be hardcoded.\r\ncontract FixedAddress {\r\n    address constant ProxyAddress = 0x1234567896326230a28ee368825D11fE6571Be4a;\r\n    address constant TreasuryAddress = 0x12345678979f29eBc99E00bdc5693ddEa564cA80;\r\n    address constant RegistryAddress = 0x12345678982cB986Dd291B50239295E3Cb10Cdf6;\r\n\r\n    function getRegistry() internal pure returns (RegistryInterface) {\r\n        return RegistryInterface(RegistryAddress);\r\n    }\r\n}\r\n\r\ncontract Proxy is FixedAddress {\r\n\r\n  function () external payable {\r\n      // Query current code version from Registry.\r\n      address _impl = getRegistry().getExchangeContract();\r\n\r\n      // Typical implementation of proxied delegatecall with RETURNDATASIZE/RETURNDATACOPY.\r\n      // Quick refresher:\r\n      //     delegatecall uses code from other contract, yet operates on Proxy storage,\r\n      //     which means the latter is preserved between code upgrades.\r\n      assembly {\r\n          let ptr := mload(0x40)\r\n          calldatacopy(ptr, 0, calldatasize)\r\n          let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\r\n          let size := returndatasize\r\n          returndatacopy(ptr, 0, size)\r\n\r\n          switch result\r\n          case 0 { revert(ptr, size) }\r\n          default { return(ptr, size) }\r\n      }\r\n  }\r\n\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ed0fefd58579a2c87df0c279dbdd758bb6cd9284f1092857719c9869586ab541"}]}