{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.4;\r\n\r\ncontract ProofOfFomo {\r\n    \r\n    IFomo public constant fomoLong = IFomo(0xA62142888ABa8370742bE823c1782D17A0389Da1);\r\n    IDivies public constant doNotPush = IDivies(0xc7029Ed9EBa97A096e72607f4340c34049C7AF48);\r\n    uint256 public constant ROUND_THAT_NEVER_ENDS = 9;\r\n    \r\n    mapping(address => uint256) public etherPledged;\r\n    mapping(address => uint256) public etherSpentInRound;\r\n    \r\n    modifier isRound9\r\n    {\r\n        require(fomoLong.rID_() == ROUND_THAT_NEVER_ENDS);\r\n        _;\r\n    }\r\n    \r\n    modifier round9Ended\r\n    {\r\n        require(fomoLong.rID_() > ROUND_THAT_NEVER_ENDS);\r\n        _;\r\n    }\r\n    \r\n    function()\r\n        external\r\n        payable\r\n        isRound9\r\n    {\r\n        lock(msg.sender);\r\n    }\r\n    \r\n    function pledge()\r\n        external\r\n        payable\r\n        isRound9\r\n    {\r\n        lock(msg.sender);\r\n    }\r\n    \r\n    function gift(address _to)\r\n        external\r\n        payable\r\n        isRound9\r\n    {\r\n        lock(_to);\r\n    }\r\n    \r\n    function loot()\r\n        external\r\n        round9Ended\r\n    {\r\n        doNotPush.deposit.value(address(this).balance)();\r\n    }\r\n    \r\n    function lock(address _player)\r\n        private\r\n    {\r\n        require(msg.value > 0 ether);\r\n        require(etherPledged[_player] == 0);\r\n        \r\n        etherPledged[_player] = msg.value;\r\n        etherSpentInRound[_player] = getEtherSpentInRound(_player);\r\n    }\r\n    \r\n    function unlock()\r\n        external\r\n        isRound9\r\n    {\r\n        uint256 etherSpentInRoundOld = etherSpentInRound[msg.sender];\r\n        uint256 etherSpentInRoundNew = getEtherSpentInRound(msg.sender);\r\n        \r\n        require(etherSpentInRoundNew > etherSpentInRoundOld);\r\n        \r\n        uint256 difference = etherSpentInRoundNew - etherSpentInRoundOld;\r\n        uint256 etherPledgedOld = etherPledged[msg.sender];\r\n        \r\n        uint256 etherUnlocked = difference > etherPledgedOld ? etherPledgedOld : difference;\r\n        \r\n        uint256 etherPledgedNew = etherPledgedOld - etherUnlocked;\r\n        \r\n        etherPledged[msg.sender] = etherPledgedNew;\r\n        etherSpentInRound[msg.sender] = etherSpentInRoundNew;\r\n        \r\n        msg.sender.transfer(etherUnlocked);\r\n    }\r\n    \r\n    function getEtherSpentInRound(address _player)\r\n        private\r\n        returns(uint256)\r\n    {\r\n        uint256 pID = fomoLong.pIDxAddr_(_player);\r\n        return fomoLong.plyrRnds_(pID, ROUND_THAT_NEVER_ENDS);\r\n    }\r\n}\r\n    \r\ninterface IFomo {\r\n\tfunction rID_() external returns(uint256);\r\n\tfunction pIDxAddr_(address player) external returns(uint256);\r\n\tfunction plyrRnds_(uint256 pID, uint256 rID) external returns(uint256);\r\n}\r\n\r\ninterface IDivies {\r\n    function deposit() external payable;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"doNotPush\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROUND_THAT_NEVER_ENDS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherPledged\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pledge\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"loot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherSpentInRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"gift\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fomoLong\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ProofOfFomo","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d91b070597c1368b9c3b635a2ea15d4b944d3da587db3cdaf9aa8034150a43ca"}]}