{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) { \r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    } \r\n}\r\n\r\n library SafeMath8{\r\n     function add(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        uint8 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    } \r\n\r\n    function sub(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        require(b <= a);\r\n        uint8 c = a - b;\r\n        return c;\r\n    }\r\n\r\n }\r\n\r\n library SafeMath16{\r\n     function add(uint16 a, uint16 b) internal pure returns (uint16) {\r\n        uint16 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint16 a, uint16 b) internal pure returns (uint16) {\r\n        require(b <= a);\r\n        uint16 c = a - b;\r\n        return c;\r\n    }\r\n\r\n     function mul(uint16 a, uint16 b) internal pure returns (uint16) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint16 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint16 a, uint16 b) internal pure returns (uint16) {\r\n        require(b > 0);\r\n        uint16 c = a / b;\r\n        return c;\r\n    }\r\n }\r\n\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\ninterface master{\r\n    function inquire_location(address _address) external view returns(uint16, uint16);\r\n    function inquire_slave_address(uint16 _slave) external view returns(address);\r\n    function inquire_land_info(uint16 _city, uint16 _id) external view returns(uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8);\r\n    function domain_attribute(uint16 _city,uint16 _id, uint8 _index) external;\r\n    \r\n    function inquire_tot_attribute(uint16 _slave, uint16 _domain) external view returns(uint8[5]);\r\n     \r\n    function inquire_owner(uint16 _city, uint16 id) external view returns(address);\r\n    \r\n}\r\n\r\n interface material{\r\n     function control_burn(uint8 boxIndex, uint8 materialIndex, address target, uint256 amount) external;\r\n }\r\n \r\n\r\ncontract owned{\r\n\r\n    address public manager;\r\n\r\n    constructor() public{\r\n        manager = msg.sender;\r\n    }\r\n\r\n    modifier onlymanager{\r\n        require(msg.sender == manager);\r\n        _;\r\n    } \r\n\r\n    function transferownership(address _new_manager) public onlymanager {\r\n        manager = _new_manager;\r\n    }\r\n\r\n}\r\n\r\ncontract mix is owned{   \r\n    \r\n    event mix_result(address indexed player, bool result, uint16 rate); \r\n\r\n    address arina_address = 0xe6987cd613dfda0995a95b3e6acbabececd41376;\r\n    address master_address = 0x0ac10bf0342fa2724e93d250751186ba5b659303;\r\n    \r\n    address material_contract = 0x65844f2e98495b6c8780f689c5d13bb7f4975d65;  \r\n    \r\n    uint16[5] paramA;\r\n    uint16[5] paramB; \r\n    uint16[5] paramC; \r\n    uint16[5] paramD;\r\n    uint16[5] paramE; \r\n    uint16[5] paramF;\r\n\r\n    \r\n    constructor() public{\r\n        paramA=[50,30,10,5,1];\r\n        paramB=[100,50,30,10,5]; \r\n        paramC=[200,100,50,30,10];\r\n        paramD=[300,150,100,50,30];\r\n        paramE=[400,200,150,100,50];\r\n        paramF=[500,300,200,150,100]; \r\n\r\n    } \r\n     \r\n    using SafeMath for uint256;\r\n    using SafeMath16 for uint16;\r\n    using SafeMath8 for uint8;\r\n    using Address for address;\r\n    \r\n    function set_material_contract(address _material_contract) public onlymanager{\r\n        material_contract = _material_contract;\r\n    }\r\n    \r\n    function set_master(address _new_master) public onlymanager {\r\n        master_address = _new_master;\r\n    } \r\n    \r\n     \r\n    \r\n    function materialMix(uint16 city,uint16 id,uint8 proIndex, uint8[] mixArray) public {\r\n    \r\n        require(msg.sender == master(master_address).inquire_owner(city,id));\r\n        (uint16 _city,uint16 _id) = master(master_address).inquire_location(msg.sender);\r\n        require(city == _city && id == _id);\r\n         \r\n        uint8 produce;        \r\n        uint8 attribute; \r\n        uint8 index2;         \r\n        uint16 total = 0;     \r\n        uint16 random = uint16((keccak256(abi.encodePacked(now, mixArray.length))));\r\n  \r\n         \r\n        if(proIndex == 1){\r\n            (produce,,,,,,,,,) = master(master_address).inquire_land_info(city,id);\r\n             \r\n        }else if(proIndex == 2){\r\n            (,produce,,,,,,,,) = master(master_address).inquire_land_info(city,id);\r\n        }else if(proIndex == 3){\r\n            (,,produce,,,,,,,) = master(master_address).inquire_land_info(city,id);\r\n        }else if(proIndex == 4){\r\n            (,,,produce,,,,,,) = master(master_address).inquire_land_info(city,id);\r\n        }else{\r\n            (,,,,produce,,,,,) = master(master_address).inquire_land_info(city,id);\r\n        }\r\n\r\n        attribute = produce.add(master(master_address).inquire_tot_attribute(city,id)[(proIndex-1)]);\r\n        \r\n        require(attribute>=0 && attribute < 10);\r\n         \r\n        \r\n        if( attribute < 2)\r\n            index2 = 0;\r\n        else if(attribute > 1 && attribute < 4)\r\n            index2 = 1; \r\n        else if(attribute > 3 && attribute < 6)\r\n            index2 = 2;\r\n        else if(attribute > 5 && attribute < 8)\r\n            index2 = 3;\r\n        else\r\n            index2 = 4; \r\n            \r\n        for( i=0;i<mixArray.length;i++){          \r\n            total = total.add(getParam(mixArray[i],index2));\r\n        }    \r\n  \r\n        for(uint8 i=0;i < mixArray.length; i++){                        \r\n            \r\n            if(proIndex == 2){\r\n                mixArray[i] = mixArray[i]%30;\r\n            }else if(proIndex == 3){\r\n                mixArray[i] = mixArray[i]%40;\r\n            }else if(proIndex == 4){\r\n                mixArray[i] = mixArray[i]%60;\r\n            }else if(proIndex == 5){\r\n                mixArray[i] = mixArray[i]%68;\r\n            }\r\n\r\n\r\n             material(material_contract).control_burn((proIndex-1),(mixArray[i]-1),msg.sender,1);\r\n        }  \r\n\r\n        \r\n\r\n\r\n        if((random%1000) <= total){\r\n            \r\n            master(master_address).domain_attribute(city, id, (proIndex-1));\r\n            emit mix_result(msg.sender,true,total);\r\n            \r\n        } else{\r\n            emit mix_result(msg.sender,false,total);\r\n        }\r\n    \r\n    }\r\n    \r\n     \r\n    function getParam(uint index1,uint16 index2) private view returns(uint16){     \r\n           \r\n           if(index1<6 || index1==31 || index1==32 || (index1>40 && index1<46) || index1==61 || index1==62 || (index1>68 && index1<74)){\r\n               return paramA[index2];\r\n           }else if((index1>5 && index1<11) || index1==33 || index1==34 || (index1>45 && index1<51) || index1==63 || index1==64 || (index1>73 && index1<79)){\r\n               return paramB[index2];\r\n           }else if((index1>10 && index1<16) || index1==35 || index1==36 || (index1>50 && index1<56) || index1==65 || index1==66 || (index1>78 && index1<84)){\r\n               return paramC[index2];\r\n           }else if((index1>15 && index1<21) || index1==37 || index1==38 || (index1>55 && index1<61)|| (index1>83 && index1<89)){\r\n               return paramD[index2];\r\n           }else if((index1>25 && index1<31) || index1==39 || index1==40 || index1==67 || index1==68){\r\n               return paramF[index2];\r\n           }else{\r\n               return paramE[index2];\r\n           }\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_material_contract\",\"type\":\"address\"}],\"name\":\"set_material_contract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_master\",\"type\":\"address\"}],\"name\":\"set_master\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"city\",\"type\":\"uint16\"},{\"name\":\"id\",\"type\":\"uint16\"},{\"name\":\"proIndex\",\"type\":\"uint8\"},{\"name\":\"mixArray\",\"type\":\"uint8[]\"}],\"name\":\"materialMix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_manager\",\"type\":\"address\"}],\"name\":\"transferownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint16\"}],\"name\":\"mix_result\",\"type\":\"event\"}]","ContractName":"mix","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://567b94dacd745b613668af5a9b46f4006e72c142bcbd5213821cf50b6b7611c9"}]}