{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  0.4.21;\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwner;\r\n   \r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n    * account.\r\n    */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(address(0) != _newOwner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Need newOwner to receive the Ownership.\r\n     */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, msg.sender);\r\n        owner = msg.sender;\r\n        newOwner = address(0);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title MultiToken\r\n * @dev The interface of BCZERO Token contract.\r\n */\r\ncontract IBCZEROToken {\r\n    function acceptOwnership() public;\r\n    function transfer(address _to, uint _value) public returns(bool);\r\n}\r\n/**\r\n * @title BCZEROOwner\r\n * @dev The management contract of BCZEROToken, to manage the ownership of Token contract.\r\n */\r\ncontract BCZEROOwner is Ownable{\r\n    IBCZEROToken  BCZEROToken;\r\n    bool public exchangeEnabled; \r\n    address  public BCZEROTokenAddr = 0xD45247c07379d94904E0A87b4481F0a1DDfa0C64; // the address of BCZERO Token.\r\n\r\n    event WithdrawETH(uint256 amount);\r\n    event ExchangeEnabledStatus(bool enabled);\r\n    \r\n    /**\r\n     * @dev Constructor, setting the contract address of BCZERO token and the owner of this contract.\r\n     *      setting exchangeEnabled as true.\r\n     * @param _owner The owner of this contract.\r\n     */\r\n    function BCZEROOwner(address _owner) public {\r\n        BCZEROToken = IBCZEROToken(BCZEROTokenAddr);\r\n        owner = _owner;\r\n        exchangeEnabled = true; \r\n    }\r\n\r\n    /**\r\n     * @dev this contract to accept the ownership.\r\n     */\r\n    function acceptBCZEROOwnership() public onlyOwner {\r\n        BCZEROToken.acceptOwnership();\r\n    }\r\n    \r\n    /**\r\n     * @dev fallback, Let this contract can receive ETH\r\n     */\r\n    function() external payable {\r\n        require(exchangeEnabled);\r\n    }\r\n    \r\n    /**\r\n     * @dev Setting whether the BCZERO tokens can be exchanged.\r\n     * @param _enabled true or false\r\n     */\r\n    function setExchangeEnabled(bool _enabled) public onlyOwner {\r\n        exchangeEnabled = _enabled;\r\n        emit ExchangeEnabledStatus(_enabled);\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can transfer the ETH of this contract to the owner account by calling this function.\r\n     */\r\n    function withdrawETH() public onlyOwner {\r\n        uint256 amount = address(this).balance; // getting the balance of this contract（ETH）.\r\n        require(amount > 0);\r\n        owner.transfer(amount); // sending ETH to owner.\r\n        emit WithdrawETH(amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Owner can transfer the BCZERO token of this contract to the address 'to' by calling this function.\r\n     */\r\n    function transferBCZEROToken(address to, uint256 value) public onlyOwner {\r\n        BCZEROToken.transfer(to, value);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferBCZEROToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptBCZEROOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setExchangeEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BCZEROTokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"ExchangeEnabledStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BCZEROOwner","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004ac4e864c19c3261a3f25da4f60f55147c2ab25b","Library":"","SwarmSource":"bzzr://1315bab21e8a1d32c5115c755ec34ea42f56110917e4b4f4c8085d0c1262eed3"}]}