{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Ownable {\r\n    address payable public owner;\r\n    constructor () public {owner = msg.sender;}\r\n    modifier onlyOwner() {require(msg.sender == owner, \"Only owner can call\");_;}\r\n    function transferOwnership(address payable newOwner) external onlyOwner {\r\n        if(newOwner != address(0)){owner = newOwner;}\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract RemiAirdrop is Ownable{\r\n    // Notify when contract deployed\r\n    event contractDeployed();\r\n    \r\n\r\n    // State Variable that affects to airdropToken function\r\n    address public SOURCE_ADDRESS;\r\n    uint public DEFAULT_AMOUNT;\r\n    IERC20 public REMI_INTERFACE;\r\n    \r\n\r\n    // Set state variables simultaneously with construct\r\n    constructor (address _tokenAddress, address _sourceAddress, uint _defaultAmount) public{\r\n        REMI_INTERFACE = IERC20(_tokenAddress);\r\n        SOURCE_ADDRESS = _sourceAddress;\r\n        DEFAULT_AMOUNT = _defaultAmount;\r\n        \r\n        emit contractDeployed();\r\n    }\r\n    \r\n    // Airdrop token from SOURCE_ADDRESS a _dropAmount per each _recipientList[i] via REMI_INTERFACE\r\n    function airdropToken(address[] calldata _recipientList, uint _dropAmount) external onlyOwner{\r\n        uint dropAmount = (_dropAmount > 0 ? _dropAmount : DEFAULT_AMOUNT) * 10**18;\r\n        require(_recipientList.length * dropAmount <= REMI_INTERFACE.allowance(SOURCE_ADDRESS,address(this)), \"Allowed authority insufficient\");\r\n        \r\n        for(uint i = 0; i < _recipientList.length; i++){\r\n            REMI_INTERFACE.transferFrom(SOURCE_ADDRESS, _recipientList[i], dropAmount);\r\n        }\r\n    }\r\n\r\n    // Set each state variable manually\r\n    function setTokenAddress(address _newToken) external onlyOwner{\r\n        REMI_INTERFACE = IERC20(_newToken);\r\n    }\r\n    function setSourceAddress(address _newSource) external onlyOwner{\r\n        SOURCE_ADDRESS = _newSource;\r\n    }\r\n    function setDefaultAmount(uint _newAmount) external onlyOwner{\r\n        DEFAULT_AMOUNT = _newAmount;\r\n    }\r\n\r\n    // Self destruct and refund balance to owner. need to send owners address to check once again\r\n    function _DESTROY_CONTRACT_(address _check) external onlyOwner{\r\n        require(_check == owner, \"Enter owners address correctly\");\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSource\",\"type\":\"address\"}],\"name\":\"setSourceAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULT_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAmount\",\"type\":\"uint256\"}],\"name\":\"setDefaultAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REMI_INTERFACE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_check\",\"type\":\"address\"}],\"name\":\"_DESTROY_CONTRACT_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOURCE_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipientList\",\"type\":\"address[]\"},{\"name\":\"_dropAmount\",\"type\":\"uint256\"}],\"name\":\"airdropToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_sourceAddress\",\"type\":\"address\"},{\"name\":\"_defaultAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"contractDeployed\",\"type\":\"event\"}]","ContractName":"RemiAirdrop","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000013cb85823f78cff38f0b0e90d3e975b8cb3aad64000000000000000000000000f4c1585e99cb4de8536aaf9cccb4b18769e50a6500000000000000000000000000000000000000000000000000000000000004e2","Library":"","SwarmSource":"bzzr://2a3cfd53ecca836046b05ae23b4b87243f333183c524a96ad0ed906349f5e5f3"}]}