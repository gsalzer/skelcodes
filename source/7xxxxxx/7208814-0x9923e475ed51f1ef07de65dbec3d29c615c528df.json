{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a); \r\n    return a - b; \r\n  } \r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) { \r\n    uint256 c = a + b; assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value)  public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]); \r\n    // SafeMath.sub will throw if there is not enough balance. \r\n    balances[msg.sender] = balances[msg.sender].sub(_value); \r\n    balances[_to] = balances[_to].add(_value); \r\n    emit Transfer(msg.sender, _to, _value); \r\n    \r\n    return true; \r\n  } \r\n\r\n  /** \r\n   * @dev Gets the balance of the specified address. \r\n   * @param _owner The address to query the the balance of. \r\n   * @return An uint256 representing the amount owned by the passed address. \r\n   */ \r\n  function balanceOf(address _owner) public constant returns (uint256 balance) { \r\n    return balances[_owner]; \r\n  }\r\n} \r\n\r\n/** \r\n * @title Standard ERC20 token \r\n * \r\n * @dev Implementation of the basic standard token. \r\n * @dev https://github.com/ethereum/EIPs/issues/20 \r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol \r\n */ \r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amount of tokens to be transferred\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]); \r\n    balances[_from] = balances[_from].sub(_value); \r\n    balances[_to] = balances[_to].add(_value); \r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value); \r\n    emit Transfer(_from, _to, _value); \r\n    \r\n    return true; \r\n  } \r\n\r\n /** \r\n  * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. \r\n  * \r\n  * Beware that changing an allowance with this method brings the risk that someone may use both the old \r\n  * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this \r\n  * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: \r\n  * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 \r\n  * @param _spender The address which will spend the funds. \r\n  * @param _value The amount of tokens to be spent. \r\n  */ \r\n  function approve(address _spender, uint256 _value) public returns (bool) { \r\n    allowed[msg.sender][_spender] = _value; \r\n    emit Approval(msg.sender, _spender, _value); \r\n    return true; \r\n  }\r\n\r\n /** \r\n  * @dev Function to check the amount of tokens that an owner allowed to a spender. \r\n  * @param _owner address The address which owns the funds. \r\n  * @param _spender address The address which will spend the funds. \r\n  * @return A uint256 specifying the amount of tokens still available for the spender. \r\n  */ \r\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) { \r\n    return allowed[_owner][_spender]; \r\n  } \r\n\r\n /** \r\n  * approve should be called when allowed[_spender] == 0. To increment \r\n  * allowed value is better to use this function to avoid 2 calls (and wait until \r\n  * the first transaction is mined) * From MonolithDAO Token.sol \r\n  */ \r\n  function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]); \r\n    return true; \r\n  }\r\n\r\n  function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\r\n    uint oldValue = allowed[msg.sender][_spender]; \r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function () public payable {\r\n    ///revert();\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n}\r\n\r\n\r\ncontract GoodPriceToken is StandardToken, Ownable {\r\n    \r\n    string public constant name = \"GoodPrice\";\r\n    string public constant symbol = \"GPS\";\r\n    uint32 public constant decimals = 18;\r\n    \r\n    uint256 public constant totalSupply = 300000000 * (10 ** 18);\r\n    \r\n    constructor(address [] _holders, uint256 [] _tokens) public {\r\n        uint256 total = 0;\r\n        for(uint i=0; i<_holders.length; ++i) {\r\n            balances[_holders[i]] = _tokens[i];\r\n            total += _tokens[i];\r\n            emit Transfer(address(this), _holders[i], _tokens[i]);\r\n        }\r\n        require(total == totalSupply);\r\n    }\r\n    \r\n    function transferSale(address addr, uint256 tokens) public onlyOwner {\r\n        require(addr != address(0));\r\n        require(balances[address(this)] >= tokens);\r\n        \r\n        balances[addr] = balances[addr].add(tokens);\r\n        balances[address(this)] = balances[address(this)].sub(tokens);\r\n        emit Transfer(address(this), addr, tokens);\r\n    }    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_holders\",\"type\":\"address[]\"},{\"name\":\"_tokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"GoodPriceToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://14c4a4fb10cdd6ed44a30b3124f82c0ef6594819136c4c3b6f9c3a04921c28dd"}]}