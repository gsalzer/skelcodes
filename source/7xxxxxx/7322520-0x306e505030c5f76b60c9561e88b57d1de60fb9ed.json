{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.5;\r\n\r\ncontract Owned {\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    address payable owner;\r\n    address payable newOwner;\r\n    function changeOwner(address payable _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract Save is Owned {\r\n    uint8 public fee;\r\n    uint32 public deadline;\r\n    uint32 public savers;\r\n    mapping (address=>uint256) saves;\r\n    event Saved(address indexed _from, uint256 _value);\r\n    function saveOf(address _user) view public returns (uint256 save) {return saves[_user];}\r\n}\r\n\r\ncontract KodDeneg is Save{\r\n    \r\n    constructor() public{\r\n        fee = 3;\r\n        deadline = 1577836799;\r\n        savers = 0;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function payOut() public returns (bool ok){\r\n        require(now>=deadline && saves[msg.sender]>0);\r\n        uint256 royalty = saves[msg.sender]*fee/100;\r\n        if (royalty>0) owner.transfer(royalty);\r\n        msg.sender.transfer(saves[msg.sender]-royalty);\r\n        return true;\r\n    }\r\n    function () payable external {\r\n        require(msg.value>0);\r\n        if (saves[msg.sender]==0) savers++;\r\n        saves[msg.sender]+=msg.value;\r\n        emit Saved(msg.sender,msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"savers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payOut\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"saveOf\",\"outputs\":[{\"name\":\"save\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Saved\",\"type\":\"event\"}]","ContractName":"KodDeneg","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4d29786eec3ed770b986419dda9cdf121079f2ba2912dafd5ef22ef7441519df"}]}