{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n//\r\n//                       .#########'\r\n//                    .###############+\r\n//                  ,####################\r\n//                `#######################+\r\n//               ;##########################\r\n//              #############################.\r\n//             ###############################,\r\n//           +##################,    ###########`\r\n//          .###################     .###########\r\n//         ##############,          .###########+\r\n//         #############`            .############`\r\n//         ###########+                ############\r\n//        ###########;                  ###########\r\n//        ##########'                    ###########                                                                                      \r\n//       '##########    '#.        `,     ##########                                                                                    \r\n//       ##########    ####'      ####.   :#########;                                                                                   \r\n//      `#########'   :#####;    ######    ##########                                                                                 \r\n//      :#########    #######:  #######    :#########         \r\n//      +#########    :#######.########     #########`       \r\n//      #########;     ###############'     #########:       \r\n//      #########       #############+      '########'        \r\n//      #########        ############       :#########        \r\n//      #########         ##########        ,#########        \r\n//      #########         :########         ,#########        \r\n//      #########        ,##########        ,#########        \r\n//      #########       ,############       :########+        \r\n//      #########      .#############+      '########'        \r\n//      #########:    `###############'     #########,        \r\n//      +########+    ;#######`;#######     #########         \r\n//      ,#########    '######`  '######    :#########         \r\n//       #########;   .#####`    '#####    ##########         \r\n//       ##########    '###`      +###    :#########:         \r\n//       ;#########+     `                ##########          \r\n//        ##########,                    ###########          \r\n//         ###########;                ############\r\n//         +############             .############`\r\n//          ###########+           ,#############;\r\n//          `###########     ;++#################\r\n//           :##########,    ###################\r\n//            '###########.'###################\r\n//             +##############################\r\n//              '############################`\r\n//               .##########################\r\n//                 #######################:\r\n//                   ###################+\r\n//                     +##############:\r\n//                        :#######+`\r\n//\r\n//\r\n//\r\n// Play0x.com (The ONLY gaming platform for all ERC20 Tokens)\r\n// -------------------------------------------------------------------------------------------------------\r\n// * Multiple types of game platforms\r\n// * Build your own game zone - Not only playing games, but also allowing other players to join your game.\r\n// * Support all ERC20 tokens.\r\n//\r\n//\r\n//\r\n// 0xC Token (Contract address : 0x60d8234a662651e586173c17eb45ca9833a7aa6c)\r\n// -------------------------------------------------------------------------------------------------------\r\n// * 0xC Token is an ERC20 Token specifically for digital entertainment.\r\n// * No ICO and private sales,fair access.\r\n// * There will be hundreds of games using 0xC as a game token.\r\n// * Token holders can permanently get ETH's profit sharing.\r\n//\r\n\r\n/**\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n* @title ERC20 interface\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract ERC20 {\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function balanceOf(address who) public view returns  (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n* @title Ownable\r\n* @dev The Ownable contract has an owner address, and provides basic authorization control \r\n* functions, this simplifies the implementation of \"user permissions\". \r\n*/ \r\ncontract Ownable {\r\n    address public owner;\r\n\r\n/** \r\n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n* account.\r\n*/\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"only for owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n//Main contract\r\ncontract RewardSharing is Ownable{\r\n    using SafeMath for uint256;\r\n    bool public IsWithdrawActive = true;\r\n\r\n    //for Shareholder banlance record\r\n    mapping(address => uint256) EtherBook;\r\n    mapping(address=> mapping(address => uint256)) TokenBook;\r\n    address[] supportToken;\r\n\r\n    event withdrawLog(address userAddress, uint256 etherAmount, uint256 tokenAmount);\r\n\r\n    function() public payable{}\r\n    \r\n    //Get counts of supported Token\r\n    function GetTokenLen() public view returns(uint256)\r\n    {\r\n        return supportToken.length;\r\n    }\r\n    \r\n    //Get supportToken by index\r\n    function GetSupportToken(uint index) public view returns(address)\r\n    {\r\n        return supportToken[index];\r\n    }\r\n\r\n    //Add Ether for accounts\r\n    function ProfitDividend (address[] addressArray, uint256[] profitArray) public onlyOwner\r\n    {\r\n        for( uint256 i = 0; i < addressArray.length;i++)\r\n        {\r\n            EtherBook[addressArray[i]] = EtherBook[addressArray[i]].add(profitArray[i]);\r\n        }\r\n    }\r\n    \r\n    // Adjust Ether balance of accounts in the vault\r\n    function AdjustEtherBook(address[] addressArray, uint256[] profitArray) public onlyOwner\r\n    {\r\n        for( uint256 i = 0; i < addressArray.length;i++)\r\n        {\r\n            EtherBook[addressArray[i]] = profitArray[i];\r\n        }\r\n    }\r\n    \r\n    //Add token for accounts\r\n    function ProfitTokenDividend (address ERC20Address, address[] addressArray, uint256[] profitArray) public onlyOwner\r\n    {\r\n        if(TokenBook[ERC20Address][0x0]== 0)\r\n        {\r\n            supportToken.push(ERC20Address);\r\n            TokenBook[ERC20Address][0x0] = 1;\r\n        }\r\n        \r\n        for( uint256 i = 0; i < addressArray.length;i++)\r\n        {\r\n            TokenBook[ERC20Address][addressArray[i]] = TokenBook[ERC20Address][addressArray[i]].add(profitArray[i]);\r\n        }\r\n    }\r\n    \r\n    // Adjust token balance of accounts in the vault\r\n    function AdjustTokenBook(address ERC20Address,address[] addressArray, uint256[] profitArray) public onlyOwner\r\n    {\r\n        if(TokenBook[ERC20Address][0x0]== 0)\r\n        {\r\n            supportToken.push(ERC20Address);\r\n            TokenBook[ERC20Address][0x0] = 1;\r\n        }\r\n        \r\n        for( uint256 i = 0; i < addressArray.length;i++)\r\n        {\r\n            TokenBook[ERC20Address][addressArray[i]] = profitArray[i];\r\n        }\r\n    }\r\n    \r\n    //check ether balance in the vault\r\n    function CheckBalance(address theAddress) public view returns(uint256 EtherProfit)\r\n    {\r\n        return (EtherBook[theAddress]);\r\n    }\r\n    \r\n    //Check token balance in the vault\r\n    function CheckTokenBalance(address ERC20Address, address theAddress) public view returns(uint256 TokenProfit)\r\n    {\r\n        return TokenBook[ERC20Address][theAddress];\r\n    }\r\n    \r\n    //User withdraw ERC20 Token\r\n    function withdrawToken(address ERC20Address) public\r\n    {\r\n        uint tokenAmount = TokenBook[ERC20Address][msg.sender];\r\n        TokenBook[ERC20Address][msg.sender]= 0;\r\n    \r\n        ERC20(ERC20Address).transfer(msg.sender, tokenAmount);\r\n    }\r\n    \r\n    //User Withdraw Ether\r\n    function withdrawEther() public\r\n    {\r\n        uint etherAmount = EtherBook[msg.sender];\r\n        EtherBook[msg.sender] = 0;\r\n        msg.sender.transfer(etherAmount);\r\n    }\r\n    \r\n    //Set withdraw status.\r\n    function UpdateActive(bool _IsWithdrawActive) public onlyOwner\r\n    {\r\n        IsWithdrawActive = _IsWithdrawActive;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_IsWithdrawActive\",\"type\":\"bool\"}],\"name\":\"UpdateActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"CheckBalance\",\"outputs\":[{\"name\":\"EtherProfit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"AdjustEtherBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"CheckTokenBalance\",\"outputs\":[{\"name\":\"TokenProfit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"GetSupportToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"ProfitDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsWithdrawActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"ProfitTokenDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetTokenLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ERC20Address\",\"type\":\"address\"},{\"name\":\"addressArray\",\"type\":\"address[]\"},{\"name\":\"profitArray\",\"type\":\"uint256[]\"}],\"name\":\"AdjustTokenBook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLog\",\"type\":\"event\"}]","ContractName":"RewardSharing","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1aee89799222721547c5fbb68730c0d91b4fd31fa046ed4d13aacf1df570db7b"}]}