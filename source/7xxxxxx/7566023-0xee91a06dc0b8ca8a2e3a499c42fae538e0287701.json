{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.7;\r\n\r\ncontract ERC223ReceivingContract { \r\n    function tokenFallback(address _from, uint _value) public;\r\n}\r\n\r\ncontract IRC223 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) public view returns (uint);\r\n  \r\n  function name() public view returns (string memory _name);\r\n  function symbol() public view returns (string memory _symbol);\r\n  function decimals() public view returns (uint8 _decimals);\r\n\r\n  function transfer(address to, uint value) public;\r\n  \r\n  event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract PIBC is IRC223 {\r\n    using SafeMath for uint;\r\n    \r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping (address => uint)) public approved;\r\n    mapping(address => mapping (address => uint)) public ttl;\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 _decimals;\r\n    uint public commisionRate;\r\n    address private _owner;\r\n    address private _commisioner; //0x4E911d2D6B83e4746055ccb167596bF9f2e680d2\r\n    event Commision(uint256 commision);\r\n    uint private _ttlLimit;\r\n    \r\n    constructor(address commisioner, address owner) public{\r\n        _name = \"Pi token\";\r\n        _symbol = \"PIT\";\r\n        _decimals = 5;\r\n        totalSupply = 10000000000000000000;\r\n        balances[owner] = totalSupply;\r\n        _owner = owner;\r\n        _commisioner = commisioner;\r\n        commisionRate = 10000;\r\n        _ttlLimit = 360;\r\n    }\r\n    \r\n    \r\n    function name() public view returns (string memory){\r\n        return _name;\r\n    }\r\n    function symbol() public view returns (string memory){\r\n        return _symbol;\r\n    }\r\n    function decimals() public view returns (uint8){\r\n        return _decimals;\r\n    }\r\n    \r\n    function _transfer(address _to, address _from, uint _value) internal{\r\n        uint256 commision;\r\n        commision = _value.div(commisionRate);\r\n        require(balances[_from] >= _value + commision);\r\n        uint codeLength;\r\n        bytes memory empty;\r\n\r\n        assembly {\r\n            // Retrieve the size of the code on target address, this needs assembly .\r\n            codeLength := extcodesize(_to)\r\n        }\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        balances[_from] = balances[_from].sub(commision);\r\n        balances[_commisioner] = balances[_commisioner].add(commision);\r\n        if(codeLength>0) {\r\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n            receiver.tokenFallback(_from, _value);\r\n        }\r\n        emit Transfer(_from, _to, _value, empty);\r\n        emit Commision(commision);\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public {\r\n        _transfer(_to, msg.sender,_value);\r\n    }\r\n    \r\n    function transferFrom (address _to, address _from) public {\r\n        require(approved[_from][_to] > 0);\r\n        require(ttl[msg.sender][_to] > block.number);\r\n        uint _value = approved[_from][_to];\r\n        ttl[msg.sender][_to] = 0;\r\n        approved[_from][_to] = 0;\r\n        _transfer(_to, _from, _value);\r\n        \r\n    }\r\n    \r\n    function approve (address _to, uint _value) public{\r\n        require(_value <= balances[msg.sender]);\r\n        approved[msg.sender][_to] = approved[msg.sender][_to].add(_value);\r\n        ttl[msg.sender][_to] = block.number.add(_ttlLimit);\r\n\r\n    }\r\n\r\n    function balanceOf(address _user) public view returns (uint balance) {\r\n        return balances[_user];\r\n    }\r\n    \r\n    function setTtl(uint ttlLimit) public {\r\n        require(msg.sender == _owner);\r\n        _ttlLimit = ttlLimit;\r\n    }\r\n    \r\n    function setCommisionRate (uint _commisionRate) public {\r\n        require(msg.sender == _owner);\r\n        commisionRate = _commisionRate;\r\n    }\r\n    \r\n    function setCommisioner (address commisioner) public {\r\n        require(msg.sender == _owner);\r\n        _commisioner = commisioner;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"commisioner\",\"type\":\"address\"}],\"name\":\"setCommisioner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ttl\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ttlLimit\",\"type\":\"uint256\"}],\"name\":\"setTtl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_commisionRate\",\"type\":\"uint256\"}],\"name\":\"setCommisionRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commisionRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"commisioner\",\"type\":\"address\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"commision\",\"type\":\"uint256\"}],\"name\":\"Commision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"PIBC","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000632f1f893ae1e8edf4509a6350113be71373ebe800000000000000000000000089f3afcf8c401d9126e9643d28e4cbf3e5befd29","Library":"","SwarmSource":"bzzr://c59c6580cf3fb1c5a47d7d84f74e6c88037c4b4f4872d77d617fe26be14689c6"}]}