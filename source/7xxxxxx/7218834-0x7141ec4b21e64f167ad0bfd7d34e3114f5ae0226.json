{"status":"1","message":"OK","result":[{"SourceCode":"// Dependency file: openzeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n// pragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the `onlyOwner`\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n\r\n// Dependency file: contracts/interfaces/IInterstellarEncoderV3.sol\r\n\r\n// pragma solidity ^0.4.24;\r\n\r\ncontract IInterstellarEncoderV3 {\r\n    uint256 constant CLEAR_HIGH =  0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff;\r\n\r\n    uint256 public constant MAGIC_NUMBER = 42;    // Interstellar Encoding Magic Number.\r\n    uint256 public constant CHAIN_ID = 1; // Ethereum mainet.\r\n    uint256 public constant CURRENT_LAND = 1; // 1 is Atlantis, 0 is NaN.\r\n\r\n    enum ObjectClass { \r\n        NaN,\r\n        LAND,\r\n        APOSTLE,\r\n        OBJECT_CLASS_COUNT\r\n    }\r\n\r\n    function registerNewObjectClass(address _objectContract, uint8 objectClass) public;\r\n\r\n    function encodeTokenId(address _tokenAddress, uint8 _objectClass, uint128 _objectIndex) public view returns (uint256 _tokenId);\r\n\r\n    function encodeTokenIdForObjectContract(\r\n        address _tokenAddress, address _objectContract, uint128 _objectId) public view returns (uint256 _tokenId);\r\n\r\n    function encodeTokenIdForOuterObjectContract(\r\n        address _objectContract, address nftAddress, address _originNftAddress, uint128 _objectId, uint16 _producerId, uint8 _convertType) public view returns (uint256);\r\n\r\n    function getContractAddress(uint256 _tokenId) public view returns (address);\r\n\r\n    function getObjectId(uint256 _tokenId) public view returns (uint128 _objectId);\r\n\r\n    function getObjectClass(uint256 _tokenId) public view returns (uint8);\r\n\r\n    function getObjectAddress(uint256 _tokenId) public view returns (address);\r\n\r\n    function getProducerId(uint256 _tokenId) public view returns (uint16);\r\n\r\n    function getOriginAddress(uint256 _tokenId) public view returns (address);\r\n\r\n}\r\n\r\n// Root file: contracts/InterstellarEncoderV3.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n// import \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\n// import \"contracts/interfaces/IInterstellarEncoderV3.sol\";\r\n\r\n// TODO: upgrade.\r\ncontract InterstellarEncoderV3 is IInterstellarEncoderV3, Ownable {\r\n    // [magic_number, chain_id, contract_id <2>, origin_chain_id, origin_contract_id<2>, object_class, convert_type, <6>, land, <128>]\r\n    mapping(uint8 => address) public ownershipId2Address;\r\n    mapping(address => uint8) public ownershipAddress2Id;\r\n\r\n    mapping(address => uint8) public classAddress2Id;   // class\r\n    // extended since V2\r\n    mapping(uint8 => address) public classId2Address;\r\n\r\n    function encodeTokenId(address _tokenAddress, uint8 _objectClass, uint128 _objectId) public view returns (uint256 _tokenId) {\r\n        uint16 contractId = ownershipAddress2Id[_tokenAddress];\r\n        require(ownershipAddress2Id[_tokenAddress] > 0, \"Contract address does not exist\");\r\n\r\n        _tokenId = (MAGIC_NUMBER << 248) + (CHAIN_ID << 240) + (uint256(contractId) << 224)\r\n            + (CHAIN_ID << 216) + (uint256(contractId) << 200) + (uint256(_objectClass) << 192) + (CURRENT_LAND << 128) + uint256(_objectId);\r\n    }\r\n\r\n    function encodeTokenIdForOuter(\r\n        address _nftAddress, address _originNftAddress, uint8 _objectClass, uint128 _objectId, uint16 _producerId, uint8 _convertType) public view returns (uint256) {\r\n        uint16 contractId = ownershipAddress2Id[_nftAddress];\r\n        uint16 originContractId = ownershipAddress2Id[_originNftAddress];\r\n        require(contractId > 0 && originContractId > 0 && _producerId > 0, \"Contract address does not exist\");\r\n\r\n        uint256 tokenId = (MAGIC_NUMBER << 248) + (CHAIN_ID << 240) + (uint256(contractId) << 224)\r\n        + (CHAIN_ID << 216) + (uint256(originContractId) << 200) + (uint256(_objectClass) << 192) + (uint256(_convertType) << 184)+ (uint256(_producerId) << 128) + uint256(_objectId);\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    // TODO; newly added\r\n    // @param _tokenAddress - objectOwnership\r\n    // @param _objectContract - xxxBase contract\r\n    function encodeTokenIdForOuterObjectContract(\r\n        address _objectContract, address _nftAddress, address _originNftAddress, uint128 _objectId, uint16 _producerId, uint8 _convertType) public view returns (uint256) {\r\n        require (classAddress2Id[_objectContract] > 0, \"Object class for this object contract does not exist.\");\r\n\r\n        return encodeTokenIdForOuter(_nftAddress, _originNftAddress, classAddress2Id[_objectContract], _objectId, _producerId, _convertType);\r\n\r\n    }\r\n    // TODO; newly added\r\n    function encodeTokenIdForObjectContract(\r\n        address _tokenAddress, address _objectContract, uint128 _objectId) public view returns (uint256 _tokenId) {\r\n        require (classAddress2Id[_objectContract] > 0, \"Object class for this object contract does not exist.\");\r\n\r\n        _tokenId = encodeTokenId(_tokenAddress, classAddress2Id[_objectContract], _objectId);\r\n    }\r\n\r\n    function registerNewOwnershipContract(address _nftAddress, uint8 _nftId) public onlyOwner {\r\n        ownershipAddress2Id[_nftAddress] = _nftId;\r\n        ownershipId2Address[_nftId] = _nftAddress;\r\n    }\r\n\r\n    function registerNewObjectClass(address _objectContract, uint8 _objectClass) public onlyOwner {\r\n        classAddress2Id[_objectContract] = _objectClass;\r\n        classId2Address[_objectClass] = _objectContract;\r\n    }\r\n\r\n    function getProducerId(uint256 _tokenId) public view returns (uint16) {\r\n        return uint16((_tokenId >> 128) & 0xff);\r\n    }\r\n\r\n    function getContractAddress(uint256 _tokenId) public view returns (address) {\r\n        return ownershipId2Address[uint8((_tokenId >> 240) & 0xff)];\r\n    }\r\n\r\n    function getObjectId(uint256 _tokenId) public view returns (uint128 _objectId) {\r\n        return uint128(_tokenId & CLEAR_HIGH);\r\n    }\r\n\r\n    function getObjectClass(uint256 _tokenId) public view returns (uint8) {\r\n        return uint8((_tokenId << 56) >> 248);\r\n    }\r\n\r\n    function getObjectAddress(uint256 _tokenId) public view returns (address) {\r\n        return classId2Address[uint8((_tokenId << 56) >> 248)];\r\n    }\r\n\r\n    // TODO; newly added\r\n    function getOriginAddress(uint256 _tokenId) public view returns (address) {\r\n        uint8 originContractId = uint8((_tokenId >> 200) & 0xff);\r\n        return ownershipId2Address[originContractId];\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_objectContract\",\"type\":\"address\"},{\"name\":\"_objectId\",\"type\":\"uint128\"}],\"name\":\"encodeTokenIdForObjectContract\",\"outputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getProducerId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAGIC_NUMBER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nftAddress\",\"type\":\"address\"},{\"name\":\"_nftId\",\"type\":\"uint8\"}],\"name\":\"registerNewOwnershipContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getOriginAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CURRENT_LAND\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_objectClass\",\"type\":\"uint8\"},{\"name\":\"_objectId\",\"type\":\"uint128\"}],\"name\":\"encodeTokenId\",\"outputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CHAIN_ID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"classId2Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_objectContract\",\"type\":\"address\"},{\"name\":\"_nftAddress\",\"type\":\"address\"},{\"name\":\"_originNftAddress\",\"type\":\"address\"},{\"name\":\"_objectId\",\"type\":\"uint128\"},{\"name\":\"_producerId\",\"type\":\"uint16\"},{\"name\":\"_convertType\",\"type\":\"uint8\"}],\"name\":\"encodeTokenIdForOuterObjectContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownershipAddress2Id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"classAddress2Id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getObjectAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getObjectId\",\"outputs\":[{\"name\":\"_objectId\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"ownershipId2Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_objectContract\",\"type\":\"address\"},{\"name\":\"_objectClass\",\"type\":\"uint8\"}],\"name\":\"registerNewObjectClass\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_nftAddress\",\"type\":\"address\"},{\"name\":\"_originNftAddress\",\"type\":\"address\"},{\"name\":\"_objectClass\",\"type\":\"uint8\"},{\"name\":\"_objectId\",\"type\":\"uint128\"},{\"name\":\"_producerId\",\"type\":\"uint16\"},{\"name\":\"_convertType\",\"type\":\"uint8\"}],\"name\":\"encodeTokenIdForOuter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getObjectClass\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"InterstellarEncoderV3","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c352e3225990825b99a2cbd81e01e0b063d16050c3884b9349e9ef06537e643e"}]}