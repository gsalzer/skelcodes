{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.3;\r\n\r\ninterface Token {\r\n  function transfer( address to, uint amount ) external;\r\n  function transferFrom( address from, address to, uint amount ) external;\r\n}\r\n\r\ninterface Membership {\r\n  function isMember( address pusher ) external returns (bool);\r\n}\r\n\r\ncontract Owned\r\n{\r\n  address payable public owner;\r\n  constructor() public { owner = msg.sender; }\r\n\r\n  function changeOwner( address payable newOwner ) isOwner public {\r\n    owner = newOwner;\r\n  }\r\n\r\n  modifier isOwner {\r\n    require( msg.sender == owner );\r\n    _;\r\n  }\r\n}\r\n\r\ncontract Publisher is Owned\r\n{\r\n  event Published( string indexed receiverpubkey,\r\n                   string ipfshash,\r\n                   string redmeta );\r\n\r\n  Membership public membership;\r\n\r\n  address payable public treasury;\r\n  uint256 public fee;\r\n  uint256 dao;\r\n\r\n  uint256 public tokenFee;\r\n  Token   public token;\r\n\r\n  constructor() public {\r\n    dao = uint256(100);\r\n  }\r\n\r\n  function setFee( uint256 _fee ) isOwner public {\r\n    fee = _fee;\r\n  }\r\n\r\n  function setDao( uint256 _dao ) isOwner public {\r\n    dao = _dao;\r\n  }\r\n\r\n  function setTreasury( address payable _treasury ) isOwner public {\r\n    treasury = _treasury;\r\n  }\r\n\r\n  function setMembership( address _contract ) isOwner public {\r\n    membership = Membership(_contract);\r\n  }\r\n\r\n  function setTokenFee( uint256 _fee ) isOwner public {\r\n    tokenFee = _fee;\r\n  }\r\n\r\n  function setToken( address _token ) isOwner public {\r\n    token = Token(_token);\r\n  }\r\n\r\n  function publish( string memory receiverpubkey,\r\n                    string memory ipfshash,\r\n                    string memory redmeta ) payable public {\r\n\r\n    require(    msg.value >= fee\r\n             && membership.isMember(msg.sender) );\r\n\r\n    if (treasury != address(0))\r\n      treasury.transfer( msg.value - msg.value / dao );\r\n\r\n    emit Published( receiverpubkey, ipfshash, redmeta );\r\n  }\r\n\r\n  function publish_t( string memory receiverpubkey,\r\n                      string memory ipfshash,\r\n                      string memory redmeta ) public {\r\n\r\n    require( membership.isMember(msg.sender) );\r\n\r\n    token.transferFrom( msg.sender, address(this), tokenFee );\r\n\r\n    if (treasury != address(0)) {\r\n      token.transfer( treasury, tokenFee - tokenFee/dao );\r\n    }\r\n\r\n    emit Published( receiverpubkey, ipfshash, redmeta );\r\n  }\r\n\r\n  function withdraw( uint256 amount ) isOwner public {\r\n    owner.transfer( amount );\r\n  }\r\n\r\n  function sendTok( address _tok, address _to, uint256 _qty ) isOwner public {\r\n    Token(_tok).transfer( _to, _qty );\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTokenFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setMembership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tok\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"sendTok\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"name\":\"ipfshash\",\"type\":\"string\"},{\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"publish\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dao\",\"type\":\"uint256\"}],\"name\":\"setDao\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"membership\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"name\":\"ipfshash\",\"type\":\"string\"},{\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"publish_t\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"receiverpubkey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ipfshash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"redmeta\",\"type\":\"string\"}],\"name\":\"Published\",\"type\":\"event\"}]","ContractName":"Publisher","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://deebe0aad469859390d5a955c78905213227729537eea02ad59226b2ca1f3002"}]}