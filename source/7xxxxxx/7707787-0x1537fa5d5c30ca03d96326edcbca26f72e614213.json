{"status":"1","message":"OK","result":[{"SourceCode":"// hevm: flattened sources of src/fix.sol\r\npragma solidity >=0.4.23 >=0.5.0;\r\n\r\n////// lib/ds-exec/src/exec.sol\r\n// exec.sol - base contract used by anything that wants to do \"untyped\" calls\r\n\r\n// Copyright (C) 2019 Maker\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.4.23; */\r\n\r\ncontract DSExec {\r\n    function tryExec( address target, bytes memory data, uint value)\r\n             internal\r\n             returns (bool ok)\r\n    {\r\n        assembly {\r\n            ok := call(gas, target, value, add(data, 0x20), mload(data), 0, 0)\r\n        }\r\n    }\r\n    function exec( address target, bytes memory data, uint value)\r\n             internal\r\n    {\r\n        if(!tryExec(target, data, value)) {\r\n            revert(\"ds-exec-call-failed\");\r\n        }\r\n    }\r\n\r\n    // Convenience aliases\r\n    function exec( address t, bytes memory c )\r\n        internal\r\n    {\r\n        exec(t, c, 0);\r\n    }\r\n    function exec( address t, uint256 v )\r\n        internal\r\n    {\r\n        bytes memory c; exec(t, c, v);\r\n    }\r\n    function tryExec( address t, bytes memory c )\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return tryExec(t, c, 0);\r\n    }\r\n    function tryExec( address t, uint256 v )\r\n        internal\r\n        returns (bool)\r\n    {\r\n        bytes memory c; return tryExec(t, c, v);\r\n    }\r\n}\r\n\r\n////// src/fix.sol\r\n// fix.sol - change authorities\r\n\r\n// Copyright (C) 2019 Mariano Conti, MakerDAO\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.5.0; */\r\n\r\n/* import \"ds-exec/exec.sol\"; */\r\n\r\ncontract Fix is DSExec {\r\n\r\n    address constant public MOM    = 0xF2C5369cFFb8Ea6284452b0326e326DbFdCb867C; // SaiMom\r\n    address constant public TOP    = 0x9b0ccf7C8994E19F39b2B4CF708e0A7DF65fA8a3; // SaiTop\r\n    address constant public PIP    = 0x729D19f657BD0614b4985Cf1D82531c67569197B; // Pip\r\n    address constant public PEP    = 0x5C1fc813d9c1B5ebb93889B3d63bA24984CA44B7; // Pep\r\n    address constant public MKRUSD = 0x99041F808D598B782D5a3e498681C2452A31da08; // MKR/USD\r\n    \r\n    address constant public CHIEF  = 0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5; // New Chief\r\n    \r\n    bool public done;\r\n\r\n    function cast() public {\r\n        require(!done);\r\n\r\n        bytes memory data = abi.encodeWithSignature(\"setAuthority(address)\", CHIEF);\r\n        \r\n        exec(MOM, data, 0);\r\n        exec(TOP, data, 0);\r\n        \r\n        exec(PIP, data, 0);\r\n        exec(PEP, data, 0);\r\n        \r\n        exec(MKRUSD, data, 0);\r\n\r\n        done = true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"CHIEF\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MKRUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MOM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PEP\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOP\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PIP\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Fix","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8c5cfbd2787f5daad1fc2303a8c78d3a0b2eeb9fe38eae6e23ce4a77611c5b9a"}]}