{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >= 0.4.24 < 0.6.0;\r\n\r\n\r\n/**\r\n * @title INT Coin (trade-mining coin)\r\n */\r\n\r\n\r\n/**\r\n * @title ERC20 Standard Interface\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title INTCoin implementation\r\n */\r\ncontract INTCoin is IERC20 {\r\n    string public name = \"INT\";\r\n    string public symbol = \"INT\";\r\n    uint8 public decimals = 18;\r\n    \r\n    uint256 preSaleAmount;\r\n    uint256 mktAmount;\r\n    uint256 rndAmount;\r\n    uint256 teamAmount;\r\n    uint256 miningAmount;\r\n    \r\n    uint256 _totalSupply;\r\n    mapping(address => uint256) balances;\r\n\r\n    // Admin Address\r\n    address public owner;\r\n    address public master;\r\n    address public rnd;\r\n    address public team;\r\n    \r\n    modifier isOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        master = 0xdae5de7e76f6f2d7d91c984d76fa2deb7b025baa;\r\n        rnd    = 0x15bB050a89081e95ebAb17b6921Fcfdc675395C2;\r\n        team   = 0x216B46BB70D9E08B3078e8B564c62E263e240E91;\r\n        require(owner != rnd);\r\n        require(owner != team);\r\n\r\n        preSaleAmount   = toWei(1250000000);  //1,250,000,000\r\n        mktAmount       = toWei(875000000);   //875,000,000\r\n        rndAmount       = toWei(312500000);   //312,500,000\r\n        teamAmount      = toWei(937500000);   //937,500,000\r\n        miningAmount    = toWei(3125000000);  //3,125,000,000\r\n        _totalSupply    = toWei(6500000000);  //6,500,000,000\r\n\r\n        require(_totalSupply == preSaleAmount + mktAmount + rndAmount + teamAmount + miningAmount);\r\n        \r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, balances[owner]);\r\n        \r\n        transfer(rnd, rndAmount);\r\n        transfer(team, teamAmount);\r\n        require(balances[owner] == miningAmount + preSaleAmount + mktAmount);\r\n        \r\n        transfer(master, balances[owner]);\r\n        require(balances[owner] == 0);\r\n    }\r\n    \r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address who) public view returns (uint256) {\r\n        return balances[who];\r\n    }\r\n    \r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(msg.sender != to);\r\n        //require(msg.sender != owner);   // owner is not free to transfer\r\n        require(to != owner);\r\n        require(value > 0);\r\n        \r\n        require( balances[msg.sender] >= value );\r\n        require( balances[to] + value >= balances[to] );    // prevent overflow\r\n\r\n        if(msg.sender == rnd) {\r\n            require(now >= 1566662400);     // 100% lock to 2019-08-25\r\n        }\r\n\r\n        if(msg.sender == team) {\r\n            require(now >= 1566662400);     // 100% lock to 2019-08-25\r\n        }\r\n\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function burnCoins(uint256 value) public {\r\n        require(msg.sender != owner);   // owner can't burn any coin\r\n        require(balances[msg.sender] >= value);\r\n        require(_totalSupply >= value);\r\n        \r\n        balances[msg.sender] -= value;\r\n        _totalSupply -= value;\r\n\r\n        emit Transfer(msg.sender, address(0), value);\r\n    }\r\n\r\n    function rndValance() public view returns (uint256) {\r\n        return balances[rnd];\r\n    }\r\n    \r\n    /** @dev private function\r\n     */\r\n\r\n    function toWei(uint256 value) private constant returns (uint256) {\r\n        return value * (10 ** uint256(decimals));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rndValance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rnd\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"INTCoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6777f96b17c58c0ae25cebfb2339e7e980a4d3ef272b167d68b668e816184a88"}]}