{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\ncontract AlarmClock {\r\n\r\n    event _newAlarmClock(address _contract, uint startBlock, uint blockWindow, uint reward, uint gas, bytes _callData);\r\n    \r\n    address public owner;\r\n    //uint public initBlock;\r\n    uint public totalTimers;\r\n    uint public waitingTimers;\r\n    \r\n    struct ClockStruct {\r\n        address _contract;\r\n        uint startBlock;\r\n        uint blockWindow;\r\n        uint reward;\r\n        uint gas;\r\n        bytes callData;\r\n    }\r\n    \r\n    //sha3(\"setA(uint256)\")[0:8].hex()\r\n    //'ee919d50'\r\n    //0xee919d500000000000000000000000000000000000000000000000000000000000000001 - call setA(1), method selector 4 bytes\r\n    \r\n    //0x6a3d9d350000000000000000000000000000000000000000000000000000000000000005 - call alarmtest.testFunc(5)\r\n    \r\n    ClockStruct[] public clockList;\r\n  \r\n    constructor () public payable {\r\n        owner = msg.sender;\r\n        //initBlock = block.number;\r\n        totalTimers = 0;\r\n        waitingTimers = 0;\r\n    }  \r\n  \r\n    modifier ownerOnly() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }  \r\n  \r\n    // 1. transfer  //\r\n    function setNewOwner(address _newOwner) public ownerOnly {\r\n        owner = _newOwner;\r\n    }   \r\n  \r\n    /*function refreshBlock() public ownerOnly {\r\n        initBlock = block.number;\r\n    }*/ \r\n  \r\n    // gas required for registration ~200000\r\n    function registerAlarmClock(address _contract, uint startBlock, uint blockWindow, uint gas, bytes  _callData) external payable {\r\n        \r\n        require(gas >= 200000);\r\n        require(msg.value > gas);\r\n        require(block.number < startBlock);\r\n        \r\n        clockList.push(ClockStruct(_contract, startBlock, blockWindow, msg.value - gas, gas, _callData));\r\n        //uint id = clockList.push(ClockStruct(_contract, startBlock, blockWindow, msg.value - gas, gas, callData)) - 1;\r\n        //clockToOwner[id] = msg.sender;\r\n        //clockToValue[id] = msg.value;\r\n        //ownerClockCount[msg.sender]++;\r\n        \r\n        totalTimers++;\r\n        waitingTimers++;\r\n        \r\n        emit _newAlarmClock(_contract, startBlock, blockWindow, msg.value - gas, gas, _callData);\r\n    }  \r\n  \r\n\t// ~30000   +200000gas if called contract request new registration \r\n    function trigerAlarmClock(uint id) external payable {\r\n        \r\n        require(clockList[id].reward > 0);\r\n        require(block.number >= clockList[id].startBlock);\r\n        require(block.number < (clockList[id].startBlock + clockList[id].blockWindow));\r\n        \r\n        msg.sender.transfer(clockList[id].reward);\r\n        require(clockList[id]._contract.call.value(0).gas(clockList[id].gas)(clockList[id].callData));\r\n        \r\n        clockList[id].reward = 0;\r\n        waitingTimers--;\r\n    }  \r\n  \r\n    // fallback function tigered, when contract gets ETH\r\n    function() external payable {\r\n        //?\r\n    }   \r\n    \r\n    function _destroyContract() external ownerOnly {\r\n        selfdestruct(msg.sender);\r\n    }    \r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clockList\",\"outputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"startBlock\",\"type\":\"uint256\"},{\"name\":\"blockWindow\",\"type\":\"uint256\"},{\"name\":\"reward\",\"type\":\"uint256\"},{\"name\":\"gas\",\"type\":\"uint256\"},{\"name\":\"callData\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"waitingTimers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTimers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"startBlock\",\"type\":\"uint256\"},{\"name\":\"blockWindow\",\"type\":\"uint256\"},{\"name\":\"gas\",\"type\":\"uint256\"},{\"name\":\"_callData\",\"type\":\"bytes\"}],\"name\":\"registerAlarmClock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"trigerAlarmClock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_destroyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"blockWindow\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_callData\",\"type\":\"bytes\"}],\"name\":\"_newAlarmClock\",\"type\":\"event\"}]","ContractName":"AlarmClock","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b1e55f7143ca8b2bc00921fd201c184afac81efda268260360a118b2a7a6f4a4"}]}