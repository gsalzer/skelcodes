{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n   * @dev 可拥有的构造函数将合同的原始“所有者”设置为发送者\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev 如果由所有者以外的任何帐户调用，则抛出\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev 允许业主放弃合同的控制权.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev 允许当前所有者将合同的控制转移给新所有者.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev 将合同的控制权移交给新所有者.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract TokenMall is Ownable {\r\n  /**\r\n   * @dev 抵押物上链信息.\r\n   */\r\n  struct MortgageInfo {\r\n      bytes32 projectId;//项目ID \r\n      string currency;//抵押币种 \r\n      string mortgageAmount;//抵押数量 \r\n      string releaseAmount;//释放数量 \r\n  }\r\n  mapping(bytes32 =>MortgageInfo) mInfo;\r\n  bytes32[] mortgageInfos;\r\n   \r\n  /**\r\n   * @dev 添加数据.\r\n   */\r\n    event MessageMintInfo(address sender,bool isScuccess,string message);\r\n    function mintMortgageInfo(string _projectId,string currency,string mortgageAmount,string releaseAmount) onlyOwner{\r\n        bytes32 proId = stringToBytes32(_projectId);\r\n        if(mInfo[proId].projectId != proId){\r\n              mInfo[proId].projectId = proId;\r\n              mInfo[proId].currency = currency;\r\n              mInfo[proId].mortgageAmount = mortgageAmount;\r\n              mInfo[proId].releaseAmount = releaseAmount;\r\n              mortgageInfos.push(proId);\r\n              MessageMintInfo(msg.sender, true,\"添加成功\");\r\n            return;\r\n        }else{\r\n             MessageMintInfo(msg.sender, false,\"项目ID已经存在\");\r\n            return;\r\n        }\r\n    }\r\n  /**\r\n   * @dev 更新数据.\r\n   */\r\n    event MessageUpdateInfo(address sender,bool isScuccess,string message);\r\n    function updateMortgageInfo(string _projectId,string releaseAmount) onlyOwner{\r\n         bytes32 proId = stringToBytes32(_projectId);\r\n        if(mInfo[proId].projectId == proId){\r\n              mInfo[proId].releaseAmount = releaseAmount;\r\n              mortgageInfos.push(proId);\r\n              MessageUpdateInfo(msg.sender, true,\"修改成功\");\r\n            return;\r\n        }else{\r\n             MessageUpdateInfo(msg.sender, false,\"项目ID不存在\");\r\n            return;\r\n        }\r\n    }\r\n     \r\n     \r\n  /**\r\n   * @dev 查询数据.\r\n   */\r\n    function getMortgageInfo(string _projectId) \r\n    public view returns(string projectId,string currency,string mortgageAmount,string releaseAmount){\r\n         \r\n         bytes32 proId = stringToBytes32(_projectId);\r\n         \r\n         MortgageInfo memory mi = mInfo[proId];\r\n        \r\n        return (_projectId,mi.currency,mi.mortgageAmount,mi.releaseAmount);\r\n    }\r\n    \r\n     /// string类型转化为bytes32型转\r\n    function stringToBytes32(string memory source) constant internal returns(bytes32 result){\r\n        assembly{\r\n            result := mload(add(source,32))\r\n        }\r\n    }\r\n    /// bytes32类型转化为string型转\r\n    function bytes32ToString(bytes32 x) constant internal returns(string){\r\n        bytes memory bytesString = new bytes(32);\r\n        uint charCount = 0 ;\r\n        for(uint j = 0 ; j<32;j++){\r\n            byte char = byte(bytes32(uint(x) *2 **(8*j)));\r\n            if(char !=0){\r\n                bytesString[charCount] = char;\r\n                charCount++;\r\n            }\r\n        }\r\n        bytes memory bytesStringTrimmed = new bytes(charCount);\r\n        for(j=0;j<charCount;j++){\r\n            bytesStringTrimmed[j]=bytesString[j];\r\n        }\r\n        return string(bytesStringTrimmed);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"}],\"name\":\"getMortgageInfo\",\"outputs\":[{\"name\":\"projectId\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"mortgageAmount\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"mortgageAmount\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"name\":\"mintMortgageInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"string\"},{\"name\":\"releaseAmount\",\"type\":\"string\"}],\"name\":\"updateMortgageInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageMintInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MessageUpdateInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"TokenMall","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://54ce2893ffb06b2f4035c7da12f01a748180b508fe8baa62fe9866b5b1959f62"}]}