{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.3;\r\n\r\ninterface Token {\r\n  function transfer( address to, uint amount ) external;\r\n  function transferFrom( address from, address to, uint quantity ) external;\r\n}\r\n\r\ncontract Owned\r\n{\r\n  address payable public owner;\r\n  constructor() public { owner = msg.sender; }\r\n\r\n  function changeOwner( address payable newOwner ) isOwner public {\r\n    owner = newOwner;\r\n  }\r\n\r\n  modifier isOwner {\r\n    require( msg.sender == owner );\r\n    _;\r\n  }\r\n}\r\n\r\ncontract Membership is Owned\r\n{\r\n  event Approval( address indexed member, bool status );\r\n  event Receipt( address indexed member, uint256 amount );\r\n  event ReceiptTokens( address indexed member, uint256 amount );\r\n\r\n  mapping( address => bool ) public approvals;\r\n\r\n  address payable public treasury;\r\n  uint256 public fee;\r\n  Token   public token;\r\n  uint256 public tokenFee;\r\n  uint256 dao;\r\n\r\n  constructor() public {\r\n    dao = uint256(100);\r\n  }\r\n\r\n  function setFee( uint256 _fee ) isOwner public {\r\n    fee = _fee;\r\n  }\r\n\r\n  function setDao( uint256 _dao ) isOwner public {\r\n    dao = _dao;\r\n  }\r\n\r\n  function setTreasury( address payable _treasury ) isOwner public {\r\n    treasury = _treasury;\r\n  }\r\n\r\n  function setToken( address _token ) isOwner public {\r\n    token = Token(_token);\r\n  }\r\n\r\n  function setTokenFee( uint _tfee ) isOwner public {\r\n    tokenFee = _tfee;\r\n  }\r\n\r\n  function setApproval( address _member, bool _status ) isOwner public {\r\n    approvals[_member] = _status;\r\n    emit Approval( _member, _status );\r\n  }\r\n\r\n  function isMember( address _addr ) view public returns (bool) {\r\n    return approvals[_addr];\r\n  }\r\n\r\n  function() payable external {\r\n    require( msg.value >= fee, \"Insufficient value.\" );\r\n\r\n    if (treasury != address(0))\r\n      treasury.transfer( msg.value - msg.value / dao );\r\n\r\n    emit Receipt( msg.sender, msg.value );\r\n  }\r\n\r\n  function payWithTokens() public {\r\n    require( token != Token(0) && tokenFee > 0, \"Token not set up.\" );\r\n\r\n    token.transferFrom( msg.sender, address(this), tokenFee );\r\n\r\n    if (treasury != address(0))\r\n      token.transfer( treasury, tokenFee - tokenFee / dao );\r\n\r\n    emit ReceiptTokens( msg.sender, tokenFee );\r\n  }\r\n\r\n  function withdraw( uint256 amount ) isOwner public {\r\n    owner.transfer( amount );\r\n  }\r\n\r\n  function sendTok( address _tok, address _to, uint256 _qty ) isOwner public {\r\n    Token(_tok).transfer( _to, _qty );\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tfee\",\"type\":\"uint256\"}],\"name\":\"setTokenFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tok\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"sendTok\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dao\",\"type\":\"uint256\"}],\"name\":\"setDao\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payWithTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Receipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceiptTokens\",\"type\":\"event\"}]","ContractName":"Membership","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ec11a3aec9ebbbcbccf724e4f1102b35046b7543da226f0a71cc9abc4c2216e0"}]}