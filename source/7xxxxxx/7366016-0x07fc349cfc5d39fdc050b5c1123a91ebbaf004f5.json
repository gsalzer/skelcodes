{"status":"1","message":"OK","result":[{"SourceCode":"pragma  solidity ^ 0.4.24 ;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 安全的加减乘除\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n\r\ncontract COM  {\r\n\tusing SafeMath for uint;\r\n\taddress public owner; \r\n    \r\n    address public backaddress1;\r\n    address public backaddress2;\r\n    uint public per1 = 150 ;\r\n    uint public per2 = 850 ;\r\n    \r\n\t\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier onlyConf(address _back1,uint _limit1,address _back2,uint _limit2) {\r\n\t    require(_back1 !=address(0x0) && _back1 != address(this));\r\n\t    require(_back2 !=address(0x0) && _back2 != address(this));\r\n\t    require(_back2 != _back1);\r\n\t    require(_limit1 >0 && _limit2 >0 && _limit1.add(_limit2)==1000);\r\n\t    _;\r\n\t}\r\n\t\r\n\tevent Transfer(address from,address to,uint value);\r\n\tevent Setowner(address newowner,address oldower);\r\n\t\r\n\tconstructor(address back1,address back2)  public{\r\n\t    require(back1 !=address(0x0) && back1 != address(this));\r\n\t    require(back2 !=address(0x0) && back2 != address(this));\r\n\t    require(back2 != back1);\r\n\t    owner = msg.sender;\r\n\t    backaddress1 = back1;\r\n\t    backaddress2 = back2;\r\n\t}\r\n\t\r\n\tfunction setconf(address _back1,uint _limit1,address _back2,uint _limit2) onlyOwner onlyConf( _back1, _limit1, _back2, _limit2) public {\r\n\t    backaddress1 = _back1;\r\n\t    backaddress2 = _back2;\r\n\t    per1 = _limit1;\r\n\t    per2 = _limit2;\r\n\t}\r\n\tfunction setowner(address _newowner) onlyOwner public {\r\n\t    require(_newowner !=owner && _newowner !=address(this) && _newowner !=address(0x0));\r\n\t    address  oldower = owner;\r\n\t    owner = _newowner;\r\n\t    emit Setowner(_newowner,oldower);\r\n\t}\r\n\t\r\n\tfunction transfer() public payable  {\r\n\t  emit Transfer(msg.sender,address(this),msg.value);\r\n\t  backaddress1.transfer(msg.value * per1 / 1000);\r\n\t  emit Transfer(address(this),backaddress1,msg.value * per1 / 1000);\r\n\t  backaddress2.transfer(msg.value * per2 / 1000);\r\n\t  emit Transfer(address(this),backaddress2,msg.value * per2 / 1000);\r\n\t}\r\n\t\r\n\tfunction () public payable  {\r\n\t  transfer();\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"per2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"setowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"per1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_back1\",\"type\":\"address\"},{\"name\":\"_limit1\",\"type\":\"uint256\"},{\"name\":\"_back2\",\"type\":\"address\"},{\"name\":\"_limit2\",\"type\":\"uint256\"}],\"name\":\"setconf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backaddress1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backaddress2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"back1\",\"type\":\"address\"},{\"name\":\"back2\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newowner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldower\",\"type\":\"address\"}],\"name\":\"Setowner\",\"type\":\"event\"}]","ContractName":"COM","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000b6c59f0bf566a5006833cec3ec43a4ae1ddf2ad40000000000000000000000009dabda29bd0d6a3a30227f3782b025c61f37c36d","Library":"","SwarmSource":"bzzr://63e49b62fb680ba696f6c8614f8af7eb03e7f7f7298586334b167675a60d76ce"}]}