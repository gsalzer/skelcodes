{"status":"1","message":"OK","result":[{"SourceCode":"// solium-disable linebreak-style\r\npragma solidity ^0.5.0;\r\n\r\ncontract CryptoTycoonsVIPLib{\r\n    \r\n    address payable public owner;\r\n\r\n    mapping (address => uint) userExpPool;\r\n    mapping (address => bool) public callerMap;\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"OnlyOwner methods called by non-owner.\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyCaller {\r\n        bool isCaller = callerMap[msg.sender];\r\n        require(isCaller, \"onlyCaller methods called by non-caller.\");\r\n        _;\r\n    }\r\n\r\n    constructor() public{\r\n        owner = msg.sender;\r\n        callerMap[owner] = true;\r\n    }\r\n\r\n    function kill() external onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function addCaller(address caller) public onlyOwner{\r\n        bool isCaller = callerMap[caller];\r\n        if (isCaller == false){\r\n            callerMap[caller] = true;\r\n        }\r\n    }\r\n\r\n    function deleteCaller(address caller) external onlyOwner {\r\n        bool isCaller = callerMap[caller];\r\n        if (isCaller == true) {\r\n            callerMap[caller] = false;\r\n        }\r\n    }\r\n\r\n    function addUserExp(address addr, uint256 amount) public onlyCaller{\r\n        uint exp = userExpPool[addr];\r\n        exp = exp + amount;\r\n        userExpPool[addr] = exp;\r\n    }\r\n\r\n    function getUserExp(address addr) public view returns(uint256 exp){\r\n        return userExpPool[addr];\r\n    }\r\n\r\n    function getVIPLevel(address user) public view returns (uint256 level) {\r\n        uint exp = userExpPool[user];\r\n\r\n        if(exp >= 30 ether && exp < 150 ether){\r\n            level = 1;\r\n        } else if(exp >= 150 ether && exp < 300 ether){\r\n            level = 2;\r\n        } else if(exp >= 300 ether && exp < 1500 ether){\r\n            level = 3;\r\n        } else if(exp >= 1500 ether && exp < 3000 ether){\r\n            level = 4;\r\n        } else if(exp >= 3000 ether && exp < 15000 ether){\r\n            level = 5;\r\n        } else if(exp >= 15000 ether && exp < 30000 ether){\r\n            level = 6;\r\n        } else if(exp >= 30000 ether && exp < 150000 ether){\r\n            level = 7;\r\n        } else if(exp >= 150000 ether){\r\n            level = 8;\r\n        } else{\r\n            level = 0;\r\n        }\r\n\r\n        return level;\r\n    }\r\n\r\n    function getVIPBounusRate(address user) public view returns (uint256 rate){\r\n        uint level = getVIPLevel(user);\r\n\r\n        if(level == 1){\r\n            rate = 1;\r\n        } else if(level == 2){\r\n            rate = 2;\r\n        } else if(level == 3){\r\n            rate = 3;\r\n        } else if(level == 4){\r\n            rate = 4;\r\n        } else if(level == 5){\r\n            rate = 5;\r\n        } else if(level == 6){\r\n            rate = 7;\r\n        } else if(level == 7){\r\n            rate = 9;\r\n        } else if(level == 8){\r\n            rate = 11;\r\n        } else if(level == 9){\r\n            rate = 13;\r\n        } else if(level == 10){\r\n            rate = 15;\r\n        } else{\r\n            rate = 0;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"deleteCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVIPLevel\",\"outputs\":[{\"name\":\"level\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"addCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVIPBounusRate\",\"outputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addUserExp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"callerMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUserExp\",\"outputs\":[{\"name\":\"exp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CryptoTycoonsVIPLib","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://18b6ab47a96c155e9b798af220b8773dc632994fe490f1e9182b0f087fe4043d"}]}