{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  function setCrowdsale(address tokenWallet, uint256 amount) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract cDeployer {\r\n\tfunction deployCrowdsale(address _tWallet, address _token, address _eWallet, uint _maxETH, address reqBy) public returns (address);\r\n}\r\n\r\ncontract tDeployer {\r\n\tfunction deployToken(string _tName, string _tSymbol, uint _mint, address _owner) public returns (address);\r\n}\r\n\r\ncontract customTkn {\r\n    function multiTransfer(address[] _to, uint256[] _values) public;\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract contractDeployer is Ownable {\r\n\t\r\n\tevent ContractCreated(address newAddress);\r\n\t\r\n    address public tokenAddr;\r\n\tuint public tokenFee;\r\n\tuint public crowdsaleFee;\r\n\tuint public multisendFee;\r\n\r\n\tERC20 token;\r\n\tcDeployer cdep;\r\n\ttDeployer tdep;\r\n\r\n\tfunction setUp(address _token, address _cdep, address _tdep) public onlyOwner {\r\n\t\ttokenAddr = _token;\r\n\t\ttoken = ERC20(tokenAddr);\r\n\t\tcdep = cDeployer(_cdep);\r\n\t\ttdep = tDeployer(_tdep);\r\n\t}\r\n\tfunction changeTokenFee(uint _amount) public onlyOwner {\r\n\t\ttokenFee = _amount;\r\n\t}\r\n\tfunction changeCrowdsaleFee(uint _amount) public onlyOwner {\r\n\t\tcrowdsaleFee = _amount;\r\n\t}\r\n\tfunction changeMultisendFee(uint _amount) public onlyOwner {\r\n\t\tmultisendFee = _amount;\r\n\t}\r\n\r\n\tfunction deployToken(string _tName, string _tSymbol, uint _mint, address _owner) public returns (address) {\r\n\t\trequire(token.transferFrom(msg.sender, owner, tokenFee));\r\n\t\temit ContractCreated(tdep.deployToken(_tName, _tSymbol, _mint, _owner));\r\n\t}\r\n\t\r\n\tfunction deployCrowdsale(address _tWallet, address _token, address _eWallet, uint _maxETH) public returns (address) {\r\n\t\trequire(token.transferFrom(msg.sender, owner, crowdsaleFee));\r\n\t\temit ContractCreated(cdep.deployCrowdsale(_eWallet, _token, _tWallet, _maxETH, msg.sender));\r\n\t}\r\n\r\n\r\n\tfunction multiSender(address _token, uint _total, address[] _to, uint[] _amount) public {\r\n\t\trequire(token.transferFrom(msg.sender, owner, multisendFee));\r\n\t\tcustomTkn er2 = customTkn(_token);\r\n\t\trequire(er2.transferFrom(msg.sender, this, _total));\r\n\t\ter2.multiTransfer(_to, _amount);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tName\",\"type\":\"string\"},{\"name\":\"_tSymbol\",\"type\":\"string\"},{\"name\":\"_mint\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"deployToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"changeTokenFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_cdep\",\"type\":\"address\"},{\"name\":\"_tdep\",\"type\":\"address\"}],\"name\":\"setUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tWallet\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_eWallet\",\"type\":\"address\"},{\"name\":\"_maxETH\",\"type\":\"uint256\"}],\"name\":\"deployCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"changeMultisendFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"changeCrowdsaleFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_total\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"multiSender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisendFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"contractDeployer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8bfae636dc8d03ad931cb78b5a0cb725c194ef25ef396574d325f44665708919"}]}