{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\ncontract CareerCertificate {\r\n\r\n    struct Certificate {\r\n\r\n    bytes32 id;\r\n    bool isCertificate;\r\n    bytes32 date;\r\n    string completeName;\r\n    string RUT;\r\n    string institution;\r\n    bytes32 RutInstitution;\r\n    string title;\r\n    string Totalhash;\r\n    bytes32 FechaTitulacion;\r\n    bytes32 NroRegistro;\r\n    bytes32 CodigoVerificacion;\r\n    \r\n    bool active;\r\n\r\n  }\r\n\r\n    address public ceoAddress;\r\n    mapping(address=>bool) employee;\r\n\r\n    mapping (bytes32 => Certificate) certificates;\r\n\r\n    event CertificateCreated(address creator, string id, string RUT);\r\n    event SetActive(address responsable, string id, bool active, string description);\r\n\r\n    constructor() public {\r\n    ceoAddress = msg.sender;\r\n}\r\n    //funcion que crea un certificado recibe los campos y lo convierte en la variable bytes32\r\n    function createCertificate(string _id, string _date, string _completeName, string _RUT, string _institution, string _RutInstition, string _title, string _Totalhash, string _FechaTitulacion, \r\n                                string _NroRegistro, string _CodigoVerificacion) public onlyEmployees {\r\n \r\n         bytes32 realId = convert(_id);\r\n         \r\n         certificates[realId].id = realId;\r\n         certificates[realId].isCertificate = true;\r\n         certificates[realId].date = convert(_date);\r\n         \r\n         certificates[realId].completeName = _completeName;\r\n         certificates[realId].RUT =_RUT;\r\n         certificates[realId].institution =_institution ;\r\n         certificates[realId].RutInstitution = convert(_RutInstition);//CAMBIOS\r\n         certificates[realId].title = _title;\r\n         certificates[realId].Totalhash= _Totalhash;//CAMBIOS\r\n         certificates[realId].FechaTitulacion = convert(_FechaTitulacion);//CAMBIOS\r\n         certificates[realId].NroRegistro = convert(_NroRegistro) ;//CAMBIOS\r\n         certificates[realId].CodigoVerificacion = convert(_CodigoVerificacion);//CAMBIOS\r\n         \r\n         certificates[realId].active = true;\r\n        \r\n         emit CertificateCreated(msg.sender, _id, _RUT);\r\n}\r\n    function convert(string key) internal returns (bytes32 ret) {\r\n     if (bytes(key).length > 32) {\r\n        throw;\r\n     }\r\n\r\n     assembly {\r\n        ret := mload(add(key, 32))\r\n     }\r\n   }\r\n   function setActive(string _id, bool _active, string description) onlyEmployees {\r\n         bytes32 realId = convert(_id);\r\n         certificates[realId].active = _active;\r\n\r\n        emit SetActive(msg.sender, _id, _active, description);\r\n}\r\n\r\nfunction setCEO(address _newCEO) external onlyCEO {\r\n        require(_newCEO != address(0));\r\n\r\n        ceoAddress = _newCEO;\r\n    }\r\n    function setEmployee (address user) external  onlyCEO {\r\n        employee[user]=true;\r\n    }\r\n    function removeEmployee (address user) external onlyCEO{\r\n        employee[0];\r\n        employee[user] = employee[0];\r\n    }\r\n    //Ver si employee esta agregado\r\n    function getEmployee(address user) public view returns (bool) {\r\n    return employee[user];\r\n    }\r\n    modifier onlyCEO() {\r\n        require(msg.sender == ceoAddress );\r\n        _;\r\n    }\r\n    modifier onlyEmployees() {\r\n        require(employee[msg.sender] == true || msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setEmployee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getEmployee\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"},{\"name\":\"_active\",\"type\":\"bool\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"setActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"},{\"name\":\"_date\",\"type\":\"string\"},{\"name\":\"_completeName\",\"type\":\"string\"},{\"name\":\"_RUT\",\"type\":\"string\"},{\"name\":\"_institution\",\"type\":\"string\"},{\"name\":\"_RutInstition\",\"type\":\"string\"},{\"name\":\"_title\",\"type\":\"string\"},{\"name\":\"_Totalhash\",\"type\":\"string\"},{\"name\":\"_FechaTitulacion\",\"type\":\"string\"},{\"name\":\"_NroRegistro\",\"type\":\"string\"},{\"name\":\"_CodigoVerificacion\",\"type\":\"string\"}],\"name\":\"createCertificate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeEmployee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"RUT\",\"type\":\"string\"}],\"name\":\"CertificateCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"responsable\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"SetActive\",\"type\":\"event\"}]","ContractName":"CareerCertificate","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cc614cc9510517d1a9d89bc216056dc9443d631031d6fe77ac4d814b93180592"}]}