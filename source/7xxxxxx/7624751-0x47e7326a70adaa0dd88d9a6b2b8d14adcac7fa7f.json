{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IOwnable {\r\n\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerChanged(address _oldOwner, address _newOwner);\r\n\r\n    function changeOwner(address _newOwner) public;\r\n    function acceptOwnership() public;\r\n}\r\n\r\ncontract IVoting is IOwnable {\r\n\r\n    uint public startDate;\r\n    uint public endDate;\r\n    uint public votesYes;\r\n    uint public votesNo;\r\n    uint8 public subject;\r\n    uint public nextVotingDate;\r\n\r\n\r\n    event InitVoting(uint startDate, uint endDate, uint8 subject);\r\n    event Vote(address _address, int _vote);\r\n\r\n    function initProlongationVoting() public;\r\n    function initTapChangeVoting(uint8 newPercent) public;\r\n    function inProgress() public view returns (bool);\r\n    function yes(address _address, uint _votes) public;\r\n    function no(address _address, uint _votes) public;\r\n    function vote(address _address) public view returns (int);\r\n    function votesTotal() public view returns (uint);\r\n    function isSubjectApproved() public view returns (bool);\r\n}\r\n\r\ncontract Ownable is IOwnable {\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnerChanged(address(0), owner);\r\n    }\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerChanged(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(a >= b);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Voting is IVoting, SafeMath, Ownable {\r\n\r\n    uint16 private currentVoting;\r\n    mapping (address => int) private votes;\r\n    mapping (address => uint16) private lastVoting;\r\n    bool private prolongationVoted;\r\n\r\n    function inProgress() public view returns (bool) {\r\n        return now >= startDate && now <= endDate;\r\n    }\r\n\r\n    function init(uint _startDate, uint _duration, uint8 _subject) private {\r\n        require(!inProgress());\r\n        require(_startDate >= now);\r\n        require(_subject > 0 && _subject <= 100);\r\n        currentVoting += 1;\r\n        startDate = _startDate;\r\n        endDate = _startDate + _duration;\r\n        votesYes = 0;\r\n        votesNo = 0;\r\n        subject = _subject;\r\n        emit InitVoting(_startDate, endDate, subject);\r\n    }\r\n\r\n    function yes(address _address, uint _votes) public onlyOwner {\r\n        require(inProgress());\r\n        require(lastVoting[_address] < currentVoting);\r\n        require(_votes > 0);\r\n        lastVoting[_address] = currentVoting;\r\n        votes[_address] = int(_votes);\r\n        votesYes = safeAdd(votesYes, _votes);\r\n        emit Vote(_address, int(_votes));\r\n    }\r\n\r\n    function no(address _address, uint _votes) public onlyOwner {\r\n        require(inProgress());\r\n        require(lastVoting[_address] < currentVoting);\r\n        require(_votes > 0);\r\n        lastVoting[_address] = currentVoting;\r\n        votes[_address] = 0 - int(_votes);\r\n        votesNo = safeAdd(votesNo, _votes);\r\n        emit Vote(_address, 0 - int(_votes));\r\n    }\r\n\r\n    function vote(address _address) public view returns (int) {\r\n        if (lastVoting[_address] == currentVoting) {\r\n            return votes[_address];\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function votesTotal() public view returns (uint) {\r\n        return safeAdd(votesYes, votesNo);\r\n    }\r\n\r\n    function isSubjectApproved() public view returns (bool) {\r\n        return votesYes > votesNo;\r\n    }\r\n\r\n    function initProlongationVoting() public onlyOwner {\r\n        require(!prolongationVoted);\r\n        init(now, 24 hours, 30);\r\n        prolongationVoted = true;\r\n    }\r\n\r\n    function initTapChangeVoting(uint8 newPercent) public onlyOwner {\r\n        require(now > nextVotingDate);\r\n        init(now, 14 days, newPercent);\r\n        nextVotingDate = now + 30 days;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"subject\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"no\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votesNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initProlongationVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSubjectApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votesTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPercent\",\"type\":\"uint8\"}],\"name\":\"initTapChangeVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inProgress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votesYes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"yes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextVotingDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"subject\",\"type\":\"uint8\"}],\"name\":\"InitVoting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_vote\",\"type\":\"int256\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"Voting","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4645a987dd38b4bb38162b1e99d933383d6920620a7b8662df3bd4bc9ad27ee0"}]}