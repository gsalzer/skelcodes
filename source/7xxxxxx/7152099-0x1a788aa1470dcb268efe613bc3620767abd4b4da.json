{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.0 <0.6.0;\r\n\r\ncontract owned {\r\n    address public owner;\r\n    address public manager;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Coin {\r\n    function getOwner(uint index) public view returns (address, uint256);\r\n    function getOwnerCount() public view returns (uint);\r\n}\r\n\r\ncontract RTDAirdrop is owned{\r\n    event console(address addr, uint256 amount);\r\n    event AirDrop(address indexed from, address indexed to, uint256 value);\r\n    string public detail;\r\n    uint public eth_price_per_usd;\r\n    uint public rtd_price_per_eth;\r\n    uint public date_start;\r\n    uint public date_end;\r\n    uint public active_round;\r\n\r\n    struct Member {\r\n        uint256 have_rtd;\r\n        uint256 dividend;\r\n        uint take;\r\n    }\r\n\r\n    struct Round {\r\n        string detail;\r\n        uint eth_price_per_usd;\r\n        uint rtd_price_per_eth;\r\n        uint date_start;\r\n        uint date_end;\r\n        mapping(address => Member) members;\r\n    }\r\n\r\n    Round[] public round;\r\n\r\n\r\n    function setting( string memory new_detail, uint new_eth_price_per_usd, uint new_rtd_price_per_eth, uint new_date_start, uint new_date_end ) onlyOwner public {\r\n\r\n            detail = new_detail;\r\n            eth_price_per_usd = new_eth_price_per_usd;\r\n            rtd_price_per_eth = new_rtd_price_per_eth;\r\n            date_start = new_date_start;\r\n            date_end = new_date_end;\r\n            active_round = round.length;\r\n\r\n            round[active_round]=Round(detail,eth_price_per_usd,rtd_price_per_eth,date_start,date_end);\r\n            Coin c = Coin(0x003FfEFeFBC4a6F34a62A3cA7b7937a880065BCB);\r\n            for (uint256 i = 0; i < c.getOwnerCount(); i++) {\r\n                address addr;\r\n                uint256 amount;\r\n                (addr, amount)  = c.getOwner(i);\r\n                round[active_round].members[addr] = Member(amount,(amount * (eth_price_per_usd * rtd_price_per_eth)),0);\r\n            } \r\n\r\n    }\r\n\r\n\r\n    function getAirDrop() public {\r\n        require (now >= date_start);  \r\n        require (now <= date_end);  \r\n        require (msg.sender != address(0x0));                \r\n        if(round[active_round].members[msg.sender].take==0){\r\n            round[active_round].members[msg.sender].take=1;\r\n            //msg.sender.transfer(members[msg.sender].dividend);\r\n            emit AirDrop(0x003FfEFeFBC4a6F34a62A3cA7b7937a880065BCB, msg.sender, round[active_round].members[msg.sender].dividend);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"date_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_detail\",\"type\":\"string\"},{\"name\":\"new_eth_price_per_usd\",\"type\":\"uint256\"},{\"name\":\"new_rtd_price_per_eth\",\"type\":\"uint256\"},{\"name\":\"new_date_start\",\"type\":\"uint256\"},{\"name\":\"new_date_end\",\"type\":\"uint256\"}],\"name\":\"setting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"round\",\"outputs\":[{\"name\":\"detail\",\"type\":\"string\"},{\"name\":\"eth_price_per_usd\",\"type\":\"uint256\"},{\"name\":\"rtd_price_per_eth\",\"type\":\"uint256\"},{\"name\":\"date_start\",\"type\":\"uint256\"},{\"name\":\"date_end\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_price_per_usd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detail\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"date_start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"active_round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rtd_price_per_eth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAirDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"console\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AirDrop\",\"type\":\"event\"}]","ContractName":"RTDAirdrop","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f31eac0cf2cf7c83e7754776ff48e38b1eb2de5f0d3e30a1ee8c12b0db7737f3"}]}