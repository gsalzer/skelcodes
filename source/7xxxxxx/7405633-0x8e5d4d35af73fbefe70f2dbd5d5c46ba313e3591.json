{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.6;\r\n\r\n/****************************************************************************\r\n*                 ******E-MajDeals Share Smart Contract******               *\r\n*                 Symbol      :   EMD                                       *\r\n*                 Name        :   EMDS                                      *\r\n*                 Total Supply:   20 000 000                                *\r\n*                 Decimals    :   18                                        *\r\n*                 Almar Blockchain Technology                               *\r\n*                 *******************************************               *\r\n****************************************************************************/\r\n\r\n\r\n/****************************************************************************\r\n*                       Safemath Library                                    *\r\n*                       to prevent Over / Underflow                         *\r\n****************************************************************************/\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) { c = a + b; assert(c >= a); return c; }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) { assert(b <= a); return a - b; }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) { if (a == 0){return 0;} c = a * b; assert(c / a == b); return c; }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) { assert(b > 0); return a / b; }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) { assert(b != 0); return a % b;}\r\n}\r\n\r\n/****************************************************************************\r\n*                       ERC20 Interface                                     *\r\n****************************************************************************/\r\ninterface ERC20_Interface {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address target) external view returns (uint256);\r\n    function transfer(address target, uint256 value) external returns (bool);\r\n    event Transfer(address indexed origin, address indexed target, uint256 value);\r\n\r\n    function allowance(address origin, address target) external view returns (uint256);\r\n    function approve(address origin, uint256 value) external returns (bool);\r\n    function transferFrom(address origin, address target, uint256 value) external returns (bool);\r\n    event Approval(address indexed origin, address indexed target, uint256 value);\r\n}\r\n\r\n/****************************************************************************\r\n*                       Contract Recipient Interface                        *\r\n****************************************************************************/\r\ninterface recipient {\r\n    function contractFallback(address from, uint256 value, address token) external returns (bool);\r\n}\r\n\r\n/****************************************************************************\r\n*                  Centralized Ownership Contract                           *\r\n*                   for authorization Control                               *\r\n****************************************************************************/\r\ncontract Ownable { \r\n    address private _owner;\r\n    constructor () internal { _owner = msg.sender; }\r\n    function owner() public view returns (address) { return _owner; }\r\n    function isOwner() public view returns (bool) { return msg.sender == _owner; }\r\n    modifier onlyOwner() { require(isOwner()); _; }\r\n}\r\n\r\n/****************************************************************************\r\n*                       The E-MajDeals Shares Contract                      *\r\n****************************************************************************/\r\ncontract EMDS is ERC20_Interface, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n\r\n    mapping (address => uint256) private _balanceOf;\r\n    mapping (address => mapping (address => uint256)) private _allowance;\r\n\r\n    event Transfer(address indexed origin, address indexed target, uint256 value);\r\n    event Approval(address indexed origin, address indexed target, uint256 value);\r\n\r\n\r\n    constructor() public {\r\n        _name = \"EMDS\";\r\n        _symbol = \"EMD\";\r\n        _decimals = 18;\r\n        _totalSupply = 20000000 * 10**uint256(_decimals);\r\n        _balanceOf[msg.sender] = _totalSupply;\r\n\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) { return _totalSupply; }\r\n    function balanceOf(address target) public view returns (uint256) { return _balanceOf[target]; }\r\n    function transfer(address target, uint256 value) public returns (bool) {_transfer(msg.sender, target, value); return true; }\r\n\r\n    function allowance(address origin, address target) public view returns (uint256) { return _allowance[origin][target]; }\r\n    function approve(address target, uint256 value) public returns (bool) { _approve(msg.sender, target, value); return true; }\r\n    function transferFrom(address origin, address target, uint256 value) public returns (bool) { _approve(origin, msg.sender, _allowance[origin][msg.sender].sub(value)); _transfer(origin, target, value); return true; }\r\n    \r\n    //----------------------Internals ----------------------------------------\r\n    function _transfer(address origin, address target, uint256 value) internal {\r\n        require(origin != address(0x0));\r\n        _balanceOf[origin] = _balanceOf[origin].sub(value);\r\n        _balanceOf[target] = _balanceOf[target].add(value);\r\n        emit Transfer(origin, target, value);\r\n    }\r\n\r\n    function _approve(address origin, address target, uint256 value) internal {\r\n        require(origin != address(0x0));\r\n        require(target != address(0x0));\r\n\r\n        _allowance[origin][target] = value;\r\n        emit Approval(origin, target, value);\r\n    }\r\n\r\n    //------------------------------------------------------------------------\r\n    function burnEMDS(uint256 value) public onlyOwner {\r\n        _balanceOf[msg.sender] = _balanceOf[msg.sender].sub(value);\r\n        _totalSupply = _totalSupply.sub(value);\r\n        emit Transfer(msg.sender, address(0), value);\r\n    }\r\n\r\n    function emitEMDS(uint256 value) public onlyOwner{\r\n        _balanceOf[msg.sender] = _balanceOf[msg.sender].add(value);\r\n        _totalSupply = _totalSupply.add(value);\r\n        emit Transfer(address(0), msg.sender, value);\r\n    }\r\n\r\n    function revertTransfer(address origin, address target, uint256 value) public onlyOwner{\r\n        require(origin != address(0));\r\n        require(target != address(0));\r\n        _transfer(origin, target, value);\r\n        emit Transfer(origin, target, value);\r\n    }\r\n    \r\n    //------------------------------------------------------------------------\r\n    function transferAndCall(address target, uint256 value) public returns (bool success){\r\n        require(transfer(target, value));\r\n        recipient spender = recipient(target);\r\n        require(spender.contractFallback(msg.sender, value, address(this)));\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"origin\",\"type\":\"address\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"origin\",\"type\":\"address\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"revertTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnEMDS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"emitEMDS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"origin\",\"type\":\"address\"},{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EMDS","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://560b080191c52eeb680899c37ec3bfee64a45582db8f5444918f9ea234885135"}]}