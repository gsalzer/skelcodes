{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4 .18;\r\ncontract Shuffle {\r\n function shuffle(uint random)\r\n  public pure returns(uint[])\r\n  {\r\n\r\n   uint[] memory data=new uint[](52);\r\n\r\n   for(uint i=0;i<52;i++)\r\n   {\r\n       data[i]=i;\r\n   }\r\n   for(uint j=0;j<100;j++)\r\n  {\r\n\r\n      uint m=(j%52);\r\n      uint seed= uint256(keccak256(abi.encodePacked(random+j)));\r\n      uint inx=seed%52;\r\n      uint t=data[inx];\r\n      data[inx]=data[m];\r\n      data[m]=t;\r\n  }\r\n\r\n   return data;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"shuffle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"Shuffle","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ce9f5c595acd9110700d277c5b1fc7811104daf451f32f7bd199a68dc49bb486"}]}