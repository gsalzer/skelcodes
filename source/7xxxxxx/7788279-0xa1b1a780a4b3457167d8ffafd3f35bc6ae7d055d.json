{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\ncontract KeyCup  {\r\n  function generateQR(string memory salt) public view returns (bytes32 hash) {\r\n    hash = keccak256(abi.encodePacked(address(this),msg.sender, salt));\r\n  }\r\n  function hashQRCode(bytes32 qr, uint256 pin) public pure returns (bytes32 hash) {\r\n    hash = keccak256(abi.encodePacked(qr, pin));\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"qr\",\"type\":\"bytes32\"},{\"name\":\"pin\",\"type\":\"uint256\"}],\"name\":\"hashQRCode\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"salt\",\"type\":\"string\"}],\"name\":\"generateQR\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"KeyCup","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://045d9c1c09d5befb3b977f4e971b814a76a40d29830160bd01c0f6c25cc3e959"}]}