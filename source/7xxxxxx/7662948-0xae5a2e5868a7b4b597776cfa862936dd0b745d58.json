{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\ncontract DocSignature {\r\n\r\n  struct SignProcess {\r\n    bytes16 id;\r\n    bytes16[] participants;\r\n  }\r\n\r\n  address controller;\r\n  mapping(address => bool) isOwner;\r\n  mapping(bytes => SignProcess[]) documents;\r\n  address[] public owners;\r\n\r\n  constructor(address _controller, address _owner) public {\r\n    controller = _controller;\r\n    isOwner[_owner] = true;\r\n    owners.push(_owner);\r\n  }\r\n\r\n  modifier notNull(address _address) {\r\n    require(_address != 0);\r\n    _;\r\n  }\r\n\r\n  function addOwner(address _owner) public notNull(_owner) returns (bool) {\r\n    require(isOwner[msg.sender]);\r\n    isOwner[_owner] = true;\r\n    owners.push(_owner);\r\n    return true;\r\n  }\r\n\r\n  function removeOwner(address _owner) public notNull(_owner) returns (bool) {\r\n    require(msg.sender != _owner && isOwner[msg.sender]);\r\n    isOwner[_owner] = false;\r\n    for (uint i=0; i<owners.length - 1; i++)\r\n      if (owners[i] == _owner) {\r\n        owners[i] = owners[owners.length - 1];\r\n        break;\r\n      }\r\n    owners.length -= 1;\r\n    return true;\r\n  }\r\n\r\n  function getOwners() public constant returns (address[]) {\r\n    return owners;\r\n  }\r\n\r\n  function setController(address _controller) public notNull(_controller) returns (bool) {\r\n    require(isOwner[msg.sender]);\r\n    controller = _controller;\r\n    return true;\r\n  }\r\n\r\n  function signDocument(bytes _documentHash, bytes16 _signProcessId, bytes16[] _participants) public returns (bool) {\r\n    require(msg.sender == controller);\r\n    documents[_documentHash].push(SignProcess(_signProcessId, _participants));\r\n    return true;\r\n  }\r\n\r\n  function getDocumentSignatures(bytes _documentHash) public view returns (bytes16[], bytes16[]) {\r\n    uint _signaturesCount = 0;\r\n    for (uint o = 0; o < documents[_documentHash].length; o++) {\r\n      _signaturesCount += documents[_documentHash][o].participants.length;\r\n    }\r\n\r\n    bytes16[] memory _ids = new bytes16[](_signaturesCount);\r\n    bytes16[] memory _participants = new bytes16[](_signaturesCount);\r\n\r\n    uint _index = 0;\r\n    for (uint i = 0; i < documents[_documentHash].length; i++) {\r\n      for (uint j = 0; j < documents[_documentHash][i].participants.length; j++) {\r\n        _ids[_index] =  documents[_documentHash][i].id;\r\n        _participants[_index] = documents[_documentHash][i].participants[j];\r\n        _index++;\r\n      }\r\n    }\r\n\r\n    return (_ids, _participants);\r\n  }\r\n\r\n  function getDocumentProcesses(bytes _documentHash) public view returns (bytes16[]) {\r\n    bytes16[] memory _ids = new bytes16[](documents[_documentHash].length);\r\n\r\n    for (uint i = 0; i < documents[_documentHash].length; i++) {\r\n      _ids[i] =  documents[_documentHash][i].id;\r\n    }\r\n\r\n    return (_ids);\r\n  }\r\n\r\n  function getProcessParties(bytes _documentHash, bytes16 _processId) public view returns (bytes16[]) {\r\n    for (uint i = 0; i < documents[_documentHash].length; i++) {\r\n      if (documents[_documentHash][i].id == _processId)\r\n        return (documents[_documentHash][i].participants);\r\n    }\r\n    return (new bytes16[](0));\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_documentHash\",\"type\":\"bytes\"},{\"name\":\"_processId\",\"type\":\"bytes16\"}],\"name\":\"getProcessParties\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_documentHash\",\"type\":\"bytes\"},{\"name\":\"_signProcessId\",\"type\":\"bytes16\"},{\"name\":\"_participants\",\"type\":\"bytes16[]\"}],\"name\":\"signDocument\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_documentHash\",\"type\":\"bytes\"}],\"name\":\"getDocumentProcesses\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_documentHash\",\"type\":\"bytes\"}],\"name\":\"getDocumentSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16[]\"},{\"name\":\"\",\"type\":\"bytes16[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DocSignature","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f17f12ffe9e7d62fabe8ad98f322517b7ee002e9000000000000000000000000513555f05e2d86dad611558cb2ded16fb371db59","Library":"","SwarmSource":"bzzr://dbeeabccff9fab146d4dfe2b8933ff4bc1315683fc74a99b2a1e691c07f9e304"}]}