{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.8;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract MeetupQrManager {\r\n\r\n    using SafeMath for uint256;\r\n    \r\n    mapping (bytes32 => address[]) public meetups;\r\n    string[] public names;\r\n    \r\n    function transfer(\r\n        string memory name, \r\n        address tokenContract, \r\n        address account, \r\n        address[] memory addresses\r\n    ) public returns(bool) {\r\n        IERC20 token = IERC20(tokenContract);\r\n        uint256 amount = token.allowance(account, address(this));\r\n        \r\n        uint256 length = addresses.length;\r\n        uint256 total = amount.div(length);\r\n        \r\n        bytes32 key = keccak256(bytes(name));\r\n        names.push(name);\r\n\r\n        for (uint256 i=0;i<length;i++) {\r\n            require(token.transferFrom(account, addresses[i], total));\r\n            meetups[key].push(addresses[i]);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function getAddresses(string memory name) public view returns (address[] memory addresses) {\r\n        bytes32 key = keccak256(bytes(name));\r\n        addresses = meetups[key];\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getAddresses\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"names\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"meetups\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MeetupQrManager","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c9baac6a619d2e913b5805405fa849157595c72a08d768169fe7e5b66f73e3b6"}]}