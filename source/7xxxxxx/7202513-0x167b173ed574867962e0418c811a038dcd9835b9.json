{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract SharingContract {\r\n    address serviceProviderAddress = msg.sender;   \r\n        \r\n    uint    public  contractBalance;    \r\n    uint    public  feeBalance;\r\n    uint    idGenerator;                // default is 0\r\n\r\n    struct SharingProd {    \r\n       address payable ownerAddress;  \r\n       address borrowerAddress;  \r\n       string prodName;\r\n       uint    price;\r\n       uint    like;\r\n    }\r\n\r\n    mapping (uint => SharingProd) sharingProdList;\r\n\r\n    function createSharingProd(string memory _prodName, uint _price) public payable returns(uint) {\r\n       require(msg.value == 1 wei);\r\n       \r\n       SharingProd memory newSharingProd;\r\n       newSharingProd.ownerAddress = msg.sender;\r\n       newSharingProd.prodName = _prodName;\r\n       newSharingProd.price = _price;\r\n       sharingProdList[idGenerator] = newSharingProd;\r\n       \r\n       idGenerator++;\r\n       feeBalance += msg.value;\r\n       return idGenerator-1;\r\n    }\r\n    \r\n    function getSharingProdInfo(uint _sharingProdId) public view returns(address, address, string memory, uint, uint){\r\n      require(sharingProdList[_sharingProdId].ownerAddress != address(0));\r\n       \r\n       return (\r\n           sharingProdList[_sharingProdId].ownerAddress, \r\n           sharingProdList[_sharingProdId].borrowerAddress,\r\n           sharingProdList[_sharingProdId].prodName, \r\n           sharingProdList[_sharingProdId].price,\r\n           sharingProdList[_sharingProdId].like\r\n       );\r\n   }\r\n\r\n   function borrowSharingProd(uint _sharingProdId) public payable {\r\n        require(sharingProdList[_sharingProdId].price == msg.value);\r\n        require(sharingProdList[_sharingProdId].borrowerAddress == address(0));\r\n        \r\n        sharingProdList[_sharingProdId].borrowerAddress = msg.sender;\r\n        contractBalance += msg.value;\r\n    }\r\n    \r\n    function finishSharingProd(uint _sharingProdId, bool isLike) public {\r\n        require(sharingProdList[_sharingProdId].borrowerAddress == msg.sender);\r\n\r\n        sharingProdList[_sharingProdId].borrowerAddress = address(0); // initialize borrowerAddress\r\n        if(isLike) {\r\n            sharingProdList[_sharingProdId].like += 1;\r\n        }\r\n            \r\n        contractBalance -= (sharingProdList[_sharingProdId].price);\r\n        sharingProdList[_sharingProdId].ownerAddress.transfer(sharingProdList[_sharingProdId].price);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_sharingProdId\",\"type\":\"uint256\"}],\"name\":\"borrowSharingProd\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sharingProdId\",\"type\":\"uint256\"}],\"name\":\"getSharingProdInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_prodName\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createSharingProd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sharingProdId\",\"type\":\"uint256\"},{\"name\":\"isLike\",\"type\":\"bool\"}],\"name\":\"finishSharingProd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SharingContract","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://77b431ff6eb61214065153d4a77fd104554f192f006750cfc713918dc75b1dcb"}]}