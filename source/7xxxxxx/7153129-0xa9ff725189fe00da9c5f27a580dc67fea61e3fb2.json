{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC20Basic {\r\n  // events\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address addr) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  // events\r\n  event Approval(address indexed owner, address indexed agent, uint256 value);\r\n\r\n  // public functions\r\n  function allowance(address owner, address agent) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address agent, uint256 value) public returns (bool);\r\n\r\n}\r\n\r\n\r\ncontract Ownable {\r\n\r\n  // public variables\r\n  address public owner;\r\n\r\n  // events\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(owner, address(0));\r\n    owner = address(0);\r\n  }\r\n\r\n  function setOwner(address _owner) internal {\r\n    owner = _owner;\r\n    emit OwnershipTransferred(address(0), owner);\r\n  }\r\n}\r\n\r\n\r\ncontract Freezer {\r\n\r\n  address freezer;\r\n\r\n\r\n  modifier onlyFreezer() {\r\n    require(msg.sender == freezer);\r\n    _;\r\n  }\r\n\r\n  function transferFreezership(address newFreezer) public onlyFreezer {\r\n    require(newFreezer != address(0));\r\n    freezer = newFreezer;\r\n  }\r\n\r\n  function renounceFreezership() public onlyFreezer {\r\n    freezer = address(0);\r\n  }\r\n\r\n  function setFreezer(address _freezer) internal {\r\n    freezer = _freezer;\r\n  }\r\n}\r\n\r\n\r\ncontract Freezeable is Freezer {\r\n  // public variables\r\n\r\n  // internal variables\r\n  mapping(address => bool) _freezeList;\r\n\r\n  // events\r\n  event Freezed(address indexed freezedAddr);\r\n  event UnFreezed(address indexed unfreezedAddr);\r\n\r\n  // public functions\r\n  function freeze(address addr) public onlyFreezer returns (bool) {\r\n    require(true != _freezeList[addr]);\r\n\r\n    _freezeList[addr] = true;\r\n\r\n    emit Freezed(addr);\r\n    return true;\r\n  }\r\n\r\n  function unfreeze(address addr) public onlyFreezer returns (bool) {\r\n    require(true == _freezeList[addr]);\r\n\r\n    _freezeList[addr] = false;\r\n\r\n    emit UnFreezed(addr);\r\n    return true;\r\n  }\r\n\r\n  modifier whenNotFreezed() {\r\n    require(true != _freezeList[msg.sender]);\r\n    _;\r\n  }\r\n\r\n  function isFreezed(address addr) public view returns (bool) {\r\n    if (true == _freezeList[addr]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  // internal functions\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  // public variables\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals = 18;\r\n\r\n  // internal variables\r\n  uint256 _totalSupply;\r\n  mapping(address => uint256) _balances;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address addr) public view returns (uint256 balance) {\r\n    return _balances[addr];\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[msg.sender]);\r\n\r\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n  // public variables\r\n\r\n  // internal variables\r\n  mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[from]);\r\n    require(value <= _allowances[from][msg.sender]);\r\n\r\n    _balances[from] = _balances[from].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    _allowances[from][msg.sender] = _allowances[from][msg.sender].sub(value);\r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address agent, uint256 value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = value;\r\n    emit Approval(msg.sender, agent, value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address agent) public view returns (uint256) {\r\n    return _allowances[owner][agent];\r\n  }\r\n\r\n  function increaseApproval(address agent, uint value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = _allowances[msg.sender][agent].add(value);\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address agent, uint value) public returns (bool) {\r\n    uint allowanceValue = _allowances[msg.sender][agent];\r\n    if (value > allowanceValue) {\r\n      _allowances[msg.sender][agent] = 0;\r\n    } else {\r\n      _allowances[msg.sender][agent] = allowanceValue.sub(value);\r\n    }\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n  // internal functions\r\n}\r\n\r\ncontract FreezeableToken is StandardToken, Freezeable, Ownable {\r\n  // public variables\r\n\r\n  // internal variables\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function transfer(address to, uint256 value) public whenNotFreezed returns (bool) {\r\n    require(true != _freezeList[to]);\r\n    return super.transfer(to, value);\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(true != _freezeList[from]);\r\n    require(true != _freezeList[to]);\r\n    return super.transferFrom(from, to, value);\r\n  }\r\n\r\n  function approve(address agent, uint256 value) public whenNotFreezed returns (bool) {\r\n    require(true != _freezeList[agent]);\r\n    return super.approve(agent, value);\r\n  }\r\n\r\n  function increaseApproval(address agent, uint value) public whenNotFreezed returns (bool success) {\r\n    require(true != _freezeList[agent]);\r\n    return super.increaseApproval(agent, value);\r\n  }\r\n\r\n  function decreaseApproval(address agent, uint value) public whenNotFreezed returns (bool success) {\r\n    require(true != _freezeList[agent]);\r\n    return super.decreaseApproval(agent, value);\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\ncontract ArmorsToken is FreezeableToken {\r\n  // public variables\r\n  string public name = \"Armors Token\";\r\n  string public symbol = \"ARM\";\r\n  uint8 public decimals = 18;\r\n\r\n  // public functions\r\n  constructor(address _owner) public {\r\n    _totalSupply = 21000000000 * (10 ** uint256(decimals));\r\n    \r\n    _balances[_owner] = _totalSupply;\r\n    emit Transfer(0x0, _owner, _totalSupply);\r\n\r\n    setOwner(_owner);\r\n    setFreezer(_owner);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceFreezership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFreezer\",\"type\":\"address\"}],\"name\":\"transferFreezership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isFreezed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"freezedAddr\",\"type\":\"address\"}],\"name\":\"Freezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"unfreezedAddr\",\"type\":\"address\"}],\"name\":\"UnFreezed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"ArmorsToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000454cfe180f62118cb7595e910e83f37a70caf5c4","Library":"","SwarmSource":"bzzr://b53200ae1e0e30a4c13a7c1a70fe54142b3106114359ab4c85af76e546c598c4"}]}