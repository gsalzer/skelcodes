{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\ninterface token {\r\nfunction transfer(address receiver, uint amount) public;\r\nfunction balanceOf(address tokenOwner) public constant returns (uint balance);\r\n}\r\ncontract Crowdsale {\r\naddress public beneficiary;\r\nuint public amountRaised;\r\nuint public deadline;\r\ntoken public tokenReward;\r\ntoken public tokenSource;\r\nmapping(address => uint256) public balanceOf;\r\nbool crowdsaleClosed = false;\r\nevent FundTransfer(address backer, uint amount, bool isContribution);\r\nfunction Crowdsale(\r\naddress ifSuccessfulSendTo,\r\nuint durationInMinutes,\r\naddress addressOfTokenUsedAsReward,\r\naddress addressOfTokenUsefAsSource\r\n) public {\r\nbeneficiary = ifSuccessfulSendTo;\r\ndeadline = now + durationInMinutes * 1 minutes;\r\ntokenReward = token(addressOfTokenUsedAsReward);\r\ntokenSource = token(addressOfTokenUsefAsSource);\r\n}\r\nfunction () public payable {\r\nuint base = 1000000000000000000;\r\nuint amount = msg.value;\r\nuint tokenBalance = tokenReward.balanceOf(this);\r\nuint num = 10 * tokenSource.balanceOf(msg.sender) * base;\r\nbalanceOf[msg.sender] += amount;\r\namountRaised += amount;\r\nrequire(tokenBalance >= num);\r\ntokenReward.transfer(msg.sender, num);\r\nbeneficiary.transfer(msg.value);\r\nFundTransfer(msg.sender, amount, true);\r\n}\r\nmodifier afterDeadline() { if (now >= deadline) _; }\r\nfunction safeWithdrawal() public {\r\nrequire(beneficiary == msg.sender);\r\nuint tokenBalance = tokenReward.balanceOf(this);\r\ntokenReward.transfer(beneficiary, tokenBalance);\r\n}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSource\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsefAsSource\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000012a0e25e62c1dbd32e505446062b26aecb65f028000000000000000000000000000000000000000000000000000000005a892ec3000000000000000000000000f89ba2862dfae69bc2546568d56b087d7454c9c90000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://aed24a074362cb590b840c6407201f78190d88a484cbb8234ec398dd3dd8715e"}]}