{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//  ERC20 Contract :  Cryptocurrency UNOcoin Blockchain Technology,-\r\n//--------------------------------------------------------------------------------------------------------\r\n\r\nlibrary SafeMath {\r\n    function Mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 ||c / a == b);\r\n        return c;\r\n    }\r\n    \r\n    function Div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n    \r\n    function Sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    \r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract UNOcoin {\r\n    string public constant name = \"UNOcoin\";\r\n    string public constant symbol = \"UNO\";\r\n    uint8 public constant decimals = 18;\r\n    uint public _totalSupply = 100000000;\r\n    uint256 public RATE = 1;\r\n    bool public isminting = false;\r\n    \r\n    using SafeMath for uint256;\r\n    address public owner;\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner){\r\n            throw;\r\n        }\r\n         _;\r\n    }    \r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address=>uint256)) allowed;\r\n    \r\n    function () payable{\r\n        createTokens();\r\n    }   \r\n        \r\n    constructor() public {\r\n        owner = 0x428052F7c5130Ed44932c0FB8CE42955bAd4FBf8;\r\n        balances[(owner)] = _totalSupply;\r\n    }    \r\n        \r\n    function burnToken(uint256 _value) onlyOwner {\r\n        require(balances[msg.sender] >= _value && _value > 0 );\r\n        _totalSupply = _totalSupply.Sub(_value);\r\n    }   \r\n    \r\n    function createTokens() payable {\r\n        if(isminting == true){\r\n            require(msg.value > 0);\r\n            uint256 tokens = msg.value.Div(100000000000000).Mul(RATE);\r\n            balances[msg.sender] = balances[msg.sender].add(tokens);\r\n            _totalSupply = _totalSupply.add(tokens);\r\n            owner.transfer(msg.value);\r\n        }\r\n        else{\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function endCrowdsale() onlyOwner {\r\n        isminting = false;\r\n    }\r\n    \r\n    function changeCrowdsaleRate(uint256 _value) onlyOwner {\r\n        RATE = _value;\r\n    }\r\n    \r\n    function totalSupply() constant returns(uint256){\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceof(address _owner) constant returns(uint256){\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)returns(bool) {\r\n        require(balances[msg.sender] >= _value && _value > 0 );\r\n        balances[msg.sender] = balances[msg.sender].Sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        require(allowed[_from][msg.sender] >= _value && balances[_from] >= _value && _value > 0);\r\n        balances[_from] = balances[_from].Sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].Sub(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) returns(bool success){\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n     function allowance(address _owner, address _spender) constant returns (uint256){\r\n         return allowed[_owner][_spender];\r\n    }\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _Owner, address indexed _spender, uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceof\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isminting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeCrowdsaleRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_Owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"UNOcoin","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c9a6ddd059bcaff867641917a4b435127c2698591ec9b28c5af0438c058f16de"}]}