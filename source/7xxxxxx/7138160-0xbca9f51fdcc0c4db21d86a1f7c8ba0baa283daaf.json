{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\n// Declaring the API of external functions.\r\ncontract IJNBToken {\r\n    function acceptOwnership() public;\r\n    function transfer(address _to, uint _value) public returns(bool);\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner; \r\n    address public newOwner; \r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner); \r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner); // Requiring that the function caller must be owner.\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(address(0) != _newOwner); \r\n        newOwner = _newOwner; // Setting the newOwner.\r\n    }\r\n    \r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner); // Requiring that the caller must be newOwner.\r\n        emit OwnershipTransferred(owner, msg.sender); // Triggering the OwnershipTransferred event.\r\n        owner = msg.sender;\r\n        newOwner = address(0); // Resetting the newOwner as zero.\r\n    }\r\n}\r\n\r\n\r\ncontract JNBOwner is Ownable{\r\n\r\n    address public constant addr = 0x21D5A14e625d767Ce6b7A167491C2d18e0785fDa; // The address of JNB Token.\r\n     \r\n\tfunction JNBOwner(address _owner) public { \r\n\t\towner = _owner; // The constructor sets owner as '_owner'.\r\n\t}\r\n\r\n    function acceptJNBOwner() public{\r\n        IJNBToken(addr).acceptOwnership(); // Calling external function to compelete 'transferOwnership' operation.\r\n    }\r\n    \r\n    function withdrawJNB(uint256 _amount) onlyOwner public{\r\n        require(IJNBToken(addr).transfer(owner,_amount)); // Requiring the return value of callling external function \r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"acceptJNBOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawJNB\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"JNBOwner","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000069935229fd242ee9365213e525d71b99ba111319","Library":"","SwarmSource":"bzzr://90a1fef05a7189c49d05fe1ca68c62459fb24cf29871d5ef99fdbc73754c0043"}]}