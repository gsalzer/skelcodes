{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\n/**\r\n * 标准 ERC-20-2 合约\r\n */\r\ncontract ERC_20_2 {\r\n    //- Token 名称\r\n    string public name; \r\n    //- Token 符号\r\n    string public symbol;\r\n    //- Token 小数位\r\n    uint8 public decimals;\r\n    //- Token 总发行量\r\n    uint256 public totalSupply;\r\n    //- 合约锁定状态\r\n    bool public lockAll = false;\r\n    //- 合约创造者\r\n    address public creator;\r\n    //- 合约所有者\r\n    address public owner;\r\n    //- 合约新所有者\r\n    address internal newOwner = 0x0;\r\n\r\n    //- 地址映射关系\r\n    mapping (address => uint256) public balanceOf;\r\n    //- 地址对应 Token\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    //- 冻结列表\r\n    mapping (address => bool) public frozens;\r\n\r\n    //- Token 交易通知事件\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    //- Token 交易扩展通知事件\r\n    event TransferExtra(address indexed _from, address indexed _to, uint256 _value, bytes _extraData);\r\n    //- Token 批准通知事件\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    //- Token 消耗通知事件\r\n    event Burn(address indexed _from, uint256 _value);\r\n    //- Token 增量通知事件\r\n    event Offer(uint256 _supplyTM);\r\n    //- 合约所有者变更通知\r\n    event OwnerChanged(address _oldOwner, address _newOwner);\r\n    //- 地址冻结通知\r\n    event FreezeAddress(address indexed _target, bool _frozen);\r\n\r\n    /**\r\n     * 构造函数\r\n     *\r\n     * 初始化一个合约\r\n     * @param initialSupplyHM 初始总量（单位亿）\r\n     * @param tokenName Token 名称\r\n     * @param tokenSymbol Token 符号\r\n     * @param tokenDecimals Token 小数位\r\n     */\r\n    constructor(uint256 initialSupplyHM, string tokenName, string tokenSymbol, uint8 tokenDecimals) public {\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = tokenDecimals;\r\n        totalSupply = initialSupplyHM * 10000 * 10000 * 10 ** uint256(decimals);\r\n        \r\n        balanceOf[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n        creator = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * 所有者修饰符\r\n     */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"非法合约执行者\");\r\n        _;\r\n    }\r\n\t\r\n    /**\r\n     * 增加发行量\r\n     * @param _supplyTM 增量（单位千万）\r\n     */\r\n    function offer(uint256 _supplyTM) onlyOwner public returns (bool success){\r\n        //- 非负数验证\r\n        require(_supplyTM > 0, \"无效数量\");\r\n\t\tuint256 tm = _supplyTM * 1000 * 10000 * 10 ** uint256(decimals);\r\n        totalSupply += tm;\r\n        balanceOf[msg.sender] += tm;\r\n        emit Offer(_supplyTM);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 转移合约所有者\r\n     * @param _newOwner 新合约所有者地址\r\n     */\r\n    function transferOwnership(address _newOwner) onlyOwner public returns (bool success){\r\n        require(owner != _newOwner, \"无效合约新所有者\");\r\n        newOwner = _newOwner;\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * 接受并成为新的合约所有者\r\n     */\r\n    function acceptOwnership() public returns (bool success){\r\n        require(msg.sender == newOwner && newOwner != 0x0, \"无效合约新所有者\");\r\n        address oldOwner = owner;\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n        emit OwnerChanged(oldOwner, owner);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 设定合约锁定状态\r\n     * @param _lockAll 状态\r\n     */\r\n    function setLockAll(bool _lockAll) onlyOwner public returns (bool success){\r\n        lockAll = _lockAll;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 设定账户冻结状态\r\n     * @param _target 冻结目标\r\n     * @param _freeze 冻结状态\r\n     */\r\n    function setFreezeAddress(address _target, bool _freeze) onlyOwner public returns (bool success){\r\n        frozens[_target] = _freeze;\r\n        emit FreezeAddress(_target, _freeze);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 从持有方转移指定数量的 Token 给接收方\r\n     * @param _from 持有方\r\n     * @param _to 接收方\r\n     * @param _value 数量\r\n     */\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        //- 锁定校验\r\n        require(!lockAll, \"合约处于锁定状态\");\r\n        //- 地址有效验证\r\n        require(_to != 0x0, \"无效接收地址\");\r\n        //- 非负数验证\r\n        require(_value > 0, \"无效数量\");\r\n        //- 余额验证\r\n        require(balanceOf[_from] >= _value, \"持有方转移数量不足\");\r\n        //- 持有方冻结校验\r\n        require(!frozens[_from], \"持有方处于冻结状态\"); \r\n        //- 接收方冻结校验\r\n        //require(!frozenAccount[_to]); \r\n\r\n        //- 保存预校验总量\r\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        //- 持有方减少代币\r\n        balanceOf[_from] -= _value;\r\n        //- 接收方增加代币\r\n        balanceOf[_to] += _value;\r\n        //- 触发转账事件\r\n\t\temit Transfer(_from, _to, _value);\r\n\r\n        //- 确保交易过后，持有方和接收方持有总量不变\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    /**\r\n     * 转移转指定数量的 Token 给接收方\r\n     *\r\n     * @param _to 接收方地址\r\n     * @param _value 数量\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\t\r\n    /**\r\n     * 转移转指定数量的 Token 给接收方，并包括扩展数据（该方法将会触发两个事件）\r\n     *\r\n     * @param _to 接收方地址\r\n     * @param _value 数量\r\n     * @param _extraData 扩展数据\r\n     */\r\n    function transferExtra(address _to, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n\t\temit TransferExtra(msg.sender, _to, _value, _extraData);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 从持有方转移指定数量的 Token 给接收方\r\n     *\r\n     * @param _from 持有方\r\n     * @param _to 接收方\r\n     * @param _value 数量\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        //- 授权额度校验\r\n        require(_value <= allowance[_from][msg.sender], \"授权额度不足\");\r\n\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 授权指定地址的转移额度\r\n     *\r\n     * @param _spender 代理方\r\n     * @param _value 授权额度\r\n     */\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 授权指定地址的转移额度，并通知代理方合约\r\n     *\r\n     * @param _spender 代理方\r\n     * @param _value 转账最高额度\r\n     * @param _extraData 扩展数据（传递给代理方合约）\r\n     */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);//- 代理方合约\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function _burn(address _from, uint256 _value) internal {\r\n        //- 锁定校验\r\n        require(!lockAll, \"合约处于锁定状态\");\r\n        //- 余额验证\r\n        require(balanceOf[_from] >= _value, \"持有方余额不足\");\r\n        //- 冻结校验\r\n        require(!frozens[_from], \"持有方处于冻结状态\"); \r\n\r\n        //- 消耗 Token\r\n        balanceOf[_from] -= _value;\r\n        //- 总量下调\r\n        totalSupply -= _value;\r\n\r\n        emit Burn(_from, _value);\r\n    }\r\n\r\n    /**\r\n     * 消耗指定数量的 Token\r\n     *\r\n     * @param _value 消耗数量\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        //- 非负数验证\r\n        require(_value > 0, \"无效数量\");\r\n\r\n        _burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 消耗持有方授权额度内指定数量的 Token\r\n     *\r\n     * @param _from 持有方\r\n     * @param _value 消耗数量\r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        //- 授权额度校验\r\n        require(_value <= allowance[_from][msg.sender], \"授权额度不足\");\r\n        //- 非负数验证\r\n        require(_value > 0, \"无效数量\");\r\n      \r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        _burn(_from, _value);\r\n        return true;\r\n    }\r\n\r\n    function() payable public{\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_supplyTM\",\"type\":\"uint256\"}],\"name\":\"offer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAll\",\"type\":\"bool\"}],\"name\":\"setLockAll\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"setFreezeAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"transferExtra\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupplyHM\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"TransferExtra\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_supplyTM\",\"type\":\"uint256\"}],\"name\":\"Offer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"FreezeAddress\",\"type\":\"event\"}]","ContractName":"ERC_20_2","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006e88cb6e99d92000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035445420000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://a6426da480820296ebb3d78af00720285a139a88316dee744f5a100da665d90a"}]}