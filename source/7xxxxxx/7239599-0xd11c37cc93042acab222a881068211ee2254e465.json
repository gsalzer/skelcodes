{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 安全的加减乘除\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns(uint);\r\n\r\n\tfunction balanceOf(address tokenOwner) public constant returns(uint balance);\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns(uint remaining);\r\n\r\n\tfunction transfer(address to, uint tokens) public returns(bool success);\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 核心类\r\n// ----------------------------------------------------------------------------\r\ncontract MT is ERC20Interface{\r\n\tusing SafeMath for uint;\r\n\tstring public symbol;\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;//总发行\r\n\tuint public sysusermoney;//流通 \r\n\tuint public sysoutmoney;//矿池 \r\n\r\n\tuint public sellPrice; //出售价格 1枚代币换多少以太 /1000\r\n\tuint public buyPrice; //购买价格 多少以太可购买1枚代币 /1000\r\n\tuint public sysPer; //挖矿的增量百分比 /2%\r\n\tuint public sysPrice1; //挖矿的衡量值10000\r\n\tuint public sysPrice2; //挖矿的衡量值100000\r\n\tuint public sysPrice3; //挖矿的衡量值300000\r\n\tuint public sysPrice4; //挖矿的衡量值500000\r\n\tuint public sysPer1; //挖矿的增量百分比 /3%\r\n\tuint public sysPer2; //挖矿的增量百分比 /4%\r\n\tuint public sysPer3; //挖矿的增量百分比 /5%\r\n\tuint public sysPer4; //挖矿的增量百分比 /6%\r\n\tuint public systime1;//120\r\n\tuint public systime2;//240\r\n\tuint public systime3;//360\r\n\tuint public systime4;//720\r\n\t\r\n\tuint public outper1;//退出锁仓20\r\n\tuint public outper2;//退出锁仓30\r\n\tuint public outper3;//退出锁仓40\r\n\tuint public outper4;//退出锁仓50\r\n\t\r\n\tuint public transper; //转账手续费 /3%\r\n\t\r\n\tbool public actived;\r\n\tuint public onceAddTime; //挖矿的时间 10 days\r\n\tuint public upper1;//团队奖% \r\n\tuint public upper2;//团队奖% \r\n\tuint public upper3;//团队奖%\r\n\tuint public upper4;//团队奖%\r\n\tuint public upper5;//团队奖%\r\n\tuint public upper6;//团队奖%\r\n\tuint public teamper1;//团队奖% \r\n\tuint public teamper2;//团队奖% \r\n\t\r\n\tuint public sellper;//15\r\n    uint public sysminteth;\r\n    uint public hasoutmony;\r\n    uint public hasbuymoney;\r\n    uint public hassellmoney;\r\n    uint public hasbuyeth;\r\n    uint public hasselleth;\r\n\tmapping(address => uint) balances;//总计\r\n\tmapping(address => uint) myeth;//本金\r\n\tmapping(address => uint) froeth;//冻结\r\n\t//mapping(address => uint) used;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\t/* 冻结账户 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\r\n\t//上家地址\r\n\tmapping(address => address) public fromaddr;\r\n\t//管理员帐号\r\n\tmapping(address => bool) public admins;\r\n\t// 记录各个账户的增量时间\r\n\tmapping(address => uint) public crontime;\r\n\t// 挖矿次数\r\n\tmapping(address => uint) public mintnum;\r\n\tuint[] public permans;\r\n\tmapping(address => uint) public teamget;\r\n\tstruct sunsdata{\r\n\t    uint n1;\r\n\t    uint n2;\r\n\t    uint n3;\r\n\t    uint n4;\r\n\t    uint n5;\r\n\t    uint n6;\r\n\t    uint getmoney;\r\n\t}\r\n    mapping(address => sunsdata) public suns;\r\n    address public intertoken;\r\n    modifier onlyInterface {\r\n        require(intertoken != address(0));\r\n\t\trequire(msg.sender == intertoken);\r\n\t\t_;\r\n\t}\r\n\t/* 通知 */\r\n\tevent FrozenFunds(address target, bool frozen);\r\n\taddress public owner;\r\n\taddress public financer;\r\n    modifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\tmodifier  onlyFinancer {\r\n\t\trequire(msg.sender == financer);\r\n\t\t_;\r\n\t}\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\r\n\t\tsymbol = \"MToken\";\r\n\t\tname = \"MToken\";\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 5000000000 ether;//总发行\r\n\t\tsysusermoney = 2500000000 ether;//流通\r\n\t\tsysoutmoney  = 2500000000 ether;//矿池\r\n\r\n\t\tsellPrice = 7251 ether; //出售价格 1mt can buy how much eth\r\n\t\tbuyPrice = 7251 ether; //购买价格 1eth can buy how much mt\r\n\t\t\r\n\t\t//sysPrice1 = 3 ether;//test\r\n\t\tsysPer  = 2; //挖矿的增量百分比 /100\r\n\t\tsysPer1 = 3; //挖矿的增量百分比 /100\r\n\t\tsysPer2 = 4; //挖矿的增量百分比 /100\r\n\t\tsysPer3 = 5; //挖矿的增量百分比 /100\r\n\t\tsysPer4 = 6; //挖矿的增量百分比 /100\r\n\t\t\r\n\t\tsysPrice1 = 10000 ether; //挖矿的衡量值\r\n\t\tsysPrice2 = 100000 ether; //挖矿的衡量值\r\n\t\tsysPrice3 = 300000 ether; //挖矿的衡量值\r\n\t\tsysPrice4 = 500000 ether; //挖矿的衡量值\r\n\t\t\r\n\t\ttransper = 3;//转账手续费 /100\r\n\t\tupper1 = 10;//第1代挖矿分润\r\n\t\tupper2 = 7;//第2代挖矿分润\r\n\t\tupper3 = 6;//第2代挖矿分润\r\n\t\tupper4 = 5;//第2代挖矿分润\r\n\t\tupper5 = 4;//第2代挖矿分润\r\n\t\tupper6 = 3;//第2代挖矿分润\r\n\t\tteamper1 = 10;//团队奖% /100\r\n\t\tteamper2 = 20;//团队奖% /100\r\n\t\toutper1 = 80;//退出锁仓 /100\r\n\t\toutper2 = 70;//退出锁仓 /100\r\n\t\toutper3 = 60;//退出锁仓 /100\r\n\t\toutper4 = 60;//退出锁仓 /100\r\n\t\tsellper = 85;// /100\r\n\t\tactived = true;\r\n\t\tonceAddTime = 10 days; //挖矿的时间 正式\r\n\t\t//onceAddTime = 60 seconds;//test\r\n        systime1 = 13;\r\n        systime2 = 25;\r\n        systime3 = 37;\r\n        systime4 = 73;\r\n        permans = [40,20,12,6];\r\n        //permans = [3,3,2,2];//test\r\n\t\tbalances[this] = _totalSupply;\r\n\t\towner = msg.sender;\r\n\t\tfinancer = msg.sender;\r\n\t\temit Transfer(address(0), owner, _totalSupply);\r\n\r\n\t}\r\n\r\n\t/* 获取用户金额 */\r\n\tfunction balanceOf(address user) public view returns(uint balance) {\r\n\t\treturn balances[user];\r\n\t}\r\n\tfunction ethbalance(address user) public view returns(uint balance) {\r\n\t\treturn user.balance;\r\n\t}\r\n    function addcrontime(address addr) private{\r\n        if(crontime[addr] < now) {\r\n            crontime[addr] = now + onceAddTime;\r\n        }\r\n        \r\n    }\r\n    function addusertime(address addr) private{\r\n        if(balances[addr] < 2) {\r\n            addcrontime(addr);\r\n        }\r\n    }\r\n\t/*\r\n\t * 获取用户的挖矿时间\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getaddtime(address _addr) public view returns(uint) {\r\n\t\tif(crontime[_addr] < 2) {\r\n\t\t\treturn(0);\r\n\t\t}else{\r\n\t\t    return(crontime[_addr]);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tfunction getmy(address user) public view returns(\r\n\t    uint myblance,\r\n\t    uint meth,\r\n\t    uint myeths,\r\n\t    uint mypro,\r\n\t    uint mytime,\r\n\t    uint bprice,\r\n\t    uint tmoney,\r\n\t    uint myall\r\n\t){\r\n\t    myblance = balances[user];//0\r\n\t    meth = address(user).balance;//2\r\n\t    myeths = myeth[user];//3\r\n\t    mypro = froeth[user];//4\r\n\t    mytime = crontime[user];//5\r\n\t    bprice = buyPrice;//6\r\n\t    tmoney = balances[this];//9\r\n\t    myall = myblance.add(mypro);//10\r\n\t}\r\n\tfunction geteam(address user) public view returns(\r\n\t    uint nn1,//0\r\n\t    uint nn2,//1\r\n\t    uint nn3,//2\r\n\t    uint nn4,//3\r\n\t    uint nn5,//4\r\n\t    uint nn6,//5\r\n\t    uint ms,//6\r\n\t    uint tm,//7\r\n\t    uint mintmoneys,//8\r\n\t    uint usermoneys,//9\r\n\t    uint fromoneys,//10\r\n\t    uint lid//11\r\n\t){\r\n\t    nn1 = suns[user].n1;\r\n\t    nn2 = suns[user].n2;\r\n\t    nn3 = suns[user].n3;\r\n\t    nn4 = suns[user].n4;\r\n\t    nn5 = suns[user].n5;\r\n\t    nn6 = suns[user].n6;\r\n\t    ms = teamget[user];\r\n\t    tm = getaddtime(user);\r\n\t    mintmoneys = sysoutmoney;\r\n\t    usermoneys = sysusermoney;\r\n\t    fromoneys = sysminteth;\r\n\t    if(suns[user].n2 >= permans[2] && suns[user].n1 >= permans[3]){\r\n\t        lid = 1;\r\n\t    }\r\n\t    if(suns[user].n2 >= permans[0] && suns[user].n1 >= permans[1]){\r\n\t        lid = 2;\r\n\t    }\r\n\t}\r\n\tfunction getsys() public view returns(\r\n\t    uint tmoney,//0\r\n\t    uint outm,//1\r\n\t    uint um,//2\r\n\t    uint from,//3\r\n\t    uint hasout,//4\r\n\t    uint hasbuy,//5\r\n\t    uint hassell,//6\r\n\t    uint hasbuyeths,//9\r\n\t    uint hasselleths//10\r\n\t){\r\n\t    tmoney = _totalSupply.sub(balances[this]);\r\n\t    outm = sysoutmoney;\r\n\t    um = sysusermoney;\r\n\t    from = sysminteth;\r\n\t    hasout = hasoutmony;\r\n\t    hasbuy = hasbuymoney;\r\n\t    hassell = hassellmoney;\r\n\t    hasbuyeths = hasbuyeth;\r\n\t    hasselleths = hasselleth;\r\n\t}\r\n    function _transfer(address from, address to, uint tokens) private returns(bool success) {\r\n        require(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(actived == true);\r\n\t\tuint addper = tokens*transper/100;\r\n\t\tuint allmoney = tokens + addper;\r\n\t\trequire(balances[from] >= allmoney);\r\n\t\trequire(tokens > 1 && tokens < _totalSupply);\r\n\t\t// 防止转移到0x0， 用burn代替这个功能\r\n        require(to != 0x0);\r\n\t\trequire(from != to);\r\n\t\t// 将此保存为将来的断言， 函数最后会有一个检验103 - 3 + 10\r\n        uint previousBalances = balances[from] - addper + balances[to];\r\n\t\t//如果用户没有上家\r\n\t\tif(fromaddr[to] == address(0) && fromaddr[from] != to) {\r\n\t\t\t//指定上家地址\r\n\t\t\tfromaddr[to] = from;\r\n\t\t\tsuns[from].n1++;\r\n\t\t\taddress top = fromaddr[from];\r\n\t\t\tif(top != address(0)) {\r\n\t\t\t    suns[top].n2++;\r\n\t\t\t    top = fromaddr[top];\r\n\t\t\t    if(top != address(0)) {\r\n    \t\t\t    suns[top].n3++;\r\n    \t\t\t    top = fromaddr[top];\r\n    \t\t\t    if(top != address(0)) {\r\n        \t\t\t    suns[top].n4++;\r\n        \t\t\t    top = fromaddr[top];\r\n        \t\t\t    if(top != address(0)) {\r\n            \t\t\t    suns[top].n5++;\r\n            \t\t\t    top = fromaddr[top];\r\n            \t\t\t    if(top != address(0)) {\r\n                \t\t\t    suns[top].n6++;\r\n                \t\t\t}\r\n            \t\t\t}\r\n        \t\t\t}\r\n    \t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\tbalances[from] = balances[from].sub(allmoney);\r\n\t\tif(balances[from] < myeth[from]) {\r\n\t\t    myeth[from] = balances[from];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(addper);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\tmyeth[to] = myeth[to].add(tokens);\r\n\t\taddcrontime(to);\r\n\t\temit Transfer(from, this, addper);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\t// 断言检测， 不应该为错\r\n        assert(balances[from] + balances[to] == previousBalances);//90 10\r\n\t\treturn true;\r\n    }\r\n\t/*\r\n\t * 用户转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transfer(address to, uint tokens) public returns(bool success) {\r\n\t\t_transfer(msg.sender, to, tokens);\r\n\t\tsuccess = true;\r\n\t}\r\n    function intertransfer(address from, address to, uint tokens) public onlyInterface returns(bool success) {\r\n\t\t_transfer(from, to, tokens);\r\n\t\tsuccess = true;\r\n\t}\r\n\t/*\r\n\t * 获取上家地址\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getfrom(address _addr) public view returns(address) {\r\n\t\treturn(fromaddr[_addr]);\r\n\t}\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\r\n\t    require(tokens > 1 && tokens < _totalSupply);\r\n\t    require(balances[msg.sender] >= tokens);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 授权转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(tokens > 1 && tokens < _totalSupply);\r\n\t\trequire(balances[from] >= tokens);\r\n\t\tbalances[from] = balances[from].sub(tokens);\r\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取授权信息\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\r\n\r\n\t/// 冻结 or 解冻账户\r\n\tfunction freezeAccount(address target, bool freeze) public onlyOwner{\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t\r\n\t/*\r\n\t * 系统设置\r\n\t * @param {Object} uint\r\n\t \t\r\n\t */\r\n\tfunction setconf(\r\n    \tuint systyPrice1, \r\n    \tuint systyPrice2, \r\n    \tuint systyPrice3, \r\n    \tuint systyPrice4, \r\n    \tuint sysPermit1,\r\n    \tuint sysPermit2,\r\n    \tuint sysPermit3,\r\n    \tuint sysPermit4,\r\n    \tuint systime1s,\r\n    \tuint systime2s,\r\n    \tuint systime3s,\r\n    \tuint systime4s\r\n    ) public onlyOwner{\r\n\t\tsysPrice1 = systyPrice1;\r\n\t\tsysPrice2 = systyPrice2;\r\n\t\tsysPrice3 = systyPrice3;\r\n\t\tsysPrice4 = systyPrice4;\r\n\t\tsysPer1 = sysPermit1;\r\n\t\tsysPer2 = sysPermit2;\r\n\t\tsysPer3 = sysPermit3;\r\n\t\tsysPer4 = sysPermit4;\r\n\t\tsystime1 = systime1s + 1;\r\n\t\tsystime2 = systime2s + 1;\r\n\t\tsystime3 = systime3s + 1;\r\n\t\tsystime4 = systime4s + 1;\r\n\t\t\r\n\t}\r\n\t/*\r\n\t * 获取系统设置\r\n\t */\r\n\tfunction getconf() public view returns(\r\n\t    uint systyPrice1, \r\n    \tuint systyPrice2, \r\n    \tuint systyPrice3, \r\n    \tuint systyPrice4, \r\n    \tuint sysPermit1,\r\n    \tuint sysPermit2,\r\n    \tuint sysPermit3,\r\n    \tuint sysPermit4,\r\n    \tuint systime1s,\r\n    \tuint systime2s,\r\n    \tuint systime3s,\r\n    \tuint systime4s\r\n\t) {\r\n\t\t\r\n\t\tsystyPrice1 = sysPrice1;//0\r\n\t\tsystyPrice2 = sysPrice2;//1\r\n\t\tsystyPrice3 = sysPrice3;//2\r\n\t\tsystyPrice4 = sysPrice4;//3\r\n\t\tsysPermit1 = sysPer1;//4\r\n\t\tsysPermit2 = sysPer2;//5\r\n\t\tsysPermit3 = sysPer3;//6\r\n\t\tsysPermit4 = sysPer4;//7\r\n\t\tsystime1s = systime1 - 1;//8\r\n\t\tsystime2s = systime2 - 1;//9\r\n\t\tsystime3s = systime3 - 1;//10\r\n\t\tsystime4s = systime4 - 1;//11\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction setother(\r\n\t    uint newonceaddtime, \r\n    \tuint newBuyPrice, \r\n    \tuint newSellPrice, \r\n    \tuint sysPermit,\r\n    \tuint transpers,\r\n    \tuint sellpers,\r\n\t    uint upper1s,\r\n    \tuint upper2s,\r\n    \tuint upper3s,\r\n    \tuint upper4s,\r\n    \tuint upper5s,\r\n    \tuint upper6s\r\n\t) public onlyOwner{\r\n\t    onceAddTime = newonceaddtime;\r\n\t\tbuyPrice = newBuyPrice;\r\n\t\tsellPrice = newSellPrice;\r\n\t\tsysPer = sysPermit;\r\n\t\ttransper = transpers;\r\n\t\tsellper = sellpers;\r\n\t    upper1 = upper1s;\r\n\t\tupper2 = upper2s;\r\n\t\tupper3 = upper3s;\r\n\t\tupper4 = upper4s;\r\n\t\tupper5 = upper5s;\r\n\t\tupper6 = upper6s;\t\r\n\t}\r\n\t\r\n\tfunction getother() public view returns(\r\n\t    uint newonceaddtime, \r\n    \tuint newBuyPrice, \r\n    \tuint newSellPrice, \r\n    \tuint sysPermit,\r\n    \tuint transpers,\r\n    \tuint sellpers,\r\n\t    uint upper1s,\r\n    \tuint upper2s,\r\n    \tuint upper3s,\r\n    \tuint upper4s,\r\n    \tuint upper5s,\r\n    \tuint upper6s\r\n\t){\r\n\t    newonceaddtime = onceAddTime;//0\r\n\t\tnewBuyPrice = buyPrice;//1\r\n\t    newSellPrice = \tsellPrice;//2\r\n\t\tsysPermit = sysPer;//3\r\n\t\ttranspers = transper;//4\r\n\t\tsellpers = sellper;//5\r\n\t    upper1s = upper1;//6\r\n\t\tupper2s = upper2;//7\r\n\t\tupper3s = upper3;//8\r\n\t\tupper4s = upper4;//9\r\n\t\tupper5s = upper5;//10\r\n\t\tupper6s = upper6;//11\r\n\t}\r\n\tfunction setsysteam(\r\n    \tuint outper1s,\r\n    \tuint outper2s,\r\n    \tuint outper3s,\r\n    \tuint outper4s,\r\n    \tuint teamper1s,\r\n    \tuint teamper2s,\r\n    \tuint t1,\r\n    \tuint t2,\r\n    \tuint t3,\r\n    \tuint t4\r\n\t) public onlyOwner{\r\n\t    outper1 = outper1s;\r\n\t\toutper2 = outper2s;\r\n\t\toutper3 = outper3s;\r\n\t\toutper4 = outper4s;\r\n\t    teamper1 = teamper1s;\r\n\t\tteamper2 = teamper2s;\r\n\t\tpermans = [t1,t2,t3,t4];\r\n\t}\r\n\tfunction getsysteam() public view returns(\r\n\t    uint outper1s,\r\n    \tuint outper2s,\r\n    \tuint outper3s,\r\n    \tuint outper4s,\r\n    \tuint teamper1s,\r\n    \tuint teamper2s,\r\n    \tuint t1,\r\n    \tuint t2,\r\n    \tuint t3,\r\n    \tuint t4\r\n\t){\r\n\t    outper1s = outper1;//0\r\n\t\toutper2s = outper2;//1\r\n\t\toutper3s = outper3;//2\r\n\t\toutper4s = outper4;//3\r\n\t\tteamper1s = teamper1;//4\r\n\t\tteamper2s = teamper2;//5\r\n\t\tt1 = permans[0];//6\r\n\t\tt2 = permans[1];//7\r\n\t\tt3 = permans[2];//8\r\n\t\tt4 = permans[3];//9\r\n\t}\r\n\t/*\r\n\t * 设置是否开启\r\n\t * @param {Object} bool\r\n\t */\r\n\tfunction setactive(bool tags) public onlyOwner {\r\n\t\tactived = tags;\r\n\t}\r\n\tfunction settoken(address tokensaddr) onlyOwner public {\r\n\t\tintertoken = tokensaddr;\r\n\t}\r\n\tfunction setadmin(address adminaddr) onlyOwner public {\r\n\t\towner = adminaddr;\r\n\t}\r\n\tfunction setfinancer(address financeraddr) onlyOwner public {\r\n\t\tfinancer = financeraddr;\r\n\t}\r\n\t/*\r\n\t * 获取总发行\r\n\t */\r\n\tfunction totalSupply() public view returns(uint) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\tfunction addusermoney(address target, uint256 mintedAmount) private{\r\n\t    require(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n        require(balances[this] > mintedAmount);\r\n\t\tbalances[target] = balances[target].add(mintedAmount);\r\n\t\tmyeth[target] = myeth[target].add(mintedAmount);\r\n\t\tbalances[this] = balances[this].sub(mintedAmount);\r\n\t\tsysusermoney = sysusermoney.sub(mintedAmount);\r\n\t\thasoutmony = hasoutmony.add(mintedAmount);\r\n\t\taddcrontime(target);\r\n\t\temit Transfer(this, target, mintedAmount);\r\n\t}\r\n\tfunction subusermoney(address target, uint256 mintedAmount) private{\r\n\t    require(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n        require(balances[target] > mintedAmount);\r\n\t\tbalances[target] = balances[target].sub(mintedAmount);\r\n\t\tif(balances[target] < myeth[target]) {\r\n\t\t    myeth[target] = balances[target];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(mintedAmount);\r\n\t\tsysusermoney = sysusermoney.add(mintedAmount);\r\n\t\temit Transfer( target,this, mintedAmount);\r\n\t}\r\n\t/*\r\n\t * 向指定账户拨发资金\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction adduser(address target, uint256 mintedAmount) public onlyFinancer{\r\n\t\taddusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction subuser(address target, uint256 mintedAmount) public onlyFinancer{\r\n\t\tsubusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction interadduser(address target, uint256 mintedAmount) public onlyInterface{\r\n\t\taddusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction intersubuser(address target, uint256 mintedAmount) public onlyInterface{\r\n\t\tsubusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction mintadd() public{\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(balances[user] >= sysPrice1);\r\n\t\tfroeth[user] = froeth[user].add(balances[user]);\r\n\t\tsysminteth = sysminteth.add(balances[user]);\r\n\t\temit Transfer(user, this, balances[user]);\r\n\t\tbalances[user] = 1;\r\n\t\tmyeth[user] = 1;\r\n\t\tif(froeth[user] >= sysPrice4) {\r\n\t\t    mintnum[user] = systime4;\r\n\t\t}\r\n\t\telse if(froeth[user] >= sysPrice3) {\r\n\t\t    mintnum[user] = systime3;\r\n\t\t}\r\n\t\telse if(froeth[user] >= sysPrice2) {\r\n\t\t    mintnum[user] = systime2;\r\n\t\t}else{\r\n\t\t    mintnum[user] = systime1;\r\n\t\t}\r\n\t\tcrontime[user] = now + onceAddTime;\r\n\t\t\r\n\t}\r\n\tfunction mintsub() public{\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(mintnum[user] > 1);\r\n\t\trequire(froeth[user] >= sysPrice1);\r\n\t\tuint getamount = froeth[user]*outper1/100;\r\n\t\tif(froeth[user] >= sysPrice4) {\r\n\t\t    getamount = froeth[user]*outper4/100;\r\n\t\t}\r\n\t\telse if(froeth[user] >= sysPrice3) {\r\n\t\t    getamount = froeth[user]*outper3/100;\r\n\t\t}\r\n\t\telse if(froeth[user] >= sysPrice2) {\r\n\t\t    getamount = froeth[user]*outper2/100;\r\n\t\t}\r\n\t\tuint addthis = froeth[user].sub(getamount);\r\n\t\tbalances[this] = balances[this].add(addthis);\r\n\t\temit Transfer(user, this, addthis);\r\n\t\tsysminteth = sysminteth.add(uint(1)).sub(froeth[user]);\r\n\t\tfroeth[user] = 1;\r\n\t\tmintnum[user] = 1;\r\n\t\tbalances[user] = balances[user].add(getamount);\r\n\t\tmyeth[user] = myeth[user].add(getamount);\r\n\t\temit Transfer(this, user, getamount);\r\n\t\t\r\n\t}\r\n\tfunction setteam(address user, uint amount) private returns(bool) {\r\n\t    if(suns[user].n2 >= permans[2] && suns[user].n1 >= permans[3]){\r\n\t        teamget[user] = teamget[user].add(amount);\r\n\t        uint chkmoney = sysPrice2;\r\n\t        uint sendmoney = teamget[user]*teamper1/100;\r\n\t        if(suns[user].n2 >= permans[0] && suns[user].n1 >= permans[1]){\r\n\t            chkmoney = sysPrice4;\r\n\t            sendmoney = teamget[user]*teamper2/100;\r\n\t        }\r\n\t        if(teamget[user] >= chkmoney) {\r\n\t            require(balances[this] > sendmoney);\r\n\t            require(sysoutmoney > sendmoney);\r\n\t            suns[user].getmoney = suns[user].getmoney.add(sendmoney);\r\n\t            balances[user] = balances[user].add(sendmoney);\r\n\t            teamget[user] = 1;\r\n\t            balances[this] = balances[this].sub(sendmoney);\r\n\t\t        sysoutmoney = sysoutmoney.sub(sendmoney);\r\n\t\t        sysusermoney = sysusermoney.add(sendmoney);\r\n\t\t        emit Transfer(this, user, sendmoney);\r\n\t        }\r\n\t        return(true);\r\n\t    }\r\n\t}\r\n\tfunction settop(address top, uint upmoney) private{\r\n\t    require(balances[this] > upmoney);\r\n\t    require(sysoutmoney > upmoney);\r\n\t    balances[top] = balances[top].add(upmoney);\r\n        balances[this] = balances[this].sub(upmoney);\r\n        sysoutmoney = sysoutmoney.sub(upmoney);\r\n        sysusermoney = sysusermoney.add(upmoney);\r\n        emit Transfer(this, top, upmoney);\r\n        setteam(top, upmoney);\r\n\t}\r\n\t/*\r\n\t * 用户每隔10天挖矿一次\r\n\t */\r\n\tfunction mint() public {\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(crontime[user] > 1);\r\n\t\trequire(now > crontime[user]);\r\n\t\tuint amount;\r\n\t\tuint usmoney;\r\n\t\tuint mintmoney;\r\n\t\tif(myeth[user] > 1) {\r\n\t\t    usmoney = myeth[user] * sysPer / 100;\r\n\t\t}\r\n\t\tif(froeth[user] >= sysPrice1 && mintnum[user] > 1) {\r\n\t\t    mintmoney = froeth[user] * sysPer1 / 100;\r\n\t\t    if(froeth[user] >= sysPrice4) {\r\n    \t\t    mintmoney = froeth[user] * sysPer4 / 100;\r\n    \t\t}\r\n    \t\telse if(froeth[user] >= sysPrice3) {\r\n    \t\t    mintmoney = froeth[user] * sysPer3 / 100;\r\n    \t\t}\r\n    \t\telse if(froeth[user] >= sysPrice2) {\r\n    \t\t    mintmoney = froeth[user] * sysPer2 / 100;\r\n    \t\t}\r\n\t\t}\r\n\t\tamount = usmoney.add(mintmoney);\r\n\t\trequire(balances[this] > amount);\r\n\t\trequire(sysoutmoney > amount);\r\n\t\tbalances[user] = balances[user].add(amount);\r\n\t\tbalances[this] = balances[this].sub(amount);\r\n\t\tsysoutmoney = sysoutmoney.sub(amount);\r\n\t\tsysusermoney = sysusermoney.add(amount);\r\n\t\tcrontime[user] = now + onceAddTime;\r\n\t\t\r\n\t\tif(usmoney > 0) {\r\n\t\t    emit Transfer(this, user, usmoney);\r\n\t\t}\r\n\t\tif(mintmoney > 0) {\r\n\t\t    emit Transfer(this, user, mintmoney);\r\n\t\t    mintnum[user]--;\r\n\t\t    if(mintnum[user] < 2) {\r\n\t\t        balances[user] = balances[user].add(froeth[user]);\r\n\t\t        myeth[user] = myeth[user].add(froeth[user]);\r\n\t\t        sysminteth = sysminteth.sub(froeth[user]);\r\n\t\t        emit Transfer(this, user, froeth[user]);\r\n\t\t        froeth[user] = 1; \r\n\t\t    }\r\n\t\t}\r\n\t\taddress top = fromaddr[user];\r\n\t\t\r\n\t\tif(top != address(0) && top != user) { \r\n\t\t    uint upmoney = amount*upper1/100;\r\n\t\t    settop(top, upmoney);\r\n\t\t    top = fromaddr[top];\r\n\t\t    if(top != address(0) && top != user) {\r\n    \t\t    upmoney = amount*upper2/100;\r\n    \t\t    settop(top, upmoney);\r\n    \t\t    top = fromaddr[top];\r\n    \t\t    if(top != address(0) && top != user) {\r\n        \t\t    upmoney = amount*upper3/100;\r\n        \t\t    settop(top, upmoney);\r\n        \t\t    top = fromaddr[top];\r\n        \t\t    if(top != address(0) && top != user) {\r\n            \t\t    upmoney = amount*upper4/100;\r\n            \t\t    settop(top, upmoney);\r\n            \t\t    top = fromaddr[top];\r\n            \t\t    if(top != address(0) && top != user) {\r\n                \t\t    upmoney = amount*upper5/100;\r\n                \t\t    settop(top, upmoney);\r\n                \t\t    top = fromaddr[top];\r\n                \t\t    if(top != address(0) && top != user) {\r\n                    \t\t    upmoney = amount*upper6/100;\r\n                    \t\t    settop(top, upmoney);\r\n                    \t\t}\r\n                \t\t}\r\n            \t\t}\r\n        \t\t}\r\n        \t\t\r\n    \t\t}\r\n\t\t}\r\n\t\t//emit Transfer(this, user, amount);\r\n\t\t\r\n\r\n\t}\r\n\t/*\r\n\t * 获取总账目\r\n\t */\r\n\tfunction getall() public view returns(uint256 money) {\r\n\t\tmoney = address(this).balance;\r\n\t}\r\n\t/*\r\n\t * 购买\r\n\t */\r\n\tfunction buy() public payable returns(uint) {\r\n\t\trequire(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(msg.value > 0);\r\n\t\tuint amount = (msg.value * buyPrice)/1 ether;\r\n\t\trequire(balances[this] > amount);\r\n\t\trequire(amount > 1 && amount < _totalSupply);\r\n\t\tbalances[user] = balances[user].add(amount);\r\n\t\tmyeth[user] = myeth[user].add(amount);\r\n\t\tbalances[this] = balances[this].sub(amount);\r\n\t\tsysusermoney = sysusermoney.sub(amount);\r\n\t\thasbuymoney = hasbuymoney.add(amount);\r\n\t\thasbuyeth = hasbuyeth.add(msg.value);\r\n\t\taddcrontime(user);\r\n\t\towner.transfer(msg.value);\r\n\t\temit Transfer(this, user, amount);\r\n\t\treturn(amount);\r\n\t}\r\n\t\r\n\t/*\r\n\t * 系统充值\r\n\t */\r\n\tfunction charge() public payable returns(bool) {\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction() payable public {\r\n\t\tbuy();\r\n\t}\r\n\t/*\r\n\t * 系统提现\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction withdraw(address _to, uint money) public onlyOwner {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[_to]);\r\n\t\trequire(address(this).balance > money);\r\n\t\trequire(money > 0);\r\n\t\t_to.transfer(money);\r\n\t}\r\n\t/*\r\n\t * 出售\r\n\t * @param {Object} uint256\r\n\t */\r\n\tfunction sell(uint256 amount) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(amount < _totalSupply);\r\n\t\trequire(amount > 1);\r\n\t\trequire(balances[user] >= amount);\r\n\t\tuint moneys = (amount * sellper * 10 finney)/sellPrice;\r\n\t\trequire(address(this).balance > moneys);\r\n\t\tuser.transfer(moneys);\r\n\t\tuint previousBalances = balances[user] + balances[this];\r\n\t\tbalances[user] = balances[user].sub(amount);\r\n\t\tif(balances[user] < myeth[user]) {\r\n\t\t    myeth[user] = balances[user];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(amount);\r\n        sysusermoney = sysusermoney.add(amount);\r\n        hassellmoney = hassellmoney.add(amount);\r\n        hasselleth = hasselleth.add(moneys);\r\n\t\temit Transfer(user, this, amount);\r\n\t\t// 断言检测， 不应该为错\r\n        assert(balances[user] + balances[this] == previousBalances);\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\t\t/*\r\n\t * 批量发币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction addBalances(address[] recipients, uint256[] moenys) public onlyOwner{\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].add(moenys[i]);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t\taddusertime(recipients[i]);\r\n\t\t\temit Transfer(this, recipients[i], moenys[i]);\r\n\t\t}\r\n\t\tbalances[this] = balances[this].sub(sum);\r\n\t\tsysusermoney = sysusermoney.sub(sum);\r\n\t}\r\n\t/*\r\n\t * 批量减币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction subBalances(address[] recipients, uint256[] moenys) public onlyOwner{\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].sub(moenys[i]);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t\temit Transfer(recipients[i], this, moenys[i]);\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(sum);\r\n\t\tsysusermoney = sysusermoney.add(sum);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sysPer3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"financeraddr\",\"type\":\"address\"}],\"name\":\"setfinancer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"systyPrice3\",\"type\":\"uint256\"},{\"name\":\"systyPrice4\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"sysPermit3\",\"type\":\"uint256\"},{\"name\":\"sysPermit4\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"systime3s\",\"type\":\"uint256\"},{\"name\":\"systime4s\",\"type\":\"uint256\"}],\"name\":\"setconf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceAddTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"},{\"name\":\"outper3s\",\"type\":\"uint256\"},{\"name\":\"outper4s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"name\":\"setsysteam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hassellmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getaddtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"adduser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getsysteam\",\"outputs\":[{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"},{\"name\":\"outper3s\",\"type\":\"uint256\"},{\"name\":\"outper4s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getother\",\"outputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"upper3s\",\"type\":\"uint256\"},{\"name\":\"upper4s\",\"type\":\"uint256\"},{\"name\":\"upper5s\",\"type\":\"uint256\"},{\"name\":\"upper6s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysminteth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensaddr\",\"type\":\"address\"}],\"name\":\"settoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getconf\",\"outputs\":[{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"systyPrice3\",\"type\":\"uint256\"},{\"name\":\"systyPrice4\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"sysPermit3\",\"type\":\"uint256\"},{\"name\":\"sysPermit4\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"systime3s\",\"type\":\"uint256\"},{\"name\":\"systime4s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"subBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuyeth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getmy\",\"outputs\":[{\"name\":\"myblance\",\"type\":\"uint256\"},{\"name\":\"meth\",\"type\":\"uint256\"},{\"name\":\"myeths\",\"type\":\"uint256\"},{\"name\":\"mypro\",\"type\":\"uint256\"},{\"name\":\"mytime\",\"type\":\"uint256\"},{\"name\":\"bprice\",\"type\":\"uint256\"},{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"myall\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasselleth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ethbalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"upper3s\",\"type\":\"uint256\"},{\"name\":\"upper4s\",\"type\":\"uint256\"},{\"name\":\"upper5s\",\"type\":\"uint256\"},{\"name\":\"upper6s\",\"type\":\"uint256\"}],\"name\":\"setother\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"intersubuser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"interadduser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getall\",\"outputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"crontime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"geteam\",\"outputs\":[{\"name\":\"nn1\",\"type\":\"uint256\"},{\"name\":\"nn2\",\"type\":\"uint256\"},{\"name\":\"nn3\",\"type\":\"uint256\"},{\"name\":\"nn4\",\"type\":\"uint256\"},{\"name\":\"nn5\",\"type\":\"uint256\"},{\"name\":\"nn6\",\"type\":\"uint256\"},{\"name\":\"ms\",\"type\":\"uint256\"},{\"name\":\"tm\",\"type\":\"uint256\"},{\"name\":\"mintmoneys\",\"type\":\"uint256\"},{\"name\":\"usermoneys\",\"type\":\"uint256\"},{\"name\":\"fromoneys\",\"type\":\"uint256\"},{\"name\":\"lid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"intertransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"intertoken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintsub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuymoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"suns\",\"outputs\":[{\"name\":\"n1\",\"type\":\"uint256\"},{\"name\":\"n2\",\"type\":\"uint256\"},{\"name\":\"n3\",\"type\":\"uint256\"},{\"name\":\"n4\",\"type\":\"uint256\"},{\"name\":\"n5\",\"type\":\"uint256\"},{\"name\":\"n6\",\"type\":\"uint256\"},{\"name\":\"getmoney\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"financer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysoutmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"subuser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysusermoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adminaddr\",\"type\":\"address\"}],\"name\":\"setadmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"addBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getsys\",\"outputs\":[{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"outm\",\"type\":\"uint256\"},{\"name\":\"um\",\"type\":\"uint256\"},{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"hasout\",\"type\":\"uint256\"},{\"name\":\"hasbuy\",\"type\":\"uint256\"},{\"name\":\"hassell\",\"type\":\"uint256\"},{\"name\":\"hasbuyeths\",\"type\":\"uint256\"},{\"name\":\"hasselleths\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tags\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasoutmony\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MT","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ddb57876f982b48eb3ad75b3ace23874b964fc2b104c06fc4059366687e9ec18"}]}