{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    } \r\n}\r\n\r\nlibrary SafeMath8{\r\n     function add(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        uint8 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }  \r\n\r\n    function sub(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        require(b <= a);\r\n        uint8 c = a - b;\r\n        return c;\r\n    }\r\n\r\n     function mul(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint8 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint8 a, uint8 b) internal pure returns (uint8) {\r\n        require(b > 0);\r\n        uint8 c = a / b;\r\n        return c;\r\n    }\r\n }\r\n \r\n \r\ninterface ERC20 {\r\n  function decimals() external view returns(uint8);\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n\r\n  function transfer(address to, uint256 value) external returns(bool);\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success) ;\r\n}\r\n\r\ninterface material{\r\n    function controlSearchCount(uint8 boxIndex, uint8 materialIndex,address target)external view returns (uint);\r\n    function MaterialTokens(uint8 _boxIndex, uint8 _materialIndex) external view returns (address);\r\n}\r\n\r\ninterface master{\r\n    function addressToName(address awarder) external view returns(bytes32);\r\n    function bytes32ToString(bytes32 x)external view  returns (string);\r\n}\r\n \r\ncontract owned{\r\n\r\n    address public manager;\r\n\r\n    constructor() public{\r\n        manager = msg.sender;\r\n    }\r\n\r\n    modifier onlymanager{\r\n        require(msg.sender == manager);\r\n        _;\r\n    } \r\n\r\n    function transferownership(address _new_manager) public onlymanager {\r\n        manager = _new_manager;\r\n    }\r\n} \r\n\r\n\r\ncontract activity is owned{\r\n    \r\n    address materialFactory_address = 0x65844f2e98495b6c8780f689c5d13bb7f4975d65;\r\n    address master_address = 0x0ac10bf0342fa2724e93d250751186ba5b659303;\r\n    \r\n    mapping(uint8 => mapping(uint8 => uint)) public awardAmount;\r\n    mapping(uint8 => mapping(uint8 => uint)) public awardPrice;\r\n    uint8 public action;\r\n    uint8 public require_value;\r\n    using SafeMath8 for uint8;\r\n    using SafeMath for uint;\r\n    event awardResult(address indexed awarder,string awardName,uint8 boxIndex, uint8 material_index,uint price,uint8 action);\r\n    \r\n    constructor() public{\r\n        awardAmount[0][27] = 1;     awardPrice[0][27] = 1 ether;\r\n        awardAmount[1][9] = 1;      awardPrice[1][9] = 1 ether;\r\n        awardAmount[2][19] = 1;     awardPrice[2][19] = 1 ether;   \r\n        awardAmount[3][6] = 1;      awardPrice[3][6] = 1 ether;\r\n        awardAmount[4][19] = 1;     awardPrice[4][19] = 1 ether;\r\n        awardAmount[0][21] = 10;    awardPrice[0][21] = 0.1 ether;\r\n        awardAmount[1][8] = 10;     awardPrice[1][8] = 0.1 ether;\r\n        awardAmount[2][12] = 10;    awardPrice[2][12] = 0.1 ether;\r\n        awardAmount[3][4] = 10;     awardPrice[3][4] = 0.1 ether;\r\n        awardAmount[4][15] = 10;    awardPrice[4][15] = 0.1 ether;  \r\n        action = 1;\r\n        require_value = 5;\r\n    }\r\n    \r\n    function() public payable{}\r\n\r\n    function receiveApproval(address _sender, uint256 _value,\r\n    address _tokenContract, bytes memory _extraData) public{\r\n        \r\n        uint8 boxIndex;\r\n        uint8 material_index;\r\n        bytes32 byteName;\r\n        string memory awardName;\r\n\r\n        boxIndex = uint8(_extraData[1]); \r\n        material_index = uint8(_extraData[2]);\r\n \r\n        address material_address = material(materialFactory_address).MaterialTokens(boxIndex,material_index);\r\n        \r\n        require(_tokenContract == material_address);\r\n        require(_value == require_value);\r\n        require(_value <= materialAmount(boxIndex,material_index,_sender));\r\n        require(awardAmount[boxIndex][material_index] != 0);\r\n        require(ERC20(material_address).transferFrom(_sender, address(this), _value),\"交易失敗\");\r\n \r\n        awardAmount[boxIndex][material_index] = awardAmount[boxIndex][material_index].sub(1);\r\n        \r\n        byteName = master(master_address).addressToName(_sender);\r\n        awardName =  master(master_address).bytes32ToString(byteName);\r\n         \r\n        _sender.transfer(awardPrice[boxIndex][material_index]); \r\n        emit awardResult(_sender,awardName, boxIndex, material_index,awardPrice[boxIndex][material_index],action);\r\n        \r\n    }\r\n    \r\n    function materialAmount(uint8 boxIndex, uint8 material_index, address _sender) private  view returns (uint) {    \r\n        return material(materialFactory_address).controlSearchCount(boxIndex,material_index,_sender);\r\n    } \r\n    \r\n    function inquireAddress(uint8 boxIndex, uint8 material_index) public view returns (address) {    \r\n        return material(materialFactory_address).MaterialTokens(boxIndex,material_index);\r\n    } \r\n    \r\n    function inquireEth() public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n   \r\n    function setAciton(uint8 _action) public onlymanager{\r\n        action = _action;\r\n    }\r\n    \r\n    function set_require_value(uint8 _require_value) public onlymanager{\r\n        require_value = _require_value;\r\n    }\r\n     \r\n    function resetAward(uint8 boxIndex, uint8 material_index) public onlymanager{\r\n        awardAmount[boxIndex][material_index] = 0;\r\n        awardPrice[boxIndex][material_index] = 0;\r\n    } \r\n  \r\n    function setNewMulAward(uint8[] boxIndex, uint8[] material_index , uint8[] amount, uint[] price) public onlymanager{\r\n        require(boxIndex.length == material_index.length && material_index.length == amount.length && amount.length == price.length);\r\n        for(uint8 i = 0;i<boxIndex.length;i++){\r\n            awardAmount[boxIndex[i]][material_index[i]] = amount[i];\r\n            awardPrice[boxIndex[i]][material_index[i]] = price[i] * 10 ** 18;\r\n        } \r\n    }\r\n    \r\n    function set_master_address(address _master_address) public onlymanager{\r\n        master_address = _master_address;\r\n    }\r\n    \r\n    function set_materialFactory_address(address _materialFactory_address) public onlymanager{\r\n        materialFactory_address = _materialFactory_address;\r\n    }\r\n\r\n    function withdraw_all_ETH() public onlymanager{\r\n        manager.transfer(address(this).balance);\r\n    }\r\n \r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"setAciton\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"action\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"boxIndex\",\"type\":\"uint8[]\"},{\"name\":\"material_index\",\"type\":\"uint8[]\"},{\"name\":\"amount\",\"type\":\"uint8[]\"},{\"name\":\"price\",\"type\":\"uint256[]\"}],\"name\":\"setNewMulAward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_materialFactory_address\",\"type\":\"address\"}],\"name\":\"set_materialFactory_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw_all_ETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"boxIndex\",\"type\":\"uint8\"},{\"name\":\"material_index\",\"type\":\"uint8\"}],\"name\":\"inquireAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"require_value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"boxIndex\",\"type\":\"uint8\"},{\"name\":\"material_index\",\"type\":\"uint8\"}],\"name\":\"resetAward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inquireEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"awardAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"awardPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master_address\",\"type\":\"address\"}],\"name\":\"set_master_address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_manager\",\"type\":\"address\"}],\"name\":\"transferownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_require_value\",\"type\":\"uint8\"}],\"name\":\"set_require_value\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"awarder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"awardName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"boxIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"material_index\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"action\",\"type\":\"uint8\"}],\"name\":\"awardResult\",\"type\":\"event\"}]","ContractName":"activity","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://29bee185cc59a1fc83a0d62b41dfdff167d57503dd054283258e1976a569158a"}]}