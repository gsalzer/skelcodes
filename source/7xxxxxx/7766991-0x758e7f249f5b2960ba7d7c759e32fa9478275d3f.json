{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.0;\r\n\r\ncontract HeatChek {\r\n\r\n    struct Proposal {\r\n        address clientAddress;\r\n        address influencerAddress;\r\n        uint256 minimumLengthOfTimePostedInHours;\r\n        uint256 lockedRate;\r\n        uint256 userId;\r\n        uint256 hourlyRate;\r\n        uint256 pricePerPost;\r\n        bool violatedContract;\r\n        uint256 proposalUUID;\r\n        bool completed;\r\n    }\r\n\r\n    event ProposalCreated(\r\n        string message,\r\n        address clientAddress,\r\n        address influencerAddress,\r\n        uint256 minimumLengthOfTimePostedInHours,\r\n        uint256 lockedRate,\r\n        uint256 userId,\r\n        uint256 hourlyRate,\r\n        uint256 pricePerPost,\r\n        bool violatedContract,\r\n        uint256 proposalUUID\r\n    );\r\n\r\n    event ServiceFeeDistributed(\r\n        string message,\r\n        address servicerAddress,\r\n        uint256 proposalUUID,\r\n        uint256 serviceFeeAmmount\r\n    );\r\n\r\n    event InfluencerPaymentDistributed(\r\n        string message,\r\n        address influencerAddress,\r\n        uint256 proposalUUID,\r\n        uint256 lockedRate,\r\n        uint256 influencerPayment,\r\n        uint256 serviceFeeCharged\r\n    );\r\n\r\n    event ProposalCompleted(\r\n        string message,\r\n        address servicerAddress,\r\n        address clientAddress,\r\n        address influencerAddress,\r\n        uint256 lockedRate,\r\n        uint256 serviceFeeCharged,\r\n        uint256 influencerPayment,\r\n        uint256 proposalUUID\r\n    );\r\n\r\n     event NullifyProposalContract(\r\n        string message,\r\n        uint256 proposalUUID,\r\n        address clientAddress,\r\n        address influencerAddress\r\n    );\r\n\r\n    event RefundClient(\r\n        string message,\r\n        address clientAddress,\r\n        uint256 refundAmmount\r\n    );\r\n\r\n    event CompleteWithdrawalAccepted(\r\n        string message,\r\n        uint256 ammount\r\n    );\r\n\r\n    event PartialWithdrawalAccepted(\r\n        string message,\r\n        uint256 ammount\r\n    );\r\n\r\n    address contractOwner;\r\n    mapping(address => uint256) balances;\r\n    mapping(uint256 => Proposal) proposals;\r\n\r\n    constructor() public {\r\n        contractOwner = msg.sender;\r\n        balances[contractOwner] = 0;\r\n    }\r\n\r\n    function createProposal(\r\n        address _influencerAddress,\r\n        uint256 _minimumLengthOfTimePostedInHours,\r\n        uint256 _lockedRate,\r\n        uint256 _userId,\r\n        uint256 _hourlyRate,\r\n        uint256 _pricePerPost,\r\n        uint256 _proposalUUID\r\n    )\r\n        public\r\n        payable\r\n        returns (bool)\r\n    {\r\n\r\n        Proposal memory p = Proposal({\r\n            clientAddress: msg.sender,\r\n            influencerAddress: _influencerAddress,\r\n            minimumLengthOfTimePostedInHours: _minimumLengthOfTimePostedInHours,\r\n            lockedRate: _lockedRate,\r\n            userId: _userId,\r\n            hourlyRate: _hourlyRate,\r\n            pricePerPost: _pricePerPost,\r\n            violatedContract: false,\r\n            proposalUUID: _proposalUUID,\r\n            completed: false\r\n        });\r\n\r\n        proposals[_proposalUUID] = p;\r\n\r\n        balances[_influencerAddress] += msg.value;\r\n\r\n        emit ProposalCreated({\r\n            message: \"Proposal was created\",\r\n            clientAddress: msg.sender,\r\n            influencerAddress: _influencerAddress,\r\n            minimumLengthOfTimePostedInHours: _minimumLengthOfTimePostedInHours,\r\n            lockedRate: _lockedRate,\r\n            userId: _userId,\r\n            hourlyRate: _hourlyRate,\r\n            pricePerPost: _pricePerPost,\r\n            violatedContract: false,\r\n            proposalUUID: _proposalUUID\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function getProposal(uint256 _proposalId)\r\n        proposalExists(_proposalId)\r\n        public\r\n        view\r\n        returns (\r\n            address _clientAddress,\r\n            address _influencerAddress,\r\n            uint256 _minimumLengthOfTimePostedInHours,\r\n            uint256 _lockedRate,\r\n            uint256 _userId,\r\n            uint256 _hourlyRate,\r\n            uint256 _pricePerPost,\r\n            bool _violatedContract,\r\n            uint256 _proposalUUID,\r\n            bool completed\r\n        )\r\n    {\r\n        Proposal memory p = proposals[_proposalId];\r\n\r\n        return (\r\n            p.clientAddress,\r\n            p.influencerAddress,\r\n            p.minimumLengthOfTimePostedInHours,\r\n            p.lockedRate,\r\n            p.userId,\r\n            p.hourlyRate,\r\n            p.pricePerPost,\r\n            p.violatedContract,\r\n            p.proposalUUID,\r\n            p.completed\r\n        );\r\n    }\r\n\r\n    function payInfluencer(uint256 _proposalUUID)\r\n        isOwner\r\n        proposalExists(_proposalUUID)\r\n        validProposal(_proposalUUID)\r\n        incompleteProposal(_proposalUUID)\r\n        public\r\n        payable\r\n        returns (bool)\r\n    {\r\n        uint256 preformattedRate = proposals[_proposalUUID].lockedRate * 10 ** uint256(18);\r\n        uint256 serviceFee = preformattedRate / 100;\r\n        uint256 influencerPayment = preformattedRate - serviceFee;\r\n        address payable influencerAddress = address(uint160(proposals[_proposalUUID].influencerAddress));\r\n\r\n        balances[msg.sender] += serviceFee;\r\n        balances[influencerAddress] -= influencerPayment;\r\n\r\n        msg.sender.transfer(serviceFee);\r\n\r\n        emit ServiceFeeDistributed({\r\n            message: \"Service Fee has been sent\",\r\n            servicerAddress: msg.sender,\r\n            proposalUUID: _proposalUUID,\r\n            serviceFeeAmmount: serviceFee\r\n        });\r\n\r\n        influencerAddress.transfer(influencerPayment);\r\n\r\n        emit InfluencerPaymentDistributed({\r\n            message: \"Influencer payment has been sent\",\r\n            influencerAddress: influencerAddress,\r\n            proposalUUID: _proposalUUID,\r\n            lockedRate: proposals[_proposalUUID].lockedRate,\r\n            influencerPayment: influencerPayment,\r\n            serviceFeeCharged: serviceFee\r\n        });\r\n        \r\n        proposals[_proposalUUID].completed = true;\r\n\r\n        emit ProposalCompleted({\r\n            message: \"Proposal has been completed\",\r\n            servicerAddress: msg.sender,\r\n            clientAddress: proposals[_proposalUUID].clientAddress,\r\n            influencerAddress: proposals[_proposalUUID].influencerAddress,\r\n            lockedRate: proposals[_proposalUUID].lockedRate,\r\n            serviceFeeCharged: serviceFee,\r\n            influencerPayment: influencerPayment,\r\n            proposalUUID: _proposalUUID\r\n        });\r\n        \r\n        return true;\r\n    }\r\n\r\n    function voidContractAndRefundClient(uint256 _proposalUUID)\r\n        isOwner\r\n        proposalExists(_proposalUUID)\r\n        public\r\n        payable\r\n        returns (bool)\r\n    {\r\n        proposals[_proposalUUID].violatedContract = true;\r\n        \r\n        emit NullifyProposalContract({\r\n            message: \"Contract has been voided\",\r\n            proposalUUID: _proposalUUID,\r\n            clientAddress: proposals[_proposalUUID].clientAddress,\r\n            influencerAddress: proposals[_proposalUUID].influencerAddress\r\n        });\r\n        \r\n        balances[proposals[_proposalUUID].influencerAddress] -= proposals[_proposalUUID].lockedRate;\r\n        address payable clientAddress = address(uint160(proposals[_proposalUUID].clientAddress));\r\n        uint256 formattedRefundAmmount = proposals[_proposalUUID].lockedRate * 10 ** uint256(18);\r\n        clientAddress.transfer(formattedRefundAmmount);\r\n\r\n        emit RefundClient({\r\n            message: \"Refund completed\",\r\n            clientAddress: proposals[_proposalUUID].clientAddress,\r\n            refundAmmount: formattedRefundAmmount\r\n        });\r\n    }\r\n\r\n    function widthraw()\r\n        isOwner\r\n        hasFunds\r\n        public\r\n        returns (bool)\r\n    {\r\n        msg.sender.transfer(balances[msg.sender]);\r\n        return true;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return contractOwner;\r\n    }\r\n    \r\n    modifier incompleteProposal(uint256 _proposalUUID) {\r\n        require(proposals[_proposalUUID].completed == false);\r\n        _;\r\n    }\r\n\r\n    modifier belongsToInfluencer(uint256 _proposalUUID) {\r\n        require(msg.sender == proposals[_proposalUUID].influencerAddress);\r\n        _;\r\n    }\r\n\r\n    modifier isOwner() {\r\n        require(msg.sender == contractOwner);\r\n        _;\r\n    }\r\n\r\n    modifier hasFunds() {\r\n        require(balances[msg.sender] > 0 ether);\r\n        _;\r\n    }\r\n\r\n    modifier belongsToRequester(uint256 _proposalUUID) {\r\n        require(_proposalUUID > 0);\r\n        require(proposals[_proposalUUID].clientAddress == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier validProposal(uint256 _proposalUUID) {\r\n        require(_proposalUUID > 0);\r\n        require(proposals[_proposalUUID].violatedContract == false);\r\n        _;\r\n    }\r\n\r\n    modifier voidProposal(uint256 _proposalUUID) {\r\n        require(_proposalUUID > 0);\r\n        require(proposals[_proposalUUID].violatedContract == true);\r\n        _;\r\n    }\r\n\r\n    modifier proposalExists(uint256 _proposalUUID) {\r\n        require(_proposalUUID > 0);\r\n        require(proposals[_proposalUUID].lockedRate > 0);\r\n        _;\r\n    }\r\n\r\n    modifier couldAffordTx(uint256 _lockedRate) {\r\n        uint256 lockedRate = _lockedRate * 10 ** uint256(18);\r\n        require(lockedRate > 0);\r\n        require(lockedRate == msg.value);\r\n        _;\r\n    }\r\n\r\n    modifier notContractOwner() {\r\n        require(msg.sender != contractOwner);\r\n        _;\r\n    }\r\n\r\n\r\n    modifier proposalDoesNotExist(uint256 _proposalUUID) {\r\n        require(_proposalUUID > 0);\r\n        require(proposals[_proposalUUID].lockedRate == 0);\r\n        _;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_proposalUUID\",\"type\":\"uint256\"}],\"name\":\"payInfluencer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalUUID\",\"type\":\"uint256\"}],\"name\":\"voidContractAndRefundClient\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"widthraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"name\":\"_clientAddress\",\"type\":\"address\"},{\"name\":\"_influencerAddress\",\"type\":\"address\"},{\"name\":\"_minimumLengthOfTimePostedInHours\",\"type\":\"uint256\"},{\"name\":\"_lockedRate\",\"type\":\"uint256\"},{\"name\":\"_userId\",\"type\":\"uint256\"},{\"name\":\"_hourlyRate\",\"type\":\"uint256\"},{\"name\":\"_pricePerPost\",\"type\":\"uint256\"},{\"name\":\"_violatedContract\",\"type\":\"bool\"},{\"name\":\"_proposalUUID\",\"type\":\"uint256\"},{\"name\":\"completed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_influencerAddress\",\"type\":\"address\"},{\"name\":\"_minimumLengthOfTimePostedInHours\",\"type\":\"uint256\"},{\"name\":\"_lockedRate\",\"type\":\"uint256\"},{\"name\":\"_userId\",\"type\":\"uint256\"},{\"name\":\"_hourlyRate\",\"type\":\"uint256\"},{\"name\":\"_pricePerPost\",\"type\":\"uint256\"},{\"name\":\"_proposalUUID\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"influencerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"minimumLengthOfTimePostedInHours\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lockedRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"hourlyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"pricePerPost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"violatedContract\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"proposalUUID\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"servicerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalUUID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"serviceFeeAmmount\",\"type\":\"uint256\"}],\"name\":\"ServiceFeeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"influencerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalUUID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lockedRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"influencerPayment\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"serviceFeeCharged\",\"type\":\"uint256\"}],\"name\":\"InfluencerPaymentDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"servicerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"influencerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lockedRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"serviceFeeCharged\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"influencerPayment\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposalUUID\",\"type\":\"uint256\"}],\"name\":\"ProposalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"proposalUUID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"influencerAddress\",\"type\":\"address\"}],\"name\":\"NullifyProposalContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"refundAmmount\",\"type\":\"uint256\"}],\"name\":\"RefundClient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"CompleteWithdrawalAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"PartialWithdrawalAccepted\",\"type\":\"event\"}]","ContractName":"HeatChek","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://63e58f1f85a452e57e42e7dc6304b7ce058b29b0ad01db33f7d69bcd9fc48cc5"}]}