{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.4;\r\n\r\ninterface IDGTXToken {\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\ninterface IWhitelist {\r\n    function approved(address user) external view returns (bool);\r\n}\r\n\r\ninterface ITreasury {\r\n    function phaseNum() external view returns (uint256);\r\n}\r\n\r\ncontract Sale {\r\n    address public owner;\r\n    address public whitelist;\r\n    address public token;\r\n    address public treasury;\r\n\r\n    mapping(address => mapping(uint256 => uint256)) public purchased;\r\n\r\n    uint256 internal rate;\r\n    uint256 internal constant RATE_DELIMITER = 1000;\r\n    uint256 internal constant ONE_TOKEN = 1e18; //1 DGTX\r\n    uint256 internal constant PURCHASE_LIMIT = 1e24; //1 000 000 DGTX\r\n\r\n    uint256 internal oldRate;\r\n    uint256 internal constant RATE_UPDATE_DELAY = 15 minutes;\r\n    uint256 internal rateBecomesValidAt;\r\n\r\n    event Purchase(address indexed buyer, uint256 amount);\r\n    event RateUpdate(uint256 newRate, uint256 rateBecomesValidAt);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event TokensReceived(uint256 amount);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhitelisted() {\r\n        require(IWhitelist(whitelist).approved(msg.sender));\r\n        _;\r\n    }\r\n\r\n    constructor(address _token, address _whitelist, address _treasury, uint256 _rate) public {\r\n        require(_token != address(0));\r\n        require(_whitelist != address(0));\r\n        require(_treasury != address(0));\r\n        require(_rate != 0);\r\n\r\n        owner = msg.sender;\r\n        token = _token;\r\n        whitelist = _whitelist;\r\n        treasury = _treasury;\r\n        rate = _rate;\r\n    }\r\n\r\n    function() external payable {\r\n        require(msg.data.length == 0);\r\n\r\n        buy();\r\n    }\r\n\r\n    function updateRate(uint256 newRate) external onlyOwner {\r\n        require(newRate != 0);\r\n\r\n        if (now > rateBecomesValidAt) {\r\n            oldRate = rate;\r\n        }\r\n        rate = newRate;\r\n        rateBecomesValidAt = now + RATE_UPDATE_DELAY;\r\n        emit RateUpdate(newRate, rateBecomesValidAt);\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        require(address(this).balance > 0);\r\n\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    function withdraw(address payable to) external onlyOwner {\r\n        require(address(this).balance > 0);\r\n\r\n        to.transfer(address(this).balance);\r\n    }\r\n\r\n    function transferOwnership(address _owner) external onlyOwner {\r\n        require(_owner != address(0));\r\n\r\n        emit OwnershipTransferred(owner, _owner);\r\n\r\n        owner = _owner;\r\n    }\r\n\r\n    function tokenFallback(address, uint value, bytes calldata) external {\r\n        require(msg.sender == token);\r\n\r\n        emit TokensReceived(value);\r\n    }\r\n\r\n    function availablePersonal(address user) external view returns (uint256) {\r\n        if (IWhitelist(whitelist).approved(user)) {\r\n            uint256 currentPhase = ITreasury(treasury).phaseNum();\r\n            return PURCHASE_LIMIT - purchased[user][currentPhase];\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function buy() public payable onlyWhitelisted() returns (uint256) {\r\n        uint256 availableTotal = availableTokens();\r\n        require(availableTotal > 0);\r\n\r\n        uint256 currentPhase = ITreasury(treasury).phaseNum();\r\n        uint256 personalRestrictions = PURCHASE_LIMIT - purchased[msg.sender][currentPhase];\r\n        require(personalRestrictions > 0);\r\n\r\n        uint256 amount = weiToTokens(msg.value);\r\n        require(amount >= ONE_TOKEN); // 1 DGTX\r\n\r\n        // actual = min(amount, availableTotal, availablePersonal)\r\n        uint256 actual = amount < availableTotal ? amount : availableTotal;\r\n        actual = actual < personalRestrictions ? actual : personalRestrictions;\r\n\r\n        purchased[msg.sender][currentPhase] += actual;\r\n\r\n        require(IDGTXToken(token).transfer(msg.sender, actual));\r\n\r\n        if (amount != actual) {\r\n            uint256 weiRefund = msg.value - tokensToWei(actual);\r\n            msg.sender.transfer(weiRefund);\r\n        }\r\n\r\n        emit Purchase(msg.sender, actual);\r\n\r\n        return actual;\r\n    }\r\n\r\n    function currentRate() public view returns (uint256) {\r\n        return (now < rateBecomesValidAt) ? oldRate : rate;\r\n    }\r\n\r\n    function weiToTokens(uint256 weiAmount) public view returns (uint256) {\r\n        uint256 exchangeRate = currentRate();\r\n\r\n        return weiAmount * exchangeRate / RATE_DELIMITER;\r\n    }\r\n\r\n    function tokensToWei(uint256 tokensAmount) public view returns (uint256) {\r\n        uint256 exchangeRate = currentRate();\r\n\r\n        return tokensAmount * RATE_DELIMITER / exchangeRate;\r\n    }\r\n\r\n    function futureRate() public view returns (uint256, uint256) {\r\n        return (now < rateBecomesValidAt) ? (rate, rateBecomesValidAt - now) : (rate, 0);\r\n    }\r\n\r\n    function availableTokens() public view returns (uint256) {\r\n        return IDGTXToken(token).balanceOf(address(this));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"weiToTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokensAmount\",\"type\":\"uint256\"}],\"name\":\"tokensToWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"availablePersonal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_whitelist\",\"type\":\"address\"},{\"name\":\"_treasury\",\"type\":\"address\"},{\"name\":\"_rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rateBecomesValidAt\",\"type\":\"uint256\"}],\"name\":\"RateUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReceived\",\"type\":\"event\"}]","ContractName":"Sale","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001c83501478f1320977047008496dacbd60bb15ef000000000000000000000000371a6a413fd23c5c906180769b87701d3be624a8000000000000000000000000099a9f22d1bcb5a90e0b8fa0cb0fc47350f113ea00000000000000000000000000000000000000000000000000000000000186a0","Library":"","SwarmSource":"bzzr://28f4018d4a7008260b949b05c4486958d6c35e550deac0a46a314f9f5815b05e"}]}