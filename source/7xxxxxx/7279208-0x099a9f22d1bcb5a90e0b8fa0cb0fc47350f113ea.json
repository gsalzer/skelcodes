{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.4;\r\n\r\ninterface IDGTXToken {\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\n\r\ninterface ITreasury {\r\n    function phaseNum() external view returns (uint256);\r\n}\r\n\r\ncontract Treasury is ITreasury {\r\n    address public sale;\r\n    address public token;\r\n    uint256 internal constant SINGLE_RELEASE_AMOUNT = 1e25;\r\n\r\n    uint256 public phaseNum;\r\n    uint256[] public phases = [\r\n        1551448800, //1 March 2019 14:00 (GMT)\r\n        1559397600, //1 June 2019 14:00 (GMT)\r\n        1567346400, //1 September 2019 14:00 (GMT)\r\n        1575208800, //1 December 2019 14:00 (GMT)\r\n        1583071200, //1 March 2020 14:00 (GMT)\r\n        1591020000, //1 June 2020 14:00 (GMT)\r\n        1598968800, //1 September 2020 14:00 (GMT)\r\n        1606831200, //1 December 2020 14:00 (GMT)\r\n        1614607200, //1 March 2021 14:00 (GMT)\r\n        1622556000  //1 June 2021 14:00 (GMT)\r\n    ];\r\n\r\n    event PhaseStarted(uint256 newPhaseNum);\r\n\r\n    constructor(address _token, address _sale) public {\r\n        require(_token != address(0) && _sale != address(0));\r\n\r\n        token = _token;\r\n        sale = _sale;\r\n    }\r\n\r\n    function tokenFallback(address, uint, bytes calldata) external {\r\n        require(msg.sender == token);\r\n        require(phaseNum == 0);\r\n        require(IDGTXToken(token).balanceOf(address(this)) == SINGLE_RELEASE_AMOUNT * 10);\r\n    }\r\n\r\n    function startNewPhase() external {\r\n        require(now >= phases[phaseNum]);\r\n\r\n        phaseNum += 1;\r\n\r\n        require(IDGTXToken(token).transfer(sale, SINGLE_RELEASE_AMOUNT));\r\n\r\n        emit PhaseStarted(phaseNum);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phases\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startNewPhase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_sale\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newPhaseNum\",\"type\":\"uint256\"}],\"name\":\"PhaseStarted\",\"type\":\"event\"}]","ContractName":"Treasury","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001c83501478f1320977047008496dacbd60bb15ef0000000000000000000000009c666c69595c278063278a604ff12c70691ab234","Library":"","SwarmSource":"bzzr://0e3a348637469c9453bd9c47dd8a462ebeefb97cfa41865270630d0394a73cbf"}]}