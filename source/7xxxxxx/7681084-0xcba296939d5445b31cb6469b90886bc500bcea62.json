{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract NowTees {\r\n\r\n  uint256 public _maxNowTeeSets;\r\n  address payable public _owner;\r\n  uint256 public _nowTeeSetPrice;\r\n  // map from key to set\r\n  mapping(address => uint256) public _nowTeeKeys;\r\n  mapping(uint256 => NowTeeSet) public _nowTeeSets;\r\n  uint256 public _soldSets;\r\n\r\n  event NewNowTeeSet(uint256 setID);\r\n\r\n  struct NowTeeSet {\r\n    address firstKey;\r\n    address secondKey;\r\n    address thirdKey;\r\n  }\r\n\r\n  constructor(address payable owner, uint256 nowTeeSetPrice, uint256 maxNowTeeSets) public {\r\n    _owner = owner;\r\n    _nowTeeSetPrice = nowTeeSetPrice;\r\n    _maxNowTeeSets = maxNowTeeSets;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == _owner);\r\n    _;\r\n  }\r\n\r\n  function changeOwner(address payable newOwner) public onlyOwner() {\r\n    require(newOwner != address(0));\r\n    _owner = newOwner;\r\n  }\r\n\r\n  function changePriceForNowTeeSet(uint256 newPrice) public onlyOwner() {\r\n\r\n    // update price for three shirts\r\n    _nowTeeSetPrice = newPrice;\r\n\r\n  }\r\n\r\n  function soldSets() view public returns (uint256) {\r\n    return _soldSets;\r\n  }\r\n\r\n  function nowTeeSetByKey(address key) view public returns (address, address, address) {\r\n    NowTeeSet memory set = _nowTeeSets[_nowTeeKeys[key]];\r\n    return (set.firstKey, set.secondKey, set.thirdKey);\r\n  }\r\n\r\n  function isValidNowTeeKey(address key) view public returns (bool) {\r\n    return _nowTeeKeys[key] != 0;\r\n  }\r\n\r\n  function allocateKey(address key, uint256 set) internal {\r\n    // make sure that address is a non nil address\r\n    require(key != address (0));\r\n    // make sure that key hasn't been used\r\n    require(_nowTeeKeys[key] == 0);\r\n    _nowTeeKeys[key] = set;\r\n  }\r\n\r\n  function buySet(address firstKey, address secondKey, address thirdKey) payable public {\r\n\r\n    // make sure they send in enough ether & forward it to owner\r\n    require(msg.value >= _nowTeeSetPrice);\r\n    _owner.transfer(address(this).balance);\r\n\r\n    // make sure that we don't sell more than max sets\r\n    _soldSets += 1;\r\n    require(_soldSets <= _maxNowTeeSets);\r\n\r\n    // put key set into state\r\n    NowTeeSet memory keySet = NowTeeSet(firstKey, secondKey, thirdKey);\r\n    _nowTeeSets[_soldSets] = keySet;\r\n    emit NewNowTeeSet(_soldSets);\r\n\r\n    // map keys to set\r\n    allocateKey(firstKey, _soldSets);\r\n    allocateKey(secondKey, _soldSets);\r\n    allocateKey(thirdKey, _soldSets);\r\n\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_nowTeeKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePriceForNowTeeSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldSets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"address\"}],\"name\":\"isValidNowTeeKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_nowTeeSets\",\"outputs\":[{\"name\":\"firstKey\",\"type\":\"address\"},{\"name\":\"secondKey\",\"type\":\"address\"},{\"name\":\"thirdKey\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"firstKey\",\"type\":\"address\"},{\"name\":\"secondKey\",\"type\":\"address\"},{\"name\":\"thirdKey\",\"type\":\"address\"}],\"name\":\"buySet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"address\"}],\"name\":\"nowTeeSetByKey\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_maxNowTeeSets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_soldSets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_nowTeeSetPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"nowTeeSetPrice\",\"type\":\"uint256\"},{\"name\":\"maxNowTeeSets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"setID\",\"type\":\"uint256\"}],\"name\":\"NewNowTeeSet\",\"type\":\"event\"}]","ContractName":"NowTees","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000a6105ee093d532fa0b5725fd3ed7aa6d8f94e4430000000000000000000000000000000000000000000000001e87f85809dc0000000000000000000000000000000000000000000000000000000000000000014d","Library":"","SwarmSource":"bzzr://4989685c12fc0eddd4e6ee6724ddac36bfd1f1fa6365c1d8b436c946759d633b"}]}