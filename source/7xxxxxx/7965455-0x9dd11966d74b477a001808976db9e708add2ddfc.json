{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.25 <0.6.0;\n\npragma experimental ABIEncoderV2;\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n/**\n * @title Modifiable\n * @notice A contract with basic modifiers\n */\ncontract Modifiable {\n    //\n    // Modifiers\n    // -----------------------------------------------------------------------------------------------------------------\n    modifier notNullAddress(address _address) {\n        require(_address != address(0));\n        _;\n    }\n\n    modifier notThisAddress(address _address) {\n        require(_address != address(this));\n        _;\n    }\n\n    modifier notNullOrThisAddress(address _address) {\n        require(_address != address(0));\n        require(_address != address(this));\n        _;\n    }\n\n    modifier notSameAddresses(address _address1, address _address2) {\n        if (_address1 != _address2)\n            _;\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n/**\n * @title SelfDestructible\n * @notice Contract that allows for self-destruction\n */\ncontract SelfDestructible {\n    //\n    // Variables\n    // -----------------------------------------------------------------------------------------------------------------\n    bool public selfDestructionDisabled;\n\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event SelfDestructionDisabledEvent(address wallet);\n    event TriggerSelfDestructionEvent(address wallet);\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Get the address of the destructor role\n    function destructor()\n    public\n    view\n    returns (address);\n\n    /// @notice Disable self-destruction of this contract\n    /// @dev This operation can not be undone\n    function disableSelfDestruction()\n    public\n    {\n        // Require that sender is the assigned destructor\n        require(destructor() == msg.sender);\n\n        // Disable self-destruction\n        selfDestructionDisabled = true;\n\n        // Emit event\n        emit SelfDestructionDisabledEvent(msg.sender);\n    }\n\n    /// @notice Destroy this contract\n    function triggerSelfDestruction()\n    public\n    {\n        // Require that sender is the assigned destructor\n        require(destructor() == msg.sender);\n\n        // Require that self-destruction has not been disabled\n        require(!selfDestructionDisabled);\n\n        // Emit event\n        emit TriggerSelfDestructionEvent(msg.sender);\n\n        // Self-destruct and reward destructor\n        selfdestruct(msg.sender);\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n\n\n\n/**\n * @title Ownable\n * @notice A modifiable that has ownership roles\n */\ncontract Ownable is Modifiable, SelfDestructible {\n    //\n    // Variables\n    // -----------------------------------------------------------------------------------------------------------------\n    address public deployer;\n    address public operator;\n\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event SetDeployerEvent(address oldDeployer, address newDeployer);\n    event SetOperatorEvent(address oldOperator, address newOperator);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address _deployer) internal notNullOrThisAddress(_deployer) {\n        deployer = _deployer;\n        operator = _deployer;\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Return the address that is able to initiate self-destruction\n    function destructor()\n    public\n    view\n    returns (address)\n    {\n        return deployer;\n    }\n\n    /// @notice Set the deployer of this contract\n    /// @param newDeployer The address of the new deployer\n    function setDeployer(address newDeployer)\n    public\n    onlyDeployer\n    notNullOrThisAddress(newDeployer)\n    {\n        if (newDeployer != deployer) {\n            // Set new deployer\n            address oldDeployer = deployer;\n            deployer = newDeployer;\n\n            // Emit event\n            emit SetDeployerEvent(oldDeployer, newDeployer);\n        }\n    }\n\n    /// @notice Set the operator of this contract\n    /// @param newOperator The address of the new operator\n    function setOperator(address newOperator)\n    public\n    onlyOperator\n    notNullOrThisAddress(newOperator)\n    {\n        if (newOperator != operator) {\n            // Set new operator\n            address oldOperator = operator;\n            operator = newOperator;\n\n            // Emit event\n            emit SetOperatorEvent(oldOperator, newOperator);\n        }\n    }\n\n    /// @notice Gauge whether message sender is deployer or not\n    /// @return true if msg.sender is deployer, else false\n    function isDeployer()\n    internal\n    view\n    returns (bool)\n    {\n        return msg.sender == deployer;\n    }\n\n    /// @notice Gauge whether message sender is operator or not\n    /// @return true if msg.sender is operator, else false\n    function isOperator()\n    internal\n    view\n    returns (bool)\n    {\n        return msg.sender == operator;\n    }\n\n    /// @notice Gauge whether message sender is operator or deployer on the one hand, or none of these on these on\n    /// on the other hand\n    /// @return true if msg.sender is operator, else false\n    function isDeployerOrOperator()\n    internal\n    view\n    returns (bool)\n    {\n        return isDeployer() || isOperator();\n    }\n\n    // Modifiers\n    // -----------------------------------------------------------------------------------------------------------------\n    modifier onlyDeployer() {\n        require(isDeployer());\n        _;\n    }\n\n    modifier notDeployer() {\n        require(!isDeployer());\n        _;\n    }\n\n    modifier onlyOperator() {\n        require(isOperator());\n        _;\n    }\n\n    modifier notOperator() {\n        require(!isOperator());\n        _;\n    }\n\n    modifier onlyDeployerOrOperator() {\n        require(isDeployerOrOperator());\n        _;\n    }\n\n    modifier notDeployerOrOperator() {\n        require(!isDeployerOrOperator());\n        _;\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n\n/**\n * @title     MonetaryTypesLib\n * @dev       Monetary data types\n */\nlibrary MonetaryTypesLib {\n    //\n    // Structures\n    // -----------------------------------------------------------------------------------------------------------------\n    struct Currency {\n        address ct;\n        uint256 id;\n    }\n\n    struct Figure {\n        int256 amount;\n        Currency currency;\n    }\n\n    struct NoncedAmount {\n        uint256 nonce;\n        int256 amount;\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n\n\n/**\n * @title     NahmiiTypesLib\n * @dev       Data types of general nahmii character\n */\nlibrary NahmiiTypesLib {\n    //\n    // Enums\n    // -----------------------------------------------------------------------------------------------------------------\n    enum ChallengePhase {Dispute, Closed}\n\n    //\n    // Structures\n    // -----------------------------------------------------------------------------------------------------------------\n    struct OriginFigure {\n        uint256 originId;\n        MonetaryTypesLib.Figure figure;\n    }\n\n    struct IntendedConjugateCurrency {\n        MonetaryTypesLib.Currency intended;\n        MonetaryTypesLib.Currency conjugate;\n    }\n\n    struct SingleFigureTotalOriginFigures {\n        MonetaryTypesLib.Figure single;\n        OriginFigure[] total;\n    }\n\n    struct TotalOriginFigures {\n        OriginFigure[] total;\n    }\n\n    struct CurrentPreviousInt256 {\n        int256 current;\n        int256 previous;\n    }\n\n    struct SingleTotalInt256 {\n        int256 single;\n        int256 total;\n    }\n\n    struct IntendedConjugateCurrentPreviousInt256 {\n        CurrentPreviousInt256 intended;\n        CurrentPreviousInt256 conjugate;\n    }\n\n    struct IntendedConjugateSingleTotalInt256 {\n        SingleTotalInt256 intended;\n        SingleTotalInt256 conjugate;\n    }\n\n    struct WalletOperatorHashes {\n        bytes32 wallet;\n        bytes32 operator;\n    }\n\n    struct Signature {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n    }\n\n    struct Seal {\n        bytes32 hash;\n        Signature signature;\n    }\n\n    struct WalletOperatorSeal {\n        Seal wallet;\n        Seal operator;\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n\n\n\n/**\n * @title     PaymentTypesLib\n * @dev       Data types centered around payment\n */\nlibrary PaymentTypesLib {\n    //\n    // Enums\n    // -----------------------------------------------------------------------------------------------------------------\n    enum PaymentPartyRole {Sender, Recipient}\n\n    //\n    // Structures\n    // -----------------------------------------------------------------------------------------------------------------\n    struct PaymentSenderParty {\n        uint256 nonce;\n        address wallet;\n\n        NahmiiTypesLib.CurrentPreviousInt256 balances;\n\n        NahmiiTypesLib.SingleFigureTotalOriginFigures fees;\n\n        string data;\n    }\n\n    struct PaymentRecipientParty {\n        uint256 nonce;\n        address wallet;\n\n        NahmiiTypesLib.CurrentPreviousInt256 balances;\n\n        NahmiiTypesLib.TotalOriginFigures fees;\n    }\n\n    struct Operator {\n        uint256 id;\n        string data;\n    }\n\n    struct Payment {\n        int256 amount;\n        MonetaryTypesLib.Currency currency;\n\n        PaymentSenderParty sender;\n        PaymentRecipientParty recipient;\n\n        // Positive transfer is always in direction from sender to recipient\n        NahmiiTypesLib.SingleTotalInt256 transfers;\n\n        NahmiiTypesLib.WalletOperatorSeal seals;\n        uint256 blockNumber;\n\n        Operator operator;\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    function PAYMENT_KIND()\n    public\n    pure\n    returns (string memory)\n    {\n        return \"payment\";\n    }\n}\n\n/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\n\n\n\n\n\n\n\n\n/**\n * @title PaymentHasher\n * @notice Contract that hashes types related to payment\n */\ncontract PaymentHasher is Ownable {\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    function hashPaymentAsWallet(PaymentTypesLib.Payment memory payment)\n    public\n    pure\n    returns (bytes32)\n    {\n        bytes32 amountCurrencyHash = hashPaymentAmountCurrency(payment);\n        bytes32 senderHash = hashPaymentSenderPartyAsWallet(payment.sender);\n        bytes32 recipientHash = hashAddress(payment.recipient.wallet);\n\n        return keccak256(abi.encodePacked(amountCurrencyHash, senderHash, recipientHash));\n    }\n\n    function hashPaymentAsOperator(PaymentTypesLib.Payment memory payment)\n    public\n    pure\n    returns (bytes32)\n    {\n        bytes32 walletSignatureHash = hashSignature(payment.seals.wallet.signature);\n        bytes32 senderHash = hashPaymentSenderPartyAsOperator(payment.sender);\n        bytes32 recipientHash = hashPaymentRecipientPartyAsOperator(payment.recipient);\n        bytes32 transfersHash = hashSingleTotalInt256(payment.transfers);\n        bytes32 operatorHash = hashString(payment.operator.data);\n\n        return keccak256(abi.encodePacked(\n                walletSignatureHash, senderHash, recipientHash, transfersHash, operatorHash\n            ));\n    }\n\n    function hashPaymentAmountCurrency(PaymentTypesLib.Payment memory payment)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                payment.amount,\n                payment.currency.ct,\n                payment.currency.id\n            ));\n    }\n\n    function hashPaymentSenderPartyAsWallet(\n        PaymentTypesLib.PaymentSenderParty memory paymentSenderParty)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                paymentSenderParty.wallet,\n                paymentSenderParty.data\n            ));\n    }\n\n    function hashPaymentSenderPartyAsOperator(\n        PaymentTypesLib.PaymentSenderParty memory paymentSenderParty)\n    public\n    pure\n    returns (bytes32)\n    {\n        bytes32 rootHash = hashUint256(paymentSenderParty.nonce);\n        bytes32 balancesHash = hashCurrentPreviousInt256(paymentSenderParty.balances);\n        bytes32 singleFeeHash = hashFigure(paymentSenderParty.fees.single);\n        bytes32 totalFeesHash = hashOriginFigures(paymentSenderParty.fees.total);\n\n        return keccak256(abi.encodePacked(\n                rootHash, balancesHash, singleFeeHash, totalFeesHash\n            ));\n    }\n\n    function hashPaymentRecipientPartyAsOperator(\n        PaymentTypesLib.PaymentRecipientParty memory paymentRecipientParty)\n    public\n    pure\n    returns (bytes32)\n    {\n        bytes32 rootHash = hashUint256(paymentRecipientParty.nonce);\n        bytes32 balancesHash = hashCurrentPreviousInt256(paymentRecipientParty.balances);\n        bytes32 totalFeesHash = hashOriginFigures(paymentRecipientParty.fees.total);\n\n        return keccak256(abi.encodePacked(\n                rootHash, balancesHash, totalFeesHash\n            ));\n    }\n\n    function hashCurrentPreviousInt256(\n        NahmiiTypesLib.CurrentPreviousInt256 memory currentPreviousInt256)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                currentPreviousInt256.current,\n                currentPreviousInt256.previous\n            ));\n    }\n\n    function hashSingleTotalInt256(\n        NahmiiTypesLib.SingleTotalInt256 memory singleTotalInt256)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                singleTotalInt256.single,\n                singleTotalInt256.total\n            ));\n    }\n\n    function hashFigure(MonetaryTypesLib.Figure memory figure)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                figure.amount,\n                figure.currency.ct,\n                figure.currency.id\n            ));\n    }\n\n    function hashOriginFigures(NahmiiTypesLib.OriginFigure[] memory originFigures)\n    public\n    pure\n    returns (bytes32)\n    {\n        bytes32 hash;\n        for (uint256 i = 0; i < originFigures.length; i++) {\n            hash = keccak256(abi.encodePacked(\n                    hash,\n                    originFigures[i].originId,\n                    originFigures[i].figure.amount,\n                    originFigures[i].figure.currency.ct,\n                    originFigures[i].figure.currency.id\n                )\n            );\n        }\n        return hash;\n    }\n\n    function hashUint256(uint256 _uint256)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(_uint256));\n    }\n\n    function hashString(string memory _string)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(_string));\n    }\n\n    function hashAddress(address _address)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(_address));\n    }\n\n    function hashSignature(NahmiiTypesLib.Signature memory signature)\n    public\n    pure\n    returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(\n                signature.v,\n                signature.r,\n                signature.s\n            ));\n    }\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"single\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"paymentSenderParty\",\"type\":\"tuple\"}],\"name\":\"hashPaymentSenderPartyAsOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"hashFigure\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"single\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"paymentSenderParty\",\"type\":\"tuple\"}],\"name\":\"hashPaymentSenderPartyAsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerSelfDestruction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selfDestructionDisabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"hashSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hashAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destructor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableSelfDestruction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_string\",\"type\":\"string\"}],\"name\":\"hashString\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"setDeployer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"single\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"sender\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"}],\"name\":\"recipient\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"single\",\"type\":\"int256\"},{\"name\":\"total\",\"type\":\"int256\"}],\"name\":\"transfers\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"wallet\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"seals\",\"type\":\"tuple\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"payment\",\"type\":\"tuple\"}],\"name\":\"hashPaymentAsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"single\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"sender\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"}],\"name\":\"recipient\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"single\",\"type\":\"int256\"},{\"name\":\"total\",\"type\":\"int256\"}],\"name\":\"transfers\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"wallet\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"seals\",\"type\":\"tuple\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"payment\",\"type\":\"tuple\"}],\"name\":\"hashPaymentAsOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uint256\",\"type\":\"uint256\"}],\"name\":\"hashUint256\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"single\",\"type\":\"int256\"},{\"name\":\"total\",\"type\":\"int256\"}],\"name\":\"singleTotalInt256\",\"type\":\"tuple\"}],\"name\":\"hashSingleTotalInt256\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"currentPreviousInt256\",\"type\":\"tuple\"}],\"name\":\"hashCurrentPreviousInt256\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"originFigures\",\"type\":\"tuple[]\"}],\"name\":\"hashOriginFigures\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"single\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"sender\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"}],\"name\":\"recipient\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"single\",\"type\":\"int256\"},{\"name\":\"total\",\"type\":\"int256\"}],\"name\":\"transfers\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"wallet\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"seals\",\"type\":\"tuple\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"operator\",\"type\":\"tuple\"}],\"name\":\"payment\",\"type\":\"tuple\"}],\"name\":\"hashPaymentAmountCurrency\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"name\":\"current\",\"type\":\"int256\"},{\"name\":\"previous\",\"type\":\"int256\"}],\"name\":\"balances\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"name\":\"originId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"amount\",\"type\":\"int256\"},{\"components\":[{\"name\":\"ct\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currency\",\"type\":\"tuple\"}],\"name\":\"figure\",\"type\":\"tuple\"}],\"name\":\"total\",\"type\":\"tuple[]\"}],\"name\":\"fees\",\"type\":\"tuple\"}],\"name\":\"paymentRecipientParty\",\"type\":\"tuple\"}],\"name\":\"hashPaymentRecipientPartyAsOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"deployer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldDeployer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"SetDeployerEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperatorEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"SelfDestructionDisabledEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"TriggerSelfDestructionEvent\",\"type\":\"event\"}]","ContractName":"PaymentHasher","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"1","Runs":"0","ConstructorArguments":"000000000000000000000000f05179bac3d1fbef58a2fcd7ad0f769840027cc6","Library":"","SwarmSource":"bzzr://af9a34f8b026db7e8fd67fcfc4dd4ec69ffc8ce49cec62662120fdf620f4156b"}]}