{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.6;\r\n\r\ninterface GeneralERC20 {\r\n\tfunction transfer(address to, uint256 value) external;\r\n\tfunction transferFrom(address from, address to, uint256 value) external;\r\n\tfunction approve(address spender, uint256 value) external;\r\n\tfunction balanceOf(address spender) external view returns (uint);\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction checkSuccess()\r\n\t\tprivate\r\n\t\tpure\r\n\t\treturns (bool)\r\n\t{\r\n\t\tuint256 returnValue = 0;\r\n\r\n\t\tassembly {\r\n\t\t\t// check number of bytes returned from last function call\r\n\t\t\tswitch returndatasize\r\n\r\n\t\t\t// no bytes returned: assume success\r\n\t\t\tcase 0x0 {\r\n\t\t\t\treturnValue := 1\r\n\t\t\t}\r\n\r\n\t\t\t// 32 bytes returned: check if non-zero\r\n\t\t\tcase 0x20 {\r\n\t\t\t\t// copy 32 bytes into scratch space\r\n\t\t\t\treturndatacopy(0x0, 0x0, 0x20)\r\n\r\n\t\t\t\t// load those bytes into returnValue\r\n\t\t\t\treturnValue := mload(0x0)\r\n\t\t\t}\r\n\r\n\t\t\t// not sure what was returned: don't mark as success\r\n\t\t\tdefault { }\r\n\t\t}\r\n\r\n\t\treturn returnValue != 0;\r\n\t}\r\n\r\n\tfunction transfer(address token, address to, uint256 amount) internal {\r\n\t\tGeneralERC20(token).transfer(to, amount);\r\n\t\trequire(checkSuccess());\r\n\t}\r\n\r\n\tfunction transferFrom(address token, address from, address to, uint256 amount) internal {\r\n\t\tGeneralERC20(token).transferFrom(from, to, amount);\r\n\t\trequire(checkSuccess());\r\n\t}\r\n\r\n\tfunction approve(address token, address spender, uint256 amount) internal {\r\n\t\tGeneralERC20(token).approve(spender, amount);\r\n\t\trequire(checkSuccess());\r\n\t}\r\n}\r\n\r\n\r\ncontract IdentityFactory {\r\n\tevent LogDeployed(address addr, uint256 salt);\r\n\r\n\taddress public relayer;\r\n\tconstructor(address relayerAddr) public {\r\n\t\trelayer = relayerAddr;\r\n\t}\r\n\r\n\tfunction deploy(bytes memory code, uint256 salt) public {\r\n\t\taddress addr;\r\n\t\tassembly { addr := create2(0, add(code, 0x20), mload(code), salt) }\r\n\t\trequire(addr != address(0), \"FAILED_DEPLOYING\");\r\n\t\temit LogDeployed(addr, salt);\r\n\t}\r\n\r\n\tfunction deployAndFund(bytes memory code, uint256 salt, address tokenAddr, uint256 tokenAmount) public {\r\n\t\trequire(msg.sender == relayer, \"ONLY_RELAYER\");\r\n\t\taddress addr;\r\n\t\tassembly { addr := create2(0, add(code, 0x20), mload(code), salt) }\r\n\t\trequire(addr != address(0), \"FAILED_DEPLOYING\");\r\n\t\tSafeERC20.transfer(tokenAddr, addr, tokenAmount);\r\n\t\temit LogDeployed(addr, salt);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes\"},{\"name\":\"salt\",\"type\":\"uint256\"},{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"deployAndFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes\"},{\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"relayerAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"LogDeployed\",\"type\":\"event\"}]","ContractName":"IdentityFactory","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000942f9ce5d9a33a82f88d233aeb3292e680230348","Library":"","SwarmSource":"bzzr://c00bbdf50007d6669254ca3101be253f3741ac54fcbed167cbbc21c15411afc3"}]}