{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * The ERC20 multi sender Contract\r\n * Useful to do multiple transfers of the same token to different addresses\r\n * \r\n * @author Fabio Pacchioni <mailto:fabio.pacchioni@gmail.com>\r\n * @author Marco Vasapollo <mailto:ceo@metaring.com>\r\n */\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {}\r\n}\r\n\r\ncontract MultiSender {\r\n    \r\n    /**\r\n     * @param _tokenAddr the address of the ERC20Token\r\n     * @param _to the list of addresses that can receive your tokens\r\n     * @param _value the list of all the amounts that every _to address will receive\r\n     * \r\n     * @return true if all the transfers are OK.\r\n     * \r\n     * PLEASE NOTE: Max 150 addresses per time are allowed.\r\n     * \r\n     * PLEASE NOTE: remember to call the 'approve' function on the Token first,\r\n     * to let MultiSender be able to transfer your tokens.\r\n     */\r\n    function multiSend(address _tokenAddr, address[] memory _to, uint256[] memory _value) public returns (bool _success) {\r\n        assert(_to.length == _value.length);\r\n        assert(_to.length <= 150);\r\n        ERC20 _token = ERC20(_tokenAddr);\r\n        for (uint8 i = 0; i < _to.length; i++) {\r\n            assert((_token.transferFrom(msg.sender, _to[i], _value[i])) == true);\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"multiSend\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiSender","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bef3d1bc2fe8497841d1320c0201f0f2169bb21b58ebfff5b0f91b9fc38747f2"}]}