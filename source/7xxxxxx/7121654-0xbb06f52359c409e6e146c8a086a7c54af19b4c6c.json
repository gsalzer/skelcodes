{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n/**\r\n  * @dev Multiplies two numbers, reverts on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {if (a == 0) {return 0;}\r\n    uint256 c = a * b;require(c / a == b);return c;}\r\n/**\r\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {require(b > 0); uint256 c = a / b;\r\n    // assert(a == b * c + a % b); \r\nreturn c;}\r\n/**\r\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {require(b <= a);uint256 c = a - b;return c;}\r\n/**\r\n  * @dev Adds two numbers, reverts on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {uint256 c = a + b;require(c >= a);\r\n  return c;}\r\n/**\r\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {require(b != 0);return a % b;}}\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n    modifier onlyOwner {require(msg.sender == owner);_;}\r\n    function transferOwnership(address _newOwner) public onlyOwner {newOwner = _newOwner;}\r\n    function acceptOwnership() public {require(msg.sender == newOwner);owner = newOwner;}}\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ninterface IERC20 {\r\nfunction totalSupply() external view returns (uint256);\r\nfunction balanceOf(address who) external view returns (uint256);\r\nfunction allowance(address owner, address spender)\r\nexternal view returns (uint256);\r\nfunction transfer(address to, uint256 value) external returns (bool);\r\nfunction approve(address spender, uint256 value)\r\nexternal returns (bool);\r\nfunction transferFrom(address from, address to, uint256 value)\r\nexternal returns (bool);\r\nevent Transfer(address indexed from,address indexed to,uint256 value);\r\nevent Approval(address indexed owner,address indexed spender,uint256 value);}\r\ncontract Seeflats is IERC20, Owned {\r\n    using SafeMath for uint256;\r\n    constructor() public {\r\n        owner = 0x20b2135B34beB0c489B1F24FC151D568e58d4EEC;\r\n        contractAddress = this;\r\n        _balances[0x989DF5608DE37B01fd6Af0B4ACeF70FC1f1C6049] = 260000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0x989DF5608DE37B01fd6Af0B4ACeF70FC1f1C6049, 260000000 * 10 ** decimals);\r\n        _balances[0x5f9Cb40d282adBc0A8B1a21388922cd42d4c7948] = 400000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0x5f9Cb40d282adBc0A8B1a21388922cd42d4c7948, 400000000 * 10 ** decimals);\r\n        _balances[0x4f1C8103487b729ed8814a45453B2775972E21FD] = 500000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0x4f1C8103487b729ed8814a45453B2775972E21FD, 50000000 * 10 ** decimals);\r\n        _balances[0xe73Ccb2877954e38fbA312AB2FDC5333cfF4377f] = 50000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0xe73Ccb2877954e38fbA312AB2FDC5333cfF4377f, 50000000 * 10 ** decimals);\r\n        _balances[0xb3742A0f3FF0bbCda5313258b2f3009F01A68f6a] = 50000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0xb3742A0f3FF0bbCda5313258b2f3009F01A68f6a, 50000000 * 10 ** decimals);\r\n        _balances[0xe1BaAcE154a812D786E4d63311D7bCC33130F57C] = 1020000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0xe1BaAcE154a812D786E4d63311D7bCC33130F57C, 1020000000 * 10 ** decimals); \r\n        _balances[0xa3B8FAA8756C67a3f634EC8668BD00934855828A] = 60000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0xa3B8FAA8756C67a3f634EC8668BD00934855828A, 60000000 * 10 ** decimals);\r\n        _balances[0x6c3955D5CdEf675B2a071213CA0871B289D3346c] = 50000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0x6c3955D5CdEf675B2a071213CA0871B289D3346c, 50000000 * 10 ** decimals);\r\n        _balances[0x4e5196641b7A09a59734299c01c8c10771c7DC53] = 20000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, 0x4e5196641b7A09a59734299c01c8c10771c7DC53, 20000000 * 10 ** decimals);\r\n        _balances[contractAddress] = 40000000 * 10 ** decimals;\r\n        emit Transfer(contractAddress, contractAddress, 40000000 * 10 ** decimals);}\r\n\r\n    event Error(string err);\r\n    event Mint(uint mintAmount, uint newSupply);\r\n    string public constant name = \"Seeflats\"; \r\n    string public constant symbol = \"SFS\"; \r\n    uint256 public constant decimals = 8;\r\n    uint256 public constant supply = 2000000000 * 10 ** decimals;\r\n    address public contractAddress;\r\n    mapping (address => bool) public claimed;\r\n    mapping(address => uint256) _balances;\r\n mapping(address => mapping (address => uint256)) public _allowed;\r\n function totalSupply() public constant returns (uint) {\r\n        return supply;}\r\n function balanceOf(address tokenOwner) public constant returns (uint balance) {\r\n        return _balances[tokenOwner];}\r\n function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n        return _allowed[tokenOwner][spender];}\r\n function transfer(address to, uint value) public returns (bool success) {\r\n        require(_balances[msg.sender] >= value);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n        _balances[to] = _balances[to].add(value);\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;}\r\n  function approve(address spender, uint value) public returns (bool success) {\r\n        _allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;}\r\n  function transferFrom(address from, address to, uint value) public returns (bool success) {\r\n        require(value <= balanceOf(from));\r\n        require(value <= allowance(from, to));\r\n        _balances[from] = _balances[from].sub(value);\r\n        _balances[to] = _balances[to].add(value);\r\n        _allowed[from][to] = _allowed[from][to].sub(value);\r\n        emit Transfer(from, to, value);\r\n        return true;}\r\n    function () public payable {\r\n        if (msg.value == 0 && claimed[msg.sender] == false) {\r\n            require(_balances[contractAddress] >= 500 * 10 ** decimals);\r\n            _balances[contractAddress] -= 500 * 10 ** decimals;\r\n            _balances[msg.sender] += 500 * 10 ** decimals;\r\n            claimed[msg.sender] = true;\r\n            emit Transfer(contractAddress, msg.sender, 500 * 10 ** decimals);} \r\n        else if (msg.value == 0.01 ether) {\r\n            require(_balances[contractAddress] >= 400 * 10 ** decimals);\r\n            _balances[contractAddress] -= 400 * 10 ** decimals;\r\n            _balances[msg.sender] += 400 * 10 ** decimals;\r\n            emit Transfer(contractAddress, msg.sender, 400 * 10 ** decimals);} \r\n        else if (msg.value == 0.1 ether) {\r\n            require(_balances[contractAddress] >= 4200 * 10 ** decimals);\r\n            _balances[contractAddress] -= 4200 * 10 ** decimals;\r\n            _balances[msg.sender] += 4200 * 10 ** decimals;\r\n            emit Transfer(contractAddress, msg.sender, 4200 * 10 ** decimals);} \r\n        else if (msg.value == 1 ether) {\r\n            require(_balances[contractAddress] >= 45000 * 10 ** decimals);\r\n            _balances[contractAddress] -= 45000 * 10 ** decimals;\r\n            _balances[msg.sender] += 45000 * 10 ** decimals;\r\n            emit Transfer(contractAddress, msg.sender, 45000 * 10 ** decimals);} \r\n        else {revert();}}\r\n    function collectETH() public onlyOwner {owner.transfer(contractAddress.balance);}\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"err\",\"type\":\"string\"}],\"name\":\"Error\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newSupply\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Seeflats","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://398d0fa08bfba1b580853f556c3eec114d942e522bebeac9d7f57036b763c789"}]}