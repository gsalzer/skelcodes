{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.4;\r\n\r\n\r\n// ███████████████\r\n// █─█─█───█────██\r\n// █─█─█─███─██──█\r\n// █─█─█───█─██──█\r\n// █─█─███─█─██──█\r\n// █───█───█────██\r\n// ███████████████\r\n// ████████████████████\r\n// █────█────█───█─██─█\r\n// █─██─█─██─██─██──█─█\r\n// █─████─██─██─██─█──█\r\n// █─██─█─██─██─██─██─█\r\n// █────█────█───█─██─█\r\n// ████████████████████\r\n// ██████████████████\r\n// █───█────█────████\r\n// █─███─██─█─██─████\r\n// █───█─██─█────████\r\n// █─███─██─█─█─█████\r\n// █─███────█─█─█████\r\n// ██████████████████\r\n// █████████████████████\r\n// █────█─██─█─███──█──█\r\n// █─██─█──█─█─████───██\r\n// █─██─█─█──█─█████─███\r\n// █─██─█─██─█─█████─███\r\n// █────█─██─█───███─███\r\n// █████████████████─███\r\n// ██████████████████\r\n// █────███────█────█\r\n// █─██─███─██─█─████\r\n// █─██─███─██─█────█\r\n// █─██─███─██─████─█\r\n// █────█─█────█────█\r\n// ██████████████████\r\n// ███████████████\r\n// █─█─█───█────██\r\n// █─█─█─███─██──█\r\n// █─█─█───█─██──█\r\n// █─█─███─█─██──█\r\n// █───█───█────██\r\n// ███████████████\r\n\r\n\r\n\r\ncontract StableSale {\r\n  using SafeMath for uint;    \r\n  \r\n  // Fallback function for participating\r\n  function () external payable {\r\n    require(msg.value >= minContribution);\r\n    wallet.transfer(msg.value);  \r\n    uint tokens = msg.value.mul(rate);\r\n    ERC20Basic(token).mint(msg.sender, tokens);\r\n  }\r\n  \r\n  // USD Coin address\r\n  address token = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n  \r\n  // internal contract ETH/USD price \r\n  // 1 ETH = 3000$\r\n  // you will get 3000 StableCoins per 1 ETH \r\n  uint public rate = 3000; \r\n  \r\n  // minimum participating amount = 2 ether\r\n  uint256 minContribution = 2 ether;\r\n  \r\n  address payable public wallet = 0x617769A1428069f08830373086928249B85fCeEe;\r\n\r\n  address owner = tx.origin;\r\n\r\n  modifier onlyOwner() {\r\n    require(tx.origin == owner);\r\n    _;\r\n  }\r\n  \r\n  function setRate(uint newRate) public onlyOwner {\r\n    rate = newRate;  \r\n  }\r\n  \r\n  function setWallet(address payable newWallet) public onlyOwner {\r\n    wallet = newWallet;\r\n  }\r\n  \r\n  function setToken(address newToken) public onlyOwner {\r\n    token = newToken;\r\n  }\r\n  \r\n  function retrieveTokens(address to, address anotherToken) public onlyOwner {\r\n    ERC20Basic alienToken = ERC20Basic(anotherToken);\r\n    alienToken.transfer(to, alienToken.balanceOf(address(this)));\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n    \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract ERC20Basic {\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function mint(address to, uint256 value) external;\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"anotherToken\",\"type\":\"address\"}],\"name\":\"retrieveTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"StableSale","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://40c2f24fdc98a76086048e80e8e203316f7d176804e1e33868fd61a0bd710fd7"}]}