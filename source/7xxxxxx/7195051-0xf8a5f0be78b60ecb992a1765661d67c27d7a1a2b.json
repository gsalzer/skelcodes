{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\n\r\n/// @title birthday.sol -- A birthday card for a special person.\r\n/// @author Preston Van Loon <preston@prysmaticlabs.com>\r\ncontract BirthdayCard {\r\n    event PassphraseOK(string passphrase);\r\n    \r\n    string public message;\r\n    \r\n    bytes32 hashed_passphrase;\r\n    ERC20 constant dai = ERC20(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359);\r\n    \r\n    /// @dev Initialize the contract\r\n    /// @param _message to write inside of the birthday card\r\n    /// @param _hashed_passphrase is the keccak256 hashed passphrase\r\n    constructor(string memory _message, bytes32 _hashed_passphrase) public {\r\n        message = _message;\r\n        hashed_passphrase = _hashed_passphrase;\r\n    }\r\n    \r\n    /// @dev Withdraw the DAI and selfdestruct this birthday card!\r\n    /// Just like real life: take the money out and throw the card away!!\r\n    /// @param passphrase is the secret to test.\r\n    function withdraw(string memory passphrase) public {\r\n        require(isPassphrase(passphrase));\r\n        emit PassphraseOK(passphrase);\r\n        \r\n        assert(dai.transfer(msg.sender, dai.balanceOf(address(this))));\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n    /// @dev How much money is inside of this birthday card? \r\n    /// Divide the result of this by 10^18 to get the DAI dollar amount.\r\n    function balanceOf() public view returns (uint) {\r\n        return dai.balanceOf(address(this));\r\n    }\r\n    \r\n    /// @dev Sanity check for the passphrase before sending the transaction.\r\n    /// @param passphrase is the secret to test.\r\n    function isPassphrase(string memory passphrase) public view returns (bool) {\r\n        return keccak256(bytes(passphrase)) == hashed_passphrase;\r\n    }\r\n}\r\n\r\n\r\n/// erc20.sol -- API for the ERC20 token standard\r\n\r\n// See <https://github.com/ethereum/EIPs/issues/20>.\r\ncontract ERC20Events {\r\n    event Approval(address indexed src, address indexed guy, uint wad);\r\n    event Transfer(address indexed src, address indexed dst, uint wad);\r\n}\r\n\r\ncontract ERC20 is ERC20Events {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address guy) public view returns (uint);\r\n    function allowance(address src, address guy) public view returns (uint);\r\n\r\n    function approve(address guy, uint wad) public returns (bool);\r\n    function transfer(address dst, uint wad) public returns (bool);\r\n    function transferFrom(\r\n        address src, address dst, uint wad\r\n    ) public returns (bool);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"passphrase\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"passphrase\",\"type\":\"string\"}],\"name\":\"isPassphrase\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"message\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_message\",\"type\":\"string\"},{\"name\":\"_hashed_passphrase\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"passphrase\",\"type\":\"string\"}],\"name\":\"PassphraseOK\",\"type\":\"event\"}]","ContractName":"BirthdayCard","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004064edbb74abf02efdbfead17eaa9ab2c137066d84b397429ac27dd51a7dc96581000000000000000000000000000000000000000000000000000000000000001648617070792042697274686461792c204d61726b212100000000000000000000","Library":"","SwarmSource":"bzzr://9e78769f9ced8444a937a5dfc7136820ecaeec8b723891bbb27de27ba8a5c7bc"}]}