{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\ncontract Owned {\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    address payable owner;\r\n    address payable newOwner;\r\n    function changeOwner(address payable _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract Stake is Owned {\r\n    uint8 public fee;\r\n    uint32 public users;\r\n    string domain;\r\n    mapping (address=>uint256) stakes;\r\n    event Staked(address indexed _from, uint256 _value);\r\n    event Transfered(address indexed _from, address indexed _to, uint256 _value);\r\n    event Withdrawn(address indexed _from, uint256 _value);\r\n    function stakeOf(address _user) view public returns (uint256 stake) {return stakes[_user];}\r\n    function transferStake(address _from, address _to, uint256 _amount) public onlyOwner returns (bool ok){\r\n        require(_from!=address(0)&&_to!=address(0)&&_amount>0&&_amount<=stakes[_from]);\r\n        stakes[_from]-=_amount;\r\n        emit Transfered(_from,_to,_amount);\r\n        uint256 fees = _amount*fee/100;\r\n        _amount-=fees;\r\n        stakes[_to]+=_amount;\r\n        owner.transfer(fees);\r\n        return true;\r\n    }\r\n    function withdrawStake(address payable _from, uint256 _amount) public onlyOwner returns (bool ok){\r\n        require(_from!=address(0)&&_amount>0&&_amount<=stakes[_from]);\r\n        stakes[_from]-=_amount;\r\n        emit Withdrawn(_from,_amount);\r\n        if (_from==owner) owner.transfer(_amount);\r\n        else {\r\n            uint256 fees = _amount*fee/100;\r\n            _amount-=fees;\r\n            _from.transfer(_amount);\r\n            owner.transfer(fees);\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract EtherBox is Stake{\r\n    \r\n    constructor() public{\r\n        fee = 1;\r\n        users = 0;\r\n        domain = 'www.etherbox.io';\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function () payable external {\r\n        require(msg.value>0);\r\n        if (stakes[msg.sender]==0) users++;\r\n        stakes[msg.sender]+=msg.value;\r\n        emit Staked(msg.sender,msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"stakeOf\",\"outputs\":[{\"name\":\"stake\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferStake\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"}]","ContractName":"EtherBox","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://eb66b45ac8a59165bc8d934823e6b43df8178e22f9825cf582db65bbcd47f719"}]}