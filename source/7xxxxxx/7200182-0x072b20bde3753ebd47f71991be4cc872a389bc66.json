{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract CarHistoryFactory{\r\n    address owner;\r\n\r\n    struct CarRepairShop{\r\n        bool doesExist;\r\n        string shopName;\r\n        string descriptions;\r\n    }\r\n\r\n    mapping (address => CarRepairShop) carRepairShops;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not authorized.(owner)\");\r\n        _;\r\n    }\r\n\r\n    function addRepairShop(string _shopName, string _descriptions, address _shopAddress) onlyOwner public {\r\n        if (carRepairShops[_shopAddress].doesExist != true){\r\n            CarRepairShop memory tempShop;\r\n\r\n            tempShop.shopName = _shopName;\r\n            tempShop.descriptions = _descriptions;\r\n            tempShop.doesExist = true;\r\n\r\n            carRepairShops[_shopAddress] = tempShop;\r\n        } else {\r\n            updateRepairShop(_shopName, _descriptions, _shopAddress);\r\n        }\r\n    }\r\n\r\n    function updateRepairShop(string _shopName, string _descriptions, address _shopAddress) onlyOwner public {\r\n        require(carRepairShops[_shopAddress].doesExist == true);\r\n        carRepairShops[_shopAddress].descriptions = _descriptions;\r\n        carRepairShops[_shopAddress].shopName = _shopName;\r\n    }\r\n\r\n    address[] repairHistoryContract;\r\n    mapping (string => address) repairHistoryVehicleContract;\r\n\r\n    modifier onlyRepairShop() {\r\n        require(existRepairShop(msg.sender), \"Not authorized.(shop)\");\r\n        _;\r\n    }\r\n\r\n    function existRepairShop(address _address) public view returns(bool){\r\n        return carRepairShops[_address].doesExist;\r\n    }\r\n\r\n    function createRepairHistoryContract(string _VIN, string _repairTarget, string _repairDetail) onlyRepairShop public {\r\n        if(repairHistoryVehicleContract[_VIN] != 0){\r\n            RepairHistory historyContract = RepairHistory(repairHistoryVehicleContract[_VIN]);\r\n            historyContract.addRepairHistory(_repairTarget, _repairDetail, msg.sender);\r\n        }else{\r\n            address newRepairHistory = new RepairHistory(_VIN, _repairTarget, _repairDetail, msg.sender);\r\n            repairHistoryContract.push(newRepairHistory);\r\n            repairHistoryVehicleContract[_VIN] = newRepairHistory;\r\n        }\r\n    }\r\n\r\n    function getVehicleHistoryCount(string _VIN) public view returns(uint){\r\n        require(repairHistoryVehicleContract[_VIN] != 0);\r\n        RepairHistory historyContract = RepairHistory(repairHistoryVehicleContract[_VIN]);\r\n        return historyContract.getRepairHistoryCount();\r\n    }\r\n\r\n    function getVehicleHistory(string _VIN, uint _number) public view returns(string, string, string, string, uint){\r\n        require(repairHistoryVehicleContract[_VIN] != 0);\r\n\r\n        RepairHistory historyContract = RepairHistory(repairHistoryVehicleContract[_VIN]);\r\n        address repairShopAddress;\r\n        string memory repairTarget;\r\n        string memory repairDetail;\r\n        uint repairTime;\r\n        (repairShopAddress, repairTarget, repairDetail, repairTime) = historyContract.getRepairHistory(_number);\r\n        return (carRepairShops[repairShopAddress].shopName, carRepairShops[repairShopAddress].descriptions, repairTarget, repairDetail, repairTime);\r\n    }\r\n\r\n    function getVehicleAddresses() public view returns(address[]){\r\n        return repairHistoryContract;\r\n    }\r\n\r\n    function getVehicle(address _historyContract) public view returns(string){\r\n        RepairHistory historyContract = RepairHistory(_historyContract);\r\n        return historyContract.getVIN();\r\n    }\r\n}\r\n\r\ncontract RepairHistory{\r\n    address factoryAddress;\r\n    address senderAddress;\r\n\r\n    struct VehicleRepairHistory{\r\n        address repairShop;\r\n        uint repairTime;\r\n        string repairTarget;\r\n        string repairDetail;\r\n    }\r\n\r\n    string VIN;\r\n\r\n    VehicleRepairHistory[] vehicleRepairHistory;\r\n\r\n    modifier onlyRepairShop(){\r\n        CarHistoryFactory factory = CarHistoryFactory(factoryAddress);\r\n        require(factory.existRepairShop(senderAddress), \"Not authorized.(shop)\");\r\n        _;\r\n    }\r\n\r\n    constructor(string _VIN, string _repairTarget, string _repairDetail, address _sender) public {\r\n        factoryAddress = msg.sender;\r\n        senderAddress = _sender;\r\n\r\n        VIN = _VIN;\r\n\r\n        addRepairHistory(_repairTarget, _repairDetail, _sender);\r\n    }\r\n\r\n    function addRepairHistory(string _repairTarget, string _repairDetail, address _sender) onlyRepairShop public {\r\n        VehicleRepairHistory memory history;\r\n        history.repairShop = _sender;\r\n        history.repairTarget = _repairTarget;\r\n        history.repairDetail = _repairDetail;\r\n        history.repairTime = now;\r\n        vehicleRepairHistory.push(history);\r\n    }\r\n\r\n    function getRepairHistoryCount() public view returns(uint){\r\n        return vehicleRepairHistory.length;\r\n    }\r\n\r\n    function getRepairHistory(uint _number) public view returns(address, string, string, uint){\r\n        return (vehicleRepairHistory[_number].repairShop, vehicleRepairHistory[_number].repairTarget, vehicleRepairHistory[_number].repairDetail, vehicleRepairHistory[_number].repairTime);\r\n    }\r\n\r\n    function getVIN() public view returns(string){\r\n        return VIN;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_shopName\",\"type\":\"string\"},{\"name\":\"_descriptions\",\"type\":\"string\"},{\"name\":\"_shopAddress\",\"type\":\"address\"}],\"name\":\"updateRepairShop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_shopName\",\"type\":\"string\"},{\"name\":\"_descriptions\",\"type\":\"string\"},{\"name\":\"_shopAddress\",\"type\":\"address\"}],\"name\":\"addRepairShop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_VIN\",\"type\":\"string\"},{\"name\":\"_number\",\"type\":\"uint256\"}],\"name\":\"getVehicleHistory\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_VIN\",\"type\":\"string\"}],\"name\":\"getVehicleHistoryCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"existRepairShop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_historyContract\",\"type\":\"address\"}],\"name\":\"getVehicle\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVehicleAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_VIN\",\"type\":\"string\"},{\"name\":\"_repairTarget\",\"type\":\"string\"},{\"name\":\"_repairDetail\",\"type\":\"string\"}],\"name\":\"createRepairHistoryContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CarHistoryFactory","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://62835014fa3a7d1a2ed8c97a7dd394a74a91ae6561b65887b8a6bb4ce312ce72"}]}