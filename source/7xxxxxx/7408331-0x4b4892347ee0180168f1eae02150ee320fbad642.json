{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\n/**\r\n * @title User Auth\r\n */\r\ncontract UserAuth {\r\n\r\n    event LogSetOwner(address indexed owner, address setter);\r\n    address public owner;\r\n\r\n    /**\r\n     * @dev Throws if not called by owner or contract itself\r\n     */\r\n    modifier auth {\r\n        require(msg.sender == owner, \"permission-denied\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev sets new owner\r\n     * @param _owner is the new owner of this proxy contract\r\n     */\r\n    function setOwner(address _owner) public auth {\r\n        owner = _owner;\r\n        emit LogSetOwner(owner, msg.sender);\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @dev logging the execute events\r\n */\r\ncontract UserNote {\r\n    event LogNote(\r\n        bytes4 indexed sig,\r\n        address indexed guy,\r\n        bytes32 indexed foo,\r\n        bytes32 bar,\r\n        uint wad,\r\n        bytes fax\r\n    );\r\n\r\n    modifier note {\r\n        bytes32 foo;\r\n        bytes32 bar;\r\n        assembly {\r\n            foo := calldataload(4)\r\n            bar := calldataload(36)\r\n        }\r\n        emit LogNote(\r\n            msg.sig, \r\n            msg.sender, \r\n            foo, \r\n            bar, \r\n            msg.value, \r\n            msg.data\r\n        );\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title User Owned Contract Wallet\r\n */\r\ncontract UserWallet is UserAuth, UserNote {\r\n\r\n    event LogExecute(address target);\r\n\r\n    /**\r\n     * @dev sets the initial owner\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender; // will be changed in initial call\r\n    }\r\n\r\n    function() external payable {}\r\n\r\n    /**\r\n     * @dev execute authorised calls via delegate call\r\n     * @param _target logic proxy address\r\n     * @param _data delegate call data\r\n     */\r\n    function execute(address _target, bytes memory _data) \r\n        public\r\n        payable\r\n        note\r\n        auth\r\n        returns (bytes memory response)\r\n    {\r\n        require(_target != address(0), \"invalid-logic-proxy-address\");\r\n        emit LogExecute(_target);\r\n        \r\n        // call contract in current context\r\n        assembly {\r\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\r\n            let size := returndatasize\r\n\r\n            response := mload(0x40)\r\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\r\n            mstore(response, size)\r\n            returndatacopy(add(response, 0x20), 0, size)\r\n\r\n            switch iszero(succeeded)\r\n                case 1 {\r\n                    // throw if delegatecall failed\r\n                    revert(add(response, 0x20), size)\r\n                }\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"LogExecute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"setter\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}]","ContractName":"UserWallet","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e00d5bb6a7fbb77a69cedbe52c719a359e70cd52a27e2d30eb2f47759e9e8a52"}]}