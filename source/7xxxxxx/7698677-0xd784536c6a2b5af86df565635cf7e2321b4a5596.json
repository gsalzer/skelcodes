{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract ContractReceiver {\r\n    function tokenFallback(address _from, uint _value) public pure returns(address) {\r\n       if (_value != 0) return _from;\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n\tuint256 constant public MAX_UINT256 =\r\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n\tfunction safeAdd(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n\t    if (x > MAX_UINT256 - y) revert();\r\n\t\treturn x + y;\r\n\t}\r\n\r\n\tfunction safeSub(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (x < y) revert();\r\n        return x - y;\r\n\t}\r\n\r\n\tfunction safeMul(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (y == 0) return 0;\r\n        if (x > MAX_UINT256 / y) revert();\r\n        return x * y;\r\n\t}\r\n}\r\n\r\ncontract ValuesShare is SafeMath, Ownable {\r\n\r\n    mapping(address => uint) balanceOf;\r\n\r\n    string public name = \"ValuesShare\";\r\n    string public symbol = \"VS\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 39000000000000000000000000;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function ValuesShare() public payable { balanceOf[msg.sender] = totalSupply; }\r\n\r\n    function transfer(address _to, uint _value) public returns (bool success) {\r\n        if(isContract(_to)) return transferToContract(_to, _value);\r\n        return transferToAddress(_to, _value);\r\n    }\r\n\r\n    function isContract(address _addr) private view returns (bool is_contract) {\r\n        uint length;\r\n        assembly { length := extcodesize(_addr) }\r\n        return (length>0);\r\n    }\r\n\r\n    function transferToAddress(address _to, uint _value) private returns (bool success) {\r\n        require(getbalance(msg.sender) >= _value);\r\n        balanceOf[msg.sender] = safeSub(getbalance(msg.sender), _value);\r\n        balanceOf[_to] = safeAdd(getbalance(_to), _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferToContract(address _to, uint _value) private returns (bool success) {\r\n        require(getbalance(msg.sender) >= _value);\r\n        balanceOf[msg.sender] = safeSub(getbalance(msg.sender), _value);\r\n        balanceOf[_to] = safeAdd(getbalance(_to), _value);\r\n        ContractReceiver receiver = ContractReceiver(_to);\r\n        receiver.tokenFallback(msg.sender, _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function getbalance(address _ethaddress) public view returns (uint balance) {\r\n        return balanceOf[_ethaddress];\r\n    }\r\n    \r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] > _value);\r\n\t\trequire(_value >= 0); \r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value); \r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethaddress\",\"type\":\"address\"}],\"name\":\"getbalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ValuesShare","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f7b60603af4a22d4086dd4d49534451cd08202101158635686bcb1d3b342feaa"}]}