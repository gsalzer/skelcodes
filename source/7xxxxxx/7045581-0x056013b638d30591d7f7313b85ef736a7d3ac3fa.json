{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\ncontract ERC20Interface{ \r\n  function totalSupply() public view returns (uint);\r\n\r\n  function balanceOf(address who) public view returns (uint);\r\n \r\n  function transfer(address to, uint value) public returns (bool);\r\n \r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  \r\n}\r\n\r\n\r\ncontract ERC20 is ERC20Interface{\r\n \r\n  function allowance(address owner, address spender) public view returns (uint);\r\n  \r\n  function transferFrom(address from, address to, uint value) public returns (bool);\r\n  \r\n  function approve (address spender, uint value) public returns (bool);\r\n\r\n  event Approval (address indexed owner, address indexed spender, uint value);\r\n \r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  \r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    \r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = _a * _b;\r\n    require(c / _a == _b);\r\n\r\n    return c;\r\n  }\r\n\r\n \r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    require(_b > 0); \r\n    uint256 c = _a / _b;\r\n   \r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    require(_b <= _a);\r\n    uint256 c = _a - _b;\r\n\r\n    return c;\r\n  }\r\n\r\n \r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    uint256 c = _a + _b;\r\n    require(c >= _a);\r\n\r\n    return c;\r\n  }\r\n\r\n  \r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n\r\ncontract BasicToken is ERC20Interface{\r\n  using SafeMath for uint256;\r\n\r\n\r\n  mapping (address => uint256) balances;\r\n\r\n\r\n  uint totalSupply_;\r\n\r\n\r\n  function totalSupply() public view returns (uint){\r\n    return totalSupply_;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) public returns (bool){\r\n    require (_to != address(0));\r\n  \r\n    require (_value <= balances[msg.sender]);\r\n   \r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n\r\n\r\n    emit Transfer(msg.sender,_to,_value);\r\n   \r\n    return true; //모든것이 실행되면 참을 출력.\r\n\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns(uint balance){\r\n    return balances[_owner];\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\ncontract StandardToken is ERC20, BasicToken{\r\n\r\n\r\n  mapping (address => mapping (address => uint)) internal allowed;\r\n \r\n\r\n  function transferFrom(address _from, address _to, uint _value) public returns (bool){\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n   \r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from,_to,_value);\r\n    return true;\r\n\r\n  }\r\n\r\n  function approve(address _spender, uint _value) public returns (bool){\r\n    allowed[msg.sender][_spender] = _value;\r\n   \r\n    emit Approval(msg.sender,_spender,_value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint){\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\ncontract VIM is StandardToken{\r\n\r\n  string public constant name = \"VIM\";\r\n  string public constant symbol = \"VIM\";\r\n  uint8 public constant decimals = 18;\r\n\r\n  uint256 public constant INITIAL_SUPPLY = 4000000000 * (10**uint(decimals));\r\n\r\n  constructor() public{\r\n    totalSupply_ = INITIAL_SUPPLY;\r\n    balances[msg.sender] = INITIAL_SUPPLY;\r\n    emit Transfer(0x0,msg.sender,INITIAL_SUPPLY);\r\n\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"VIM","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d2dd9cdf27da5da8d5cb6c1f359d4988831c7b5496b620658c7f9bc216a5eb0d"}]}