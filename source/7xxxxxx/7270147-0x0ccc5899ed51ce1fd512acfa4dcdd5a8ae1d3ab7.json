{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.4;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract pDNADistributedRegistryInterface {\r\n  function getProperty(string memory _eGrid) public view returns (address property);\r\n  function owner() public view returns (address);\r\n}\r\n\r\ncontract CuratorsInterface {\r\n  function checkRole(address _operator, string memory _permission) public view;\r\n}\r\n\r\ncontract pDNA {\r\n  address public constant CURATORS_ADDRESS = 0x75375B37845792256F274875b345F35597d1C053;  // 0x0f5Ea0A652E851678Ebf77B69484bFcD31F9459B;\r\n  CuratorsInterface public curators = CuratorsInterface(CURATORS_ADDRESS);\r\n\r\n  address public constant PDNA_DISTRIBUTED_REGISTRY_ADDRESS = 0xf8D03aE98997B7d58A69Db3B98a77AE6819Ff39b;  // 0xEC8bE1A5630364292E56D01129E8ee8A9578d7D8;\r\n  pDNADistributedRegistryInterface public registry = pDNADistributedRegistryInterface(PDNA_DISTRIBUTED_REGISTRY_ADDRESS);\r\n\r\n  string public name;\r\n  string public symbol;\r\n\r\n  mapping(string => bytes32) private files;\r\n\r\n  event FilePut(address indexed curator, bytes32 indexed hash, string name);\r\n  event FileRemoved(address indexed curator, bytes32 indexed hash, string name);\r\n\r\n  modifier isValid() {\r\n    require(registry.getProperty(name) == address(this), \"invalid pDNA\");\r\n    _;\r\n  }\r\n\r\n  constructor(string memory _eGrid, string memory _grundstuck) public {\r\n    name = _eGrid;\r\n    symbol = _grundstuck;\r\n  }\r\n\r\n  function elea() public view returns (address) {\r\n    return registry.owner();\r\n  }\r\n\r\n  function getFile(string memory _name) public view returns (bytes32) {\r\n    return files[_name];\r\n  }\r\n\r\n  function removeFile(string memory _name) public isValid {\r\n    curators.checkRole(msg.sender, \"authorized\");\r\n\r\n    bytes32 hash = files[_name];\r\n    require(hash != bytes32(0));\r\n\r\n    files[_name] = bytes32(0);\r\n\r\n    emit FileRemoved(msg.sender, hash, _name);\r\n  }\r\n\r\n  function putFile(bytes32 _hash, string memory _name) public isValid {\r\n    curators.checkRole(msg.sender, \"authorized\");\r\n\r\n    files[_name] = _hash;\r\n\r\n    emit FilePut(msg.sender, _hash, _name);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CURATORS_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"putFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PDNA_DISTRIBUTED_REGISTRY_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getFile\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"elea\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_eGrid\",\"type\":\"string\"},{\"name\":\"_grundstuck\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FilePut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FileRemoved\",\"type\":\"event\"}]","ContractName":"pDNA","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f4348393831383036363537373737640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a43482d5a47343133336400000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://e113e210f993b07c89f4ff8a79d2ad858fbb793bb7303a26e08c89c4c9bad9ec"}]}