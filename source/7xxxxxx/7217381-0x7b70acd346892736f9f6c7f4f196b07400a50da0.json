{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.3;\r\n\r\n// File: /private/var/folders/2q/x2n3s2rx0d16552ynj1lx90r0000gn/T/tmp.ODkPvI0P/gluon-plasma/packages/on-chain/contracts/Stoppable.sol\r\n\r\n/* using a master switch, allowing to permanently turn-off functionality */\r\ncontract Stoppable {\r\n\r\n  /************************************ abstract **********************************/\r\n  modifier onlyOwner { _; }\r\n  /********************************************************************************/\r\n\r\n  bool public isOn = true;\r\n\r\n  modifier whenOn() { require(isOn, \"must be on\"); _; }\r\n  modifier whenOff() { require(!isOn, \"must be off\"); _; }\r\n\r\n  function switchOff() external onlyOwner {\r\n    if (isOn) {\r\n      isOn = false;\r\n      emit Off();\r\n    }\r\n  }\r\n  event Off();\r\n}\r\n\r\n// File: /private/var/folders/2q/x2n3s2rx0d16552ynj1lx90r0000gn/T/tmp.ODkPvI0P/gluon-plasma/packages/on-chain/contracts/Switchable.sol\r\n\r\n/* using a master switch, allowing to switch functionality on/off */\r\ncontract Switchable is Stoppable {\r\n\r\n  function switchOn() external onlyOwner {\r\n    if (!isOn) {\r\n      isOn = true;\r\n      emit On();\r\n    }\r\n  }\r\n  event On();\r\n}\r\n\r\n// File: /private/var/folders/2q/x2n3s2rx0d16552ynj1lx90r0000gn/T/tmp.ODkPvI0P/gluon-plasma/packages/on-chain/contracts/Validating.sol\r\n\r\ncontract Validating {\r\n\r\n  modifier notZero(uint number) { require(number != 0, \"invalid 0 value\"); _; }\r\n  modifier notEmpty(string memory text) { require(bytes(text).length != 0, \"invalid empty string\"); _; }\r\n  modifier validAddress(address value) { require(value != address(0x0), \"invalid address\");  _; }\r\n\r\n}\r\n\r\n// File: /private/var/folders/2q/x2n3s2rx0d16552ynj1lx90r0000gn/T/tmp.ODkPvI0P/gluon-plasma/packages/on-chain/contracts/HasOwners.sol\r\n\r\ncontract HasOwners is Validating {\r\n\r\n  mapping(address => bool) public isOwner;\r\n  address[] private owners;\r\n\r\n  constructor(address[] memory _owners) public {\r\n    for (uint i = 0; i < _owners.length; i++) _addOwner_(_owners[i]);\r\n    owners = _owners;\r\n  }\r\n\r\n  modifier onlyOwner { require(isOwner[msg.sender], \"invalid sender; must be owner\"); _; }\r\n\r\n  function getOwners() public view returns (address[] memory) { return owners; }\r\n\r\n  function addOwner(address owner) external onlyOwner {  _addOwner_(owner); }\r\n\r\n  function _addOwner_(address owner) private validAddress(owner) {\r\n    if (!isOwner[owner]) {\r\n      isOwner[owner] = true;\r\n      owners.push(owner);\r\n      emit OwnerAdded(owner);\r\n    }\r\n  }\r\n  event OwnerAdded(address indexed owner);\r\n\r\n  function removeOwner(address owner) external onlyOwner {\r\n    if (isOwner[owner]) {\r\n      require(owners.length > 1, \"removing the last owner is not allowed\");\r\n      isOwner[owner] = false;\r\n      for (uint i = 0; i < owners.length - 1; i++) {\r\n        if (owners[i] == owner) {\r\n          owners[i] = owners[owners.length - 1]; // replace map last entry\r\n          delete owners[owners.length - 1];\r\n          break;\r\n        }\r\n      }\r\n      owners.length -= 1;\r\n      emit OwnerRemoved(owner);\r\n    }\r\n  }\r\n  event OwnerRemoved(address indexed owner);\r\n}\r\n\r\n// File: /private/var/folders/2q/x2n3s2rx0d16552ynj1lx90r0000gn/T/tmp.ODkPvI0P/gluon-plasma/packages/on-chain/contracts/registry/Registry.sol\r\n\r\ninterface Registry {\r\n\r\n  function contains(address apiKey) external view returns (bool);\r\n\r\n  function register(address apiKey) external;\r\n  function registerWithUserAgreement(address apiKey, bytes32 userAgreement) external;\r\n\r\n  function translate(address apiKey) external view returns (address);\r\n}\r\n\r\n// File: contracts/registry/ApiKeyRegistry.sol\r\n\r\ncontract ApiKeyRegistry is Switchable, HasOwners, Registry {\r\n  string public version;\r\n\r\n  /* mapping of: address of api-key used in trading => address of account map funds used in settling */\r\n  mapping (address => address) public accounts;\r\n  mapping (address => bytes32) public userAgreements;\r\n\r\n  constructor(address[] memory _owners, string memory _version) HasOwners(_owners) public {\r\n    version = _version;\r\n  }\r\n\r\n  modifier isAbsent(address apiKey) { require(!contains(apiKey), \"api key already in use\"); _; }\r\n\r\n  function contains(address apiKey) public view returns (bool) { return accounts[apiKey] != address(0x0); }\r\n\r\n  function register(address apiKey) external { registerWithUserAgreement(apiKey, 0); }\r\n\r\n  function registerWithUserAgreement(address apiKey, bytes32 userAgreement) public validAddress(apiKey) isAbsent(apiKey) whenOn {\r\n    accounts[apiKey] = msg.sender;\r\n    if (userAgreement != 0 && userAgreements[msg.sender] == 0) {\r\n      userAgreements[msg.sender] = userAgreement;\r\n    }\r\n    emit Registered(apiKey, msg.sender, userAgreements[msg.sender]);\r\n  }\r\n  event Registered(address apiKey, address indexed account, bytes32 userAgreement);\r\n\r\n  function translate(address apiKey) external view returns (address) { return accounts[apiKey]; }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"switchOff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"apiKey\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"apiKey\",\"type\":\"address\"},{\"name\":\"userAgreement\",\"type\":\"bytes32\"}],\"name\":\"registerWithUserAgreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"apiKey\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAgreements\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"apiKey\",\"type\":\"address\"}],\"name\":\"translate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"switchOn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_version\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"apiKey\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userAgreement\",\"type\":\"bytes32\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"On\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Off\",\"type\":\"event\"}]","ContractName":"ApiKeyRegistry","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000020000000000000000000000004d2130d9d20428dc249a1e938a0bcea4b5b9ac1a000000000000000000000000ac01f01f51f0bdd012c1838bd5cef330e6c7ffca0000000000000000000000000000000000000000000000000000000000000006302e34312e300000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://7fb9c70b87b2fff634cd7801a8c1923eba2301f1c4ac599ff7a7472fa267a00c"}]}