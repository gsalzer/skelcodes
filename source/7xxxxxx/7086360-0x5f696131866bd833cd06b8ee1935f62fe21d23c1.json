{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 安全的加减乘除\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\tfunction add(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns(uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns(uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns(uint);\r\n\r\n\tfunction balanceOf(address tokenOwner) public constant returns(uint balance);\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns(uint remaining);\r\n\r\n\tfunction transfer(address to, uint tokens) public returns(bool success);\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// 管理员\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public {\r\n\t\trequire(msg.sender == newOwner);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\ninterface btycInterface {\r\n    function balanceOf(address _addr) external view returns (uint256);\r\n    function getcanuse(address tokenOwner) external view returns(uint);\r\n    function intertransfer(address from, address to, uint tokens) external returns(bool);\r\n    function interaddtoken(address target, uint256 mintedAmount, uint _day) external;\r\n    function intersubtoken(address target, uint256 mintedAmount) external;\r\n    function interaddmoney(address _addr, uint256 _money, uint _day) external;\r\n    function interreducemoney(address _addr, uint256 _money) external;\r\n}\r\n// ----------------------------------------------------------------------------\r\n// 核心类\r\n// ----------------------------------------------------------------------------\r\ncontract BTYCEC is ERC20Interface, Owned {\r\n\tusing SafeMath\r\n\tfor uint;\r\n\r\n\tstring public symbol;\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;//总发行\r\n\tuint public sysusermoney;//流通 \r\n\tuint public sysoutmoney;//矿池 \r\n\r\n\tuint public sellPrice; //出售价格 1枚代币换多少以太 /1000\r\n\tuint public buyPrice; //购买价格 多少以太可购买1枚代币 /1000\r\n\tuint public btycbuyPrice; //购买价格 多少btyc可购买1枚代币 /1000\r\n\tuint public btycsellPrice; \r\n\tuint public sysPer; //挖矿的增量百分比 /2%\r\n\tuint public sysPrice1; //挖矿的衡量值300\r\n\tuint public sysPer1; //挖矿的增量百分比 /3.2%\r\n\tuint public systime1;//120\r\n\tuint public sysPrice2; //挖矿的衡量值900\r\n\tuint public sysPer2; //挖矿的增量百分比 /4%\r\n\tuint public systime2;//200\r\n\tuint public transper; //转账手续费 /3%\r\n\t\r\n\tbool public actived;\r\n\tuint public onceAddTime; //挖矿的时间 10 days\r\n\tuint public upper1;//团队奖% \r\n\tuint public upper2;//团队奖% \r\n\tuint public teamper1;//团队奖% \r\n\tuint public teamper2;//团队奖% \r\n\tuint public outper1;//退出锁仓\r\n\tuint public outper2;//退出锁仓\r\n\tuint public sellper;//\r\n\tuint public sysday;\r\n\t//bool public openout;\r\n    uint public sysminteth;\r\n    uint public hasoutmony;\r\n    uint public hasbuymoney;\r\n    uint public hassellmoney;\r\n    uint public hasbuyeth;\r\n    uint public hasselleth;\r\n    uint public hasbtycbuymoney;\r\n    uint public hasbtycsellmoney;\r\n\tmapping(address => uint) balances;//总计\r\n\tmapping(address => uint) myeth;//本金\r\n\tmapping(address => uint) froeth;//冻结\r\n\t//mapping(address => uint) used;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\t/* 冻结账户 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\r\n\t//上家地址\r\n\tmapping(address => address) public fromaddr;\r\n\t//管理员帐号\r\n\tmapping(address => bool) public admins;\r\n\t// 记录各个账户的增量时间\r\n\tmapping(address => uint) public crontime;\r\n\t// 挖矿次数\r\n\tmapping(address => uint) public mintnum;\r\n\tuint[] public permans;\r\n\tmapping(address => uint) public teamget;\r\n\t//mapping(address => uint) public teamallget;\r\n\t//mapping(address => mapping(uint => uint)) public teamdayget;\r\n\t//mapping(address => uint) public teamgettime;\r\n\tstruct sunsdata{\r\n\t    uint n1;\r\n\t    uint n2;\r\n\t    uint getmoney;\r\n\t}\r\n    mapping(address => sunsdata) public suns;\r\n    mapping(address => bool) public intertoken;\r\n    address public btyctoken;\r\n    btycInterface public btycBase = btycInterface(btyctoken);\r\n\t/* 通知 */\r\n\tevent FrozenFunds(address target, bool frozen);\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\r\n\t\tsymbol = \"BTYCEC\";\r\n\t\tname = \"BTYCEC Coin\";\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 43200000 ether;//总发行\r\n\t\tsysusermoney = 21000000 ether;//流通\r\n\t\tsysoutmoney  = 22200000 ether;//矿池\r\n\r\n\t\tsellPrice = 19.545 ether; //出售价格 1btyc can buy how much eth\r\n\t\tbuyPrice = 19.545 ether; //购买价格 1eth can buy how much btyc\r\n\t\tbtycbuyPrice = 0.00001 ether;\r\n\t\tbtycsellPrice = 1 ether;\r\n\t\tsysPrice1 = 300 ether; //挖矿的衡量值\r\n\t\t//sysPrice1 = 3 ether;//test\r\n\t\tsysPer  = 20; //挖矿的增量百分比 /1000\r\n\t\tsysPer1 = 32; //挖矿的增量百分比 /1000\r\n\t\tsysPrice2 = 900 ether; //挖矿的衡量值\r\n\t\t//sysPrice2 = 9 ether; //test\r\n\t\tsysPer2 = 40; //挖矿的增量百分比 /1000\r\n\t\ttransper = 3;//转账手续费 /100\r\n\t\tupper1 = 20;//第1代挖矿分润\r\n\t\tupper2 = 10;//第2代挖矿分润\r\n\t\tteamper1 = 10;//团队奖% /100\r\n\t\tteamper2 = 20;//团队奖% /100\r\n\t\toutper1 = 80;//退出锁仓 /100\r\n\t\toutper2 = 70;//退出锁仓 /100\r\n\t\tsellper = 85;// /100\r\n\t\tactived = true;\r\n\t\tonceAddTime = 10 days; //挖矿的时间 正式\r\n\t\t//onceAddTime = 300 seconds;//test\r\n\t\tsysday = 1 days; \r\n\t\t//sysday = 30 seconds;//test\r\n        systime1 = 13;\r\n        systime2 = 21;\r\n        permans = [40,20,12,6];\r\n        //permans = [8,6,4,2];//test\r\n\t\tbalances[this] = _totalSupply;\r\n\t\temit Transfer(address(0), owner, _totalSupply);\r\n\r\n\t}\r\n\r\n\t/* 获取用户金额 */\r\n\tfunction balanceOf(address user) public view returns(uint balance) {\r\n\t\treturn balances[user];\r\n\t}\r\n\tfunction ethbalance(address user) public view returns(uint balance) {\r\n\t\treturn user.balance;\r\n\t}\r\n\tfunction btycbalanceOf(address user) public view returns(uint balance) {\r\n\t\treturn btycBase.balanceOf(user);\r\n\t}\r\n    function addcrontime(address addr) private{\r\n        if(crontime[addr] < now) {\r\n            crontime[addr] = now + onceAddTime;\r\n        }\r\n        \r\n    }\r\n    function addusertime(address addr) private{\r\n        if(balances[addr] < 2) {\r\n            addcrontime(addr);\r\n        }\r\n    }\r\n\t/*\r\n\t * 获取用户的挖矿时间\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getaddtime(address _addr) public view returns(uint) {\r\n\t\tif(crontime[_addr] < 2) {\r\n\t\t\treturn(0);\r\n\t\t}else{\r\n\t\t    return(crontime[_addr]);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tfunction getmy(address user) public view returns(\r\n\t    uint myblance,\r\n\t    uint mybtyc,\r\n\t    uint meth,\r\n\t    uint myeths,\r\n\t    uint mypro,\r\n\t    uint mytime,\r\n\t    uint bprice,\r\n\t    uint sprice,\r\n\t    uint cprice,\r\n\t    uint tmoney,\r\n\t    uint myall\r\n\t){\r\n\t    myblance = balances[user];//0\r\n\t    mybtyc = btycbalanceOf(user);//1\r\n\t    meth = address(user).balance;//2\r\n\t    myeths = myeth[user];//3\r\n\t    mypro = froeth[user];//4\r\n\t    mytime = crontime[user];//5\r\n\t    bprice = buyPrice;//6\r\n\t    sprice = sellPrice;//7\r\n\t    cprice = btycbuyPrice;//8\r\n\t    tmoney = balances[this];//9\r\n\t    myall = myblance.add(mypro);//10\r\n\t}\r\n\tfunction geteam(address user) public view returns(\r\n\t    uint nn1,//0\r\n\t    uint nn2,//1\r\n\t    uint ms,//2\r\n\t    uint tm,//3\r\n\t    uint mintmoneys,//4\r\n\t    uint usermoneys,//5\r\n\t    uint fromoneys,//6\r\n\t    uint lid,//7\r\n\t    uint tmoney\r\n\t){\r\n\t    nn1 = suns[user].n1;\r\n\t    nn2 = suns[user].n2;\r\n\t    ms = teamget[user];\r\n\t    tm = getaddtime(user);\r\n\t    mintmoneys = sysoutmoney;\r\n\t    usermoneys = sysusermoney;\r\n\t    fromoneys = sysminteth;\r\n\t    if(suns[user].n2 > permans[2] && suns[user].n1 > permans[3]){\r\n\t        lid = 1;\r\n\t    }\r\n\t    if(suns[user].n2 > permans[0] && suns[user].n1 > permans[1]){\r\n\t        lid = 2;\r\n\t    }\r\n\t    tmoney = _totalSupply.sub(balances[this]);//9\r\n\t}\r\n\tfunction getsys() public view returns(\r\n\t    uint tmoney,//0\r\n\t    uint outm,//1\r\n\t    uint um,//2\r\n\t    uint from,//3\r\n\t    uint hasout,//4\r\n\t    uint hasbuy,//5\r\n\t    uint hassell,//6\r\n\t    uint hasbtycbuy,//7\r\n\t    uint hasbtycsell,//8\r\n\t    uint hasbuyeths,//9\r\n\t    uint hasselleths//10\r\n\t){\r\n\t    tmoney = _totalSupply.sub(balances[this]);\r\n\t    outm = sysoutmoney;\r\n\t    um = sysusermoney;\r\n\t    from = sysminteth;\r\n\t    hasout = hasoutmony;\r\n\t    hasbuy = hasbuymoney;\r\n\t    hassell = hassellmoney;\r\n\t    hasbtycbuy = hasbtycbuymoney;\r\n\t    hasbtycsell = hasbtycsellmoney;\r\n\t    hasbuyeths = hasbuyeth;\r\n\t    hasselleths = hasselleth;\r\n\t}\r\n    function _transfer(address from, address to, uint tokens) private returns(bool success) {\r\n        require(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\trequire(actived == true);\r\n\t\tuint addper = tokens*transper/100;\r\n\t\tuint allmoney = tokens + addper;\r\n\t\trequire(balances[from] >= allmoney);\r\n\t\t// 防止转移到0x0， 用burn代替这个功能\r\n        require(to != 0x0);\r\n\t\t//\r\n\t\trequire(from != to);\r\n\t\t//如果用户没有上家\r\n\t\tif(fromaddr[to] == address(0) && fromaddr[from] != to) {\r\n\t\t\t//指定上家地址\r\n\t\t\tfromaddr[to] = from;\r\n\t\t\tsuns[from].n1++;\r\n\t\t\tif(fromaddr[from] != address(0)) {\r\n\t\t\t    suns[fromaddr[from]].n2++;\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\tbalances[from] = balances[from].sub(allmoney);\r\n\t\tif(balances[from] < myeth[from]) {\r\n\t\t    myeth[from] = balances[from];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(addper);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\tmyeth[to] = myeth[to].add(tokens);\r\n\t\taddcrontime(to);\r\n\t\temit Transfer(from, this, addper);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n    }\r\n\t/*\r\n\t * 用户转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transfer(address to, uint tokens) public returns(bool success) {\r\n\t\t_transfer(msg.sender, to, tokens);\r\n\t\tsuccess = true;\r\n\t}\r\n    function intertransfer(address from, address to, uint tokens) public returns(bool success) {\r\n        require(intertoken[msg.sender] == true);\r\n\t\t_transfer(from, to, tokens);\r\n\t\tsuccess = true;\r\n\t}\r\n\t/*\r\n\t * 获取上家地址\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction getfrom(address _addr) public view returns(address) {\r\n\t\treturn(fromaddr[_addr]);\r\n\t}\r\n\r\n\tfunction approve(address spender, uint tokens) public returns(bool success) {\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t * 授权转账\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[from]);\r\n\t\trequire(!frozenAccount[to]);\r\n\t\tbalances[from] = balances[from].sub(tokens);\r\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\t\tbalances[to] = balances[to].add(tokens);\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * 获取授权信息\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction allowance(address tokenOwner, address spender) public view returns(uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\t/*\r\n\t * 授权\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction approveAndCall(address spender, uint tokens, bytes data) public returns(bool success) {\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// 冻结 or 解冻账户\r\n\tfunction freezeAccount(address target, bool freeze) public {\r\n\t\trequire(admins[msg.sender] == true);\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t/*\r\n\t * 设置管理员\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction admAccount(address target, bool freeze) onlyOwner public {\r\n\t\tadmins[target] = freeze;\r\n\t}\r\n\t/*\r\n\t * 系统设置\r\n\t * @param {Object} uint\r\n\t \t\r\n\t */\r\n\tfunction setconf(\r\n    \tuint newonceaddtime, \r\n    \tuint newBuyPrice, \r\n    \tuint newSellPrice, \r\n    \tuint sysPermit,\r\n    \tuint systyPrice1, \r\n    \tuint sysPermit1, \r\n    \tuint systyPrice2, \r\n    \tuint sysPermit2,\r\n    \tuint systime1s,\r\n    \tuint systime2s,\r\n    \tuint transpers,\r\n    \tuint sellpers,\r\n    \tuint outper1s,\r\n    \tuint outper2s\r\n    ) public{\r\n        require(admins[msg.sender] == true);\r\n\t\tonceAddTime = newonceaddtime;\r\n\t\tbuyPrice = newBuyPrice;\r\n\t\tsellPrice = newSellPrice;\r\n\t\tsysPer = sysPermit;\r\n\t\tsysPrice2 = systyPrice2;\r\n\t\tsysPer2 = sysPermit2;\r\n\t\tsysPrice1 = systyPrice1;\r\n\t\tsysPer1 = sysPermit1;\r\n\t\tsystime1 = systime1s + 1;\r\n\t\tsystime2 = systime2s + 1;\r\n\t\ttransper = transpers;\r\n\t\tsellper = sellpers;\r\n\t\toutper1 = outper1s;\r\n\t\toutper2 = outper2s;\r\n\t\t\r\n\t}\r\n\t/*\r\n\t * 获取系统设置\r\n\t */\r\n\tfunction getconf() public view returns(\r\n\t    uint newonceaddtime, \r\n    \tuint newBuyPrice, \r\n    \tuint newSellPrice, \r\n    \tuint sysPermit,\r\n    \tuint systyPrice1, \r\n    \tuint sysPermit1, \r\n    \tuint systyPrice2, \r\n    \tuint sysPermit2,\r\n    \tuint systime1s,\r\n    \tuint systime2s,\r\n    \tuint transpers,\r\n    \tuint sellpers,\r\n    \tuint outper1s,\r\n    \tuint outper2s\r\n\t) {\r\n\t\tnewonceaddtime = onceAddTime;//0\r\n\t\tnewBuyPrice = buyPrice;//1\r\n\t    newSellPrice = \tsellPrice;//2\r\n\t\tsysPermit = sysPer;//3\r\n\t\tsystyPrice1 = sysPrice1;//4\r\n\t\tsysPermit1 = sysPer1;//5\r\n\t\tsystyPrice2 = sysPrice2;//6\r\n\t\tsysPermit2 = sysPer2;//7\r\n\t\tsystime1s = systime1 - 1;//8\r\n\t\tsystime2s = systime2 - 1;//9\r\n\t\ttranspers = transper;//10\r\n\t\tsellpers = sellper;//11\r\n\t\toutper1s = outper1;//12\r\n\t\toutper2s = outper2;//13\r\n\t}\r\n\tfunction setother(\r\n\t    uint upper1s,\r\n    \tuint upper2s,\r\n    \tuint teamper1s,\r\n    \tuint teamper2s,\r\n    \tuint btycbuyPrices,\r\n    \tuint btycsellPrices,\r\n    \tuint t1,\r\n    \tuint t2,\r\n    \tuint t3,\r\n    \tuint t4\r\n\t) public{\r\n\t    require(admins[msg.sender] == true);\r\n\t    upper1 = upper1s;\r\n\t\tupper2 = upper2s;\r\n\t\tteamper1 = teamper1s;\r\n\t\tteamper2 = teamper2s;\r\n\t\tbtycbuyPrice = btycbuyPrices;\r\n\t\tbtycsellPrice = btycsellPrices;\r\n\t\tpermans = [t1,t2,t3,t4];\r\n\t}\r\n\tfunction getother() public view returns(\r\n\t    uint upper1s,\r\n    \tuint upper2s,\r\n    \tuint teamper1s,\r\n    \tuint teamper2s,\r\n    \tuint btycbuyPrices,\r\n    \tuint btycsellPrices,\r\n    \tuint t1,\r\n    \tuint t2,\r\n    \tuint t3,\r\n    \tuint t4\r\n\t){\r\n\t    upper1s = upper1;\r\n\t\tupper2s = upper2;\r\n\t\tteamper1s = teamper1;\r\n\t\tteamper2s = teamper2;\r\n\t\tbtycbuyPrices = btycbuyPrice;\r\n\t\tbtycsellPrices = btycsellPrice;\r\n\t\tt1 = permans[0];\r\n\t\tt2 = permans[1];\r\n\t\tt3 = permans[2];\r\n\t\tt4 = permans[3];\r\n\t}\r\n\t/*\r\n\t * 设置是否开启\r\n\t * @param {Object} bool\r\n\t */\r\n\tfunction setactive(bool tags) public onlyOwner {\r\n\t\tactived = tags;\r\n\t}\r\n\tfunction settoken(address target, bool freeze) onlyOwner public {\r\n\t\tintertoken[target] = freeze;\r\n\t}\r\n\tfunction setbtyctoken(address token) onlyOwner public {\r\n\t    btyctoken = token;\r\n\t    btycBase = btycInterface(token);\r\n\t    settoken(token, true);\r\n\t}\r\n\t/*\r\n\t * 获取总发行\r\n\t */\r\n\tfunction totalSupply() public view returns(uint) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\tfunction addusermoney(address target, uint256 mintedAmount) private{\r\n\t    require(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n        require(balances[this] > mintedAmount);\r\n\t\tbalances[target] = balances[target].add(mintedAmount);\r\n\t\tmyeth[target] = myeth[target].add(mintedAmount);\r\n\t\tbalances[this] = balances[this].sub(mintedAmount);\r\n\t\tsysusermoney = sysusermoney.sub(mintedAmount);\r\n\t\thasoutmony = hasoutmony.add(mintedAmount);\r\n\t\taddcrontime(target);\r\n\t\temit Transfer(this, target, mintedAmount);\r\n\t}\r\n\tfunction subusermoney(address target, uint256 mintedAmount) private{\r\n\t    require(!frozenAccount[target]);\r\n\t\trequire(actived == true);\r\n        require(balances[target] > mintedAmount);\r\n\t\tbalances[target] = balances[target].sub(mintedAmount);\r\n\t\tif(balances[target] < myeth[target]) {\r\n\t\t    myeth[target] = balances[target];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(mintedAmount);\r\n\t\tsysusermoney = sysusermoney.add(mintedAmount);\r\n\t\temit Transfer( target,this, mintedAmount);\r\n\t}\r\n\t/*\r\n\t * 向指定账户拨发资金\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction adduser(address target, uint256 mintedAmount) public{\r\n\t    require(admins[msg.sender] == true);\r\n\t\taddusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction subuser(address target, uint256 mintedAmount) public{\r\n\t    require(admins[msg.sender] == true);\r\n\t\tsubusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction interadduser(address target, uint256 mintedAmount) public{\r\n\t    require(intertoken[msg.sender] == true);\r\n\t\taddusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction intersubuser(address target, uint256 mintedAmount) public{\r\n\t    require(intertoken[msg.sender] == true);\r\n\t\tsubusermoney(target, mintedAmount);\r\n\t}\r\n\tfunction mintadd() public{\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(balances[user] >= sysPrice1);\r\n\t\tfroeth[user] = froeth[user].add(balances[user]);\r\n\t\tsysminteth = sysminteth.add(balances[user]);\r\n\t\t//balances[user] = balances[user].sub(balances[user]);\r\n\t\temit Transfer(user, this, balances[user]);\r\n\t\tbalances[user] = 1;\r\n\t\tmyeth[user] = 1;\r\n\t\tif(froeth[user] >= sysPrice2) {\r\n\t\t    mintnum[user] = systime2;\r\n\t\t}else{\r\n\t\t    mintnum[user] = systime1;\r\n\t\t}\r\n\t\tcrontime[user] = now + onceAddTime;\r\n\t\t\r\n\t}\r\n\tfunction mintsub() public{\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(mintnum[user] > 1);\r\n\t\trequire(froeth[user] >= sysPrice1);\r\n\t\tuint getamount = froeth[user]*outper1/100;\r\n\t\tif(froeth[user] >= sysPrice2) {\r\n\t\t    getamount = froeth[user]*outper2/100;\r\n\t\t}\r\n\t\tuint addthis = froeth[user].sub(getamount);\r\n\t\tbalances[this] = balances[this].add(addthis);\r\n\t\temit Transfer(user, this, addthis);\r\n\t\tsysminteth = sysminteth.sub(froeth[user]);\r\n\t\tfroeth[user] = 1;\r\n\t\tmintnum[user] = 1;\r\n\t\tbalances[user] = balances[user].add(getamount);\r\n\t\tmyeth[user] = myeth[user].add(getamount);\r\n\t\temit Transfer(this, user, getamount);\r\n\t\t\r\n\t}\r\n\tfunction setteam(address user, uint amount) private returns(bool) {\r\n\t    if(suns[user].n2 >= permans[2] && suns[user].n1 >= permans[3]){\r\n\t        teamget[user] = teamget[user].add(amount);\r\n\t        uint chkmoney = sysPrice1;\r\n\t        uint sendmoney = teamget[user]*teamper1/100;\r\n\t        if(suns[user].n2 >= permans[0] && suns[user].n1 >= permans[1]){\r\n\t            chkmoney = sysPrice2;\r\n\t            sendmoney = teamget[user]*teamper2/100;\r\n\t        }\r\n\t        if(teamget[user] >= chkmoney) {\r\n\t            suns[user].getmoney = suns[user].getmoney.add(sendmoney);\r\n\t            balances[user] = balances[user].add(sendmoney);\r\n\t            teamget[user] = 1;\r\n\t            balances[this] = balances[this].sub(sendmoney);\r\n\t\t        sysoutmoney = sysoutmoney.sub(sendmoney);\r\n\t\t        sysusermoney = sysusermoney.add(sendmoney);\r\n\t\t        emit Transfer(this, user, sendmoney);\r\n\t        }\r\n\t        return(true);\r\n\t    }\r\n\t}\r\n\t/*\r\n\t * 用户每隔10天挖矿一次\r\n\t */\r\n\tfunction mint() public {\r\n\t    address user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(actived == true);\r\n\t\trequire(crontime[user] > 1);\r\n\t\trequire(now > crontime[user]);\r\n\t\tuint amount;\r\n\t\tuint usmoney;\r\n\t\tuint mintmoney;\r\n\t\t//require(balances[user] >= sysPrice1);\r\n\t\tif(myeth[user] > 1) {\r\n\t\t    usmoney = myeth[user] * sysPer / 1000;\r\n\t\t    //amount = amount.add(myeth[user] * sysPer / 1000);\r\n\t\t}\r\n\t\tif(froeth[user] >= sysPrice1 && mintnum[user] > 1) {\r\n\t\t    mintmoney = froeth[user] * sysPer1 / 1000;\r\n\t\t    if(froeth[user] >= sysPrice2) {\r\n    \t\t    mintmoney = froeth[user] * sysPer2 / 1000;\r\n    \t\t}\r\n\t\t}\r\n\t\tamount = usmoney.add(mintmoney);\r\n\t\trequire(balances[this] > amount);\r\n\t\trequire(sysoutmoney > amount);\r\n\t\tbalances[user] = balances[user].add(amount);\r\n\t\tbalances[this] = balances[this].sub(amount);\r\n\t\tsysoutmoney = sysoutmoney.sub(amount);\r\n\t\tsysusermoney = sysusermoney.add(amount);\r\n\t\tcrontime[user] = now + onceAddTime;\r\n\t\t\r\n\t\tif(usmoney > 0) {\r\n\t\t    emit Transfer(this, user, usmoney);\r\n\t\t}\r\n\t\tif(mintmoney > 0) {\r\n\t\t    emit Transfer(this, user, mintmoney);\r\n\t\t    mintnum[user]--;\r\n\t\t    if(mintnum[user] < 2) {\r\n\t\t        balances[user] = balances[user].add(froeth[user]);\r\n\t\t        myeth[user] = myeth[user].add(froeth[user]);\r\n\t\t        sysminteth = sysminteth.sub(froeth[user]);\r\n\t\t        emit Transfer(this, user, froeth[user]);\r\n\t\t        froeth[user] = 1; \r\n\t\t    }\r\n\t\t}\r\n\t\taddress top1 = fromaddr[user];\r\n\t\tif(top1 != address(0) && top1 != user) {\r\n\t\t    uint upmoney1 = amount*upper1/100;\r\n\t\t    balances[top1] = balances[top1].add(upmoney1);\r\n\t\t    balances[this] = balances[this].sub(upmoney1);\r\n\t\t    sysoutmoney = sysoutmoney.sub(upmoney1);\r\n\t\t    sysusermoney = sysusermoney.add(upmoney1);\r\n\t\t    emit Transfer(this, top1, upmoney1);\r\n\t\t    setteam(top1, upmoney1);\r\n\t\t    address top2 = fromaddr[top1];\r\n\t\t    if(top2 != address(0) && top2 != user) {\r\n    \t\t    uint upmoney2 = amount*upper2/100;\r\n    \t\t    balances[top2] = balances[top2].add(upmoney2);\r\n    \t\t    balances[this] = balances[this].sub(upmoney2);\r\n    \t\t    sysoutmoney = sysoutmoney.sub(upmoney2);\r\n    \t\t    sysusermoney = sysusermoney.add(upmoney2);\r\n    \t\t    emit Transfer(this, top2, upmoney2);\r\n    \t\t    setteam(top2, upmoney2);\r\n    \t\t}\r\n\t\t}\r\n\t\t//emit Transfer(this, user, amount);\r\n\t\t\r\n\r\n\t}\r\n\t/*\r\n\t * 获取总账目\r\n\t */\r\n\tfunction getall() public view returns(uint256 money) {\r\n\t\tmoney = address(this).balance;\r\n\t}\r\n\tfunction gettoday() public view returns(uint d) {\r\n\t    d = now - now%sysday;\r\n\t}\r\n\t/*\r\n\t * 购买\r\n\t */\r\n\tfunction buy() public payable returns(uint) {\r\n\t\trequire(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(msg.value > 0);\r\n\t\tuint amount = (msg.value * buyPrice)/1 ether;\r\n\t\trequire(balances[this] > amount);\r\n\t\tbalances[user] = balances[user].add(amount);\r\n\t\tmyeth[user] = myeth[user].add(amount);\r\n\t\tbalances[this] = balances[this].sub(amount);\r\n\t\tsysusermoney = sysusermoney.sub(amount);\r\n\t\thasbuymoney = hasbuymoney.add(amount);\r\n\t\thasbuyeth = hasbuyeth.add(msg.value);\r\n\t\taddcrontime(user);\r\n\t\temit Transfer(this, user, amount);\r\n\t\treturn(amount);\r\n\t}\r\n\tfunction btycbuy(uint money) public returns(uint) {\r\n\t    require(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t    uint hasbtyc = btycBase.getcanuse(user);\r\n\t    require(hasbtyc >= money);\r\n\t    uint amount = (money*btycbuyPrice)/1 ether;\r\n\t    btycBase.intersubtoken(user, money);\r\n\t    require(balances[this] > amount);\r\n\t\tbalances[user] = balances[user].add(amount);\r\n\t\tmyeth[user] = myeth[user].add(amount);\r\n\t\tbalances[this] = balances[this].sub(amount);\r\n\t\tsysusermoney = sysusermoney.sub(amount);\r\n\t\thasbtycbuymoney = hasbtycbuymoney.add(amount);\r\n\t\taddcrontime(user);\r\n\t\temit Transfer(this, user, amount);\r\n\t}\r\n\t/*\r\n\t * 系统充值\r\n\t */\r\n\tfunction charge() public payable returns(bool) {\r\n\t\t//require(actived == true);\r\n\t\treturn(true);\r\n\t}\r\n\t\r\n\tfunction() payable public {\r\n\t\tbuy();\r\n\t}\r\n\t/*\r\n\t * 系统提现\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction withdraw(address _to, uint money) public onlyOwner {\r\n\t\trequire(actived == true);\r\n\t\trequire(!frozenAccount[_to]);\r\n\t\trequire(address(this).balance > money);\r\n\t\trequire(money > 0);\r\n\t\t_to.transfer(money);\r\n\t}\r\n\t/*\r\n\t * 出售\r\n\t * @param {Object} uint256\r\n\t */\r\n\tfunction sell(uint256 amount) public returns(bool success) {\r\n\t\trequire(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(amount > 0);\r\n\t\trequire(balances[user] >= amount);\r\n\t\t//uint moneys = (amount * sellPrice) / 10 ** uint(decimals);\r\n\t\tuint moneys = (amount * sellper * 10 finney)/sellPrice;\r\n\t\t//uint moneys = (amount * sellPrice * sellper)/100 ether;\r\n\t\trequire(address(this).balance > moneys);\r\n\t\tuser.transfer(moneys);\r\n\t\tbalances[user] = balances[user].sub(amount);\r\n\t\tif(balances[user] < myeth[user]) {\r\n\t\t    myeth[user] = balances[user];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(amount);\r\n        sysusermoney = sysusermoney.add(amount);\r\n        hassellmoney = hassellmoney.add(amount);\r\n        hasselleth = hasselleth.add(moneys);\r\n\t\temit Transfer(user, this, amount);\r\n\t\treturn(true);\r\n\t}\r\n\tfunction btycsell(uint amount) public returns(bool success) {\r\n\t    require(actived == true);\r\n\t\taddress user = msg.sender;\r\n\t\trequire(!frozenAccount[user]);\r\n\t\trequire(amount > 0);\r\n\t\trequire(balances[user] >= amount);\r\n\t\tuint moneys = (amount * 1 ether)/btycsellPrice;\r\n\t\tbtycBase.interaddtoken(user, moneys, 0);\r\n\t\tbalances[user] = balances[user].sub(amount);\r\n\t\tif(balances[user] < myeth[user]) {\r\n\t\t    myeth[user] = balances[user];\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(amount);\r\n        sysusermoney = sysusermoney.add(amount);\r\n        hasbtycsellmoney = hasbtycsellmoney.add(amount);\r\n\t\temit Transfer(user, this, amount);\r\n\t\treturn(true);\r\n\t\r\n\t}\r\n\t/*\r\n\t * 批量发币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction addBalances(address[] recipients, uint256[] moenys) public onlyOwner{\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].add(moenys[i]);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t\taddusertime(recipients[i]);\r\n\t\t\temit Transfer(this, recipients[i], moenys[i]);\r\n\t\t}\r\n\t\tbalances[this] = balances[this].sub(sum);\r\n\t\tsysusermoney = sysusermoney.sub(sum);\r\n\t}\r\n\t/*\r\n\t * 批量减币\r\n\t * @param {Object} address\r\n\t */\r\n\tfunction subBalances(address[] recipients, uint256[] moenys) public onlyOwner{\r\n\t\tuint256 sum = 0;\r\n\t\tfor(uint256 i = 0; i < recipients.length; i++) {\r\n\t\t\tbalances[recipients[i]] = balances[recipients[i]].sub(moenys[i]);\r\n\t\t\tsum = sum.add(moenys[i]);\r\n\t\t\temit Transfer(recipients[i], this, moenys[i]);\r\n\t\t}\r\n\t\tbalances[this] = balances[this].add(sum);\r\n\t\tsysusermoney = sysusermoney.add(sum);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycBase\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceAddTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycsellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"btycbalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hassellmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getaddtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"adduser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gettoday\",\"outputs\":[{\"name\":\"d\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getother\",\"outputs\":[{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"btycbuyPrices\",\"type\":\"uint256\"},{\"name\":\"btycsellPrices\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"upper1s\",\"type\":\"uint256\"},{\"name\":\"upper2s\",\"type\":\"uint256\"},{\"name\":\"teamper1s\",\"type\":\"uint256\"},{\"name\":\"teamper2s\",\"type\":\"uint256\"},{\"name\":\"btycbuyPrices\",\"type\":\"uint256\"},{\"name\":\"btycsellPrices\",\"type\":\"uint256\"},{\"name\":\"t1\",\"type\":\"uint256\"},{\"name\":\"t2\",\"type\":\"uint256\"},{\"name\":\"t3\",\"type\":\"uint256\"},{\"name\":\"t4\",\"type\":\"uint256\"}],\"name\":\"setother\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysminteth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getconf\",\"outputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"subBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuyeth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getmy\",\"outputs\":[{\"name\":\"myblance\",\"type\":\"uint256\"},{\"name\":\"mybtyc\",\"type\":\"uint256\"},{\"name\":\"meth\",\"type\":\"uint256\"},{\"name\":\"myeths\",\"type\":\"uint256\"},{\"name\":\"mypro\",\"type\":\"uint256\"},{\"name\":\"mytime\",\"type\":\"uint256\"},{\"name\":\"bprice\",\"type\":\"uint256\"},{\"name\":\"sprice\",\"type\":\"uint256\"},{\"name\":\"cprice\",\"type\":\"uint256\"},{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"myall\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"charge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasselleth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permans\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ethbalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btycbuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"intersubuser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"interadduser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"btycsell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getall\",\"outputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbtycbuymoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"crontime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"geteam\",\"outputs\":[{\"name\":\"nn1\",\"type\":\"uint256\"},{\"name\":\"nn2\",\"type\":\"uint256\"},{\"name\":\"ms\",\"type\":\"uint256\"},{\"name\":\"tm\",\"type\":\"uint256\"},{\"name\":\"mintmoneys\",\"type\":\"uint256\"},{\"name\":\"usermoneys\",\"type\":\"uint256\"},{\"name\":\"fromoneys\",\"type\":\"uint256\"},{\"name\":\"lid\",\"type\":\"uint256\"},{\"name\":\"tmoney\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"intertransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btyctoken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newonceaddtime\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"},{\"name\":\"systyPrice1\",\"type\":\"uint256\"},{\"name\":\"sysPermit1\",\"type\":\"uint256\"},{\"name\":\"systyPrice2\",\"type\":\"uint256\"},{\"name\":\"sysPermit2\",\"type\":\"uint256\"},{\"name\":\"systime1s\",\"type\":\"uint256\"},{\"name\":\"systime2s\",\"type\":\"uint256\"},{\"name\":\"transpers\",\"type\":\"uint256\"},{\"name\":\"sellpers\",\"type\":\"uint256\"},{\"name\":\"outper1s\",\"type\":\"uint256\"},{\"name\":\"outper2s\",\"type\":\"uint256\"}],\"name\":\"setconf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamper1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintsub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbuymoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintnum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"intertoken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"suns\",\"outputs\":[{\"name\":\"n1\",\"type\":\"uint256\"},{\"name\":\"n2\",\"type\":\"uint256\"},{\"name\":\"getmoney\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systime2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"admAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysoutmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"subuser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysusermoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"moenys\",\"type\":\"uint256[]\"}],\"name\":\"addBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getsys\",\"outputs\":[{\"name\":\"tmoney\",\"type\":\"uint256\"},{\"name\":\"outm\",\"type\":\"uint256\"},{\"name\":\"um\",\"type\":\"uint256\"},{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"hasout\",\"type\":\"uint256\"},{\"name\":\"hasbuy\",\"type\":\"uint256\"},{\"name\":\"hassell\",\"type\":\"uint256\"},{\"name\":\"hasbtycbuy\",\"type\":\"uint256\"},{\"name\":\"hasbtycsell\",\"type\":\"uint256\"},{\"name\":\"hasbuyeths\",\"type\":\"uint256\"},{\"name\":\"hasselleths\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getfrom\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setbtyctoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasbtycsellmoney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tags\",\"type\":\"bool\"}],\"name\":\"setactive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"btycbuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasoutmony\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"settoken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BTYCEC","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8480eacf53897808a8dcc1b61ecf83a41447263db9b97ddfd10354a8fccf8d4c"}]}