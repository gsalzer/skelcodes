{"status":"1","message":"OK","result":[{"SourceCode":"// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/Unwraper.sol\npragma solidity >=0.5.0 <0.6.0;\n\n////// src/interfaces/IERC20.sol\n/* pragma solidity >=0.5.0 <0.6.0; */\n\ninterface IERC20 {\n    function transfer(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n}\n////// src/interfaces/IWrappedEther.sol\n/* pragma solidity >=0.5.0 <0.6.0; */\n\n/* import \"./IERC20.sol\"; */\n\ncontract IWrappedEther is IERC20 {\n    function deposit() external payable;\n    function withdraw(uint amount) external;\n}\n////// src/Unwraper.sol\n/* pragma solidity >=0.5.0 <0.6.0; */\n\n/* import \"./interfaces/IWrappedEther.sol\"; */\n\ncontract Unwraper {\n    IWrappedEther constant weth = IWrappedEther(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n\n    function unwrapAll() public {\n        uint256 amount = weth.balanceOf(address(this));\n        weth.withdraw(amount);\n        msg.sender.transfer(amount);\n    }\n}\n","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"unwrapAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Unwraper","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4a6d556672d08057fb606d9802002ef7368ccb5d2b56a9e398077c4d8722e04f"}]}