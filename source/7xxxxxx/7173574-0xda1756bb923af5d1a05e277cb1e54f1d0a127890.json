{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * ENS Resolver interface.\r\n */\r\ncontract ENSResolver {\r\n    function addr(bytes32 _node) public view returns (address);\r\n    function setAddr(bytes32 _node, address _addr) public;\r\n    function name(bytes32 _node) public view returns (string);\r\n    function setName(bytes32 _node, string _name) public;\r\n}\r\n\r\n/**\r\n * @title Owned\r\n * @dev Basic contract to define an owner.\r\n * @author Julien Niset - <julien@argent.xyz>\r\n */\r\ncontract Owned {\r\n\r\n    // The owner\r\n    address public owner;\r\n\r\n    event OwnerChanged(address indexed _newOwner);\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Must be owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Lets the owner transfer ownership of the contract to a new owner.\r\n     * @param _newOwner The new owner.\r\n     */\r\n    function changeOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \"Address must not be null\");\r\n        owner = _newOwner;\r\n        emit OwnerChanged(_newOwner);\r\n    }\r\n}\r\n\r\n/**\r\n * @title Managed\r\n * @dev Basic contract that defines a set of managers. Only the owner can add/remove managers.\r\n * @author Julien Niset - <julien@argent.xyz>\r\n */\r\ncontract Managed is Owned {\r\n\r\n    // The managers\r\n    mapping (address => bool) public managers;\r\n\r\n    /**\r\n     * @dev Throws if the sender is not a manager.\r\n     */\r\n    modifier onlyManager {\r\n        require(managers[msg.sender] == true, \"M: Must be manager\");\r\n        _;\r\n    }\r\n\r\n    event ManagerAdded(address indexed _manager);\r\n    event ManagerRevoked(address indexed _manager);\r\n\r\n    /**\r\n    * @dev Adds a manager. \r\n    * @param _manager The address of the manager.\r\n    */\r\n    function addManager(address _manager) external onlyOwner {\r\n        require(_manager != address(0), \"M: Address must not be null\");\r\n        if(managers[_manager] == false) {\r\n            managers[_manager] = true;\r\n            emit ManagerAdded(_manager);\r\n        }        \r\n    }\r\n\r\n    /**\r\n    * @dev Revokes a manager.\r\n    * @param _manager The address of the manager.\r\n    */\r\n    function revokeManager(address _manager) external onlyOwner {\r\n        require(managers[_manager] == true, \"M: Target must be an existing manager\");\r\n        delete managers[_manager];\r\n        emit ManagerRevoked(_manager);\r\n    }\r\n}\r\n\r\n/**\r\n * @title ArgentENSResolver\r\n * @dev Basic implementation of a Resolver.\r\n * The contract defines a manager role who is the only role that can add a new name\r\n * to the list of resolved names. \r\n * @author Julien Niset - <julien@argent.xyz>\r\n */\r\ncontract ArgentENSResolver is Owned, Managed, ENSResolver {\r\n\r\n    bytes4 constant SUPPORT_INTERFACE_ID = 0x01ffc9a7;\r\n    bytes4 constant ADDR_INTERFACE_ID = 0x3b3b57de;\r\n    bytes4 constant NAME_INTERFACE_ID = 0x691f3431;\r\n\r\n    // mapping between namehash and resolved records\r\n    mapping (bytes32 => Record) records;\r\n\r\n    struct Record {\r\n        address addr;\r\n        string name;\r\n    }\r\n\r\n    // *************** Events *************************** //\r\n\r\n    event AddrChanged(bytes32 indexed _node, address _addr);\r\n    event NameChanged(bytes32 indexed _node, string _name);\r\n\r\n    // *************** Public Functions ********************* //\r\n\r\n    /**\r\n     * @dev Lets the manager set the address associated with an ENS node.\r\n     * @param _node The node to update.\r\n     * @param _addr The address to set.\r\n     */\r\n    function setAddr(bytes32 _node, address _addr) public onlyManager {\r\n        records[_node].addr = _addr;\r\n        emit AddrChanged(_node, _addr);\r\n    }\r\n\r\n    /**\r\n     * @dev Lets the manager set the name associated with an ENS node.\r\n     * @param _node The node to update.\r\n     * @param _name The name to set.\r\n     */\r\n    function setName(bytes32 _node, string _name) public onlyManager {\r\n        records[_node].name = _name;\r\n        emit NameChanged(_node, _name);\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the address associated to an ENS node.\r\n     * @param _node The target node.\r\n     * @return the address of the target node.\r\n     */\r\n    function addr(bytes32 _node) public view returns (address) {\r\n        return records[_node].addr;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the name associated to an ENS node.\r\n     * @param _node The target ENS node.\r\n     * @return the name of the target ENS node.\r\n     */\r\n    function name(bytes32 _node) public view returns (string) {\r\n        return records[_node].name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the resolver implements the interface specified by the provided hash.\r\n     * @param _interfaceID The ID of the interface to check for.\r\n     * @return True if the contract implements the requested interface.\r\n     */\r\n    function supportsInterface(bytes4 _interfaceID) public view returns (bool) {\r\n        return _interfaceID == SUPPORT_INTERFACE_ID || _interfaceID == ADDR_INTERFACE_ID || _interfaceID == NAME_INTERFACE_ID;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"revokeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_node\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_node\",\"type\":\"bytes32\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_node\",\"type\":\"bytes32\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"ManagerRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"ArgentENSResolver","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"999","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://af391273c38bb4ef40b6706df8fac61f86a6aa3bc3af790db51e527594c1768f"}]}