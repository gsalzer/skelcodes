{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.00;\r\n\r\nlibrary Strings {\r\n  // via https://github.com/oraclize/ethereum-api/blob/master/oraclizeAPI_0.5.sol MIT licence\r\n  \r\n  function Concatenate(string memory a, string memory b) public pure returns (string memory concatenatedString) {\r\n    bytes memory bytesA = bytes(a);\r\n    bytes memory bytesB = bytes(b);\r\n    string memory concatenatedAB = new string(bytesA.length + bytesB.length);\r\n    bytes memory bytesAB = bytes(concatenatedAB);\r\n    uint concatendatedIndex = 0;\r\n    uint index = 0;\r\n    for (index = 0; index < bytesA.length; index++) {\r\n      bytesAB[concatendatedIndex++] = bytesA[index];\r\n    }\r\n    for (index = 0; index < bytesB.length; index++) {\r\n      bytesAB[concatendatedIndex++] = bytesB[index];\r\n    }\r\n      \r\n    return string(bytesAB);\r\n  }\r\n\r\n  function UintToString(uint value) public pure returns (string memory uintAsString) {\r\n    uint tempValue = value;\r\n    \r\n    if (tempValue == 0) {\r\n      return \"0\";\r\n    }\r\n    uint j = tempValue;\r\n    uint length;\r\n    while (j != 0) {\r\n      length++;\r\n      j /= 10;\r\n    }\r\n    bytes memory byteString = new bytes(length);\r\n    uint index = length - 1;\r\n    while (tempValue != 0) {\r\n      byteString[index--] = byte(uint8(48 + tempValue % 10));\r\n      tempValue /= 10;\r\n    }\r\n    return string(byteString);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UintToString\",\"outputs\":[{\"name\":\"uintAsString\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"string\"},{\"name\":\"b\",\"type\":\"string\"}],\"name\":\"Concatenate\",\"outputs\":[{\"name\":\"concatenatedString\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"Strings","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f89a43e42b64cfe36aed35c5f21054fa000cb0e14a153e3c3d930b22f9078de1"}]}