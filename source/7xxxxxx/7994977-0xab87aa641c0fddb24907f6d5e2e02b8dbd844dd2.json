{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.8;\r\n\r\ninterface RouterInterface {\r\n    function getPrototype() external view returns(address);\r\n    function updateVersion(address _newPrototype) external returns(bool);\r\n}\r\n\r\ncontract Resolver {\r\n    address internal constant PLACEHOLDER = 0x72C27736aEc97394fb499ed069772F53C5ef47b4;\r\n\r\n    function () external payable {\r\n        address prototype = RouterInterface(PLACEHOLDER).getPrototype();\r\n        assembly {\r\n            let calldatastart := 0\r\n            calldatacopy(calldatastart, 0, calldatasize)\r\n            let res := delegatecall(gas, prototype, calldatastart, calldatasize, 0, 0)\r\n            let returndatastart := 0\r\n            returndatacopy(returndatastart, 0, returndatasize)\r\n            switch res case 0 { revert(returndatastart, returndatasize) }\r\n                default { return(returndatastart, returndatasize) }\r\n        }\r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Resolver","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://73714d636b2310c96673f8eed4e4f1ce5de274d7b4c6d1064910ac7b19985d2b"}]}