{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\n\r\n/**\r\n * @title Partial ERC-20 token interface\r\n */\r\ncontract Token {\r\n  function balanceOf (address) public view returns (uint);\r\n}\r\n\r\n/**\r\n * @title An Ether or token balance scanner\r\n * @author Maarten Zuidhoorn\r\n */\r\ncontract BalanceScanner {\r\n  /**\r\n   * @notice Get the Ether balance for all addresses specified\r\n   * @param addresses The addresses to get the Ether balance for\r\n   * @return The Ether balance for all addresses in the same order as specified\r\n   */\r\n  function etherBalances(address[] calldata addresses) external view returns (uint[] memory balances) {\r\n    balances = new uint[](addresses.length);\r\n\r\n    for (uint i = 0; i < addresses.length; i++) {\r\n      balances[i] = addresses[i].balance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @notice Get the ERC-20 token balance of `token` for all addresses specified\r\n   * @dev This does not check if the `token` address specified is actually an ERC-20 token\r\n   * @param addresses The addresses to get the token balance for\r\n   * @param token The address of the ERC-20 token contract\r\n   * @return The token balance for all addresses in the same order as specified\r\n   */\r\n  function tokenBalances(address[] calldata addresses, address token) external view returns (uint[] memory balances) {\r\n    balances = new uint[](addresses.length);\r\n    Token tokenContract = Token(token);\r\n\r\n    for (uint i = 0; i < addresses.length; i++) {\r\n      balances[i] = tokenContract.balanceOf(addresses[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @notice This contract does not accept ETH payments.\r\n   */\r\n  function() external payable {\r\n    revert();\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"name\":\"balances\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"etherBalances\",\"outputs\":[{\"name\":\"balances\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BalanceScanner","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d81589e50b9f122ad35002394b532972be7906e2897f630acf49c77712c88eed"}]}