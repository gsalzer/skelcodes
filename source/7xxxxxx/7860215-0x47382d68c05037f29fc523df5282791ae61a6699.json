{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\n\r\nlibrary ArrayUtil {\r\nfunction IndexOf(uint[] storage values, uint value) internal returns(uint) {\r\n    uint i = 0;\r\n    while (values[i] != value) {\r\n      i++;\r\n    }\r\n    return i;\r\n  }\r\n\r\n  function RemoveByValue(uint[] storage values, uint value) internal {\r\n    uint i = IndexOf(values, value);\r\n    RemoveByIndex(values, i);\r\n  }\r\n\r\n  function RemoveByIndex(uint[] storage values, uint i) internal {\r\n    while (i<values.length-1) {\r\n      values[i] = values[i+1];\r\n      i++;\r\n    }\r\n    values.length--;\r\n  }\r\n}\r\n\r\ncontract UbexContract {\r\n    address public owner = msg.sender;\r\n    modifier onlyBy(address _account)\r\n    {\r\n        require(\r\n            msg.sender == _account,\r\n            \"Sender not authorized.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    struct RequestsIndex {\r\n        address addr;\r\n        bool isEntity;\r\n        uint256 amount;\r\n        bytes32 hash;\r\n    }\r\n\t\r\n\tevent requestAdded(\r\n        uint indexed _id,\r\n        address _addr,\r\n        uint _amount\r\n    );\r\n\t\r\n\tevent requestUpdated(\r\n\t\tuint indexed _id,\r\n        address indexed _addr,\r\n        bytes32 _hash\r\n    );\r\n\t\r\n    // Requests ids\r\n    mapping(uint256 => RequestsIndex) public requestsIDsIndex;\r\n\r\n    // Queue of open requests\r\n    uint[] queue;\r\n\r\n    function addRequest(uint id, address addr, uint256 amount) public onlyBy(owner) returns (bool success) {\r\n\t\tif (isEntity(id)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tqueue.push(id);\r\n\r\n\t\trequestsIDsIndex[id] = RequestsIndex({\r\n\t\t\taddr: addr,\r\n\t\t\tamount: amount,\r\n\t\t\thash: 0,\r\n\t\t\tisEntity: true\r\n\t\t});\r\n\t\temit requestAdded(id, addr, amount);\r\n        return true;\r\n    }\r\n\r\n    function getQueueSize() public view returns (uint size) {\r\n        return queue.length;\r\n    }\r\n\r\n    function getAddrById(uint _id) public view returns (address _addr){\r\n        return requestsIDsIndex[_id].addr;\r\n    }\r\n\r\n    function getRequestById(uint256 _id) public view returns(address addr, uint256 amount, bytes32 hash) {\r\n        RequestsIndex memory a = requestsIDsIndex[_id];\r\n        return (a.addr, a.amount, a.hash);\r\n    }\r\n\r\n    function isEntity(uint _id) public view returns (bool isIndeed) {\r\n        return requestsIDsIndex[_id].isEntity;\r\n    }\r\n    \r\n    function closeRequest(uint _id, bytes32 _hash) public onlyBy(owner) {\r\n        requestsIDsIndex[_id].hash = _hash;\r\n        ArrayUtil.RemoveByValue(queue, _id);\r\n\t\temit requestUpdated(_id, requestsIDsIndex[_id].addr, _hash);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestsIDsIndex\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"isEntity\",\"type\":\"bool\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getAddrById\",\"outputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRequestById\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"closeRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRequest\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQueueSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isEntity\",\"outputs\":[{\"name\":\"isIndeed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"requestUpdated\",\"type\":\"event\"}]","ContractName":"UbexContract","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9c6ca3107bd52592c0796aa482f5d199653a97b97acc20cdbb628c4682c56e3f"}]}