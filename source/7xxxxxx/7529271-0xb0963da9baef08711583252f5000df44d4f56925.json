{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n/*\r\n    Copyright 2018, SECRET 56\r\n\r\n    License:\r\n    https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode\r\n*/\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn\\'t hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function abs128(int128 a) internal pure returns (int128) {\r\n    return a < 0 ? a * -1 : a;\r\n  }\r\n}\r\n\r\n// Provides basic authorization control, having an owner address\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() internal {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n// Defines only the typical transfer function of ERC20 tokens\r\ncontract Token {\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function balanceOf(address who) public view returns (uint256);\r\n}\r\n\r\n// Can deposit and withdraw ETH and ERC20 tokens\r\ncontract Reclaimable is Ownable {\r\n\r\n    // Allows payments in the constructor too\r\n    constructor() public payable {\r\n    }\r\n\r\n    // Allows payments to this contract\r\n    function() public payable {\r\n    }\r\n\r\n    // Withdraw ether from this contract\r\n    function reclaimEther() external onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    // Withdraws any token with transfer function (ERC20 like)\r\n    function reclaimToken(address _token) public onlyOwner {\r\n        Token token = Token(_token);\r\n\r\n        uint256 balance = token.balanceOf(this);\r\n        token.transfer(owner, balance);\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n//                                                          //\r\n//                      Storage                             //\r\n//                                                          //\r\n//////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\ncontract Storage is Ownable, Reclaimable {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 maxGasPrice = 4000000000;\r\n    uint256 public gasrequest = 250000;\r\n\r\n    uint256[] public time;\r\n    int256[] public amount;\r\n    address[] public investorsAddresses;\r\n\r\n    int256 public aum; \r\n    uint256 public decimals = 8;\r\n    mapping(uint256 => bool) public timeExists;\r\n    mapping (address => bool) public resellers;\r\n    mapping (address => bool) public investors;\r\n    mapping (address => mapping (address => bool)) resinv;\r\n\r\n    mapping(address => uint256) public ntx;\r\n    mapping(address => uint256) public rtx;\r\n\r\n    mapping ( address => mapping (uint256 => btcTransaction)) public fundTx;\r\n    mapping ( address => mapping (uint256 => btcTransactionRequest)) public reqWD;\r\n\r\n    uint256 public btcPrice;\r\n    uint256 public fee1;\r\n    uint256 public fee2;\r\n    uint256 public fee3;\r\n\r\n    // fund deposit address mapping and length\r\n    uint256 public fundDepositAddressesLength;\r\n    mapping (uint256 => string) public fundDepositAddresses;\r\n\r\n\r\n    uint256 public feeAddressesLength;\r\n    mapping (uint256 => string) public feeAddresses;\r\n\r\n    // This can be a deposit or a withdraw transaction\r\n    struct btcTransaction {\r\n        string txId;\r\n        string pubKey;\r\n        string signature;\r\n        // Action here is 0 for deposit and 1 for withdraw\r\n        uint256 action;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    // This is only a request of a transaction\r\n \r\n    struct btcTransactionRequest {\r\n        string txId;\r\n        string pubKey;\r\n        string signature;\r\n        uint256 action; // Is action needed here???\r\n        uint256 timestamp;\r\n        string referal;\r\n    }\r\n\r\n\tconstructor () public {\r\n\r\n\t}\r\n    /** SET FUND BTC ADDRESS */\r\n\r\n    function setfundDepositAddress(string bitcoinAddress) public onlyOwner {\r\n        // Add bitcoin address to index and increment index\r\n        fundDepositAddresses[fundDepositAddressesLength++] = bitcoinAddress;\r\n    }\r\n\r\n    function setFeeAddress(string bitcoinAddress) public onlyOwner {\r\n        // Add bitcoin address to index and increment index\r\n        feeAddresses[feeAddressesLength++] = bitcoinAddress;\r\n    }\r\n\r\n    /** DEPOSITS */\r\n\r\n    function setRequestGas (uint256 _gasrequest) public onlyOwner{\r\n        gasrequest = _gasrequest;\r\n    }\r\n\r\n    function setAum(int256 _aum) public onlyOwner{\r\n        aum = _aum;\r\n    }\r\n\r\n\r\n    function depositAdmin(address addr,string txid, string pubkey, string signature) public onlyOwner{\r\n        setInvestor(addr, true);\r\n        addTX (addr,txid, pubkey, signature, 0); \r\n    \r\n        uint256 gasPrice = tx.gasprice;\r\n        uint256 repayal = gasPrice.mul(gasrequest);\r\n        addr.transfer(repayal);\r\n    }\r\n\r\n    /** WITHDRAWS */\r\n\r\n    // FIXME: bad naming, request with T\r\n    function requesWithdraw(address addr,string txid, string pubkey, string signature, string referal) public {\r\n        require(investors[msg.sender]==true);\r\n\r\n        uint256 i =  rtx[addr];\r\n        reqWD[addr][i].txId=txid;\r\n        reqWD[addr][i].pubKey=pubkey;\r\n        reqWD[addr][i].signature=signature;\r\n        reqWD[addr][i].action=1;\r\n        reqWD[addr][i].timestamp = block.timestamp;\r\n        reqWD[addr][i].referal = referal;\r\n        ++rtx[addr];\r\n    }\r\n\r\n    function returnInvestment(address addr,string txid, string pubkey, string signature) public onlyOwner {\r\n        // FIXME: Should check if its not returned already!!\r\n        addTX (addr,txid, pubkey, signature, 1);\r\n    }\r\n\r\n    /** INVESTORS */\r\n\r\n    function setInvestor(address _addr, bool _allowed) public onlyOwner {\r\n        investors[_addr] = _allowed;\r\n        if(_allowed != false){\r\n            uint256 hasTransactions= ntx[_addr];\r\n            if(hasTransactions == 0){\r\n                investorsAddresses.push(_addr);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAllInvestors() public view returns (address[]){\r\n        return investorsAddresses;\r\n    }\r\n\r\n    /** RESELLER FUNCTIONALITY? */\r\n\r\n    function setReseller(address _addr, bool _allowed) public onlyOwner {\r\n        resellers[_addr] = _allowed;\r\n    }\r\n\r\n    function setResellerInvestor(address _res, address _inv, bool _allowed) public onlyOwner {\r\n        resinv[_res][_inv] = _allowed;\r\n    }\r\n\r\n    /** UTILITIES */\r\n\r\n    // Adds a new tx even if it exists already\r\n    function addTX (address addr,string txid, string pubkey, string signature, uint256 action) internal {\r\n        uint256 i =  ntx[addr];\r\n        fundTx[addr][i].txId = txid;\r\n        fundTx[addr][i].pubKey = pubkey;\r\n        fundTx[addr][i].signature = signature;\r\n        fundTx[addr][i].action = action;\r\n        fundTx[addr][i].timestamp = block.timestamp;\r\n        ++ntx[addr];\r\n    }\r\n\r\n    function getTx (address addr, uint256 i) public view returns (string,string,string,uint256, uint256) {\r\n        return (fundTx[addr][i].txId,fundTx[addr][i].pubKey,fundTx[addr][i].signature,fundTx[addr][i].action, fundTx[addr][i].timestamp);\r\n    }\r\n\r\n    function setData(uint256 t, int256 a) public onlyOwner{\r\n        require(timeExists[t] != true);\r\n        time.push(t);\r\n        amount.push(a);\r\n        timeExists[t] = true;\r\n    }\r\n\r\n    function setDataBlock(int256 a) public onlyOwner{\r\n        require(timeExists[block.timestamp] != true);\r\n        time.push(block.timestamp);\r\n        amount.push(a);\r\n        timeExists[block.timestamp] = true;\r\n    }\r\n\r\n    function getAll() public view returns(uint256[] t, int256[] a){\r\n        return (time, amount);\r\n    }\r\n\r\n    function setBtcPrice(uint256 _price) public onlyOwner {\r\n        btcPrice = _price;\r\n    }\r\n\r\n    \r\n    function setFee(uint256 _fee1,uint256 _fee2,uint256 _fee3) public onlyOwner {\r\n        fee1 = _fee1;\r\n        fee2 = _fee2;\r\n        fee3 = _fee3;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"gasrequest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasrequest\",\"type\":\"uint256\"}],\"name\":\"setRequestGas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundTx\",\"outputs\":[{\"name\":\"txId\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"},{\"name\":\"action\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aum\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"txid\",\"type\":\"string\"},{\"name\":\"pubkey\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"depositAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bitcoinAddress\",\"type\":\"string\"}],\"name\":\"setfundDepositAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_res\",\"type\":\"address\"},{\"name\":\"_inv\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setResellerInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAll\",\"outputs\":[{\"name\":\"t\",\"type\":\"uint256[]\"},{\"name\":\"a\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundDepositAddressesLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee1\",\"type\":\"uint256\"},{\"name\":\"_fee2\",\"type\":\"uint256\"},{\"name\":\"_fee3\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getTx\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBtcPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"txid\",\"type\":\"string\"},{\"name\":\"pubkey\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"},{\"name\":\"referal\",\"type\":\"string\"}],\"name\":\"requesWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"rtx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeAddressesLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amount\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqWD\",\"outputs\":[{\"name\":\"txId\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"},{\"name\":\"action\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"referal\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aum\",\"type\":\"int256\"}],\"name\":\"setAum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timeExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btcPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setReseller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundDepositAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"txid\",\"type\":\"string\"},{\"name\":\"pubkey\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"returnInvestment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bitcoinAddress\",\"type\":\"string\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"int256\"}],\"name\":\"setDataBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"t\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"int256\"}],\"name\":\"setData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"resellers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ntx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investorsAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Storage","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://2480cf9a940d9779dc21477fa64195a46056fa9caeaeb1e66697e992588403c8"}]}