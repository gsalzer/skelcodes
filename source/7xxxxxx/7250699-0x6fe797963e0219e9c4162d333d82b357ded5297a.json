{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.25;\r\n\r\nlibrary AddressUtils {\r\n\r\n\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint256 size;\r\n    // XXX Currently there is no better way to check if there is a contract in an address\r\n    // than to check the size of the code at that address.\r\n    // See https://ethereum.stackexchange.com/a/14016/36603\r\n    // for more details about how this works.\r\n    // TODO Check this again before the Serenity release, because all addresses will be\r\n    // contracts then.\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly { size := extcodesize(addr) }\r\n    return size > 0;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Interface {\r\n    function allowance(address _from, address _to) public view returns(uint);\r\n    function transferFrom(address _from, address _to, uint _sum) public;\r\n    function transfer(address _to, uint _sum) public;\r\n    function balanceOf(address _owner) public view returns(uint);\r\n}\r\n\r\ncontract WalletInterface {\r\n    function getTransaction(uint _id) public view returns(address, uint, address, uint, uint, bool);\r\n}\r\n\r\ncontract ContractCreator {\r\n    function setContract() public returns(address);\r\n}\r\n\r\ncontract MaxiCreditCompany {\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint _sum);\r\n    event TokenBoughtFromContract(address indexed _buyer, uint indexed _promoter, uint _sum);\r\n    event TokenBoughtFromSeller(address indexed _buyer, address _seller, uint _amount, uint indexed _offerId);\r\n    event Approval(address indexed _seller, address indexed _buyer, uint _amount);\r\n    event DescriptionChange(bytes32 _txt);\r\n    event NewServer(address indexed _serverAddress, uint indexed _id);\r\n    event ServerChanged(address indexed _newServerAddress, address indexed _oldServerAddress, uint indexed _id);\r\n    event ETHWithdraw(address indexed _to, uint _sum);\r\n    event ERC20Withdraw(address indexed _erc20Address, address indexed _to, uint _sum);\r\n    event SupplyIncreased(uint _amount, uint _totalSupply);\r\n    event NewSaleOffer(uint indexed saleOffersCounter, uint indexed _amount, uint indexed _unitPrice);\r\n    event SetToBuyBack(uint _amount, uint _price);\r\n    event BuyBack(uint indexed _amount, uint indexed buyBackPrice);\r\n    event SetOwner(uint indexed _id, address indexed _newOwner);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event OwnerDeleted(uint indexed _id, address indexed _owner);\r\n    event OperatorRightChanged(address indexed _operator, uint _txRight);\r\n    event NewOperator(uint indexed _id, address indexed _newOperator, uint _txRight);\r\n    event OperatorChanged(uint indexed _id, address indexed _newOperator, address indexed oldOperator, uint _txRight);\r\n    event DeleteOperator(uint indexed _id, address indexed _operator);\r\n    event OwnerChangedPrice(uint _priceETH, uint _priceUSD);\r\n    event ServerChangedPrice(uint _priceETH, uint _priceUSD);\r\n    event NewContract(address indexed _addr, uint indexed newContractsLength);\r\n    \r\n    using AddressUtils for address;\r\n    string public name = \"MaxiCreditCompanyShare\";\r\n    string public symbol = \"MC2\";\r\n    uint public supply = 80000000;\r\n    uint public decimals = 0;\r\n    bytes32 public description;\r\n    \r\n    uint public unitPriceETH; \r\n    uint public unitPriceUSD;\r\n    uint public shareHoldersNumber;\r\n    mapping (address => uint) shareHolderId;\r\n    address[] public shareHolders;\r\n    bool shareHolderDelete;\r\n    address[10] public contractOwner;\r\n    address[10] public operator;\r\n    uint public ownerCounter;\r\n    \r\n    mapping(address => bool) public isOwner;\r\n    mapping(address => bool) public isOperator;\r\n    mapping(address => uint) public operatorsRights;\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(uint => uint)) public saleOffersByAddress;\r\n    mapping(uint => address) public saleOffersById;\r\n    mapping(uint => uint) public saleOffersAmount;\r\n    mapping(uint => uint) public saleOffersUnitPrice;\r\n    mapping(address => uint) public sellersOfferCounter;\r\n    uint public saleOffersCounter = 0;\r\n    \r\n    uint public buyBackAmount = 0;\r\n    uint public buyBackPrice = 0;\r\n    \r\n    mapping(address => mapping(address => uint)) public approvedTransfers;\r\n    \r\n    address[] serverAddress;\r\n    mapping (address => bool) isOurServer;\r\n    uint serverAddressArrayLength;\r\n    \r\n    ContractCreator cc;\r\n    address newContract;\r\n    address[] public newContracts;\r\n    uint public newContractsLength;\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner[msg.sender] == true);\r\n        require(msg.sender != address(0));\r\n        _;\r\n    }  \r\n    \r\n    modifier onlyOperator() {\r\n        require(isOperator[msg.sender] == true);\r\n        require(msg.sender != address(0));\r\n        _;\r\n    }\r\n    \r\n    modifier onlyServer() {\r\n        require(isOurServer[msg.sender] == true);\r\n        require(msg.sender != address(0));\r\n        _;\r\n    }\r\n    \r\n    constructor (uint _initPriceETH, uint _initPriceUSD) public {\r\n       contractOwner[0] = msg.sender;\r\n       isOwner[msg.sender] = true;\r\n       operator[0] = msg.sender;\r\n       isOperator[msg.sender] = true;\r\n       operatorsRights[msg.sender] = 100;\r\n       balanceOf[address(this)] = supply;\r\n       unitPriceETH = _initPriceETH;\r\n       unitPriceUSD = _initPriceUSD;\r\n       shareHoldersNumber = 0;\r\n       shareHolderDelete = false;\r\n       ownerCounter = 1;\r\n    }\r\n    \r\n    function getContractOwner(uint _id) public view returns(address) {\r\n        return(contractOwner[_id]);\r\n    }\r\n    \r\n    function setDescription(bytes32 _txt) public onlyOwner {\r\n        description = _txt;\r\n        emit DescriptionChange(_txt);\r\n    }\r\n    \r\n    function setServerAddress(address _serverAddress) public onlyOwner {\r\n        serverAddressArrayLength = serverAddress.push(_serverAddress);\r\n        isOurServer[_serverAddress] = true;\r\n        emit NewServer(_serverAddress, serverAddressArrayLength - 1);\r\n    }\r\n    \r\n    function modifyServer(uint _id, address _serverAddress) public onlyOwner {\r\n        address oldServer = serverAddress[_id];\r\n        isOurServer[serverAddress[_id]] = false;\r\n        serverAddress[_id] = _serverAddress;\r\n        isOurServer[_serverAddress] = true;\r\n        emit ServerChanged(_serverAddress, oldServer, _id);\r\n    }\r\n    \r\n    function getServerAddressLength() public view onlyOperator returns(uint) {\r\n        return serverAddressArrayLength;\r\n    }\r\n    \r\n    function getServerAddress(uint _num) public view onlyOperator returns(address) {\r\n        return serverAddress[_num];\r\n    }\r\n    \r\n    function checkServerAddress(address _addr) public view onlyOperator returns(bool) {\r\n        return(isOurServer[_addr]);\r\n    }\r\n    \r\n    function withdrawal(uint _sum, address _to) public onlyOperator {\r\n        require(operatorsRights[msg.sender] * address(this).balance / 100 >= _sum);\r\n        require(address(this).balance >= _sum);\r\n        require(_to != address(0) && _sum > 0);\r\n        address(_to).transfer(_sum);\r\n        emit ETHWithdraw(_to, _sum);\r\n    }\r\n    \r\n    function withdrawERC20(address _erc20Address, address _to, uint _amount) public onlyOperator {\r\n        ERC20Interface ei = ERC20Interface(_erc20Address);\r\n        require(operatorsRights[msg.sender] * ei.balanceOf(this) / 100 >= _amount);\r\n        require(_erc20Address != address(0) && _to != address(0));\r\n        ei.transfer(_to, _amount);\r\n        emit ERC20Withdraw(_erc20Address, _to, _amount);\r\n    }\r\n    /*\r\n    */\r\n    function totalSupply() public view returns(uint) {\r\n        return(supply);\r\n    }\r\n    \r\n    function increaseSupply(uint _amount) public onlyOwner {\r\n        supply += _amount;\r\n        balanceOf[this] += _amount;\r\n        emit SupplyIncreased(_amount, supply);\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _sum) private {\r\n        require(_from != address(0));\r\n        require(_to != address(0));\r\n        require(_from != _to);\r\n        require(_sum > 0);\r\n        require(balanceOf[_from] >= _sum);\r\n        require(balanceOf[_to] + _sum >= _sum);\r\n        if(balanceOf[_to] == 0) {\r\n            shareHolderId[_to] = shareHoldersNumber;\r\n            if(shareHolderDelete) {\r\n                shareHolders[shareHoldersNumber] = _to;\r\n                shareHolderDelete = false;\r\n            } else {\r\n                shareHolders.push(_to);    \r\n            }\r\n            shareHoldersNumber ++;\r\n        }\r\n        uint sumBalanceBeforeTx = balanceOf[_from] + balanceOf[_to]; \r\n        balanceOf[_from] -= _sum;\r\n        balanceOf[_to] += _sum;\r\n        if(balanceOf[_from] == 0) {\r\n            shareHoldersNumber --;\r\n            shareHolders[shareHolderId[_from]] = shareHolders[shareHoldersNumber];\r\n            shareHolderId[shareHolders[shareHoldersNumber]] = shareHolderId[_from];\r\n            delete shareHolders[shareHoldersNumber];\r\n            shareHolderDelete = true;\r\n        }\r\n        assert(sumBalanceBeforeTx == balanceOf[_from] + balanceOf[_to]);\r\n        emit Transfer(_from, _to, _sum);\r\n    }\r\n    \r\n    function transfer(address _to, uint _sum) external returns(bool) {\r\n        _transfer(msg.sender, _to, _sum);\r\n        return(true);\r\n    }\r\n    \r\n    function transferFromContractsBalance(address _to, uint _sum) public onlyOwner {\r\n        require(_to != address(0));\r\n        require(this != _to);\r\n        require(_sum > 0);\r\n        require(balanceOf[this] >= _sum);\r\n        require(balanceOf[_to] + _sum >= _sum);\r\n        if(balanceOf[_to] == 0) {\r\n            shareHolderId[_to] = shareHoldersNumber;\r\n            if(shareHolderDelete) {\r\n                shareHolders[shareHoldersNumber] = _to;\r\n                shareHolderDelete = false;\r\n            } else {\r\n                shareHolders.push(_to);    \r\n            }   \r\n            shareHoldersNumber ++;\r\n        }\r\n        uint sumBalanceBeforeTx = balanceOf[this] + balanceOf[_to]; \r\n        balanceOf[this] -= _sum;\r\n        balanceOf[_to] += _sum;\r\n        assert(sumBalanceBeforeTx == balanceOf[this] + balanceOf[_to]);\r\n        emit Transfer(this, _to, _sum);\r\n    }\r\n\r\n    function setToSale(uint _amount, uint _unitPrice) public {\r\n        require(balanceOf[msg.sender] >= _amount);\r\n        require(_unitPrice > 0);\r\n        saleOffersByAddress[msg.sender][sellersOfferCounter[msg.sender]] = saleOffersCounter;\r\n        saleOffersById[saleOffersCounter] = msg.sender;\r\n        saleOffersAmount[saleOffersCounter] = _amount;\r\n        saleOffersUnitPrice[saleOffersCounter] = _unitPrice;\r\n        emit NewSaleOffer(saleOffersCounter, _amount, _unitPrice);\r\n        sellersOfferCounter[msg.sender] ++;\r\n        saleOffersCounter ++;\r\n    }\r\n    \r\n    function getSaleOffer(uint _id) public view returns(address, uint, uint) {\r\n        return(saleOffersById[_id], saleOffersAmount[_id], saleOffersUnitPrice[_id]);\r\n    }\r\n    \r\n    function buyFromSeller(uint _amount, uint _offerId) public payable {\r\n        require(saleOffersAmount[_offerId] >= _amount);\r\n        uint orderPrice = _amount * saleOffersUnitPrice[_offerId];\r\n        require(msg.value == orderPrice);\r\n        saleOffersAmount[_offerId] -= _amount;\r\n        _transfer(saleOffersById[_offerId], msg.sender, _amount);\r\n        uint sellersShare = orderPrice * 99 / 100;\r\n        uint toSend = sellersShare;\r\n        sellersShare = 0;\r\n        saleOffersById[_offerId].transfer(toSend);\r\n        emit TokenBoughtFromSeller(msg.sender, saleOffersById[_offerId], _amount, _offerId);\r\n    }\r\n    \r\n    function setBuyBack(uint _amount, uint _price) public onlyOperator {\r\n        buyBackAmount += _amount;\r\n        buyBackPrice = _price;\r\n        emit SetToBuyBack(_amount, _price);\r\n    }\r\n\r\n    function buyback(uint _amount) public {\r\n        require(buyBackAmount >= _amount);\r\n        buyBackAmount -= _amount;\r\n        _transfer(msg.sender, this, _amount);\r\n        msg.sender.transfer(_amount * buyBackPrice); \r\n        emit BuyBack(_amount, buyBackPrice);\r\n    }\r\n    \r\n    function getETH(uint _amount) public payable {\r\n        require(msg.value == _amount);\r\n        //event?\r\n    }\r\n    \r\n    //should be different function for set and modify owner and operator\r\n    function setContractOwner(uint _id, address _newOwner) public onlyOwner {\r\n        require(contractOwner[_id] == address(0) && !isOwner[_newOwner]);\r\n        contractOwner[_id] = _newOwner;\r\n        isOwner[_newOwner] = true;\r\n        ownerCounter++;\r\n        emit SetOwner(_id, _newOwner);\r\n    }\r\n    \r\n    function modifyContractOwner(uint _id, address _newOwner) public onlyOwner {\r\n        require(contractOwner[_id] != address(0) && contractOwner[_id] != _newOwner);\r\n        address previousOwner = contractOwner[_id];\r\n        isOwner[contractOwner[_id]] = false;\r\n        contractOwner[_id] = _newOwner;\r\n        isOwner[_newOwner] = true;\r\n        emit OwnershipTransferred(previousOwner, _newOwner);\r\n    }\r\n    \r\n    function deleteOwner(uint _id, address _addr) public onlyOwner {\r\n        require(ownerCounter > 1);\r\n        require(isOwner[_addr] && contractOwner[_id] == _addr);\r\n        isOwner[_addr] = false;\r\n        contractOwner[_id] = address(0);\r\n        ownerCounter--;\r\n        emit OwnerDeleted(_id, _addr);\r\n    }\r\n    \r\n    function setOperatorsRight(address _operator, uint _txRight) public onlyOwner {\r\n        require(_txRight <= 100 && isOperator[_operator]);\r\n        operatorsRights[_operator] = _txRight;\r\n        emit OperatorRightChanged(_operator, _txRight);\r\n    }\r\n    \r\n    function setOperator(uint _id, address _newOperator, uint _txRight) public onlyOwner {\r\n        require(_txRight <= 100 && operator[_id] == address(0) && !isOperator[_newOperator]);\r\n        operator[_id] = _newOperator;\r\n        operatorsRights[_newOperator] = _txRight;\r\n        isOperator[_newOperator] = true;\r\n        emit NewOperator(_id, _newOperator, _txRight);\r\n    }\r\n    \r\n    function modifyOperator(uint _id, address _newOperator, uint _txRight) public onlyOwner {\r\n        require(operator[_id] != address(0) && operator[_id] != _newOperator && _txRight < 100);\r\n        address oldOperator = operator[_id];\r\n        isOperator[operator[_id]] = false;\r\n        operatorsRights[operator[_id]] = 0;\r\n        isOperator[_newOperator] = true;\r\n        operator[_id] = _newOperator;\r\n        operatorsRights[_newOperator] = _txRight;\r\n        emit OperatorChanged(_id, _newOperator, oldOperator, _txRight);\r\n    }\r\n    \r\n    function deleteOperator(uint _id, address _operator) public onlyOwner {\r\n        require(isOperator[_operator] && operator[_id] == _operator);\r\n        isOperator[_operator] = false;\r\n        operatorsRights[_operator] = 0;\r\n        operator[_id] = address(0);\r\n        emit DeleteOperator(_id, _operator);\r\n    }\r\n\r\n    function getShareNumber(address _addr) public view returns(uint) {\r\n        return(balanceOf[_addr]);\r\n    }\r\n\r\n    function approve(address _to, uint _sum) public {\r\n        approvedTransfers[msg.sender][_to] += _sum;\r\n        emit Approval(msg.sender, _to, _sum);\r\n    }\r\n    \r\n    function allowance(address _from, address _to) public view returns(uint) {\r\n        return (approvedTransfers[_from][_to]);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _sum) public { \r\n        require(approvedTransfers[_from][msg.sender] >= _sum);\r\n        approvedTransfers[_from][msg.sender] -= _sum;\r\n        _transfer(_from, _to, _sum); \r\n    }\r\n\r\n    function changePriceByOwner(uint _priceETH, uint _priceUSD) public onlyOwner {\r\n        require(_priceETH > 0 && _priceUSD > 0);\r\n        unitPriceETH = _priceETH;\r\n        unitPriceUSD = _priceUSD;\r\n        emit OwnerChangedPrice(_priceETH, _priceUSD);\r\n    }\r\n    \r\n    function changePriceByServer(uint _priceETH, uint _priceUSD) public onlyServer {\r\n        require(_priceETH > 0 && _priceUSD > 0);\r\n        unitPriceETH = _priceETH;\r\n        unitPriceUSD = _priceUSD;\r\n        emit ServerChangedPrice(_priceETH, _priceUSD);\r\n    }\r\n    \r\n    function checkIsShareHolder() public view returns(bool){\r\n        if(balanceOf[msg.sender] > 0) {\r\n            return(true);\r\n        } else {\r\n            return(false);\r\n        }\r\n    } \r\n    \r\n    function getShareHolderRegister() public view returns(address[] memory) {\r\n        return(shareHolders);\r\n    }\r\n    \r\n    function setNewContract(address _addr) public onlyOperator {\r\n        cc = ContractCreator(_addr);\r\n        newContract = cc.setContract();\r\n        newContracts.push(newContract);\r\n        newContractsLength ++;\r\n        emit NewContract(_addr, newContractsLength);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOperator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"modifyOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sum\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"deleteOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOperator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyBackAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellersOfferCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_erc20Address\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_serverAddress\",\"type\":\"address\"}],\"name\":\"setServerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBuyBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkIsShareHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"changePriceByServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"setOperatorsRight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitPriceETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transferFromContractsBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"checkServerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersUnitPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleOffersCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"setToSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shareHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorsRights\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitPriceUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_txt\",\"type\":\"bytes32\"}],\"name\":\"setDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"changePriceByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"getServerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getShareHolderRegister\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"deleteOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedTransfers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"buyFromSeller\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"shareHoldersNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getShareNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"modifyContractOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setNewContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setContractOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSaleOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_serverAddress\",\"type\":\"address\"}],\"name\":\"modifyServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleOffersById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyBackPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServerAddressLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initPriceETH\",\"type\":\"uint256\"},{\"name\":\"_initPriceUSD\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_promoter\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"TokenBoughtFromContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"TokenBoughtFromSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_txt\",\"type\":\"bytes32\"}],\"name\":\"DescriptionChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_serverAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"NewServer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newServerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_oldServerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ServerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"ETHWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_erc20Address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sum\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"SupplyIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"saleOffersCounter\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"NewSaleOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SetToBuyBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buyBackPrice\",\"type\":\"uint256\"}],\"name\":\"BuyBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"OwnerDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"OperatorRightChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_newOperator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_txRight\",\"type\":\"uint256\"}],\"name\":\"OperatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"DeleteOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"OwnerChangedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_priceETH\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_priceUSD\",\"type\":\"uint256\"}],\"name\":\"ServerChangedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newContractsLength\",\"type\":\"uint256\"}],\"name\":\"NewContract\",\"type\":\"event\"}]","ContractName":"MaxiCreditCompany","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000003fc179899f700000000000000000000000000000000000000000000000000000000000000001","Library":"","SwarmSource":"bzzr://f2586ed58540650d4390c6c0fbb314f89d904f814d65bb4d7ea5cf2ff4a9ee91"}]}