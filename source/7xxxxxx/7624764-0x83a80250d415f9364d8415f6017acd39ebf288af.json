{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract IOwnable {\r\n\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerChanged(address _oldOwner, address _newOwner);\r\n\r\n    function changeOwner(address _newOwner) public;\r\n    function acceptOwnership() public;\r\n}\r\n\r\ncontract Ownable is IOwnable {\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnerChanged(address(0), owner);\r\n    }\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerChanged(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract ITap is IOwnable {\r\n\r\n    uint8[12] public tapPercents = [2, 2, 3, 11, 11, 17, 11, 11, 8, 8, 8, 8];\r\n    uint8 public nextTapNum;\r\n    uint8 public nextTapPercent = tapPercents[nextTapNum];\r\n    uint public nextTapDate;\r\n    uint public remainsForTap;\r\n    uint public baseEther;\r\n\r\n    function init(uint _baseEther, uint _startDate) public;\r\n    function changeNextTap(uint8 _newPercent) public;\r\n    function getNext() public returns (uint);\r\n    function subRemainsForTap(uint _delta) public;\r\n}\r\n\r\ncontract Tap is ITap, Ownable {\r\n\r\n    function init(uint _baseEther, uint _startDate) public onlyOwner {\r\n        require(baseEther == 0);\r\n        baseEther = _baseEther;\r\n        remainsForTap = _baseEther;\r\n        nextTapDate = _startDate;\r\n    }\r\n\r\n    function changeNextTap(uint8 _newPercent) public onlyOwner {\r\n        require(_newPercent <= 100);\r\n        nextTapPercent = _newPercent;\r\n    }\r\n\r\n    function getNext() public onlyOwner returns (uint) {\r\n        require(nextTapNum < 12);\r\n        require(remainsForTap > 0);\r\n        require(now >= nextTapDate);\r\n        uint tapValue;\r\n        if (nextTapNum == 11) {\r\n            tapValue = remainsForTap;\r\n        } else {\r\n            tapValue = uint(nextTapPercent) * baseEther / 100;\r\n            if (tapValue > remainsForTap) {\r\n                tapValue = remainsForTap;\r\n                nextTapNum = 11;\r\n            }\r\n        }\r\n        remainsForTap -= tapValue;\r\n        nextTapNum += 1;\r\n        if (nextTapNum < 12) {\r\n            nextTapPercent = tapPercents[nextTapNum];\r\n            nextTapDate += 30 days;\r\n        }\r\n        return tapValue;\r\n    }\r\n\r\n    function subRemainsForTap(uint _delta) public onlyOwner {\r\n        require(_delta <= remainsForTap);\r\n        remainsForTap -= _delta;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"baseEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainsForTap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextTapDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tapPercents\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextTapPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPercent\",\"type\":\"uint8\"}],\"name\":\"changeNextTap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextTapNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_baseEther\",\"type\":\"uint256\"},{\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_delta\",\"type\":\"uint256\"}],\"name\":\"subRemainsForTap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getNext\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"Tap","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://27e4ce05433ec8caeb13573c7c338a8bf79eb70997974bd7d6826a76dffce02c"}]}