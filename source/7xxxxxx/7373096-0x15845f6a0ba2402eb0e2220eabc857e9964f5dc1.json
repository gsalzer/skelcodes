{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.0 <0.6.0;\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract TokenVesting {\r\n    event Released(uint256 amount);\r\n    event Revoked();\r\n    event AddPartner(address _partner);\r\n    event RevokeVoting(bool _revokecable);\r\n    \r\n    address public beneficiary;\r\n    uint256 public times;\r\n    uint256 public releaseStart;\r\n    uint256 public interval;\r\n    \r\n    address public owner;\r\n\r\n    mapping (address => uint256) public released;\r\n    mapping (address => uint256) public revoked;\r\n\r\n    struct RevokeVote{\r\n        address partner;\r\n        bool vote;\r\n    }\r\n\r\n    mapping (address => RevokeVote) partnerRevokeVote;\r\n    \r\n    uint256 public partnerCount = 0;\r\n    uint256 public voteAgreeCount = 0;\r\n    \r\n    constructor(address _beneficiary,  uint256 _times, uint256 _releaseStart, uint256 _interval, address[5] memory _partners) public {\r\n        require(_beneficiary != address(0));\r\n        require(_releaseStart > now);\r\n        require(_times > 0);\r\n        require(_interval > 0);\r\n        \r\n        beneficiary = _beneficiary;\r\n        times = _times;\r\n        releaseStart = _releaseStart;\r\n        interval = _interval;\r\n        \r\n        owner = msg.sender;\r\n        \r\n        for(uint i=0;i<_partners.length;i++){\r\n            addPartner(_partners[i]);\r\n        }\r\n    }\r\n\r\n    function addPartner(address _partner) private {\r\n        require(_partner != address(0));\r\n        if(partnerRevokeVote[_partner].partner != _partner){\r\n            partnerRevokeVote[_partner] = RevokeVote({\r\n                partner : _partner,\r\n                vote : false\r\n            });\r\n            partnerCount++;\r\n        }\r\n        // emit AddPartner(_partner);\r\n    }\r\n\r\n    function revokeVoting(bool _revokecable) public {\r\n        require(isPartners(msg.sender));\r\n        bool revokeVoted = partnerRevokeVote[msg.sender].vote;\r\n        if(revokeVoted != _revokecable){\r\n            if(_revokecable){\r\n                voteAgreeCount++;\r\n            } else {\r\n                voteAgreeCount--;\r\n            }\r\n            partnerRevokeVote[msg.sender].vote = _revokecable;\r\n        }\r\n        emit RevokeVoting(_revokecable);\r\n    }\r\n\r\n    function isPartners(address _voter) private view returns(bool){\r\n        if(partnerRevokeVote[_voter].partner == _voter){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isRevocable() public view returns(bool) {\r\n        if(voteAgreeCount >= (partnerCount/2)+1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function release(ERC20Basic _token) public {\r\n        require(msg.sender == owner || isPartners(msg.sender));\r\n        uint256 _unreleased = releasableAmount(_token);\r\n        require(_unreleased > 0);\r\n        released[address(_token)] = released[address(_token)] + _unreleased;\r\n        _token.transfer(beneficiary, _unreleased);\r\n        emit Released(_unreleased);\r\n    }\r\n\r\n    function revoke(ERC20Basic _token) public {\r\n        require(msg.sender == owner || isPartners(msg.sender));\r\n        require(isRevocable());\r\n        uint256 _balance = _token.balanceOf(address(this));\r\n        revoked[address(_token)] = revoked[address(_token)] + _balance;\r\n        _token.transfer(beneficiary, _balance);\r\n        emit Revoked();\r\n    }\r\n\r\n    function releasableAmount(ERC20Basic _token) public view returns (uint256) {\r\n        uint256 _currentBalance = _token.balanceOf(address(this));\r\n        uint256 _totalBalance = _currentBalance + released[address(_token)];\r\n        uint256 _revoked = revoked[address(_token)];\r\n\r\n        if (now < releaseStart) {\r\n            return 0;\r\n        } else if ((now >= releaseStart + interval * (times-1)) || _revoked > 0) {\r\n            return _currentBalance;\r\n        } else {\r\n            uint256 _count = _totalBalance / times;\r\n            uint256 _currentTimes = (((now - releaseStart) / interval) + 1);\r\n            uint256 _vestedAmount =  _currentTimes * _count;\r\n            return _vestedAmount - released[address(_token)];\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"voteAgreeCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"releasableAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRevocable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_revokecable\",\"type\":\"bool\"}],\"name\":\"revokeVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"times\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partnerCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"revoked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_times\",\"type\":\"uint256\"},{\"name\":\"_releaseStart\",\"type\":\"uint256\"},{\"name\":\"_interval\",\"type\":\"uint256\"},{\"name\":\"_partners\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_partner\",\"type\":\"address\"}],\"name\":\"AddPartner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_revokecable\",\"type\":\"bool\"}],\"name\":\"RevokeVoting\",\"type\":\"event\"}]","ContractName":"TokenVesting","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a1107f828551231bccf9cb05ccfea1f00d5e2f2f0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000005c8b85b0000000000000000000000000000000000000000000000000000000000000012c00000000000000000000000071e43e62b5bc9d779a9dcd67c6bfbcbdd9ed31e700000000000000000000000040114800e507817a9ca3ce3a2ec6c35bebb3c2140000000000000000000000003d8b1a0fc169e47abda6edbd2f3c3e1e7438fd0a000000000000000000000000a1107f828551231bccf9cb05ccfea1f00d5e2f2f00000000000000000000000049e4cccb70d1e4474e9e935fb663935809f301fe","Library":"","SwarmSource":"bzzr://7bc968938c841f29bd5ec0b6d5041d491f4db242e5148adf6a21bf5985fb1681"}]}