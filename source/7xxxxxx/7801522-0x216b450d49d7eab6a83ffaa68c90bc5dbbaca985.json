{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n\r\n    \r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract SALIToken is ERC20Interface{\r\n    string public name = \"SALI Sample\";\r\n    string public symbol = \"SLI\";\r\n    uint public decimals = 0;\r\n    \r\n    uint public supply;\r\n    address public founder;\r\n    \r\n    mapping(address => uint) public balances;\r\n    \r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    //allowed[0x1111....][0x22222...] = 100;\r\n    \r\n    \r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n\r\n    constructor() public{\r\n        supply = 100000000;\r\n        founder = msg.sender;\r\n        balances[founder] = supply;\r\n    }\r\n    // ALLOWANCE()\r\n    function allowance(address tokenOwner, address spender) view public returns(uint){\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    //APPROVE ()\r\n        function approve(address spender, uint tokens) public returns(bool){\r\n        require(balances[msg.sender] >= tokens);\r\n        require(tokens > 0);\r\n        \r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    //TRANSFERFROM()\r\n    //transfer tokens from the  owner account to the account that calls the function\r\n    function transferFrom(address from, address to, uint tokens) public returns(bool){\r\n        require(allowed[from][to] >= tokens);\r\n        require(balances[from] >= tokens);\r\n        \r\n        balances[from] -= tokens;\r\n        balances[to] += tokens;\r\n        \r\n        \r\n        allowed[from][to] -= tokens;\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint){\r\n        return supply;\r\n    }\r\n    \r\n    function balanceOf(address tokenOwner) public view returns (uint balance){\r\n         return balances[tokenOwner];\r\n     }\r\n     //TRANSFER()\r\n    function transfer(address to, uint tokens) public returns (bool success){\r\n         require(balances[msg.sender] >= tokens && tokens > 0);\r\n         \r\n         balances[to] += tokens;\r\n         balances[msg.sender] -= tokens;\r\n         emit Transfer(msg.sender, to, tokens);\r\n         return true;\r\n     }\r\n}\r\n\r\ncontract SaliICO is SALIToken{\r\n    address public admin;\r\n    \r\n    \r\n    address payable public deposit;\r\n    \r\n    //token price in wei: 1SALI = 0.004 ETHER, 1 ETHER = 250 SALI\r\n    uint tokenPrice = 4000000000000000;\r\n    \r\n    //3000 Ether in wei as HARDCAP\r\n    uint public hardCap = 3000000000000000000000;\r\n    \r\n    uint public raisedAmount;\r\n    \r\n    uint public saleStart = now;\r\n    uint public saleEnd = now + 7884000; //ICO will run in 3 months\r\n    uint public coinTradeStart = saleEnd + 2628000; //transferable in a month after salesEnd\r\n    \r\n    uint public maxInvestment = 10500000000000000000; // 10.5 ETH AS MAX INVESTMENT\r\n    uint public minInvestment = 100000000000000000; // 0.1 ETH AS MINIMUM INVESTMENT\r\n    \r\n    enum State { beforeStart, running, afterEnd, halted}\r\n    State public icoState;\r\n    \r\n    \r\n    modifier onlyAdmin(){\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n    \r\n    event Invest(address investor, uint value, uint tokens);\r\n    \r\n    \r\n    constructor(address payable _deposit) public{\r\n        deposit = _deposit;\r\n        admin = msg.sender;\r\n        icoState = State.beforeStart;\r\n    }\r\n    \r\n    //emergency stop\r\n    function halt() public onlyAdmin{\r\n        icoState = State.halted;\r\n    }\r\n    \r\n    //restart \r\n    function unhalt() public onlyAdmin{\r\n        icoState = State.running;\r\n    }\r\n    \r\n    \r\n    //only the admin can change the deposit address\r\n    function changeDepositAddress(address payable newDeposit) public onlyAdmin{\r\n        deposit = newDeposit;\r\n    }\r\n    \r\n    \r\n    //returns ico state\r\n    function getCurrentState() public view returns(State){\r\n        if(icoState == State.halted){\r\n            return State.halted;\r\n        }else if(block.timestamp < saleStart){\r\n            return State.beforeStart;\r\n        }else if(block.timestamp >= saleStart && block.timestamp <= saleEnd){\r\n            return State.running;\r\n        }else{\r\n            return State.afterEnd;\r\n        }\r\n    }\r\n    \r\n    \r\n    function invest() payable public returns(bool){\r\n        //invest only in running\r\n        icoState = getCurrentState();\r\n        require(icoState == State.running);\r\n        \r\n        require(msg.value >= minInvestment && msg.value <= maxInvestment);\r\n        \r\n        uint tokens = msg.value / tokenPrice;\r\n        \r\n        //hardCap not reached\r\n        require(raisedAmount + msg.value <= hardCap);\r\n        \r\n        raisedAmount += msg.value;\r\n        \r\n        //add tokens to investor balance from founder balance\r\n        balances[msg.sender] += tokens;\r\n        balances[founder] -= tokens;\r\n        \r\n        deposit.transfer(msg.value);//transfer eth to the deposit address\r\n        \r\n        //emit event\r\n        emit Invest(msg.sender, msg.value, tokens);\r\n        \r\n        return true;\r\n        \r\n\r\n    }\r\n    \r\n    function () payable external{\r\n        invest();\r\n    }\r\n    \r\n    \r\n    \r\n    function burn() public returns(bool){\r\n        icoState = getCurrentState();\r\n        require(icoState == State.afterEnd);\r\n        balances[founder] = 0;\r\n        \r\n    }\r\n    \r\n    \r\n    function transfer(address to, uint value) public returns(bool){\r\n        require(block.timestamp > coinTradeStart);\r\n        super.transfer(to, value);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) public returns(bool){\r\n        require(block.timestamp > coinTradeStart);\r\n        super.transferFrom(_from, _to, _value);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"maxInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDeposit\",\"type\":\"address\"}],\"name\":\"changeDepositAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinTradeStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_deposit\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SaliICO","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b92d273980ba118f81f037f8dea66ddf6e60d298","Library":"","SwarmSource":"bzzr://01081a2448e2c9b92677348e085779fc389fb96c027294a528c59f6131d42a4a"}]}