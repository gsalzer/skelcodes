{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n    function balanceOf(address tokenOwner) constant external returns (uint balance);\r\n}\r\n\r\ncontract DeflatLottoInvest {\r\n\r\n  string public name = \"DEFLAT LOTTO INVEST\";\r\n  string public symbol = \"DEFTLI\";\r\n  string public prob = \"Probability 1 of 10\";\r\n  string public comment = \"Send 0.002 ETH to captalize DEFLAT and try to win 0.018 ETH, the prize is drawn when the accumulated balance reaches 0.02 ETH\";\r\n\r\n  //Send only 0.002 ether, other value will be rejected;\r\n  //Bids below 0.002 ether generate very low DEFLAT returns when calling the sales contract due to the gas cost, so this is the minimum feasible bid.\r\n\r\n  address[] internal playerPool;\r\n  address public maincontract = address(0xe36584509F808f865BE1960aA459Ab428fA7A25b); //DEFLAT SALE CONTRACT;\r\n  token public tokenReward = token(0xe1E0DB951844E7fb727574D7dACa68d1C5D1525b);// DEFLAT COIN CONTRACT;\r\n  uint rounds = 10;\r\n  uint quota = 0.002 ether;\r\n  uint reward;\r\n  event Payout(address from, address to, uint quantity);\r\n  function () public payable {\r\n    require(msg.value == quota);\r\n    playerPool.push(msg.sender);\r\n    if (playerPool.length >= rounds) {\r\n      uint baserand = (block.number-1)+now+block.difficulty;\r\n      uint winidx = uint(baserand)/10;\r\n      winidx = baserand - (winidx*10);   \r\n      address winner = playerPool[winidx];\r\n      uint amount = address(this).balance;\r\n      if (winner.send(amount)) { emit Payout(this, winner, amount);}\r\n      reward = tokenReward.balanceOf(address(this))/((rounds+1)-playerPool.length);    \r\n      if (reward > 0) { tokenReward.transfer(msg.sender, reward);}   \r\n      playerPool.length = 0;                \r\n    } \r\n    else {\r\n       if (playerPool.length == 1) {\r\n           if (maincontract.call.gas(200000).value(address(this).balance)()) { emit Payout(this, maincontract, quota);}\r\n       }\r\n       reward = tokenReward.balanceOf(address(this))/((rounds+1)-playerPool.length);    \r\n       if (reward > 0) { tokenReward.transfer(msg.sender, reward); }\r\n    } \r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maincontract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prob\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comment\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"}]","ContractName":"DeflatLottoInvest","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://85cfc5b3eb37ce3e43b29a1351e0780bfde6b7112725b90bba749fc5dfcacd8e"}]}