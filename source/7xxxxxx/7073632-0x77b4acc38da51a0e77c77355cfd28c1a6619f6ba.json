{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Adventure {\r\n    //Gotta encode and decode the choice strings on the frontend\r\n\r\n    event Situation(uint indexed id, string situationText, bytes32[] choiceTexts);\r\n\r\n\r\n    //fromSituation    //choiceNum   //toSituation\r\n    mapping(uint => mapping(uint => uint)) links;\r\n    //situation    //number of choices\r\n    mapping(uint => uint) options;\r\n\r\n    //situation     //person who wrote it\r\n    mapping(uint => address) authors;\r\n    //author            //name\r\n    mapping(address => string) signatures;\r\n\r\n    //Total number of situations\r\n    uint situationCount;\r\n    //Un-closed pathways\r\n    uint pathwayCount;\r\n\r\n\r\n\r\n    constructor(string memory situationText, bytes32[] memory choiceTexts) public {\r\n        require(choiceTexts.length > 0,\"choices\");\r\n\r\n        //Define the option count\r\n        options[0] = choiceTexts.length;\r\n\r\n        //Set how many remaining open paths there are\r\n        pathwayCount = choiceTexts.length;\r\n\r\n        //Sign your name\r\n        authors[0] = msg.sender;\r\n\r\n        emit Situation(0,situationText,choiceTexts);\r\n    }\r\n\r\n    function add_situation(\r\n        uint fromSituation,\r\n        uint fromChoice,\r\n        string memory situationText,\r\n        bytes32[] memory choiceTexts) public{\r\n        //Make sure there is still at least one open pathway\r\n        require(pathwayCount + choiceTexts.length > 1, \"pathwayCount\");\r\n\r\n        //Make sure they didn't leave situationText blank\r\n        require(bytes(situationText).length > 0,\"situation\");\r\n\r\n        //Make sure this situation.choice actually exists\r\n        require(fromChoice < options[fromSituation],\"options\");\r\n\r\n        //Make sure this situation.choice hasn't been defined\r\n        require(links[fromSituation][fromChoice] == 0,\"choice\");\r\n\r\n        for(uint i = 0; i < choiceTexts.length; i++){\r\n            require(choiceTexts[i].length > 0,\"choiceLength\");\r\n        }\r\n\r\n        //Increment situationCount, and this is the new situation num\r\n        situationCount++;\r\n\r\n        //Adjust pathwayCount\r\n        pathwayCount += choiceTexts.length - 1;\r\n\r\n        //Set pointer from previous situation\r\n        links[fromSituation][fromChoice] = situationCount;\r\n\r\n        //Set many options there are for this situation\r\n        options[situationCount] = choiceTexts.length;\r\n\r\n        //Sign your name\r\n        authors[situationCount] = msg.sender;\r\n\r\n        emit Situation(situationCount,situationText,choiceTexts);\r\n\r\n    }\r\n\r\n    function add_signature(string memory signature) public{\r\n        signatures[msg.sender] = signature;\r\n    }\r\n\r\n    function get_signature(uint situation) public view returns(string memory){\r\n        return signatures[authors[situation]];\r\n    }\r\n    function get_author(uint situation) public view returns(address){\r\n        return authors[situation];\r\n    }\r\n\r\n    function get_pathwayCount() public view returns(uint){\r\n        return pathwayCount;\r\n    }\r\n\r\n    function get_next_situation(uint fromSituation, uint fromChoice) public view returns(uint){\r\n        return links[fromSituation][fromChoice];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"situation\",\"type\":\"uint256\"}],\"name\":\"get_author\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fromSituation\",\"type\":\"uint256\"},{\"name\":\"fromChoice\",\"type\":\"uint256\"}],\"name\":\"get_next_situation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fromSituation\",\"type\":\"uint256\"},{\"name\":\"fromChoice\",\"type\":\"uint256\"},{\"name\":\"situationText\",\"type\":\"string\"},{\"name\":\"choiceTexts\",\"type\":\"bytes32[]\"}],\"name\":\"add_situation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"add_signature\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_pathwayCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"situation\",\"type\":\"uint256\"}],\"name\":\"get_signature\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"situationText\",\"type\":\"string\"},{\"name\":\"choiceTexts\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"situationText\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"choiceTexts\",\"type\":\"bytes32[]\"}],\"name\":\"Situation\",\"type\":\"event\"}]","ContractName":"Adventure","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000a9596f75206177616b656e20696e206120677261737379206669656c642c20756e61626c6520746f2072656d656d62657220686f7720796f7520676f7420686572652e20596f752063616e2068656172206120776174657266616c6c20696e2061206e656172627920666f726573742c20616e6420796f752063616e2073656520736d6f6b6520726973696e672066726f6d206120746f776e20696e207468652064697374616e63652e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003476f20746f2074686520666f72657374000000000000000000000000000000004865616420666f722074686520746f776e0000000000000000000000000000004c6f6f6b2061726f756e6420746865206669656c640000000000000000000000","Library":"","SwarmSource":"bzzr://ffed4f144faf42194e91146844a0e2e76ea5e4150b44ebec3c25f3a128547f18"}]}