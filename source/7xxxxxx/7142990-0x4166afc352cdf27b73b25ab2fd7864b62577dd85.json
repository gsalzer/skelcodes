{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n//\r\n//                       .#########'\r\n//                    .###############+\r\n//                  ,####################\r\n//                `#######################+\r\n//               ;##########################\r\n//              #############################.\r\n//             ###############################,\r\n//           +##################,    ###########`\r\n//          .###################     .###########\r\n//         ##############,          .###########+\r\n//         #############`            .############`\r\n//         ###########+                ############\r\n//        ###########;                  ###########\r\n//        ##########'                    ###########                                                                                      \r\n//       '##########    '#.        `,     ##########                                                                                    \r\n//       ##########    ####'      ####.   :#########;                                                                                   \r\n//      `#########'   :#####;    ######    ##########                                                                                 \r\n//      :#########    #######:  #######    :#########         \r\n//      +#########    :#######.########     #########`       \r\n//      #########;     ###############'     #########:       \r\n//      #########       #############+      '########'        \r\n//      #########        ############       :#########        \r\n//      #########         ##########        ,#########        \r\n//      #########         :########         ,#########        \r\n//      #########        ,##########        ,#########        \r\n//      #########       ,############       :########+        \r\n//      #########      .#############+      '########'        \r\n//      #########:    `###############'     #########,        \r\n//      +########+    ;#######`;#######     #########         \r\n//      ,#########    '######`  '######    :#########         \r\n//       #########;   .#####`    '#####    ##########         \r\n//       ##########    '###`      +###    :#########:         \r\n//       ;#########+     `                ##########          \r\n//        ##########,                    ###########          \r\n//         ###########;                ############\r\n//         +############             .############`\r\n//          ###########+           ,#############;\r\n//          `###########     ;++#################\r\n//           :##########,    ###################\r\n//            '###########.'###################\r\n//             +##############################\r\n//              '############################`\r\n//               .##########################\r\n//                 #######################:\r\n//                   ###################+\r\n//                     +##############:\r\n//                        :#######+`\r\n//\r\n//\r\n//\r\n// Play0x.com (The ONLY gaming platform for all ERC20 Tokens)\r\n// -------------------------------------------------------------------------------------------------------\r\n// * Multiple types of game platforms\r\n// * Build your own game zone - Not only playing games, but also allowing other players to join your game.\r\n// * Support all ERC20 tokens.\r\n//\r\n//\r\n//\r\n// 0xC Token (Contract address : 0x4166afC352CdF27B73b25AB2FD7864B62577DD85)\r\n// -------------------------------------------------------------------------------------------------------\r\n// * 0xC Token is an ERC20 Token specifically for digital entertainment.\r\n// * No ICO and private sales,fair access.\r\n// * There will be hundreds of games using 0xC as a game token.\r\n// * Token holders can permanently get ETH's profit sharing.\r\n//\r\n\r\n\r\n/**\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\nlibrary SafeMath {\r\n/**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds two unsigned integers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n     * reverts when dividing by zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n* @title Ownable\r\n* @dev The Ownable contract has an owner address, and provides basic authorization control \r\n* functions, this simplifies the implementation of \"user permissions\". \r\n*/ \r\ncontract Ownable {\r\n    address public owner;\r\n\r\n/** \r\n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n* account.\r\n*/\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n* @title Standard ERC20 token\r\n*\r\n* @dev Implementation of the basic standard token.\r\n* @dev https://github.com/ethereum/EIPs/issues/20\r\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n*/\r\ncontract StandardToken {\r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    using SafeMath for uint256;\r\n    uint256 public totalSupply;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    mapping(address => uint256) balances;\r\n    \r\n    /**\r\n    * @dev transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        require(balances[msg.sender] >= _value && balances[_to].add(_value) >= balances[_to]);\r\n\r\n    \r\n        // SafeMath.sub will throw if there is not enough balance.\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of. \r\n    * @return An uint256 representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    /**\r\n    * @dev Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint256 the amout of tokens to be transfered\r\n    */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // require (_value <= _allowance);\r\n\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n    \r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }       \r\n\r\n    /**\r\n    * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint256 specifing the amount of tokens still avaible for the spender.\r\n    */\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n/*Token  Contract*/\r\ncontract Token0xC is StandardToken, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    // Token Information\r\n    string  public constant name = \"0xC\";\r\n    string  public constant symbol = \"0xC\";\r\n    uint8   public constant decimals = 18;\r\n\r\n    // Sale period1.\r\n    uint256 public startDate1;\r\n    uint256 public endDate1;\r\n    uint256 public rate1;\r\n    \r\n    // Sale period2.\r\n    uint256 public startDate2;\r\n    uint256 public endDate2;\r\n    uint256 public rate2;\r\n    \r\n    // Sale period3. \r\n    uint256 public startDate3;\r\n    uint256 public endDate3;\r\n    uint256 public rate3;\r\n\r\n    //2018 08 16\r\n    uint256 BaseTimestamp = 1534377600;\r\n    \r\n    //SaleCap\r\n    uint256 public dailyCap;\r\n    uint256 public saleCap;\r\n    uint256 public LastbetDay;\r\n    uint256 public LeftDailyCap;\r\n\r\n    // Address Where Token are keep\r\n    address public tokenWallet ;\r\n\r\n    // Address where funds are collected.\r\n    address public fundWallet ;\r\n\r\n    // Event\r\n    event TokenPurchase(address indexed purchaser, uint256 value, uint256 amount);\r\n    event TransferToken(address indexed buyer, uint256 amount);\r\n\r\n    // Modifiers\r\n    modifier uninitialized() {\r\n        require(tokenWallet == 0x0);\r\n        require(fundWallet == 0x0);\r\n        _;\r\n    }\r\n\r\n    constructor() public {}\r\n    // Trigger with Transfer event\r\n    // Fallback function can be used to buy tokens\r\n    function () public payable {\r\n        buyTokens(msg.sender, msg.value);\r\n    }\r\n\r\n    //Initial Contract\r\n    function initialize(address _tokenWallet, address _fundWallet, uint256 _start1, uint256 _end1,\r\n                         uint256 _dailyCap, uint256 _saleCap, uint256 _totalSupply) public\r\n                        onlyOwner uninitialized {\r\n        require(_start1 < _end1);\r\n        require(_tokenWallet != 0x0);\r\n        require(_fundWallet != 0x0);\r\n        require(_totalSupply >= _saleCap);\r\n\r\n        startDate1 = _start1;\r\n        endDate1 = _end1;\r\n        saleCap = _saleCap;\r\n        dailyCap = _dailyCap;\r\n        tokenWallet = _tokenWallet;\r\n        fundWallet = _fundWallet;\r\n        totalSupply = _totalSupply;\r\n\r\n        balances[tokenWallet] = saleCap;\r\n        balances[0xb1] = _totalSupply.sub(saleCap);\r\n    }\r\n\r\n    //Set Sale Period\r\n    function setPeriod(uint256 period, uint256 _start, uint256 _end) public onlyOwner {\r\n        require(_end > _start);\r\n        if (period == 1) {\r\n            startDate1 = _start;\r\n            endDate1 = _end;\r\n        }else if (period == 2) {\r\n            require(_start > endDate1);\r\n            startDate2 = _start;\r\n            endDate2 = _end;\r\n        }else if (period == 3) {\r\n            require(_start > endDate2);\r\n            startDate3 = _start;\r\n            endDate3 = _end;      \r\n        }\r\n    }\r\n\r\n    //Set Sale Period\r\n    function setPeriodRate(uint256 _period, uint256 _rate) public onlyOwner {\r\n        if (_period == 1) {\r\n           rate1 = _rate;\r\n        }else if (_period == 2) {\r\n            rate2 = _rate;\r\n        }else if (_period == 3) {\r\n            rate3 = _rate;\r\n        }\r\n    }\r\n\r\n    // For transferToken\r\n    function transferToken(address _to, uint256 amount) public onlyOwner {\r\n        require(saleCap >= amount,' Not Enough' );\r\n        require(_to != address(0));\r\n        require(_to != tokenWallet);\r\n        require(amount <= balances[tokenWallet]);\r\n\r\n        saleCap = saleCap.sub(amount);\r\n        // Transfer\r\n        balances[tokenWallet] = balances[tokenWallet].sub(amount);\r\n        balances[_to] = balances[_to].add(amount);\r\n        emit TransferToken(_to, amount);\r\n        emit Transfer(tokenWallet, _to, amount);\r\n    }\r\n\r\n    function setDailyCap(uint256 _dailyCap) public onlyOwner{\r\n        dailyCap = _dailyCap;\r\n    }\r\n\r\n    //Set SaleCap\r\n    function setSaleCap(uint256 _saleCap) public onlyOwner {\r\n        require(balances[0xb1].add(balances[tokenWallet]).sub(_saleCap) >= 0);\r\n        uint256 amount = 0;\r\n        //Check SaleCap\r\n        if (balances[tokenWallet] > _saleCap) {\r\n            amount = balances[tokenWallet].sub(_saleCap);\r\n            balances[0xb1] = balances[0xb1].add(amount);\r\n        } else {\r\n            amount = _saleCap.sub(balances[tokenWallet]);\r\n            balances[0xb1] = balances[0xb1].sub(amount);\r\n        }\r\n        balances[tokenWallet] = _saleCap;\r\n        saleCap = _saleCap;\r\n    }\r\n\r\n    //Calcute Bouns\r\n    function getBonusByTime() public constant returns (uint256) {\r\n        if (now < startDate1) {\r\n            return 0;\r\n        } else if (endDate1 > now && now > startDate1) {\r\n            return rate1;\r\n        } else if (endDate2 > now && now > startDate2) {\r\n            return rate2;\r\n        } else if (endDate3 > now && now > startDate3) {\r\n            return rate3;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //Stop Contract\r\n    function finalize() public onlyOwner {\r\n        require(!saleActive());\r\n\r\n        // Transfer the rest of token to tokenWallet\r\n        balances[tokenWallet] = balances[tokenWallet].add(balances[0xb1]);\r\n        balances[0xb1] = 0;\r\n    }\r\n    \r\n    //Purge the time in the timestamp.\r\n    function DateConverter(uint256 ts) public view returns(uint256 currentDayWithoutTime){\r\n        uint256 dayInterval = ts.sub(BaseTimestamp);\r\n        uint256 dayCount = dayInterval.div(86400);\r\n        return BaseTimestamp.add(dayCount.mul(86400));\r\n    }\r\n    \r\n    //Check SaleActive\r\n    function saleActive() public constant returns (bool) {\r\n        return (\r\n            (now >= startDate1 &&\r\n                now < endDate1 && saleCap > 0) ||\r\n            (now >= startDate2 &&\r\n                now < endDate2 && saleCap > 0) ||\r\n            (now >= startDate3 &&\r\n                now < endDate3 && saleCap > 0)\r\n                );\r\n    }\r\n    \r\n    //Buy Token\r\n    function buyTokens(address sender, uint256 value) internal {\r\n        //Check Sale Status\r\n        require(saleActive());\r\n        \r\n        //Minum buying limit\r\n        require(value >= 0.0001 ether);\r\n        require(sender != tokenWallet);\r\n        \r\n        if(DateConverter(now) > LastbetDay )\r\n        {\r\n            LastbetDay = DateConverter(now);\r\n            LeftDailyCap = dailyCap;\r\n        }\r\n\r\n        // Calculate token amount to be purchased\r\n        uint256 bonus = getBonusByTime();\r\n        \r\n        uint256 amount = value.mul(bonus);\r\n        \r\n        // We have enough token to sale\r\n        require(LeftDailyCap >= amount, \"cap not enough\");\r\n        require(balances[tokenWallet] >= amount);\r\n        \r\n        LeftDailyCap = LeftDailyCap.sub(amount);\r\n\r\n        // Transfer\r\n        balances[tokenWallet] = balances[tokenWallet].sub(amount);\r\n        balances[sender] = balances[sender].add(amount);\r\n        emit TokenPurchase(sender, value, amount);\r\n        emit Transfer(tokenWallet, sender, amount);\r\n        \r\n        saleCap = saleCap.sub(amount);\r\n\r\n        // Forward the fund to fund collection wallet.\r\n        fundWallet.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyCap\",\"type\":\"uint256\"}],\"name\":\"setDailyCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LastbetDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_period\",\"type\":\"uint256\"},{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setPeriodRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ts\",\"type\":\"uint256\"}],\"name\":\"DateConverter\",\"outputs\":[{\"name\":\"currentDayWithoutTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LeftDailyCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"period\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"setPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBonusByTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_saleCap\",\"type\":\"uint256\"}],\"name\":\"setSaleCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenWallet\",\"type\":\"address\"},{\"name\":\"_fundWallet\",\"type\":\"address\"},{\"name\":\"_start1\",\"type\":\"uint256\"},{\"name\":\"_end1\",\"type\":\"uint256\"},{\"name\":\"_dailyCap\",\"type\":\"uint256\"},{\"name\":\"_saleCap\",\"type\":\"uint256\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Token0xC","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c8c90c46a8f0e8cd81c2e103d165facf89f50fd2883afa2fdb5f86564e03e1d0"}]}