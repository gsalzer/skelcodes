{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n//https://github.com/OpenZeppelin/openzeppelin-solidity\r\n//Lock related functions are fixed or added by TSN\r\n\r\nlibrary SafeMath {                             //SafeMath.sol\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) { return 0; }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n  using SafeMath for uint256;\r\n  address public owner;                                              //Ownable.sol\r\n  string public name = \"TS Coin\";                                      //DetailedERC20.sol\r\n  string public symbol = \"TSN\";                                    //DetailedERC20.sol\r\n  uint256 public decimals = 18;                                        //DetailedERC20.sol  \r\n  uint256 totalSupply_ = 100e8 * (10**18);             //BasicToken.sol\r\n  bool public paused = false;                                         //Pausable.sol\r\n  mapping(address => uint256) balances;                              //BasicToken.sol\r\n  mapping(address => mapping (address => uint256)) internal allowed; //StandardToken.sol\r\n  mapping(address => uint256) internal locked;          // new\r\n  event Burn(address indexed burner, uint256 value);                               //BurnableToken.sol\r\n  event Approval(address indexed owner, address indexed spender,uint256 value);    //ERC20.sol\r\n  event Transfer(address indexed from, address indexed to, uint256 value);         //ERC20Basic.sol\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner); //Ownable.sol\r\n  event Pause();                                                                   //Pausable.sol\r\n  event Unpause();                                                                 //Pausable.sol\r\n  event Lock(address indexed LockedAddress, uint256 LockAmount);             // new. lock each address by amount\r\n  event Unlock(address indexed LockedAddress);           // new\r\n\r\n  constructor() public { \r\n    owner = msg.sender;\r\n    balances[owner] = totalSupply_ ;\r\n  }\r\n\r\n  modifier onlyOwner()         {require(msg.sender == owner); _;}  //Ownable.sol\r\n  modifier whenPaused()        {require(paused); _; }              //Pausable.sol\r\n  modifier whenNotPaused()     {require(!paused); _;}              //Pausable.sol\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {  //BasicToken.sol\r\n    return balances[_owner];\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {  //BasicToken.sol\r\n    return totalSupply_;\r\n  }\r\n  \r\n  function burn(uint256 _value) public { //BurnableToken.sol\r\n    _burn(msg.sender, _value);\r\n  }\r\n\r\n  function _burn(address _who, uint256 _value) internal {  //BurnableToken.sol\r\n    require(_value <= balances[_who]);\r\n    balances[_who] = balances[_who].sub(_value);\r\n    totalSupply_ = totalSupply_.sub(_value);\r\n    emit Burn(_who, _value);\r\n    emit Transfer(_who, address(0), _value);\r\n  }\r\n  \r\n  function burnFrom(address _from, uint256 _value) public {  //StandardBurnableToken.sol\r\n    require(_value <= allowed[_from][msg.sender]);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    _burn(_from, _value);\r\n  }\r\n  \r\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\n      //StandardToken.sol, PausableToken.sol\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) { //StandardToken.sol\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function increaseApproval(address _spender, uint256 _addedValue) public whenNotPaused returns(bool){\r\n      //StandardToken.sol, PausableToken.sol\r\n    allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address _spender, uint256 _subtractedValue) public whenNotPaused returns(bool) {\r\n      //StandardToken.sol, PausableToken.sol\r\n    uint256 oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) { allowed[msg.sender][_spender] = 0;\r\n    } else                           { allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);}\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {//BasicToken.sol, PausableToken.sol\r\n    require(_to != address(0));\r\n    require(locked[msg.sender].add(_value) <= balances[msg.sender]);  //Added\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns(bool) {  \r\n      //StandardToken.sol, PausableToken.sol\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n    require(locked[_from].add(_value) <= balances[_from]); //Added\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {   //Ownable.sol\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  function _transferOwnership(address _newOwner) internal {   //Ownable.sol\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n\r\n  function pause() onlyOwner whenNotPaused public {   //Pausable.sol, stop whole transfer\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  function unpause() onlyOwner whenPaused public {   //Pausable.sol\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n\r\n  function destroyAndSend(address _recipient) onlyOwner public {   //Destructible.sol\r\n    selfdestruct(_recipient);\r\n  }\r\n\r\n  function burnOf(address _who, uint256 _value) public onlyOwner { // burn by owner\r\n    _burn(_who, _value);\r\n  }\r\n  \r\n  function multiTransfer(address[] _to, uint256[] _amount) whenNotPaused public returns (bool) {\r\n    require(_to.length == _amount.length);\r\n    uint256 i;\r\n    uint256 amountSum = 0;\r\n    for (i=0; i < _amount.length; i++){\r\n      require(_amount[i] > 0);\r\n      require(_to[i] != address(0));\r\n      amountSum = amountSum.add(_amount[i]);\r\n    }\r\n    require(locked[msg.sender].add(amountSum) <= balances[msg.sender]);  //Added\r\n    require(amountSum <= balances[msg.sender]);\r\n    for (i=0; i < _to.length; i++){\r\n      balances[_to[i]] = balances[_to[i]].add(_amount[i]);\r\n      emit Transfer(msg.sender, _to[i], _amount[i]);\r\n    }\r\n    balances[msg.sender] = balances[msg.sender].sub(amountSum);\r\n    return true;\r\n  }\r\n  \r\n  function lock(address _lockAddress, uint256 _lockAmount) public onlyOwner returns (bool) {  // stop _lockAddress's transfer\r\n    require(_lockAddress != address(0));\r\n    require(_lockAddress != owner);\r\n    locked[_lockAddress] = _lockAmount; //Added\r\n    emit Lock(_lockAddress, _lockAmount);\r\n    return true;\r\n  }\r\n\r\n  function unlock(address _lockAddress) public onlyOwner returns (bool) {\r\n    require(_lockAddress != address(0));\r\n    require(_lockAddress != owner);\r\n    locked[_lockAddress] = 0; //Added\r\n    emit Unlock(_lockAddress);\r\n    return true;\r\n  }\r\n\r\n  function multiLock(address[] _lockAddress, uint256[] _lockAmount) public onlyOwner {\r\n    require(_lockAmount.length == _lockAddress.length);\r\n    for (uint i=0; i < _lockAddress.length; i++){\r\n      lock(_lockAddress[i], _lockAmount[i]);\r\n    }\r\n  }\r\n\r\n  function multiUnlock(address[] _lockAddress) public onlyOwner {\r\n    for (uint i=0; i < _lockAddress.length; i++){\r\n      unlock(_lockAddress[i]);\r\n    }\r\n  }\r\n\r\n  function checkLock(address _address) public view onlyOwner returns (uint256) { //Added\r\n    return locked[_address];\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAddress\",\"type\":\"address[]\"},{\"name\":\"_lockAmount\",\"type\":\"uint256[]\"}],\"name\":\"multiLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAddress\",\"type\":\"address\"},{\"name\":\"_lockAmount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAddress\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockAddress\",\"type\":\"address[]\"}],\"name\":\"multiUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnOf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"LockedAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"LockAmount\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"LockedAddress\",\"type\":\"address\"}],\"name\":\"Unlock\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e217e66b6f26a9918b2f81ba3d03c52e98ac617ab616394eea915cf3a021e1ed"}]}