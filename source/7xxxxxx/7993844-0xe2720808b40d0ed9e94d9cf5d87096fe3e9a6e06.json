{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ForeignToken {\r\n    function balanceOf(address _owner) constant public returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\r\n\tconstructor() public{\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n\r\ncontract Pausable is Ownable {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() onlyOwner whenNotPaused public {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner whenPaused public {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n}\r\n\r\ncontract CARLO is ERC20,Pausable {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    mapping (address => bool) public blacklist;\r\n\r\n    string public constant name = \"CARLO\";\r\n    string public constant symbol = \"CARLO\";\r\n    uint8 public constant decimals = 18; \r\n\r\n\tuint256 public foundationDistributed = 100000000e18;\r\n\tuint256 public marketDistributed = 360000000e18;\r\n\tuint256 public devDistributed = 240000000e18;\r\n\tuint256 public labDistributed = 300000000e18;\r\n\t\r\n\tuint256 public devLockFirstDistributed = 300000000e18;\r\n\tuint256 public devLockSecondDistributed = 300000000e18;\r\n\tuint256 public devLockThirdDistributed = 400000000e18; \r\n\r\n    uint256 public totalRemaining; \r\n\t\r\n\taddress private devLockFirstBeneficiary = 0x9E01714A3700168E82b898618C6181Eb6abF7cff;\r\n\taddress private devLockSecondBeneficiary = 0x20986b25C551f7944cEbF500F6C950229865FAae;\r\n\taddress private devLockThirdBeneficiary = 0x3cD928a432c9666be26fE82480A8a77dA33b2B42;\r\n\taddress private foundationBeneficiary = 0xCCF02CC2fF5e896fF3D7D6aDC59bAbe514EBb64C;\r\n\taddress private marketBeneficiary = 0xC9b66dC5A27d94F9ab804dF98437945700b93555;\r\n\taddress private devBeneficiary = 0xf89fdcca528e1E82da8dee643b38e693AebB6F45;\r\n\taddress private labBeneficiary = 0x239d10c737E26cB85746426313aCF167b564eDB8;\r\n\r\n\tuint256 private _releaseTimeFirst = now + 365 days; \r\n\tuint256 private _releaseTimeSecond = now + 365 days + 365 days; \r\n\tuint256 private _releaseTimeThird = now + 365 days + 365 days + 365 days; \t\r\n\t\r\n\tbool public devLockFirstReleased = true;\r\n\tbool public devLockSecondReleased = true;\r\n\tbool public devLockThirdReleased = true;\r\n    \r\n    event Burn(address indexed burner, uint256 value);\r\n\tevent OwnershipTransferred(address indexed perviousOwner, address indexed newOwner);\r\n    \r\n    constructor() public {  \r\n\t\towner = msg.sender;\r\n\t\ttotalSupply = 2000000000e18;\r\n\t\ttotalRemaining = totalSupply.sub(foundationDistributed).sub(marketDistributed).sub(labDistributed).sub(devDistributed);\r\n        balances[owner] = totalRemaining;\r\n\t\tbalances[foundationBeneficiary] = foundationDistributed;\r\n\t\tbalances[marketBeneficiary] = marketDistributed;\r\n\t\tbalances[labBeneficiary] = labDistributed;\r\n\t\tbalances[devBeneficiary] = devDistributed;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\tbalances[owner] = balances[owner].sub(totalRemaining);\r\n\t\tbalances[newOwner] = balances[newOwner].add(totalRemaining);\r\n\t\temit Transfer(owner, newOwner, totalRemaining);\r\n\t\towner = newOwner;\t\t\r\n    }\r\n\r\n    function balanceOf(address _owner) constant public returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(msg.data.length >= size + 4);  \r\n        _;\r\n    }\r\n\t\r\n\tfunction isPayLockFirst() public view returns (bool) { \r\n\t\tif (now >= _releaseTimeFirst) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tfunction isPayLockSecond() public view returns (bool) { \r\n\t\tif (now >= _releaseTimeSecond) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tfunction isPayLockThird() public view returns (bool) { \t\t\r\n\t\tif (now >= _releaseTimeThird) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tfunction releaseFirst()internal {\r\n\t\tbalances[owner] = balances[owner].sub(devLockFirstDistributed);\r\n\t\tbalances[devLockFirstBeneficiary] = balances[devLockFirstBeneficiary].add(devLockFirstDistributed);\r\n\t\temit Transfer(owner, devLockFirstBeneficiary, devLockFirstDistributed);\r\n\t\ttotalRemaining = totalRemaining.sub(devLockFirstDistributed);\r\n\t\tdevLockFirstReleased = false;\r\n\t}\r\n\tfunction releaseSecond() internal {\r\n\t\tbalances[owner] = balances[owner].sub(devLockSecondDistributed);\r\n\t\tbalances[devLockSecondBeneficiary] = balances[devLockSecondBeneficiary].add(devLockSecondDistributed);\r\n\t\temit Transfer(owner, devLockSecondBeneficiary, devLockSecondDistributed);\r\n\t\ttotalRemaining = totalRemaining.sub(devLockSecondDistributed);\r\n\t\tdevLockSecondReleased = false;\r\n\t}\r\n\tfunction releaseThird() internal {\r\n\t\tbalances[owner] = balances[owner].sub(devLockThirdDistributed);\r\n\t\tbalances[devLockThirdBeneficiary] = balances[devLockThirdBeneficiary].add(devLockThirdDistributed);\r\n\t\temit Transfer(owner, devLockThirdBeneficiary, devLockThirdDistributed);\r\n\t\ttotalRemaining = totalRemaining.sub(devLockThirdDistributed);\r\n\t\tdevLockThirdReleased = false;\r\n\t}\r\n\t\r\n\tfunction release(address from) internal {\r\n\t\tif (from == devLockFirstBeneficiary) {\r\n\t\t\tif (isPayLockFirst()) {\r\n\t\t\t\tif (devLockFirstReleased) {\r\n\t\t\t\t\treleaseFirst();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (from == devLockSecondBeneficiary) {\r\n\t\t\tif (isPayLockSecond()) {\r\n\t\t\t\tif (devLockSecondReleased) {\r\n\t\t\t\t\treleaseSecond();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (from == devLockThirdBeneficiary) {\r\n\t\t\tif (isPayLockThird()) {\r\n\t\t\t\tif (devLockThirdReleased) {\r\n\t\t\t\t\treleaseThird();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n    \r\n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public whenNotPaused returns (bool success) {\r\n        require(blacklist[msg.sender] == false);\r\n\t\trequire(blacklist[_to] == false);\r\n\t\trequire(_to != address(0));\r\n\t\tif (msg.sender == owner) {\r\n\t\t\trequire(balances[msg.sender] >= (totalRemaining.add(_amount)));\r\n\t\t}\r\n\t\trelease(msg.sender);\r\n        require(_amount <= balances[msg.sender]);\t\t\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\t\t\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public whenNotPaused returns (bool success) {\r\n        require(blacklist[msg.sender] == false);\r\n\t\trequire(blacklist[_to] == false);\r\n\t\trequire(blacklist[_from] == false);\r\n\t\trequire(_to != address(0));\r\n\t\tif (_from == owner) {\r\n\t\t\trequire(balances[_from] >= (totalRemaining.add(_amount)));\r\n\t\t}\r\n\t\trelease(_from);\r\n        require(_amount <= balances[_from]);\r\n        require(_amount <= allowed[_from][msg.sender]);\t\t\r\n        balances[_from] = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool success) {\r\n\t\trequire(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction addOrRemoveBlackList(address _addr, bool action) onlyOwner public returns (bool success) {\r\n\t\trequire(_addr != address(0));\r\n\t\tblacklist[_addr] = action;\r\n\t\treturn true;\r\n\t}\r\n    \r\n    function allowance(address _owner, address _spender) constant public returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r\n        ForeignToken t = ForeignToken(tokenAddress);\r\n        uint bal = t.balanceOf(who);\r\n        return bal;\r\n    }\r\n    \r\n    function withdraw() onlyOwner public {\r\n        uint256 etherBalance = address(this).balance;\r\n        owner.transfer(etherBalance);\r\n    }\r\n    \r\n    function burn(uint256 _value) onlyOwner public {\r\n\t\trequire(balances[msg.sender] >= totalRemaining.add(_value));\r\n        address burner = msg.sender;\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        emit Burn(burner, _value);\r\n    }\r\n    \r\n    function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {\r\n        ForeignToken token = ForeignToken(_tokenContract);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isPayLockSecond\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockSecondReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockSecondDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPayLockFirst\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockThirdReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockFirstDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockFirstReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPayLockThird\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"labDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"action\",\"type\":\"bool\"}],\"name\":\"addOrRemoveBlackList\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devLockThirdDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"perviousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"CARLO","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://56e410ca10e3323351e678a07c63cc4f72972f175749cea8f3dba938f8eda763"}]}