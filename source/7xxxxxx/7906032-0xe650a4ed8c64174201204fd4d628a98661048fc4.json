{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ninterface token  {\r\n    function transfer (address receiver, uint amount) external;\r\n}\r\n\r\ncontract RobetTest {\r\n    \r\n    address[] public tokenMaster;\r\n    \r\n    mapping (bytes32 => address payable) public betToAddress;\r\n    \r\n    mapping (bytes32 => address payable) public betToTokenAddress;\r\n    \r\n    mapping (bytes32 => uint256) public betToValue;\r\n    \r\n    mapping (bytes32 => bytes32) public betToWinners;\r\n\r\n    /**\r\n     * Constructor function\r\n     */\r\n    constructor() public {\r\n        tokenMaster.push(0xF3A2540ad5244899b3512cA5A09e369e8A9f7949);\r\n        tokenMaster.push(0xCd7d1EDeD168a03C74427915c7c4924b28015734);\r\n        tokenMaster.push(0xd894390fF726bD3099803E89D4607cFDC02866D2);\r\n    }\r\n\r\n    function sendToken(address addr, uint256 amount, token tokenReward) private returns (bool success) {\r\n        \r\n        for(uint c=0;c<tokenMaster.length;c++){\r\n            if (tokenMaster[c] == msg.sender) {\r\n                tokenReward.transfer(addr, amount);\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    } \r\n\r\n    function insertBet(bytes32 bid, address payable addr, uint256 _value, address payable tokenAddress) public returns (bool success) {\r\n        betToAddress[bid] = addr;\r\n        betToValue[bid] = _value;\r\n        betToTokenAddress[bid] = tokenAddress;\r\n        return true;\r\n    }\r\n    \r\n    function signal(bytes32 bid, bytes32 result) public returns (bool success) {\r\n        betToWinners[bid] = result;\r\n        address payable addr = (betToAddress[bid]);\r\n        \r\n        if (betToTokenAddress[bid] != address(0x0)){\r\n            sendToken(addr, betToValue[bid], token(betToTokenAddress[bid]));\r\n        }else{\r\n            addr.send(betToValue[bid]);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function () payable  external {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"bid\",\"type\":\"bytes32\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"insertBet\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"bytes32\"}],\"name\":\"signal\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToWinners\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"betToAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"RobetTest","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dc558a63abdfdfa2284c2672304485704aac31e360f8882d1dbbf8257e43e1f3"}]}