{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n/*\r\n    Utilities & Common Modifiers\r\n*/\r\ncontract Utils {\r\n    /**\r\n        constructor\r\n    */\r\n    function Utils() {\r\n    }\r\n\r\n    // validates an address - currently only checks that it isn't null\r\n    modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        _;\r\n    }\r\n\r\n    // verifies that the address is different than this contract address\r\n    modifier notThis(address _address) {\r\n        require(_address != address(this));\r\n        _;\r\n    }\r\n\r\n    // Overflow protected math functions\r\n\r\n    /**\r\n        @dev returns the sum of _x and _y, asserts if the calculation overflows\r\n\r\n        @param _x   value 1\r\n        @param _y   value 2\r\n\r\n        @return sum\r\n    */\r\n    function safeAdd(uint256 _x, uint256 _y) internal returns (uint256) {\r\n        uint256 z = _x + _y;\r\n        assert(z >= _x);\r\n        return z;\r\n    }\r\n\r\n    /**\r\n        @dev returns the difference of _x minus _y, asserts if the subtraction results in a negative number\r\n\r\n        @param _x   minuend\r\n        @param _y   subtrahend\r\n\r\n        @return difference\r\n    */\r\n    function safeSub(uint256 _x, uint256 _y) internal returns (uint256) {\r\n        assert(_x >= _y);\r\n        return _x - _y;\r\n    }\r\n\r\n    /**\r\n        @dev returns the product of multiplying _x by _y, asserts if the calculation overflows\r\n\r\n        @param _x   factor 1\r\n        @param _y   factor 2\r\n\r\n        @return product\r\n    */\r\n    function safeMul(uint256 _x, uint256 _y) internal returns (uint256) {\r\n        uint256 z = _x * _y;\r\n        assert(_x == 0 || z / _x == _y);\r\n        return z;\r\n    }\r\n}\r\n\r\n/*\r\n    ERC20 Standard Token interface\r\n*/\r\ncontract IERC20Token {\r\n    // these functions aren't abstract since the compiler emits automatically generated getter functions as external\r\n    function name() public constant returns (string) { name; }\r\n    function symbol() public constant returns (string) { symbol; }\r\n    function decimals() public constant returns (uint8) { decimals; }\r\n    function totalSupply() public constant returns (uint256) { totalSupply; }\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) { _owner; balance; }\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) { _owner; _spender; remaining; }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\n\r\n/**\r\n    ERC20 Standard Token implementation\r\n*/\r\ncontract ERC20Token is IERC20Token, Utils {\r\n    string public standard = \"Token 0.1\";\r\n    string public name = \"\";\r\n    string public symbol = \"\";\r\n    uint8 public decimals = 0;\r\n    uint256 public totalSupply = 0;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    /**\r\n        @dev constructor\r\n\r\n        @param _name        token name\r\n        @param _symbol      token symbol\r\n        @param _decimals    decimal points, for display purposes\r\n    */\r\n    function ERC20Token(string _name, string _symbol, uint8 _decimals) {\r\n        require(bytes(_name).length > 0 && bytes(_symbol).length > 0); // validate input\r\n\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n    }\r\n\r\n    /**\r\n        @dev send coins\r\n        throws on any error rather then return a false flag to minimize user errors\r\n\r\n        @param _to      target address\r\n        @param _value   transfer amount\r\n\r\n        @return true if the transfer was successful, false if it wasn't\r\n    */\r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        validAddress(_to)\r\n        returns (bool success)\r\n    {\r\n        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], _value);\r\n        balanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        @dev an account/contract attempts to get the coins\r\n        throws on any error rather then return a false flag to minimize user errors\r\n\r\n        @param _from    source address\r\n        @param _to      target address\r\n        @param _value   transfer amount\r\n\r\n        @return true if the transfer was successful, false if it wasn't\r\n    */\r\n    function transferFrom(address _from, address _to, uint256 _value)\r\n        public\r\n        validAddress(_from)\r\n        validAddress(_to)\r\n        returns (bool success)\r\n    {\r\n        allowance[_from][msg.sender] = safeSub(allowance[_from][msg.sender], _value);\r\n        balanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n        balanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n        @dev allow another account/contract to spend some tokens on your behalf\r\n        throws on any error rather then return a false flag to minimize user errors\r\n\r\n        also, to minimize the risk of the approve/transferFrom attack vector\r\n        (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice\r\n        in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\r\n\r\n        @param _spender approved address\r\n        @param _value   allowance amount\r\n\r\n        @return true if the approval was successful, false if it wasn't\r\n    */\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        validAddress(_spender)\r\n        returns (bool success)\r\n    {\r\n        // if the allowance isn't 0, it can only be updated to 0 to prevent an allowance change immediately after withdrawal\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\n/*\r\n    Owned contract interface\r\n*/\r\ncontract IOwned {\r\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\r\n    function owner() public constant returns (address) { owner; }\r\n\r\n    function transferOwnership(address _newOwner) public;\r\n    function acceptOwnership() public;\r\n}\r\n\r\n/*\r\n    Provides support and utilities for contract ownership\r\n*/\r\ncontract Owned is IOwned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n\r\n    /**\r\n        @dev constructor\r\n    */\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // allows execution by the owner only\r\n    modifier ownerOnly {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n        @dev allows transferring the contract ownership\r\n        the new owner still needs to accept the transfer\r\n        can only be called by the contract owner\r\n\r\n        @param _newOwner    new contract owner\r\n    */\r\n    function transferOwnership(address _newOwner) public ownerOnly {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /**\r\n        @dev used by a new owner to accept an ownership transfer\r\n    */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n}\r\n\r\n/*\r\n    Token Holder interface\r\n*/\r\ncontract ITokenHolder is IOwned {\r\n    function withdrawTokens(IERC20Token _token, address _to, uint256 _amount) public;\r\n}\r\n\r\n\r\ncontract TokenHolder is ITokenHolder, Owned, Utils {\r\n    /**\r\n        @dev constructor\r\n    */\r\n    function TokenHolder() {\r\n    }\r\n\r\n    /**\r\n        @dev withdraws tokens held by the contract and sends them to an account\r\n        can only be called by the owner\r\n\r\n        @param _token   ERC20 token contract address\r\n        @param _to      account to receive the new amount\r\n        @param _amount  amount to withdraw\r\n    */\r\n    function withdrawTokens(IERC20Token _token, address _to, uint256 _amount)\r\n        public\r\n        ownerOnly\r\n        validAddress(_token)\r\n        validAddress(_to)\r\n        notThis(_to)\r\n    {\r\n        assert(_token.transfer(_to, _amount));\r\n    }\r\n}\r\n\r\n\r\ncontract CLRSToken is ERC20Token, TokenHolder {\r\n\r\n///////////////////////////////////////// VARIABLE INITIALIZATION /////////////////////////////////////////\r\n\r\n    uint256 constant public CLRS_UNIT = 10 ** 18;\r\n    uint256 public totalSupply = 86374977 * CLRS_UNIT;\r\n\r\n    //  Constants\r\n    uint256 constant public maxIcoSupply = 48369987 * CLRS_UNIT;           // ICO pool allocation\r\n    uint256 constant public Company = 7773748 * CLRS_UNIT;     //  Company pool allocation\r\n    uint256 constant public Bonus = 16411245 * CLRS_UNIT;  // Bonus Allocation\r\n    uint256 constant public Bounty = 1727500 * CLRS_UNIT;  // Bounty Allocation\r\n    uint256 constant public advisorsAllocation = 4318748 * CLRS_UNIT;          // Advisors Allocation\r\n    uint256 constant public CLRSinTeamAllocation = 7773748 * CLRS_UNIT;    // CLRSin Team allocation\r\n\r\n   // Addresses of Patrons\r\n   address public constant ICOSTAKE = 0xd82896Ea0B5848dc3b75bbECc747947F64077b7c;\r\n   address public constant COMPANY_STAKE_1 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant COMPANY_STAKE_2 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n     address public constant COMPANY_STAKE_3 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n      address public constant COMPANY_STAKE_4 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n       address public constant COMPANY_STAKE_5 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant ADVISOR_1 = 0xf0eB71d3b31fEe5D15220A2ac418A784c962Eb53;\r\n    address public constant ADVISOR_2 = 0xFd6b0691Cd486B4124fFD9FBe9e013463868E2B4;\r\n    address public constant ADVISOR_3 = 0xCFb32aFA7752170043aaC32794397C8673778765;\r\n    address public constant ADVISOR_4 = 0x08441513c0Fc653a739F34A97eF6B2B05609a4E4;\r\n    address public constant ADVISOR_5 = 0xFd6b0691Cd486B4124fFD9FBe9e013463868E2B4;\r\n    address public constant TEAM_1 = 0xc4896CB7486ed8821B525D858c85D4321e8e5685;\r\n    address public constant TEAM_2 = 0x304765b9c3072E54b7397E2F55D1463BD62802C3;\r\n    address public constant TEAM_3 = 0x46abC1d38573E8726c6C0568CC01f35fE5FF4765;\r\n    address public constant TEAM_4 = 0x36Bf4b1DDd796eaf1f962cB0E0327C15096fae41;\r\n    address public constant TEAM_5 = 0xc4896CB7486ed8821B525D858c85D4321e8e5685;\r\n    address public constant BONUS_1 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BONUS_2 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BONUS_3 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BONUS_4 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BONUS_5 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BOUNTY_1 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BOUNTY_2 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BOUNTY_3 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BOUNTY_4 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n    address public constant BOUNTY_5 = 0x19333A742dcd220683C2231c0FAaCcb9c810C0B5;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Stakes of COMPANY\r\nuint256 constant public COMPANY_1 = 7773744 * CLRS_UNIT; //token allocated to  company1\r\nuint256 constant public COMPANY_2 = 1 * CLRS_UNIT; //token allocated to  company1\r\nuint256 constant public COMPANY_3 = 1 * CLRS_UNIT; //token allocated to  company1\r\nuint256 constant public COMPANY_4 = 1 * CLRS_UNIT; //token allocated to  company1\r\nuint256 constant public COMPANY_5 = 1 * CLRS_UNIT; //token allocated to  company1\r\n\r\n// Stakes of ADVISORS\r\nuint256 constant public ADVISOR1 = 863750 * CLRS_UNIT; //token allocated to adv1\r\nuint256 constant public ADVISOR2 = 863750 * CLRS_UNIT; //token allocated to  adv2\r\nuint256 constant public ADVISOR3 = 431875 * CLRS_UNIT; //token allocated to  adv3\r\nuint256 constant public ADVISOR4 = 431875 * CLRS_UNIT; //token allocated to  adv4\r\nuint256 constant public ADVISOR5 = 863750 * CLRS_UNIT; //token allocated to adv5\r\n\r\n\r\n// Stakes of TEAM\r\nuint256 constant public TEAM1 = 3876873 * CLRS_UNIT; //token allocated to  team1\r\nuint256 constant public TEAM2 = 3876874 * CLRS_UNIT; //token allocated to  team2\r\nuint256 constant public TEAM3 = 10000 * CLRS_UNIT; //token allocated to  team3\r\nuint256 constant public TEAM4 = 10000 * CLRS_UNIT; //token allocated to  team4\r\nuint256 constant public TEAM5 = 1 * CLRS_UNIT; //token allocated to  team5\r\n\r\n\r\n// Stakes of BONUS\r\nuint256 constant public BONUS1 = 16411241 * CLRS_UNIT; //token allocated to bonus1\r\nuint256 constant public BONUS2 = 1 * CLRS_UNIT; //token allocated to bonus2\r\nuint256 constant public BONUS3 = 1 * CLRS_UNIT; //token allocated to bonus3\r\nuint256 constant public BONUS4 = 1 * CLRS_UNIT; //token allocated to bonus4\r\nuint256 constant public BONUS5 = 1 * CLRS_UNIT; //token allocated to bonus5\r\n\r\n// Stakes of BOUNTY\r\nuint256 constant public BOUNTY1 = 1727400 * CLRS_UNIT; //token allocated to bounty1\r\nuint256 constant public BOUNTY2 = 1 * CLRS_UNIT; //token allocated to bounty2\r\nuint256 constant public BOUNTY3 = 1 * CLRS_UNIT; //token allocated bounty3\r\nuint256 constant public BOUNTY4 = 1 * CLRS_UNIT; //token allocated bounty4\r\nuint256 constant public BOUNTY5 = 1 * CLRS_UNIT; //token allocated bounty5\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //  Variables\r\n\r\nuint256 public totalAllocatedToCompany = 0;     // Counter to keep track of comapny token allocation\r\nuint256 public totalAllocatedToAdvisor = 0;        // Counter to keep track of advisor token allocation\r\nuint256 public totalAllocatedToTEAM = 0;     // Counter to keep track of team token allocation\r\nuint256 public totalAllocatedToBONUS = 0;        // Counter to keep track of bonus token allocation\r\nuint256 public totalAllocatedToBOUNTY = 0;      // Counter to keep track of bounty token allocation\r\n\r\nuint256 public remaintokensteam=0;\r\nuint256 public remaintokensadvisors=0;\r\nuint256 public remaintokensbounty=0;\r\nuint256 public remaintokensbonus=0;\r\nuint256 public remaintokenscompany=0;\r\nuint256 public totremains=0;\r\n\r\n\r\nuint256 public totalAllocated = 0;             // Counter to keep track of overall token allocation\r\n    uint256 public endTime;                                     // timestamp\r\n\r\n    bool internal isReleasedToPublic = false; // Flag to allow transfer/transferFrom\r\n\r\n    bool public isReleasedToadv = false;\r\n    bool public isReleasedToteam = false;\r\n///////////////////////////////////////// MODIFIERS /////////////////////////////////////////\r\n\r\n    // CLRSin Team timelock\r\n   /* modifier safeTimelock() {\r\n        require(now >= endTime + 52 weeks);\r\n        _;\r\n    }\r\n\r\n    // Advisor Team timelock\r\n    modifier advisorTimelock() {\r\n        require(now >= endTime + 26 weeks);\r\n        _;\r\n    }*/\r\n\r\n\r\n\r\n    ///////////////////////////////////////// CONSTRUCTOR /////////////////////////////////////////\r\n\r\n\r\n    function CLRSToken()\r\n    ERC20Token(\"CLRS\", \"CLRS\", 18)\r\n     {\r\n\r\n\r\n        balanceOf[ICOSTAKE] = maxIcoSupply; // ico CLRS tokens\r\n        balanceOf[COMPANY_STAKE_1] = COMPANY_1; // Company1 CLRS tokens\r\n         balanceOf[COMPANY_STAKE_2] = COMPANY_2; // Company2 CLRS tokens\r\n          balanceOf[COMPANY_STAKE_3] = COMPANY_3; // Company3 CLRS tokens\r\n           balanceOf[COMPANY_STAKE_4] = COMPANY_4; // Company4 CLRS tokens\r\n            balanceOf[COMPANY_STAKE_5] = COMPANY_5; // Company5 CLRS tokens\r\n            totalAllocatedToCompany = safeAdd(totalAllocatedToCompany, COMPANY_1);\r\ntotalAllocatedToCompany = safeAdd(totalAllocatedToCompany, COMPANY_2);\r\ntotalAllocatedToCompany = safeAdd(totalAllocatedToCompany, COMPANY_3);\r\ntotalAllocatedToCompany = safeAdd(totalAllocatedToCompany, COMPANY_4);\r\ntotalAllocatedToCompany = safeAdd(totalAllocatedToCompany, COMPANY_5);\r\n\r\nremaintokenscompany=safeSub(Company,totalAllocatedToCompany);\r\n\r\nbalanceOf[ICOSTAKE]=safeAdd(balanceOf[ICOSTAKE],remaintokenscompany);\r\n\r\n        balanceOf[BONUS_1] = BONUS1;       // bonus1 CLRS tokens\r\n        balanceOf[BONUS_2] = BONUS2;       // bonus2 CLRS tokens\r\n        balanceOf[BONUS_3] = BONUS3;       // bonus3 CLRS tokens\r\n        balanceOf[BONUS_4] = BONUS4;       // bonus4 CLRS tokens\r\n        balanceOf[BONUS_5] = BONUS5;       // bonus5 CLRS tokens\r\n        totalAllocatedToBONUS = safeAdd(totalAllocatedToBONUS, BONUS1);\r\ntotalAllocatedToBONUS = safeAdd(totalAllocatedToBONUS, BONUS2);\r\ntotalAllocatedToBONUS = safeAdd(totalAllocatedToBONUS, BONUS3);\r\ntotalAllocatedToBONUS = safeAdd(totalAllocatedToBONUS, BONUS4);\r\ntotalAllocatedToBONUS = safeAdd(totalAllocatedToBONUS, BONUS5);\r\n\r\nremaintokensbonus=safeSub(Bonus,totalAllocatedToBONUS);\r\n\r\nbalanceOf[ICOSTAKE]=safeAdd(balanceOf[ICOSTAKE],remaintokensbonus);\r\n\r\n        balanceOf[BOUNTY_1] = BOUNTY1;       // BOUNTY1 CLRS tokens\r\n        balanceOf[BOUNTY_2] = BOUNTY2;       // BOUNTY2 CLRS tokens\r\n        balanceOf[BOUNTY_3] = BOUNTY3;       // BOUNTY3 CLRS tokens\r\n        balanceOf[BOUNTY_4] = BOUNTY4;       // BOUNTY4 CLRS tokens\r\n        balanceOf[BOUNTY_5] = BOUNTY5;       // BOUNTY5 CLRS tokens\r\n\r\ntotalAllocatedToBOUNTY = safeAdd(totalAllocatedToBOUNTY, BOUNTY1);\r\ntotalAllocatedToBOUNTY = safeAdd(totalAllocatedToBOUNTY, BOUNTY2);\r\ntotalAllocatedToBOUNTY = safeAdd(totalAllocatedToBOUNTY, BOUNTY3);\r\ntotalAllocatedToBOUNTY = safeAdd(totalAllocatedToBOUNTY, BOUNTY4);\r\ntotalAllocatedToBOUNTY = safeAdd(totalAllocatedToBOUNTY, BOUNTY5);\r\n\r\nremaintokensbounty=safeSub(Bounty,totalAllocatedToBOUNTY);\r\nbalanceOf[ICOSTAKE]=safeAdd(balanceOf[ICOSTAKE],remaintokensbounty);\r\n\r\n\r\n        allocateAdvisorTokens() ;\r\n        allocateCLRSinTeamTokens();\r\n\r\n\r\n        totremains=safeAdd(totremains,remaintokenscompany);\r\n        totremains=safeAdd(totremains,remaintokensbounty);\r\n        totremains=safeAdd(totremains,remaintokensbonus);\r\n        totremains=safeAdd(totremains,remaintokensteam);\r\n        totremains=safeAdd(totremains,remaintokensadvisors);\r\n\r\n\r\n\r\n  burnTokens(totremains);\r\n\r\ntotalAllocated += maxIcoSupply+ totalAllocatedToCompany+ totalAllocatedToBONUS + totalAllocatedToBOUNTY;  // Add to total Allocated funds\r\n    }\r\n\r\n///////////////////////////////////////// ERC20 OVERRIDE /////////////////////////////////////////\r\n\r\n    /**\r\n        @dev send coins\r\n        throws on any error rather then return a false flag to minimize user errors\r\n        in addition to the standard checks, the function throws if transfers are disabled\r\n\r\n        @param _to      target address\r\n        @param _value   transfer amount\r\n\r\n        @return true if the transfer was successful, throws if it wasn't\r\n    */\r\n    /*function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if (isTransferAllowed() == true) {\r\n            assert(super.transfer(_to, _value));\r\n            return true;\r\n        }\r\n        revert();\r\n    }\r\n\r\n    /**\r\n        @dev an account/contract attempts to get the coins\r\n        throws on any error rather then return a false flag to minimize user errors\r\n        in addition to the standard checks, the function throws if transfers are disabled\r\n\r\n        @param _from    source address\r\n        @param _to      target address\r\n        @param _value   transfer amount\r\n\r\n        @return true if the transfer was successful, throws if it wasn't\r\n    */\r\n   /* function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        if (isTransferAllowed() == true ) {\r\n            assert(super.transferFrom(_from, _to, _value));\r\n            return true;\r\n        }\r\n\r\n        revert();\r\n    }*/\r\n\r\n\r\n     /**\r\n     * Allow transfer only after finished\r\n     */\r\n        //allows to dissable transfers while minting and in case of emergency\r\n\r\n\r\n\r\n    modifier canTransfer() {\r\n        require( isTransferAllowedteam()==true );\r\n        _;\r\n    }\r\n\r\n   modifier canTransferadv() {\r\n        require( isTransferAllowedadv()==true );\r\n        _;\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) canTransfer canTransferadv public returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) canTransfer canTransferadv public returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////////////// ALLOCATION FUNCTIONS /////////////////////////////////////////\r\n\r\n\r\n    function allocateCLRSinTeamTokens() public returns(bool success) {\r\n        require(totalAllocatedToTEAM < CLRSinTeamAllocation);\r\n\r\n        balanceOf[TEAM_1] = safeAdd(balanceOf[TEAM_1], TEAM1);       // TEAM1 CLRS tokens\r\n        balanceOf[TEAM_2] = safeAdd(balanceOf[TEAM_2], TEAM2);       // TEAM2 CLRS tokens\r\n        balanceOf[TEAM_3] = safeAdd(balanceOf[TEAM_3], TEAM3);        // TEAM3 CLRS tokens\r\n        balanceOf[TEAM_4] = safeAdd(balanceOf[TEAM_4], TEAM4);        // TEAM4 CLRS tokens\r\n        balanceOf[TEAM_5] = safeAdd(balanceOf[TEAM_5], TEAM5);       // TEAM5 CLRS tokens\r\n       /*Transfer(0x0, TEAM_1, TEAM1);\r\n       Transfer(0x0, TEAM_2, TEAM2);\r\n       Transfer(0x0, TEAM_3, TEAM3);\r\n       Transfer(0x0, TEAM_4, TEAM4);\r\n       Transfer(0x0, TEAM_5, TEAM5);*/\r\n\r\n       totalAllocatedToTEAM = safeAdd(totalAllocatedToTEAM, TEAM1);\r\ntotalAllocatedToTEAM = safeAdd(totalAllocatedToTEAM, TEAM2);\r\ntotalAllocatedToTEAM = safeAdd(totalAllocatedToTEAM, TEAM3);\r\ntotalAllocatedToTEAM = safeAdd(totalAllocatedToTEAM, TEAM4);\r\ntotalAllocatedToTEAM = safeAdd(totalAllocatedToTEAM, TEAM5);\r\n\r\ntotalAllocated +=  totalAllocatedToTEAM;\r\n\r\n\r\n remaintokensteam=safeSub(CLRSinTeamAllocation,totalAllocatedToTEAM);\r\n\r\nbalanceOf[ICOSTAKE]=safeAdd(balanceOf[ICOSTAKE],remaintokensteam);\r\n\r\n            return true;\r\n\r\n\r\n    }\r\n\r\n\r\n    function allocateAdvisorTokens() public returns(bool success) {\r\n        require(totalAllocatedToAdvisor < advisorsAllocation);\r\n\r\n        balanceOf[ADVISOR_1] = safeAdd(balanceOf[ADVISOR_1], ADVISOR1);\r\n        balanceOf[ADVISOR_2] = safeAdd(balanceOf[ADVISOR_2], ADVISOR2);\r\n        balanceOf[ADVISOR_3] = safeAdd(balanceOf[ADVISOR_3], ADVISOR3);\r\n        balanceOf[ADVISOR_4] = safeAdd(balanceOf[ADVISOR_4], ADVISOR4);\r\n        balanceOf[ADVISOR_5] = safeAdd(balanceOf[ADVISOR_5], ADVISOR5);\r\n       /*Transfer(0x0, ADVISOR_1, ADVISOR1);\r\n       Transfer(0x0, ADVISOR_2, ADVISOR2);\r\n       Transfer(0x0, ADVISOR_3, ADVISOR3);\r\n       Transfer(0x0, ADVISOR_4, ADVISOR4);\r\n       Transfer(0x0, ADVISOR_5, ADVISOR5);*/\r\n\r\n       totalAllocatedToAdvisor = safeAdd(totalAllocatedToAdvisor, ADVISOR1);\r\ntotalAllocatedToAdvisor = safeAdd(totalAllocatedToAdvisor, ADVISOR2);\r\ntotalAllocatedToAdvisor = safeAdd(totalAllocatedToAdvisor, ADVISOR3);\r\ntotalAllocatedToAdvisor = safeAdd(totalAllocatedToAdvisor, ADVISOR4);\r\ntotalAllocatedToAdvisor = safeAdd(totalAllocatedToAdvisor, ADVISOR5);\r\n\r\ntotalAllocated +=  totalAllocatedToAdvisor;\r\n\r\n\r\nremaintokensadvisors=safeSub(advisorsAllocation,totalAllocatedToAdvisor);\r\n\r\nbalanceOf[ICOSTAKE]=safeAdd(balanceOf[ICOSTAKE],remaintokensadvisors);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function releaseAdvisorTokens() ownerOnly {\r\n\r\n         isReleasedToadv = true;\r\n\r\n\r\n    }\r\n\r\n     function releaseCLRSinTeamTokens() ownerOnly  {\r\n\r\n         isReleasedToteam = true;\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function burnTokens(uint256 _value) ownerOnly returns(bool success) {\r\n        uint256 amountOfTokens = _value;\r\n\r\n        balanceOf[msg.sender]=safeSub(balanceOf[msg.sender], amountOfTokens);\r\n        totalSupply=safeSub(totalSupply, amountOfTokens);\r\n        Transfer(msg.sender, 0x0, amountOfTokens);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n        @dev Function to allow transfers\r\n        can only be called by the owner of the contract\r\n        Transfers will be allowed regardless after the crowdfund end time.\r\n    */\r\n    function allowTransfers() ownerOnly {\r\n        isReleasedToPublic = true;\r\n\r\n    }\r\n\r\n    function starttime() ownerOnly {\r\nendTime =  now;\r\n\t}\r\n\r\n\r\n    /**\r\n        @dev User transfers are allowed/rejected\r\n        Transfers are forbidden before the end of the crowdfund\r\n    */\r\n    function isTransferAllowedteam() public returns(bool)\r\n    {\r\n\r\n        if (isReleasedToteam==true)\r\n        return true;\r\n\r\n        if(now < endTime + 52 weeks)\r\n\r\n{\r\nif(msg.sender==TEAM_1 || msg.sender==TEAM_2 || msg.sender==TEAM_3 || msg.sender==TEAM_4 || msg.sender==TEAM_5)\r\n\r\nreturn false;\r\n\r\n\r\n}\r\n\r\n\r\nreturn true;\r\n    }\r\n\r\n\r\n function isTransferAllowedadv() public returns(bool)\r\n    {\r\n        if (isReleasedToadv==true)\r\n        return true;\r\n\r\n\r\n\r\n\r\n        if(now < endTime + 26 weeks)\r\n\r\n{\r\nif(msg.sender==ADVISOR_1 || msg.sender==ADVISOR_2 || msg.sender==ADVISOR_3 || msg.sender==ADVISOR_4 || msg.sender==ADVISOR_5)\r\n\r\nreturn false;\r\n\r\n\r\n}\r\n\r\nreturn true;\r\n    }\r\n\r\n\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"CLRS_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_STAKE_4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totremains\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocatedToTEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseAdvisorTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_5\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLRSinTeamAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocatedToBOUNTY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_STAKE_5\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocatedToAdvisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allowTransfers\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaintokensbonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseCLRSinTeamTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaintokenscompany\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY_1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateCLRSinTeamTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOSTAKE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_STAKE_3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Company\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY_4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isTransferAllowedadv\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_STAKE_1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY_5\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR_1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isReleasedToadv\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxIcoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateAdvisorTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaintokensadvisors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"starttime\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_5\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR_5\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY_3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaintokensteam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocatedToCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Bounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR_3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaintokensbounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR_2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISOR_4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPANY_STAKE_2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY_2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isTransferAllowedteam\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BOUNTY1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocatedToBONUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorsAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isReleasedToteam\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]","ContractName":"CLRSToken","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://74a4bc2e2672ee732f90bea10d135d1bc30074c47fb6e7a38e227362e97bab9b"}]}