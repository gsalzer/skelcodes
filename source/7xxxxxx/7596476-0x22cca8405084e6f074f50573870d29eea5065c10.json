{"status":"1","message":"OK","result":[{"SourceCode":"//---------------------------------------------------------\r\n//      _  _____    ____ ___ ___ _   _\r\n//     / \\|_   _|  / ___/ _ \\_ _| \\ | |\r\n//    / _ \\ | |   | |  | | | | ||  \\| |\r\n//   / ___ \\| |   | |__| |_| | || |\\  |\r\n//  /_/   \\_\\_|    \\____\\___/___|_| \\_|\r\n//\r\n//---------------------------------------------------------\r\n//  新增  1、setCtrlToken\r\n//        2、approveAuto\r\n//  用于BANCOR自动批准代币的转账限额\r\n//---------------------------------------------------------\r\n\r\npragma solidity ^0.4.25;\r\n\r\ncontract ERC20ext\r\n{\r\n    // stand\r\n    function totalSupply() public constant returns (uint supply);\r\n    function balanceOf(address who) public constant returns (uint value);\r\n    function allowance(address owner, address spender) public constant returns (uint _allowance);\r\n\r\n    function transfer(address to, uint value) public returns (bool ok);\r\n    function transferFrom(address from, address to, uint value) public returns (bool ok);\r\n    function approve(address spender, uint value) public returns (bool ok);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n\r\n    // extand\r\n    function setCtrlToken(address newToken) public returns (bool ok);\r\n    function approveAuto(address spender, uint value ) public returns (bool ok);\r\n\r\n    function appointNewCFO(address newCFO) public returns (bool ok);\r\n    function melt(address dst, uint256 wad) public returns (bool ok);\r\n    function mint(address dst, uint256 wad) public returns (bool ok);\r\n    function freeze(address dst, bool flag) public returns (bool ok);\r\n\r\n    event MeltEvent(address indexed dst, uint256 wad);\r\n    event MintEvent(address indexed dst, uint256 wad);\r\n    event FreezeEvent(address indexed dst, bool flag);\r\n}\r\n\r\n//---------------------------------------------------------\r\n// SafeMath 是一个安全数字运算的合约\r\n//---------------------------------------------------------\r\ncontract SafeMath\r\n{\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c)\r\n    {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        // uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c)\r\n    {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------\r\n// atToken 是一个增强版ERC20合约\r\n//---------------------------------------------------------\r\ncontract atToken is ERC20ext,SafeMath\r\n{\r\n    string public name;\r\n    string public symbol;\r\n    uint8  public decimals = 18;\r\n\r\n    // 用于设置批准的TOKEN地址\r\n    address _token;\r\n\r\n    address _cfo;\r\n    uint256 _supply;\r\n\r\n    //帐户的余额列表\r\n    mapping (address => uint256) _balances;\r\n\r\n    //帐户的转账限额\r\n    mapping (address => mapping (address => uint256)) _allowance;\r\n\r\n    //帐户的资金冻结\r\n    mapping (address => bool) public _frozen;\r\n\r\n    //-----------------------------------------------\r\n    // 初始化合约，并把所有代币都给CFO\r\n    //-----------------------------------------------\r\n    //   @param initialSupply 发行总量\r\n    //   @param tokenName     代币名称\r\n    //   @param tokenSymbol   代币符号\r\n    //-----------------------------------------------\r\n    constructor(uint256 initialSupply,string tokenName,string tokenSymbol) public\r\n    {\r\n        // validate input\r\n        require(bytes(tokenName).length > 0 && bytes(tokenSymbol).length > 0);\r\n\r\n        _token  = msg.sender;\r\n        _cfo    = msg.sender;\r\n\r\n        _supply = initialSupply * 10 ** uint256(decimals);\r\n        _balances[_cfo] = _supply;\r\n\r\n        name   = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 判断合约调用者是否 CFO\r\n    //-----------------------------------------------\r\n    modifier onlyCFO()\r\n    {\r\n        require(msg.sender == _cfo);\r\n        _;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 判断合约调用者是否 Ctrl Token\r\n    //-----------------------------------------------\r\n    modifier onlyCtrlToken()\r\n    {\r\n        require(msg.sender == _token);\r\n        _;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 获取货币供应量\r\n    //-----------------------------------------------\r\n    function totalSupply() public constant returns (uint256)\r\n    {\r\n        return _supply;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 查询账户余额\r\n    //-----------------------------------------------\r\n    // @param  src 帐户地址\r\n    //-----------------------------------------------\r\n    function balanceOf(address src) public constant returns (uint256)\r\n    {\r\n        return _balances[src];\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 查询账户转账限额\r\n    //-----------------------------------------------\r\n    // @param  src 来源帐户地址\r\n    // @param  dst 目标帐户地址\r\n    //-----------------------------------------------\r\n    function allowance(address src, address dst) public constant returns (uint256)\r\n    {\r\n        return _allowance[src][dst];\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 账户转账\r\n    //-----------------------------------------------\r\n    // @param  dst 目标帐户地址\r\n    // @param  wad 转账金额\r\n    //-----------------------------------------------\r\n    function transfer(address dst, uint wad) public returns (bool)\r\n    {\r\n        //检查冻结帐户\r\n        require(!_frozen[msg.sender]);\r\n        require(!_frozen[dst]);\r\n\r\n        //检查帐户余额\r\n        require(_balances[msg.sender] >= wad);\r\n\r\n        _balances[msg.sender] = sub(_balances[msg.sender],wad);\r\n        _balances[dst]        = add(_balances[dst], wad);\r\n\r\n        emit Transfer(msg.sender, dst, wad);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    //-----------------------------------------------\r\n    // 账户转账带检查限额\r\n    //-----------------------------------------------\r\n    // @param  src 来源帐户地址\r\n    // @param  dst 目标帐户地址\r\n    // @param  wad 转账金额\r\n    //-----------------------------------------------\r\n    function transferFrom(address src, address dst, uint wad) public returns (bool)\r\n    {\r\n        //检查冻结帐户\r\n        require(!_frozen[msg.sender]);\r\n        require(!_frozen[dst]);\r\n\r\n        //检查帐户余额\r\n        require(_balances[src] >= wad);\r\n\r\n        //检查帐户限额\r\n        require(_allowance[src][msg.sender] >= wad);\r\n\r\n        _allowance[src][msg.sender] = sub(_allowance[src][msg.sender],wad);\r\n\r\n        _balances[src] = sub(_balances[src],wad);\r\n        _balances[dst] = add(_balances[dst],wad);\r\n\r\n        //转账事件\r\n        emit Transfer(src, dst, wad);\r\n\r\n        return true;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 设置转账限额\r\n    //-----------------------------------------------\r\n    // @param  dst 目标帐户地址\r\n    // @param  wad 限制金额\r\n    //-----------------------------------------------\r\n    function approve(address dst, uint256 wad) public returns (bool)\r\n    {\r\n        _allowance[msg.sender][dst] = wad;\r\n\r\n        //设置事件\r\n        emit Approval(msg.sender, dst, wad);\r\n        return true;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 设置自动累计转账限额\r\n    //-----------------------------------------------\r\n    // @param  dst 目标帐户地址\r\n    // @param  wad 限制金额\r\n    //-----------------------------------------------\r\n    function approveAuto(address src, uint256 wad) onlyCtrlToken public returns (bool)\r\n    {\r\n        _allowance[src][msg.sender] = wad;\r\n        return true;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 设置 CTRL TOKEN 地址\r\n    //-----------------------------------------------\r\n    // @param  token 新的CTRL TOKEN地址\r\n    //-----------------------------------------------\r\n    function setCtrlToken(address NewToken) onlyCFO public returns (bool)\r\n    {\r\n        if (NewToken != _token)\r\n        {\r\n            _token = NewToken;\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 任命新的CFO\r\n    //-----------------------------------------------\r\n    // @param  newCFO 新的CFO帐户地址\r\n    //-----------------------------------------------\r\n    function appointNewCFO(address newCFO) onlyCFO public returns (bool)\r\n    {\r\n        if (newCFO != _cfo)\r\n        {\r\n            _cfo = newCFO;\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 冻结帐户\r\n    //-----------------------------------------------\r\n    // @param  dst  目标帐户地址\r\n    // @param  flag 冻结\r\n    //-----------------------------------------------\r\n    function freeze(address dst, bool flag) onlyCFO public returns (bool)\r\n    {\r\n        _frozen[dst] = flag;\r\n\r\n        //冻结帐户事件\r\n        emit FreezeEvent(dst, flag);\r\n        return true;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 铸造代币\r\n    //-----------------------------------------------\r\n    // @param  dst  目标帐户地址\r\n    // @param  wad  铸造金额\r\n    //-----------------------------------------------\r\n    function mint(address dst, uint256 wad) onlyCFO public returns (bool)\r\n    {\r\n        //目标帐户地址铸造代币,同时更新总量\r\n        _balances[dst] = add(_balances[dst],wad);\r\n        _supply        = add(_supply,wad);\r\n\r\n        //铸造代币事件\r\n        emit MintEvent(dst, wad);\r\n        return true;\r\n    }\r\n\r\n    //-----------------------------------------------\r\n    // 销毁代币\r\n    //-----------------------------------------------\r\n    // @param  dst  目标帐户地址\r\n    // @param  wad  销毁金额\r\n    //-----------------------------------------------\r\n    function melt(address dst, uint256 wad) onlyCFO public returns (bool)\r\n    {\r\n        //检查帐户余额\r\n        require(_balances[dst] >= wad);\r\n\r\n        //销毁目标帐户地址代币,同时更新总量\r\n        _balances[dst] = sub(_balances[dst],wad);\r\n        _supply        = sub(_supply,wad);\r\n\r\n        //销毁代币事件\r\n        emit MeltEvent(dst, wad);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NewToken\",\"type\":\"address\"}],\"name\":\"setCtrlToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approveAuto\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCFO\",\"type\":\"address\"}],\"name\":\"appointNewCFO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"melt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"MeltEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"MintEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"FreezeEvent\",\"type\":\"event\"}]","ContractName":"atToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000023c34600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004504c4159000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004504c415900000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://9dc61da39ca84e0533e58e63db681ec15a85ea8d43bc3c261c86029e14fc7416"}]}