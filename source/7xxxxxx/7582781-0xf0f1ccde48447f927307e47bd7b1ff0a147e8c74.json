{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\ncontract zDappRunner {  \r\n\taddress payable gadrOwner;\r\n\tuint32 gnEntryCount = 0;\r\n\r\n\tstruct clsEntry {\r\n\t\taddress adrCreator;\r\n\t\tbool bDisabled;\r\n\t}\r\n\r\n\tmapping(bytes32 => clsEntry) gmapEntry;\r\n\tmapping (uint => bytes32) gmapEntryIndex;\r\n\r\n\tconstructor() public { gadrOwner = msg.sender; }\r\n\r\n\tmodifier onlyByOwner()\r\n\t{\r\n\t\trequire(\r\n\t\t\tmsg.sender == gadrOwner, \"Sender not authorized.\"\r\n\t\t);\r\n\t\t_;\r\n\t}\r\n\r\n\tevent Entries(bytes32 indexed b32AlphaID, address indexed adrCreator, uint indexed nDateCreated, string sParms);\r\n\r\n\tfunction zKill() onlyByOwner() external {selfdestruct (gadrOwner);}\r\n\t\r\n\tfunction zGetAllEntries() external view returns (bytes32[] memory ab32AlphaID, address[] memory aadrCreator, bool[] memory abDisabled) {\r\n\t\tab32AlphaID = new bytes32[](gnEntryCount);\r\n\t\taadrCreator = new address[](gnEntryCount);\r\n\t\tabDisabled = new bool[](gnEntryCount);\r\n\t\r\n\t\tfor (uint i = 0; i < gnEntryCount; i++) {\r\n\t\t\tclsEntry memory objEntry = gmapEntry[gmapEntryIndex[i]];\r\n\t\t\tab32AlphaID[i] = gmapEntryIndex[i];\r\n\t\t\taadrCreator[i] = objEntry.adrCreator;\r\n\t\t\tabDisabled[i] = objEntry.bDisabled;\r\n\t\t}\t\r\n\t}\r\n\r\n\tfunction zAddEntry(bytes32 b32AlphaID, string calldata sParms) external {\r\n\t\tgmapEntry[b32AlphaID].adrCreator = msg.sender;\r\n\t\tgmapEntryIndex[gnEntryCount] = b32AlphaID;\r\n\t\tgnEntryCount++;\r\n\t\temit Entries(b32AlphaID, msg.sender, block.timestamp, sParms);\r\n\t}\r\n\r\n\tfunction zSetDisabled(bytes32 b32AlphaID, bool bDisabled) external {\r\n\t\trequire(msg.sender == gadrOwner || msg.sender == gmapEntry[b32AlphaID].adrCreator);\r\n\t\tgmapEntry[b32AlphaID].bDisabled = bDisabled;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"b32AlphaID\",\"type\":\"bytes32\"},{\"name\":\"bDisabled\",\"type\":\"bool\"}],\"name\":\"zSetDisabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"b32AlphaID\",\"type\":\"bytes32\"},{\"name\":\"sParms\",\"type\":\"string\"}],\"name\":\"zAddEntry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetAllEntries\",\"outputs\":[{\"name\":\"ab32AlphaID\",\"type\":\"bytes32[]\"},{\"name\":\"aadrCreator\",\"type\":\"address[]\"},{\"name\":\"abDisabled\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zKill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"b32AlphaID\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"adrCreator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"nDateCreated\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sParms\",\"type\":\"string\"}],\"name\":\"Entries\",\"type\":\"event\"}]","ContractName":"zDappRunner","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://35261e317f707b5e4667ecf9cab3be2ad3c70d16e5d18d456912ca543b0b5100"}]}