{"status":"1","message":"OK","result":[{"SourceCode":"# @title Vyper loveregister contract\r\n# @author Kevin Foesenek\r\n\r\n#Struct\r\nstruct register: \r\n    owner1: address\r\n    owner1_name: string[120]\r\n    owner2: address\r\n    owner2_name: string[120]\r\n    message: string[280]\r\n    private_message: string[280]\r\n    alive: bool\r\n\r\n# Events\r\nRegister: event({_from: indexed(address), _to: indexed(address), identifier: bytes32})\r\nSearch: event({Owner: indexed(address), _Identifier: bytes32})\r\n\r\n# Variables contract owner\r\nowner1: public(address)\r\nowner2: public(address)\r\npayment_address: public(address)\r\nprice: public(wei_value)\r\n\r\n# Variables ERC20 \r\nname: public(string[64])\r\nregister_entries: public(map(bytes32, register))\r\nregister_totalEntries: public(uint256)\r\nregister_publicmessage: public(map(uint256, string[280]))\r\nregister_identifier: map(address, bytes32)\r\n\r\n# Constructor\r\n@public\r\ndef __init__(_name: string[64], _price: wei_value):\r\n        self.name = _name\r\n        self.owner1 = msg.sender\r\n        self.price = _price\r\n        self.payment_address = msg.sender\r\n\r\n# Function to set second owner\r\n@public\r\ndef setsecondowner(newowner: address):\r\n    assert self.owner1 == msg.sender or self.owner2 == msg.sender\r\n    self.owner2 = newowner\r\n        \r\n# Function to set price\r\n@public\r\ndef setprice(newprice: wei_value):\r\n    assert self.owner1 == msg.sender or self.owner2 == msg.sender\r\n    self.price = newprice\r\n\r\n# Function to change payment address\r\n@public\r\ndef changepaymentaddress(newaddress: address):\r\n    assert self.owner1 == msg.sender or self.owner2 == msg.sender\r\n    self.payment_address = newaddress\r\n\r\n# Function to send amount of ETH to owner determined address\r\n@public\r\ndef clear_valuecontract():\r\n    assert self.owner1 == msg.sender or self.owner2 == msg.sender\r\n    receiver: address = self.payment_address\r\n    amount: wei_value = self.balance\r\n    send(receiver, amount)\r\n    \r\n# Function to register\r\n@public\r\n@payable\r\ndef newRegister(_from: address, _fromName: string[120], _for: address, _forName: string[120], message: string[280], privatenote: string[280]):\r\n    index_entries: uint256 = self.register_totalEntries\r\n    \r\n    hash_index_entries: bytes32 = sha3(convert(index_entries, bytes32))\r\n    \r\n    assert _from != ZERO_ADDRESS\r\n    assert _for != ZERO_ADDRESS\r\n    assert msg.value >= self.price\r\n    self.register_entries[hash_index_entries] = register({owner1: _from, owner1_name: _fromName, owner2: _for, owner2_name: _forName, \r\n    message: message, private_message: privatenote, alive: True})\r\n    \r\n    self.register_publicmessage[index_entries] = message\r\n    self.register_identifier[_from] = hash_index_entries\r\n    \r\n    index_entries += 1\r\n    self.register_totalEntries = index_entries\r\n    log.Register(_from, _for, hash_index_entries)\r\n    \r\n# Function to deregister -> note it only closes the entry - removal is not possible\r\n@public\r\ndef deRegister(register_entry: bytes32):\r\n    assert self.register_entries[register_entry].owner1 == msg.sender or self.register_entries[register_entry].owner2 == msg.sender\r\n    self.register_entries[register_entry].alive = False\r\n\r\n#Function to find the identifier for a relationship \r\n@public\r\ndef findIdentifier():\r\n    log.Search(msg.sender, self.register_identifier[msg.sender])","ABI":"[{\"name\":\"Register\",\"inputs\":[{\"type\":\"address\",\"name\":\"_from\",\"indexed\":true},{\"type\":\"address\",\"name\":\"_to\",\"indexed\":true},{\"type\":\"bytes32\",\"name\":\"identifier\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Search\",\"inputs\":[{\"type\":\"address\",\"name\":\"Owner\",\"indexed\":true},{\"type\":\"bytes32\",\"name\":\"_Identifier\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"__init__\",\"outputs\":[],\"inputs\":[{\"type\":\"string\",\"name\":\"_name\"},{\"type\":\"uint256\",\"name\":\"_price\",\"unit\":\"wei\"}],\"constant\":false,\"payable\":false,\"type\":\"constructor\"},{\"name\":\"setsecondowner\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"newowner\"}],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":35838},{\"name\":\"setprice\",\"outputs\":[],\"inputs\":[{\"type\":\"uint256\",\"name\":\"newprice\",\"unit\":\"wei\"}],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":35829},{\"name\":\"changepaymentaddress\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"newaddress\"}],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":35898},{\"name\":\"clear_valuecontract\",\"outputs\":[],\"inputs\":[],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":36297},{\"name\":\"newRegister\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"_from\"},{\"type\":\"string\",\"name\":\"_fromName\"},{\"type\":\"address\",\"name\":\"_for\"},{\"type\":\"string\",\"name\":\"_forName\"},{\"type\":\"string\",\"name\":\"message\"},{\"type\":\"string\",\"name\":\"privatenote\"}],\"constant\":false,\"payable\":true,\"type\":\"function\",\"gas\":1587599},{\"name\":\"deRegister\",\"outputs\":[],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"register_entry\"}],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":21519},{\"name\":\"findIdentifier\",\"outputs\":[],\"inputs\":[],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":2483},{\"name\":\"owner1\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":693},{\"name\":\"owner2\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":723},{\"name\":\"payment_address\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":753},{\"name\":\"price\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"out\",\"unit\":\"wei\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":783},{\"name\":\"name\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":11757},{\"name\":\"register_entries__owner1\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":1048},{\"name\":\"register_entries__owner1_name\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":21126},{\"name\":\"register_entries__owner2\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":1114},{\"name\":\"register_entries__owner2_name\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":21186},{\"name\":\"register_entries__message\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":46942},{\"name\":\"register_entries__private_message\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":46972},{\"name\":\"register_entries__alive\",\"outputs\":[{\"type\":\"bool\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"bytes32\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":1234},{\"name\":\"register_totalEntries\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":1053},{\"name\":\"register_publicmessage\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":46984}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.1.0b8","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000470de4df82000000000000000000000000000000000000000000000000000000000000000000046c6f766500000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":""}]}