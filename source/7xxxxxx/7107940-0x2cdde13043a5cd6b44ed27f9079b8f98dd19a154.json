{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original \"owner\" of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor () public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract PricingScheme is Ownable {\r\n  using SafeMath for uint;\r\n\r\n  address public feeWallet;\r\n\r\n  constructor() public {\r\n    feeWallet = msg.sender;\r\n  }\r\n\r\n  function setFeeWallet(address _feeWallet) public onlyOwner {\r\n    feeWallet = _feeWallet;\r\n  }\r\n\r\n  uint public defaultMonthlyFeeInWei = 1e17;\r\n  uint public defaultYearlyFeeInWei = 1e17;\r\n\r\n  uint public exclusiveSetupFeeInWei;\r\n  uint public exclusiveYearlyFeeInWei;\r\n\r\n  uint public vipSetupFeeInWei;\r\n  uint public vipYearlyFeeInWei;\r\n\r\n  mapping (address => uint) public dappMonthlyFeeInWei;\r\n  mapping (address => uint) public dappYearlyFeeInWei;\r\n\r\n  mapping (address => mapping (address => uint)) public lastMonthlySubscribed;\r\n  mapping (address => mapping (address => uint)) public lastYearlySubscribed;\r\n\r\n  mapping (address => bool) public vipSubscribed;\r\n  mapping (address => bool) public exclusiveSubscribed;\r\n  mapping (address => uint) public lastVipYearlyFeePaid;\r\n  mapping (address => uint) public lastExclusiveYearlyFeePaid;\r\n\r\n  function setExclusiveFee(uint _setupFee, uint _yearlyFee) public onlyOwner {\r\n    exclusiveSetupFeeInWei = _setupFee;\r\n    exclusiveYearlyFeeInWei = _yearlyFee;\r\n  }\r\n\r\n  function setVipFee(uint _setupFee, uint _yearlyFee) public onlyOwner {\r\n    vipSetupFeeInWei = _setupFee;\r\n    vipYearlyFeeInWei = _yearlyFee;\r\n  }\r\n\r\n  function setDefaultFee(uint _monthlyFee, uint _yearlyFee) public onlyOwner {\r\n    defaultMonthlyFeeInWei = _monthlyFee;\r\n    defaultYearlyFeeInWei = _yearlyFee;\r\n  }\r\n\r\n  function setDappMonthlyFee(address _dappContractAddress, uint _monthlyFee) public onlyOwner {\r\n    dappMonthlyFeeInWei[_dappContractAddress] = _monthlyFee;\r\n  }\r\n\r\n  function setDappYearlyFee(address _dappContractAddress, uint _yearlyFee) public onlyOwner {\r\n    dappYearlyFeeInWei[_dappContractAddress] = _yearlyFee;\r\n  }\r\n\r\n  function subscribeDappMonthly(address _dappContractAddress) public payable {\r\n    uint fee = dappMonthlyFeeInWei[_dappContractAddress];\r\n    if (fee == 0) fee = defaultMonthlyFeeInWei;\r\n\r\n    require(msg.value >= fee);\r\n\r\n    lastMonthlySubscribed[msg.sender][_dappContractAddress] = now;\r\n\r\n\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function subscribeDappYearly(address _dappContractAddress) public payable {\r\n    uint fee = dappYearlyFeeInWei[_dappContractAddress];\r\n    if (fee == 0) fee = defaultYearlyFeeInWei;\r\n\r\n    require(msg.value >= fee);\r\n\r\n    lastYearlySubscribed[msg.sender][_dappContractAddress] = now;\r\n\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function subscribeVip() public payable {\r\n    require(msg.value >= vipSetupFeeInWei);\r\n    vipSubscribed[msg.sender] = true;\r\n    lastVipYearlyFeePaid[msg.sender] = now;\r\n\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function subscribeExclusive() public payable {\r\n    require(msg.value >= exclusiveSetupFeeInWei);\r\n    exclusiveSubscribed[msg.sender] = true;\r\n    lastExclusiveYearlyFeePaid[msg.sender] = now;\r\n\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function payVipYearlyFee() public payable {\r\n    require(msg.value >= vipYearlyFeeInWei);\r\n    lastVipYearlyFeePaid[msg.sender] = now;\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function payExclusiveYearlyFee() public payable {\r\n    require(msg.value >= exclusiveYearlyFeeInWei);\r\n    lastExclusiveYearlyFeePaid[msg.sender] = now;\r\n    feeWallet.transfer(msg.value);\r\n  }\r\n\r\n  function canUseDapp(address user, address _dappContractAddress) public view returns (bool) {\r\n    if (now.sub(365 days) < lastVipYearlyFeePaid[user]) {\r\n      return true;\r\n    } else if (now.sub(356 days) < lastExclusiveYearlyFeePaid[user]) {\r\n      return true;\r\n    } else if (now.sub(365 days) < lastYearlySubscribed[user][_dappContractAddress]) {\r\n      return true;\r\n    } else if (now.sub(30 days) < lastMonthlySubscribed[user][_dappContractAddress]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastYearlySubscribed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dappContractAddress\",\"type\":\"address\"}],\"name\":\"subscribeDappYearly\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"subscribeVip\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payExclusiveYearlyFee\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"exclusiveSubscribed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dappContractAddress\",\"type\":\"address\"}],\"name\":\"subscribeDappMonthly\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"subscribeExclusive\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dappMonthlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupFee\",\"type\":\"uint256\"},{\"name\":\"_yearlyFee\",\"type\":\"uint256\"}],\"name\":\"setExclusiveFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultYearlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dappContractAddress\",\"type\":\"address\"},{\"name\":\"_yearlyFee\",\"type\":\"uint256\"}],\"name\":\"setDappYearlyFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vipYearlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"setFeeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultMonthlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"_dappContractAddress\",\"type\":\"address\"}],\"name\":\"canUseDapp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exclusiveSetupFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dappContractAddress\",\"type\":\"address\"},{\"name\":\"_monthlyFee\",\"type\":\"uint256\"}],\"name\":\"setDappMonthlyFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payVipYearlyFee\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupFee\",\"type\":\"uint256\"},{\"name\":\"_yearlyFee\",\"type\":\"uint256\"}],\"name\":\"setVipFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"vipSubscribed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monthlyFee\",\"type\":\"uint256\"},{\"name\":\"_yearlyFee\",\"type\":\"uint256\"}],\"name\":\"setDefaultFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastVipYearlyFeePaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exclusiveYearlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vipSetupFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastMonthlySubscribed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastExclusiveYearlyFeePaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"dappYearlyFeeInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PricingScheme","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d8f218ce0493ec2203cece303a9fe21c41591d122b92ea67d1e20207365cc975"}]}