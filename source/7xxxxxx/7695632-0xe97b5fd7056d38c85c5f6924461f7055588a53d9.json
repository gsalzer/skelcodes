{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * \r\n * World War Goo - Competitive Idle Game\r\n * \r\n * https://ethergoo.io\r\n * \r\n */\r\n \r\n \r\ninterface ERC721 {\r\n    function totalSupply() external view returns (uint256 tokens);\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    function exists(uint256 tokenId) external view returns (bool tokenExists);\r\n    function approve(address to, uint256 tokenId) external;\r\n    function getApproved(uint256 tokenId) external view returns (address approvee);\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n    function tokensOf(address owner) external view returns (uint256[] tokens);\r\n    //function tokenByIndex(uint256 index) external view returns (uint256 token);\r\n\r\n    // Events\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n}\r\n\r\ninterface ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) external;\r\n}\r\n\r\n\r\ncontract Clans is ERC721, ApproveAndCallFallBack {\r\n    using SafeMath for uint256;\r\n\r\n    GooToken constant goo = GooToken(0xdf0960778c6e6597f197ed9a25f12f5d971da86c);\r\n    Army constant army = Army(0x98278eb74b388efd4d6fc81dd3f95b642ce53f2b);\r\n    WWGClanCoupons constant clanCoupons = WWGClanCoupons(0xe9fe4e530ebae235877289bd978f207ae0c8bb25); // For minting clans to initial owners (prelaunch buyers)\r\n\r\n    string public constant name = \"Goo Clan\";\r\n    string public constant symbol = \"GOOCLAN\";\r\n    uint224 numClans;\r\n    address owner; // Minor management\r\n\r\n    // ERC721 stuff\r\n    mapping (uint256 => address) public tokenOwner;\r\n    mapping (uint256 => address) public tokenApprovals;\r\n    mapping (address => uint256[]) public ownedTokens;\r\n    mapping(uint256 => uint256) public ownedTokensIndex;\r\n\r\n    mapping(address => UserClan) public userClan;\r\n    mapping(uint256 => uint224) public clanFee;\r\n    mapping(uint256 => uint224) public leaderFee;\r\n    mapping(uint256 => uint256) public clanMembers;\r\n    mapping(uint256 => mapping(uint256 => uint224)) public clanUpgradesOwned;\r\n    mapping(uint256 => uint256) public clanGoo;\r\n    mapping(uint256 => address) public clanToken; // i.e. BNB\r\n    mapping(uint256 => uint256) public baseTokenDenomination; // base value for token gains i.e. 0.000001 BNB\r\n    mapping(uint256 => uint256) public clanTotalArmyPower;\r\n\r\n    mapping(uint256 => uint224) public referalFee; // If invited to a clan how much % of player's divs go to referer\r\n    mapping(address => mapping(uint256 => address)) public clanReferer; // Address of who invited player to each clan\r\n\r\n    mapping(uint256 => Upgrade) public upgradeList;\r\n    mapping(address => bool) operator;\r\n\r\n    struct UserClan {\r\n        uint224 clanId;\r\n        uint32 clanJoinTime;\r\n    }\r\n\r\n    struct Upgrade {\r\n        uint256 upgradeId;\r\n        uint224 gooCost;\r\n        uint224 upgradeGain;\r\n        uint256 upgradeClass;\r\n        uint256 prerequisiteUpgrade;\r\n    }\r\n\r\n    // Events\r\n    event JoinedClan(uint256 clanId, address player, address referer);\r\n    event LeftClan(uint256 clanId, address player);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setOperator(address gameContract, bool isOperator) external {\r\n        require(msg.sender == owner);\r\n        operator[gameContract] = isOperator;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return numClans;\r\n    }\r\n\r\n    function balanceOf(address player) public view returns (uint256) {\r\n        return ownedTokens[player].length;\r\n    }\r\n\r\n    function ownerOf(uint256 clanId) external view returns (address) {\r\n        return tokenOwner[clanId];\r\n    }\r\n\r\n    function exists(uint256 clanId) public view returns (bool) {\r\n        return tokenOwner[clanId] != address(0);\r\n    }\r\n\r\n    function approve(address to, uint256 clanId) external {\r\n        require(tokenOwner[clanId] == msg.sender);\r\n        tokenApprovals[clanId] = to;\r\n        emit Approval(msg.sender, to, clanId);\r\n    }\r\n\r\n    function getApproved(uint256 clanId) external view returns (address) {\r\n        return tokenApprovals[clanId];\r\n    }\r\n\r\n    function tokensOf(address player) external view returns (uint256[] tokens) {\r\n         return ownedTokens[player];\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) public {\r\n        require(tokenApprovals[tokenId] == msg.sender || tokenOwner[tokenId] == msg.sender);\r\n\r\n        joinClanPlayer(to, uint224(tokenId), 0); // uint224 won't overflow due to tokenOwner check in removeTokenFrom()\r\n        removeTokenFrom(from, tokenId);\r\n        addTokenTo(to, tokenId);\r\n\r\n        delete tokenApprovals[tokenId]; // Clear approval\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public {\r\n        transferFrom(from, to, tokenId);\r\n        checkERC721Recieved(from, to, tokenId, data);\r\n    }\r\n\r\n    function checkERC721Recieved(address from, address to, uint256 tokenId, bytes memory data) internal {\r\n        uint256 size;\r\n        assembly { size := extcodesize(to) }\r\n        if (size > 0) { // Recipient is contract so must confirm recipt\r\n            bytes4 successfullyRecieved = ERC721Receiver(to).onERC721Received(msg.sender, from, tokenId, data);\r\n            require(successfullyRecieved == bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\")));\r\n        }\r\n    }\r\n\r\n    function removeTokenFrom(address from, uint256 tokenId) internal {\r\n        require(tokenOwner[tokenId] == from);\r\n        tokenOwner[tokenId] = address(0);\r\n\r\n        uint256 tokenIndex = ownedTokensIndex[tokenId];\r\n        uint256 lastTokenIndex = ownedTokens[from].length.sub(1);\r\n        uint256 lastToken = ownedTokens[from][lastTokenIndex];\r\n\r\n        ownedTokens[from][tokenIndex] = lastToken;\r\n        ownedTokens[from][lastTokenIndex] = 0;\r\n\r\n        ownedTokens[from].length--;\r\n        ownedTokensIndex[tokenId] = 0;\r\n        ownedTokensIndex[lastToken] = tokenIndex;\r\n    }\r\n\r\n    function addTokenTo(address to, uint256 tokenId) internal {\r\n        require(ownedTokens[to].length == 0); // Can't own multiple clans\r\n        tokenOwner[tokenId] = to;\r\n        ownedTokensIndex[tokenId] = ownedTokens[to].length;\r\n        ownedTokens[to].push(tokenId);\r\n    }\r\n\r\n    function updateClanFees(uint224 newClanFee, uint224 newLeaderFee, uint224 newReferalFee, uint256 clanId) external {\r\n        require(msg.sender == tokenOwner[clanId]);\r\n        require(newClanFee <= 25); // 25% max fee\r\n        require(newReferalFee <= 10); // 10% max refs\r\n        require(newLeaderFee <= newClanFee); // Clan gets fair cut\r\n        clanFee[clanId] = newClanFee;\r\n        leaderFee[clanId] = newLeaderFee;\r\n        referalFee[clanId] = newReferalFee;\r\n    }\r\n\r\n    function getPlayerFees(address player) external view returns (uint224 clansFee, uint224 leadersFee, address leader, uint224 referalsFee, address referer) {\r\n        uint256 usersClan = userClan[player].clanId;\r\n        clansFee = clanFee[usersClan];\r\n        leadersFee = leaderFee[usersClan];\r\n        leader = tokenOwner[usersClan];\r\n        referalsFee = referalFee[usersClan];\r\n        referer = clanReferer[player][usersClan];\r\n    }\r\n\r\n    function getPlayersClanUpgrade(address player, uint256 upgradeClass) external view returns (uint224 upgradeGain) {\r\n        upgradeGain = upgradeList[clanUpgradesOwned[userClan[player].clanId][upgradeClass]].upgradeGain;\r\n    }\r\n\r\n    function getClanUpgrade(uint256 clanId, uint256 upgradeClass) external view returns (uint224 upgradeGain) {\r\n        upgradeGain = upgradeList[clanUpgradesOwned[clanId][upgradeClass]].upgradeGain;\r\n    }\r\n\r\n    // Convienence function\r\n    function getClanDetailsForAttack(address player, address target) external view returns (uint256 clanId, uint256 targetClanId, uint224 playerLootingBonus) {\r\n        clanId = userClan[player].clanId;\r\n        targetClanId = userClan[target].clanId;\r\n        playerLootingBonus = upgradeList[clanUpgradesOwned[clanId][3]].upgradeGain; // class 3 = looting bonus\r\n    }\r\n\r\n    function joinClan(uint224 clanId, address referer) external {\r\n        require(exists(clanId));\r\n        joinClanPlayer(msg.sender, clanId, referer);\r\n    }\r\n\r\n    // Allows smarter invites/referals in future\r\n    function joinClanFromInvite(address player, uint224 clanId, address referer) external {\r\n        require(operator[msg.sender]);\r\n        joinClanPlayer(player, clanId, referer);\r\n    }\r\n\r\n    function joinClanPlayer(address player, uint224 clanId, address referer) internal {\r\n        require(ownedTokens[player].length == 0); // Owners can't join\r\n\r\n        (uint80 attack, uint80 defense,) = army.getArmyPower(player);\r\n\r\n        // Leave old clan\r\n        UserClan memory existingClan = userClan[player];\r\n        if (existingClan.clanId > 0) {\r\n            clanMembers[existingClan.clanId]--;\r\n            clanTotalArmyPower[existingClan.clanId] -= (attack + defense);\r\n            emit LeftClan(existingClan.clanId, player);\r\n        }\r\n\r\n        if (referer != address(0) && referer != player) {\r\n            require(userClan[referer].clanId == clanId);\r\n            clanReferer[player][clanId] = referer;\r\n        }\r\n\r\n        existingClan.clanId = clanId;\r\n        existingClan.clanJoinTime = uint32(now);\r\n\r\n        clanMembers[clanId]++;\r\n        clanTotalArmyPower[clanId] += (attack + defense);\r\n        userClan[player] = existingClan;\r\n        emit JoinedClan(clanId, player, referer);\r\n    }\r\n\r\n    function leaveClan() external {\r\n        require(ownedTokens[msg.sender].length == 0); // Owners can't leave\r\n\r\n        UserClan memory usersClan = userClan[msg.sender];\r\n        require(usersClan.clanId > 0);\r\n\r\n        (uint80 attack, uint80 defense,) = army.getArmyPower(msg.sender);\r\n        clanTotalArmyPower[usersClan.clanId] -= (attack + defense);\r\n\r\n        clanMembers[usersClan.clanId]--;\r\n        delete userClan[msg.sender];\r\n        emit LeftClan(usersClan.clanId, msg.sender);\r\n\r\n        // Cannot leave if player has unclaimed divs (edge case for clan fee abuse)\r\n        require(attack + defense == 0 || army.lastWarFundClaim(msg.sender) == army.getSnapshotDay());\r\n        require(usersClan.clanJoinTime + 24 hours < now);\r\n    }\r\n\r\n    function mintClan(address recipient, uint224 referalPercent, address clanTokenAddress, uint256 baseTokenReward) external {\r\n        require(operator[msg.sender]);\r\n        require(ERC20(clanTokenAddress).totalSupply() > 0);\r\n\r\n        numClans++;\r\n        uint224 clanId = numClans; // Starts from clanId 1\r\n\r\n        // Add recipient to clan\r\n        joinClanPlayer(recipient, clanId, 0);\r\n\r\n        require(tokenOwner[clanId] == address(0));\r\n        addTokenTo(recipient, clanId);\r\n        emit Transfer(address(0), recipient, clanId);\r\n\r\n        // Store clan token\r\n        clanToken[clanId] = clanTokenAddress;\r\n        baseTokenDenomination[clanId] = baseTokenReward;\r\n        referalFee[clanId] = referalPercent;\r\n\r\n        // Burn clan coupons from owner (prelaunch event)\r\n        if (clanCoupons.totalSupply() > 0) {\r\n            clanCoupons.burnCoupon(recipient, clanId);\r\n        }\r\n    }\r\n\r\n    function addUpgrade(uint256 id, uint224 gooCost, uint224 upgradeGain, uint256 upgradeClass, uint256 prereq) external {\r\n        require(operator[msg.sender]);\r\n        upgradeList[id] = Upgrade(id, gooCost, upgradeGain, upgradeClass, prereq);\r\n    }\r\n\r\n    // Incase an existing token becomes invalid (i.e. migrates away)\r\n    function updateClanToken(uint256 clanId, address newClanToken, bool shouldRetrieveOldTokens) external {\r\n        require(msg.sender == owner);\r\n        require(ERC20(newClanToken).totalSupply() > 0);\r\n\r\n        if (shouldRetrieveOldTokens) {\r\n            ERC20(clanToken[clanId]).transferFrom(this, owner, ERC20(clanToken[clanId]).balanceOf(this));\r\n        }\r\n\r\n        clanToken[clanId] = newClanToken;\r\n    }\r\n\r\n    // Incase need to tweak/balance attacking rewards (i.e. token moons so not viable to restock at current level)\r\n    function updateClanTokenGain(uint256 clanId, uint256 baseTokenReward) external {\r\n        require(msg.sender == owner);\r\n        baseTokenDenomination[clanId] = baseTokenReward;\r\n    }\r\n\r\n\r\n    // Clan member goo deposits\r\n    function receiveApproval(address player, uint256 amount, address, bytes) external {\r\n        uint256 clanId = userClan[player].clanId;\r\n        require(exists(clanId));\r\n        require(msg.sender == address(goo));\r\n\r\n        ERC20(msg.sender).transferFrom(player, address(0), amount);\r\n        clanGoo[clanId] += amount;\r\n    }\r\n\r\n    function buyUpgrade(uint224 upgradeId) external {\r\n        uint256 clanId = userClan[msg.sender].clanId;\r\n        require(msg.sender == tokenOwner[clanId]);\r\n\r\n        Upgrade memory upgrade = upgradeList[upgradeId];\r\n        require (upgrade.upgradeId > 0); // Valid upgrade\r\n\r\n        uint256 upgradeClass = upgrade.upgradeClass;\r\n        uint256 latestOwned = clanUpgradesOwned[clanId][upgradeClass];\r\n        require(latestOwned < upgradeId); // Haven't already purchased\r\n        require(latestOwned >= upgrade.prerequisiteUpgrade); // Own prequisite\r\n\r\n        // Clan discount\r\n        uint224 upgradeDiscount = clanUpgradesOwned[clanId][0]; // class 0 = upgrade discount\r\n        uint224 reducedUpgradeCost = upgrade.gooCost - ((upgrade.gooCost * upgradeDiscount) / 100);\r\n\r\n        clanGoo[clanId] = clanGoo[clanId].sub(reducedUpgradeCost);\r\n        army.depositSpentGoo(reducedUpgradeCost); // Transfer to goo bankroll\r\n\r\n        clanUpgradesOwned[clanId][upgradeClass] = upgradeId;\r\n    }\r\n\r\n    // Goo from divs etc.\r\n    function depositGoo(uint256 amount, uint256 clanId) external {\r\n        require(operator[msg.sender]);\r\n        require(exists(clanId));\r\n        clanGoo[clanId] += amount;\r\n    }\r\n\r\n\r\n    function increaseClanPower(address player, uint256 amount) external {\r\n        require(operator[msg.sender]);\r\n\r\n        uint256 clanId = userClan[player].clanId;\r\n        if (clanId > 0) {\r\n            clanTotalArmyPower[clanId] += amount;\r\n        }\r\n    }\r\n\r\n    function decreaseClanPower(address player, uint256 amount) external {\r\n        require(operator[msg.sender]);\r\n\r\n        uint256 clanId = userClan[player].clanId;\r\n        if (clanId > 0) {\r\n            clanTotalArmyPower[clanId] -= amount;\r\n        }\r\n    }\r\n\r\n\r\n    function stealGoo(address attacker, uint256 playerClanId, uint256 enemyClanId, uint80 lootingPower) external returns(uint256) {\r\n        require(operator[msg.sender]);\r\n\r\n        uint224 enemyGoo = uint224(clanGoo[enemyClanId]);\r\n        uint224 enemyGooStolen = (lootingPower > enemyGoo) ? enemyGoo : lootingPower;\r\n\r\n        clanGoo[enemyClanId] = clanGoo[enemyClanId].sub(enemyGooStolen);\r\n\r\n        uint224 clansShare = (enemyGooStolen * clanFee[playerClanId]) / 100;\r\n        uint224 referersFee = referalFee[playerClanId];\r\n        address referer = clanReferer[attacker][playerClanId];\r\n\r\n        if (clansShare > 0 || (referersFee > 0 && referer != address(0))) {\r\n            uint224 leaderShare = (enemyGooStolen * leaderFee[playerClanId]) / 100;\r\n\r\n            uint224 refsShare;\r\n            if (referer != address(0)) {\r\n                refsShare = (enemyGooStolen * referersFee) / 100;\r\n                goo.mintGoo(refsShare, referer);\r\n            }\r\n\r\n            clanGoo[playerClanId] += clansShare;\r\n            goo.mintGoo(leaderShare, tokenOwner[playerClanId]);\r\n            goo.mintGoo(enemyGooStolen - (clansShare + leaderShare + refsShare), attacker);\r\n        } else {\r\n            goo.mintGoo(enemyGooStolen, attacker);\r\n        }\r\n        return enemyGooStolen;\r\n    }\r\n\r\n\r\n    function rewardTokens(address attacker, uint256 playerClanId, uint80 lootingPower) external returns(uint256) {\r\n        require(operator[msg.sender]);\r\n\r\n        uint256 amount = baseTokenDenomination[playerClanId] * lootingPower;\r\n        ERC20(clanToken[playerClanId]).transfer(attacker, amount);\r\n        return amount;\r\n\r\n    }\r\n\r\n    // Daily clan dividends\r\n    function mintGoo(address player, uint256 amount) external {\r\n        require(operator[msg.sender]);\r\n        clanGoo[userClan[player].clanId] += amount;\r\n    }\r\n\r\n}\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n    function totalSupply() external constant returns (uint);\r\n    function balanceOf(address tokenOwner) external constant returns (uint balance);\r\n}\r\n\r\ncontract GooToken {\r\n    function mintGoo(uint224 amount, address player) external;\r\n    function updatePlayersGooFromPurchase(address player, uint224 purchaseCost) external;\r\n}\r\n\r\ncontract Army {\r\n    mapping(address => uint256) public lastWarFundClaim; // Days (snapshot number)\r\n    function depositSpentGoo(uint224 amount) external;\r\n    function getArmyPower(address player) external view returns (uint80, uint80, uint80);\r\n    function getSnapshotDay() external view returns (uint256 snapshot);\r\n}\r\n\r\ncontract WWGClanCoupons {\r\n    function totalSupply() external view returns (uint256);\r\n    function burnCoupon(address clanOwner, uint256 tokenId) external;\r\n}\r\n\r\ncontract ERC721Receiver {\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes data) external returns(bytes4);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"upgradeId\",\"type\":\"uint224\"}],\"name\":\"buyUpgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"},{\"name\":\"upgradeClass\",\"type\":\"uint256\"}],\"name\":\"getClanUpgrade\",\"outputs\":[{\"name\":\"upgradeGain\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerFees\",\"outputs\":[{\"name\":\"clansFee\",\"type\":\"uint224\"},{\"name\":\"leadersFee\",\"type\":\"uint224\"},{\"name\":\"leader\",\"type\":\"address\"},{\"name\":\"referalsFee\",\"type\":\"uint224\"},{\"name\":\"referer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"upgradeList\",\"outputs\":[{\"name\":\"upgradeId\",\"type\":\"uint256\"},{\"name\":\"gooCost\",\"type\":\"uint224\"},{\"name\":\"upgradeGain\",\"type\":\"uint224\"},{\"name\":\"upgradeClass\",\"type\":\"uint256\"},{\"name\":\"prerequisiteUpgrade\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"referalFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newClanFee\",\"type\":\"uint224\"},{\"name\":\"newLeaderFee\",\"type\":\"uint224\"},{\"name\":\"newReferalFee\",\"type\":\"uint224\"},{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"updateClanFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseClanPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint224\"},{\"name\":\"referer\",\"type\":\"address\"}],\"name\":\"joinClan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameContract\",\"type\":\"address\"},{\"name\":\"isOperator\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"},{\"name\":\"newClanToken\",\"type\":\"address\"},{\"name\":\"shouldRetrieveOldTokens\",\"type\":\"bool\"}],\"name\":\"updateClanToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"depositGoo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanGoo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseClanPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"clanId\",\"type\":\"uint224\"},{\"name\":\"referer\",\"type\":\"address\"}],\"name\":\"joinClanFromInvite\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintGoo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedTokensIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leaderFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"referalPercent\",\"type\":\"uint224\"},{\"name\":\"clanTokenAddress\",\"type\":\"address\"},{\"name\":\"baseTokenReward\",\"type\":\"uint256\"}],\"name\":\"mintClan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"gooCost\",\"type\":\"uint224\"},{\"name\":\"upgradeGain\",\"type\":\"uint224\"},{\"name\":\"upgradeClass\",\"type\":\"uint256\"},{\"name\":\"prereq\",\"type\":\"uint256\"}],\"name\":\"addUpgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getClanDetailsForAttack\",\"outputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"},{\"name\":\"targetClanId\",\"type\":\"uint256\"},{\"name\":\"playerLootingBonus\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"attacker\",\"type\":\"address\"},{\"name\":\"playerClanId\",\"type\":\"uint256\"},{\"name\":\"lootingPower\",\"type\":\"uint80\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"upgradeClass\",\"type\":\"uint256\"}],\"name\":\"getPlayersClanUpgrade\",\"outputs\":[{\"name\":\"upgradeGain\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"leaveClan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenApprovals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userClan\",\"outputs\":[{\"name\":\"clanId\",\"type\":\"uint224\"},{\"name\":\"clanJoinTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanUpgradesOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"baseTokenDenomination\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanReferer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"clanId\",\"type\":\"uint256\"},{\"name\":\"baseTokenReward\",\"type\":\"uint256\"}],\"name\":\"updateClanTokenGain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"clanTotalArmyPower\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"attacker\",\"type\":\"address\"},{\"name\":\"playerClanId\",\"type\":\"uint256\"},{\"name\":\"enemyClanId\",\"type\":\"uint256\"},{\"name\":\"lootingPower\",\"type\":\"uint80\"}],\"name\":\"stealGoo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"clanId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"referer\",\"type\":\"address\"}],\"name\":\"JoinedClan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"clanId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"LeftClan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Clans","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4189b5152fda78273a7212a5120282adf68c15cc949c6605eddc5182257c70e0"}]}