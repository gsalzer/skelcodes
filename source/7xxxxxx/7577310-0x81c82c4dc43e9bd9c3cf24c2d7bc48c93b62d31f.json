{"status":"1","message":"OK","result":[{"SourceCode":"//    Copyright (C) 2018 LikeCoin Foundation Limited\r\n//\r\n//    This file is part of LikeCoin Smart Contract.\r\n//\r\n//    LikeCoin Smart Contract is free software: you can redistribute it and/or modify\r\n//    it under the terms of the GNU General Public License as published by\r\n//    the Free Software Foundation, either version 3 of the License, or\r\n//    (at your option) any later version.\r\n//\r\n//    LikeCoin Smart Contract is distributed in the hope that it will be useful,\r\n//    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n//    GNU General Public License for more details.\r\n//\r\n//    You should have received a copy of the GNU General Public License\r\n//    along with LikeCoin Smart Contract.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.4.25;\r\n\r\n// Source: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/token/ERC20/IERC20.sol\r\n// Copied here to avoid incompatibility with Solidity v0.5.x in latest master branch\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract LikeChainRelayLogicInterface {\r\n    function commitWithdrawHash(uint64 height, uint64 round, bytes _payload) public;\r\n    function updateValidator(address[] _newValidators, bytes _proof) public;\r\n    function withdraw(bytes _withdrawInfo, bytes _proof) public;\r\n    function upgradeLogicContract(address _newLogicContract, bytes _proof) public;\r\n    event Upgraded(uint256 _newLogicContractIndex, address _newLogicContract);\r\n}\r\n\r\ncontract LikeChainRelayState {\r\n    uint256 public logicContractIndex;\r\n    address public logicContract;\r\n\r\n    IERC20 public tokenContract;\r\n\r\n    address[] public validators;\r\n    \r\n    struct ValidatorInfo {\r\n        uint8 index;\r\n        uint32 power;\r\n    }\r\n    \r\n    mapping(address => ValidatorInfo) public validatorInfo;\r\n    uint256 public totalVotingPower;\r\n    uint public lastValidatorUpdateTime;\r\n\r\n    uint public latestBlockHeight;\r\n    bytes32 public latestWithdrawHash;\r\n\r\n    mapping(bytes32 => bool) public consumedIds;\r\n    mapping(bytes32 => bytes32) public reserved;\r\n}\r\n\r\ncontract LikeChainRelayMain is LikeChainRelayState, LikeChainRelayLogicInterface {\r\n    constructor(\r\n        address _logicContract,\r\n        address _tokenContract,\r\n        address[] _validators,\r\n        uint32[] _votingPowers\r\n    ) public {\r\n        uint len = _validators.length;\r\n        require(len > 0);\r\n        require(len < 256);\r\n        require(_votingPowers.length == len);\r\n        \r\n        logicContract = _logicContract;\r\n        logicContractIndex = 0;\r\n\r\n        for (uint8 i = 0; i < len; i += 1) {\r\n            address v = _validators[i];\r\n            require(validatorInfo[v].power == 0);\r\n            uint32 power = _votingPowers[i];\r\n            require(power > 0);\r\n            validators.push(v);\r\n            validatorInfo[v] = ValidatorInfo({\r\n                index: i,\r\n                power: power\r\n            });\r\n            totalVotingPower += power;\r\n        }\r\n        \r\n        tokenContract = IERC20(_tokenContract);\r\n    }\r\n\r\n    function commitWithdrawHash(uint64 /* height */, uint64 /* round */, bytes /* _payload */) public {\r\n        require(logicContract.delegatecall(msg.data));\r\n    }\r\n\r\n    function updateValidator(address[] /* _newValidators */, bytes /* _proof */) public {\r\n        require(logicContract.delegatecall(msg.data));\r\n    }\r\n\r\n    function withdraw(bytes /* _withdrawInfo */, bytes /* _proof */) public {\r\n        require(logicContract.delegatecall(msg.data));\r\n    }\r\n\r\n    function upgradeLogicContract(address /* _newLogicContract */, bytes /* _proof */) public {\r\n        require(logicContract.delegatecall(msg.data));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestWithdrawHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorInfo\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"power\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastValidatorUpdateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalVotingPower\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeLogicContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reserved\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"commitWithdrawHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"logicContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"logicContractIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"consumedIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestBlockHeight\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_validators\",\"type\":\"address[]\"},{\"name\":\"_votingPowers\",\"type\":\"uint32[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newLogicContractIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newLogicContract\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]","ContractName":"LikeChainRelayMain","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000026135e15482b65845418e084f614bd340ddb3b8a00000000000000000000000002f61fd266da6e8b102d4121f5ce7b992640cf9800000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000600000000000000000000000062be52bd46aaeb2bdcd2d123478b1acbfb1d2346000000000000000000000000d2df2a279f931d57042440f694b27048f618b319000000000000000000000000db53bc6aa6cf634669e704c49568d18d539e830d0000000000000000000000001aef7c26e48e5ed83024bcb122931fb30a99d54b000000000000000000000000c6720a4b73ad41ab7147b8ac42eca62250d8fb9a00000000000000000000000049a116b7eda1a5eae5e56a4e285d4dbdfd18aa5e0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000411a000000000000000000000000000000000000000000000000000000000000411a000000000000000000000000000000000000000000000000000000000000411a000000000000000000000000000000000000000000000000000000000000411a000000000000000000000000000000000000000000000000000000000000411a000000000000000000000000000000000000000000000000000000000000411e","Library":"","SwarmSource":"bzzr://bcf3dd2fdf1f2d48c0cbbfb2d66a11b4d050ae6ffbf8bd049e0d4049645e0a92"}]}