{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\n/// @title BEAN - Beans are designed for global trusted talent chain\r\n/// @author zhouhang\r\n\r\n/**\r\n * @title 安全数学库\r\n * @dev 用于uint256的安全计算，合约内的积分操作均使用这个库的函数代替加减乘除，来避免上溢、下溢等问题\r\n */\r\nlibrary SafeMath {\r\n\r\n\t/**\r\n\t * @dev 乘法\r\n\t */\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\trequire(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 除法\r\n\t */\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b > 0); // Solidity only automatically asserts when dividing by 0\r\n    uint256 c = a / b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 减法\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\trequire(b <= a);\r\n\t\tuint256 c = a - b;\r\n    require(c <= a);\r\n\r\n    return c;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 加法\r\n\t */\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n\t}\r\n}\r\n\r\n/**\r\n * @title 所有权合约\r\n * @dev 用于控制合约的所有权，包括转让所有权\r\n */\r\ncontract Ownable {\r\n\taddress internal owner_; //合约所有者\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner); //合约所有权转让事件\r\n\r\n\t/**\r\n\t * @dev 构造函数\r\n\t */\r\n\tconstructor() public {\r\n\t\towner_ = msg.sender; //合约所有者为合约创建者\r\n\t}\r\n\r\n\t/**\r\n     * @dev 合约所有者\r\n     */\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn owner_;\r\n\t}\r\n\r\n\t/**\r\n     * @dev onlyOwner函数修改器：判断合约使用者是不是合约拥有者，是合约拥有者才能执行\r\n     */\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner_);\r\n\t\t_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 转让合约所有权：只有合约所有者能使用，转让合约所有权给newOwner\r\n\t * @param  newOwner 新的合约所有者\r\n\t */\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner_, newOwner);\r\n\t\towner_ = newOwner;\r\n\t}\r\n}\r\n\r\n/**\r\n * @title BALC可暂停标准积分合约\r\n * @dev 可暂停的标准积分合约包括查询余额、积分转账、授权额度、查询授额、授额转账、增加授额、减少授额、暂停合约、重启合约功能，继承Ownable合约功能\r\n */\r\ncontract BALC is Ownable {\r\n\r\n\tusing SafeMath for uint256; //uint256类型使用SafeMath库\r\n\r\n\tstring private name_; //积分名称\r\n\tstring private symbol_; //积分符号，类似货币符号\r\n\tuint256 private decimals_; //小数点后位数\r\n\tuint256 private totalSupply_; //发行总量\r\n\tbool private paused_; //是否暂停合约\r\n\r\n\tmapping(address => uint256) internal balances; //地址余额映射\r\n\tmapping(address => mapping(address => uint256)) internal allowed; //授权额度映射\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value); //积分转账事件\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value); //授权额度事件\r\n\tevent Pause(); //合约暂停事件\r\n\tevent Unpause(); //合约重启事件\r\n\r\n\t/**\r\n\t * @dev 构造函数：web3代码生成后，需要自定义_name,_symbol,_decimals,_totalSupply\r\n\t */\r\n\tconstructor(string memory _name, string memory _symbol, uint256 _decimals, uint256 _totalSupply, address _owner) public {\r\n\t\tname_ = _name;\r\n\t\tsymbol_ = _symbol;\r\n\t\tdecimals_ = _decimals;\r\n\t\ttotalSupply_ = _totalSupply.mul(10 ** decimals_); //发行总量按小数点后位数转换\r\n\t\tpaused_ = false; //默认合约不暂停\r\n\t\towner_ = _owner;\r\n\t\tbalances[owner_] = totalSupply_; //合约发布者持有初始所有积分\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 积分名称\r\n\t */\r\n\tfunction name() public view returns (string memory) {\r\n\t\treturn name_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 积分符号\r\n\t */\r\n\tfunction symbol() public view returns (string memory) {\r\n\t\treturn symbol_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 小数点后位数\r\n\t */\r\n\tfunction decimals() public view returns (uint256) {\r\n\t\treturn decimals_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 发行总量\r\n\t */\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn totalSupply_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 是否暂停\r\n\t */\r\n\tfunction isPaused() public view returns (bool) {\r\n\t\treturn paused_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev whenNotPaused函数修改器：判断合约是否未暂停，未暂停时才能执行\r\n\t */\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused_);\r\n\t\t_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev whenNotPaused函数修改器：判断合约是否暂停，暂停时才能执行\r\n\t */\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused_);\r\n\t\t_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 积分转账：在合约未暂停时，由合约使用者msg.sender，向_to转入_value数量的积分\r\n\t * @param  _to 转入地址 _value 积分数量\r\n\t * @return  bool 是否转账成功\r\n\t */\r\n\tfunction transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 余额查询：查询_account地址的积分余额\r\n\t * @param  _account 积分账户地址\r\n\t * @return  uint256 积分余额\r\n\t */\r\n\tfunction balanceOf(address _account) public view returns (uint256) {\r\n\t\treturn balances[_account];\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 授权额度：在合约未暂停时，由合约使用者msg.sender，向_spender授权_value数量积分额度\r\n\t * @param  _spender 被授权地址 _value 授权额度\r\n\t * @return  bool 是否授权成功\r\n\t */\r\n\tfunction approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\n\t\trequire(_spender != address(0));\r\n\t\trequire(_value < totalSupply_);\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n     * @dev 授额转账：在合约未暂停时，由合约使用者msg.sender，从_from向_to转入_value数量的积分，转账数量不能超过_from的授权额度和余额\r\n     * @param  _from 授额地址 _to转入地址 _value 积分数量\r\n     * @return  bool 是否转账成功\r\n     */\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n    \r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 查询授额：查询由_owner向_spender授权的积分额度\r\n\t * @param  _owner 授权地址 _spender 被授权地址\r\n\t * @return  uint256 授权额度\r\n\t */\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 增加授额：在合约未暂停时，由合约使用者msg.sender向_spender增加_addValue数量的积分额度\r\n\t * @param  _spender 被授权地址 _addedValue 增加的授权额度\r\n\t * @return  bool 是否增加授额成功\r\n\t */\r\n\tfunction increaseApproval(address _spender, uint256 _addedValue) public whenNotPaused returns (bool success) {\r\n        require(_spender != address(0));\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 减少授额：在合约未暂停时，由合约使用者msg.sender向_spender减少_subtractedValue数量的积分额度\r\n\t * @param  _spender 被授权地址 _subtractedValue 减少的授权额度\r\n\t * @return  bool 是否减少授额成功\r\n\t */\r\n\tfunction decreaseApproval(address _spender, uint256 _subtractedValue) public whenNotPaused returns (bool success) {\r\n        require(_spender != address(0));\r\n\t\tuint256 oldValue = allowed[msg.sender][_spender];\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\t\t}\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev 暂停合约：只有合约所有者能使用，在合约未暂停时，暂停合约\r\n\t */\r\n\tfunction pause() onlyOwner whenNotPaused public returns (bool) {\r\n\t\tpaused_ = true;\r\n\t\temit Pause();\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**a\r\n\t * @dev 重启合约：只有合约所有者能使用，在合约暂停时，重启合约\r\n\t */\r\n\tfunction unpause() onlyOwner whenPaused public returns (bool) {\r\n\t\tpaused_ = false;\r\n\t\temit Unpause();\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BALC","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000070ba48b9d714d098db6d42bc5ac2f2e02a2901370000000000000000000000000000000000000000000000000000000000000010426c61636b506561726c20546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000442504c4300000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f973ac99e5421b48d5d373ab2495c2615e5a51f738632556efbaac2f2d5019a8"}]}