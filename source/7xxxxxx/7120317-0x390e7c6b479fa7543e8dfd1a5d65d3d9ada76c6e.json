{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract callBackContract {\r\n    function __response(uint _price) public;\r\n}\r\n\r\ncontract CoinMarketCapApi {\r\n    \r\n    uint public totalRequests;\r\n    uint price;\r\n    uint public gasAmount;\r\n    address public admin;\r\n    \r\n    mapping ( address => bool ) public admins;\r\n    mapping ( uint => address ) public _callbackAddress;\r\n    mapping ( uint => mapping ( address => RequestMeta ) ) public requests;\r\n    \r\n    struct RequestMeta {\r\n        bool processed;\r\n        bool active;\r\n        string ticker;\r\n        uint current_block;\r\n        uint expiry_block;\r\n        uint time;\r\n    }\r\n    \r\n    event newCMCRequest(uint indexed _req_id, string _ticker);\r\n    event requestProcessed(uint indexed _req_id, uint _price);\r\n    \r\n    modifier onlyAdmin {\r\n        require(admin == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    \r\n    function CoinMarketCapApi() public {\r\n        admin = msg.sender;\r\n        \r\n        price = 1000000000000000;\r\n        gasAmount = 1000000000;\r\n    }\r\n    \r\n    function setPrice(uint _price) public onlyAdmin {\r\n        price = _price;\r\n    }\r\n    \r\n    function setGasAmount(uint _gasamount) public onlyAdmin {\r\n        gasAmount = _gasamount;\r\n    }\r\n    \r\n    function transferOwnership(address _newAdmin) public onlyAdmin {\r\n        admin = _newAdmin;\r\n    }\r\n    \r\n    function transferEther(address _address) public onlyAdmin {\r\n        _address.transfer(this.balance);\r\n    }\r\n    \r\n    function processRequest(uint _req_id, uint _price) public onlyAdmin returns (bool) {\r\n        address _address = _callbackAddress[_req_id];\r\n        RequestMeta storage r = requests[_req_id][_address];\r\n        \r\n        require(\r\n            _address != address(0x0)\r\n            && r.active\r\n            && !r.processed \r\n            && r.expiry_block > block.number\r\n        );\r\n        \r\n        r.processed = true;\r\n        \r\n        callBackContract(_address).__response.gas(gasAmount)(_price);\r\n        \r\n        requestProcessed(_req_id, _price);\r\n        return true;\r\n    }\r\n    \r\n    function _cost() public view returns (uint _price) {\r\n        _price = price;\r\n    }\r\n    \r\n    \r\n    function getRequestMeta(uint _req_id) public view \r\n        returns (\r\n            bool _active, \r\n            bool _processed, \r\n            string _ticker, \r\n            uint _current_block, \r\n            uint _expiry_block, \r\n            uint _time\r\n        )\r\n    {\r\n        address _address = _callbackAddress[_req_id];\r\n        RequestMeta storage r = requests[_req_id][_address];\r\n        \r\n        _active = r.active;\r\n        _processed = r.processed;\r\n        _ticker = r.ticker;\r\n        _current_block = r.current_block;\r\n        _expiry_block = r.expiry_block;\r\n        _time = r.time;\r\n    }\r\n    \r\n    function requestPrice(string _ticker) public payable {\r\n        require(\r\n            msg.value >= price\r\n        );\r\n        \r\n        // uint _amount = price - gasPrice;\r\n        admin.transfer(price);\r\n        \r\n        totalRequests++;\r\n        RequestMeta storage r = requests[totalRequests][msg.sender];\r\n        \r\n        r.active = true;\r\n        r.ticker = _ticker;\r\n        r.current_block = block.number;\r\n        r.expiry_block = block.number + 20;\r\n        r.time = now;\r\n        \r\n        _callbackAddress[totalRequests] = msg.sender;\r\n        \r\n        newCMCRequest(totalRequests, _ticker);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"_cost\",\"outputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasamount\",\"type\":\"uint256\"}],\"name\":\"setGasAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"requests\",\"outputs\":[{\"name\":\"processed\",\"type\":\"bool\"},{\"name\":\"active\",\"type\":\"bool\"},{\"name\":\"ticker\",\"type\":\"string\"},{\"name\":\"current_block\",\"type\":\"uint256\"},{\"name\":\"expiry_block\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbackAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRequests\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_req_id\",\"type\":\"uint256\"}],\"name\":\"getRequestMeta\",\"outputs\":[{\"name\":\"_active\",\"type\":\"bool\"},{\"name\":\"_processed\",\"type\":\"bool\"},{\"name\":\"_ticker\",\"type\":\"string\"},{\"name\":\"_current_block\",\"type\":\"uint256\"},{\"name\":\"_expiry_block\",\"type\":\"uint256\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_req_id\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"processRequest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"requestPrice\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_req_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"newCMCRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_req_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"requestProcessed\",\"type\":\"event\"}]","ContractName":"CoinMarketCapApi","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cab2e92a56f57444e39b74250fe8a0c69bca42f2938e15fa4d20414eee0efb61"}]}