{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.5.8;\r\n \r\n /**\r\n *  ╔═╗╔═╗╔═══╗╔══╗─╔═══╗╔════╗     ──────╔══╗╔═╗─╔╗\r\n *  ╚╗╚╝╔╝║╔═╗║║╔╗║─║╔══╝║╔╗╔╗║     ──────╚╣─╝║║╚╗║║\r\n *  ─╚╗╔╝─╚╝╔╝║║╚╝╚╗║╚══╗╚╝║║╚╝     ╔╗╔╗╔╗─║║─║╔╗╚╝║\r\n *  ─╔╝╚╗─╔═╝╔╝║╔═╗║║╔══╝──║║──     ║╚╝╚╝║─║║─║║╚╗║║\r\n *  ╔╝╔╗╚╗║║╚═╗║╚═╝║║╚══╗──║║──     ╚╗╔╗╔╝╔╣─╗║║─║║║\r\n *  ╚═╝╚═╝╚═══╝╚═══╝╚═══╝──╚╝──     ─╚╝╚╝─╚══╝╚╝─╚═╝\r\n *\r\n * \r\n * The contract of acceptance and withdrawal of funds in the first, fair and open gaming platform https://x2bet.win\r\n * Buying coins x2bet you agree that you have turned 18 years old and you realize the risk associated with gambling and slot machines\r\n * For the withdrawal of winnings from the system, a commission of 3% is charged.\r\n * The creator of the project is not responsible for the player’s financial losses when playing fair slot machines, all actions you do at your own risk.\r\n * The project team has the right to suspend withdrawal of funds, in case of detection of suspicious actions, until clarification of circumstances.\r\n */\r\n\r\ncontract X2Bet_win {\r\n    \r\n    using SafeMath\r\n    for uint;\r\n    \r\n    address public owner;\r\n    mapping(address => uint) public deposit;\r\n    mapping(address => uint) public withdrawal;\r\n    bool public status = true;\r\n    uint public min_payment = 0.05 ether;\r\n    uint public systemPercent = 0;\r\n    \r\n    constructor()public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    event ByCoin(\r\n        address indexed from,\r\n        uint indexed block,\r\n        uint value,\r\n        uint user_id,\r\n        uint time\r\n    );\r\n    \r\n    event ReturnRoyalty(\r\n        address indexed from,\r\n        uint indexed block,\r\n        uint value, \r\n        uint withdrawal_id,\r\n        uint time\r\n    );\r\n    \r\n    modifier isNotContract(){\r\n        uint size;\r\n        address addr = msg.sender;\r\n        assembly { size := extcodesize(addr) }\r\n        require(size == 0 && tx.origin == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier contractIsOn(){\r\n        require(status);\r\n        _;\r\n    }\r\n    \r\n    modifier minPayment(){\r\n        require(msg.value >= min_payment);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    //Coin purchase method x2Bet.win\r\n    function byCoin(uint _user_id)contractIsOn isNotContract minPayment public payable{\r\n        deposit[msg.sender]+= msg.value;\r\n        emit ByCoin(msg.sender, block.number, msg.value, _user_id, now);\r\n        \r\n    }\r\n    \r\n    //Automatic withdrawal of winnings x2Bet.win\r\n    function pay_royaltie(address payable[] memory dests, uint256[] memory values, uint256[] memory ident) onlyOwner contractIsOn public returns(uint){\r\n        uint256 i = 0;\r\n        while (i < dests.length) {\r\n            uint transfer_value = values[i].sub(values[i].mul(3).div(100));\r\n            dests[i].transfer(transfer_value);\r\n            withdrawal[dests[i]]+=values[i];\r\n            emit ReturnRoyalty(dests[i], block.number, values[i], ident[i], now);\r\n            systemPercent += values[i].mul(3).div(100);\r\n            i += 1;\r\n        }\r\n        \r\n        return(i);\r\n    }\r\n    \r\n    function startProphylaxy()onlyOwner public {\r\n        status = false;\r\n    }\r\n    \r\n    function stopProphylaxy()onlyOwner public {\r\n        status = true;\r\n    }\r\n    \r\n    function() external payable {\r\n        \r\n    }\r\n    \r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n     * @dev Multiplies two numbers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        require(b > 0); // Solidity only automatically asserts when dividing by 0\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopProphylaxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systemPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"byCoin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startProphylaxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"},{\"name\":\"ident\",\"type\":\"uint256[]\"}],\"name\":\"pay_royaltie\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_payment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"ByCoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"withdrawal_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"ReturnRoyalty\",\"type\":\"event\"}]","ContractName":"X2Bet_win","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6baaf34d121390739b1afa9749f5797d26935b25c7abf723e25facccc2f1a5f3"}]}