{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5;\r\n\r\ncontract owned {\r\n    address payable public owner;\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract limited is owned {\r\n    mapping (address => bool) canAsk ;\r\n    \r\n     modifier onlyCanAsk {\r\n        require(canAsk[msg.sender]);\r\n        _;\r\n    }\r\n    \r\n    function changeAsk (address a,bool allow) onlyOwner public {\r\n        canAsk[a] = allow;\r\n    }\r\n    \r\n}\r\n\r\ninterface ICampaign {\r\n    function update(bytes32 idRequest,uint64 likes,uint64 shares,uint64 views) external  returns (bool ok);\r\n}\r\n\r\ninterface IERC20 {\r\n   function transfer(address _to, uint256 _value) external;\r\n}\r\n\r\ncontract oracle is limited {\r\n    \r\n    \r\n    // social network ids: \r\n    // 01 : facebook;\r\n    // 02 : youtube\r\n    // 03 : instagram\r\n    // 04 : twitter\r\n    // 05 : url TLS Notary\r\n    \r\n    event AskRequest(bytes32 indexed idRequest, uint8 typeSN, string idPost,string idUser);\r\n    event AnswerRequest(bytes32 indexed idRequest, uint64 likes, uint64 shares, uint64 views);\r\n    \r\n    function  ask (uint8 typeSN,string memory idPost,string memory idUser, bytes32 idRequest) public onlyCanAsk\r\n    {\r\n        emit AskRequest(idRequest, typeSN, idPost, idUser );\r\n    }\r\n    \r\n    function answer(address campaignContract,bytes32 idRequest,uint64 likes,uint64 shares, uint64 views) public onlyOwner {\r\n        ICampaign campaign = ICampaign(campaignContract);\r\n        campaign.update(idRequest,likes,shares,views);\r\n        emit AnswerRequest(idRequest,likes,shares,views);\r\n    }\r\n    \r\n    function() external payable {}\r\n    \r\n    function withdraw() onlyOwner public {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function transferToken (address token,address to,uint256 val) public onlyOwner {\r\n        IERC20 erc20 = IERC20(token);\r\n        erc20.transfer(to,val);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"},{\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"changeAsk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"campaignContract\",\"type\":\"address\"},{\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"name\":\"likes\",\"type\":\"uint64\"},{\"name\":\"shares\",\"type\":\"uint64\"},{\"name\":\"views\",\"type\":\"uint64\"}],\"name\":\"answer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"typeSN\",\"type\":\"uint8\"},{\"name\":\"idPost\",\"type\":\"string\"},{\"name\":\"idUser\",\"type\":\"string\"},{\"name\":\"idRequest\",\"type\":\"bytes32\"}],\"name\":\"ask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"typeSN\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"idPost\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"idUser\",\"type\":\"string\"}],\"name\":\"AskRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"likes\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"shares\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"views\",\"type\":\"uint64\"}],\"name\":\"AnswerRequest\",\"type\":\"event\"}]","ContractName":"oracle","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3f7a8c258af74a12b812833193132dd4ab09bd090825ea8524a5eabfe01b3b91"}]}