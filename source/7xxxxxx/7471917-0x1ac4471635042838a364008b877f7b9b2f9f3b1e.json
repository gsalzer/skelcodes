{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.0;\r\n\r\ncontract AbstractAzimuth {\r\n   function ownerOf(uint256 pointNum) public view returns(address);\r\n}\r\n\r\ncontract Reputation {\r\n    \r\n    address azimuthAddress = 0x6ac07B7C4601B5CE11de8Dfe6335B871C7C4dd4d;\r\n    \r\n    enum Score { Negative, Neutral, Positive }\r\n    event LogReputationFact(uint, string fact);\r\n    \r\n    //  validPointId(): require that _id is a valid point\r\n    //\r\n    modifier validPointId(uint256 _id)\r\n    {\r\n      require(_id < 0x100000000);\r\n      _;\r\n    }\r\n    \r\n    function checkOwner(uint256 pointNum)\r\n    public view\r\n    validPointId(pointNum)\r\n    returns(address owner) {\r\n      AbstractAzimuth azimuth = AbstractAzimuth(azimuthAddress);\r\n      return azimuth.ownerOf(pointNum);\r\n    }\r\n\r\n    function append(uint256 pointNum, string memory fact)\r\n    public {\r\n      address owner = checkOwner(pointNum);\r\n      require(owner == msg.sender);\r\n      Score score = Score.Negative;\r\n      emit LogReputationFact(uint(score), fact);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"pointNum\",\"type\":\"uint256\"}],\"name\":\"checkOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pointNum\",\"type\":\"uint256\"},{\"name\":\"fact\",\"type\":\"string\"}],\"name\":\"append\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fact\",\"type\":\"string\"}],\"name\":\"LogReputationFact\",\"type\":\"event\"}]","ContractName":"Reputation","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://35757b73ad042cc6f22551d6fefbf10572b4a170ada47cbb72adaff99f7a1e95"}]}