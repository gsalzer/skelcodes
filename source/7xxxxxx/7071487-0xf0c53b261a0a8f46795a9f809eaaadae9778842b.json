{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/*\r\n* CryptoMiningWar - Blockchain-based strategy game\r\n* Author: InspiGames\r\n* Website: https://cryptominingwar.github.io/\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\ninterface MiniGameInterface {\r\n    function isContractMiniGame() external pure returns( bool /*_isContractMiniGame*/ );\r\n    function getCurrentReward(address /*_addr*/) external pure returns( uint256 /*_currentReward*/ );\r\n    function withdrawReward(address /*_addr*/) external;\r\n    function fallback() external payable;\r\n}\r\ncontract CrryptoWallet {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public administrator;\r\n    uint256 public totalContractMiniGame = 0;\r\n\r\n    mapping(address => bool)   public miniGames; \r\n    mapping(uint256 => address) public miniGameAddress;\r\n\r\n    modifier onlyContractsMiniGame() \r\n    {\r\n        require(miniGames[msg.sender] == true);\r\n        _;\r\n    }\r\n    event Withdraw(address _addr, uint256 _eth);\r\n\r\n    constructor() public {\r\n        administrator = msg.sender;\r\n    }\r\n    function () public payable\r\n    {\r\n        \r\n    }\r\n    /** \r\n    * @dev MainContract used this function to verify game's contract\r\n    */\r\n    function isContractMiniGame() public pure returns( bool _isContractMiniGame )\r\n    {\r\n    \t_isContractMiniGame = true;\r\n    }\r\n    function isWalletContract() public pure returns(bool)\r\n    {\r\n        return true;\r\n    }\r\n    function upgrade(address addr) public \r\n    {\r\n        require(administrator == msg.sender);\r\n\r\n        selfdestruct(addr);\r\n    }\r\n    /** \r\n    * @dev Main Contract call this function to setup mini game.\r\n    */\r\n    function setupMiniGame( uint256 /*_miningWarRoundNumber*/, uint256 /*_miningWarDeadline*/) public\r\n    {\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    // SETTING CONTRACT MINI GAME \r\n    //--------------------------------------------------------------------------\r\n    function setContractsMiniGame( address _addr ) public  \r\n    {\r\n        require(administrator == msg.sender);\r\n\r\n        MiniGameInterface MiniGame = MiniGameInterface( _addr );\r\n\r\n        if ( miniGames[_addr] == false ) {\r\n            miniGames[_addr] = true;\r\n            miniGameAddress[totalContractMiniGame] = _addr;\r\n            totalContractMiniGame = totalContractMiniGame + 1;\r\n        }\r\n    }\r\n    /**\r\n    * @dev remove mini game contract from main contract\r\n    * @param _addr mini game contract address\r\n    */\r\n    function removeContractMiniGame(address _addr) public \r\n    {\r\n        require(administrator == msg.sender);\r\n\r\n        miniGames[_addr] = false;\r\n    }\r\n   \r\n    \r\n    // --------------------------------------------------------------------------------------------------------------\r\n    // CALL FUNCTION\r\n    // --------------------------------------------------------------------------------------------------------------\r\n    function getCurrentReward(address _addr) public view returns(uint256 _currentReward)\r\n    {\r\n        for(uint256 idx = 0; idx < totalContractMiniGame; idx++) {\r\n            if (miniGames[miniGameAddress[idx]] == true) {\r\n                MiniGameInterface MiniGame = MiniGameInterface(miniGameAddress[idx]);\r\n                _currentReward += MiniGame.getCurrentReward(_addr);\r\n            }\r\n        }\r\n    }\r\n\r\n    function withdrawReward() public \r\n    {\r\n        for(uint256 idx = 0; idx < totalContractMiniGame; idx++) {\r\n            if (miniGames[miniGameAddress[idx]] == true) {\r\n                MiniGameInterface MiniGame = MiniGameInterface(miniGameAddress[idx]);\r\n                MiniGame.withdrawReward(msg.sender);\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isContractMiniGame\",\"outputs\":[{\"name\":\"_isContractMiniGame\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isWalletContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getCurrentReward\",\"outputs\":[{\"name\":\"_currentReward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContractMiniGame\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setContractsMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"miniGameAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeContractMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"miniGames\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setupMiniGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"administrator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"CrryptoWallet","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2a8ad61817ceca369a53316435de4b48362866ac54dc438499293ecfe87fc8d9"}]}