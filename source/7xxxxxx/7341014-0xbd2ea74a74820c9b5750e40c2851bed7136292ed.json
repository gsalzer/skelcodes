{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.4;\r\n\r\n// ----------------------------------------------------------------------------\r\n// BokkyPooBah's Fixed Supply Token ðŸ‘Š + Factory v1.00\r\n//\r\n// A factory to convieniently deploy your own source verified fixed supply\r\n// token contracts\r\n//\r\n// Factory deployment address: 0xfAEcE565D445e98Ea024f02FF06607B4654eEb56\r\n//\r\n// https://github.com/bokkypoobah/FixedSupplyTokenFactory\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2019. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor(address _owner) public {\r\n        owner = _owner;\r\n    }\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ApproveAndCall Fallback\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallback {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Token Interface = ERC20 + symbol + name + decimals + approveAndCall\r\n// ----------------------------------------------------------------------------\r\ncontract TokenInterface is ERC20Interface {\r\n    function symbol() public view returns (string memory);\r\n    function name() public view returns (string memory);\r\n    function decimals() public view returns (uint8);\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// FixedSupplyToken ðŸ‘Š = ERC20 + symbol + name + decimals + approveAndCall\r\n// ----------------------------------------------------------------------------\r\ncontract FixedSupplyToken is TokenInterface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    string _symbol;\r\n    string  _name;\r\n    uint8 _decimals;\r\n    uint _totalSupply;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    constructor(address tokenOwner, string memory symbol, string memory name, uint8 decimals, uint fixedSupply) public Owned(tokenOwner) {\r\n        _symbol = symbol;\r\n        _name = name;\r\n        _decimals = decimals;\r\n        _totalSupply = fixedSupply;\r\n        balances[tokenOwner] = _totalSupply;\r\n        emit Transfer(address(0), tokenOwner, _totalSupply);\r\n    }\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].sub(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallback(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n    function recoverTokens(address token, uint tokens) public onlyOwner {\r\n        if (token == address(0)) {\r\n            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));\r\n        } else {\r\n            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);\r\n        }\r\n    }\r\n    function () external payable {\r\n        revert();\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// BokkyPooBah's Fixed Supply Token ðŸ‘Š Factory\r\n//\r\n// Notes:\r\n//   * The `newContractAddress` deprecation is just advisory\r\n//   * The minimum fee must be sent with the `deployTokenContract(...)` call\r\n//   * Any excess over the fee will be refunded to the sending account\r\n//\r\n// Execute `deployTokenContract(...)` with the following parameters\r\n// to deploy your very own FixedSupplyToken contract:\r\n//   symbol         symbol\r\n//   name           name\r\n//   decimals       number of decimal places for the token contract\r\n//   totalSupply    the fixed token total supply\r\n//\r\n// For example, deploying a FixedSupplyToken contract with a\r\n// `totalSupply` of 1,000.000000000000000000 tokens:\r\n//   symbol         \"ME\"\r\n//   name           \"My Token\"\r\n//   decimals       18\r\n//   initialSupply  10000000000000000000000 = 1,000.000000000000000000 tokens\r\n//\r\n// The FixedSupplyTokenListing() event is logged with the following\r\n// parameters:\r\n//   owner          the account that execute this transaction\r\n//   tokenAddress   the newly deployed FixedSupplyToken address\r\n//   symbol         symbol\r\n//   name           name\r\n//   decimals       number of decimal places for the token contract\r\n//   totalSupply    the fixed token total supply\r\n// ----------------------------------------------------------------------------\r\ncontract BokkyPooBahsFixedSupplyTokenFactory is Owned {\r\n    using SafeMath for uint;\r\n\r\n    address public newAddress;\r\n    uint public minimumFee = 0.1 ether;\r\n    mapping(address => bool) public isChild;\r\n    address[] public children;\r\n\r\n    event FactoryDeprecated(address _newAddress);\r\n    event MinimumFeeUpdated(uint oldFee, uint newFee);\r\n    event TokenDeployed(address indexed owner, address indexed token, string symbol, string name, uint8 decimals, uint totalSupply);\r\n\r\n    constructor() public Owned(msg.sender) {\r\n        // Initial contract for source code verification\r\n        _deployTokenContract(msg.sender, \"FIST\", \"Fixed Supply Token ðŸ‘Š v1.00\", 18, 10**24);\r\n    }\r\n    function numberOfChildren() public view returns (uint) {\r\n        return children.length;\r\n    }\r\n    function deprecateFactory(address _newAddress) public onlyOwner {\r\n        require(newAddress == address(0));\r\n        emit FactoryDeprecated(_newAddress);\r\n        newAddress = _newAddress;\r\n    }\r\n    function setMinimumFee(uint _minimumFee) public onlyOwner {\r\n        emit MinimumFeeUpdated(minimumFee, _minimumFee);\r\n        minimumFee = _minimumFee;\r\n    }\r\n    function deployTokenContract(string memory symbol, string memory name, uint8 decimals, uint totalSupply) public payable returns (address token) {\r\n        require(msg.value >= minimumFee);\r\n        require(decimals <= 27);\r\n        require(totalSupply > 0);\r\n        token = _deployTokenContract(msg.sender, symbol, name, decimals, totalSupply);\r\n        if (msg.value > 0) {\r\n            address(uint160(owner)).transfer(msg.value);\r\n        }\r\n    }\r\n    function recoverTokens(address token, uint tokens) public onlyOwner {\r\n        if (token == address(0)) {\r\n            address(uint160(owner)).transfer((tokens == 0 ? address(this).balance : tokens));\r\n        } else {\r\n            ERC20Interface(token).transfer(owner, tokens == 0 ? ERC20Interface(token).balanceOf(address(this)) : tokens);\r\n        }\r\n    }\r\n    function () external payable {\r\n        revert();\r\n    }\r\n    function _deployTokenContract(address owner, string memory symbol, string memory name, uint8 decimals, uint totalSupply) internal returns (address token) {\r\n        token = address(new FixedSupplyToken(owner, symbol, name, decimals, totalSupply));\r\n        isChild[token] = true;\r\n        children.push(token);\r\n        emit TokenDeployed(owner, token, symbol, name, decimals, totalSupply);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"fixedSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"FixedSupplyToken","CompilerVersion":"v0.5.4+commit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000a7e4fc44ec54e9b94b274d93f9a24918b958656f00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000d3c21bcecceda100000000000000000000000000000000000000000000000000000000000000000000044649535400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d466978656420537570706c7920546f6b656e20f09f918a2076312e3030000000","Library":"","SwarmSource":"bzzr://2814fdb28291c0acff1f0b1f857d48020f35646ebb10715e9e3c4227f97358fe"}]}