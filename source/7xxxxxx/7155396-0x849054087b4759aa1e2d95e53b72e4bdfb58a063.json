{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title URIDistribution\r\n * @dev Library responsible for maintaining a weighted distribution of URIs\r\n */\r\nlibrary URIDistribution {\r\n\r\n    struct Data {\r\n        uint16[] cumulativeWeights;\r\n        mapping(uint16 => string) uris;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a URI to the distribution, with a given weight\r\n     *\r\n     * @param self Data storage Distribution data reference\r\n     * @param weight uint16 Relative distribution weight\r\n     * @param uri string URI to be stored\r\n     */\r\n    function addURI(Data storage self, uint16 weight, string uri) external {\r\n        if (weight == 0) return;\r\n\r\n        if (self.cumulativeWeights.length == 0) {\r\n            self.cumulativeWeights.push(weight);\r\n        } else {\r\n            self.cumulativeWeights.push(self.cumulativeWeights[uint16(self.cumulativeWeights.length - 1)] + weight);\r\n        }\r\n        self.uris[uint16(self.cumulativeWeights.length - 1)] = uri;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets an URI from the distribution, with the given random seed\r\n     *\r\n     * @param self Data storage Distribution data reference\r\n     * @param seed uint64\r\n     * @return string\r\n     */\r\n    function getURI(Data storage self, uint64 seed) external view returns (string) {\r\n        uint16 n = uint16(self.cumulativeWeights.length);\r\n        uint16 modSeed = uint16(seed % uint64(self.cumulativeWeights[n - 1]));\r\n\r\n        uint16 left = 0;\r\n        uint16 right = n;\r\n        uint16 mid;\r\n\r\n        while (left < right) {\r\n            mid = uint16((uint24(left) + uint24(right)) / 2);\r\n            if (self.cumulativeWeights[mid] <= modSeed) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid;\r\n            }\r\n        }\r\n        return self.uris[left];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"URIDistribution.Data storage\"},{\"name\":\"seed\",\"type\":\"uint64\"}],\"name\":\"getURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"URIDistribution.Data storage\"},{\"name\":\"weight\",\"type\":\"uint16\"},{\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"addURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"URIDistribution","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://00199a84e3ad8e73b792463df833424175021ef8b6f4986b4646ec25ade05808"}]}