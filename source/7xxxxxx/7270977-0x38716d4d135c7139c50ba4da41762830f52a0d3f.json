{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'V-KITA' token contract\r\n// Symbol      : KITA\r\n// Name        : V-KITA\r\n// Decimals    : 8\r\n//\r\n// 2019 | By V-KITA IDTeam\r\n// ----------------------------------------------------------------------------\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return a / b;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract VKITAToken {\r\n    using SafeMath for uint256;\r\n    address owner = msg.sender;\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;\r\n\r\n    // Balances for each account\r\n    mapping (address => uint256) public balanceOf;\r\n    // Owner of account approves the transfer of an amount to another account\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    // This generates a public event on the blockchain that will notify clients\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    constructor() public {\r\n        symbol = \"KITA\";\r\n        name = \"V-KITA\";\r\n        decimals = 8;\r\n        _totalSupply = 45000000 * 9**uint(decimals);\r\n        balanceOf[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply.sub(balanceOf[address(0)]);\r\n    }\r\n    function balanceOf(address _owner) constant public returns (uint256) {\r\n        return balanceOf[_owner];\r\n    }\r\n\r\n    // Transfer the balance from owner's account to another account\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(_to != address(this));\r\n        require(_value <= balanceOf[msg.sender]);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub (_value);\r\n        balanceOf[_to] = balanceOf[_to].add (_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    // A contract attempts to get the coins   \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_to != address(this));\r\n        require(_value <= balanceOf[_from]);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] = balanceOf[_from].sub (_value);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub (_value);\r\n        balanceOf[_to] = balanceOf[_to].add (_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n     // Allow another contract to spend some tokens in your behalf\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    require((_value == 0) || (allowance[msg.sender][_spender] == 0));\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) constant public returns (uint256) {\r\n        return allowance[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"VKITAToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a06fbd9ad896c6e311fb7e935b3bbc39f4c5a133655a8e6faf8eee0279ead222"}]}