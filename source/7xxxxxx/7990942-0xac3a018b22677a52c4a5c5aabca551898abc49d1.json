{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public view returns (uint);\r\n\tfunction balanceOf(address tokenOwner) public view returns (uint balance);\r\n\tfunction allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n\tfunction transfer(address to, uint tokens) public returns (bool success);\r\n\tfunction approve(address spender, uint tokens) public returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract HomesCoin is ERC20Interface {\r\n\r\n\tstring public symbol;\r\n\tstring public  name;\r\n\tuint8 public decimals;\r\n\tuint _totalSupply;\r\n\t\r\n\tuint public base_price;\t\t\t// base price in 1/10000 ether\r\n\tuint public min_fee;\t\t\t// min fee for trades\r\n\tuint public fee_div;\t\t\t// divisor for the fee\r\n\tuint public min_balance;\t\t// minimum balance for the fee acceptor account\r\n\t\r\n\taddress payable public oracle_adr;\t// address to send fees to\r\n\t\r\n\taddress payable public owner;\r\n\r\n\tmapping(address => uint) public balances;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\t// ------------------------------------------------------------------------\r\n\t// Constructor\r\n\t// ------------------------------------------------------------------------\r\n\tconstructor() public {\r\n\t\tsymbol = \"HOM\";\r\n\t\tname = \"HOM Coin\";\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 10000000 * 10**uint(decimals);\r\n\t\towner = msg.sender;\r\n\t\tbalances[address(this)] = _totalSupply;\r\n\t\temit Transfer(address(0), owner, _totalSupply);\r\n\t\tbase_price=100000;\r\n\t\toracle_adr = address(uint160(owner));\r\n\t\tmin_balance = .02 ether;\r\n\t\tfee_div = 100;\r\n\t\tmin_fee = .000001 ether;\r\n\t}\r\n\r\n\tfunction totalSupply() public view returns (uint) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\t\r\n\tfunction getCirculatingSupply() public view returns (uint) {\r\n\t    return _totalSupply - balances[address(this)];\r\n\t}\r\n\t\r\n\tuint public lastTradedPrice = 0;\r\n\r\n\tfunction balanceOf(address tokenOwner) public view returns (uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\r\n\tfunction transfer(address to, uint tokens) public returns (bool success) {\r\n\t\trequire(to!=address(0));\r\n\t\trequire(tokens<=balances[msg.sender]);\r\n\t\tbalances[msg.sender] = balances[msg.sender] - tokens;\r\n\t\tbalances[to] = balances[to] + tokens;\r\n\t\temit Transfer(msg.sender, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address spender, uint tokens) public returns (bool success) {\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n\t\trequire(to!=address(0));\r\n\t\trequire(balances[from]>=tokens);\r\n\t\trequire(allowed[from][msg.sender]>=tokens);\r\n\t\tbalances[from] = balances[from] - tokens;\r\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender] - tokens;\r\n\t\tbalances[to] = balances[to] + tokens;\r\n\t\temit Transfer(from, to, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\t\r\n\tfunction mint(uint amt) public{\r\n\t\trequire(msg.sender==owner);\r\n\t\tbalances[address(this)] += amt;\r\n\t\temit Transfer(address(0), address(this), amt);\r\n\t}\r\n\tfunction burn(uint amt) public{\r\n\t\trequire(msg.sender==owner);\r\n\t\trequire(balances[owner]>=amt);\r\n\t\tbalances[owner]-=amt;\r\n\t\temit Transfer(owner, address(0), amt);\r\n\t}\r\n\t\r\n\tfunction destroy(address payable receiver) public {\r\n\t\trequire(msg.sender==owner);\r\n\t\tselfdestruct(receiver);\r\n\t}\r\n\t\r\n\tevent HomeSaleEvent(uint64 houseid, uint8 day, uint8 month, uint16 year, uint64 price100, string source);\r\n\t\r\n\tmapping(uint64=>string) public addresses;\r\n\tmapping(uint64=>uint32) public sqfts;\r\n\tmapping(uint64=>uint8) public bedrooms;\r\n\tmapping(uint64=>uint8) public bathrooms;\r\n\tmapping(uint64=>uint8) public house_type;\r\n\tmapping(uint64=>uint16) public year_built;\r\n\tmapping(uint64=>uint32) public lot_size;\r\n\tmapping(uint64=>uint64) public parcel_num;\r\n\tmapping(uint64=>uint32) public zipcode;\r\n\t\r\n\tuint64 public num_houses = 0;\r\n\t\r\n\tfunction makeEvent(uint64 houseid, uint8 day, uint8 month, uint16 year, uint64 price100, string memory source) public{\r\n\t\trequire(msg.sender==owner);\r\n\t\temit HomeSaleEvent(houseid,day,month,year, price100, source);\r\n\t}\r\n\t\r\n\tfunction addHouse(string memory adr, uint32 sqft, uint8 bedroom,uint8 bathroom,uint8 h_type, uint16 yr_built, uint32 lotsize, uint64 parcel, uint32 zip) public{\r\n\t\trequire(msg.sender==owner);\r\n\t\trequire(bytes(adr).length<128);\r\n\t\taddresses[num_houses] = adr;\r\n\t\tsqfts[num_houses]=sqft;\r\n\t\tbedrooms[num_houses]=bedroom;\r\n\t\tbathrooms[num_houses]=bathroom;\r\n\t\thouse_type[num_houses]=h_type;\r\n\t\tyear_built[num_houses]=yr_built;\r\n\t\tlot_size[num_houses] = lotsize;\r\n\t\tparcel_num[num_houses] = parcel;\r\n\t\tzipcode[num_houses] = zip;\r\n\t\tnum_houses++;\r\n\t}\r\n\tfunction resetHouseParams(uint64 num_house, uint32 sqft, uint8 bedroom,uint8 bathroom,uint8 h_type, uint16 yr_built, uint32 lotsize, uint64 parcel, uint32 zip) public{\r\n\t\trequire(msg.sender==owner);\r\n\t\tsqfts[num_house]=sqft;\r\n\t\tbedrooms[num_house]=bedroom;\r\n\t\tbathrooms[num_house]=bathroom;\r\n\t\thouse_type[num_house]=h_type;\r\n\t\tyear_built[num_house]=yr_built;\r\n\t\tlot_size[num_house] = lotsize;\r\n\t\tparcel_num[num_house] = parcel;\r\n\t\tzipcode[num_house] = zip;\r\n\t}\r\n\t\r\n\tevent DonationEvent(address sender, uint value);\r\n\t\r\n\tfunction ()external payable{\r\n\t\temit DonationEvent(msg.sender,msg.value);\r\n\t}\r\n\t\r\n\tfunction getFee() public view returns (uint fee){\r\n\t\tuint a = oracle_adr.balance;\r\n\t\tif(a>min_balance)return min_fee;\r\n\t\treturn (min_balance-a)/fee_div;\r\n\t}\r\n\t\r\n\tfunction getSellReturn(uint amount) public view returns (uint value){\t// ether for selling amount tokens\r\n\t\tuint a = getFee();\r\n\t\tif(a>(amount*base_price/10000))return 0; // if the fee outweighs the return\r\n\t\treturn (amount*base_price/10000) - a;\r\n\t}\r\n\tfunction getBuyCost(uint amount) public view returns (uint cost){\t\t// ether cost for buying amount tokens\r\n\t    return (amount*base_price/10000) + getFee();\r\n\t}\r\n\t\r\n\tevent SellEvent(uint tokens);\r\n\tevent BuyEvent(uint tokens);\r\n\t\r\n\tfunction buy(uint tokens)public payable{\r\n\t    uint cost = getBuyCost(tokens);\r\n\t\trequire(msg.value>=cost);\r\n\t\trequire(balances[address(this)]>=tokens);\r\n\t\t\r\n\t\tbalances[address(this)]-=tokens;\r\n\t\tbalances[msg.sender]+=tokens;\r\n\t\tmsg.sender.transfer(msg.value-cost);\r\n\t\t\r\n\t\tif(oracle_adr.balance<min_balance)\r\n\t\t    oracle_adr.transfer(getFee());\r\n\t\telse\r\n\t\t    owner.transfer(getFee()/2);\r\n\t\t    \r\n\t\tlastTradedPrice = base_price;\r\n\t\t    \r\n\t\temit Transfer(address(this), msg.sender, tokens);\r\n\t\temit BuyEvent(tokens);\r\n\t}\r\n\t\r\n\tfunction sell(uint tokens)public{\r\n\t    uint result = getSellReturn(tokens);\r\n\t    require(balances[msg.sender]>=tokens);\r\n\t\trequire(address(this).balance>result);\r\n\t\t\r\n\t\tbalances[address(this)]+=tokens;\r\n\t\tbalances[msg.sender]-=tokens;\r\n\t\tmsg.sender.transfer(result);\r\n\t\tif(oracle_adr.balance<min_balance)\r\n\t\t    oracle_adr.transfer(getFee());\r\n\t\telse\r\n\t\t    owner.transfer(getFee()/2);\r\n\t\t    \r\n\t\tlastTradedPrice = base_price;\r\n\t\t    \r\n\t\temit Transfer(msg.sender, address(this), tokens);\r\n\t\temit SellEvent(tokens);\r\n\t}\r\n\t\r\n\tfunction forsale(uint tokens)public{\r\n\t\trequire(msg.sender==owner);\r\n\t\tallowed[owner][address(0)] = tokens;\r\n\t\temit Approval(owner, address(0), tokens);\r\n\t}\r\n\t\r\n\tfunction get_tradable() public view returns (uint tradable){\r\n\t\treturn balances[address(this)];\r\n\t}\r\n\t\r\n\tfunction setPrice(uint newPrice) public{\r\n\t\trequire(msg.sender==oracle_adr);\r\n\t\tbase_price = newPrice;\r\n\t}\r\n\t\r\n\tfunction setFeeParams(uint new_min_fee, uint new_fee_div, uint new_min_bal) public{\r\n\t    require(msg.sender==owner);\r\n\t    min_fee = new_min_fee;\r\n\t    min_balance = new_min_bal;\r\n\t    fee_div = new_fee_div;\r\n\t}\r\n\t\r\n\tfunction setOracleAddress(address payable adr) public {\r\n\t    oracle_adr = adr;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyCost\",\"outputs\":[{\"name\":\"cost\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_tradable\",\"outputs\":[{\"name\":\"tradable\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle_adr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"houseid\",\"type\":\"uint64\"},{\"name\":\"day\",\"type\":\"uint8\"},{\"name\":\"month\",\"type\":\"uint8\"},{\"name\":\"year\",\"type\":\"uint16\"},{\"name\":\"price100\",\"type\":\"uint64\"},{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"makeEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTradedPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee_div\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"bathrooms\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adr\",\"type\":\"string\"},{\"name\":\"sqft\",\"type\":\"uint32\"},{\"name\":\"bedroom\",\"type\":\"uint8\"},{\"name\":\"bathroom\",\"type\":\"uint8\"},{\"name\":\"h_type\",\"type\":\"uint8\"},{\"name\":\"yr_built\",\"type\":\"uint16\"},{\"name\":\"lotsize\",\"type\":\"uint32\"},{\"name\":\"parcel\",\"type\":\"uint64\"},{\"name\":\"zip\",\"type\":\"uint32\"}],\"name\":\"addHouse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"lot_size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"bedrooms\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"year_built\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"num_houses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_min_fee\",\"type\":\"uint256\"},{\"name\":\"new_fee_div\",\"type\":\"uint256\"},{\"name\":\"new_min_bal\",\"type\":\"uint256\"}],\"name\":\"setFeeParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"parcel_num\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"forsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellReturn\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"zipcode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"sqfts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num_house\",\"type\":\"uint64\"},{\"name\":\"sqft\",\"type\":\"uint32\"},{\"name\":\"bedroom\",\"type\":\"uint8\"},{\"name\":\"bathroom\",\"type\":\"uint8\"},{\"name\":\"h_type\",\"type\":\"uint8\"},{\"name\":\"yr_built\",\"type\":\"uint16\"},{\"name\":\"lotsize\",\"type\":\"uint32\"},{\"name\":\"parcel\",\"type\":\"uint64\"},{\"name\":\"zip\",\"type\":\"uint32\"}],\"name\":\"resetHouseParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"house_type\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"name\":\"fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"base_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"houseid\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"day\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"month\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"year\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"price100\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"source\",\"type\":\"string\"}],\"name\":\"HomeSaleEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DonationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"SellEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"BuyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"HomesCoin","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0207468ecf6914c67191b12aa329aa4dd1df058f50a933a7b8491fa71db0e1a0"}]}