{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract CoinFlip {\r\n    address owner;\r\n    uint payPercentage = 90;\r\n\t\r\n\t// Maximum amount to bet in WEIs\r\n\tuint public MaxAmountToBet = 200000000000000000; // = 0.2 Ether\r\n\t\r\n\r\n\t\r\n\tstruct Game {\r\n\t\taddress addr;\r\n\t\tuint blocknumber;\r\n\t\tuint blocktimestamp;\r\n        uint bet;\r\n\t\tuint prize;\r\n        bool winner;\r\n    }\r\n\t\r\n\tGame[] lastPlayedGames;\r\n\t\r\n\tGame newGame;\r\n    \r\n    event Status(\r\n\t\tstring _msg, \r\n\t\taddress user, \r\n\t\tuint amount,\r\n\t\tbool winner\r\n\t);\r\n    \r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        if (owner != msg.sender) {\r\n            revert();\r\n        } else {\r\n            _;\r\n        }\r\n    }\r\n    \r\n    function Play() public payable {\r\n\t\t\r\n\t\tif (msg.value > MaxAmountToBet) {\r\n\t\t\trevert();\r\n\t\t} else {\r\n\t\t\tif ((block.timestamp % 2) == 0) {\r\n\t\t\t\t\r\n\t\t\t\tif (address(this).balance < (msg.value * ((100 + payPercentage) / 100))) {\r\n\t\t\t\t\t// No tenemos suficientes fondos para pagar el premio, asÃ­ que transferimos todo lo que tenemos\r\n\t\t\t\t\tmsg.sender.transfer(address(this).balance);\r\n\t\t\t\t\temit Status('Congratulations, you win! Sorry, we didn\\'t have enought money, we will deposit everything we have!', msg.sender, msg.value, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\tnewGame = Game({\r\n\t\t\t\t\t\taddr: msg.sender,\r\n\t\t\t\t\t\tblocknumber: block.number,\r\n\t\t\t\t\t\tblocktimestamp: block.timestamp,\r\n\t\t\t\t\t\tbet: msg.value,\r\n\t\t\t\t\t\tprize: address(this).balance,\r\n\t\t\t\t\t\twinner: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlastPlayedGames.push(newGame);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuint _prize = msg.value * (100 + payPercentage) / 100;\r\n\t\t\t\t\temit Status('Congratulations, you win!', msg.sender, _prize, true);\r\n\t\t\t\t\tmsg.sender.transfer(_prize);\r\n\t\t\t\t\t\r\n\t\t\t\t\tnewGame = Game({\r\n\t\t\t\t\t\taddr: msg.sender,\r\n\t\t\t\t\t\tblocknumber: block.number,\r\n\t\t\t\t\t\tblocktimestamp: block.timestamp,\r\n\t\t\t\t\t\tbet: msg.value,\r\n\t\t\t\t\t\tprize: _prize,\r\n\t\t\t\t\t\twinner: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlastPlayedGames.push(newGame);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\temit Status('Sorry, you loose!', msg.sender, msg.value, false);\r\n\t\t\t\t\r\n\t\t\t\tnewGame = Game({\r\n\t\t\t\t\taddr: msg.sender,\r\n\t\t\t\t\tblocknumber: block.number,\r\n\t\t\t\t\tblocktimestamp: block.timestamp,\r\n\t\t\t\t\tbet: msg.value,\r\n\t\t\t\t\tprize: 0,\r\n\t\t\t\t\twinner: false\r\n\t\t\t\t});\r\n\t\t\t\tlastPlayedGames.push(newGame);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\t\r\n\tfunction getGameCount() public constant returns(uint) {\r\n\t\treturn lastPlayedGames.length;\r\n\t}\r\n\r\n\tfunction getGameEntry(uint index) public constant returns(address addr, uint blocknumber, uint blocktimestamp, uint bet, uint prize, bool winner) {\r\n\t\treturn (lastPlayedGames[index].addr, lastPlayedGames[index].blocknumber, lastPlayedGames[index].blocktimestamp, lastPlayedGames[index].bet, lastPlayedGames[index].prize, lastPlayedGames[index].winner);\r\n\t}\r\n\t\r\n\t\r\n\tfunction depositFunds() payable public {}\r\n    \r\n\tfunction withdrawFunds(uint amount) onlyOwner public {\r\n\t    require(amount <= address(this).balance);\r\n        if (owner.send(amount)) {\r\n            emit Status('User withdraw some money!', msg.sender, amount, true);\r\n        }\r\n    }\r\n\t\r\n\tfunction setMaxAmountToBet(uint amount) onlyOwner public returns (uint) {\r\n\t\tMaxAmountToBet = amount;\r\n        return MaxAmountToBet;\r\n    }\r\n\t\r\n\tfunction getMaxAmountToBet() constant public returns (uint) {\r\n        return MaxAmountToBet;\r\n    }\r\n\t\r\n    \r\n    function Kill() onlyOwner public{\r\n        emit Status('Contract was killed, contract balance will be send to the owner!', msg.sender, address(this).balance, true);\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxAmountToBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGameEntry\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"blocknumber\",\"type\":\"uint256\"},{\"name\":\"blocktimestamp\",\"type\":\"uint256\"},{\"name\":\"bet\",\"type\":\"uint256\"},{\"name\":\"prize\",\"type\":\"uint256\"},{\"name\":\"winner\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxAmountToBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setMaxAmountToBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositFunds\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGameCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_msg\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"bool\"}],\"name\":\"Status\",\"type\":\"event\"}]","ContractName":"CoinFlip","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://653595b745e4721ca04302b7f29d5fd34b9ea0f5582d633b258a8ea7d96e9a09"}]}