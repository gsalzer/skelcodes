{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n   \r\n}\r\n\r\ncontract Escrow {\r\n  \r\n  event Deposit(uint tokens);\r\n  address dai_0x_address = 0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359; // ContractA Address\r\n  mapping ( address => uint256 ) public balances;\r\n\r\n  function deposit(uint tokens) public returns (bool success){\r\n    // add the deposited tokens into existing balance \r\n    balances[msg.sender]+= tokens;\r\n    // transfer the tokens from the sender to this contract\r\n    ERC20(dai_0x_address).transferFrom(msg.sender, address(this), tokens);\r\n    emit Deposit(tokens);\r\n    return true;\r\n  }\r\n\r\n  function returnTokens() public {\r\n    balances[msg.sender] = 0;\r\n    ERC20(dai_0x_address).transfer(msg.sender, balances[msg.sender]);\r\n  }\r\n\r\n  function withdraw(uint256 tokens) public {\r\n        require(balances[msg.sender] >= tokens);\r\n        ERC20(dai_0x_address).transfer(msg.sender, tokens);\r\n  }\r\n  \r\n  function reallocate(address to, uint256 tokens) internal {\r\n        require(balances[msg.sender] >= tokens, \"Insufficient balance.\");\r\n        balances[msg.sender] -= tokens;\r\n        balances[to] += tokens;\r\n   }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}]","ContractName":"Escrow","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5da9675ed93f18d9e55dfcedb8c7174034e879a54412ec8641e1b86dd39dabb0"}]}