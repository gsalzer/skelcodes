{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public view returns (uint supply);\r\n    function balanceOf( address who ) public view returns (uint value);\r\n    function allowance( address owner, address spender ) public view returns (uint _allowance);\r\n    function transfer( address to, uint value) public returns (bool ok);\r\n    function transferFrom( address from, address to, uint value) public returns (bool ok);\r\n    function approve( address spender, uint value ) public returns (bool ok);\r\n}\r\n\r\ncontract WETH {\r\n    function deposit() public payable;\r\n    function withdraw(uint wad) public;\r\n\r\n    function approve(address guy, uint wad) public returns (bool); \r\n    function transfer(address dst, uint wad) public returns (bool);\r\n    function transferFrom(address src, address dst, uint wad) public returns (bool);\r\n} \r\n\r\ncontract UNISWAP {\r\n    function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline) public payable returns (uint256);\r\n    function tokenToEthSwapInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline) public returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor ()\r\n        public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(\r\n            msg.sender == owner,\r\n            \"ONLY_CONTRACT_OWNER\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner)\r\n        public\r\n        onlyOwner\r\n    {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract UniswapWrapper is Ownable{\r\n\r\n    address public uniswapExchangeAddress;\r\n    address public tradeTokenAddress;\r\n    address public wethAddress;\r\n\r\n    constructor(address exchangeAddress, address tokenAddress, address wethAddress)\r\n      public\r\n    {\r\n        uniswapExchangeAddress = exchangeAddress;\r\n        tradeTokenAddress = tokenAddress;\r\n        wethAddress = wethAddress;\r\n    }\r\n\r\n    function approve(address token, address proxy)\r\n      public\r\n      onlyOwner\r\n    {\r\n        uint256 MAX_UINT = 2 ** 256 - 1;\r\n        require(ERC20(token).approve(proxy, MAX_UINT), \"Approve failed\");\r\n    }\r\n\r\n    function withdrawETH(uint256 amount)\r\n        public\r\n        onlyOwner\r\n    {\r\n        owner.transfer(amount);\r\n    }\r\n\r\n    function withdrawToken(address token, uint256 amount)\r\n        public\r\n        onlyOwner\r\n    {\r\n      require(ERC20(token).transfer(owner, amount), \"Withdraw token failed\");\r\n    }\r\n\r\n    function buyToken(uint256 minTokenAmount, uint256 ethPay, uint256 deadline)\r\n      public\r\n      onlyOwner\r\n    {\r\n      require(WETH(wethAddress).transferFrom(msg.sender, this, ethPay), \"Transfer weth failed\");\r\n      WETH(wethAddress).withdraw(ethPay);\r\n      uint256 tokenBought = UNISWAP(uniswapExchangeAddress).ethToTokenSwapInput.value(ethPay)(minTokenAmount, deadline);\r\n      ERC20(tradeTokenAddress).transfer(owner, tokenBought);\r\n    }\r\n\r\n    function sellToken(uint256 minEthAmount, uint256 tokenAmount, uint256 deadline)\r\n      public\r\n      onlyOwner\r\n    {\r\n      require(ERC20(tradeTokenAddress).transferFrom(msg.sender, this, tokenAmount), \"Transfer token failed\");\r\n      uint256 ethBought = UNISWAP(uniswapExchangeAddress).tokenToEthSwapInput(tokenAmount, minEthAmount, deadline);\r\n      WETH(wethAddress).deposit.value(ethBought)();\r\n      WETH(wethAddress).transfer(msg.sender, ethBought);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"minEthAmount\",\"type\":\"uint256\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"sellToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wethAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapExchangeAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minTokenAmount\",\"type\":\"uint256\"},{\"name\":\"ethPay\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"exchangeAddress\",\"type\":\"address\"},{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"wethAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"UniswapWrapper","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"1000000","ConstructorArguments":"00000000000000000000000009cabec1ead1c0ba254b09efb3ee13841712be1400000000000000000000000089d24a6b4ccb1b6faa2625fe562bdd9a23260359000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","Library":"","SwarmSource":"bzzr://fa117125868294dfb30112df2dc2fd3deb23d22be192ae33f5516c485e5554c2"}]}