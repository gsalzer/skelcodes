{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract TranslationFactory {\r\n\r\n    uint    contractBalance;\r\n    address owner   = msg.sender;\r\n    struct Translator {\r\n        string  name;\r\n        uint    numWork;\r\n        uint    likeCount;\r\n        uint    hateCount;\r\n        bool    isExist;\r\n        bool    isAvailable;\r\n    }\r\n\r\n    mapping ( address => Translator ) translators;\r\n    address[] knownTranslators; //this is registed translators(for UI)\r\n    address[] translations;     //this is matched translation contracts\r\n\r\n    function createTranslator (string _name) public payable {\r\n        //translator should pay 1 ether register translator\r\n        require(msg.value == 1 ether);\r\n        Translator memory newTranslator;\r\n        newTranslator.name = _name;\r\n        newTranslator.numWork = 0;\r\n        newTranslator.isExist = true;\r\n        newTranslator.isAvailable =true;\r\n        translators[msg.sender] = newTranslator;\r\n        knownTranslators.push(msg.sender);\r\n        contractBalance += msg.value;\r\n    }\r\n\r\n    //To get translators List\r\n    function getTranslatorList() public view returns(address[]) {\r\n        return knownTranslators;\r\n    }\r\n\r\n    //To get translator's Information\r\n    function getInfoTranslator(address _addressTranslator) public view returns(string, uint, uint, uint, bool, bool) {\r\n        return(translators[_addressTranslator].name, translators[_addressTranslator].numWork, translators[_addressTranslator].likeCount, translators[_addressTranslator].hateCount, translators[_addressTranslator].isExist, translators[_addressTranslator].isAvailable);\r\n    }\r\n\r\n    function createTranslateContract(address _addressTranslator, uint _price) public payable returns(address) {\r\n        require(msg.value ==  (_price * 1000000000000000000) +  1 ether);\r\n        require(translators[_addressTranslator].isExist == true);\r\n        //if someone request to Translator, translator's state become 'Not Available'\r\n        translators[_addressTranslator].isAvailable = false;\r\n        Translation translation = new Translation(_addressTranslator, msg.sender, _price);\r\n        translations.push(translation);\r\n        contractBalance += msg.value;\r\n        return translation;\r\n    }\r\n\r\n    function getTranlationList() public view returns(address[]) {\r\n        return translations;\r\n    }\r\n\r\n    function getIntoTranslationContract(address _translationContractAddress) public view returns(address, address, uint, bool, bool){\r\n        Translation child = Translation(_translationContractAddress);\r\n        return(child.getInfoTranslation());\r\n    }\r\n\r\n    function accept(address _translationContractAddress) public {\r\n        Translation child = Translation(_translationContractAddress);\r\n        child.acceptTranslation(msg.sender);\r\n    }\r\n\r\n    function finish(address _translationContractAddress, bool _likeYn) public {\r\n        Translation child = Translation(_translationContractAddress);\r\n        child.finishTranlation(msg.sender, _likeYn);\r\n    }\r\n\r\n    function finalTransfer(address _addressTranslator, uint _price) public payable {\r\n        contractBalance -= ( _price );\r\n        _addressTranslator.transfer(_price);\r\n    }\r\n\r\n    function updateReputaion(address _addressTranslator, bool _likeYn) public {\r\n        translators[_addressTranslator].numWork++;\r\n        translators[_addressTranslator].isAvailable = true;\r\n        if(_likeYn) {\r\n            translators[_addressTranslator].likeCount++;\r\n        }else{\r\n            translators[_addressTranslator].hateCount++;\r\n        }\r\n    }\r\n}\r\n\r\ncontract Translation {\r\n\r\n    address addressFactory = msg.sender; // CA (TranslationFactory contract address)\r\n\r\n    address addressTranslator;             //\r\n    address addressRequester;      // EOA\r\n    uint    price;\r\n    bool    isAccepted = false;   // [TODO-C] make enum for state\r\n    bool    isEnd = false;         // [TODO-C] make enum for state\r\n\r\n    // requester makes a Translation contract\r\n    constructor(address _addressTranslator, address _addressRequester, uint _price) payable public {\r\n        //require(addressFactory == msg.sender);\r\n        addressTranslator = _addressTranslator;\r\n        addressRequester = _addressRequester;\r\n        price = _price;\r\n    }\r\n\r\n    // someone(?) can see Work contract info\r\n    function getInfoTranslation() public view returns(address, address, uint, bool, bool) {\r\n        // [TODO-A] choose which data should be shown.\r\n        return (addressTranslator, addressRequester, price, isAccepted,isEnd);\r\n    }\r\n\r\n    // Only translator can accept Translation contract\r\n    function acceptTranslation(address _addressTranslator) public  {\r\n        require( addressTranslator == _addressTranslator);\r\n        require( !isAccepted );\r\n        isAccepted = true;\r\n    }\r\n\r\n    // Only Requester can finish own Translation contract\r\n    function finishTranlation(address _addressRequester, bool _likeYn) public {\r\n        require( _addressRequester == addressRequester );\r\n        require( isAccepted );\r\n        require( !isEnd );\r\n\r\n        //finish this contract\r\n        isEnd = true;\r\n\r\n        TranslationFactory factory = TranslationFactory(addressFactory);\r\n        // transfer to translator\r\n        factory.finalTransfer(addressTranslator, price);\r\n        factory.updateReputaion(addressTranslator, _likeYn);\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_addressTranslator\",\"type\":\"address\"}],\"name\":\"getInfoTranslator\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressTranslator\",\"type\":\"address\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"finalTransfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressTranslator\",\"type\":\"address\"},{\"name\":\"_likeYn\",\"type\":\"bool\"}],\"name\":\"updateReputaion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTranslatorList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createTranslator\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addressTranslator\",\"type\":\"address\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createTranslateContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTranlationList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_translationContractAddress\",\"type\":\"address\"}],\"name\":\"getIntoTranslationContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_translationContractAddress\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_translationContractAddress\",\"type\":\"address\"},{\"name\":\"_likeYn\",\"type\":\"bool\"}],\"name\":\"finish\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TranslationFactory","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b7d7d8803de81a8f9e3a13ea2224e862a34cafa85e4f183adb58bcf2cf22b796"}]}