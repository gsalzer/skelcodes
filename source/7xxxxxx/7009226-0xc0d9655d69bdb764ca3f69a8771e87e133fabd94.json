{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n// Name your new coin. Make sure the constructor has the same name.\r\ncontract Serum {\r\n\r\n    // This will be you, the minter. It is set in the constructor.\r\n    address public minter;\r\n\r\n    // This mapping stores everyone's balances.\r\n    mapping (address => uint) public balances;\r\n\r\n    // This event will track when someone sends some tokens.\r\n    event Sent(address from, address to, uint amount);\r\n    event Mint(uint amount);\r\n\r\n    // This is the constructor. It runs only once, when the contract is created.\r\n    function MyCoin() public {\r\n        minter = msg.sender;\r\n    }\r\n\r\n    // Function to create some new coins for someone.\r\n    // As the minter, only you will have access to this.\r\n    function mint(address receiver, uint amount) public {\r\n        if (msg.sender != minter) return;\r\n        balances[receiver] += amount;\r\n        Mint(amount);\r\n    }\r\n\r\n    // Function to send some coins. Anyone with coins can do this.\r\n    function send(address receiver, uint amount) public {\r\n        if (balances[msg.sender] < amount) return;\r\n        balances[msg.sender] -= amount;\r\n        balances[receiver] += amount;\r\n        Sent(msg.sender, receiver, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MyCoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"}]","ContractName":"Serum","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cd7cead0e494deba28991edd55dcd179493cde2a8bc7eaa1777d3bdf0b6117a7"}]}