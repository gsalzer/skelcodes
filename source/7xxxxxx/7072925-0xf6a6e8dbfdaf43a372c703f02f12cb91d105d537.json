{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017–2018, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n \r\npragma solidity 0.5.2;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Helps contracts guard against reentrancy attacks.\r\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\r\n * @dev If you mark a function `nonReentrant`, you should also\r\n * mark it `external`.\r\n */\r\ncontract ReentrancyGuard {\r\n\r\n  /// @dev Constant for unlocked guard state - non-zero to prevent extra gas costs.\r\n  /// See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056\r\n  uint256 private constant REENTRANCY_GUARD_FREE = 1;\r\n\r\n  /// @dev Constant for locked guard state\r\n  uint256 private constant REENTRANCY_GUARD_LOCKED = 2;\r\n\r\n  /**\r\n   * @dev We use a single lock for the whole contract.\r\n   */\r\n  uint256 private reentrancyLock = REENTRANCY_GUARD_FREE;\r\n\r\n  /**\r\n   * @dev Prevents a contract from calling itself, directly or indirectly.\r\n   * If you mark a function `nonReentrant`, you should also\r\n   * mark it `external`. Calling one `nonReentrant` function from\r\n   * another is not supported. Instead, you can implement a\r\n   * `private` function doing the actual work, and an `external`\r\n   * wrapper marked as `nonReentrant`.\r\n   */\r\n  modifier nonReentrant() {\r\n    require(reentrancyLock == REENTRANCY_GUARD_FREE);\r\n    reentrancyLock = REENTRANCY_GUARD_LOCKED;\r\n    _;\r\n    reentrancyLock = REENTRANCY_GUARD_FREE;\r\n  }\r\n\r\n}\r\n\r\ncontract GasTracker {\r\n\r\n    uint256 internal gasUsed;\r\n\r\n    modifier tracksGas() {\r\n        // tx call 21k gas\r\n        gasUsed = gasleft() + 21000;\r\n\r\n        _; // modified function body inserted here\r\n\r\n        gasUsed = 0; // zero out the storage so we don't persist anything\r\n    }\r\n}\r\n\r\ncontract BZxObjects {\r\n\r\n    struct ListIndex {\r\n        uint256 index;\r\n        bool isSet;\r\n    }\r\n\r\n    struct LoanOrder {\r\n        address loanTokenAddress;\r\n        address interestTokenAddress;\r\n        address collateralTokenAddress;\r\n        address oracleAddress;\r\n        uint256 loanTokenAmount;\r\n        uint256 interestAmount;\r\n        uint256 initialMarginAmount;\r\n        uint256 maintenanceMarginAmount;\r\n        uint256 maxDurationUnixTimestampSec;\r\n        bytes32 loanOrderHash;\r\n    }\r\n\r\n    struct LoanOrderAux {\r\n        address makerAddress;\r\n        address takerAddress;\r\n        address feeRecipientAddress;\r\n        address tradeTokenToFillAddress;\r\n        uint256 lenderRelayFee;\r\n        uint256 traderRelayFee;\r\n        uint256 makerRole;\r\n        uint256 expirationUnixTimestampSec;\r\n        bool withdrawOnOpen;\r\n        string description;\r\n    }\r\n\r\n    struct LoanPosition {\r\n        address trader;\r\n        address collateralTokenAddressFilled;\r\n        address positionTokenAddressFilled;\r\n        uint256 loanTokenAmountFilled;\r\n        uint256 loanTokenAmountUsed;\r\n        uint256 collateralTokenAmountFilled;\r\n        uint256 positionTokenAmountFilled;\r\n        uint256 loanStartUnixTimestampSec;\r\n        uint256 loanEndUnixTimestampSec;\r\n        bool active;\r\n        uint256 positionId;\r\n    }\r\n\r\n    struct PositionRef {\r\n        bytes32 loanOrderHash;\r\n        uint256 positionId;\r\n    }\r\n\r\n    struct LenderInterest {\r\n        uint256 interestOwedPerDay;\r\n        uint256 interestPaid;\r\n        uint256 interestPaidDate;\r\n    }\r\n\r\n    struct TraderInterest {\r\n        uint256 interestOwedPerDay;\r\n        uint256 interestPaid;\r\n        uint256 interestDepositTotal;\r\n        uint256 interestUpdatedDate;\r\n    }\r\n}\r\n\r\ncontract BZxEvents {\r\n\r\n    event LogLoanAdded (\r\n        bytes32 indexed loanOrderHash,\r\n        address adderAddress,\r\n        address indexed makerAddress,\r\n        address indexed feeRecipientAddress,\r\n        uint256 lenderRelayFee,\r\n        uint256 traderRelayFee,\r\n        uint256 maxDuration,\r\n        uint256 makerRole\r\n    );\r\n\r\n    event LogLoanTaken (\r\n        address indexed lender,\r\n        address indexed trader,\r\n        address loanTokenAddress,\r\n        address collateralTokenAddress,\r\n        uint256 loanTokenAmount,\r\n        uint256 collateralTokenAmount,\r\n        uint256 loanEndUnixTimestampSec,\r\n        bool firstFill,\r\n        bytes32 indexed loanOrderHash,\r\n        uint256 positionId\r\n    );\r\n\r\n    event LogLoanCancelled(\r\n        address indexed makerAddress,\r\n        uint256 cancelLoanTokenAmount,\r\n        uint256 remainingLoanTokenAmount,\r\n        bytes32 indexed loanOrderHash\r\n    );\r\n\r\n    event LogLoanClosed(\r\n        address indexed lender,\r\n        address indexed trader,\r\n        address loanCloser,\r\n        bool isLiquidation,\r\n        bytes32 indexed loanOrderHash,\r\n        uint256 positionId\r\n    );\r\n\r\n    event LogPositionTraded(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed trader,\r\n        address sourceTokenAddress,\r\n        address destTokenAddress,\r\n        uint256 sourceTokenAmount,\r\n        uint256 destTokenAmount,\r\n        uint256 positionId\r\n    );\r\n\r\n    event LogWithdrawPosition(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed trader,\r\n        uint256 positionAmount,\r\n        uint256 remainingPosition,\r\n        uint256 positionId\r\n    );\r\n\r\n    event LogPayInterestForOracle(\r\n        address indexed lender,\r\n        address indexed oracleAddress,\r\n        address indexed interestTokenAddress,\r\n        uint256 amountPaid,\r\n        uint256 totalAccrued\r\n    );\r\n\r\n    event LogPayInterestForOrder(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed lender,\r\n        address indexed interestTokenAddress,\r\n        uint256 amountPaid,\r\n        uint256 totalAccrued,\r\n        uint256 loanCount\r\n    );\r\n\r\n    event LogChangeTraderOwnership(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed oldOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    event LogChangeLenderOwnership(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed oldOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    event LogUpdateLoanAsLender(\r\n        bytes32 indexed loanOrderHash,\r\n        address indexed lender,\r\n        uint256 loanTokenAmountAdded,\r\n        uint256 loanTokenAmountFillable,\r\n        uint256 expirationUnixTimestampSec\r\n    );\r\n}\r\n\r\ncontract BZxStorage is BZxObjects, BZxEvents, ReentrancyGuard, Ownable, GasTracker {\r\n    uint256 internal constant MAX_UINT = 2**256 - 1;\r\n\r\n    address public bZRxTokenContract;\r\n    address public bZxEtherContract;\r\n    address public wethContract;\r\n    address payable public vaultContract;\r\n    address public oracleRegistryContract;\r\n    address public bZxTo0xContract;\r\n    address public bZxTo0xV2Contract;\r\n    bool public DEBUG_MODE = false;\r\n\r\n    // Loan Orders\r\n    mapping (bytes32 => LoanOrder) public orders; // mapping of loanOrderHash to on chain loanOrders\r\n    mapping (bytes32 => LoanOrderAux) public orderAux; // mapping of loanOrderHash to on chain loanOrder auxiliary parameters\r\n    mapping (bytes32 => uint256) public orderFilledAmounts; // mapping of loanOrderHash to loanTokenAmount filled\r\n    mapping (bytes32 => uint256) public orderCancelledAmounts; // mapping of loanOrderHash to loanTokenAmount cancelled\r\n    mapping (bytes32 => address) public orderLender; // mapping of loanOrderHash to lender (only one lender per order)\r\n\r\n    // Loan Positions\r\n    mapping (uint256 => LoanPosition) public loanPositions; // mapping of position ids to loanPositions\r\n    mapping (bytes32 => mapping (address => uint256)) public loanPositionsIds; // mapping of loanOrderHash to mapping of trader address to position id\r\n\r\n    // Lists\r\n    mapping (address => bytes32[]) public orderList; // mapping of lenders and trader addresses to array of loanOrderHashes\r\n    mapping (bytes32 => mapping (address => ListIndex)) public orderListIndex; // mapping of loanOrderHash to mapping of lenders and trader addresses to ListIndex objects\r\n\r\n    mapping (bytes32 => uint256[]) public orderPositionList; // mapping of loanOrderHash to array of order position ids\r\n\r\n    PositionRef[] public positionList; // array of loans that need to be checked for liquidation or expiration\r\n    mapping (uint256 => ListIndex) public positionListIndex; // mapping of position ids to ListIndex objects\r\n\r\n    // Interest\r\n    mapping (address => mapping (address => uint256)) public tokenInterestPaid; // mapping of lender address to mapping of interest token address to amount of interest that has ever been paid to a lender\r\n    mapping (address => mapping (address => mapping (address => LenderInterest))) public lenderOracleInterest; // mapping of lender address to mapping of oracle to mapping of interest token to LenderInterest objects\r\n    mapping (bytes32 => LenderInterest) public lenderOrderInterest; // mapping of loanOrderHash to LenderInterest objects\r\n    mapping (uint256 => TraderInterest) public traderLoanInterest; // mapping of position ids to TraderInterest objects\r\n\r\n    // Other Storage\r\n    mapping (address => address) public oracleAddresses; // mapping of oracles to their current logic contract\r\n    mapping (bytes32 => mapping (address => bool)) public preSigned; // mapping of hash => signer => signed\r\n    mapping (address => mapping (address => bool)) public allowedValidators; // mapping of signer => validator => approved\r\n    mapping (bytes => bytes) internal db; // general use storage container\r\n    mapping (bytes => bytes[]) internal dbArray; // general use storage array container\r\n}\r\n\r\ncontract BZxProxiable {\r\n    mapping (bytes4 => address) public targets;\r\n\r\n    mapping (bytes4 => bool) public targetIsPaused;\r\n\r\n    function initialize(address _target) public;\r\n}\r\n\r\ncontract BZxProxy is BZxStorage, BZxProxiable {\r\n    \r\n    constructor(\r\n        address _settings) \r\n        public\r\n    {\r\n        (bool result,) = _settings.delegatecall.gas(gasleft())(abi.encodeWithSignature(\"initialize(address)\", _settings));\r\n        require(result, \"BZxProxy::constructor: failed\");\r\n    }\r\n    \r\n    function() \r\n        external\r\n        payable \r\n    {\r\n        require(!targetIsPaused[msg.sig], \"BZxProxy::Function temporarily paused\");\r\n\r\n        address target = targets[msg.sig];\r\n        require(target != address(0), \"BZxProxy::Target not found\");\r\n\r\n        bytes memory data = msg.data;\r\n        assembly {\r\n            let result := delegatecall(gas, target, add(data, 0x20), mload(data), 0, 0)\r\n            let size := returndatasize\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, size)\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n\r\n    function initialize(\r\n        address)\r\n        public\r\n    {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderLender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"targets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"targetIsPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vaultContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenInterestPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"orderListIndex\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"isSet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wethContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionListIndex\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"isSet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lenderOrderInterest\",\"outputs\":[{\"name\":\"interestOwedPerDay\",\"type\":\"uint256\"},{\"name\":\"interestPaid\",\"type\":\"uint256\"},{\"name\":\"interestPaidDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenderOracleInterest\",\"outputs\":[{\"name\":\"interestOwedPerDay\",\"type\":\"uint256\"},{\"name\":\"interestPaid\",\"type\":\"uint256\"},{\"name\":\"interestPaidDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bZxEtherContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bZRxTokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionList\",\"outputs\":[{\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"name\":\"positionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedValidators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"preSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"loanPositionsIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEBUG_MODE\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"traderLoanInterest\",\"outputs\":[{\"name\":\"interestOwedPerDay\",\"type\":\"uint256\"},{\"name\":\"interestPaid\",\"type\":\"uint256\"},{\"name\":\"interestDepositTotal\",\"type\":\"uint256\"},{\"name\":\"interestUpdatedDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderPositionList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bZxTo0xV2Contract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"name\":\"loanTokenAddress\",\"type\":\"address\"},{\"name\":\"interestTokenAddress\",\"type\":\"address\"},{\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"name\":\"oracleAddress\",\"type\":\"address\"},{\"name\":\"loanTokenAmount\",\"type\":\"uint256\"},{\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"name\":\"initialMarginAmount\",\"type\":\"uint256\"},{\"name\":\"maintenanceMarginAmount\",\"type\":\"uint256\"},{\"name\":\"maxDurationUnixTimestampSec\",\"type\":\"uint256\"},{\"name\":\"loanOrderHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanPositions\",\"outputs\":[{\"name\":\"trader\",\"type\":\"address\"},{\"name\":\"collateralTokenAddressFilled\",\"type\":\"address\"},{\"name\":\"positionTokenAddressFilled\",\"type\":\"address\"},{\"name\":\"loanTokenAmountFilled\",\"type\":\"uint256\"},{\"name\":\"loanTokenAmountUsed\",\"type\":\"uint256\"},{\"name\":\"collateralTokenAmountFilled\",\"type\":\"uint256\"},{\"name\":\"positionTokenAmountFilled\",\"type\":\"uint256\"},{\"name\":\"loanStartUnixTimestampSec\",\"type\":\"uint256\"},{\"name\":\"loanEndUnixTimestampSec\",\"type\":\"uint256\"},{\"name\":\"active\",\"type\":\"bool\"},{\"name\":\"positionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderAux\",\"outputs\":[{\"name\":\"makerAddress\",\"type\":\"address\"},{\"name\":\"takerAddress\",\"type\":\"address\"},{\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"name\":\"tradeTokenToFillAddress\",\"type\":\"address\"},{\"name\":\"lenderRelayFee\",\"type\":\"uint256\"},{\"name\":\"traderRelayFee\",\"type\":\"uint256\"},{\"name\":\"makerRole\",\"type\":\"uint256\"},{\"name\":\"expirationUnixTimestampSec\",\"type\":\"uint256\"},{\"name\":\"withdrawOnOpen\",\"type\":\"bool\"},{\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bZxTo0xContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderFilledAmounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderCancelledAmounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracleRegistryContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_settings\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"adderAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"makerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lenderRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"traderRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"makerRole\",\"type\":\"uint256\"}],\"name\":\"LogLoanAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"loanTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"loanTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"collateralTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"loanEndUnixTimestampSec\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"firstFill\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LogLoanTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"makerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cancelLoanTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remainingLoanTokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"}],\"name\":\"LogLoanCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"loanCloser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isLiquidation\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LogLoanClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"destTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sourceTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LogPositionTraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"positionAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remainingPosition\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LogWithdrawPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oracleAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"interestTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalAccrued\",\"type\":\"uint256\"}],\"name\":\"LogPayInterestForOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"interestTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalAccrued\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"loanCount\",\"type\":\"uint256\"}],\"name\":\"LogPayInterestForOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LogChangeTraderOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LogChangeLenderOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"loanOrderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"loanTokenAmountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"loanTokenAmountFillable\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"expirationUnixTimestampSec\",\"type\":\"uint256\"}],\"name\":\"LogUpdateLoanAsLender\",\"type\":\"event\"}]","ContractName":"BZxProxy","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000120d0b8383938796d0623a05a1b85cb08da54cff","Library":"","SwarmSource":"bzzr://5b1ba7fba6b1a78dde514c725b2fa9f2aaaef5b9a6b3433187736ca47776ecd7"}]}