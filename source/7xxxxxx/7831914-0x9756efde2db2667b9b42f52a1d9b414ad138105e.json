{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n    \r\n    /**\r\n    * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n    * reverts when dividing by zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract dominance {\r\n    using SafeMath for uint;\r\n    \r\n    address public admin = 0xCf5BB540e63d87A104C071770eBfAEF40392aC95;\r\n    address public dev = 0x0b60946a9C39B7b1ab220562b0638244beD3f958;\r\n    uint public hardcap1 = 720 ether;\r\n    uint public hardcap2 = 2800 ether;\r\n    uint public currentcap = 0;\r\n    uint public currentround = 1;\r\n    bool open = true;\r\n    uint public hardcap = hardcap1;\r\n    \r\n    constructor() public{\r\n    }\r\n    \r\n    function deposit(address _referredBy) payable public {\r\n        require(open);\r\n        require(msg.value >= 0.33 ether);\r\n        uint value = msg.value;\r\n         \r\n        currentcap += msg.value;\r\n        if (currentcap >= hardcap && currentround == 1) {\r\n                currentcap = 0;\r\n                hardcap = hardcap2;\r\n                currentround = 2;\r\n        }\r\n        else if(currentcap >= hardcap && currentround == 2){\r\n            open = false;\r\n        }\r\n        \r\n        uint referbalance = value.div(4);\r\n        address payable _referral = address(uint160(_referredBy));\r\n        _referral.transfer(referbalance);\r\n        value -= referbalance;\r\n        \r\n        uint devbalance = msg.value.div(100);\r\n        address payable _dev = address(uint160(dev));\r\n        _dev.transfer(devbalance);\r\n        value -= devbalance;\r\n        \r\n        address payable _admin = address(uint160(admin));\r\n        _admin.transfer(value);\r\n       \r\n    }\r\n    \r\n    function () payable external {\r\n       require(false);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"currentcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentround\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referredBy\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"dominance","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://eb2c2a3ffdb027f9dd5b02457434dd574792555284c63bc0fc1f0a9d4f195bee"}]}